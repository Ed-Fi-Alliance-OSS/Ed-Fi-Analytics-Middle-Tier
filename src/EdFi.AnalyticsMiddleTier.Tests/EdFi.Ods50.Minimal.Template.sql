--
-- PostgreSQL database dump
--

-- Dumped from database version 13.12 (Debian 13.12-1.pgdg120+1)
-- Dumped by pg_dump version 14.9 (Ubuntu 14.9-1.pgdg22.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO postgres;

--
-- Name: changes; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA changes;


ALTER SCHEMA changes OWNER TO postgres;

--
-- Name: edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA edfi;


ALTER SCHEMA edfi OWNER TO postgres;

--
-- Name: interop; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA interop;


ALTER SCHEMA interop OWNER TO postgres;

--
-- Name: tpdm; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tpdm;


ALTER SCHEMA tpdm OWNER TO postgres;

--
-- Name: tracked_changes_edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tracked_changes_edfi;


ALTER SCHEMA tracked_changes_edfi OWNER TO postgres;

--
-- Name: tracked_changes_tpdm; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tracked_changes_tpdm;


ALTER SCHEMA tracked_changes_tpdm OWNER TO postgres;

--
-- Name: util; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA util;


ALTER SCHEMA util OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: getmaxchangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.getmaxchangeversion() RETURNS bigint
    LANGUAGE plpgsql
    AS $$
DECLARE
	result bigint;
BEGIN
    SELECT last_value FROM changes.ChangeVersionSequence INTO result;
    RETURN result;
END
$$;


ALTER FUNCTION changes.getmaxchangeversion() OWNER TO postgres;

--
-- Name: updatechangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.updatechangeversion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    new.ChangeVersion := nextval('changes.ChangeVersionSequence');
    RETURN new;
END;
$$;


ALTER FUNCTION changes.updatechangeversion() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityorganizationid
            AND targeteducationorganizationid = OLD.communityorganizationid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityorganizationid AS SourceEducationOrganizationId, 
            NEW.communityorganizationid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid 
                    AND OLD.communityorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.communityproviderid
            ) as targets
        WHERE sources.communityproviderid = targets.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityproviderid
            AND targeteducationorganizationid = OLD.communityproviderid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityproviderid AS SourceEducationOrganizationId, 
            NEW.communityproviderid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the communityorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.communityproviderid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid  
                AND NEW.communityorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.communityproviderid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.communityproviderid
        ) as targets
    WHERE sources.communityproviderid = targets.communityproviderid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid  
                    AND OLD.communityorganizationid IS NOT NULL 
                    AND (NEW.communityorganizationid IS NULL OR OLD.communityorganizationid <> NEW.communityorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the communityorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.communityproviderid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.communityproviderid = d2.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid
                AND ((OLD.communityorganizationid IS NULL AND NEW.communityorganizationid IS NOT NULL)
                OR OLD.communityorganizationid <> NEW.communityorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.communityproviderid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_update() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationorganizationnetworkid
            AND targeteducationorganizationid = OLD.educationorganizationnetworkid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationorganizationnetworkid AS SourceEducationOrganizationId, 
            NEW.educationorganizationnetworkid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.educationservicecenterid
            ) as targets
        WHERE sources.educationservicecenterid = targets.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationservicecenterid
            AND targeteducationorganizationid = OLD.educationservicecenterid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationservicecenterid AS SourceEducationOrganizationId, 
            NEW.educationservicecenterid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.educationservicecenterid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.educationservicecenterid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.educationservicecenterid
        ) as targets
    WHERE sources.educationservicecenterid = targets.educationservicecenterid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.educationservicecenterid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.educationservicecenterid = d2.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.educationservicecenterid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_update() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid 
                    AND OLD.parentlocaleducationagencyid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid 
                    AND OLD.educationservicecenterid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.localeducationagencyid
            ) as targets
        WHERE sources.localeducationagencyid = targets.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.localeducationagencyid
            AND targeteducationorganizationid = OLD.localeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.localeducationagencyid AS SourceEducationOrganizationId, 
            NEW.localeducationagencyid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parentlocaleducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid  
                AND NEW.parentlocaleducationagencyid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the educationservicecenterid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid  
                AND NEW.educationservicecenterid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.localeducationagencyid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.localeducationagencyid
        ) as targets
    WHERE sources.localeducationagencyid = targets.localeducationagencyid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid  
                    AND OLD.parentlocaleducationagencyid IS NOT NULL 
                    AND (NEW.parentlocaleducationagencyid IS NULL OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid  
                    AND OLD.educationservicecenterid IS NOT NULL 
                    AND (NEW.educationservicecenterid IS NULL OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parentlocaleducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the educationservicecenterid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.localeducationagencyid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.localeducationagencyid = d2.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid
                AND ((OLD.parentlocaleducationagencyid IS NULL AND NEW.parentlocaleducationagencyid IS NOT NULL)
                OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid
                AND ((OLD.educationservicecenterid IS NULL AND NEW.educationservicecenterid IS NOT NULL)
                OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.localeducationagencyid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_update() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid 
                    AND OLD.parenteducationorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.organizationdepartmentid
            ) as targets
        WHERE sources.organizationdepartmentid = targets.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.organizationdepartmentid
            AND targeteducationorganizationid = OLD.organizationdepartmentid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_delete() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.organizationdepartmentid AS SourceEducationOrganizationId, 
            NEW.organizationdepartmentid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parenteducationorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.organizationdepartmentid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid  
                AND NEW.parenteducationorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.organizationdepartmentid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.organizationdepartmentid
        ) as targets
    WHERE sources.organizationdepartmentid = targets.organizationdepartmentid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_insert() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid  
                    AND OLD.parenteducationorganizationid IS NOT NULL 
                    AND (NEW.parenteducationorganizationid IS NULL OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parenteducationorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.organizationdepartmentid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.organizationdepartmentid = d2.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid
                AND ((OLD.parenteducationorganizationid IS NULL AND NEW.parenteducationorganizationid IS NOT NULL)
                OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.organizationdepartmentid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_update() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.postsecondaryinstitutionid
            AND targeteducationorganizationid = OLD.postsecondaryinstitutionid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.postsecondaryinstitutionid AS SourceEducationOrganizationId, 
            NEW.postsecondaryinstitutionid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid 
                    AND OLD.localeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.schoolid
            ) as targets
        WHERE sources.schoolid = targets.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.schoolid
            AND targeteducationorganizationid = OLD.schoolid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_delete() OWNER TO postgres;

--
-- Name: edfi_school_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.schoolid AS SourceEducationOrganizationId, 
            NEW.schoolid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the localeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.schoolid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid  
                AND NEW.localeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.schoolid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.schoolid
        ) as targets
    WHERE sources.schoolid = targets.schoolid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid  
                    AND OLD.localeducationagencyid IS NOT NULL 
                    AND (NEW.localeducationagencyid IS NULL OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the localeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.schoolid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.schoolid = d2.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid
                AND ((OLD.localeducationagencyid IS NULL AND NEW.localeducationagencyid IS NOT NULL)
                OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.schoolid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_update() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.stateeducationagencyid
            AND targeteducationorganizationid = OLD.stateeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.stateeducationagencyid AS SourceEducationOrganizationId, 
            NEW.stateeducationagencyid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: setcurrentschoolyear(integer); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
    rowCount integer;
    newSchoolYear ALIAS FOR $1;
BEGIN
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'true'
    WHERE SchoolYear = newSchoolYear;
    
    GET DIAGNOSTICS rowCount = ROW_COUNT;
    
    IF rowCount = 0 THEN
        RAISE EXCEPTION 'Specified school year does not exist.' USING ERRCODE = '50000';
    END IF;
    
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'false'
    WHERE SchoolYear <> newSchoolYear;
END;
$_$;


ALTER FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) OWNER TO postgres;

--
-- Name: absenceeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AbsenceEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AbsenceEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AbsenceEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: academichonorcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AcademicHonorCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AcademicHonorCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AcademicHonorCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: academicsubjectdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AcademicSubjectDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AcademicSubjectDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AcademicSubjectDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted() OWNER TO postgres;

--
-- Name: academicweek_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academicweek_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.academicweek(
        oldschoolid, oldweekidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.schoolid, OLD.weekidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academicweek_deleted() OWNER TO postgres;

--
-- Name: accommodationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccommodationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AccommodationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccommodationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted() OWNER TO postgres;

--
-- Name: accountabilityrating_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accountabilityrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.accountabilityrating(
        oldeducationorganizationid, oldratingtitle, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.ratingtitle, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accountabilityrating_deleted() OWNER TO postgres;

--
-- Name: accounttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccountTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AccountTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccountTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: achievementcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AchievementCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AchievementCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AchievementCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: additionalcredittypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdditionalCreditTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdditionalCreditTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdditionalCreditTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted() OWNER TO postgres;

--
-- Name: addresstypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AddressTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AddressTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AddressTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted() OWNER TO postgres;

--
-- Name: administrationenvironmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdministrationEnvironmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdministrationEnvironmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdministrationEnvironmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: administrativefundingcontroldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdministrativeFundingControlDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdministrativeFundingControlDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdministrativeFundingControlDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted() OWNER TO postgres;

--
-- Name: ancestryethnicorigindescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AncestryEthnicOriginDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AncestryEthnicOriginDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AncestryEthnicOriginDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted() OWNER TO postgres;

--
-- Name: assessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessment(
        oldassessmentidentifier, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessment_deleted() OWNER TO postgres;

--
-- Name: assessmentcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentitem_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitem_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessmentitem(
        oldassessmentidentifier, oldidentificationcode, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.identificationcode, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitem_deleted() OWNER TO postgres;

--
-- Name: assessmentitemcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentItemCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentItemCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentItemCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentitemresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentItemResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentItemResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentItemResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentreportingmethoddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentReportingMethodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentReportingMethodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentReportingMethodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessmentscorerangelearningstandard(
        oldassessmentidentifier, oldnamespace, oldscorerangeid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, OLD.scorerangeid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted() OWNER TO postgres;

--
-- Name: assignmentlatestatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssignmentLateStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssignmentLateStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssignmentLateStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: attemptstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AttemptStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AttemptStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AttemptStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: attendanceeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AttendanceEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AttendanceEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AttendanceEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: balancesheetdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.balancesheetdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.balancesheetdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.balancesheetdimension_deleted() OWNER TO postgres;

--
-- Name: barriertointernetaccessinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.BarrierToInternetAccessInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.BarrierToInternetAccessInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.BarrierToInternetAccessInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: behaviordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.behaviordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.BehaviorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.BehaviorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.BehaviorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.behaviordescriptor_deleted() OWNER TO postgres;

--
-- Name: bellschedule_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.bellschedule_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.bellschedule(
        oldbellschedulename, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.bellschedulename, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.bellschedule_deleted() OWNER TO postgres;

--
-- Name: calendar_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendar_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.calendar(
        oldcalendarcode, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendar_deleted() OWNER TO postgres;

--
-- Name: calendardate_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendardate_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.calendardate(
        oldcalendarcode, olddate, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.date, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendardate_deleted() OWNER TO postgres;

--
-- Name: calendareventdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CalendarEventDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CalendarEventDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CalendarEventDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted() OWNER TO postgres;

--
-- Name: calendartypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CalendarTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CalendarTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CalendarTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted() OWNER TO postgres;

--
-- Name: careerpathwaydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CareerPathwayDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CareerPathwayDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CareerPathwayDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted() OWNER TO postgres;

--
-- Name: charterapprovalagencytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CharterApprovalAgencyTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CharterApprovalAgencyTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CharterApprovalAgencyTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: charterstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CharterStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CharterStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CharterStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: chartofaccount_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.chartofaccount_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.chartofaccount(
        oldaccountidentifier, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.chartofaccount_deleted() OWNER TO postgres;

--
-- Name: citizenshipstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CitizenshipStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CitizenshipStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CitizenshipStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: classperiod_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classperiod_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.classperiod(
        oldclassperiodname, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.classperiodname, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classperiod_deleted() OWNER TO postgres;

--
-- Name: classperiod_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classperiod_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.classperiod(
        oldclassperiodname, oldschoolid, 
        newclassperiodname, newschoolid, 
        id, changeversion)
    VALUES (
        old.classperiodname, old.schoolid, 
        new.classperiodname, new.schoolid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classperiod_keychg() OWNER TO postgres;

--
-- Name: classroompositiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ClassroomPositionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ClassroomPositionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ClassroomPositionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted() OWNER TO postgres;

--
-- Name: cohort_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohort_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.cohort(
        oldcohortidentifier, oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.cohortidentifier, OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohort_deleted() OWNER TO postgres;

--
-- Name: cohortscopedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortScopeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortScopeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortScopeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted() OWNER TO postgres;

--
-- Name: cohorttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: cohortyeartypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortYearTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortYearTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortYearTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted() OWNER TO postgres;

--
-- Name: communityproviderlicense_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.communityproviderlicense_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.communityproviderlicense(
        oldcommunityproviderid, oldlicenseidentifier, oldlicensingorganization,
        id, discriminator, changeversion)
    VALUES (
        OLD.communityproviderid, OLD.licenseidentifier, OLD.licensingorganization, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.communityproviderlicense_deleted() OWNER TO postgres;

--
-- Name: competencyleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CompetencyLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CompetencyLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CompetencyLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: competencyobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.competencyobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.objectivegradeleveldescriptorid;

    INSERT INTO tracked_changes_edfi.competencyobjective(
        oldeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.objective, OLD.objectivegradeleveldescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.competencyobjective_deleted() OWNER TO postgres;

--
-- Name: contact_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contact_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.contact(
        oldcontactusi, oldcontactuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.contactusi, OLD.contactuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contact_deleted() OWNER TO postgres;

--
-- Name: contact_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contact_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.contact(
        oldcontactusi, oldcontactuniqueid, 
        newcontactusi, newcontactuniqueid, 
        id, changeversion)
    VALUES (
        old.contactusi, old.contactuniqueid, 
        new.contactusi, new.contactuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contact_keychg() OWNER TO postgres;

--
-- Name: contacttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContactTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContactTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContactTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: contentclassdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContentClassDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContentClassDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContentClassDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted() OWNER TO postgres;

--
-- Name: continuationofservicesreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContinuationOfServicesReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContinuationOfServicesReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContinuationOfServicesReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: costratedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.costratedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CostRateDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CostRateDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CostRateDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.costratedescriptor_deleted() OWNER TO postgres;

--
-- Name: countrydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.countrydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CountryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CountryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CountryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.countrydescriptor_deleted() OWNER TO postgres;

--
-- Name: course_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.course_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.course(
        oldcoursecode, oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.coursecode, OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.course_deleted() OWNER TO postgres;

--
-- Name: courseattemptresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseAttemptResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseAttemptResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseAttemptResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: coursedefinedbydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseDefinedByDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseDefinedByDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseDefinedByDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted() OWNER TO postgres;

--
-- Name: coursegpaapplicabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseGPAApplicabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseGPAApplicabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseGPAApplicabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: courseidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: courselevelcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseLevelCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseLevelCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseLevelCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: courseoffering_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseoffering_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.courseoffering(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseoffering_deleted() OWNER TO postgres;

--
-- Name: courseoffering_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseoffering_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.courseoffering(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname, 
        newlocalcoursecode, newschoolid, newschoolyear, newsessionname, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sessionname, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseoffering_keychg() OWNER TO postgres;

--
-- Name: courserepeatcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseRepeatCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseRepeatCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseRepeatCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: coursetranscript_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursetranscript_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.courseattemptresultdescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_edfi.coursetranscript(
        oldcourseattemptresultdescriptorid, oldcourseattemptresultdescriptornamespace, oldcourseattemptresultdescriptorcodevalue, oldcoursecode, oldcourseeducationorganizationid, oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.courseattemptresultdescriptorid, dj0.namespace, dj0.codevalue, OLD.coursecode, OLD.courseeducationorganizationid, OLD.educationorganizationid, OLD.schoolyear, OLD.studentusi, dj1.studentuniqueid, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursetranscript_deleted() OWNER TO postgres;

--
-- Name: credential_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credential_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.stateofissuestateabbreviationdescriptorid;

    INSERT INTO tracked_changes_edfi.credential(
        oldcredentialidentifier, oldstateofissuestateabbreviationdescriptorid, oldstateofissuestateabbreviationdescriptornamespace, oldstateofissuestateabbreviationdescriptorcodevalue,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.credentialidentifier, OLD.stateofissuestateabbreviationdescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credential_deleted() OWNER TO postgres;

--
-- Name: credentialfielddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialFieldDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CredentialFieldDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialFieldDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted() OWNER TO postgres;

--
-- Name: credentialtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CredentialTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: creditcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CreditCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CreditCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CreditCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: credittypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credittypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CreditTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CreditTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CreditTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credittypedescriptor_deleted() OWNER TO postgres;

--
-- Name: cteprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CTEProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CTEProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CTEProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: curriculumuseddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CurriculumUsedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CurriculumUsedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CurriculumUsedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted() OWNER TO postgres;

--
-- Name: deliverymethoddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DeliveryMethodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DeliveryMethodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DeliveryMethodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted() OWNER TO postgres;

--
-- Name: descriptormapping_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.descriptormapping_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptormapping(
        oldmappednamespace, oldmappedvalue, oldnamespace, oldvalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.mappednamespace, OLD.mappedvalue, OLD.namespace, OLD.value, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.descriptormapping_deleted() OWNER TO postgres;

--
-- Name: diagnosisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiagnosisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiagnosisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiagnosisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted() OWNER TO postgres;

--
-- Name: diplomaleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiplomaLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiplomaLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiplomaLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: diplomatypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiplomaTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiplomaTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiplomaTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydesignationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDesignationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDesignationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDesignationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydeterminationsourcetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDeterminationSourceTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDeterminationSourceTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDeterminationSourceTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplineaction_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineaction_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.disciplineaction(
        olddisciplineactionidentifier, olddisciplinedate, oldstudentusi, oldstudentuniqueid, oldresponsibilityschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.disciplineactionidentifier, OLD.disciplinedate, OLD.studentusi, dj0.studentuniqueid, OLD.responsibilityschoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineaction_deleted() OWNER TO postgres;

--
-- Name: disciplineactionlengthdifferencereasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineActionLengthDifferenceReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineActionLengthDifferenceReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineActionLengthDifferenceReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplinedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplineincident_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineincident_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.disciplineincident(
        oldincidentidentifier, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineincident_deleted() OWNER TO postgres;

--
-- Name: disciplineincidentparticipationcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineIncidentParticipationCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineIncidentParticipationCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineIncidentParticipationCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: educationalenvironmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationalEnvironmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationalEnvironmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationalEnvironmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: educationcontent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationcontent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationcontent(
        oldcontentidentifier,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.contentidentifier, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationcontent_deleted() OWNER TO postgres;

--
-- Name: educationorganization_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganization_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganization(
        oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganization_deleted() OWNER TO postgres;

--
-- Name: educationorganizationassociationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationAssociationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationAssociationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationAssociationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescriptionass_e670ae_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationinterventionprescriptionassociation(
        oldeducationorganizationid, oldinterventionprescriptioneducationorganizationid, oldinterventionprescriptionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionprescriptioneducationorganizationid, OLD.interventionprescriptionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted() OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationnetworkassociation(
        oldeducationorganizationnetworkid, oldmembereducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationnetworkid, OLD.membereducationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted() OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationpeerassociation(
        oldeducationorganizationid, oldpeereducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.peereducationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted() OWNER TO postgres;

--
-- Name: educationplandescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationplandescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationPlanDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationPlanDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationPlanDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationplandescriptor_deleted() OWNER TO postgres;

--
-- Name: electronicmailtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ElectronicMailTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ElectronicMailTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ElectronicMailTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: eligibilitydelayreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.eligibilitydelayreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EligibilityDelayReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EligibilityDelayReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EligibilityDelayReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.eligibilitydelayreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: eligibilityevaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.eligibilityevaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EligibilityEvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EligibilityEvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EligibilityEvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.eligibilityevaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: employmentstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EmploymentStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EmploymentStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EmploymentStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: enrollmenttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.enrollmenttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EnrollmentTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EnrollmentTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EnrollmentTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.enrollmenttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: entrygradelevelreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EntryGradeLevelReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EntryGradeLevelReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EntryGradeLevelReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: entrytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EntryTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EntryTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EntryTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationdelayreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.evaluationdelayreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationDelayReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EvaluationDelayReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationDelayReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.evaluationdelayreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationrubricdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.evaluationrubricdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.evaluationrubricdimension(
        oldevaluationrubricrating, oldprogrameducationorganizationid, oldprogramevaluationelementtitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.evaluationrubricrating, OLD.programeducationorganizationid, OLD.programevaluationelementtitle, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.evaluationrubricdimension_deleted() OWNER TO postgres;

--
-- Name: eventcircumstancedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EventCircumstanceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EventCircumstanceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EventCircumstanceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted() OWNER TO postgres;

--
-- Name: exitwithdrawtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ExitWithdrawTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ExitWithdrawTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ExitWithdrawTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: feederschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.feederschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.feederschoolassociation(
        oldbegindate, oldfeederschoolid, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.feederschoolid, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.feederschoolassociation_deleted() OWNER TO postgres;

--
-- Name: financialcollectiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.FinancialCollectionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.FinancialCollectionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.FinancialCollectionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted() OWNER TO postgres;

--
-- Name: functiondimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.functiondimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.functiondimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.functiondimension_deleted() OWNER TO postgres;

--
-- Name: funddimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.funddimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.funddimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.funddimension_deleted() OWNER TO postgres;

--
-- Name: generalstudentprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.generalstudentprogramassociation(
        oldbegindate, oldeducationorganizationid, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted() OWNER TO postgres;

--
-- Name: grade_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.grade_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradetypedescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.grade(
        oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolyear, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.gradetypedescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperioddescriptorid, dj1.namespace, dj1.codevalue, OLD.gradingperiodname, OLD.gradingperiodschoolyear, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.grade_deleted() OWNER TO postgres;

--
-- Name: grade_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.grade_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    ij1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
    ij2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradetypedescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.gradetypedescriptorid;
    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.gradingperioddescriptorid;
    SELECT INTO ij1 * FROM edfi.descriptor j1 WHERE descriptorid = new.gradingperioddescriptorid;
    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;
    SELECT INTO ij2 * FROM edfi.student j2 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.grade(
        oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolyear, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newbegindate, newgradetypedescriptorid, newgradetypedescriptornamespace, newgradetypedescriptorcodevalue, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newgradingperiodschoolyear, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.begindate, old.gradetypedescriptorid, dj0.namespace, dj0.codevalue, old.gradingperioddescriptorid, dj1.namespace, dj1.codevalue, old.gradingperiodname, old.gradingperiodschoolyear, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj2.studentuniqueid, 
        new.begindate, new.gradetypedescriptorid, ij0.namespace, ij0.codevalue, new.gradingperioddescriptorid, ij1.namespace, ij1.codevalue, new.gradingperiodname, new.gradingperiodschoolyear, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij2.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.grade_keychg() OWNER TO postgres;

--
-- Name: gradebookentry_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentry_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.gradebookentry(
        oldgradebookentryidentifier, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradebookentryidentifier, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentry_deleted() OWNER TO postgres;

--
-- Name: gradebookentry_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentry_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.gradebookentry(
        oldgradebookentryidentifier, oldnamespace, 
        newgradebookentryidentifier, newnamespace, 
        id, changeversion)
    VALUES (
        old.gradebookentryidentifier, old.namespace, 
        new.gradebookentryidentifier, new.namespace, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentry_keychg() OWNER TO postgres;

--
-- Name: gradebookentrytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradebookEntryTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradebookEntryTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradebookEntryTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradeleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradeLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradeLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradeLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: gradepointaveragetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradePointAverageTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradePointAverageTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradePointAverageTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradeTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradeTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradeTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradingperiod_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradingperiod_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    INSERT INTO tracked_changes_edfi.gradingperiod(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodname, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradingperiod_deleted() OWNER TO postgres;

--
-- Name: gradingperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradingPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradingPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradingPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: graduationplan_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.graduationplan_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.graduationplantypedescriptorid;

    INSERT INTO tracked_changes_edfi.graduationplan(
        oldeducationorganizationid, oldgraduationplantypedescriptorid, oldgraduationplantypedescriptornamespace, oldgraduationplantypedescriptorcodevalue, oldgraduationschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.graduationplantypedescriptorid, dj0.namespace, dj0.codevalue, OLD.graduationschoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.graduationplan_deleted() OWNER TO postgres;

--
-- Name: graduationplantypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GraduationPlanTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GraduationPlanTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GraduationPlanTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gunfreeschoolsactreportingstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GunFreeSchoolsActReportingStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GunFreeSchoolsActReportingStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GunFreeSchoolsActReportingStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: homelessprimarynighttimeresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.HomelessPrimaryNighttimeResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.HomelessPrimaryNighttimeResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.HomelessPrimaryNighttimeResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: homelessprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.HomelessProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.HomelessProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.HomelessProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: ideapartdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.ideapartdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IDEAPartDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IDEAPartDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IDEAPartDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.ideapartdescriptor_deleted() OWNER TO postgres;

--
-- Name: identificationdocumentusedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IdentificationDocumentUseDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IdentificationDocumentUseDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IdentificationDocumentUseDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted() OWNER TO postgres;

--
-- Name: incidentlocationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IncidentLocationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IncidentLocationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IncidentLocationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatorgroupdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorGroupDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorGroupDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorGroupDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatorleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: institutiontelephonenumbertypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InstitutionTelephoneNumberTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InstitutionTelephoneNumberTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InstitutionTelephoneNumberTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted() OWNER TO postgres;

--
-- Name: interactivitystyledescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InteractivityStyleDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InteractivityStyleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InteractivityStyleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted() OWNER TO postgres;

--
-- Name: internetaccessdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetAccessDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetAccessDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetAccessDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted() OWNER TO postgres;

--
-- Name: internetaccesstypeinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetAccessTypeInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetAccessTypeInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetAccessTypeInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: internetperformanceinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetPerformanceInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetPerformanceInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetPerformanceInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: intervention_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.intervention_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.intervention(
        oldeducationorganizationid, oldinterventionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.intervention_deleted() OWNER TO postgres;

--
-- Name: interventionclassdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InterventionClassDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InterventionClassDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InterventionClassDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted() OWNER TO postgres;

--
-- Name: interventioneffectivenessratingdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InterventionEffectivenessRatingDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InterventionEffectivenessRatingDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InterventionEffectivenessRatingDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted() OWNER TO postgres;

--
-- Name: interventionprescription_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionprescription_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.interventionprescription(
        oldeducationorganizationid, oldinterventionprescriptionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionprescriptionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionprescription_deleted() OWNER TO postgres;

--
-- Name: interventionstudy_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionstudy_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.interventionstudy(
        oldeducationorganizationid, oldinterventionstudyidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionstudyidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionstudy_deleted() OWNER TO postgres;

--
-- Name: languagedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languagedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languagedescriptor_deleted() OWNER TO postgres;

--
-- Name: languageinstructionprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageInstructionProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageInstructionProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageInstructionProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: languageusedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languageusedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageUseDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageUseDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageUseDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languageusedescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningstandard(
        oldlearningstandardid,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.learningstandardid, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandard_deleted() OWNER TO postgres;

--
-- Name: learningstandardcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningstandardequivalenceassociation(
        oldnamespace, oldsourcelearningstandardid, oldtargetlearningstandardid,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.sourcelearningstandardid, OLD.targetlearningstandardid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted() OWNER TO postgres;

--
-- Name: learningstandardequivalencestrengthdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardEquivalenceStrengthDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardEquivalenceStrengthDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardEquivalenceStrengthDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandardscopedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardScopeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardScopeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardScopeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted() OWNER TO postgres;

--
-- Name: levelofeducationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LevelOfEducationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LevelOfEducationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LevelOfEducationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted() OWNER TO postgres;

--
-- Name: licensestatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LicenseStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LicenseStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LicenseStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: licensetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LicenseTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LicenseTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LicenseTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: limitedenglishproficiencydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LimitedEnglishProficiencyDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LimitedEnglishProficiencyDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LimitedEnglishProficiencyDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted() OWNER TO postgres;

--
-- Name: localaccount_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localaccount_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localaccount(
        oldaccountidentifier, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localaccount_deleted() OWNER TO postgres;

--
-- Name: localactual_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localactual_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localactual(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localactual_deleted() OWNER TO postgres;

--
-- Name: localbudget_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localbudget_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localbudget(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localbudget_deleted() OWNER TO postgres;

--
-- Name: localcontractedstaff_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localcontractedstaff_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.localcontractedstaff(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localcontractedstaff_deleted() OWNER TO postgres;

--
-- Name: localedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LocaleDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LocaleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LocaleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localedescriptor_deleted() OWNER TO postgres;

--
-- Name: localeducationagencycategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LocalEducationAgencyCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LocalEducationAgencyCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LocalEducationAgencyCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: localencumbrance_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localencumbrance_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localencumbrance(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localencumbrance_deleted() OWNER TO postgres;

--
-- Name: localpayroll_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localpayroll_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.localpayroll(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localpayroll_deleted() OWNER TO postgres;

--
-- Name: location_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.location_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.location(
        oldclassroomidentificationcode, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.classroomidentificationcode, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.location_deleted() OWNER TO postgres;

--
-- Name: location_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.location_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.location(
        oldclassroomidentificationcode, oldschoolid, 
        newclassroomidentificationcode, newschoolid, 
        id, changeversion)
    VALUES (
        old.classroomidentificationcode, old.schoolid, 
        new.classroomidentificationcode, new.schoolid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.location_keychg() OWNER TO postgres;

--
-- Name: magnetspecialprogramemphasisschooldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MagnetSpecialProgramEmphasisSchoolDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MagnetSpecialProgramEmphasisSchoolDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MagnetSpecialProgramEmphasisSchoolDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted() OWNER TO postgres;

--
-- Name: mediumofinstructiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MediumOfInstructionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MediumOfInstructionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MediumOfInstructionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted() OWNER TO postgres;

--
-- Name: methodcreditearneddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MethodCreditEarnedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MethodCreditEarnedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MethodCreditEarnedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted() OWNER TO postgres;

--
-- Name: migranteducationprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MigrantEducationProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MigrantEducationProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MigrantEducationProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: modelentitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ModelEntityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ModelEntityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ModelEntityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted() OWNER TO postgres;

--
-- Name: monitoreddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MonitoredDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MonitoredDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MonitoredDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NeglectedOrDelinquentProgramDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NeglectedOrDelinquentProgramDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NeglectedOrDelinquentProgramDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NeglectedOrDelinquentProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NeglectedOrDelinquentProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NeglectedOrDelinquentProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: networkpurposedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NetworkPurposeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NetworkPurposeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NetworkPurposeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted() OWNER TO postgres;

--
-- Name: objectdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.objectdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.objectdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.objectdimension_deleted() OWNER TO postgres;

--
-- Name: objectiveassessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.objectiveassessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.objectiveassessment(
        oldassessmentidentifier, oldidentificationcode, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.identificationcode, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.objectiveassessment_deleted() OWNER TO postgres;

--
-- Name: openstaffposition_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.openstaffposition_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.openstaffposition(
        oldeducationorganizationid, oldrequisitionnumber,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.requisitionnumber, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.openstaffposition_deleted() OWNER TO postgres;

--
-- Name: operationalstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OperationalStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OperationalStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OperationalStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: operationalunitdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.operationalunitdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.operationalunitdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.operationalunitdimension_deleted() OWNER TO postgres;

--
-- Name: othernametypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OtherNameTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OtherNameTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OtherNameTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted() OWNER TO postgres;

--
-- Name: participationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.participationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ParticipationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ParticipationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ParticipationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.participationdescriptor_deleted() OWNER TO postgres;

--
-- Name: participationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ParticipationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ParticipationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ParticipationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: performancebaseconversiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceBaseConversionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PerformanceBaseConversionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceBaseConversionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PerformanceLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: person_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.person_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_edfi.person(
        oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.person_deleted() OWNER TO postgres;

--
-- Name: personalinformationverificationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PersonalInformationVerificationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PersonalInformationVerificationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PersonalInformationVerificationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted() OWNER TO postgres;

--
-- Name: platformtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PlatformTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PlatformTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PlatformTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: populationserveddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PopulationServedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PopulationServedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PopulationServedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted() OWNER TO postgres;

--
-- Name: postingresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostingResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostingResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostingResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: postsecondaryevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.postsecondaryeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.postsecondaryevent(
        oldeventdate, oldpostsecondaryeventcategorydescriptorid, oldpostsecondaryeventcategorydescriptornamespace, oldpostsecondaryeventcategorydescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.eventdate, OLD.postsecondaryeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryevent_deleted() OWNER TO postgres;

--
-- Name: postsecondaryeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostSecondaryEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostSecondaryEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostSecondaryEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: postsecondaryinstitutionleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostSecondaryInstitutionLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostSecondaryInstitutionLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostSecondaryInstitutionLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceaccessdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceAccessDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceAccessDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceAccessDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceawayfromschooldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceAwayFromSchoolDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceAwayFromSchoolDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceAwayFromSchoolDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceproviderdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceProviderDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceProviderDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceProviderDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted() OWNER TO postgres;

--
-- Name: proficiencydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProficiencyDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProficiencyDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProficiencyDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted() OWNER TO postgres;

--
-- Name: program_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.program_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.program(
        oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.program_deleted() OWNER TO postgres;

--
-- Name: programassignmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramAssignmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramAssignmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramAssignmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: programcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: programdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.programdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programdimension_deleted() OWNER TO postgres;

--
-- Name: programevaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.programevaluation(
        oldprogrameducationorganizationid, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.programeducationorganizationid, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluation_deleted() OWNER TO postgres;

--
-- Name: programevaluationelement_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluationelement_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.programevaluationelement(
        oldprogrameducationorganizationid, oldprogramevaluationelementtitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.programeducationorganizationid, OLD.programevaluationelementtitle, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluationelement_deleted() OWNER TO postgres;

--
-- Name: programevaluationobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluationobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.programevaluationobjective(
        oldprogrameducationorganizationid, oldprogramevaluationobjectivetitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.programeducationorganizationid, OLD.programevaluationobjectivetitle, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluationobjective_deleted() OWNER TO postgres;

--
-- Name: programevaluationperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluationperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramEvaluationPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramEvaluationPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramEvaluationPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluationperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: programevaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programevaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramEvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramEvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramEvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programevaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: programsponsordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramSponsorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramSponsorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramSponsorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted() OWNER TO postgres;

--
-- Name: programtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: progressdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.progressdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgressDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgressDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgressDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.progressdescriptor_deleted() OWNER TO postgres;

--
-- Name: progressleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgressLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgressLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgressLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: projectdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.projectdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.projectdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.projectdimension_deleted() OWNER TO postgres;

--
-- Name: providercategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: providerprofitabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderProfitabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderProfitabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderProfitabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: providerstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: publicationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PublicationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PublicationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PublicationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: questionformdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.questionformdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.QuestionFormDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.QuestionFormDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.QuestionFormDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.questionformdescriptor_deleted() OWNER TO postgres;

--
-- Name: racedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.racedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RaceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RaceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RaceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.racedescriptor_deleted() OWNER TO postgres;

--
-- Name: ratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.ratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.ratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: reasonexiteddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReasonExitedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReasonExitedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReasonExitedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted() OWNER TO postgres;

--
-- Name: reasonnottesteddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReasonNotTestedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReasonNotTestedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReasonNotTestedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted() OWNER TO postgres;

--
-- Name: recognitiontypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RecognitionTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RecognitionTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RecognitionTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted() OWNER TO postgres;

--
-- Name: relationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.relationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RelationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RelationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RelationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.relationdescriptor_deleted() OWNER TO postgres;

--
-- Name: repeatidentifierdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RepeatIdentifierDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RepeatIdentifierDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RepeatIdentifierDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted() OWNER TO postgres;

--
-- Name: reportcard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reportcard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.reportcard(
        oldeducationorganizationid, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodname, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reportcard_deleted() OWNER TO postgres;

--
-- Name: reporterdescriptiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReporterDescriptionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReporterDescriptionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReporterDescriptionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted() OWNER TO postgres;

--
-- Name: reportingtagdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReportingTagDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReportingTagDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReportingTagDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted() OWNER TO postgres;

--
-- Name: residencystatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResidencyStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResidencyStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResidencyStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: responseindicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResponseIndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResponseIndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResponseIndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: responsibilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResponsibilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResponsibilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResponsibilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: restraintevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.restraintevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.restraintevent(
        oldrestrainteventidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.restrainteventidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.restraintevent_deleted() OWNER TO postgres;

--
-- Name: restrainteventreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RestraintEventReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RestraintEventReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RestraintEventReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: resultdatatypetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResultDatatypeTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResultDatatypeTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResultDatatypeTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: retestindicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RetestIndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RetestIndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RetestIndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolchoicebasisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolchoicebasisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolChoiceBasisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolChoiceBasisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolChoiceBasisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolchoicebasisdescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolchoiceimplementstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolChoiceImplementStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolChoiceImplementStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolChoiceImplementStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolfoodserviceprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolFoodServiceProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolFoodServiceProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolFoodServiceProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: schooltypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolyeartype_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolyeartype_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.schoolyeartype(
        oldschoolyear,
        id, changeversion)
    VALUES (
        OLD.schoolyear, 
        OLD.id, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolyeartype_deleted() OWNER TO postgres;

--
-- Name: section_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.section_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.section(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.section_deleted() OWNER TO postgres;

--
-- Name: section_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.section_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.section(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, 
        newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.section_keychg() OWNER TO postgres;

--
-- Name: sectionattendancetakenevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.sectionattendancetakenevent(
        oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.date, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted() OWNER TO postgres;

--
-- Name: sectionattendancetakenevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.sectionattendancetakenevent(
        oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, 
        newcalendarcode, newdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, 
        id, changeversion)
    VALUES (
        old.calendarcode, old.date, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, 
        new.calendarcode, new.date, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg() OWNER TO postgres;

--
-- Name: sectioncharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SectionCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SectionCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SectionCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: sectiontypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectiontypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SectionTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SectionTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SectionTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectiontypedescriptor_deleted() OWNER TO postgres;

--
-- Name: separationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.separationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SeparationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SeparationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SeparationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.separationdescriptor_deleted() OWNER TO postgres;

--
-- Name: separationreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SeparationReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SeparationReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SeparationReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: servicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.servicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.servicedescriptor_deleted() OWNER TO postgres;

--
-- Name: session_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.session_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.session(
        oldschoolid, oldschoolyear, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.schoolid, OLD.schoolyear, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.session_deleted() OWNER TO postgres;

--
-- Name: session_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.session_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.session(
        oldschoolid, oldschoolyear, oldsessionname, 
        newschoolid, newschoolyear, newsessionname, 
        id, changeversion)
    VALUES (
        old.schoolid, old.schoolyear, old.sessionname, 
        new.schoolid, new.schoolyear, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.session_keychg() OWNER TO postgres;

--
-- Name: sexdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sexdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SexDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SexDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SexDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sexdescriptor_deleted() OWNER TO postgres;

--
-- Name: sourcedimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sourcedimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.sourcedimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sourcedimension_deleted() OWNER TO postgres;

--
-- Name: sourcesystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SourceSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SourceSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SourceSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: specialeducationprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SpecialEducationProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SpecialEducationProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SpecialEducationProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: specialeducationsettingdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SpecialEducationSettingDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SpecialEducationSettingDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SpecialEducationSettingDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted() OWNER TO postgres;

--
-- Name: staff_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staff_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.staff(
        oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.staffusi, OLD.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staff_deleted() OWNER TO postgres;

--
-- Name: staff_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staff_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.staff(
        oldstaffusi, oldstaffuniqueid, 
        newstaffusi, newstaffuniqueid, 
        id, changeversion)
    VALUES (
        old.staffusi, old.staffuniqueid, 
        new.staffusi, new.staffuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staff_keychg() OWNER TO postgres;

--
-- Name: staffabsenceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffabsenceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.absenceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffabsenceevent(
        oldabsenceeventcategorydescriptorid, oldabsenceeventcategorydescriptornamespace, oldabsenceeventcategorydescriptorcodevalue, oldeventdate, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.absenceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffabsenceevent_deleted() OWNER TO postgres;

--
-- Name: staffclassificationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffClassificationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffClassificationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffClassificationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted() OWNER TO postgres;

--
-- Name: staffcohortassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffcohortassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffcohortassociation(
        oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.cohortidentifier, OLD.educationorganizationid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffcohortassociation_deleted() OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffdisciplineincidentassociation(
        oldincidentidentifier, oldschoolid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.staffclassificationdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationassignmentassociation(
        oldbegindate, oldeducationorganizationid, oldstaffclassificationdescriptorid, oldstaffclassificationdescriptornamespace, oldstaffclassificationdescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.staffclassificationdescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationcontactassociation(
        oldcontacttitle, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.contacttitle, OLD.educationorganizationid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.employmentstatusdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationemploymentassociation(
        oldeducationorganizationid, oldemploymentstatusdescriptorid, oldemploymentstatusdescriptornamespace, oldemploymentstatusdescriptorcodevalue, oldhiredate, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.employmentstatusdescriptorid, dj0.namespace, dj0.codevalue, OLD.hiredate, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted() OWNER TO postgres;

--
-- Name: staffidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: staffleave_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffleave_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.staffleaveeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffleave(
        oldbegindate, oldstaffleaveeventcategorydescriptorid, oldstaffleaveeventcategorydescriptornamespace, oldstaffleaveeventcategorydescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.staffleaveeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffleave_deleted() OWNER TO postgres;

--
-- Name: staffleaveeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffLeaveEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffLeaveEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffLeaveEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: staffprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffprogramassociation(
        oldbegindate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffprogramassociation_deleted() OWNER TO postgres;

--
-- Name: staffschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programassignmentdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffschoolassociation(
        oldprogramassignmentdescriptorid, oldprogramassignmentdescriptornamespace, oldprogramassignmentdescriptorcodevalue, oldschoolid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.programassignmentdescriptorid, dj0.namespace, dj0.codevalue, OLD.schoolid, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffschoolassociation_deleted() OWNER TO postgres;

--
-- Name: staffsectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffsectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffsectionassociation(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffsectionassociation_deleted() OWNER TO postgres;

--
-- Name: staffsectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffsectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
    ij0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;
    SELECT INTO ij0 * FROM edfi.staff j0 WHERE staffusi = new.staffusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.staffsectionassociation(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid, 
        newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstaffusi, newstaffuniqueid, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.staffusi, dj0.staffuniqueid, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.staffusi, ij0.staffuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffsectionassociation_keychg() OWNER TO postgres;

--
-- Name: stateabbreviationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StateAbbreviationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StateAbbreviationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StateAbbreviationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted() OWNER TO postgres;

--
-- Name: student_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.student_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.student(
        oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.studentusi, OLD.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.student_deleted() OWNER TO postgres;

--
-- Name: student_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.student_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.student(
        oldstudentusi, oldstudentuniqueid, 
        newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.studentusi, old.studentuniqueid, 
        new.studentusi, new.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.student_keychg() OWNER TO postgres;

--
-- Name: studentacademicrecord_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentacademicrecord_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_edfi.studentacademicrecord(
        oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.schoolyear, OLD.studentusi, dj0.studentuniqueid, OLD.termdescriptorid, dj1.namespace, dj1.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentacademicrecord_deleted() OWNER TO postgres;

--
-- Name: studentassessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentassessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentassessment(
        oldassessmentidentifier, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, OLD.studentassessmentidentifier, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentassessment_deleted() OWNER TO postgres;

--
-- Name: studentassessmenteducationorganizationassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.educationorganizationassociationtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentassessmenteducationorganizationassociation(
        oldassessmentidentifier, oldeducationorganizationassociationtypedescriptorid, oldeducationorganizationassociationtypedescriptornamespace, oldeducationorganizationassociationtypedescriptorcodevalue, oldeducationorganizationid, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.educationorganizationassociationtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.namespace, OLD.studentassessmentidentifier, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted() OWNER TO postgres;

--
-- Name: studentcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: studentcohortassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcohortassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcohortassociation(
        oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.cohortidentifier, OLD.educationorganizationid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcohortassociation_deleted() OWNER TO postgres;

--
-- Name: studentcompetencyobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.objectivegradeleveldescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcompetencyobjective(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldobjectiveeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodname, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.objectiveeducationorganizationid, OLD.objective, OLD.objectivegradeleveldescriptorid, dj1.namespace, dj1.codevalue, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted() OWNER TO postgres;

--
-- Name: studentcontactassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcontactassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.contact%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.contact j0 WHERE contactusi = old.contactusi;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcontactassociation(
        oldcontactusi, oldcontactuniqueid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.contactusi, dj0.contactuniqueid, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcontactassociation_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.behaviordescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentbehaviorassociation(
        oldbehaviordescriptorid, oldbehaviordescriptornamespace, oldbehaviordescriptorcodevalue, oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.behaviordescriptorid, dj0.namespace, dj0.codevalue, OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation(
        oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted() OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studenteducationorganizationassociation(
        oldeducationorganizationid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted() OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.responsibilitydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studenteducationorganizationresponsibilityassociation(
        oldbegindate, oldeducationorganizationid, oldresponsibilitydescriptorid, oldresponsibilitydescriptornamespace, oldresponsibilitydescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.responsibilitydescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted() OWNER TO postgres;

--
-- Name: studentgradebookentry_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentgradebookentry_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentgradebookentry(
        oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradebookentryidentifier, OLD.namespace, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentgradebookentry_deleted() OWNER TO postgres;

--
-- Name: studentgradebookentry_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentgradebookentry_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentgradebookentry(
        oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid, 
        newgradebookentryidentifier, newnamespace, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.gradebookentryidentifier, old.namespace, old.studentusi, dj0.studentuniqueid, 
        new.gradebookentryidentifier, new.namespace, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentgradebookentry_keychg() OWNER TO postgres;

--
-- Name: studentidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: studentinterventionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentinterventionassociation(
        oldeducationorganizationid, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionidentificationcode, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted() OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentinterventionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.eventdate, OLD.interventionidentificationcode, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentparticipationcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentParticipationCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentParticipationCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentParticipationCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: studentprogramattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentprogramattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.eventdate, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentprogramevaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentprogramevaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programevaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj3 * FROM edfi.student j3 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentprogramevaluation(
        oldevaluationdate, oldprogrameducationorganizationid, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.evaluationdate, OLD.programeducationorganizationid, OLD.programevaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.programevaluationtitle, OLD.programevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.programname, OLD.programtypedescriptorid, dj2.namespace, dj2.codevalue, OLD.studentusi, dj3.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentprogramevaluation_deleted() OWNER TO postgres;

--
-- Name: studentschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentschoolassociation(
        oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.entrydate, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolassociation_deleted() OWNER TO postgres;

--
-- Name: studentschoolassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentschoolassociation(
        oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid, 
        newentrydate, newschoolid, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.entrydate, old.schoolid, old.studentusi, dj0.studentuniqueid, 
        new.entrydate, new.schoolid, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolassociation_keychg() OWNER TO postgres;

--
-- Name: studentschoolattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentschoolattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.schoolid, OLD.schoolyear, OLD.sessionname, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentschoolattendanceevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    ij1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.attendanceeventcategorydescriptorid;
    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;
    SELECT INTO ij1 * FROM edfi.student j1 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentschoolattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newschoolid, newschoolyear, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, old.eventdate, old.schoolid, old.schoolyear, old.sessionname, old.studentusi, dj1.studentuniqueid, 
        new.attendanceeventcategorydescriptorid, ij0.namespace, ij0.codevalue, new.eventdate, new.schoolid, new.schoolyear, new.sessionname, new.studentusi, ij1.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg() OWNER TO postgres;

--
-- Name: studentsectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionassociation_deleted() OWNER TO postgres;

--
-- Name: studentsectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.begindate, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj0.studentuniqueid, 
        new.begindate, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionassociation_keychg() OWNER TO postgres;

--
-- Name: studentsectionattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentsectionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentsectionattendanceevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    ij1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.attendanceeventcategorydescriptorid;
    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;
    SELECT INTO ij1 * FROM edfi.student j1 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentsectionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, old.eventdate, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj1.studentuniqueid, 
        new.attendanceeventcategorydescriptorid, ij0.namespace, ij0.codevalue, new.eventdate, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij1.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg() OWNER TO postgres;

--
-- Name: studentspecialeducationprogrameligibilityassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation(
        oldconsenttoevaluationreceiveddate, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.consenttoevaluationreceiveddate, OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation_deleted() OWNER TO postgres;

--
-- Name: submissionstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SubmissionStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SubmissionStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SubmissionStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: supportermilitaryconnectiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.supportermilitaryconnectiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SupporterMilitaryConnectionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SupporterMilitaryConnectionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SupporterMilitaryConnectionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.supportermilitaryconnectiondescriptor_deleted() OWNER TO postgres;

--
-- Name: survey_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.survey_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.survey(
        oldnamespace, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.survey_deleted() OWNER TO postgres;

--
-- Name: surveycategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SurveyCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SurveyCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SurveyCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: surveycourseassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveycourseassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveycourseassociation(
        oldcoursecode, oldeducationorganizationid, oldnamespace, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.coursecode, OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveycourseassociation_deleted() OWNER TO postgres;

--
-- Name: surveyleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SurveyLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SurveyLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SurveyLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: surveyprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.surveyprogramassociation(
        oldeducationorganizationid, oldnamespace, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted() OWNER TO postgres;

--
-- Name: surveyquestion_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyquestion_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyquestion(
        oldnamespace, oldquestioncode, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.questioncode, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyquestion_deleted() OWNER TO postgres;

--
-- Name: surveyquestionresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyquestionresponse(
        oldnamespace, oldquestioncode, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.questioncode, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted() OWNER TO postgres;

--
-- Name: surveyresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyresponse(
        oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponse_deleted() OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation(
        oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.surveyresponsestafftargetassociation(
        oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.staffusi, dj0.staffuniqueid, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveysection_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysection_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysection(
        oldnamespace, oldsurveyidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysection_deleted() OWNER TO postgres;

--
-- Name: surveysectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionassociation(
        oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.namespace, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionassociation_deleted() OWNER TO postgres;

--
-- Name: surveysectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.surveysectionassociation(
        oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier, 
        newlocalcoursecode, newnamespace, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newsurveyidentifier, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.namespace, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.surveyidentifier, 
        new.localcoursecode, new.namespace, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.surveyidentifier, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionassociation_keychg() OWNER TO postgres;

--
-- Name: surveysectionresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionresponse(
        oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponse_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtarget_730be1_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation(
        oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.surveysectionresponsestafftargetassociation(
        oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.staffusi, dj0.staffuniqueid, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted() OWNER TO postgres;

--
-- Name: teachingcredentialbasisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TeachingCredentialBasisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TeachingCredentialBasisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TeachingCredentialBasisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted() OWNER TO postgres;

--
-- Name: teachingcredentialdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TeachingCredentialDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TeachingCredentialDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TeachingCredentialDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted() OWNER TO postgres;

--
-- Name: technicalskillsassessmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TechnicalSkillsAssessmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TechnicalSkillsAssessmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TechnicalSkillsAssessmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: telephonenumbertypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TelephoneNumberTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TelephoneNumberTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TelephoneNumberTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted() OWNER TO postgres;

--
-- Name: termdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.termdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TermDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TermDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TermDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.termdescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaparticipantdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartAParticipantDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartAParticipantDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartAParticipantDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartAProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartAProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartAProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaschooldesignationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartASchoolDesignationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartASchoolDesignationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartASchoolDesignationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted() OWNER TO postgres;

--
-- Name: tribalaffiliationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TribalAffiliationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TribalAffiliationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TribalAffiliationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted() OWNER TO postgres;

--
-- Name: visadescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.visadescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.VisaDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.VisaDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.VisaDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.visadescriptor_deleted() OWNER TO postgres;

--
-- Name: weapondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.weapondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.WeaponDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.WeaponDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.WeaponDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.weapondescriptor_deleted() OWNER TO postgres;

--
-- Name: accreditationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.accreditationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccreditationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.AccreditationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccreditationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.accreditationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: aidtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.aidtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AidTypeDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.AidTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AidTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.aidtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: candidate_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.candidate_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_tpdm.candidate(
        oldcandidateidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.candidateidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.candidate_deleted() OWNER TO postgres;

--
-- Name: candidateeducatorpreparationprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.candidateeducatorpreparationprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_tpdm.candidateeducatorpreparationprogramassociation(
        oldbegindate, oldcandidateidentifier, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.candidateidentifier, OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.candidateeducatorpreparationprogramassociation_deleted() OWNER TO postgres;

--
-- Name: certificationroutedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.certificationroutedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CertificationRouteDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.CertificationRouteDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CertificationRouteDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.certificationroutedescriptor_deleted() OWNER TO postgres;

--
-- Name: coteachingstyleobserveddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.coteachingstyleobserveddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CoteachingStyleObservedDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.CoteachingStyleObservedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CoteachingStyleObservedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.coteachingstyleobserveddescriptor_deleted() OWNER TO postgres;

--
-- Name: credentialstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.credentialstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialStatusDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.CredentialStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.credentialstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: educatorpreparationprogram_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.educatorpreparationprogram_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_tpdm.educatorpreparationprogram(
        oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.educatorpreparationprogram_deleted() OWNER TO postgres;

--
-- Name: educatorroledescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.educatorroledescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducatorRoleDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EducatorRoleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducatorRoleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.educatorroledescriptor_deleted() OWNER TO postgres;

--
-- Name: englishlanguageexamdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.englishlanguageexamdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EnglishLanguageExamDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EnglishLanguageExamDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EnglishLanguageExamDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.englishlanguageexamdescriptor_deleted() OWNER TO postgres;

--
-- Name: eppprogrampathwaydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.eppprogrampathwaydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EPPProgramPathwayDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EPPProgramPathwayDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EPPProgramPathwayDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.eppprogrampathwaydescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluation(
        oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluation_deleted() OWNER TO postgres;

--
-- Name: evaluationelement_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationelement_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationelement(
        oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationelementtitle, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationelement_deleted() OWNER TO postgres;

--
-- Name: evaluationelementrating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationelementrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationelementrating(
        oldeducationorganizationid, oldevaluationdate, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationdate, OLD.evaluationelementtitle, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationelementrating_deleted() OWNER TO postgres;

--
-- Name: evaluationelementratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationelementratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationElementRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationElementRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationElementRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationelementratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationobjective(
        oldeducationorganizationid, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationobjective_deleted() OWNER TO postgres;

--
-- Name: evaluationobjectiverating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationobjectiverating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationobjectiverating(
        oldeducationorganizationid, oldevaluationdate, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationdate, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationobjectiverating_deleted() OWNER TO postgres;

--
-- Name: evaluationperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationrating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.evaluationrating(
        oldeducationorganizationid, oldevaluationdate, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationdate, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationrating_deleted() OWNER TO postgres;

--
-- Name: evaluationratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationratingstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationratingstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationRatingStatusDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationRatingStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationRatingStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationratingstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: evaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.evaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.EvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.evaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: financialaid_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.financialaid_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.aidtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_tpdm.financialaid(
        oldaidtypedescriptorid, oldaidtypedescriptornamespace, oldaidtypedescriptorcodevalue, oldbegindate, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.aidtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.begindate, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.financialaid_deleted() OWNER TO postgres;

--
-- Name: genderdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.genderdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GenderDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.GenderDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GenderDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.genderdescriptor_deleted() OWNER TO postgres;

--
-- Name: objectiveratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.objectiveratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ObjectiveRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.ObjectiveRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ObjectiveRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.objectiveratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceevaluation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.performanceevaluation(
        oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluation_deleted() OWNER TO postgres;

--
-- Name: performanceevaluationrating_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluationrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
    dj3 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.sourcesystemdescriptorid;

    SELECT INTO dj3 * FROM edfi.descriptor j3 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.performanceevaluationrating(
        oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.personid, OLD.schoolyear, OLD.sourcesystemdescriptorid, dj2.namespace, dj2.codevalue, OLD.termdescriptorid, dj3.namespace, dj3.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluationrating_deleted() OWNER TO postgres;

--
-- Name: performanceevaluationratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluationratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceEvaluationRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.PerformanceEvaluationRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceEvaluationRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluationratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceevaluationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.performanceevaluationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceEvaluationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.PerformanceEvaluationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceEvaluationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.performanceevaluationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: rubricdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.rubricdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.evaluationperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.performanceevaluationtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_tpdm.rubricdimension(
        oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldrubricrating, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.evaluationelementtitle, OLD.evaluationobjectivetitle, OLD.evaluationperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.evaluationtitle, OLD.performanceevaluationtitle, OLD.performanceevaluationtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.rubricrating, OLD.schoolyear, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.rubricdimension_deleted() OWNER TO postgres;

--
-- Name: rubricratingleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.rubricratingleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RubricRatingLevelDescriptorId, b.codevalue, b.namespace, b.id, 'tpdm.RubricRatingLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RubricRatingLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.rubricratingleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: surveyresponsepersontargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.surveyresponsepersontargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_tpdm.surveyresponsepersontargetassociation(
        oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.surveyresponsepersontargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponsepersontargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE FUNCTION tracked_changes_tpdm.surveysectionresponsepersontargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_tpdm.surveysectionresponsepersontargetassociation(
        oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_tpdm.surveysectionresponsepersontargetassociation_deleted() OWNER TO postgres;

--
-- Name: getedfiodsversion(); Type: FUNCTION; Schema: util; Owner: postgres
--

CREATE FUNCTION util.getedfiodsversion() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN	
   RETURN '7.1';
END;
$$;


ALTER FUNCTION util.getedfiodsversion() OWNER TO postgres;

--
-- Name: getedfistandardversion(); Type: FUNCTION; Schema: util; Owner: postgres
--

CREATE FUNCTION util.getedfistandardversion() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN	
   RETURN '5.0';
END;
$$;


ALTER FUNCTION util.getedfistandardversion() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: educationorganizationidtoeducationorganizationid; Type: TABLE; Schema: auth; Owner: postgres
--

CREATE TABLE auth.educationorganizationidtoeducationorganizationid (
    sourceeducationorganizationid bigint NOT NULL,
    targeteducationorganizationid bigint NOT NULL
);


ALTER TABLE auth.educationorganizationidtoeducationorganizationid OWNER TO postgres;

--
-- Name: changeversionsequence; Type: SEQUENCE; Schema: changes; Owner: postgres
--

CREATE SEQUENCE changes.changeversionsequence
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE changes.changeversionsequence OWNER TO postgres;

--
-- Name: studentcontactassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcontactassociation (
    contactusi integer NOT NULL,
    studentusi integer NOT NULL,
    contactpriority integer,
    contactrestrictions character varying(250),
    emergencycontactstatus boolean,
    legalguardian boolean,
    liveswith boolean,
    primarycontactstatus boolean,
    relationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcontactassociation OWNER TO postgres;

--
-- Name: TABLE studentcontactassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcontactassociation IS 'This association relates students to their parents, guardians, or caretakers.';


--
-- Name: COLUMN studentcontactassociation.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN studentcontactassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcontactassociation.contactpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.contactpriority IS 'The numeric order of the preferred sequence or priority of contact.';


--
-- Name: COLUMN studentcontactassociation.contactrestrictions; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.contactrestrictions IS 'Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).';


--
-- Name: COLUMN studentcontactassociation.emergencycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.emergencycontactstatus IS 'Indicator of whether the person is a designated emergency contact for the student.';


--
-- Name: COLUMN studentcontactassociation.legalguardian; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.legalguardian IS 'Indicator of whether the person is a legal guardian for the student.';


--
-- Name: COLUMN studentcontactassociation.liveswith; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.liveswith IS 'Indicator of whether the student lives with the associated contact.';


--
-- Name: COLUMN studentcontactassociation.primarycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.primarycontactstatus IS 'Indicator of whether the person is a primary contact for the student.';


--
-- Name: COLUMN studentcontactassociation.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcontactassociation.relationdescriptorid IS 'The nature of an individual''s relationship to a student, primarily used to capture family relationships.';


--
-- Name: studentschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociation (
    entrydate date NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    calendarcode character varying(60),
    classofschoolyear smallint,
    educationorganizationid bigint,
    employedwhileenrolled boolean,
    enrollmenttypedescriptorid integer,
    entrygradeleveldescriptorid integer NOT NULL,
    entrygradelevelreasondescriptorid integer,
    entrytypedescriptorid integer,
    exitwithdrawdate date,
    exitwithdrawtypedescriptorid integer,
    fulltimeequivalency numeric(5,4),
    graduationplantypedescriptorid integer,
    graduationschoolyear smallint,
    nextyeargradeleveldescriptorid integer,
    nextyearschoolid bigint,
    primaryschool boolean,
    repeatgradeindicator boolean,
    residencystatusdescriptorid integer,
    schoolchoice boolean,
    schoolchoicebasisdescriptorid integer,
    schoolchoicetransfer boolean,
    schoolyear smallint,
    termcompletionindicator boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociation IS 'This association represents the school in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.';


--
-- Name: COLUMN studentschoolassociation.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN studentschoolassociation.classofschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.classofschoolyear IS 'Projected high school graduation year.';


--
-- Name: COLUMN studentschoolassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociation.employedwhileenrolled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.employedwhileenrolled IS 'An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.';


--
-- Name: COLUMN studentschoolassociation.enrollmenttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.enrollmenttypedescriptorid IS 'The type of enrollment reflected by the StudentSchoolAssociation.';


--
-- Name: COLUMN studentschoolassociation.entrygradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradeleveldescriptorid IS 'The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradelevelreasondescriptorid IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN studentschoolassociation.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrytypedescriptorid IS 'The process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawdate IS 'The recorded exit or withdraw date for the student.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawtypedescriptorid IS 'The circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN studentschoolassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.fulltimeequivalency IS 'The full-time equivalent ratio for the student’s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.';


--
-- Name: COLUMN studentschoolassociation.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN studentschoolassociation.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN studentschoolassociation.nextyeargradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.nextyeargradeleveldescriptorid IS 'The anticipated grade level for the student for the next school year.';


--
-- Name: COLUMN studentschoolassociation.nextyearschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.nextyearschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociation.primaryschool; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.primaryschool IS 'Indicates if a given enrollment record should be considered the primary record for a student.';


--
-- Name: COLUMN studentschoolassociation.repeatgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.repeatgradeindicator IS 'An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.';


--
-- Name: COLUMN studentschoolassociation.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.residencystatusdescriptorid IS 'An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN studentschoolassociation.schoolchoice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoice IS 'An indication of whether the student enrolled in this school under the provisions for public school choice';


--
-- Name: COLUMN studentschoolassociation.schoolchoicebasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoicebasisdescriptorid IS 'The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state';


--
-- Name: COLUMN studentschoolassociation.schoolchoicetransfer; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoicetransfer IS 'An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.';


--
-- Name: COLUMN studentschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolyear IS 'The school year associated with the student''s enrollment.';


--
-- Name: COLUMN studentschoolassociation.termcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.termcompletionindicator IS 'Idicates whether or not a student completed the most recent school term.';


--
-- Name: educationorganizationidtocontactusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtocontactusi AS
 SELECT edorgs.sourceeducationorganizationid,
    spa.contactusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
     JOIN edfi.studentcontactassociation spa ON ((ssa.studentusi = spa.studentusi)))
  GROUP BY edorgs.sourceeducationorganizationid, spa.contactusi;


ALTER TABLE auth.educationorganizationidtocontactusi OWNER TO postgres;

--
-- Name: studentcontactassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcontactassociation (
    oldcontactusi integer NOT NULL,
    oldcontactuniqueid character varying(32) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newcontactusi integer,
    newcontactuniqueid character varying(32),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcontactassociation OWNER TO postgres;

--
-- Name: studentschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentschoolassociation (
    oldentrydate date NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newentrydate date,
    newschoolid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: educationorganizationidtocontactusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtocontactusiincludingdeletes AS
 SELECT educationorganizationidtocontactusi.sourceeducationorganizationid,
    educationorganizationidtocontactusi.contactusi
   FROM auth.educationorganizationidtocontactusi
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa_tc.oldcontactusi AS contactusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
     JOIN tracked_changes_edfi.studentcontactassociation spa_tc ON ((ssa.studentusi = spa_tc.oldstudentusi)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa.contactusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)))
     JOIN edfi.studentcontactassociation spa ON ((ssa_tc.oldstudentusi = spa.studentusi)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa_tc.oldcontactusi AS contactusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)))
     JOIN tracked_changes_edfi.studentcontactassociation spa_tc ON ((ssa_tc.oldstudentusi = spa_tc.oldstudentusi)));


ALTER TABLE auth.educationorganizationidtocontactusiincludingdeletes OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationassignmentassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    credentialidentifier character varying(60),
    employmenteducationorganizationid bigint,
    employmentstatusdescriptorid integer,
    employmenthiredate date,
    enddate date,
    fulltimeequivalency numeric(5,4),
    orderofassignment integer,
    positiontitle character varying(100),
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationassignmentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationassignmentassociation IS 'This association indicates the education organization to which a staff member provides services.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.begindate IS 'Month, day, and year of the start or effective date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenthiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenthiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.enddate IS 'Month, day, and year of the end or termination date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.orderofassignment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.orderofassignment IS 'Describes whether the assignment is this the staff member''s primary assignment, secondary assignment, etc.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationemploymentassociation (
    educationorganizationid bigint NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    hiredate date NOT NULL,
    staffusi integer NOT NULL,
    annualwage money,
    credentialidentifier character varying(60),
    department character varying(60),
    enddate date,
    fulltimeequivalency numeric(5,4),
    hourlywage money,
    offerdate date,
    separationdescriptorid integer,
    separationreasondescriptorid integer,
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationemploymentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationemploymentassociation IS 'This association indicates the education organization an employee, contractor, volunteer, or other service provider is formally associated with typically indicated by which organization the staff member has a services contract with or receives compensation from.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.annualwage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.annualwage IS 'Annual wage associated with the employment position being reported.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.department; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.department IS 'The department or suborganization the employee/contractor is associated with in the education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.enddate IS 'The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hourlywage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hourlywage IS 'Hourly wage associated with the employment position being reported.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.offerdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.offerdate IS 'Date at which the staff member was made an official offer for this employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationdescriptorid IS 'Type of employment separation.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationreasondescriptorid IS 'Reason for terminating the employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: educationorganizationidtostaffusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusi AS
 SELECT edorgs.sourceeducationorganizationid,
    seo_assign.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationassignmentassociation seo_assign ON ((edorgs.targeteducationorganizationid = seo_assign.educationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    seo_empl.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationemploymentassociation seo_empl ON ((edorgs.targeteducationorganizationid = seo_empl.educationorganizationid)));


ALTER TABLE auth.educationorganizationidtostaffusi OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationassignmentassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldstaffclassificationdescriptorid integer NOT NULL,
    oldstaffclassificationdescriptornamespace character varying(255) NOT NULL,
    oldstaffclassificationdescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid bigint,
    newstaffclassificationdescriptorid integer,
    newstaffclassificationdescriptornamespace character varying(255),
    newstaffclassificationdescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationemploymentassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldemploymentstatusdescriptorid integer NOT NULL,
    oldemploymentstatusdescriptornamespace character varying(255) NOT NULL,
    oldemploymentstatusdescriptorcodevalue character varying(50) NOT NULL,
    oldhiredate date NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    neweducationorganizationid bigint,
    newemploymentstatusdescriptorid integer,
    newemploymentstatusdescriptornamespace character varying(255),
    newemploymentstatusdescriptorcodevalue character varying(50),
    newhiredate date,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: educationorganizationidtostaffusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusiincludingdeletes AS
 SELECT edorgtostaff.sourceeducationorganizationid,
    edorgtostaff.staffusi
   FROM auth.educationorganizationidtostaffusi edorgtostaff
UNION
 SELECT edorgs.sourceeducationorganizationid,
    emp_tc.oldstaffusi AS staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.staffeducationorganizationemploymentassociation emp_tc ON ((edorgs.targeteducationorganizationid = emp_tc.oldeducationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    assgn_tc.oldstaffusi AS staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.staffeducationorganizationassignmentassociation assgn_tc ON ((edorgs.targeteducationorganizationid = assgn_tc.oldeducationorganizationid)));


ALTER TABLE auth.educationorganizationidtostaffusiincludingdeletes OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusi AS
 SELECT edorgs.sourceeducationorganizationid,
    ssa.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
  GROUP BY edorgs.sourceeducationorganizationid, ssa.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusi OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusiincludingdeletes AS
 SELECT educationorganizationidtostudentusi.sourceeducationorganizationid,
    educationorganizationidtostudentusi.studentusi
   FROM auth.educationorganizationidtostudentusi
UNION
 SELECT edorgs.sourceeducationorganizationid,
    ssa_tc.oldstudentusi AS studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)));


ALTER TABLE auth.educationorganizationidtostudentusiincludingdeletes OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationresponsibilityassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    responsibilitydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationresponsibilityassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationresponsibilityassociation IS 'This association indicates a relationship between a student and an education organization other than an enrollment relationship, and generally indicating some kind of responsibility of the education organization for the student. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.begindate IS 'Month, day, and year of the start date of an education organization''s responsibility for a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid IS 'Indications of an education organization''s responsibility for a student, such as accountability, attendance, funding, etc.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.enddate IS 'Month, day, and year of the end date of an education organization''s responsibility for a student.';


--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studenteducationorganizationresponsibilityassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldresponsibilitydescriptorid integer NOT NULL,
    oldresponsibilitydescriptornamespace character varying(255) NOT NULL,
    oldresponsibilitydescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid bigint,
    newresponsibilitydescriptorid integer,
    newresponsibilitydescriptornamespace character varying(255),
    newresponsibilitydescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusithroughdeletedresponsibility; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusithroughdeletedresponsibility AS
 SELECT edorgs.sourceeducationorganizationid,
    seora.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studenteducationorganizationresponsibilityassociation seora ON ((edorgs.targeteducationorganizationid = seora.educationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    seora_tc.oldstudentusi AS studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studenteducationorganizationresponsibilityassociation seora_tc ON ((edorgs.targeteducationorganizationid = seora_tc.oldeducationorganizationid)));


ALTER TABLE auth.educationorganizationidtostudentusithroughdeletedresponsibility OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusithroughresponsibility; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusithroughresponsibility AS
 SELECT edorgs.sourceeducationorganizationid,
    seora.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studenteducationorganizationresponsibilityassociation seora ON ((edorgs.targeteducationorganizationid = seora.educationorganizationid)))
  GROUP BY edorgs.sourceeducationorganizationid, seora.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusithroughresponsibility OWNER TO postgres;

--
-- Name: absenceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.absenceeventcategorydescriptor (
    absenceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.absenceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE absenceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.absenceeventcategorydescriptor IS 'This descriptor describes the type of absence';


--
-- Name: COLUMN absenceeventcategorydescriptor.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.absenceeventcategorydescriptor.absenceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academichonorcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academichonorcategorydescriptor (
    academichonorcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.academichonorcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE academichonorcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academichonorcategorydescriptor IS 'A designation of the type of academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN academichonorcategorydescriptor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academichonorcategorydescriptor.academichonorcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicsubjectdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicsubjectdescriptor (
    academicsubjectdescriptorid integer NOT NULL
);


ALTER TABLE edfi.academicsubjectdescriptor OWNER TO postgres;

--
-- Name: TABLE academicsubjectdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicsubjectdescriptor IS 'This descriptor holds the description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language).';


--
-- Name: COLUMN academicsubjectdescriptor.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicsubjectdescriptor.academicsubjectdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicweek (
    schoolid bigint NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.academicweek OWNER TO postgres;

--
-- Name: TABLE academicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicweek IS 'This entity represents the academic weeks for a school year, optionally captured to support analyses.';


--
-- Name: COLUMN academicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN academicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: COLUMN academicweek.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.begindate IS 'The start date for the academic week.';


--
-- Name: COLUMN academicweek.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.enddate IS 'The end date for the academic week.';


--
-- Name: COLUMN academicweek.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.totalinstructionaldays IS 'The total instructional days during the academic week.';


--
-- Name: accommodationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accommodationdescriptor (
    accommodationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.accommodationdescriptor OWNER TO postgres;

--
-- Name: TABLE accommodationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accommodationdescriptor IS 'This descriptor defines variations used in how an assessment is presented or taken.';


--
-- Name: COLUMN accommodationdescriptor.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accommodationdescriptor.accommodationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: accountabilityrating; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountabilityrating (
    educationorganizationid bigint NOT NULL,
    ratingtitle character varying(60) NOT NULL,
    schoolyear smallint NOT NULL,
    rating character varying(35) NOT NULL,
    ratingdate date,
    ratingorganization character varying(35),
    ratingprogram character varying(30),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.accountabilityrating OWNER TO postgres;

--
-- Name: TABLE accountabilityrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountabilityrating IS 'An accountability rating for a school or district.';


--
-- Name: COLUMN accountabilityrating.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountabilityrating.ratingtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingtitle IS 'The title of the rating.';


--
-- Name: COLUMN accountabilityrating.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.schoolyear IS 'The school year for which the accountability rating is assessed.';


--
-- Name: COLUMN accountabilityrating.rating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.rating IS 'An accountability rating level, designation, or assessment.';


--
-- Name: COLUMN accountabilityrating.ratingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingdate IS 'The date the rating was awarded.';


--
-- Name: COLUMN accountabilityrating.ratingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingorganization IS 'The organization that assessed the rating.';


--
-- Name: COLUMN accountabilityrating.ratingprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingprogram IS 'The program associated with the accountability rating (e.g., NCLB, AEIS).';


--
-- Name: accounttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accounttypedescriptor (
    accounttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.accounttypedescriptor OWNER TO postgres;

--
-- Name: TABLE accounttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accounttypedescriptor IS 'The type of account used in accounting such as revenue, expenditure, or balance sheet.';


--
-- Name: COLUMN accounttypedescriptor.accounttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accounttypedescriptor.accounttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: achievementcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.achievementcategorydescriptor (
    achievementcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.achievementcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE achievementcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.achievementcategorydescriptor IS 'This descriptor defines the category of achievement attributed to the learner.';


--
-- Name: COLUMN achievementcategorydescriptor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.achievementcategorydescriptor.achievementcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: additionalcredittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.additionalcredittypedescriptor (
    additionalcredittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.additionalcredittypedescriptor OWNER TO postgres;

--
-- Name: TABLE additionalcredittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.additionalcredittypedescriptor IS 'The type of additional credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN additionalcredittypedescriptor.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.additionalcredittypedescriptor.additionalcredittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: addresstypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.addresstypedescriptor (
    addresstypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.addresstypedescriptor OWNER TO postgres;

--
-- Name: TABLE addresstypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.addresstypedescriptor IS 'The type of address listed for an individual or organization.';


--
-- Name: COLUMN addresstypedescriptor.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.addresstypedescriptor.addresstypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrationenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrationenvironmentdescriptor (
    administrationenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrationenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE administrationenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrationenvironmentdescriptor IS 'The environment in which the test was administered.';


--
-- Name: COLUMN administrationenvironmentdescriptor.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrationenvironmentdescriptor.administrationenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrativefundingcontroldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrativefundingcontroldescriptor (
    administrativefundingcontroldescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrativefundingcontroldescriptor OWNER TO postgres;

--
-- Name: TABLE administrativefundingcontroldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrativefundingcontroldescriptor IS 'This descriptor holds the type of education institution as classified by its funding source (e.g., public or private).';


--
-- Name: COLUMN administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: ancestryethnicorigindescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.ancestryethnicorigindescriptor (
    ancestryethnicorigindescriptorid integer NOT NULL
);


ALTER TABLE edfi.ancestryethnicorigindescriptor OWNER TO postgres;

--
-- Name: TABLE ancestryethnicorigindescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.ancestryethnicorigindescriptor IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    adaptiveassessment boolean,
    assessmentcategorydescriptorid integer,
    assessmentfamily character varying(60),
    assessmentform character varying(60),
    assessmenttitle character varying(255) NOT NULL,
    assessmentversion integer,
    educationorganizationid bigint,
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    revisiondate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessment OWNER TO postgres;

--
-- Name: TABLE assessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessment IS 'This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student''s competence, knowledge, skills, or behavior. An assessment can be used to measure differences in individuals or groups and changes in performance from one occasion to the next.';


--
-- Name: COLUMN assessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessment.adaptiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.adaptiveassessment IS 'Indicates that the assessment is adaptive.';


--
-- Name: COLUMN assessment.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentcategorydescriptorid IS 'The category of an assessment based on format and content.';


--
-- Name: COLUMN assessment.assessmentfamily; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentfamily IS 'The assessment family this assessment is a member of.';


--
-- Name: COLUMN assessment.assessmentform; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentform IS 'Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.';


--
-- Name: COLUMN assessment.assessmenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmenttitle IS 'The title or name of the assessment.';


--
-- Name: COLUMN assessment.assessmentversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentversion IS 'The version identifier for the assessment.';


--
-- Name: COLUMN assessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.nomenclature IS 'Reflects the specific nomenclature used for assessment.';


--
-- Name: COLUMN assessment.revisiondate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.revisiondate IS 'The month, day, and year that the conceptual design for the assessment was most recently revised substantially.';


--
-- Name: assessmentacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentacademicsubject (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentacademicsubject OWNER TO postgres;

--
-- Name: TABLE assessmentacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentacademicsubject IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: assessmentassessedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentassessedgradelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentassessedgradelevel OWNER TO postgres;

--
-- Name: TABLE assessmentassessedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentassessedgradelevel IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: COLUMN assessmentassessedgradelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentassessedgradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentassessedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.gradeleveldescriptorid IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: assessmentcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcategorydescriptor (
    assessmentcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcategorydescriptor IS 'This descriptor holds the category of an assessment based on format and content.';


--
-- Name: COLUMN assessmentcategorydescriptor.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcategorydescriptor.assessmentcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    begindate date,
    enddate date,
    mandatingeducationorganizationid bigint,
    publicationdate date,
    publicationstatusdescriptorid integer,
    publicationyear smallint,
    title character varying(75) NOT NULL,
    uri character varying(255),
    version character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandard OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandard IS 'An indication as to whether an assessment conforms to a standard (e.g., local standard, statewide standard, regional standard, association standard).';


--
-- Name: COLUMN assessmentcontentstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN assessmentcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN assessmentcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN assessmentcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN assessmentcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN assessmentcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: assessmentcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandardauthor (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN assessmentcontentstandardauthor.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: assessmentidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationcode (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentidentificationcode OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the assessment identification code.';


--
-- Name: COLUMN assessmentidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, state, or other agency or entity.';


--
-- Name: assessmentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationsystemdescriptor (
    assessmentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationsystemdescriptor IS 'This descriptor holds a coding scheme that is used for identification and record-keeping purposes by schools, social services or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentitemcategorydescriptorid integer,
    assessmentitemuri character varying(255),
    expectedtimeassessed character varying(30),
    itemtext character varying(1024),
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentitem OWNER TO postgres;

--
-- Name: TABLE assessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitem IS 'This entity represents one of many single measures that make up an assessment.';


--
-- Name: COLUMN assessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitem.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemcategorydescriptorid IS 'Category or type of the assessment item.';


--
-- Name: COLUMN assessmentitem.assessmentitemuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemuri IS 'The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.';


--
-- Name: COLUMN assessmentitem.expectedtimeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.expectedtimeassessed IS 'The duration of time allotted for the assessment item.';


--
-- Name: COLUMN assessmentitem.itemtext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.itemtext IS 'The text of the item.';


--
-- Name: COLUMN assessmentitem.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessmentitem.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.nomenclature IS 'Reflects the specific nomenclature used for assessment item.';


--
-- Name: assessmentitemcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemcategorydescriptor (
    assessmentitemcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemcategorydescriptor IS 'Category or type of the assessment item.';


--
-- Name: COLUMN assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitemlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitemlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentitemlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemlearningstandard IS 'Learning standard tested by this item.';


--
-- Name: COLUMN assessmentitemlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitemlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitemlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitemlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: assessmentitempossibleresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitempossibleresponse (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    responsevalue character varying(60) NOT NULL,
    correctresponse boolean,
    responsedescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitempossibleresponse OWNER TO postgres;

--
-- Name: TABLE assessmentitempossibleresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitempossibleresponse IS 'A possible response to an assessment item.';


--
-- Name: COLUMN assessmentitempossibleresponse.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitempossibleresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.responsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsevalue IS 'The response value, often an option number or code value (e.g., 1, 2, A, B, true, false).';


--
-- Name: COLUMN assessmentitempossibleresponse.correctresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.correctresponse IS 'Indicates the response is correct.';


--
-- Name: COLUMN assessmentitempossibleresponse.responsedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsedescription IS 'Additional text provided to define the response value.';


--
-- Name: assessmentitemresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemresultdescriptor (
    assessmentitemresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemresultdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemresultdescriptor IS 'The analyzed result of a student''s response to an assessment item.. For example:
    Correct
    Incorrect
    Met standard
    ...';


--
-- Name: COLUMN assessmentitemresultdescriptor.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemresultdescriptor.assessmentitemresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentlanguage (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentlanguage OWNER TO postgres;

--
-- Name: TABLE assessmentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentlanguage IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: COLUMN assessmentlanguage.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentlanguage.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.languagedescriptorid IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: assessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    performancelevelindicatorname character varying(60),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE assessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: COLUMN assessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperiod OWNER TO postgres;

--
-- Name: TABLE assessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN assessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN assessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: assessmentperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperioddescriptor (
    assessmentperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentperioddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperioddescriptor IS 'This descriptor holds the period of time window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperioddescriptor.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperioddescriptor.assessmentperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentplatformtype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentplatformtype (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    platformtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentplatformtype OWNER TO postgres;

--
-- Name: TABLE assessmentplatformtype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentplatformtype IS 'The platforms with which the assessment may be delivered.';


--
-- Name: COLUMN assessmentplatformtype.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentplatformtype.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentplatformtype.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.platformtypedescriptorid IS 'The platforms with which the assessment may be delivered.';


--
-- Name: assessmentprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentprogram (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentprogram OWNER TO postgres;

--
-- Name: TABLE assessmentprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentprogram IS 'The programs associated with the assessment.';


--
-- Name: COLUMN assessmentprogram.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentprogram.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN assessmentprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: assessmentreportingmethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentreportingmethoddescriptor (
    assessmentreportingmethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentreportingmethoddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentreportingmethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentreportingmethoddescriptor IS 'This descriptor defines the method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or a numerical grade.';


--
-- Name: COLUMN assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscore OWNER TO postgres;

--
-- Name: TABLE assessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscore IS 'Definition of the scores to be expected from this assessment.';


--
-- Name: COLUMN assessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer,
    identificationcode character varying(60),
    maximumscore character varying(35) NOT NULL,
    minimumscore character varying(35) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandard IS 'Score ranges of an assessment associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid IS 'The assessment reporting method defined (e.g., scale score, RIT scale score) associated with the referenced learning standard(s).';


--
-- Name: COLUMN assessmentscorerangelearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.maximumscore IS 'The maximum score in the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.minimumscore IS 'The minimum score in the score range.';


--
-- Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandardlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandardlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandardlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandardlearningstandard IS 'Learning standard associated with the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: assessmentsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentsection (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentsection OWNER TO postgres;

--
-- Name: TABLE assessmentsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentsection IS 'The Section(s) to which the assessment is associated.';


--
-- Name: COLUMN assessmentsection.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentsection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN assessmentsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN assessmentsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN assessmentsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN assessmentsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: assignmentlatestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assignmentlatestatusdescriptor (
    assignmentlatestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assignmentlatestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE assignmentlatestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assignmentlatestatusdescriptor IS 'Status of whether the assignment was submitted after the due date and/or marked as late.';


--
-- Name: COLUMN assignmentlatestatusdescriptor.assignmentlatestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assignmentlatestatusdescriptor.assignmentlatestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attemptstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attemptstatusdescriptor (
    attemptstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.attemptstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE attemptstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attemptstatusdescriptor IS 'This descriptor describes a student''s completion status for a section.';


--
-- Name: COLUMN attemptstatusdescriptor.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attemptstatusdescriptor.attemptstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attendanceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attendanceeventcategorydescriptor (
    attendanceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.attendanceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE attendanceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attendanceeventcategorydescriptor IS 'This descriptor holds the category of the attendance event (e.g., tardy). The map to known enumeration values is required.';


--
-- Name: COLUMN attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: balancesheetdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.balancesheetdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.balancesheetdimension OWNER TO postgres;

--
-- Name: TABLE balancesheetdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.balancesheetdimension IS 'The NCES balance sheet accounting dimension, used to track financial transactions for each fund. These financial statements only report assets, deferred outflows of resources, liabilities, deferred inflows of resources, and equity accounts. The statements are considered snapshots of how these accounts stand as of a certain point in time.';


--
-- Name: COLUMN balancesheetdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.code IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN balancesheetdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.fiscalyear IS 'The fiscal year for which the account balance sheet dimension is valid.';


--
-- Name: COLUMN balancesheetdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.codename IS 'A description of the account balance sheet dimension.';


--
-- Name: balancesheetdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.balancesheetdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.balancesheetdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE balancesheetdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.balancesheetdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.code IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account balance sheet dimension is valid.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: barriertointernetaccessinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.barriertointernetaccessinresidencedescriptor (
    barriertointernetaccessinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.barriertointernetaccessinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE barriertointernetaccessinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.barriertointernetaccessinresidencedescriptor IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: behaviordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.behaviordescriptor (
    behaviordescriptorid integer NOT NULL
);


ALTER TABLE edfi.behaviordescriptor OWNER TO postgres;

--
-- Name: TABLE behaviordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.behaviordescriptor IS 'This descriptor holds the categories of behavior describing a discipline incident.';


--
-- Name: COLUMN behaviordescriptor.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.behaviordescriptor.behaviordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: bellschedule; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedule (
    bellschedulename character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    alternatedayname character varying(20),
    endtime time without time zone,
    starttime time without time zone,
    totalinstructionaltime integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.bellschedule OWNER TO postgres;

--
-- Name: TABLE bellschedule; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedule IS 'This entity represents the schedule of class period meeting times.';


--
-- Name: COLUMN bellschedule.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellschedule.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellschedule.alternatedayname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.alternatedayname IS 'An alternate name for the day (e.g., Red, Blue).';


--
-- Name: COLUMN bellschedule.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.endtime IS 'An indication of the time of day the bell schedule ends.';


--
-- Name: COLUMN bellschedule.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.starttime IS 'An indication of the time of day the bell schedule begins.';


--
-- Name: COLUMN bellschedule.totalinstructionaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.totalinstructionaltime IS 'The total instructional time in minutes per day for the bell schedule.';


--
-- Name: bellscheduleclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduleclassperiod (
    bellschedulename character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    classperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduleclassperiod OWNER TO postgres;

--
-- Name: TABLE bellscheduleclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduleclassperiod IS 'The class periods that compose this bell schedule.';


--
-- Name: COLUMN bellscheduleclassperiod.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellscheduleclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellscheduleclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: bellscheduledate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduledate (
    bellschedulename character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    date date NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduledate OWNER TO postgres;

--
-- Name: TABLE bellscheduledate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduledate IS 'The dates for which the bell schedule applies.';


--
-- Name: COLUMN bellscheduledate.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellscheduledate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellscheduledate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.date IS 'The dates for which the bell schedule applies.';


--
-- Name: bellschedulegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedulegradelevel (
    bellschedulename character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellschedulegradelevel OWNER TO postgres;

--
-- Name: TABLE bellschedulegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedulegradelevel IS 'The grade levels the particular bell schedule applies to.';


--
-- Name: COLUMN bellschedulegradelevel.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellschedulegradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellschedulegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.gradeleveldescriptorid IS 'The grade levels the particular bell schedule applies to.';


--
-- Name: calendar; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendar (
    calendarcode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    calendartypedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendar OWNER TO postgres;

--
-- Name: TABLE calendar; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendar IS 'A set of dates associated with an organization.';


--
-- Name: COLUMN calendar.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendar.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendar.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendar.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendartypedescriptorid IS 'Indicates the type of calendar.';


--
-- Name: calendardate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardate (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendardate OWNER TO postgres;

--
-- Name: TABLE calendardate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardate IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardate.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendardate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN calendardate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardate.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: calendardatecalendarevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardatecalendarevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    calendareventdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendardatecalendarevent OWNER TO postgres;

--
-- Name: TABLE calendardatecalendarevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardatecalendarevent IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardatecalendarevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendardatecalendarevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN calendardatecalendarevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardatecalendarevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendardatecalendarevent.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendareventdescriptorid IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: calendareventdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendareventdescriptor (
    calendareventdescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendareventdescriptor OWNER TO postgres;

--
-- Name: TABLE calendareventdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendareventdescriptor IS 'This descriptor holds the types of scheduled or unscheduled event for the day (e.g., Instructional day, Teacher only day, Holiday, Make-up day, Weather day, Student late arrival/early dismissal day).';


--
-- Name: COLUMN calendareventdescriptor.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendareventdescriptor.calendareventdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: calendargradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendargradelevel (
    calendarcode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendargradelevel OWNER TO postgres;

--
-- Name: TABLE calendargradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendargradelevel IS 'Indicates the grade level associated with the calendar.';


--
-- Name: COLUMN calendargradelevel.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendargradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendargradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendargradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.gradeleveldescriptorid IS 'Indicates the grade level associated with the calendar.';


--
-- Name: calendartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendartypedescriptor (
    calendartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendartypedescriptor OWNER TO postgres;

--
-- Name: TABLE calendartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendartypedescriptor IS 'This descriptor defines the calendar types.';


--
-- Name: COLUMN calendartypedescriptor.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendartypedescriptor.calendartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: careerpathwaydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.careerpathwaydescriptor (
    careerpathwaydescriptorid integer NOT NULL
);


ALTER TABLE edfi.careerpathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE careerpathwaydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.careerpathwaydescriptor IS 'The career cluster or pathway representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN careerpathwaydescriptor.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.careerpathwaydescriptor.careerpathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterapprovalagencytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterapprovalagencytypedescriptor (
    charterapprovalagencytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterapprovalagencytypedescriptor OWNER TO postgres;

--
-- Name: TABLE charterapprovalagencytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterapprovalagencytypedescriptor IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterstatusdescriptor (
    charterstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE charterstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterstatusdescriptor IS 'The category of charter school. For example: School Charter, Open Enrollment Charter.';


--
-- Name: COLUMN charterstatusdescriptor.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterstatusdescriptor.charterstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: chartofaccount; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.chartofaccount (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    accountname character varying(100),
    accounttypedescriptorid integer NOT NULL,
    balancesheetcode character varying(16),
    functioncode character varying(16),
    fundcode character varying(16),
    objectcode character varying(16),
    operationalunitcode character varying(16),
    programcode character varying(16),
    projectcode character varying(16),
    sourcecode character varying(16),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.chartofaccount OWNER TO postgres;

--
-- Name: TABLE chartofaccount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.chartofaccount IS 'A valid combination of account dimensions under which financials are reported. This financial entity represents a funding source combined with its purpose and type of transaction. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN chartofaccount.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN chartofaccount.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN chartofaccount.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.fiscalyear IS 'The fiscal year for the account';


--
-- Name: COLUMN chartofaccount.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accountname IS 'A descriptive name for the account.';


--
-- Name: COLUMN chartofaccount.accounttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accounttypedescriptorid IS 'The type of account used in accounting such as revenue, expenditure, or balance sheet.';


--
-- Name: COLUMN chartofaccount.balancesheetcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.balancesheetcode IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN chartofaccount.functioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.functioncode IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN chartofaccount.fundcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.fundcode IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN chartofaccount.objectcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.objectcode IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN chartofaccount.operationalunitcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.operationalunitcode IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN chartofaccount.programcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.programcode IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN chartofaccount.projectcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.projectcode IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN chartofaccount.sourcecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.sourcecode IS 'The code representation of the account source dimension.';


--
-- Name: chartofaccountreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.chartofaccountreportingtag (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    tagvalue character varying(100),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.chartofaccountreportingtag OWNER TO postgres;

--
-- Name: TABLE chartofaccountreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.chartofaccountreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN chartofaccountreportingtag.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.accountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN chartofaccountreportingtag.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN chartofaccountreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.fiscalyear IS 'The fiscal year for the account';


--
-- Name: COLUMN chartofaccountreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.reportingtagdescriptorid IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN chartofaccountreportingtag.tagvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.tagvalue IS 'The value associated with the reporting tag.';


--
-- Name: citizenshipstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.citizenshipstatusdescriptor (
    citizenshipstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.citizenshipstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE citizenshipstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.citizenshipstatusdescriptor IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN citizenshipstatusdescriptor.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.citizenshipstatusdescriptor.citizenshipstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: classperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiod (
    classperiodname character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    officialattendanceperiod boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.classperiod OWNER TO postgres;

--
-- Name: TABLE classperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiod IS 'This entity represents the designation of a regularly scheduled series of class meetings at designated times and days of the week.';


--
-- Name: COLUMN classperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiod.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.officialattendanceperiod IS 'Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a section.';


--
-- Name: classperiodmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiodmeetingtime (
    classperiodname character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    endtime time without time zone NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.classperiodmeetingtime OWNER TO postgres;

--
-- Name: TABLE classperiodmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiodmeetingtime IS 'The meeting time(s) for a class period.';


--
-- Name: COLUMN classperiodmeetingtime.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiodmeetingtime.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiodmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN classperiodmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: classroompositiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classroompositiondescriptor (
    classroompositiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.classroompositiondescriptor OWNER TO postgres;

--
-- Name: TABLE classroompositiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classroompositiondescriptor IS 'This descriptor defines the type of position the staff member holds in a specific class/section.';


--
-- Name: COLUMN classroompositiondescriptor.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classroompositiondescriptor.classroompositiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohort; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohort (
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    academicsubjectdescriptorid integer,
    cohortdescription character varying(1024),
    cohortscopedescriptorid integer,
    cohorttypedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.cohort OWNER TO postgres;

--
-- Name: TABLE cohort; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohort IS 'This entity represents any type of list of designated students for tracking, analysis, or intervention.';


--
-- Name: COLUMN cohort.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN cohort.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohort.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.academicsubjectdescriptorid IS 'The academic subject associated with an academic intervention.';


--
-- Name: COLUMN cohort.cohortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortdescription IS 'The description of the cohort and its purpose.';


--
-- Name: COLUMN cohort.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortscopedescriptorid IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohort.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohorttypedescriptorid IS 'The type of cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: cohortprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortprogram (
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.cohortprogram OWNER TO postgres;

--
-- Name: TABLE cohortprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortprogram IS 'The (optional) program associated with this cohort (e.g., special education).';


--
-- Name: COLUMN cohortprogram.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN cohortprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN cohortprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: cohortscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortscopedescriptor (
    cohortscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortscopedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortscopedescriptor IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohortscopedescriptor.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortscopedescriptor.cohortscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohorttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohorttypedescriptor (
    cohorttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohorttypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohorttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohorttypedescriptor IS 'The type of the cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: COLUMN cohorttypedescriptor.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohorttypedescriptor.cohorttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohortyeartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortyeartypedescriptor (
    cohortyeartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortyeartypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortyeartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortyeartypedescriptor IS 'The enumeration items for the set of cohort years.';


--
-- Name: COLUMN cohortyeartypedescriptor.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortyeartypedescriptor.cohortyeartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: communityorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityorganization (
    communityorganizationid bigint NOT NULL
);


ALTER TABLE edfi.communityorganization OWNER TO postgres;

--
-- Name: TABLE communityorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityorganization IS 'This entity represents an administrative unit at the state level which exists primarily to operate local community providers.';


--
-- Name: COLUMN communityorganization.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityorganization.communityorganizationid IS 'The identifier assigned to a community organization.';


--
-- Name: communityprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityprovider (
    communityproviderid bigint NOT NULL,
    communityorganizationid bigint,
    licenseexemptindicator boolean,
    providercategorydescriptorid integer NOT NULL,
    providerprofitabilitydescriptorid integer,
    providerstatusdescriptorid integer NOT NULL,
    schoolindicator boolean
);


ALTER TABLE edfi.communityprovider OWNER TO postgres;

--
-- Name: TABLE communityprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityprovider IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN communityprovider.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityproviderid IS 'The identifier assigned to a community provider.';


--
-- Name: COLUMN communityprovider.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityorganizationid IS 'The identifier assigned to a community organization.';


--
-- Name: COLUMN communityprovider.licenseexemptindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.licenseexemptindicator IS 'An indication of whether the provider is exempt from having a license.';


--
-- Name: COLUMN communityprovider.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providercategorydescriptorid IS 'Indicates the category of the provider.';


--
-- Name: COLUMN communityprovider.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerprofitabilitydescriptorid IS 'Indicates the profitability status of the provider.';


--
-- Name: COLUMN communityprovider.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerstatusdescriptorid IS 'Indicates the status of the provider.';


--
-- Name: COLUMN communityprovider.schoolindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.schoolindicator IS 'An indication of whether the community provider is a school.';


--
-- Name: communityproviderlicense; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityproviderlicense (
    communityproviderid bigint NOT NULL,
    licenseidentifier character varying(36) NOT NULL,
    licensingorganization character varying(75) NOT NULL,
    authorizedfacilitycapacity integer,
    licenseeffectivedate date NOT NULL,
    licenseexpirationdate date,
    licenseissuedate date,
    licensestatusdescriptorid integer,
    licensetypedescriptorid integer NOT NULL,
    oldestageauthorizedtoserve integer,
    youngestageauthorizedtoserve integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: TABLE communityproviderlicense; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityproviderlicense IS 'The legal document held by the community provider that authorizes the holder to perform certain functions and or services.';


--
-- Name: COLUMN communityproviderlicense.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.communityproviderid IS 'The identifier assigned to a community provider.';


--
-- Name: COLUMN communityproviderlicense.licenseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseidentifier IS 'The unique identifier issued by the licensing organization.';


--
-- Name: COLUMN communityproviderlicense.licensingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensingorganization IS 'The organization issuing the license.';


--
-- Name: COLUMN communityproviderlicense.authorizedfacilitycapacity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.authorizedfacilitycapacity IS 'The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.licenseeffectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseeffectivedate IS 'The month, day, and year on which a license is active or becomes effective.';


--
-- Name: COLUMN communityproviderlicense.licenseexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseexpirationdate IS 'The month, day, and year on which a license will expire.';


--
-- Name: COLUMN communityproviderlicense.licenseissuedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseissuedate IS 'The month, day, and year on which an active license was issued.';


--
-- Name: COLUMN communityproviderlicense.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensestatusdescriptorid IS 'An indication of the status of the license.';


--
-- Name: COLUMN communityproviderlicense.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensetypedescriptorid IS 'An indication of the category of the license.';


--
-- Name: COLUMN communityproviderlicense.oldestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.oldestageauthorizedtoserve IS 'The oldest age of children a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.youngestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.youngestageauthorizedtoserve IS 'The youngest age of children a provider is authorized or licensed to serve.';


--
-- Name: competencyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyleveldescriptor (
    competencyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.competencyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE competencyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyleveldescriptor IS 'This descriptor defines various levels for assessed competencies.';


--
-- Name: COLUMN competencyleveldescriptor.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyleveldescriptor.competencyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: competencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyobjective (
    educationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    competencyobjectiveid character varying(60),
    description character varying(1024),
    successcriteria character varying(150),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.competencyobjective OWNER TO postgres;

--
-- Name: TABLE competencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyobjective IS 'This entity holds additional competencies for student achievement that are not associated with specific learning objectives (e.g., paying attention in class).';


--
-- Name: COLUMN competencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN competencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN competencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN competencyobjective.competencyobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.competencyobjectiveid IS 'The Identifier for the competency objective.';


--
-- Name: COLUMN competencyobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.description IS 'The description of the student competency objective.';


--
-- Name: COLUMN competencyobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the competency objective.';


--
-- Name: contact; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contact (
    contactusi integer NOT NULL,
    contactuniqueid character varying(32) NOT NULL,
    firstname character varying(75) NOT NULL,
    genderidentity character varying(60),
    generationcodesuffix character varying(10),
    highestcompletedlevelofeducationdescriptorid integer,
    lastsurname character varying(75) NOT NULL,
    loginid character varying(60),
    maidenname character varying(75),
    middlename character varying(75),
    personaltitleprefix character varying(30),
    personid character varying(32),
    preferredfirstname character varying(75),
    preferredlastsurname character varying(75),
    sexdescriptorid integer,
    sourcesystemdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.contact OWNER TO postgres;

--
-- Name: TABLE contact; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contact IS 'This entity represents a contact of a student, such as a parent, guardian or caretaker.';


--
-- Name: COLUMN contact.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contact.contactuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.contactuniqueid IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contact.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN contact.genderidentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.genderidentity IS 'The gender the contact identifies themselves as.';


--
-- Name: COLUMN contact.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN contact.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN contact.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN contact.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN contact.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN contact.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN contact.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN contact.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN contact.preferredfirstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.preferredfirstname IS 'The first name the individual prefers, if different from their legal first name';


--
-- Name: COLUMN contact.preferredlastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.preferredlastsurname IS 'The last name the individual prefers, if different from their legal last name';


--
-- Name: COLUMN contact.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.sexdescriptorid IS 'A person''s birth sex.';


--
-- Name: COLUMN contact.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contact.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: contact_contactusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.contact_contactusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.contact_contactusi_seq OWNER TO postgres;

--
-- Name: contact_contactusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.contact_contactusi_seq OWNED BY edfi.contact.contactusi;


--
-- Name: contactaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactaddress (
    contactusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactaddress OWNER TO postgres;

--
-- Name: TABLE contactaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactaddress IS 'Contact''s address, if different from the student address.';


--
-- Name: COLUMN contactaddress.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN contactaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN contactaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN contactaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN contactaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN contactaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN contactaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN contactaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN contactaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN contactaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN contactaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN contactaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN contactaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN contactaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: contactaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactaddressperiod (
    contactusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactaddressperiod OWNER TO postgres;

--
-- Name: TABLE contactaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN contactaddressperiod.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN contactaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN contactaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN contactaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN contactaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN contactaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN contactaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: contactelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactelectronicmail (
    contactusi integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactelectronicmail OWNER TO postgres;

--
-- Name: TABLE contactelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN contactelectronicmail.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN contactelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN contactelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN contactelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: contactinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactinternationaladdress (
    contactusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactinternationaladdress OWNER TO postgres;

--
-- Name: TABLE contactinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN contactinternationaladdress.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN contactinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN contactinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN contactinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN contactinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN contactinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN contactinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN contactinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN contactinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN contactinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: contactlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactlanguage (
    contactusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactlanguage OWNER TO postgres;

--
-- Name: TABLE contactlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN contactlanguage.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguage.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: contactlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactlanguageuse (
    contactusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactlanguageuse OWNER TO postgres;

--
-- Name: TABLE contactlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN contactlanguageuse.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguageuse.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN contactlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: contactothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactothername (
    contactusi integer NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactothername OWNER TO postgres;

--
-- Name: TABLE contactothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN contactothername.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN contactothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN contactothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN contactothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN contactothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN contactothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: contactpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contactpersonalidentificationdocument (
    contactusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contactpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE contactpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contactpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN contactpersonalidentificationdocument.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contactpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN contactpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN contactpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN contactpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN contactpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN contactpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN contactpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contactpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: contacttelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contacttelephone (
    contactusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.contacttelephone OWNER TO postgres;

--
-- Name: TABLE contacttelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contacttelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN contacttelephone.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN contacttelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN contacttelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN contacttelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN contacttelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN contacttelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: contacttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contacttypedescriptor (
    contacttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.contacttypedescriptor OWNER TO postgres;

--
-- Name: TABLE contacttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contacttypedescriptor IS 'This descriptor defines the set of contact types.';


--
-- Name: COLUMN contacttypedescriptor.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttypedescriptor.contacttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: contentclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contentclassdescriptor (
    contentclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.contentclassdescriptor OWNER TO postgres;

--
-- Name: TABLE contentclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contentclassdescriptor IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN contentclassdescriptor.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contentclassdescriptor.contentclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: continuationofservicesreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.continuationofservicesreasondescriptor (
    continuationofservicesreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.continuationofservicesreasondescriptor OWNER TO postgres;

--
-- Name: TABLE continuationofservicesreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.continuationofservicesreasondescriptor IS 'In the Migrant Education program, a provision allows continuation of services after a child is no longer considered migratory for certain reasons. This descriptor holds the reasons prescribed in the statute. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: costratedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.costratedescriptor (
    costratedescriptorid integer NOT NULL
);


ALTER TABLE edfi.costratedescriptor OWNER TO postgres;

--
-- Name: TABLE costratedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.costratedescriptor IS 'The rate by which a cost applies (e.g. $1 per student).';


--
-- Name: COLUMN costratedescriptor.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.costratedescriptor.costratedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: countrydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.countrydescriptor (
    countrydescriptorid integer NOT NULL
);


ALTER TABLE edfi.countrydescriptor OWNER TO postgres;

--
-- Name: TABLE countrydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.countrydescriptor IS 'This descriptor defines the name and code of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN countrydescriptor.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.countrydescriptor.countrydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: course; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.course (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    careerpathwaydescriptorid integer,
    coursedefinedbydescriptorid integer,
    coursedescription character varying(1024),
    coursegpaapplicabilitydescriptorid integer,
    coursetitle character varying(60) NOT NULL,
    datecourseadopted date,
    highschoolcourserequirement boolean,
    maxcompletionsforcredit integer,
    maximumavailablecreditconversion numeric(9,2),
    maximumavailablecredits numeric(9,3),
    maximumavailablecredittypedescriptorid integer,
    minimumavailablecreditconversion numeric(9,2),
    minimumavailablecredits numeric(9,3),
    minimumavailablecredittypedescriptorid integer,
    numberofparts integer NOT NULL,
    timerequiredforcompletion integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.course OWNER TO postgres;

--
-- Name: TABLE course; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.course IS 'This educational entity represents the organization of subject matter and related learning experiences provided for the instruction of students on a regular or systematic basis.';


--
-- Name: COLUMN course.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN course.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN course.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.careerpathwaydescriptorid IS 'Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.';


--
-- Name: COLUMN course.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedefinedbydescriptorid IS 'Specifies whether the course was defined by the SEA, LEA, School, or national organization.';


--
-- Name: COLUMN course.coursedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedescription IS 'A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.';


--
-- Name: COLUMN course.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursegpaapplicabilitydescriptorid IS 'An indicator of whether or not the course being described is included in the computation of the student''s grade point average, and if so, if it is weighted differently from regular courses.';


--
-- Name: COLUMN course.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts).';


--
-- Name: COLUMN course.datecourseadopted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.datecourseadopted IS 'Date the course was adopted by the education agency.';


--
-- Name: COLUMN course.highschoolcourserequirement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.highschoolcourserequirement IS 'An indication that this course may satisfy high school graduation requirements in the course''s subject area.';


--
-- Name: COLUMN course.maxcompletionsforcredit; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maxcompletionsforcredit IS 'Designates how many times the course may be taken with credit received by the student.';


--
-- Name: COLUMN course.maximumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.maximumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.maximumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.minimumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.numberofparts; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.numberofparts IS 'The number of parts identified for a course.';


--
-- Name: COLUMN course.timerequiredforcompletion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.timerequiredforcompletion IS 'The actual or estimated number of clock minutes required for class completion. This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.';


--
-- Name: courseacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseacademicsubject (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseacademicsubject OWNER TO postgres;

--
-- Name: TABLE courseacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseacademicsubject IS 'The intended major subject/s area of the course.';


--
-- Name: COLUMN courseacademicsubject.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseacademicsubject.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseacademicsubject.academicsubjectdescriptorid IS 'The intended major subject/s area of the course.';


--
-- Name: courseattemptresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseattemptresultdescriptor (
    courseattemptresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseattemptresultdescriptor OWNER TO postgres;

--
-- Name: TABLE courseattemptresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseattemptresultdescriptor IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN courseattemptresultdescriptor.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseattemptresultdescriptor.courseattemptresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursecompetencylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursecompetencylevel (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursecompetencylevel OWNER TO postgres;

--
-- Name: TABLE coursecompetencylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursecompetencylevel IS 'The competency levels defined to rate the student for the course.';


--
-- Name: COLUMN coursecompetencylevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursecompetencylevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursecompetencylevel.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.competencyleveldescriptorid IS 'The competency levels defined to rate the student for the course.';


--
-- Name: coursedefinedbydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursedefinedbydescriptor (
    coursedefinedbydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursedefinedbydescriptor OWNER TO postgres;

--
-- Name: TABLE coursedefinedbydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursedefinedbydescriptor IS 'Specifies whether the course was defined by the state education agency, local education agency, school, or national organization.';


--
-- Name: COLUMN coursedefinedbydescriptor.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursedefinedbydescriptor.coursedefinedbydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursegpaapplicabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursegpaapplicabilitydescriptor (
    coursegpaapplicabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursegpaapplicabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE coursegpaapplicabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursegpaapplicabilitydescriptor IS 'An indicator of whether or not this course being described is included in the computation of the student''s Grade Point Average, and if so, if it is weighted differently than regular courses.';


--
-- Name: COLUMN coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationcode (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseidentificationcode OWNER TO postgres;

--
-- Name: TABLE courseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationcode IS 'The code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN courseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: COLUMN courseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: courseidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationsystemdescriptor (
    courseidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE courseidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationsystemdescriptor IS 'This descriptor defines a standard code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courselearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningstandard (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningstandard OWNER TO postgres;

--
-- Name: TABLE courselearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningstandard IS 'Learning standard(s) to be taught by the course.';


--
-- Name: COLUMN courselearningstandard.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: courselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristic (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristic IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: COLUMN courselevelcharacteristic.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselevelcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: courselevelcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristicdescriptor (
    courselevelcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristicdescriptor IS 'The item for indication of the nature and difficulty of instruction: Remedial, Basic, Honors, Ap, IB, Dual Credit, CTE. etc.';


--
-- Name: COLUMN courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferedgradelevel (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferedgradelevel IS 'The grade levels in which the course is offered.';


--
-- Name: COLUMN courseofferedgradelevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseofferedgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered.';


--
-- Name: courseoffering; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseoffering (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    instructionaltimeplanned integer,
    localcoursetitle character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.courseoffering OWNER TO postgres;

--
-- Name: TABLE courseoffering; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseoffering IS 'This entity represents an entry in the course catalog of available courses offered by the school during a session.';


--
-- Name: COLUMN courseoffering.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseoffering.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseoffering.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseoffering.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseoffering.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseoffering.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseoffering.instructionaltimeplanned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.instructionaltimeplanned IS 'The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.';


--
-- Name: COLUMN courseoffering.localcoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the course title.';


--
-- Name: courseofferingcourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcourselevelcharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courseofferingcourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcourselevelcharacteristic IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.';


--
-- Name: courseofferingcurriculumused; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcurriculumused (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    curriculumuseddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcurriculumused OWNER TO postgres;

--
-- Name: TABLE courseofferingcurriculumused; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcurriculumused IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN courseofferingcurriculumused.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcurriculumused.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseofferingcurriculumused.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.curriculumuseddescriptorid IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: courseofferingofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingofferedgradelevel (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferingofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingofferedgradelevel IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.';


--
-- Name: COLUMN courseofferingofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseofferingofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.';


--
-- Name: courserepeatcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courserepeatcodedescriptor (
    courserepeatcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.courserepeatcodedescriptor OWNER TO postgres;

--
-- Name: TABLE courserepeatcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courserepeatcodedescriptor IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN courserepeatcodedescriptor.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courserepeatcodedescriptor.courserepeatcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursetranscript; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscript (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    alternativecoursetitle character varying(60),
    assigningorganizationidentificationcode character varying(60),
    attemptedcreditconversion numeric(9,2),
    attemptedcredits numeric(9,3),
    attemptedcredittypedescriptorid integer,
    coursecatalogurl character varying(255),
    courserepeatcodedescriptorid integer,
    coursetitle character varying(60),
    earnedcreditconversion numeric(9,2),
    earnedcredits numeric(9,3),
    earnedcredittypedescriptorid integer,
    externaleducationorganizationid bigint,
    externaleducationorganizationnameofinstitution character varying(75),
    finallettergradeearned character varying(20),
    finalnumericgradeearned numeric(9,2),
    methodcreditearneddescriptorid integer,
    responsibleteacherstaffusi integer,
    whentakengradeleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.coursetranscript OWNER TO postgres;

--
-- Name: TABLE coursetranscript; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscript IS 'This entity is the final record of a student''s performance in their courses at the end of a semester or school year.';


--
-- Name: COLUMN coursetranscript.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscript.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscript.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscript.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscript.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscript.alternativecoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the CourseTitle.';


--
-- Name: COLUMN coursetranscript.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.assigningorganizationidentificationcode IS 'The organization code or name assigning the course identification code.';


--
-- Name: COLUMN coursetranscript.attemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.attemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.attemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: COLUMN coursetranscript.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courserepeatcodedescriptorid IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN coursetranscript.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).';


--
-- Name: COLUMN coursetranscript.earnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.earnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationnameofinstitution IS 'Name of the external institution where the student completed the course; to be used only when the reference external education organization is not available.';


--
-- Name: COLUMN coursetranscript.finallettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finallettergradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.finalnumericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finalnumericgradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.methodcreditearneddescriptorid IS 'The method the credits were earned.';


--
-- Name: COLUMN coursetranscript.responsibleteacherstaffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.responsibleteacherstaffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN coursetranscript.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.whentakengradeleveldescriptorid IS 'Student''s grade level at time of course.';


--
-- Name: coursetranscriptacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptacademicsubject (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptacademicsubject OWNER TO postgres;

--
-- Name: TABLE coursetranscriptacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptacademicsubject IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptacademicsubject.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptacademicsubject.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.academicsubjectdescriptorid IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptalternativecourseidentificationcode (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptalternativecourseidentificationcode OWNER TO postgres;

--
-- Name: TABLE coursetranscriptalternativecourseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptalternativecourseidentificationcode IS 'The code that identifies the course, course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: coursetranscriptcreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptcreditcategory (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    creditcategorydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptcreditcategory OWNER TO postgres;

--
-- Name: TABLE coursetranscriptcreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptcreditcategory IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptcreditcategory.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptcreditcategory.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptcreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: coursetranscriptearnedadditionalcredits; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptearnedadditionalcredits (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    additionalcredittypedescriptorid integer NOT NULL,
    credits numeric(9,3) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptearnedadditionalcredits OWNER TO postgres;

--
-- Name: TABLE coursetranscriptearnedadditionalcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptearnedadditionalcredits IS 'The number of additional credits a student attempted and could earn for successfully completing a given course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.credits IS 'The value of credits or units of value awarded for the completion of a course';


--
-- Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptpartialcoursetranscriptawards (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    awarddate date NOT NULL,
    earnedcredits numeric(9,3) NOT NULL,
    lettergradeearned character varying(20),
    methodcreditearneddescriptorid integer,
    numericgradeearned character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptpartialcoursetranscriptawards OWNER TO postgres;

--
-- Name: TABLE coursetranscriptpartialcoursetranscriptawards; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptpartialcoursetranscriptawards IS 'A collection of partial credits and/or grades a student earned against the course over the session, used when awards of credit are incremental.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.awarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.awarddate IS 'The date the partial credits and/or grades were awarded or earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.earnedcredits IS 'The number of credits a student earned for completing a given course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.lettergradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid IS 'The method the credits were earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.numericgradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: coursetranscriptprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptprogram (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptprogram OWNER TO postgres;

--
-- Name: TABLE coursetranscriptprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptprogram IS 'The program(s) that the student participated in the context of the course.';


--
-- Name: COLUMN coursetranscriptprogram.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptprogram.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptprogram.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptprogram.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptprogram.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptprogram.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptprogram.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptprogram.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN coursetranscriptprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: coursetranscriptsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptsection (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptsection OWNER TO postgres;

--
-- Name: TABLE coursetranscriptsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptsection IS 'The section(s) associated with the course transcript.';


--
-- Name: COLUMN coursetranscriptsection.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptsection.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptsection.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptsection.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptsection.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptsection.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN coursetranscriptsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN coursetranscriptsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN coursetranscriptsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: credential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credential (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    credentialfielddescriptorid integer,
    credentialtypedescriptorid integer NOT NULL,
    effectivedate date,
    expirationdate date,
    issuancedate date NOT NULL,
    namespace character varying(255) NOT NULL,
    teachingcredentialbasisdescriptorid integer,
    teachingcredentialdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.credential OWNER TO postgres;

--
-- Name: TABLE credential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN credential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credential.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialfielddescriptorid IS 'The field of certification for the certificate (e.g., Mathematics, Music).';


--
-- Name: COLUMN credential.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialtypedescriptorid IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credential.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.effectivedate IS 'The year, month and day on which an active credential held by an individual was issued.';


--
-- Name: COLUMN credential.expirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.expirationdate IS 'The month, day, and year on which an active credential held by an individual will expire.';


--
-- Name: COLUMN credential.issuancedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.issuancedate IS 'The month, day, and year on which an active credential was issued to an individual.';


--
-- Name: COLUMN credential.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.namespace IS 'Namespace for the credential.';


--
-- Name: COLUMN credential.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialbasisdescriptorid IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN credential.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialdescriptorid IS 'An indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: credentialacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialacademicsubject (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialacademicsubject OWNER TO postgres;

--
-- Name: TABLE credentialacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialacademicsubject IS 'The academic subjects to which the credential pertains.';


--
-- Name: COLUMN credentialacademicsubject.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialacademicsubject.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.academicsubjectdescriptorid IS 'The academic subjects to which the credential pertains.';


--
-- Name: credentialendorsement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialendorsement (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    credentialendorsement character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialendorsement OWNER TO postgres;

--
-- Name: TABLE credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: COLUMN credentialendorsement.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialendorsement.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialendorsement.credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: credentialfielddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialfielddescriptor (
    credentialfielddescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialfielddescriptor OWNER TO postgres;

--
-- Name: TABLE credentialfielddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialfielddescriptor IS 'This descriptor defines the fields of certification that the state education agency offers to teachers.';


--
-- Name: COLUMN credentialfielddescriptor.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialfielddescriptor.credentialfielddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialgradelevel (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialgradelevel OWNER TO postgres;

--
-- Name: TABLE credentialgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialgradelevel IS 'The grade level(s) certified for teaching.';


--
-- Name: COLUMN credentialgradelevel.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialgradelevel.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.gradeleveldescriptorid IS 'The grade level(s) certified for teaching.';


--
-- Name: credentialtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialtypedescriptor (
    credentialtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialtypedescriptor OWNER TO postgres;

--
-- Name: TABLE credentialtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialtypedescriptor IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credentialtypedescriptor.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialtypedescriptor.credentialtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: creditcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.creditcategorydescriptor (
    creditcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.creditcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE creditcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.creditcategorydescriptor IS 'A categorization for the course transcript credits.';


--
-- Name: COLUMN creditcategorydescriptor.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.creditcategorydescriptor.creditcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credittypedescriptor (
    credittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credittypedescriptor OWNER TO postgres;

--
-- Name: TABLE credittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credittypedescriptor IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN credittypedescriptor.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credittypedescriptor.credittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cteprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cteprogramservicedescriptor (
    cteprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cteprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE cteprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cteprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a CTE program.';


--
-- Name: COLUMN cteprogramservicedescriptor.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cteprogramservicedescriptor.cteprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: curriculumuseddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.curriculumuseddescriptor (
    curriculumuseddescriptorid integer NOT NULL
);


ALTER TABLE edfi.curriculumuseddescriptor OWNER TO postgres;

--
-- Name: TABLE curriculumuseddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.curriculumuseddescriptor IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN curriculumuseddescriptor.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.curriculumuseddescriptor.curriculumuseddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: deliverymethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.deliverymethoddescriptor (
    deliverymethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.deliverymethoddescriptor OWNER TO postgres;

--
-- Name: TABLE deliverymethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.deliverymethoddescriptor IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN deliverymethoddescriptor.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.deliverymethoddescriptor.deliverymethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptor (
    descriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    codevalue character varying(50) NOT NULL,
    shortdescription character varying(75) NOT NULL,
    description character varying(1024),
    priordescriptorid integer,
    effectivebegindate date,
    effectiveenddate date,
    discriminator character varying(128),
    uri character varying(306) GENERATED ALWAYS AS ((((namespace)::text || '#'::text) || (codevalue)::text)) STORED,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.descriptor OWNER TO postgres;

--
-- Name: TABLE descriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptor IS 'This is the base entity for the descriptor pattern.';


--
-- Name: COLUMN descriptor.descriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.descriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.namespace IS 'A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.';


--
-- Name: COLUMN descriptor.codevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.codevalue IS 'A code or abbreviation that is used to refer to the descriptor.';


--
-- Name: COLUMN descriptor.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.shortdescription IS 'A shortened description for the descriptor.';


--
-- Name: COLUMN descriptor.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.description IS 'The description of the descriptor.';


--
-- Name: COLUMN descriptor.priordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.priordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.effectivebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectivebegindate IS 'The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.';


--
-- Name: COLUMN descriptor.effectiveenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectiveenddate IS 'The end date of the period when the descriptor is in effect.';


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.descriptor_descriptorid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.descriptor_descriptorid_seq OWNER TO postgres;

--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.descriptor_descriptorid_seq OWNED BY edfi.descriptor.descriptorid;


--
-- Name: descriptormapping; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptormapping (
    mappednamespace character varying(255) NOT NULL,
    mappedvalue character varying(50) NOT NULL,
    namespace character varying(255) NOT NULL,
    value character varying(50) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.descriptormapping OWNER TO postgres;

--
-- Name: TABLE descriptormapping; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptormapping IS 'A mapping of a descriptor value in one namespace to a descriptor value in another namespace. This can be used to exchange known contextual mappings of enumeration values.';


--
-- Name: COLUMN descriptormapping.mappednamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.mappednamespace IS 'The namespace of the descriptor value to which the from descriptor value is mapped to.';


--
-- Name: COLUMN descriptormapping.mappedvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.mappedvalue IS 'The descriptor value to which the from descriptor value is being mapped to.';


--
-- Name: COLUMN descriptormapping.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.namespace IS 'The namespace of the descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormapping.value; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.value IS 'The descriptor value that is being mapped to another value.';


--
-- Name: descriptormappingmodelentity; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptormappingmodelentity (
    mappednamespace character varying(255) NOT NULL,
    mappedvalue character varying(50) NOT NULL,
    namespace character varying(255) NOT NULL,
    value character varying(50) NOT NULL,
    modelentitydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.descriptormappingmodelentity OWNER TO postgres;

--
-- Name: TABLE descriptormappingmodelentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptormappingmodelentity IS 'The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.';


--
-- Name: COLUMN descriptormappingmodelentity.mappednamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.mappednamespace IS 'The namespace of the descriptor value to which the from descriptor value is mapped to.';


--
-- Name: COLUMN descriptormappingmodelentity.mappedvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.mappedvalue IS 'The descriptor value to which the from descriptor value is being mapped to.';


--
-- Name: COLUMN descriptormappingmodelentity.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.namespace IS 'The namespace of the descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormappingmodelentity.value; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.value IS 'The descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormappingmodelentity.modelentitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.modelentitydescriptorid IS 'The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.';


--
-- Name: diagnosisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diagnosisdescriptor (
    diagnosisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.diagnosisdescriptor OWNER TO postgres;

--
-- Name: TABLE diagnosisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diagnosisdescriptor IS 'This descriptor defines diagnoses that interventions are intended to target.';


--
-- Name: COLUMN diagnosisdescriptor.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diagnosisdescriptor.diagnosisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomaleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomaleveldescriptor (
    diplomaleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomaleveldescriptor OWNER TO postgres;

--
-- Name: TABLE diplomaleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomaleveldescriptor IS 'The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomaleveldescriptor.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomaleveldescriptor.diplomaleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomatypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomatypedescriptor (
    diplomatypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomatypedescriptor OWNER TO postgres;

--
-- Name: TABLE diplomatypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomatypedescriptor IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomatypedescriptor.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomatypedescriptor.diplomatypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydescriptor (
    disabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydescriptor IS 'This descriptor defines a student''s impairment.';


--
-- Name: COLUMN disabilitydescriptor.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydescriptor.disabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydesignationdescriptor (
    disabilitydesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydesignationdescriptor IS 'The type of disability designation (e.g., IDEA, Section 504).';


--
-- Name: COLUMN disabilitydesignationdescriptor.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydesignationdescriptor.disabilitydesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydeterminationsourcetypedescriptor (
    disabilitydeterminationsourcetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydeterminationsourcetypedescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydeterminationsourcetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydeterminationsourcetypedescriptor IS 'The source that provided the disability determination.';


--
-- Name: COLUMN disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineaction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineaction (
    disciplineactionidentifier character varying(36) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    actualdisciplineactionlength numeric(5,2),
    assignmentschoolid bigint,
    disciplineactionlength numeric(5,2),
    disciplineactionlengthdifferencereasondescriptorid integer,
    iepplacementmeetingindicator boolean,
    relatedtozerotolerancepolicy boolean,
    responsibilityschoolid bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineaction OWNER TO postgres;

--
-- Name: TABLE disciplineaction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineaction IS 'This event entity represents actions taken by an education organization after a disruptive event that is recorded as a discipline incident.';


--
-- Name: COLUMN disciplineaction.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineaction.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineaction.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineaction.actualdisciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.actualdisciplineactionlength IS 'Indicates the actual length in school days of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.assignmentschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.assignmentschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineaction.disciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlength IS 'The length of time in school days for the discipline action (e.g. removal, detention), if applicable.';


--
-- Name: COLUMN disciplineaction.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlengthdifferencereasondescriptorid IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.iepplacementmeetingindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.iepplacementmeetingindicator IS 'An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student''s Individualized Education Program (IEP) team to determine appropriate placement.';


--
-- Name: COLUMN disciplineaction.relatedtozerotolerancepolicy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.relatedtozerotolerancepolicy IS 'An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.';


--
-- Name: COLUMN disciplineaction.responsibilityschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.responsibilityschoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplineactiondiscipline; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactiondiscipline (
    disciplineactionidentifier character varying(36) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    disciplinedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactiondiscipline OWNER TO postgres;

--
-- Name: TABLE disciplineactiondiscipline; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactiondiscipline IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactiondiscipline.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedescriptorid IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionlengthdifferencereasondescriptor (
    disciplineactionlengthdifferencereasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineactionlengthdifferencereasondescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineactionlengthdifferencereasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionlengthdifferencereasondescriptor IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineactionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstaff (
    disciplineactionidentifier character varying(36) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstaff OWNER TO postgres;

--
-- Name: TABLE disciplineactionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstaff IS 'The staff responsible for enforcing the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (
    disciplineactionidentifier character varying(36) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE disciplineactionstudentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation IS 'A reference to the behavior(s) by the student that led or contributed to this specific action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplinedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplinedescriptor (
    disciplinedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplinedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplinedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplinedescriptor IS 'This descriptor defines the type of action or removal from the classroom used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplinedescriptor.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplinedescriptor.disciplinedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincident; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincident (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    casenumber character varying(20),
    incidentcost money,
    incidentdate date NOT NULL,
    incidentdescription character varying(1024),
    incidentlocationdescriptorid integer,
    incidenttime time without time zone,
    reportedtolawenforcement boolean,
    reporterdescriptiondescriptorid integer,
    reportername character varying(75),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineincident OWNER TO postgres;

--
-- Name: TABLE disciplineincident; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincident IS 'This event entity represents an occurrence of an infraction ranging from a minor behavioral problem that disrupts the orderly functioning of a school or classroom (such as tardiness) to a criminal act that results in the involvement of a law enforcement official (such as robbery). A single event (e.g., a fight) is one incident regardless of how many perpetrators or victims are involved. Discipline incidents are events classified as warranting discipline action.';


--
-- Name: COLUMN disciplineincident.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincident.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincident.casenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.casenumber IS 'The case number assigned to the DisciplineIncident by law enforcement or other organization.';


--
-- Name: COLUMN disciplineincident.incidentcost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentcost IS 'The value of any quantifiable monetary loss directly resulting from the discipline incident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.';


--
-- Name: COLUMN disciplineincident.incidentdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdate IS 'The month, day, and year on which the discipline incident occurred.';


--
-- Name: COLUMN disciplineincident.incidentdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdescription IS 'The description for an incident.';


--
-- Name: COLUMN disciplineincident.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentlocationdescriptorid IS 'Identifies where the discipline incident occurred and whether or not it occurred on school.';


--
-- Name: COLUMN disciplineincident.incidenttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidenttime IS 'An indication of the time of day the incident took place.';


--
-- Name: COLUMN disciplineincident.reportedtolawenforcement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportedtolawenforcement IS 'Indicator of whether the incident was reported to law enforcement.';


--
-- Name: COLUMN disciplineincident.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reporterdescriptiondescriptorid IS 'Information on the type of individual who reported the discipline incident. When known and/or if useful, use a more specific option code (e.g., "Counselor" rather than "Professional Staff").';


--
-- Name: COLUMN disciplineincident.reportername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportername IS 'Identifies the reporter of the discipline incident by name.';


--
-- Name: disciplineincidentbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentbehavior (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    behaviordescriptorid integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentbehavior OWNER TO postgres;

--
-- Name: TABLE disciplineincidentbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: disciplineincidentexternalparticipant; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentexternalparticipant (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentexternalparticipant OWNER TO postgres;

--
-- Name: TABLE disciplineincidentexternalparticipant; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentexternalparticipant IS 'Information on an individual involved in the discipline incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of an individual in the discipline incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: disciplineincidentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentparticipationcodedescriptor (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineincidentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineincidentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentparticipationcodedescriptor IS 'The role or type of participation of a person in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincidentweapon; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentweapon (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    weapondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentweapon OWNER TO postgres;

--
-- Name: TABLE disciplineincidentweapon; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentweapon IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: COLUMN disciplineincidentweapon.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentweapon.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentweapon.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.weapondescriptorid IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: educationalenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationalenvironmentdescriptor (
    educationalenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationalenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE educationalenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationalenvironmentdescriptor IS 'The setting in which a child receives education and related services.';


--
-- Name: COLUMN educationalenvironmentdescriptor.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationalenvironmentdescriptor.educationalenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontent (
    contentidentifier character varying(225) NOT NULL,
    additionalauthorsindicator boolean,
    contentclassdescriptorid integer,
    cost money,
    costratedescriptorid integer,
    description character varying(1024),
    interactivitystyledescriptorid integer,
    learningresourcemetadatauri character varying(255),
    learningstandardid character varying(60),
    namespace character varying(255) NOT NULL,
    publicationdate date,
    publicationyear smallint,
    publisher character varying(50),
    shortdescription character varying(75),
    timerequired character varying(30),
    userightsurl character varying(255),
    version character varying(10),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontent IS 'This entity represents materials for students or teachers that can be used for teaching, learning, research, and more. Education content includes full courses, course materials, modules, intervention descriptions, textbooks, streaming videos, tests, software, and any other tools, materials, or techniques used to support access to knowledge.';


--
-- Name: COLUMN educationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontent.additionalauthorsindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.additionalauthorsindicator IS 'Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation "et al".';


--
-- Name: COLUMN educationcontent.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentclassdescriptorid IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN educationcontent.cost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.cost IS 'An amount that has to be paid or spent to buy or obtain the education content.';


--
-- Name: COLUMN educationcontent.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.costratedescriptorid IS 'The rate by which the cost applies.';


--
-- Name: COLUMN educationcontent.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.description IS 'An extended written representation of the education content.';


--
-- Name: COLUMN educationcontent.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.interactivitystyledescriptorid IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN educationcontent.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontent.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN educationcontent.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.namespace IS 'Namespace for the education content.';


--
-- Name: COLUMN educationcontent.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN educationcontent.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN educationcontent.publisher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publisher IS 'The organization credited with publishing the resource.';


--
-- Name: COLUMN educationcontent.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.shortdescription IS 'A short description or name of the entity.';


--
-- Name: COLUMN educationcontent.timerequired; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.timerequired IS 'Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience.';


--
-- Name: COLUMN educationcontent.userightsurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.userightsurl IS 'The URL where the owner specifies permissions for using the resource.';


--
-- Name: COLUMN educationcontent.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.version IS 'The version identifier for the content.';


--
-- Name: educationcontentappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriategradelevel (
    contentidentifier character varying(225) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriategradelevel IS 'Grade levels for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriategradelevel.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriatesex (
    contentidentifier character varying(225) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriatesex OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriatesex IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriatesex.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.sexdescriptorid IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentauthor (
    contentidentifier character varying(225) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentauthor OWNER TO postgres;

--
-- Name: TABLE educationcontentauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentauthor IS 'The individual credited with the creation of the resource.';


--
-- Name: COLUMN educationcontentauthor.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.author IS 'The individual credited with the creation of the resource.';


--
-- Name: educationcontentderivativesourceeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceeducationcontent (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcecontentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceeducationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier IS 'A unique identifier for the education content.';


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcelearningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: educationcontentderivativesourceuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceuri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourceuri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceuri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN educationcontentderivativesourceuri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourceuri.derivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.derivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: educationcontentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentlanguage (
    contentidentifier character varying(225) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentlanguage OWNER TO postgres;

--
-- Name: TABLE educationcontentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentlanguage IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: COLUMN educationcontentlanguage.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.languagedescriptorid IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: educationorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganization (
    educationorganizationid bigint NOT NULL,
    nameofinstitution character varying(75) NOT NULL,
    operationalstatusdescriptorid integer,
    shortnameofinstitution character varying(75),
    website character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganization OWNER TO postgres;

--
-- Name: TABLE educationorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganization IS 'This entity represents any public or private institution, organization, or agency that provides instructional or support services to students or staff at any level.';


--
-- Name: COLUMN educationorganization.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganization.nameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.nameofinstitution IS 'The full, legally accepted name of the institution.';


--
-- Name: COLUMN educationorganization.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.operationalstatusdescriptorid IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: COLUMN educationorganization.shortnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.shortnameofinstitution IS 'A short name for the institution.';


--
-- Name: COLUMN educationorganization.website; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.website IS 'The public web site address (URL) for the education organization.';


--
-- Name: educationorganizationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddress (
    educationorganizationid bigint NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddress OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddress IS 'The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.';


--
-- Name: COLUMN educationorganizationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN educationorganizationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN educationorganizationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN educationorganizationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN educationorganizationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN educationorganizationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: educationorganizationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddressperiod (
    educationorganizationid bigint NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddressperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN educationorganizationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationassociationtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationassociationtypedescriptor (
    educationorganizationassociationtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationassociationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationassociationtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationassociationtypedescriptor IS 'The type of education organization association being represented.';


--
-- Name: COLUMN educationorganizationassociationtypedescriptor.educationorganizationassociationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationassociationtypedescriptor.educationorganizationassociationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategory (
    educationorganizationid bigint NOT NULL,
    educationorganizationcategorydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationcategory OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategory IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationcategorydescriptorid IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: educationorganizationcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategorydescriptor (
    educationorganizationcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategorydescriptor IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationcode (
    educationorganizationid bigint NOT NULL,
    educationorganizationidentificationsystemdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationcode OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationcode IS 'A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid IS 'The school system, state, or agency assigning the identification code.';


--
-- Name: COLUMN educationorganizationidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.identificationcode IS 'A unique number or alphanumeric code that is assigned to an education organization by a school, school system, state, or other agency or entity.';


--
-- Name: educationorganizationidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationsystemdescriptor (
    educationorganizationidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes by education organizations.';


--
-- Name: COLUMN educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicator (
    educationorganizationid bigint NOT NULL,
    indicatordescriptorid integer NOT NULL,
    designatedby character varying(60),
    indicatorgroupdescriptorid integer,
    indicatorleveldescriptorid integer,
    indicatorvalue character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicator OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicator IS 'An indicator or metric of an education organization.';


--
-- Name: COLUMN educationorganizationindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicator.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.designatedby IS 'The person, organization, or department that defined the metric.';


--
-- Name: COLUMN educationorganizationindicator.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorgroupdescriptorid IS 'The name for a group of indicators.';


--
-- Name: COLUMN educationorganizationindicator.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorleveldescriptorid IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN educationorganizationindicator.indicatorvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorvalue IS 'The value of the indicator or metric. The semantics of an empty value is "not submitted."';


--
-- Name: educationorganizationindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicatorperiod (
    educationorganizationid bigint NOT NULL,
    indicatordescriptorid integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicatorperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicatorperiod IS 'The time period or as-of date for the indicator.';


--
-- Name: COLUMN educationorganizationindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicatorperiod.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationinstitutiontelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinstitutiontelephone (
    educationorganizationid bigint NOT NULL,
    institutiontelephonenumbertypedescriptorid integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinstitutiontelephone OWNER TO postgres;

--
-- Name: TABLE educationorganizationinstitutiontelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinstitutiontelephone IS 'The 10-digit telephone number, including the area code, for the education entity.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: educationorganizationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinternationaladdress (
    educationorganizationid bigint NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE educationorganizationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinternationaladdress IS 'The set of elements that describes the international physical location of the education entity.';


--
-- Name: COLUMN educationorganizationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN educationorganizationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinterventionprescriptionassociation (
    educationorganizationid bigint NOT NULL,
    interventionprescriptioneducationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationinterventionprescriptionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinterventionprescriptionassociation IS 'This association indicates interventions made available by an education organization. Often, a district-level education organization purchases a set of intervention prescriptions and makes them available to its schools for use on demand.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.begindate IS 'The begin date of the period during which the intervention prescription is available.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.enddate IS 'The end date of the period during which the intervention prescription is available.';


--
-- Name: educationorganizationnetwork; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetwork (
    educationorganizationnetworkid bigint NOT NULL,
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationnetwork OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetwork; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetwork IS 'This entity is a self-organized membership network of peer-level education organizations intended to provide shared services or collective procurement.';


--
-- Name: COLUMN educationorganizationnetwork.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetwork.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.networkpurposedescriptorid IS 'The purpose(s) of the network (e.g., shared services, collective procurement).';


--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetworkassociation (
    educationorganizationnetworkid bigint NOT NULL,
    membereducationorganizationid bigint NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetworkassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetworkassociation IS 'Properties of the association between the education organization and its network(s).';


--
-- Name: COLUMN educationorganizationnetworkassociation.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetworkassociation.membereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.membereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationnetworkassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.begindate IS 'The date on which the education organization joined this network.';


--
-- Name: COLUMN educationorganizationnetworkassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.enddate IS 'The date on which the education organization left this network.';


--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationpeerassociation (
    educationorganizationid bigint NOT NULL,
    peereducationorganizationid bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationpeerassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationpeerassociation IS 'The association from an education organization to its peers.';


--
-- Name: COLUMN educationorganizationpeerassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationpeerassociation.peereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.peereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: educationplandescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationplandescriptor (
    educationplandescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationplandescriptor OWNER TO postgres;

--
-- Name: TABLE educationplandescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationplandescriptor IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN educationplandescriptor.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationplandescriptor.educationplandescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationservicecenter; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationservicecenter (
    educationservicecenterid bigint NOT NULL,
    stateeducationagencyid bigint
);


ALTER TABLE edfi.educationservicecenter OWNER TO postgres;

--
-- Name: TABLE educationservicecenter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationservicecenter IS 'This entity represents a regional, multi-services public agency authorized by state law to develop, manage and provide services, programs, or other support options (e.g., construction, food services, and technology services) to LEAs.';


--
-- Name: COLUMN educationservicecenter.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN educationservicecenter.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: electronicmailtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.electronicmailtypedescriptor (
    electronicmailtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.electronicmailtypedescriptor OWNER TO postgres;

--
-- Name: TABLE electronicmailtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.electronicmailtypedescriptor IS 'The type of email listed for an individual or organization.';


--
-- Name: COLUMN electronicmailtypedescriptor.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.electronicmailtypedescriptor.electronicmailtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eligibilitydelayreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eligibilitydelayreasondescriptor (
    eligibilitydelayreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.eligibilitydelayreasondescriptor OWNER TO postgres;

--
-- Name: TABLE eligibilitydelayreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eligibilitydelayreasondescriptor IS 'The reason why the eligibility determination was completed beyond the required timeframe.';


--
-- Name: COLUMN eligibilitydelayreasondescriptor.eligibilitydelayreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eligibilitydelayreasondescriptor.eligibilitydelayreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eligibilityevaluationtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eligibilityevaluationtypedescriptor (
    eligibilityevaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.eligibilityevaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE eligibilityevaluationtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eligibilityevaluationtypedescriptor IS 'Indicates if this is an initial evaluation or a reevaluation.';


--
-- Name: COLUMN eligibilityevaluationtypedescriptor.eligibilityevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eligibilityevaluationtypedescriptor.eligibilityevaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: employmentstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.employmentstatusdescriptor (
    employmentstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.employmentstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE employmentstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.employmentstatusdescriptor IS 'This descriptor defines the type of employment or contract.';


--
-- Name: COLUMN employmentstatusdescriptor.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.employmentstatusdescriptor.employmentstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: enrollmenttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.enrollmenttypedescriptor (
    enrollmenttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.enrollmenttypedescriptor OWNER TO postgres;

--
-- Name: TABLE enrollmenttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.enrollmenttypedescriptor IS 'The type of enrollment reflected by the StudentSchoolAssociation.';


--
-- Name: COLUMN enrollmenttypedescriptor.enrollmenttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.enrollmenttypedescriptor.enrollmenttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrygradelevelreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrygradelevelreasondescriptor (
    entrygradelevelreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrygradelevelreasondescriptor OWNER TO postgres;

--
-- Name: TABLE entrygradelevelreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrygradelevelreasondescriptor IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrytypedescriptor (
    entrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE entrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrytypedescriptor IS 'This descriptor defines the process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN entrytypedescriptor.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrytypedescriptor.entrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationdelayreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.evaluationdelayreasondescriptor (
    evaluationdelayreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.evaluationdelayreasondescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationdelayreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.evaluationdelayreasondescriptor IS 'Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe.';


--
-- Name: COLUMN evaluationdelayreasondescriptor.evaluationdelayreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationdelayreasondescriptor.evaluationdelayreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationrubricdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.evaluationrubricdimension (
    evaluationrubricrating integer NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationelementtitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    evaluationcriteriondescription character varying(1024) NOT NULL,
    evaluationrubricratingleveldescriptorid integer,
    rubricdimensionsortorder integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.evaluationrubricdimension OWNER TO postgres;

--
-- Name: TABLE evaluationrubricdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.evaluationrubricdimension IS 'The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric evaluation level.';


--
-- Name: COLUMN evaluationrubricdimension.evaluationrubricrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.evaluationrubricrating IS 'The numeric rating associated with the evaluation rubric dimension.';


--
-- Name: COLUMN evaluationrubricdimension.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationrubricdimension.programevaluationelementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programevaluationelementtitle IS 'The name or title of the program evaluation element.';


--
-- Name: COLUMN evaluationrubricdimension.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN evaluationrubricdimension.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN evaluationrubricdimension.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN evaluationrubricdimension.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN evaluationrubricdimension.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN evaluationrubricdimension.evaluationcriteriondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.evaluationcriteriondescription IS 'The evaluation criterion description for the evaluation rubric dimension.';


--
-- Name: COLUMN evaluationrubricdimension.evaluationrubricratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.evaluationrubricratingleveldescriptorid IS 'The rating level achieved for the evaluation rubric dimension.';


--
-- Name: COLUMN evaluationrubricdimension.rubricdimensionsortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.evaluationrubricdimension.rubricdimensionsortorder IS 'The sort order of the rubric dimension.';


--
-- Name: eventcircumstancedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eventcircumstancedescriptor (
    eventcircumstancedescriptorid integer NOT NULL
);


ALTER TABLE edfi.eventcircumstancedescriptor OWNER TO postgres;

--
-- Name: TABLE eventcircumstancedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eventcircumstancedescriptor IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN eventcircumstancedescriptor.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eventcircumstancedescriptor.eventcircumstancedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: exitwithdrawtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.exitwithdrawtypedescriptor (
    exitwithdrawtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.exitwithdrawtypedescriptor OWNER TO postgres;

--
-- Name: TABLE exitwithdrawtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.exitwithdrawtypedescriptor IS 'This descriptor defines the circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: feederschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.feederschoolassociation (
    begindate date NOT NULL,
    feederschoolid bigint NOT NULL,
    schoolid bigint NOT NULL,
    enddate date,
    feederrelationshipdescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: TABLE feederschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.feederschoolassociation IS 'The association from feeder school to the receiving school.';


--
-- Name: COLUMN feederschoolassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.begindate IS 'The month, day, and year of the first day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.enddate IS 'The month, day, and year of the last day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederrelationshipdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederrelationshipdescription IS 'Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.';


--
-- Name: financialcollectiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.financialcollectiondescriptor (
    financialcollectiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.financialcollectiondescriptor OWNER TO postgres;

--
-- Name: TABLE financialcollectiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.financialcollectiondescriptor IS 'The accounting period or grouping for which financial information is collected.';


--
-- Name: COLUMN financialcollectiondescriptor.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.financialcollectiondescriptor.financialcollectiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: functiondimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.functiondimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.functiondimension OWNER TO postgres;

--
-- Name: TABLE functiondimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.functiondimension IS 'The NCES function accounting dimension representing an expenditure. The function describes the activity for which a service or material object is acquired. The functions of a school district are generally classified into five broad areas, including instruction, support services, operation of non-instructional services, facilities acquisition and construction, and debt service.';


--
-- Name: COLUMN functiondimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.code IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN functiondimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.fiscalyear IS 'The fiscal year for which the account function dimension is valid.';


--
-- Name: COLUMN functiondimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.codename IS 'A description of the account function dimension.';


--
-- Name: functiondimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.functiondimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.functiondimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE functiondimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.functiondimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN functiondimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.code IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN functiondimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.fiscalyear IS 'The fiscal year for which the account function dimension is valid.';


--
-- Name: COLUMN functiondimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: funddimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.funddimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.funddimension OWNER TO postgres;

--
-- Name: TABLE funddimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.funddimension IS 'The NCES fund accounting dimension. A fund is a fiscal and accounting entity with a self-balancing set of accounts recording cash and other financial resources, together with all related liabilities and residual equities or balances, and changes therein, which are segregated for the purpose of carrying on specific activities or attaining certain objectives in accordance with special regulations, restrictions, or limitations.';


--
-- Name: COLUMN funddimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.code IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN funddimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.fiscalyear IS 'The fiscal year for which the account fund dimension is valid.';


--
-- Name: COLUMN funddimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.codename IS 'A description of the account fund dimension.';


--
-- Name: funddimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.funddimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.funddimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE funddimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.funddimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN funddimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.code IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN funddimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.fiscalyear IS 'The fiscal year for which the account fund dimension is valid.';


--
-- Name: COLUMN funddimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    reasonexiteddescriptorid integer,
    servedoutsideofregularsession boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociation IS 'This association base class represents the basic relationship between students and programs.';


--
-- Name: COLUMN generalstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.enddate IS 'The month, day, and year on which the student exited the program or stopped receiving services.';


--
-- Name: COLUMN generalstudentprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.reasonexiteddescriptorid IS 'The reason the student left the program within a school or district.';


--
-- Name: COLUMN generalstudentprogramassociation.servedoutsideofregularsession; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.servedoutsideofregularsession IS 'Indicates whether the student received services during the summer session or between sessions.';


--
-- Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociationprogramparticipationstatus (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    participationstatusdescriptorid integer NOT NULL,
    statusbegindate date NOT NULL,
    designatedby character varying(60),
    statusenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociationprogramparticipationstatus OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociationprogramparticipationstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociationprogramparticipationstatus IS 'The status of the student''s program participation.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid IS 'The student''s program participation status.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusbegindate IS 'The date the student''s program participation status began.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.designatedby IS 'The person, organization, or department that designated the participation status.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusenddate IS 'The date the student''s program participation status ended.';


--
-- Name: grade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.grade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    currentgradeasofdate date,
    currentgradeindicator boolean,
    diagnosticstatement character varying(1024),
    gradeearneddescription character varying(64),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    performancebaseconversiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.grade OWNER TO postgres;

--
-- Name: TABLE grade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.grade IS 'This educational entity represents an overall score or assessment tied to a course over a period of time (i.e., the grading period). Student grades are usually a compilation of marks and other scores.';


--
-- Name: COLUMN grade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN grade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN grade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN grade.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN grade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN grade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN grade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN grade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN grade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN grade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN grade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN grade.currentgradeasofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.currentgradeasofdate IS 'As-Of date for a grade posted as the current grade.';


--
-- Name: COLUMN grade.currentgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.currentgradeindicator IS 'An indicator that the posted grade is an interim grade for the grading period and not the final grade.';


--
-- Name: COLUMN grade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN grade.gradeearneddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradeearneddescription IS 'A description of the grade earned by the learner.';


--
-- Name: COLUMN grade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.performancebaseconversiondescriptorid IS 'A conversion of the level to a standard set of performance levels.';


--
-- Name: gradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentry (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    dateassigned date NOT NULL,
    description character varying(1024),
    duedate date,
    duetime time without time zone,
    gradebookentrytypedescriptorid integer,
    gradingperioddescriptorid integer,
    gradingperiodname character varying(60),
    localcoursecode character varying(60),
    maxpoints numeric(9,2),
    schoolid bigint,
    schoolyear smallint,
    sectionidentifier character varying(255),
    sessionname character varying(60),
    sourcesectionidentifier character varying(255) NOT NULL,
    title character varying(100) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradebookentry OWNER TO postgres;

--
-- Name: TABLE gradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentry IS 'This entity represents an assignment, homework, or classroom assessment to be recorded in a gradebook.';


--
-- Name: COLUMN gradebookentry.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN gradebookentry.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN gradebookentry.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentry.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.description IS 'A description of the assignment, homework, or classroom assessment.';


--
-- Name: COLUMN gradebookentry.duedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duedate IS 'The date the assignment, homework, or assessment is due.';


--
-- Name: COLUMN gradebookentry.duetime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duetime IS 'The time the assignment, homework, or assessment is due.';


--
-- Name: COLUMN gradebookentry.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentrytypedescriptorid IS 'The type of the gradebook entry.';


--
-- Name: COLUMN gradebookentry.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN gradebookentry.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN gradebookentry.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentry.maxpoints; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.maxpoints IS 'The maximum number of points  that can be earned for the submission.';


--
-- Name: COLUMN gradebookentry.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentry.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradebookentry.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN gradebookentry.sourcesectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sourcesectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.title IS 'The name or title of the activity to be recorded in the gradebook entry.';


--
-- Name: gradebookentrylearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrylearningstandard (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradebookentrylearningstandard OWNER TO postgres;

--
-- Name: TABLE gradebookentrylearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrylearningstandard IS 'LearningStandard(s) associated with the gradebook entry.';


--
-- Name: COLUMN gradebookentrylearningstandard.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN gradebookentrylearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN gradebookentrylearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: gradebookentrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrytypedescriptor (
    gradebookentrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradebookentrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradebookentrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrytypedescriptor IS 'The type of the gradebook entry; for example, homework, assignment, quiz, unit test, oral presentation, etc.';


--
-- Name: COLUMN gradebookentrytypedescriptor.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrytypedescriptor.gradebookentrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradelearningstandardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradelearningstandardgrade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    diagnosticstatement character varying(1024),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    performancebaseconversiondescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradelearningstandardgrade OWNER TO postgres;

--
-- Name: TABLE gradelearningstandardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradelearningstandardgrade IS 'A collection of learning standards associated with the grade.';


--
-- Name: COLUMN gradelearningstandardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN gradelearningstandardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradelearningstandardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradelearningstandardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradelearningstandardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN gradelearningstandardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN gradelearningstandardgrade.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradelearningstandardgrade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN gradelearningstandardgrade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.performancebaseconversiondescriptorid IS 'A performance level that describes the student proficiency.';


--
-- Name: gradeleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradeleveldescriptor (
    gradeleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradeleveldescriptor OWNER TO postgres;

--
-- Name: TABLE gradeleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradeleveldescriptor IS 'This descriptor defines the set of grade levels. The map to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradeleveldescriptor.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradeleveldescriptor.gradeleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradepointaveragetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradepointaveragetypedescriptor (
    gradepointaveragetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradepointaveragetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradepointaveragetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradepointaveragetypedescriptor IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradetypedescriptor (
    gradetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradetypedescriptor IS 'The type of grade in a report card or transcript (e.g., Final, Exam, Grading Period).';


--
-- Name: COLUMN gradetypedescriptor.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradetypedescriptor.gradetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    periodsequence integer,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradingperiod OWNER TO postgres;

--
-- Name: TABLE gradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperiod IS 'This entity represents the time span for which grades are reported.';


--
-- Name: COLUMN gradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN gradingperiod.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN gradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradingperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.begindate IS 'Month, day, and year of the first day of the grading period.';


--
-- Name: COLUMN gradingperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.enddate IS 'Month, day, and year of the last day of the grading period.';


--
-- Name: COLUMN gradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradingperiod.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.totalinstructionaldays IS 'Total days available for educational instruction during the grading period.';


--
-- Name: gradingperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperioddescriptor (
    gradingperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradingperioddescriptor OWNER TO postgres;

--
-- Name: TABLE gradingperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperioddescriptor IS 'This descriptor defines the state''s name of the period for which grades are reported. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradingperioddescriptor.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperioddescriptor.gradingperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: graduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplan (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    individualplan boolean,
    totalrequiredcreditconversion numeric(9,2),
    totalrequiredcredits numeric(9,3) NOT NULL,
    totalrequiredcredittypedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.graduationplan OWNER TO postgres;

--
-- Name: TABLE graduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplan IS 'This entity is a plan outlining the required credits, credits by subject, credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.';


--
-- Name: COLUMN graduationplan.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplan.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplan.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplan.individualplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.individualplan IS 'An indicator of whether the graduation plan is tailored for an individual.';


--
-- Name: COLUMN graduationplan.totalrequiredcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplan.totalrequiredcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplan.totalrequiredcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: graduationplancreditsbycourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycourse (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    coursesetname character varying(120) NOT NULL,
    creditconversion numeric(9,2),
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    whentakengradeleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycourse IS 'The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbycourse.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.whentakengradeleveldescriptorid IS 'The grade level when the student is planned to take the course.';


--
-- Name: graduationplancreditsbycoursecourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycoursecourse (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    coursesetname character varying(120) NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid bigint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycoursecourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycoursecourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycoursecourse IS 'The course reference that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: graduationplancreditsbycreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycreditcategory (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    creditcategorydescriptorid integer NOT NULL,
    creditconversion numeric(9,2),
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycreditcategory OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycreditcategory IS 'The total credits required for graduation based on the credit category.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: graduationplancreditsbysubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbysubject (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    creditconversion numeric(9,2),
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbysubject OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbysubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbysubject IS 'The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements.';


--
-- Name: COLUMN graduationplancreditsbysubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbysubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.academicsubjectdescriptorid IS 'The intended major subject area of the graduation requirement.';


--
-- Name: COLUMN graduationplancreditsbysubject.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbysubject.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbysubject.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: graduationplanrequiredassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessment (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessment OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessment IS 'The assessments and associated required score and performance level needed to satisfy graduation requirements.';


--
-- Name: COLUMN graduationplanrequiredassessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentperformancelevel (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    performanceleveldescriptorid integer NOT NULL,
    performancelevelindicatorname character varying(60),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentperformancelevel IS 'Performance level required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplanrequiredassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentscore (
    educationorganizationid bigint NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentscore OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentscore IS 'Score required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplantypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplantypedescriptor (
    graduationplantypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.graduationplantypedescriptor OWNER TO postgres;

--
-- Name: TABLE graduationplantypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplantypedescriptor IS 'This descriptor defines the set of graduation plan types.';


--
-- Name: COLUMN graduationplantypedescriptor.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplantypedescriptor.graduationplantypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gunfreeschoolsactreportingstatusdescriptor (
    gunfreeschoolsactreportingstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.gunfreeschoolsactreportingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE gunfreeschoolsactreportingstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gunfreeschoolsactreportingstatusdescriptor IS 'An indication of whether the school or local education agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprimarynighttimeresidencedescriptor (
    homelessprimarynighttimeresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprimarynighttimeresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprimarynighttimeresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprimarynighttimeresidencedescriptor IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprogramservicedescriptor (
    homelessprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a homeless program.';


--
-- Name: COLUMN homelessprogramservicedescriptor.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprogramservicedescriptor.homelessprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: ideapartdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.ideapartdescriptor (
    ideapartdescriptorid integer NOT NULL
);


ALTER TABLE edfi.ideapartdescriptor OWNER TO postgres;

--
-- Name: TABLE ideapartdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.ideapartdescriptor IS 'Indicates if the evaluation is done under Part B IDEA or Part C IDEA.';


--
-- Name: COLUMN ideapartdescriptor.ideapartdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.ideapartdescriptor.ideapartdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: identificationdocumentusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.identificationdocumentusedescriptor (
    identificationdocumentusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.identificationdocumentusedescriptor OWNER TO postgres;

--
-- Name: TABLE identificationdocumentusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.identificationdocumentusedescriptor IS 'Identifies the type of use given to an identification document.';


--
-- Name: COLUMN identificationdocumentusedescriptor.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.identificationdocumentusedescriptor.identificationdocumentusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: incidentlocationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.incidentlocationdescriptor (
    incidentlocationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.incidentlocationdescriptor OWNER TO postgres;

--
-- Name: TABLE incidentlocationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.incidentlocationdescriptor IS 'Identifies where the incident occurred and whether or not it occurred on school property.';


--
-- Name: COLUMN incidentlocationdescriptor.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.incidentlocationdescriptor.incidentlocationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatordescriptor (
    indicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatordescriptor OWNER TO postgres;

--
-- Name: TABLE indicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatordescriptor IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN indicatordescriptor.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatordescriptor.indicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorgroupdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorgroupdescriptor (
    indicatorgroupdescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorgroupdescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorgroupdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorgroupdescriptor IS 'The name for a group of indicators.';


--
-- Name: COLUMN indicatorgroupdescriptor.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorgroupdescriptor.indicatorgroupdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorleveldescriptor (
    indicatorleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorleveldescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorleveldescriptor IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN indicatorleveldescriptor.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorleveldescriptor.indicatorleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: institutiontelephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.institutiontelephonenumbertypedescriptor (
    institutiontelephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.institutiontelephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE institutiontelephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.institutiontelephonenumbertypedescriptor IS 'The type of communication number listed for an organization.';


--
-- Name: COLUMN institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interactivitystyledescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interactivitystyledescriptor (
    interactivitystyledescriptorid integer NOT NULL
);


ALTER TABLE edfi.interactivitystyledescriptor OWNER TO postgres;

--
-- Name: TABLE interactivitystyledescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interactivitystyledescriptor IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN interactivitystyledescriptor.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interactivitystyledescriptor.interactivitystyledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccessdescriptor (
    internetaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccessdescriptor IS 'The type of Internet access available.';


--
-- Name: COLUMN internetaccessdescriptor.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccessdescriptor.internetaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccesstypeinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccesstypeinresidencedescriptor (
    internetaccesstypeinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccesstypeinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccesstypeinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccesstypeinresidencedescriptor IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetperformanceinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetperformanceinresidencedescriptor (
    internetperformanceinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetperformanceinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetperformanceinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetperformanceinresidencedescriptor IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: COLUMN internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: intervention; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.intervention (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    begindate date NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    enddate date,
    interventionclassdescriptorid integer NOT NULL,
    maxdosage integer,
    mindosage integer,
    namespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.intervention OWNER TO postgres;

--
-- Name: TABLE intervention; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.intervention IS 'An implementation of an instructional approach focusing on the specific techniques and materials used to teach a given subject.';


--
-- Name: COLUMN intervention.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN intervention.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN intervention.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.begindate IS 'The start date for the intervention implementation.';


--
-- Name: COLUMN intervention.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.deliverymethoddescriptorid IS 'The way in which an intervention was implemented.';


--
-- Name: COLUMN intervention.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.enddate IS 'The end date for the intervention implementation.';


--
-- Name: COLUMN intervention.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN intervention.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.maxdosage IS 'The maximum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.mindosage IS 'The minimum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.namespace IS 'Namespace for the intervention.';


--
-- Name: interventionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriategradelevel (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriategradelevel IS 'Grade levels for the intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriategradelevel.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the intervention. If omitted, considered generally applicable.';


--
-- Name: interventionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriatesex (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriatesex IS 'Sexes for the intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriatesex.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.sexdescriptorid IS 'Sexes for the intervention. If omitted, considered generally applicable.';


--
-- Name: interventionclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionclassdescriptor (
    interventionclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventionclassdescriptor OWNER TO postgres;

--
-- Name: TABLE interventionclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionclassdescriptor IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionclassdescriptor.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionclassdescriptor.interventionclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventiondiagnosis (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventiondiagnosis IS 'Targeted purpose of the intervention.';


--
-- Name: COLUMN interventiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventiondiagnosis.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the intervention.';


--
-- Name: interventioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneducationcontent (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioneducationcontent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: interventioneffectivenessratingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneffectivenessratingdescriptor (
    interventioneffectivenessratingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventioneffectivenessratingdescriptor OWNER TO postgres;

--
-- Name: TABLE interventioneffectivenessratingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneffectivenessratingdescriptor IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Rating Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: COLUMN interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventioninterventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioninterventionprescription (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    interventionprescriptioneducationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioninterventionprescription OWNER TO postgres;

--
-- Name: TABLE interventioninterventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioninterventionprescription IS 'The reference to the intervention prescription being followed in this intervention implementation.';


--
-- Name: COLUMN interventioninterventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionlearningresourcemetadatauri (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionmeetingtime (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    endtime time without time zone NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionmeetingtime OWNER TO postgres;

--
-- Name: TABLE interventionmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionmeetingtime IS 'The times at which this intervention is scheduled to meet.';


--
-- Name: COLUMN interventionmeetingtime.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionmeetingtime.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN interventionmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: interventionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionpopulationserved (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionpopulationserved IS 'A subset of students that are the focus of the intervention.';


--
-- Name: COLUMN interventionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionpopulationserved.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention.';


--
-- Name: interventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescription (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    maxdosage integer,
    mindosage integer,
    namespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionprescription OWNER TO postgres;

--
-- Name: TABLE interventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescription IS 'This entity represents a formal prescription of an instructional approach focusing on the specific techniques and materials used to teach a given subject. This can be prescribed by academic research, an interventions vendor, or another entity.';


--
-- Name: COLUMN interventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescription.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionprescription.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionprescription.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.maxdosage IS 'The maximum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.mindosage IS 'The minimum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.namespace IS 'Namespace for the intervention.';


--
-- Name: interventionprescriptionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriategradelevel (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriategradelevel IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: interventionprescriptionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriatesex (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriatesex IS 'Sexes for the intervention prescription. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.sexdescriptorid IS 'Sexes for the intervention prescription. If omitted, considered generally applicable.';


--
-- Name: interventionprescriptiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptiondiagnosis (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventionprescriptiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptiondiagnosis IS 'Targeted purpose of the intervention prescription.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the intervention prescription.';


--
-- Name: interventionprescriptioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptioneducationcontent (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionprescriptioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionlearningresourcemetadatauri (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionprescriptionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionpopulationserved (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionpopulationserved IS 'A subset of students that are the focus of the intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention prescription.';


--
-- Name: interventionprescriptionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionuri (
    educationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionuri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionprescriptionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionuri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstaff (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstaff OWNER TO postgres;

--
-- Name: TABLE interventionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstaff IS 'Relates the staff member associated with the Intervention.';


--
-- Name: COLUMN interventionstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstaff.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: interventionstudy; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudy (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    interventionprescriptioneducationorganizationid bigint NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    participants integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionstudy OWNER TO postgres;

--
-- Name: TABLE interventionstudy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudy IS 'An experimental or quasi-experimental study of an intervention technique.';


--
-- Name: COLUMN interventionstudy.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudy.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionstudy.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionstudy.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionstudy.participants; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.participants IS 'The number of participants observed in the study.';


--
-- Name: interventionstudyappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriategradelevel (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriategradelevel IS 'Grade levels participating in this study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.gradeleveldescriptorid IS 'Grade levels participating in this study.';


--
-- Name: interventionstudyappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriatesex (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriatesex IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionstudyappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriatesex.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.sexdescriptorid IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: interventionstudyeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyeducationcontent (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyeducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionstudyeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionstudyeducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyeducationcontent.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: interventionstudyinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyinterventioneffectiveness (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE interventionstudyinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyinterventioneffectiveness IS 'Measurement of the effectiveness of the intervention study per diagnosis.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: interventionstudylearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudylearningresourcemetadatauri (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudylearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionstudylearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudylearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionstudypopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudypopulationserved (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudypopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionstudypopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudypopulationserved IS 'A subset of students that are the focus of the intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudypopulationserved.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention study.';


--
-- Name: interventionstudystateabbreviation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudystateabbreviation (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudystateabbreviation OWNER TO postgres;

--
-- Name: TABLE interventionstudystateabbreviation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudystateabbreviation IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: COLUMN interventionstudystateabbreviation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudystateabbreviation.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudystateabbreviation.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: interventionstudyuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyuri (
    educationorganizationid bigint NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyuri OWNER TO postgres;

--
-- Name: TABLE interventionstudyuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionstudyuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyuri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionuri (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionuri OWNER TO postgres;

--
-- Name: TABLE interventionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionuri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: languagedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languagedescriptor (
    languagedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languagedescriptor OWNER TO postgres;

--
-- Name: TABLE languagedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languagedescriptor IS 'This descriptor defines the language(s) that are spoken or written. It is strongly recommended that entries use only ISO 639-2 language codes: for CodeValue, use the 3 character code; for ShortDescription and Description use the full language name.';


--
-- Name: COLUMN languagedescriptor.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languagedescriptor.languagedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageinstructionprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageinstructionprogramservicedescriptor (
    languageinstructionprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageinstructionprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE languageinstructionprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageinstructionprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a language instruction program.';


--
-- Name: COLUMN languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageusedescriptor (
    languageusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageusedescriptor OWNER TO postgres;

--
-- Name: TABLE languageusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageusedescriptor IS 'The category denoting how a language is used.';


--
-- Name: COLUMN languageusedescriptor.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageusedescriptor.languageusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandard (
    learningstandardid character varying(60) NOT NULL,
    coursetitle character varying(60),
    description character varying(1024) NOT NULL,
    learningstandardcategorydescriptorid integer,
    learningstandarditemcode character varying(60),
    learningstandardscopedescriptorid integer,
    namespace character varying(255) NOT NULL,
    parentlearningstandardid character varying(60),
    successcriteria character varying(150),
    uri character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandard IS 'A statement that describes a specific competency or academic standard.';


--
-- Name: COLUMN learningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.coursetitle IS 'The official course title with which this learning standard is associated.';


--
-- Name: COLUMN learningstandard.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.description IS 'The text of the statement. The textual content that either describes a specific competency such as "Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions." or describes a less granular group of competencies within the taxonomy of the standards document, e.g. "Understand and apply the Pythagorean Theorem," or "Geometry".';


--
-- Name: COLUMN learningstandard.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardcategorydescriptorid IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandard.learningstandarditemcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandarditemcode IS 'A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).';


--
-- Name: COLUMN learningstandard.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardscopedescriptorid IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: COLUMN learningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.namespace IS 'The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.';


--
-- Name: COLUMN learningstandard.parentlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.parentlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning standard.';


--
-- Name: COLUMN learningstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.uri IS 'An unambiguous reference to the statement using a network-resolvable URI.';


--
-- Name: learningstandardacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardacademicsubject (
    learningstandardid character varying(60) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningstandardacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardacademicsubject IS 'Subject area for the learning standard.';


--
-- Name: COLUMN learningstandardacademicsubject.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.academicsubjectdescriptorid IS 'Subject area for the learning standard.';


--
-- Name: learningstandardcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcategorydescriptor (
    learningstandardcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcategorydescriptor IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandardcategorydescriptor.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcategorydescriptor.learningstandardcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandard (
    learningstandardid character varying(60) NOT NULL,
    begindate date,
    enddate date,
    mandatingeducationorganizationid bigint,
    publicationdate date,
    publicationstatusdescriptorid integer,
    publicationyear smallint,
    title character varying(75) NOT NULL,
    uri character varying(255),
    version character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandard IS 'The content standard from which the learning standard was derived.';


--
-- Name: COLUMN learningstandardcontentstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningstandardcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningstandardcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningstandardcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningstandardcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: learningstandardcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandardauthor (
    learningstandardid character varying(60) NOT NULL,
    author character varying(100) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningstandardcontentstandardauthor.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalenceassociation (
    namespace character varying(255) NOT NULL,
    sourcelearningstandardid character varying(60) NOT NULL,
    targetlearningstandardid character varying(60) NOT NULL,
    effectivedate date,
    learningstandardequivalencestrengthdescription character varying(255),
    learningstandardequivalencestrengthdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalenceassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalenceassociation IS 'Indicates a directional association of equivalence from a source to a target learning standard.';


--
-- Name: COLUMN learningstandardequivalenceassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.namespace IS 'The namespace of the organization that has created and owns the association.';


--
-- Name: COLUMN learningstandardequivalenceassociation.sourcelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.sourcelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.targetlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.targetlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.effectivedate IS 'The date that the association is considered to be applicable or effective.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription IS 'Captures supplemental information on the relationship. Recommended for use only when the match is partial.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: learningstandardequivalencestrengthdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalencestrengthdescriptor (
    learningstandardequivalencestrengthdescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardequivalencestrengthdescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalencestrengthdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalencestrengthdescriptor IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: COLUMN learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardgradelevel (
    learningstandardid character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardgradelevel OWNER TO postgres;

--
-- Name: TABLE learningstandardgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardgradelevel IS 'The grade levels for the specific learning standard.';


--
-- Name: COLUMN learningstandardgradelevel.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.gradeleveldescriptorid IS 'The grade levels for the specific learning standard.';


--
-- Name: learningstandardidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardidentificationcode (
    learningstandardid character varying(60) NOT NULL,
    contentstandardname character varying(65) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardidentificationcode OWNER TO postgres;

--
-- Name: TABLE learningstandardidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardidentificationcode IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a learning standard.';


--
-- Name: COLUMN learningstandardidentificationcode.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardidentificationcode.contentstandardname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.contentstandardname IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a Learning Standard.';


--
-- Name: learningstandardscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardscopedescriptor (
    learningstandardscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardscopedescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardscopedescriptor IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: COLUMN learningstandardscopedescriptor.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardscopedescriptor.learningstandardscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: levelofeducationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.levelofeducationdescriptor (
    levelofeducationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.levelofeducationdescriptor OWNER TO postgres;

--
-- Name: TABLE levelofeducationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.levelofeducationdescriptor IS 'This descriptor defines the different levels of education achievable.';


--
-- Name: COLUMN levelofeducationdescriptor.levelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.levelofeducationdescriptor.levelofeducationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensestatusdescriptor (
    licensestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE licensestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensestatusdescriptor IS 'This descriptor defines the license statuses.';


--
-- Name: COLUMN licensestatusdescriptor.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensestatusdescriptor.licensestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensetypedescriptor (
    licensetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensetypedescriptor OWNER TO postgres;

--
-- Name: TABLE licensetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensetypedescriptor IS 'This descriptor defines the type of a license.';


--
-- Name: COLUMN licensetypedescriptor.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensetypedescriptor.licensetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: limitedenglishproficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.limitedenglishproficiencydescriptor (
    limitedenglishproficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.limitedenglishproficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE limitedenglishproficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.limitedenglishproficiencydescriptor IS 'This descriptor defines the indications that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localaccount; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localaccount (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    accountname character varying(100),
    chartofaccountidentifier character varying(50) NOT NULL,
    chartofaccounteducationorganizationid bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localaccount OWNER TO postgres;

--
-- Name: TABLE localaccount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localaccount IS 'The set of account codes defined by an education organization for a fiscal year. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN localaccount.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localaccount.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localaccount.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localaccount.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.accountname IS 'A descriptive name for the account.';


--
-- Name: COLUMN localaccount.chartofaccountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.chartofaccountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN localaccount.chartofaccounteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.chartofaccounteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: localaccountreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localaccountreportingtag (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    tagvalue character varying(100),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localaccountreportingtag OWNER TO postgres;

--
-- Name: TABLE localaccountreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localaccountreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN localaccountreportingtag.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localaccountreportingtag.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localaccountreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localaccountreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.reportingtagdescriptorid IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN localaccountreportingtag.tagvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.tagvalue IS 'The value associated with the reporting tag.';


--
-- Name: localactual; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localactual (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localactual OWNER TO postgres;

--
-- Name: TABLE localactual; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localactual IS 'The set of local education agency or charter management organization expense or revenue amounts.';


--
-- Name: COLUMN localactual.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localactual.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localactual.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localactual.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localactual.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localactual.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localbudget; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localbudget (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localbudget OWNER TO postgres;

--
-- Name: TABLE localbudget; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localbudget IS 'The set of local education agency or charter management organization budget amounts.';


--
-- Name: COLUMN localbudget.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localbudget.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localbudget.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localbudget.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localbudget.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localbudget.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localcontractedstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localcontractedstaff (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localcontractedstaff OWNER TO postgres;

--
-- Name: TABLE localcontractedstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localcontractedstaff IS 'The set of local education agency or charter management organization contracted staff amounts.';


--
-- Name: COLUMN localcontractedstaff.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localcontractedstaff.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localcontractedstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localcontractedstaff.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localcontractedstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN localcontractedstaff.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localcontractedstaff.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localedescriptor (
    localedescriptorid integer NOT NULL
);


ALTER TABLE edfi.localedescriptor OWNER TO postgres;

--
-- Name: TABLE localedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localedescriptor IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN localedescriptor.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localedescriptor.localedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagency (
    localeducationagencyid bigint NOT NULL,
    charterstatusdescriptorid integer,
    educationservicecenterid bigint,
    localeducationagencycategorydescriptorid integer NOT NULL,
    parentlocaleducationagencyid bigint,
    stateeducationagencyid bigint
);


ALTER TABLE edfi.localeducationagency OWNER TO postgres;

--
-- Name: TABLE localeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagency IS 'This entity represents an administrative unit at the local level which exists primarily to operate schools or to contract for educational services. It includes school districts, charter schools, charter management organizations, or other local administrative organizations.';


--
-- Name: COLUMN localeducationagency.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN localeducationagency.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN localeducationagency.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencycategorydescriptorid IS 'The category of local education agency/district.';


--
-- Name: COLUMN localeducationagency.parentlocaleducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.parentlocaleducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: localeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyaccountability (
    localeducationagencyid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    gunfreeschoolsactreportingstatusdescriptorid integer,
    schoolchoiceimplementstatusdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE localeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for local education agencies.';


--
-- Name: COLUMN localeducationagencyaccountability.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid IS 'An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: localeducationagencycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencycategorydescriptor (
    localeducationagencycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.localeducationagencycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE localeducationagencycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencycategorydescriptor IS 'The category of local education agency/district. For example: Independent or Charter.';


--
-- Name: COLUMN localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyfederalfunds (
    localeducationagencyid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    innovativedollarsspent money,
    innovativedollarsspentstrategicpriorities money,
    innovativeprogramsfundsreceived money,
    schoolimprovementallocation money,
    schoolimprovementreservedfundspercentage numeric(5,4),
    stateassessmentadministrationfunding numeric(5,4),
    supplementaleducationalservicesfundsspent money,
    supplementaleducationalservicesperpupilexpenditure money,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE localeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN localeducationagencyfederalfunds.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspent IS 'The total Title V, Part A funds expended by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities IS 'The total amount of Title V, Part A funds expended by LEAs for the four strategic priorities.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativeprogramsfundsreceived; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativeprogramsfundsreceived IS 'The total Title V, Part A funds received by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementallocation IS 'The amount of Section 1003(a) and 1003(g) allocations to LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage IS 'An indication of the percentage of the Title I, Part A allocation that the SEA reserved in accordance with Section 1003(a) of ESEA and 200.100(a) of ED''s regulations governing the reservation of funds for school improvement under Section 1003(a) of ESEA.';


--
-- Name: COLUMN localeducationagencyfederalfunds.stateassessmentadministrationfunding; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.stateassessmentadministrationfunding IS 'The percentage of funds used to administer assessments required by Section 1111(b) or to carry out other activities described in Section 6111 and other activities related to ensuring that the state''s schools and LEAs are held accountable for results.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent IS 'The dollar amount spent on supplemental educational services during the school year under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure IS 'The maximum dollar amount that may be spent per child for expenditures related to supplemental educational services under Title I of the ESEA.';


--
-- Name: localencumbrance; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localencumbrance (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localencumbrance OWNER TO postgres;

--
-- Name: TABLE localencumbrance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localencumbrance IS 'The set of local education agency or charter management organization encumbrance amounts.';


--
-- Name: COLUMN localencumbrance.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localencumbrance.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localencumbrance.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localencumbrance.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localencumbrance.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localencumbrance.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localpayroll; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localpayroll (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localpayroll OWNER TO postgres;

--
-- Name: TABLE localpayroll; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localpayroll IS 'The set of local education agency or charter management organization payroll amounts.';


--
-- Name: COLUMN localpayroll.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localpayroll.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localpayroll.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localpayroll.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localpayroll.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN localpayroll.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localpayroll.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: location; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.location (
    classroomidentificationcode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    maximumnumberofseats integer,
    optimalnumberofseats integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.location OWNER TO postgres;

--
-- Name: TABLE location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.location IS 'This entity represents the physical space where students gather for a particular class/section. The location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students.';


--
-- Name: COLUMN location.classroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.classroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN location.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN location.maximumnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.maximumnumberofseats IS 'The most number of seats the class can maintain.';


--
-- Name: COLUMN location.optimalnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.optimalnumberofseats IS 'The number of seats that is most favorable to the class.';


--
-- Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.magnetspecialprogramemphasisschooldescriptor (
    magnetspecialprogramemphasisschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.magnetspecialprogramemphasisschooldescriptor OWNER TO postgres;

--
-- Name: TABLE magnetspecialprogramemphasisschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.magnetspecialprogramemphasisschooldescriptor IS 'A school that has been designed to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing or eliminating racial isolation; and/or to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: mediumofinstructiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.mediumofinstructiondescriptor (
    mediumofinstructiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.mediumofinstructiondescriptor OWNER TO postgres;

--
-- Name: TABLE mediumofinstructiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.mediumofinstructiondescriptor IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN mediumofinstructiondescriptor.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.mediumofinstructiondescriptor.mediumofinstructiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: methodcreditearneddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.methodcreditearneddescriptor (
    methodcreditearneddescriptorid integer NOT NULL
);


ALTER TABLE edfi.methodcreditearneddescriptor OWNER TO postgres;

--
-- Name: TABLE methodcreditearneddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.methodcreditearneddescriptor IS 'The method the credits were earned, for example:  Classroom, Examination, Transfer.';


--
-- Name: COLUMN methodcreditearneddescriptor.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.methodcreditearneddescriptor.methodcreditearneddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: migranteducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.migranteducationprogramservicedescriptor (
    migranteducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.migranteducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE migranteducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.migranteducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a migrant education program.';


--
-- Name: COLUMN migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: modelentitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.modelentitydescriptor (
    modelentitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.modelentitydescriptor OWNER TO postgres;

--
-- Name: TABLE modelentitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.modelentitydescriptor IS 'The class of a domain entity in the Ed-Fi data model.';


--
-- Name: COLUMN modelentitydescriptor.modelentitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.modelentitydescriptor.modelentitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: monitoreddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.monitoreddescriptor (
    monitoreddescriptorid integer NOT NULL
);


ALTER TABLE edfi.monitoreddescriptor OWNER TO postgres;

--
-- Name: TABLE monitoreddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.monitoreddescriptor IS 'This descriptor defines monitorization statuses for students who are no longer receiving language instruction program services.';


--
-- Name: COLUMN monitoreddescriptor.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.monitoreddescriptor.monitoreddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramdescriptor (
    neglectedordelinquentprogramdescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramdescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramdescriptor IS 'This descriptor defines the type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: COLUMN neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramservicedescriptor (
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a neglected or delinquent program.';


--
-- Name: COLUMN neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: networkpurposedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.networkpurposedescriptor (
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.networkpurposedescriptor OWNER TO postgres;

--
-- Name: TABLE networkpurposedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.networkpurposedescriptor IS 'The purpose(s) of the network, e.g. shared services, collective procurement, etc.';


--
-- Name: COLUMN networkpurposedescriptor.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.networkpurposedescriptor.networkpurposedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.objectdimension OWNER TO postgres;

--
-- Name: TABLE objectdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectdimension IS 'The NCES object accounting dimension representing an expenditure. Per the NCES definition, this classification is used to describe the service or commodity obtained as the result of a specific expenditure, such as salaries, benefits, tuition reimbursement, and so forth.';


--
-- Name: COLUMN objectdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.code IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN objectdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.fiscalyear IS 'The fiscal year for which the account object dimension is valid.';


--
-- Name: COLUMN objectdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.codename IS 'A description of the account object dimension.';


--
-- Name: objectdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE objectdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN objectdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.code IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN objectdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account object dimension is valid.';


--
-- Name: COLUMN objectdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: objectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    academicsubjectdescriptorid integer,
    description character varying(1024),
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    parentidentificationcode character varying(60),
    percentofassessment numeric(5,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.objectiveassessment OWNER TO postgres;

--
-- Name: TABLE objectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessment IS 'This entity represents subtests that assess specific learning objectives.';


--
-- Name: COLUMN objectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.academicsubjectdescriptorid IS 'The subject area of the objective assessment.';


--
-- Name: COLUMN objectiveassessment.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.description IS 'The description of the objective assessment (e.g., vocabulary, measurement, or geometry).';


--
-- Name: COLUMN objectiveassessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN objectiveassessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.nomenclature IS 'Reflects the specific nomenclature used for this level of objective assessment.';


--
-- Name: COLUMN objectiveassessment.parentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.parentidentificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.percentofassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.percentofassessment IS 'The percentage of the assessment that tests this objective.';


--
-- Name: objectiveassessmentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentitemidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentassessmentitem OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentassessmentitem IS 'References individual test items, if appropriate.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentitemidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentitemidentificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: objectiveassessmentlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentlearningstandard OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentlearningstandard IS 'Learning standard tested by this objective assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: objectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    performancelevelindicatorname character varying(60),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: objectiveassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    maximumscore character varying(35),
    minimumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentscore OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentscore IS 'Definition of the scores to be expected from this objective assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentscore.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: openstaffposition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffposition (
    educationorganizationid bigint NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    dateposted date NOT NULL,
    datepostingremoved date,
    employmentstatusdescriptorid integer NOT NULL,
    positiontitle character varying(100),
    postingresultdescriptorid integer,
    programassignmentdescriptorid integer,
    staffclassificationdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.openstaffposition OWNER TO postgres;

--
-- Name: TABLE openstaffposition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffposition IS 'This entity represents an open staff position that the education organization is seeking to fill.';


--
-- Name: COLUMN openstaffposition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffposition.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffposition.dateposted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.dateposted IS 'Date the open staff position was posted.';


--
-- Name: COLUMN openstaffposition.datepostingremoved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.datepostingremoved IS 'The date the posting was removed or filled.';


--
-- Name: COLUMN openstaffposition.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.employmentstatusdescriptorid IS 'Reflects the type of employment or contract desired for the position.';


--
-- Name: COLUMN openstaffposition.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN openstaffposition.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.postingresultdescriptorid IS 'Indication of whether the OpenStaffPosition was filled or retired without filling.';


--
-- Name: COLUMN openstaffposition.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.programassignmentdescriptorid IS 'The name of the program for which the open staff position will be assigned.';


--
-- Name: COLUMN openstaffposition.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: openstaffpositionacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositionacademicsubject (
    educationorganizationid bigint NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositionacademicsubject OWNER TO postgres;

--
-- Name: TABLE openstaffpositionacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositionacademicsubject IS 'The teaching field required for the open staff position.';


--
-- Name: COLUMN openstaffpositionacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositionacademicsubject.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffpositionacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.academicsubjectdescriptorid IS 'The teaching field required for the open staff position.';


--
-- Name: openstaffpositioninstructionalgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositioninstructionalgradelevel (
    educationorganizationid bigint NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositioninstructionalgradelevel OWNER TO postgres;

--
-- Name: TABLE openstaffpositioninstructionalgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositioninstructionalgradelevel IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.gradeleveldescriptorid IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: operationalstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalstatusdescriptor (
    operationalstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.operationalstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE operationalstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalstatusdescriptor IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: COLUMN operationalstatusdescriptor.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalstatusdescriptor.operationalstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: operationalunitdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalunitdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.operationalunitdimension OWNER TO postgres;

--
-- Name: TABLE operationalunitdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalunitdimension IS 'The NCES operational unit accounting dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.';


--
-- Name: COLUMN operationalunitdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.code IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN operationalunitdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.fiscalyear IS 'The fiscal year for which the account operational unit dimension is valid.';


--
-- Name: COLUMN operationalunitdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.codename IS 'A description of the account operational unit dimension.';


--
-- Name: operationalunitdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalunitdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.operationalunitdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE operationalunitdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalunitdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.code IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account operational unit dimension is valid.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: organizationdepartment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.organizationdepartment (
    organizationdepartmentid bigint NOT NULL,
    academicsubjectdescriptorid integer,
    parenteducationorganizationid bigint
);


ALTER TABLE edfi.organizationdepartment OWNER TO postgres;

--
-- Name: TABLE organizationdepartment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.organizationdepartment IS 'An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.';


--
-- Name: COLUMN organizationdepartment.organizationdepartmentid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.organizationdepartmentid IS 'The unique identification code for the organization department.';


--
-- Name: COLUMN organizationdepartment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.academicsubjectdescriptorid IS 'The intended major subject area of the department.';


--
-- Name: COLUMN organizationdepartment.parenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.parenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: othernametypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.othernametypedescriptor (
    othernametypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.othernametypedescriptor OWNER TO postgres;

--
-- Name: TABLE othernametypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.othernametypedescriptor IS 'The types of alternate names for a person.';


--
-- Name: COLUMN othernametypedescriptor.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.othernametypedescriptor.othernametypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: participationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationdescriptor (
    participationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationdescriptor OWNER TO postgres;

--
-- Name: TABLE participationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationdescriptor IS 'This descriptor defines participation in a yearly English language assessment.';


--
-- Name: COLUMN participationdescriptor.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationdescriptor.participationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: participationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationstatusdescriptor (
    participationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE participationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationstatusdescriptor IS 'The student''s program participation status.';


--
-- Name: COLUMN participationstatusdescriptor.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationstatusdescriptor.participationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performancebaseconversiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performancebaseconversiondescriptor (
    performancebaseconversiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.performancebaseconversiondescriptor OWNER TO postgres;

--
-- Name: TABLE performancebaseconversiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performancebaseconversiondescriptor IS 'Defines standard levels of competency or performance that can be used for dashboard visualizations: advanced, proficient, basic, and below basic.';


--
-- Name: COLUMN performancebaseconversiondescriptor.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performancebaseconversiondescriptor.performancebaseconversiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performanceleveldescriptor (
    performanceleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.performanceleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performanceleveldescriptor IS 'This descriptor defines various levels or thresholds for performance on the assessment.';


--
-- Name: COLUMN performanceleveldescriptor.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performanceleveldescriptor.performanceleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: person; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.person (
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.person OWNER TO postgres;

--
-- Name: TABLE person; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.person IS 'This entity represents a human being.';


--
-- Name: COLUMN person.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN person.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: personalinformationverificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.personalinformationverificationdescriptor (
    personalinformationverificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.personalinformationverificationdescriptor OWNER TO postgres;

--
-- Name: TABLE personalinformationverificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.personalinformationverificationdescriptor IS 'The evidence presented to verify one''s personal identity; for example: driver''s license, passport, birth certificate, etc.';


--
-- Name: COLUMN personalinformationverificationdescriptor.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.personalinformationverificationdescriptor.personalinformationverificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: platformtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.platformtypedescriptor (
    platformtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.platformtypedescriptor OWNER TO postgres;

--
-- Name: TABLE platformtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.platformtypedescriptor IS 'The platforms with which an assessment may be delivered.';


--
-- Name: COLUMN platformtypedescriptor.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.platformtypedescriptor.platformtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: populationserveddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.populationserveddescriptor (
    populationserveddescriptorid integer NOT NULL
);


ALTER TABLE edfi.populationserveddescriptor OWNER TO postgres;

--
-- Name: TABLE populationserveddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.populationserveddescriptor IS 'The type of students the Section is offered and tailored to.';


--
-- Name: COLUMN populationserveddescriptor.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.populationserveddescriptor.populationserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postingresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postingresultdescriptor (
    postingresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.postingresultdescriptor OWNER TO postgres;

--
-- Name: TABLE postingresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postingresultdescriptor IS 'Indication of whether the position was filled or retired without filling.';


--
-- Name: COLUMN postingresultdescriptor.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postingresultdescriptor.postingresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryevent (
    eventdate date NOT NULL,
    postsecondaryeventcategorydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    postsecondaryinstitutionid bigint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: TABLE postsecondaryevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryevent IS 'This entity captures significant postsecondary events during a student''s high school tenure (e.g., FAFSA application or college application, acceptance, and enrollment) or during a student''s enrollment at a post-secondary institution.';


--
-- Name: COLUMN postsecondaryevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.eventdate IS 'The date the event occurred or was recorded.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryeventcategorydescriptorid IS 'The post secondary event that is logged.';


--
-- Name: COLUMN postsecondaryevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: postsecondaryeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryeventcategorydescriptor (
    postsecondaryeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryeventcategorydescriptor IS 'A code describing the type of post-secondary event (e.g., college application or acceptance).';


--
-- Name: COLUMN postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitution; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitution (
    postsecondaryinstitutionid bigint NOT NULL,
    administrativefundingcontroldescriptorid integer,
    postsecondaryinstitutionleveldescriptorid integer
);


ALTER TABLE edfi.postsecondaryinstitution OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitution IS 'An organization that provides educational programs for individuals who have completed or otherwise left educational programs in secondary school(s).';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: COLUMN postsecondaryinstitution.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.administrativefundingcontroldescriptorid IS 'A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid IS 'A classification of whether a post secondary institution''s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.';


--
-- Name: postsecondaryinstitutionleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionleveldescriptor (
    postsecondaryinstitutionleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionleveldescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionleveldescriptor IS 'A classification of a postsecondary institution''s highest level of offering. Default values are based on the Carnegie Classifications.';


--
-- Name: COLUMN postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionmediumofinstruction (
    postsecondaryinstitutionid bigint NOT NULL,
    mediumofinstructiondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionmediumofinstruction OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionmediumofinstruction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionmediumofinstruction IS 'The categories in which an institution serves the students.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid IS 'The categories in which an institution serves the students.';


--
-- Name: primarylearningdeviceaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceaccessdescriptor (
    primarylearningdeviceaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceaccessdescriptor IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceawayfromschooldescriptor (
    primarylearningdeviceawayfromschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceawayfromschooldescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceawayfromschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceawayfromschooldescriptor IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceproviderdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceproviderdescriptor (
    primarylearningdeviceproviderdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceproviderdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceproviderdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceproviderdescriptor IS 'The provider of the primary learning device.';


--
-- Name: COLUMN primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: proficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.proficiencydescriptor (
    proficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.proficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE proficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.proficiencydescriptor IS 'This descriptor defines proficiency levels for a yearly English language assessment.';


--
-- Name: COLUMN proficiencydescriptor.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.proficiencydescriptor.proficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: program; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.program (
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programid character varying(20),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.program OWNER TO postgres;

--
-- Name: TABLE program; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.program IS 'This entity represents any program designed to work in conjunction with, or as a supplement to, the main academic program. Programs may provide instruction, training, services, or benefits through federal, state, or local agencies. Programs may also include organized extracurricular activities for students.';


--
-- Name: COLUMN program.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN program.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN program.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN program.programid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: programassignmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programassignmentdescriptor (
    programassignmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programassignmentdescriptor OWNER TO postgres;

--
-- Name: TABLE programassignmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programassignmentdescriptor IS 'This descriptor defines the name of the education program for which a teacher is assigned to a school.';


--
-- Name: COLUMN programassignmentdescriptor.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programassignmentdescriptor.programassignmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristic (
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programcharacteristic OWNER TO postgres;

--
-- Name: TABLE programcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristic IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programcharacteristic.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programcharacteristic.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programcharacteristic.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programcharacteristicdescriptorid IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: programcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristicdescriptor (
    programcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE programcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristicdescriptor IS 'This descriptor defines important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristicdescriptor.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristicdescriptor.programcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programdimension OWNER TO postgres;

--
-- Name: TABLE programdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programdimension IS 'The NCES program accounting dimension. A program is defined by the NCES as a plan of activities and procedures designed to accomplish a predetermined objective or set of objectives. These are often categorized into broad program areas such as regular education, special education, vocational education, other PK-12 instructional, nonpublic school, adult and continuing education, community and junior college education, community services, and co-curricular or extracurricular activities.';


--
-- Name: COLUMN programdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.code IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN programdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.fiscalyear IS 'The fiscal year for which the account program dimension is valid.';


--
-- Name: COLUMN programdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.codename IS 'A description of the account program dimension.';


--
-- Name: programdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE programdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN programdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.code IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN programdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account program dimension is valid.';


--
-- Name: COLUMN programdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: programevaluation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluation (
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    evaluationmaxnumericrating numeric(6,3),
    evaluationminnumericrating numeric(6,3),
    programevaluationdescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programevaluation OWNER TO postgres;

--
-- Name: TABLE programevaluation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluation IS 'An evaluation instrument applied to evaluate a student in the context of a program. Student evaluations are typically applied by a staff member based upon a rubric.';


--
-- Name: COLUMN programevaluation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluation.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluation.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluation.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluation.evaluationmaxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.evaluationmaxnumericrating IS 'The maximum summary numerical rating or score for the program evaluation.';


--
-- Name: COLUMN programevaluation.evaluationminnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.evaluationminnumericrating IS 'The minimum summary numerical rating or score for the program evaluation. If omitted, assumed to be 0.0';


--
-- Name: COLUMN programevaluation.programevaluationdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluation.programevaluationdescription IS 'The long description of the program evaluation.';


--
-- Name: programevaluationelement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationelement (
    programeducationorganizationid bigint NOT NULL,
    programevaluationelementtitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    elementmaxnumericrating numeric(6,3),
    elementminnumericrating numeric(6,3),
    elementsortorder integer,
    programevaluationelementdescription character varying(255),
    programevaluationobjectivetitle character varying(50),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programevaluationelement OWNER TO postgres;

--
-- Name: TABLE programevaluationelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationelement IS 'The lowest level elements or criterion of a students''s performance that is being evaluated, typically by a rubric.';


--
-- Name: COLUMN programevaluationelement.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationelement.programevaluationelementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationelementtitle IS 'The name or title of the program evaluation element.';


--
-- Name: COLUMN programevaluationelement.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationelement.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationelement.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationelement.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationelement.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationelement.elementmaxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.elementmaxnumericrating IS '	The maximum summary numerical rating or score for the program evaluation element.';


--
-- Name: COLUMN programevaluationelement.elementminnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.elementminnumericrating IS 'The minimum summary numerical rating or score for the program evaluation element. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN programevaluationelement.elementsortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.elementsortorder IS 'The sort order of this program evaluation element.';


--
-- Name: COLUMN programevaluationelement.programevaluationelementdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationelementdescription IS 'The long description of the program evaluation element.';


--
-- Name: COLUMN programevaluationelement.programevaluationobjectivetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelement.programevaluationobjectivetitle IS 'The name or title of the program evaluation objective.';


--
-- Name: programevaluationelementratinglevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationelementratinglevel (
    programeducationorganizationid bigint NOT NULL,
    programevaluationelementtitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    ratingleveldescriptorid integer NOT NULL,
    maxnumericrating numeric(6,3),
    minnumericrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programevaluationelementratinglevel OWNER TO postgres;

--
-- Name: TABLE programevaluationelementratinglevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationelementratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the program evaluation element.';


--
-- Name: COLUMN programevaluationelementratinglevel.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationelementratinglevel.programevaluationelementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.programevaluationelementtitle IS 'The name or title of the program evaluation element.';


--
-- Name: COLUMN programevaluationelementratinglevel.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationelementratinglevel.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationelementratinglevel.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationelementratinglevel.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationelementratinglevel.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationelementratinglevel.ratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.ratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN programevaluationelementratinglevel.maxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.maxnumericrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN programevaluationelementratinglevel.minnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationelementratinglevel.minnumericrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: programevaluationobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationobjective (
    programeducationorganizationid bigint NOT NULL,
    programevaluationobjectivetitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    objectivemaxnumericrating numeric(6,3),
    objectiveminnumericrating numeric(6,3),
    objectivesortorder integer,
    programevaluationobjectivedescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programevaluationobjective OWNER TO postgres;

--
-- Name: TABLE programevaluationobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationobjective IS 'A subcomponent of a ProgramEvaluation, a specific student objective or domain of performance that is being evaluated.';


--
-- Name: COLUMN programevaluationobjective.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationobjective.programevaluationobjectivetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationobjectivetitle IS 'The name or title of the program evaluation objective.';


--
-- Name: COLUMN programevaluationobjective.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationobjective.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationobjective.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationobjective.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationobjective.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationobjective.objectivemaxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.objectivemaxnumericrating IS 'The maximum summary numerical rating or score for the program evaluation objective.';


--
-- Name: COLUMN programevaluationobjective.objectiveminnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.objectiveminnumericrating IS 'The minimum summary numerical rating or score for the program evaluation objective. If omitted, assumed to be 0.0';


--
-- Name: COLUMN programevaluationobjective.objectivesortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.objectivesortorder IS 'The sort order of this program evaluation objective.';


--
-- Name: COLUMN programevaluationobjective.programevaluationobjectivedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjective.programevaluationobjectivedescription IS 'The long description of the program evaluation objective.';


--
-- Name: programevaluationobjectiveratinglevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationobjectiveratinglevel (
    programeducationorganizationid bigint NOT NULL,
    programevaluationobjectivetitle character varying(50) NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    ratingleveldescriptorid integer NOT NULL,
    maxnumericrating numeric(6,3),
    minnumericrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programevaluationobjectiveratinglevel OWNER TO postgres;

--
-- Name: TABLE programevaluationobjectiveratinglevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationobjectiveratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the program evaluation objective.';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.programevaluationobjectivetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.programevaluationobjectivetitle IS 'The name or title of the program evaluation objective.';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.ratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.ratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.maxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.maxnumericrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN programevaluationobjectiveratinglevel.minnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationobjectiveratinglevel.minnumericrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: programevaluationperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationperioddescriptor (
    programevaluationperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.programevaluationperioddescriptor OWNER TO postgres;

--
-- Name: TABLE programevaluationperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationperioddescriptor IS 'The period for the evaluation.';


--
-- Name: COLUMN programevaluationperioddescriptor.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationperioddescriptor.programevaluationperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programevaluationratinglevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationratinglevel (
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    ratingleveldescriptorid integer NOT NULL,
    maxnumericrating numeric(6,3),
    minnumericrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programevaluationratinglevel OWNER TO postgres;

--
-- Name: TABLE programevaluationratinglevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the program evaluation.';


--
-- Name: COLUMN programevaluationratinglevel.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationratinglevel.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programevaluationratinglevel.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationratinglevel.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN programevaluationratinglevel.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationratinglevel.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN programevaluationratinglevel.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationratinglevel.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN programevaluationratinglevel.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationratinglevel.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programevaluationratinglevel.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationratinglevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programevaluationratinglevel.ratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationratinglevel.ratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN programevaluationratinglevel.maxnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationratinglevel.maxnumericrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN programevaluationratinglevel.minnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationratinglevel.minnumericrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: programevaluationtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programevaluationtypedescriptor (
    programevaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.programevaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE programevaluationtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programevaluationtypedescriptor IS 'The type of the evaluation.';


--
-- Name: COLUMN programevaluationtypedescriptor.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programevaluationtypedescriptor.programevaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningstandard (
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningstandard OWNER TO postgres;

--
-- Name: TABLE programlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningstandard IS 'Learning standard followed by this program.';


--
-- Name: COLUMN programlearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningstandard.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningstandard.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: programsponsor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsor (
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programsponsordescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programsponsor OWNER TO postgres;

--
-- Name: TABLE programsponsor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: COLUMN programsponsor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programsponsor.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programsponsor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programsponsor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programsponsordescriptorid IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: programsponsordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsordescriptor (
    programsponsordescriptorid integer NOT NULL
);


ALTER TABLE edfi.programsponsordescriptor OWNER TO postgres;

--
-- Name: TABLE programsponsordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsordescriptor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Org).';


--
-- Name: COLUMN programsponsordescriptor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsordescriptor.programsponsordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programtypedescriptor (
    programtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.programtypedescriptor OWNER TO postgres;

--
-- Name: TABLE programtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programtypedescriptor IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programtypedescriptor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programtypedescriptor.programtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressdescriptor (
    progressdescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressdescriptor OWNER TO postgres;

--
-- Name: TABLE progressdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressdescriptor IS 'This descriptor defines yearly progress or growth from last year''s assessment.';


--
-- Name: COLUMN progressdescriptor.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressdescriptor.progressdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressleveldescriptor (
    progressleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressleveldescriptor OWNER TO postgres;

--
-- Name: TABLE progressleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressleveldescriptor IS 'This descriptor defines progress measured from pre- to post-test.';


--
-- Name: COLUMN progressleveldescriptor.progressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressleveldescriptor.progressleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: projectdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.projectdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.projectdimension OWNER TO postgres;

--
-- Name: TABLE projectdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.projectdimension IS 'The NCES project accounting dimension. The project dimension reporting code permits school districts to accumulate expenditures to meet a variety of specialized reporting requirements at the local, state, and federal levels.';


--
-- Name: COLUMN projectdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.code IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN projectdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.fiscalyear IS 'The fiscal year for which the account project dimension is valid.';


--
-- Name: COLUMN projectdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.codename IS 'A description of the account project dimension.';


--
-- Name: projectdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.projectdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.projectdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE projectdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.projectdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN projectdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.code IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN projectdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account project dimension is valid.';


--
-- Name: COLUMN projectdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: providercategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providercategorydescriptor (
    providercategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providercategorydescriptor OWNER TO postgres;

--
-- Name: TABLE providercategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providercategorydescriptor IS 'This descriptor holds the category of the provider.';


--
-- Name: COLUMN providercategorydescriptor.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providercategorydescriptor.providercategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerprofitabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerprofitabilitydescriptor (
    providerprofitabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerprofitabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE providerprofitabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerprofitabilitydescriptor IS 'This descriptor indicates the profitability status of the provider.';


--
-- Name: COLUMN providerprofitabilitydescriptor.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerprofitabilitydescriptor.providerprofitabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerstatusdescriptor (
    providerstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE providerstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerstatusdescriptor IS 'This descriptor defines the status of the provider.';


--
-- Name: COLUMN providerstatusdescriptor.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerstatusdescriptor.providerstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: publicationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.publicationstatusdescriptor (
    publicationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.publicationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE publicationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.publicationstatusdescriptor IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN publicationstatusdescriptor.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.publicationstatusdescriptor.publicationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: questionformdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.questionformdescriptor (
    questionformdescriptorid integer NOT NULL
);


ALTER TABLE edfi.questionformdescriptor OWNER TO postgres;

--
-- Name: TABLE questionformdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.questionformdescriptor IS 'The form or type of question.';


--
-- Name: COLUMN questionformdescriptor.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.questionformdescriptor.questionformdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: racedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.racedescriptor (
    racedescriptorid integer NOT NULL
);


ALTER TABLE edfi.racedescriptor OWNER TO postgres;

--
-- Name: TABLE racedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.racedescriptor IS 'The enumeration items defining the racial categories which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies.';


--
-- Name: COLUMN racedescriptor.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.racedescriptor.racedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: ratingleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.ratingleveldescriptor (
    ratingleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.ratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE ratingleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.ratingleveldescriptor IS 'The descriptive level(s) of ratings (cut scores) for evaluation.';


--
-- Name: COLUMN ratingleveldescriptor.ratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.ratingleveldescriptor.ratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonexiteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonexiteddescriptor (
    reasonexiteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonexiteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonexiteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonexiteddescriptor IS 'This descriptor defines the reason a student exited a program.';


--
-- Name: COLUMN reasonexiteddescriptor.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonexiteddescriptor.reasonexiteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonnottesteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonnottesteddescriptor (
    reasonnottesteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonnottesteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonnottesteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonnottesteddescriptor IS 'The primary reason student is not tested.';


--
-- Name: COLUMN reasonnottesteddescriptor.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonnottesteddescriptor.reasonnottesteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: recognitiontypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.recognitiontypedescriptor (
    recognitiontypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.recognitiontypedescriptor OWNER TO postgres;

--
-- Name: TABLE recognitiontypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.recognitiontypedescriptor IS 'The nature of recognition given to the student for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN recognitiontypedescriptor.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.recognitiontypedescriptor.recognitiontypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: relationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.relationdescriptor (
    relationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.relationdescriptor OWNER TO postgres;

--
-- Name: TABLE relationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.relationdescriptor IS 'The nature of an individual''s relationship to a student.';


--
-- Name: COLUMN relationdescriptor.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.relationdescriptor.relationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: repeatidentifierdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.repeatidentifierdescriptor (
    repeatidentifierdescriptorid integer NOT NULL
);


ALTER TABLE edfi.repeatidentifierdescriptor OWNER TO postgres;

--
-- Name: TABLE repeatidentifierdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.repeatidentifierdescriptor IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN repeatidentifierdescriptor.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.repeatidentifierdescriptor.repeatidentifierdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcard (
    educationorganizationid bigint NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    numberofdaysabsent numeric(18,4),
    numberofdaysinattendance numeric(18,4),
    numberofdaystardy integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.reportcard OWNER TO postgres;

--
-- Name: TABLE reportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcard IS 'This educational entity represents the collection of student grades for courses taken during a grading period.';


--
-- Name: COLUMN reportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN reportcard.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN reportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcard.numberofdaysabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysabsent IS 'The number of days an individual is absent when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaysinattendance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysinattendance IS 'The number of days an individual is present when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaystardy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaystardy IS 'The number of days an individual is tardy during a given reporting period.';


--
-- Name: reportcardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgrade (
    educationorganizationid bigint NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgrade OWNER TO postgres;

--
-- Name: TABLE reportcardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgrade IS 'Grades for the classes attended by the student for this grading period.';


--
-- Name: COLUMN reportcardgrade.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgrade.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN reportcardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN reportcardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN reportcardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN reportcardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN reportcardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: reportcardgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgradepointaverage (
    educationorganizationid bigint NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    iscumulative boolean,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgradepointaverage OWNER TO postgres;

--
-- Name: TABLE reportcardgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgradepointaverage IS 'A measure of average performance for courses taken by an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN reportcardgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN reportcardgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: reportcardstudentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentcompetencyobjective (
    educationorganizationid bigint NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    objectiveeducationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentcompetencyobjective IS 'The student competency evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: reporterdescriptiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reporterdescriptiondescriptor (
    reporterdescriptiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.reporterdescriptiondescriptor OWNER TO postgres;

--
-- Name: TABLE reporterdescriptiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reporterdescriptiondescriptor IS 'This descriptor defines the type of individual who reported an incident.';


--
-- Name: COLUMN reporterdescriptiondescriptor.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reporterdescriptiondescriptor.reporterdescriptiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportingtagdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportingtagdescriptor (
    reportingtagdescriptorid integer NOT NULL
);


ALTER TABLE edfi.reportingtagdescriptor OWNER TO postgres;

--
-- Name: TABLE reportingtagdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportingtagdescriptor IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN reportingtagdescriptor.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportingtagdescriptor.reportingtagdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: residencystatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.residencystatusdescriptor (
    residencystatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.residencystatusdescriptor OWNER TO postgres;

--
-- Name: TABLE residencystatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.residencystatusdescriptor IS 'This descriptor defines indications of the location of a person''s legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN residencystatusdescriptor.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.residencystatusdescriptor.residencystatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responseindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responseindicatordescriptor (
    responseindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.responseindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE responseindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responseindicatordescriptor IS 'Indicator of the response.';


--
-- Name: COLUMN responseindicatordescriptor.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responseindicatordescriptor.responseindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responsibilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responsibilitydescriptor (
    responsibilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.responsibilitydescriptor OWNER TO postgres;

--
-- Name: TABLE responsibilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responsibilitydescriptor IS 'This descriptor defines types of responsibility an education organization may have for a student (e.g., accountability, attendance, funding).';


--
-- Name: COLUMN responsibilitydescriptor.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responsibilitydescriptor.responsibilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: restraintevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restraintevent (
    restrainteventidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    educationalenvironmentdescriptorid integer,
    eventdate date NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.restraintevent OWNER TO postgres;

--
-- Name: TABLE restraintevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restraintevent IS 'This event entity represents the instances where a special education student was physically or mechanically restrained due to imminent serious physical harm to themselves or others, imminent serious property destruction or a combination of both imminent serious physical harm to themselves or others and imminent serious property destruction.';


--
-- Name: COLUMN restraintevent.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restraintevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restraintevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restraintevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.educationalenvironmentdescriptorid IS 'The setting where the RestraintEvent was exercised.';


--
-- Name: COLUMN restraintevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.eventdate IS 'Month, day, and year of the restraint event.';


--
-- Name: restrainteventprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventprogram (
    restrainteventidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventprogram OWNER TO postgres;

--
-- Name: TABLE restrainteventprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventprogram IS 'The special education program associated with the restraint event.';


--
-- Name: COLUMN restrainteventprogram.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restrainteventprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN restrainteventprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN restrainteventprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: restrainteventreason; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreason (
    restrainteventidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    restrainteventreasondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventreason OWNER TO postgres;

--
-- Name: TABLE restrainteventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreason IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: COLUMN restrainteventreason.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventreason.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventreason.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restrainteventreason.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventreasondescriptorid IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: restrainteventreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreasondescriptor (
    restrainteventreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.restrainteventreasondescriptor OWNER TO postgres;

--
-- Name: TABLE restrainteventreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreasondescriptor IS 'The items of categorization of the circumstances or reason for the restraint.';


--
-- Name: COLUMN restrainteventreasondescriptor.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreasondescriptor.restrainteventreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: resultdatatypetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.resultdatatypetypedescriptor (
    resultdatatypetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.resultdatatypetypedescriptor OWNER TO postgres;

--
-- Name: TABLE resultdatatypetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.resultdatatypetypedescriptor IS 'The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN resultdatatypetypedescriptor.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.resultdatatypetypedescriptor.resultdatatypetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: retestindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.retestindicatordescriptor (
    retestindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.retestindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE retestindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.retestindicatordescriptor IS 'Indicator if the test was retaken.';


--
-- Name: COLUMN retestindicatordescriptor.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.retestindicatordescriptor.retestindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: school; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.school (
    schoolid bigint NOT NULL,
    administrativefundingcontroldescriptorid integer,
    charterapprovalagencytypedescriptorid integer,
    charterapprovalschoolyear smallint,
    charterstatusdescriptorid integer,
    internetaccessdescriptorid integer,
    localeducationagencyid bigint,
    magnetspecialprogramemphasisschooldescriptorid integer,
    schooltypedescriptorid integer,
    titleipartaschooldesignationdescriptorid integer
);


ALTER TABLE edfi.school OWNER TO postgres;

--
-- Name: TABLE school; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.school IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN school.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN school.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.administrativefundingcontroldescriptorid IS 'The type of education institution as classified by its funding source, for example public or private.';


--
-- Name: COLUMN school.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalagencytypedescriptorid IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN school.charterapprovalschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalschoolyear IS 'The school year in which a charter school was initially approved.';


--
-- Name: COLUMN school.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN school.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.internetaccessdescriptorid IS 'The type of Internet access available.';


--
-- Name: COLUMN school.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN school.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.magnetspecialprogramemphasisschooldescriptorid IS 'A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN school.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schooltypedescriptorid IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN school.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.titleipartaschooldesignationdescriptorid IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: schoolcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategory (
    schoolid bigint NOT NULL,
    schoolcategorydescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolcategory OWNER TO postgres;

--
-- Name: TABLE schoolcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategory IS 'The one or more categories of school.';


--
-- Name: COLUMN schoolcategory.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolcategory.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolcategorydescriptorid IS 'The one or more categories of school.';


--
-- Name: schoolcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategorydescriptor (
    schoolcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE schoolcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategorydescriptor IS 'The category of school. For example: High School, Middle School, Elementary School.';


--
-- Name: COLUMN schoolcategorydescriptor.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategorydescriptor.schoolcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolchoicebasisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolchoicebasisdescriptor (
    schoolchoicebasisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolchoicebasisdescriptor OWNER TO postgres;

--
-- Name: TABLE schoolchoicebasisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolchoicebasisdescriptor IS 'The legal basis for the school choice enrollment according to local, state or federal policy or regulation. (The descriptor provides the list of available bases specific to the state).';


--
-- Name: COLUMN schoolchoicebasisdescriptor.schoolchoicebasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolchoicebasisdescriptor.schoolchoicebasisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolchoiceimplementstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolchoiceimplementstatusdescriptor (
    schoolchoiceimplementstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolchoiceimplementstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE schoolchoiceimplementstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolchoiceimplementstatusdescriptor IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA, as amended.';


--
-- Name: COLUMN schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolfoodserviceprogramservicedescriptor (
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolfoodserviceprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE schoolfoodserviceprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolfoodserviceprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a school food service program.';


--
-- Name: COLUMN schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolgradelevel (
    schoolid bigint NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolgradelevel OWNER TO postgres;

--
-- Name: TABLE schoolgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolgradelevel IS 'The grade levels served at the school.';


--
-- Name: COLUMN schoolgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.gradeleveldescriptorid IS 'The grade levels served at the school.';


--
-- Name: schooltypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schooltypedescriptor (
    schooltypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schooltypedescriptor OWNER TO postgres;

--
-- Name: TABLE schooltypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schooltypedescriptor IS 'The type of education institution as classified by its primary focus such as Alternative, Career and Technical Education, Regular, or Special Education schools.';


--
-- Name: COLUMN schooltypedescriptor.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schooltypedescriptor.schooltypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolyeartype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolyeartype (
    schoolyear smallint NOT NULL,
    schoolyeardescription character varying(50) NOT NULL,
    currentschoolyear boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.schoolyeartype OWNER TO postgres;

--
-- Name: TABLE schoolyeartype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolyeartype IS 'Identifier for a school year.';


--
-- Name: COLUMN schoolyeartype.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyear IS 'Key for School Year';


--
-- Name: COLUMN schoolyeartype.schoolyeardescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyeardescription IS 'The description for the SchoolYear type.';


--
-- Name: COLUMN schoolyeartype.currentschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.currentschoolyear IS 'The code for the current school year.';


--
-- Name: section; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.section (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    availablecreditconversion numeric(9,2),
    availablecredits numeric(9,3),
    availablecredittypedescriptorid integer,
    educationalenvironmentdescriptorid integer,
    instructionlanguagedescriptorid integer,
    locationclassroomidentificationcode character varying(60),
    locationschoolid bigint,
    mediumofinstructiondescriptorid integer,
    officialattendanceperiod boolean,
    populationserveddescriptorid integer,
    sectionname character varying(100),
    sectiontypedescriptorid integer,
    sequenceofcourse integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.section OWNER TO postgres;

--
-- Name: TABLE section; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.section IS 'This entity represents a setting in which organized instruction of course content is provided, in-person or otherwise, to one or more students for a given period of time. A course offering may be offered to more than one section.';


--
-- Name: COLUMN section.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN section.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN section.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN section.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN section.availablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN section.availablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.availablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.educationalenvironmentdescriptorid IS 'The setting in which a student receives education and related services.';


--
-- Name: COLUMN section.instructionlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.instructionlanguagedescriptorid IS 'The primary language of instruction. If omitted, English is assumed.';


--
-- Name: COLUMN section.locationclassroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationclassroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN section.locationschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.mediumofinstructiondescriptorid IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN section.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.officialattendanceperiod IS 'Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a class period.';


--
-- Name: COLUMN section.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.populationserveddescriptorid IS 'The type of students the section is offered and tailored to.';


--
-- Name: COLUMN section.sectionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionname IS 'A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the section identifier.';


--
-- Name: COLUMN section.sectiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectiontypedescriptorid IS 'Specifies whether the section is for attendance only, credit only, or both.';


--
-- Name: COLUMN section.sequenceofcourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sequenceofcourse IS 'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.';


--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionattendancetakenevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    eventdate date NOT NULL,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: TABLE sectionattendancetakenevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionattendancetakenevent IS 'Captures attendance taken event for given section.';


--
-- Name: COLUMN sectionattendancetakenevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN sectionattendancetakenevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN sectionattendancetakenevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionattendancetakenevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionattendancetakenevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionattendancetakenevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.eventdate IS 'The date the section attendance taken event was submitted, which could be a different date than the instructional day.';


--
-- Name: COLUMN sectionattendancetakenevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: sectioncharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    sectioncharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristic IS 'Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.';


--
-- Name: COLUMN sectioncharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectioncharacteristic.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectioncharacteristicdescriptorid IS 'Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.';


--
-- Name: sectioncharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristicdescriptor (
    sectioncharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sectioncharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristicdescriptor IS 'This descriptor defines characteristics of a Section, such as whether attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sectionclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionclassperiod (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    classperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionclassperiod OWNER TO postgres;

--
-- Name: TABLE sectionclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionclassperiod IS 'The class period during which the section meets.';


--
-- Name: COLUMN sectionclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: sectioncourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncourselevelcharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncourselevelcharacteristic IS 'The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.';


--
-- Name: sectionofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionofferedgradelevel (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE sectionofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionofferedgradelevel IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.';


--
-- Name: COLUMN sectionofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionofferedgradelevel.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.';


--
-- Name: sectionprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionprogram (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionprogram OWNER TO postgres;

--
-- Name: TABLE sectionprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionprogram IS 'Optional reference to program to which the section is associated.';


--
-- Name: COLUMN sectionprogram.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionprogram.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionprogram.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN sectionprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN sectionprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: sectiontypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectiontypedescriptor (
    sectiontypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.sectiontypedescriptor OWNER TO postgres;

--
-- Name: TABLE sectiontypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectiontypedescriptor IS 'Specifies whether the section is for attendance only, credit only, or both.';


--
-- Name: COLUMN sectiontypedescriptor.sectiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectiontypedescriptor.sectiontypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: separationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationdescriptor (
    separationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationdescriptor OWNER TO postgres;

--
-- Name: TABLE separationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationdescriptor IS 'Type of employment separation; for example:  Voluntary separation, Involuntary separation, Mutual agreement. Other, etc.';


--
-- Name: COLUMN separationdescriptor.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationdescriptor.separationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: separationreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationreasondescriptor (
    separationreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationreasondescriptor OWNER TO postgres;

--
-- Name: TABLE separationreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationreasondescriptor IS 'This descriptor defines the reasons for terminating the employment.';


--
-- Name: COLUMN separationreasondescriptor.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationreasondescriptor.separationreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: servicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.servicedescriptor (
    servicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.servicedescriptor OWNER TO postgres;

--
-- Name: TABLE servicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.servicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a program.';


--
-- Name: COLUMN servicedescriptor.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.servicedescriptor.servicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: session; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.session (
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    termdescriptorid integer NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.session OWNER TO postgres;

--
-- Name: TABLE session; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.session IS 'A specific designated unit of time during which instruction is provided, grades are reported and academic credits are awarded to students (whenever applicable). Sessions serve as organized segments of the academic year and can be interrupted by vacations or other events.';


--
-- Name: COLUMN session.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN session.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN session.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN session.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.begindate IS 'Month, day, and year of the first day of the session.';


--
-- Name: COLUMN session.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.enddate IS 'Month, day and year of the last day of the session.';


--
-- Name: COLUMN session.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.termdescriptorid IS 'A descriptor value to indicate the term that the session is associated with.';


--
-- Name: COLUMN session.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.totalinstructionaldays IS 'The total number of instructional days in the school calendar.';


--
-- Name: sessionacademicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessionacademicweek (
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessionacademicweek OWNER TO postgres;

--
-- Name: TABLE sessionacademicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessionacademicweek IS 'The academic weeks associated with the school year.';


--
-- Name: COLUMN sessionacademicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessionacademicweek.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessionacademicweek.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sessionacademicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: sessiongradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessiongradingperiod (
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessiongradingperiod OWNER TO postgres;

--
-- Name: TABLE sessiongradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessiongradingperiod IS 'Grading periods associated with the session.';


--
-- Name: COLUMN sessiongradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessiongradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessiongradingperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sessiongradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN sessiongradingperiod.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: sexdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sexdescriptor (
    sexdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sexdescriptor OWNER TO postgres;

--
-- Name: TABLE sexdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sexdescriptor IS 'A person''s birth sex.';


--
-- Name: COLUMN sexdescriptor.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sexdescriptor.sexdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sourcedimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcedimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.sourcedimension OWNER TO postgres;

--
-- Name: TABLE sourcedimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcedimension IS 'The NCES source dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.';


--
-- Name: COLUMN sourcedimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.code IS 'The code representation of the account source dimension.';


--
-- Name: COLUMN sourcedimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.fiscalyear IS 'The fiscal year for which the account source dimension is valid.';


--
-- Name: COLUMN sourcedimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.codename IS 'A description of the account source dimension.';


--
-- Name: sourcedimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcedimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sourcedimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE sourcedimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcedimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN sourcedimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.code IS 'The code representation of the account source dimension.';


--
-- Name: COLUMN sourcedimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.fiscalyear IS 'The fiscal year for which the account source dimension is valid.';


--
-- Name: COLUMN sourcedimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: sourcesystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcesystemdescriptor (
    sourcesystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sourcesystemdescriptor OWNER TO postgres;

--
-- Name: TABLE sourcesystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcesystemdescriptor IS 'This descriptor defines the originating record source system.';


--
-- Name: COLUMN sourcesystemdescriptor.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcesystemdescriptor.sourcesystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationprogramservicedescriptor (
    specialeducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a special education program.';


--
-- Name: COLUMN specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationsettingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationsettingdescriptor (
    specialeducationsettingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationsettingdescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationsettingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationsettingdescriptor IS 'This descriptor defines the major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: COLUMN specialeducationsettingdescriptor.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationsettingdescriptor.specialeducationsettingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staff (
    staffusi integer NOT NULL,
    birthdate date,
    citizenshipstatusdescriptorid integer,
    firstname character varying(75) NOT NULL,
    genderidentity character varying(60),
    generationcodesuffix character varying(10),
    highestcompletedlevelofeducationdescriptorid integer,
    highlyqualifiedteacher boolean,
    hispaniclatinoethnicity boolean,
    lastsurname character varying(75) NOT NULL,
    loginid character varying(60),
    maidenname character varying(75),
    middlename character varying(75),
    personaltitleprefix character varying(30),
    personid character varying(32),
    preferredfirstname character varying(75),
    preferredlastsurname character varying(75),
    sexdescriptorid integer,
    sourcesystemdescriptorid integer,
    staffuniqueid character varying(32) NOT NULL,
    yearsofpriorprofessionalexperience numeric(5,2),
    yearsofpriorteachingexperience numeric(5,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staff OWNER TO postgres;

--
-- Name: TABLE staff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staff IS 'This entity represents an individual who performs specified activities for any public or private education institution or agency that provides instructional and/or support services to students or staff at the early childhood level through high school completion.';


--
-- Name: COLUMN staff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staff.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN staff.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN staff.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staff.genderidentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.genderidentity IS 'The gender the staff member identifies themselves as.';


--
-- Name: COLUMN staff.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN staff.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN staff.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.';


--
-- Name: COLUMN staff.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN staff.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staff.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN staff.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN staff.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staff.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN staff.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN staff.preferredfirstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.preferredfirstname IS 'The first name the individual prefers, if different from their legal first name';


--
-- Name: COLUMN staff.preferredlastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.preferredlastsurname IS 'The last name the individual prefers, if different from their legal last name';


--
-- Name: COLUMN staff.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sexdescriptorid IS 'The birth sex of the staff member.';


--
-- Name: COLUMN staff.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN staff.staffuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffuniqueid IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staff.yearsofpriorprofessionalexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorprofessionalexperience IS 'The total number of years that an individual has previously held a similar professional position in one or more education institutions prior to the current school year.';


--
-- Name: COLUMN staff.yearsofpriorteachingexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorteachingexperience IS 'The total number of years that an individual has previously held a teaching position in one or more education institutions prior to the current school year.';


--
-- Name: staff_staffusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.staff_staffusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.staff_staffusi_seq OWNER TO postgres;

--
-- Name: staff_staffusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.staff_staffusi_seq OWNED BY edfi.staff.staffusi;


--
-- Name: staffabsenceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffabsenceevent (
    absenceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    staffusi integer NOT NULL,
    absenceeventreason character varying(40),
    hoursabsent numeric(18,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: TABLE staffabsenceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffabsenceevent IS 'This event entity represents the recording of the dates of staff absence.';


--
-- Name: COLUMN staffabsenceevent.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventcategorydescriptorid IS 'The code describing the type of absence.';


--
-- Name: COLUMN staffabsenceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.eventdate IS 'Date for this leave event.';


--
-- Name: COLUMN staffabsenceevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffabsenceevent.absenceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventreason IS 'Expanded reason for the staff absence.';


--
-- Name: COLUMN staffabsenceevent.hoursabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.hoursabsent IS 'The hours the staff was absent, if not the entire working day.';


--
-- Name: staffaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddress (
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddress OWNER TO postgres;

--
-- Name: TABLE staffaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN staffaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN staffaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: staffaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddressperiod (
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffancestryethnicorigin (
    staffusi integer NOT NULL,
    ancestryethnicorigindescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE staffancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN staffancestryethnicorigin.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: staffclassificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffclassificationdescriptor (
    staffclassificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffclassificationdescriptor OWNER TO postgres;

--
-- Name: TABLE staffclassificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffclassificationdescriptor IS 'This descriptor defines an individual''s title of employment, official status or rank.';


--
-- Name: COLUMN staffclassificationdescriptor.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffclassificationdescriptor.staffclassificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: TABLE staffcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcohortassociation IS 'This association indicates the staff associated with a cohort of students.';


--
-- Name: COLUMN staffcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.begindate IS 'Start date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN staffcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffcohortassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.enddate IS 'End date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffcredential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcredential (
    staffusi integer NOT NULL,
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffcredential OWNER TO postgres;

--
-- Name: TABLE staffcredential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcredential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN staffcredential.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcredential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffcredential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociation (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociation IS 'This association indicates those staff who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociation (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    contacttypedescriptorid integer,
    electronicmailaddress character varying(128) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociation IS 'This association provides the contact information of the staff associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttypedescriptorid IS 'Indicates the type for the contact information.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.electronicmailaddress IS 'The email for the contact associated with the education organization.';


--
-- Name: staffeducationorganizationcontactassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddress (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    city character varying(30) NOT NULL,
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddress OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddress IS 'The optional address for the contact associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddressperiod (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationtelephone (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid bigint NOT NULL,
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationtelephone OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationtelephone IS 'The optional telephone for the contact associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: staffelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffelectronicmail (
    staffusi integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffelectronicmail OWNER TO postgres;

--
-- Name: TABLE staffelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN staffelectronicmail.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN staffelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN staffelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN staffelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: staffidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationcode (
    staffusi integer NOT NULL,
    staffidentificationsystemdescriptorid integer NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationcode OWNER TO postgres;

--
-- Name: TABLE staffidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN staffidentificationcode.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationcode.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a staff member.';


--
-- Name: COLUMN staffidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the staff Identification Code.';


--
-- Name: COLUMN staffidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: staffidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationdocument (
    staffusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN staffidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: staffidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationsystemdescriptor (
    staffidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE staffidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the staff.';


--
-- Name: COLUMN staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffinternationaladdress (
    staffusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffinternationaladdress OWNER TO postgres;

--
-- Name: TABLE staffinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN staffinternationaladdress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN staffinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN staffinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN staffinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: stafflanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguage (
    staffusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguage OWNER TO postgres;

--
-- Name: TABLE stafflanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN stafflanguage.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafflanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: stafflanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguageuse (
    staffusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguageuse OWNER TO postgres;

--
-- Name: TABLE stafflanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN stafflanguageuse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafflanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN stafflanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: staffleave; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleave (
    begindate date NOT NULL,
    staffleaveeventcategorydescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    reason character varying(40),
    substituteassigned boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffleave OWNER TO postgres;

--
-- Name: TABLE staffleave; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleave IS 'This entity represents the recording of the dates of staff leave (e.g., sick leave, personal time, vacation).';


--
-- Name: COLUMN staffleave.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.begindate IS 'The begin date of the staff leave.';


--
-- Name: COLUMN staffleave.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffleaveeventcategorydescriptorid IS 'The code describing the type of leave taken.';


--
-- Name: COLUMN staffleave.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffleave.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.enddate IS 'The end date of the staff leave.';


--
-- Name: COLUMN staffleave.reason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.reason IS 'Expanded reason for the staff leave.';


--
-- Name: COLUMN staffleave.substituteassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.substituteassigned IS 'Indicator of whether a substitute was assigned during the period of staff leave.';


--
-- Name: staffleaveeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleaveeventcategorydescriptor (
    staffleaveeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffleaveeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE staffleaveeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleaveeventcategorydescriptor IS 'A code describing the type of the leave event.';


--
-- Name: COLUMN staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffothername (
    staffusi integer NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffothername OWNER TO postgres;

--
-- Name: TABLE staffothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN staffothername.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN staffothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staffothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN staffothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staffothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staffothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: staffpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffpersonalidentificationdocument (
    staffusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN staffpersonalidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: staffprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffprogramassociation (
    begindate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: TABLE staffprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffprogramassociation IS 'This association indicates the staff associated with a program.';


--
-- Name: COLUMN staffprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.begindate IS 'Start date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN staffprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN staffprogramassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.enddate IS 'End date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrace (
    staffusi integer NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrace OWNER TO postgres;

--
-- Name: TABLE staffrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN staffrace.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: staffrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrecognition (
    staffusi integer NOT NULL,
    recognitiontypedescriptorid integer NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    recognitiondescription character varying(80),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrecognition OWNER TO postgres;

--
-- Name: TABLE staffrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrecognition IS 'Recognitions given to the staff for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN staffrecognition.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN staffrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN staffrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN staffrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN staffrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN staffrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN staffrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN staffrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN staffrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN staffrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN staffrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN staffrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawardexpiresdate IS 'Date on which the recognition expires.';


--
-- Name: COLUMN staffrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiondescription IS 'A description of the type of recognition earned by or awarded to the individual.';


--
-- Name: staffschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociation (
    programassignmentdescriptorid integer NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    calendarcode character varying(60),
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: TABLE staffschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociation IS 'This association indicates the school(s) to which a staff member provides instructional services.';


--
-- Name: COLUMN staffschoolassociation.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN staffschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolyear IS 'Identifier for a school year.';


--
-- Name: staffschoolassociationacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationacademicsubject (
    programassignmentdescriptorid integer NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    academicsubjectdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationacademicsubject OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationacademicsubject IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.academicsubjectdescriptorid IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: staffschoolassociationgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationgradelevel (
    programassignmentdescriptorid integer NOT NULL,
    schoolid bigint NOT NULL,
    staffusi integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationgradelevel OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationgradelevel IS 'The grade levels the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationgradelevel.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociationgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationgradelevel.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.gradeleveldescriptorid IS 'The grade levels the individual is eligible to teach.';


--
-- Name: staffsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffsectionassociation (
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    begindate date,
    classroompositiondescriptorid integer NOT NULL,
    enddate date,
    highlyqualifiedteacher boolean,
    percentagecontribution numeric(5,4),
    teacherstudentdatalinkexclusion boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: TABLE staffsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffsectionassociation IS 'This association indicates the class sections to which a staff member is assigned.';


--
-- Name: COLUMN staffsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN staffsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN staffsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN staffsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN staffsectionassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.begindate IS 'Month, day, and year of a teacher''s assignment to the section. If blank, defaults to the first day of the first grading period for the section.';


--
-- Name: COLUMN staffsectionassociation.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.classroompositiondescriptorid IS 'The type of position the staff member holds in the specific class/section.';


--
-- Name: COLUMN staffsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.enddate IS 'Month, day, and year of the last day of a staff member''s assignment to the section.';


--
-- Name: COLUMN staffsectionassociation.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.';


--
-- Name: COLUMN staffsectionassociation.percentagecontribution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.percentagecontribution IS 'Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.';


--
-- Name: COLUMN staffsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: stafftelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftelephone (
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftelephone OWNER TO postgres;

--
-- Name: TABLE stafftelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN stafftelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN stafftelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN stafftelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN stafftelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN stafftelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: stafftribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftribalaffiliation (
    staffusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftribalaffiliation OWNER TO postgres;

--
-- Name: TABLE stafftribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftribalaffiliation IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: COLUMN stafftribalaffiliation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: staffvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffvisa (
    staffusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffvisa OWNER TO postgres;

--
-- Name: TABLE staffvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN staffvisa.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: stateabbreviationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateabbreviationdescriptor (
    stateabbreviationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.stateabbreviationdescriptor OWNER TO postgres;

--
-- Name: TABLE stateabbreviationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateabbreviationdescriptor IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN stateabbreviationdescriptor.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateabbreviationdescriptor.stateabbreviationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: stateeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagency (
    stateeducationagencyid bigint NOT NULL
);


ALTER TABLE edfi.stateeducationagency OWNER TO postgres;

--
-- Name: TABLE stateeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagency IS 'This entity represents the agency of the state charged with the primary responsibility for coordinating and supervising public instruction, including the setting of standards for elementary and secondary instructional programs.';


--
-- Name: COLUMN stateeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: stateeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyaccountability (
    stateeducationagencyid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    ctegraduationrateinclusion boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for state education agencies.';


--
-- Name: COLUMN stateeducationagencyaccountability.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN stateeducationagencyaccountability.ctegraduationrateinclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.ctegraduationrateinclusion IS 'An indication of whether CTE concentrators are included in the state''s computation of its graduation rate.';


--
-- Name: stateeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyfederalfunds (
    stateeducationagencyid bigint NOT NULL,
    fiscalyear integer NOT NULL,
    federalprogramsfundingallocation money,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.federalprogramsfundingallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.federalprogramsfundingallocation IS 'The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).';


--
-- Name: student; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.student (
    studentusi integer NOT NULL,
    birthcity character varying(30),
    birthcountrydescriptorid integer,
    birthdate date NOT NULL,
    birthinternationalprovince character varying(150),
    birthsexdescriptorid integer,
    birthstateabbreviationdescriptorid integer,
    citizenshipstatusdescriptorid integer,
    dateenteredus date,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    maidenname character varying(75),
    middlename character varying(75),
    multiplebirthstatus boolean,
    personaltitleprefix character varying(30),
    personid character varying(32),
    preferredfirstname character varying(75),
    preferredlastsurname character varying(75),
    sourcesystemdescriptorid integer,
    studentuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.student OWNER TO postgres;

--
-- Name: TABLE student; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.student IS 'This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.';


--
-- Name: COLUMN student.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN student.birthcity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN student.birthcountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN student.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN student.birthinternationalprovince; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN student.birthsexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthsexdescriptorid IS 'A person''s sex at birth.';


--
-- Name: COLUMN student.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN student.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN student.dateenteredus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN student.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN student.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN student.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN student.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN student.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN student.multiplebirthstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN student.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN student.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN student.preferredfirstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.preferredfirstname IS 'The first name the individual prefers, if different from their legal first name';


--
-- Name: COLUMN student.preferredlastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.preferredlastsurname IS 'The last name the individual prefers, if different from their legal last name';


--
-- Name: COLUMN student.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN student.studentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentuniqueid IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: student_studentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.student_studentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.student_studentusi_seq OWNER TO postgres;

--
-- Name: student_studentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.student_studentusi_seq OWNED BY edfi.student.studentusi;


--
-- Name: studentacademicrecord; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecord (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    cumulativeattemptedcreditconversion numeric(9,2),
    cumulativeattemptedcredits numeric(9,3),
    cumulativeattemptedcredittypedescriptorid integer,
    cumulativeearnedcreditconversion numeric(9,2),
    cumulativeearnedcredits numeric(9,3),
    cumulativeearnedcredittypedescriptorid integer,
    projectedgraduationdate date,
    sessionattemptedcreditconversion numeric(9,2),
    sessionattemptedcredits numeric(9,3),
    sessionattemptedcredittypedescriptorid integer,
    sessionearnedcreditconversion numeric(9,2),
    sessionearnedcredits numeric(9,3),
    sessionearnedcredittypedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: TABLE studentacademicrecord; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecord IS 'This educational entity represents the cumulative record of academic achievement for a student.';


--
-- Name: COLUMN studentacademicrecord.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecord.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecord.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecord.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.projectedgraduationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.projectedgraduationdate IS 'The month and year the student is projected to graduate.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: studentacademicrecordacademichonor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordacademichonor (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    academichonorcategorydescriptorid integer NOT NULL,
    honordescription character varying(80) NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    honorawarddate date,
    honorawardexpiresdate date,
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordacademichonor OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordacademichonor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordacademichonor IS 'Academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordacademichonor.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.academichonorcategorydescriptorid IS 'A designation of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honordescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honordescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawarddate IS 'The date the honor was awarded.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawardexpiresdate IS 'Date on which the honor expires.';


--
-- Name: COLUMN studentacademicrecordacademichonor.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: studentacademicrecordclassranking; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordclassranking (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    classrank integer NOT NULL,
    classrankingdate date,
    percentageranking integer,
    totalnumberinclass integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordclassranking OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordclassranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordclassranking IS 'The academic rank information of a student in relation to his or her graduating class.';


--
-- Name: COLUMN studentacademicrecordclassranking.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordclassranking.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordclassranking.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.classrank; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrank IS 'The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).';


--
-- Name: COLUMN studentacademicrecordclassranking.classrankingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrankingdate IS 'Date class ranking was determined.';


--
-- Name: COLUMN studentacademicrecordclassranking.percentageranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.percentageranking IS 'The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).';


--
-- Name: COLUMN studentacademicrecordclassranking.totalnumberinclass; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.totalnumberinclass IS 'The total number of students in the student''s graduating class.';


--
-- Name: studentacademicrecorddiploma; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecorddiploma (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    diplomaawarddate date NOT NULL,
    diplomatypedescriptorid integer NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    ctecompleter boolean,
    diplomaawardexpiresdate date,
    diplomadescription character varying(80),
    diplomaleveldescriptorid integer,
    evidencestatement character varying(150),
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecorddiploma OWNER TO postgres;

--
-- Name: TABLE studentacademicrecorddiploma; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecorddiploma IS 'Diploma(s) earned by the student.';


--
-- Name: COLUMN studentacademicrecorddiploma.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecorddiploma.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecorddiploma.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawarddate IS 'The month, day, and year on which the student met  graduation requirements and was awarded a diploma.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomatypedescriptorid IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.ctecompleter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.ctecompleter IS 'Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawardexpiresdate IS 'Date on which the diploma expires.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomadescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomadescription IS 'The description of the diploma given to the student for accomplishments.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaleveldescriptorid IS 'The level of diploma/credential that is awarded to a student in recognition of completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecorddiploma.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: studentacademicrecordgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordgradepointaverage (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    iscumulative boolean,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordgradepointaverage OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordgradepointaverage IS 'The grade point average for an individual computed as the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: studentacademicrecordrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordrecognition (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    recognitiontypedescriptorid integer NOT NULL,
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    achievementtitle character varying(60),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    issuername character varying(150),
    issueroriginurl character varying(255),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    recognitiondescription character varying(80),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordrecognition OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordrecognition IS 'Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordrecognition.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordrecognition.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawardexpiresdate IS 'Date on which the recognition expires.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiondescription IS 'A description of the type of recognition earned by or awarded to the individual.';


--
-- Name: studentacademicrecordreportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordreportcard (
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordreportcard OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordreportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordreportcard IS 'Report cards for the student.';


--
-- Name: COLUMN studentacademicrecordreportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordreportcard.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordreportcard.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: studentassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    administrationdate timestamp without time zone,
    administrationenddate timestamp without time zone,
    administrationenvironmentdescriptorid integer,
    administrationlanguagedescriptorid integer,
    assessedminutes integer,
    eventcircumstancedescriptorid integer,
    eventdescription character varying(1024),
    platformtypedescriptorid integer,
    reasonnottesteddescriptorid integer,
    reportedschoolid bigint,
    reportedschoolidentifier character varying(60),
    retestindicatordescriptorid integer,
    schoolyear smallint,
    serialnumber character varying(60),
    whenassessedgradeleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentassessment OWNER TO postgres;

--
-- Name: TABLE studentassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessment IS 'This entity represents the analysis or scoring of a student''s response on an assessment. The analysis results in a value that represents a student''s performance on a set of items on a test.';


--
-- Name: COLUMN studentassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: COLUMN studentassessment.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenvironmentdescriptorid IS 'The environment in which the test was administered.';


--
-- Name: COLUMN studentassessment.administrationlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationlanguagedescriptorid IS 'The language in which an assessment is written and/or administered.';


--
-- Name: COLUMN studentassessment.assessedminutes; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessedminutes IS 'Reported time student was assessed in minutes.';


--
-- Name: COLUMN studentassessment.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventcircumstancedescriptorid IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN studentassessment.eventdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventdescription IS 'Describes special events that occur before during or after the assessment session that may impact use of results.';


--
-- Name: COLUMN studentassessment.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.platformtypedescriptorid IS 'The platform with which the assessment was delivered to the student during the assessment session.';


--
-- Name: COLUMN studentassessment.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reasonnottesteddescriptorid IS 'The primary reason student is not tested.';


--
-- Name: COLUMN studentassessment.reportedschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reportedschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentassessment.reportedschoolidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reportedschoolidentifier IS 'A reported school identifier for the school the enrollment at the time of the assessment used when the assigned SchoolId is not known by the assessment vendor.';


--
-- Name: COLUMN studentassessment.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.retestindicatordescriptorid IS 'Indicator if the test was a retake.';


--
-- Name: COLUMN studentassessment.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.schoolyear IS 'The school year for which the assessment was administered to a student. Among other uses, handles cases in which a student takes a prior-year exam in a subsequent school year during an exam re-test.';


--
-- Name: COLUMN studentassessment.serialnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.serialnumber IS 'The unique number for the assessment form or answer document.';


--
-- Name: COLUMN studentassessment.whenassessedgradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.whenassessedgradeleveldescriptorid IS 'The grade level of a student when assessed.';


--
-- Name: studentassessmentaccommodation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentaccommodation (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    accommodationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentaccommodation OWNER TO postgres;

--
-- Name: TABLE studentassessmentaccommodation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentaccommodation IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.';


--
-- Name: COLUMN studentassessmentaccommodation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentaccommodation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentaccommodation.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.accommodationdescriptorid IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.';


--
-- Name: studentassessmenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmenteducationorganizationassociation (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationassociationtypedescriptorid integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentassessmenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studentassessmenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmenteducationorganizationassociation IS 'The association of individual StudentAssessments with EducationOrganizations indicating administration, enrollment, or attribution.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.educationorganizationassociationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.educationorganizationassociationtypedescriptorid IS 'The type of association being represented.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.schoolyear IS 'The school year associated with the association..';


--
-- Name: studentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assessmentitemresultdescriptorid integer NOT NULL,
    assessmentresponse character varying(255),
    descriptivefeedback character varying(1024),
    itemnumber integer,
    rawscoreresult numeric(15,5),
    responseindicatordescriptorid integer,
    timeassessed character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentitem OWNER TO postgres;

--
-- Name: TABLE studentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentitem IS 'The student''s response to an assessment item and the item-level scores such as correct, incorrect, or met standard.';


--
-- Name: COLUMN studentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentitem.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentitem.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentitem.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentitemresultdescriptorid IS 'The analyzed result of a student''s response to an assessment item.';


--
-- Name: COLUMN studentassessmentitem.assessmentresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentresponse IS 'A student''s response to a stimulus on a test.';


--
-- Name: COLUMN studentassessmentitem.descriptivefeedback; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.descriptivefeedback IS 'The formative descriptive feedback that was given to a student in response to the results from a scored/evaluated assessment item.';


--
-- Name: COLUMN studentassessmentitem.itemnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.itemnumber IS 'The test question number for this student''s test item.';


--
-- Name: COLUMN studentassessmentitem.rawscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.rawscoreresult IS 'A meaningful raw score of the performance of a student on an assessment item.';


--
-- Name: COLUMN studentassessmentitem.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.responseindicatordescriptorid IS 'Indicator of the response.';


--
-- Name: COLUMN studentassessmentitem.timeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.timeassessed IS 'The overall time a student actually spent during the assessment item.';


--
-- Name: studentassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperformancelevel IS 'The performance level(s) achieved for the student assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: studentassessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperiod OWNER TO postgres;

--
-- Name: TABLE studentassessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN studentassessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentperiod.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN studentassessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN studentassessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: studentassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentassessmentstudentobjectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    administrationdate timestamp without time zone,
    administrationenddate timestamp without time zone,
    assessedminutes integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessment OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessment IS 'The student''s score and/or performance levels earned for an objective assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessedminutes; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessedminutes IS 'Reported time student was assessed in minutes.';


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel IS 'The performance level(s) achieved for the objective assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcharacteristicdescriptor (
    studentcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE studentcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcharacteristicdescriptor IS 'This descriptor captures important characteristics of the student''s environment or situation. Generally used for non-program-based student characteristics.';


--
-- Name: COLUMN studentcharacteristicdescriptor.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcharacteristicdescriptor.studentcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: TABLE studentcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociation IS 'This association represents the cohort(s) for which a student is designated.';


--
-- Name: COLUMN studentcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.begindate IS 'The month, day, and year on which the student was first identified as part of the cohort.';


--
-- Name: COLUMN studentcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.enddate IS 'The month, day, and year on which the student was removed as part of the cohort.';


--
-- Name: studentcohortassociationsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociationsection (
    begindate date NOT NULL,
    cohortidentifier character varying(36) NOT NULL,
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcohortassociationsection OWNER TO postgres;

--
-- Name: TABLE studentcohortassociationsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociationsection IS 'The cohort representing the subdivision of students within one or more sections. For example, a group of students may be given additional instruction and tracked as a cohort.';


--
-- Name: COLUMN studentcohortassociationsection.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.begindate IS 'The month, day, and year on which the student was first identified as part of the cohort.';


--
-- Name: COLUMN studentcohortassociationsection.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentcohortassociationsection.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociationsection.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcohortassociationsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcohortassociationsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcohortassociationsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcohortassociationsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcohortassociationsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    objectiveeducationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    objectiveeducationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation IS 'Relates the student and program associated with the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivestudentsectionassociation (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodname character varying(60) NOT NULL,
    gradingperiodschoolid bigint NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    objectiveeducationorganizationid bigint NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivestudentsectionassociation IS 'Relates the student and section associated with the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The state''s name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodname IS 'The school''s descriptive name of the grading period.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: studentcteprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    nontraditionalgenderstatus boolean,
    privatecteprogram boolean,
    technicalskillsassessmentdescriptorid integer
);


ALTER TABLE edfi.studentcteprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociation IS 'This association represents the career and technical education (CTE) program that a student participates in. The association is an extension of the StudentProgramAssociation particular for CTE programs.';


--
-- Name: COLUMN studentcteprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociation.nontraditionalgenderstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.nontraditionalgenderstatus IS 'Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.';


--
-- Name: COLUMN studentcteprogramassociation.privatecteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.privatecteprogram IS 'Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA). Students in private institutions which do not receive Perkins funding are reported only in the state file.';


--
-- Name: COLUMN studentcteprogramassociation.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.technicalskillsassessmentdescriptorid IS 'Results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: studentcteprogramassociationcteprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogramservice (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    cteprogramservicedescriptorid integer NOT NULL,
    cipcode character varying(120),
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogramservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogramservice IS 'Indicates the service(s) being provided to the student by the CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid IS 'Indicates the service being provided to the student by the CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cipcode IS 'Number and description of the CIP code associated with the student''s CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociation (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociation IS 'This association describes the behavior of students involved in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociation (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociation IS 'This association indicates those students who were involved and not perpetrators for a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (
    incidentidentifier character varying(36) NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociation (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    barriertointernetaccessinresidencedescriptorid integer,
    genderidentity character varying(60),
    hispaniclatinoethnicity boolean,
    internetaccessinresidence boolean,
    internetaccesstypeinresidencedescriptorid integer,
    internetperformanceinresidencedescriptorid integer,
    limitedenglishproficiencydescriptorid integer,
    loginid character varying(60),
    primarylearningdeviceaccessdescriptorid integer,
    primarylearningdeviceawayfromschooldescriptorid integer,
    primarylearningdeviceproviderdescriptorid integer,
    profilethumbnail character varying(255),
    sexdescriptorid integer,
    supportermilitaryconnectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociation IS 'This association represents student information as reported in the context of the student''s relationship to the education organization. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.genderidentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.genderidentity IS 'The student''s gender as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccessinresidence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccessinresidence IS 'An indication of whether the student is able to access the internet in their primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetperformanceinresidencedescriptorid IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN studenteducationorganizationassociation.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid IS 'The provider of the primary learning device.';


--
-- Name: COLUMN studenteducationorganizationassociation.profilethumbnail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.profilethumbnail IS 'Locator reference for the student photo. The specification for that reference is left to local definition.';


--
-- Name: COLUMN studenteducationorganizationassociation.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.sexdescriptorid IS 'The student''s birth sex as reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.supportermilitaryconnectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.supportermilitaryconnectiondescriptorid IS 'Military connection of the person/people whom the student is a dependent of.';


--
-- Name: studenteducationorganizationassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddress (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: studenteducationorganizationassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddressperiod (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationancestryethnicorigin (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    ancestryethnicorigindescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: studenteducationorganizationassociationcohortyear; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationcohortyear (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    cohortyeartypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationcohortyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationcohortyear IS 'The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.schoolyear IS 'The school year associated with the cohort; for example, the intended school year of graduation.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.termdescriptorid IS 'The term associated with the cohort year; for example, the intended term of graduation.';


--
-- Name: studenteducationorganizationassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisability (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydeterminationsourcetypedescriptorid integer,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisability OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as determined by evaluation(s) conducted by the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisabilitydesignation (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: studenteducationorganizationassociationelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationelectronicmail (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationelectronicmail OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationinternationaladdress (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    begindate date,
    countrydescriptorid integer NOT NULL,
    enddate date,
    latitude character varying(20),
    longitude character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: studenteducationorganizationassociationlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguage (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguage OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: studenteducationorganizationassociationlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguageuse (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguageuse OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: studenteducationorganizationassociationrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationrace (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationrace OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf IS 'The time periods for which characteristic was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid IS 'The characteristic designated for the student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteristic (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteristic OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteristic IS 'Reflects important characteristics of a student. If a student has a characteristic present, that characteristic is considered true or active for that student. If a characteristic is not present, no assumption is made as to the applicability of the characteristic, but local policy may dictate otherwise.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid IS 'The characteristic designated for the student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.designatedby IS 'The person, organization, or department that designated the characteristic.';


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    assigningorganizationidentificationcode character varying(60) NOT NULL,
    studentidentificationsystemdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentidentifica_c15030; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode IS 'The organization code or name assigning the StudentIdentificationCode.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.identificationcode IS 'A unique number or alphanumeric code assigned to a student by a school, school system, a state, or other agency or entity.';


--
-- Name: studenteducationorganizationassociationstudentindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicator (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    designatedby character varying(60),
    indicator character varying(60) NOT NULL,
    indicatorgroup character varying(200),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicator OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicator IS 'An indicator or metric computed for the student (e.g., at risk).';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicator IS 'The value of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorgroup; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorgroup IS 'The name for a group of indicators.';


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod IS 'The time periods for which the indicator was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtelephone (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtelephone OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtribalaffiliation (
    educationorganizationid bigint NOT NULL,
    studentusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtribalaffiliation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtribalaffiliation IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: studentgradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentgradebookentry (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    assignmentlatestatusdescriptorid integer,
    competencyleveldescriptorid integer,
    datefulfilled date,
    diagnosticstatement character varying(1024),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    pointsearned numeric(9,2),
    submissionstatusdescriptorid integer,
    timefulfilled time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: TABLE studentgradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentgradebookentry IS 'This entity holds a student''s grade or competency level for a gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN studentgradebookentry.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentgradebookentry.assignmentlatestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.assignmentlatestatusdescriptorid IS 'Status of whether the assignment was submitted after the due date and/or marked as.';


--
-- Name: COLUMN studentgradebookentry.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced learning objective.';


--
-- Name: COLUMN studentgradebookentry.datefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.datefulfilled IS 'The date an assignment was turned in or the date of an assessment.';


--
-- Name: COLUMN studentgradebookentry.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN studentgradebookentry.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.pointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.pointsearned IS 'The points earned for the submission. With extra credit, the points earned may exceed the max points.';


--
-- Name: COLUMN studentgradebookentry.submissionstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.submissionstatusdescriptorid IS 'The status of the student''s submission.';


--
-- Name: COLUMN studentgradebookentry.timefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.timefulfilled IS 'The time an assignment was turned in on the date fulfilled.';


--
-- Name: studenthomelessprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    awaitingfostercare boolean,
    homelessprimarynighttimeresidencedescriptorid integer,
    homelessunaccompaniedyouth boolean
);


ALTER TABLE edfi.studenthomelessprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociation IS 'This association represents the McKinney-Vento Homeless Program program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studenthomelessprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociation.awaitingfostercare; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.awaitingfostercare IS 'State defined definition for awaiting foster care.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessunaccompaniedyouth; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessunaccompaniedyouth IS 'A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.';


--
-- Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociationhomelessprogramservice (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    homelessprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenthomelessprogramassociationhomelessprogramservice OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociationhomelessprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociationhomelessprogramservice IS 'Indicates the service(s) being provided to the student by the homeless program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid IS 'Indicates the service being provided to the student by the homeless program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationdocument (
    studentusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN studentidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studentidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: studentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationsystemdescriptor (
    studentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE studentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the student.';


--
-- Name: COLUMN studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentinterventionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociation (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    cohortidentifier character varying(36),
    cohorteducationorganizationid bigint,
    diagnosticstatement character varying(1024),
    dosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociation IS 'This association indicates the students participating in an intervention.';


--
-- Name: COLUMN studentinterventionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentinterventionassociation.cohorteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohorteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.diagnosticstatement IS 'A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.';


--
-- Name: COLUMN studentinterventionassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the intervention.';


--
-- Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociationinterventioneffectiveness (
    educationorganizationid bigint NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    diagnosisdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentinterventionassociationinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociationinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociationinterventioneffectiveness IS 'A measure of the effects of an intervention in each outcome domain. The rating of effectiveness takes into account four factors: the quality of the research on the intervention, the statistical significance of the research findings, the size of the differences between participants in the intervention and comparison groups and the consistency in results.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    eventdate date NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    interventionduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentinterventionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for an intervention service.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionduration IS 'The duration in minutes in which the student participated in the intervention during this instance.';


--
-- Name: studentlanguageinstructionprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    dosage integer,
    englishlearnerparticipation boolean
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociation IS 'This association represents the Title III Language Instruction for Limited English Proficient and Immigrant Students program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.englishlearnerparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.englishlearnerparticipation IS 'An indication that an English learner student is served by an English language instruction educational program supported with Title III of ESEA funds.';


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    schoolyear smallint NOT NULL,
    monitoreddescriptorid integer,
    participationdescriptorid integer,
    proficiencydescriptorid integer,
    progressdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 IS 'Results of yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear IS 'The school year for which the assessment was administered.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid IS 'Student is monitored on content achievement who are no longer receiving services.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid IS 'Field indicating the participation in the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid IS 'The proficiency level for the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid IS 'The yearly progress or growth from last year''s assessment.';


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    languageinstructionprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 IS 'Indicates the service(s) being provided to the student by the language instruction program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid IS 'Indicates the service being provided to the student by the language instruction program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentmigranteducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    continuationofservicesreasondescriptorid integer,
    eligibilityexpirationdate date,
    lastqualifyingmove date NOT NULL,
    priorityforservices boolean NOT NULL,
    qualifyingarrivaldate date,
    stateresidencydate date,
    usinitialentry date,
    usinitialschoolentry date,
    usmostrecententry date
);


ALTER TABLE edfi.studentmigranteducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociation IS 'This association represents the migrant education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation with added elements particular to migrant education programs.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid IS 'The "continuation of services" provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).';


--
-- Name: COLUMN studentmigranteducationprogramassociation.eligibilityexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.eligibilityexpirationdate IS 'The eligibility expiration date is used to determine end of eligibility and to account for a child''s eligibility expiring earlier than 36 months from the child''s QAD. A child''s eligibility would end earlier than 36 months from the child''s QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by states'' requirements), or if the child passes away.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.lastqualifyingmove; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.lastqualifyingmove IS 'Date the last qualifying move occurred; used to compute MEP status.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.priorityforservices; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.priorityforservices IS 'Report migratory children who are classified as having "priority for services" because they are failing, or most at risk of failing to meet the state''s challenging state academic content standards and challenging state student academic achievement standards, and their education has been interrupted during the regular school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.qualifyingarrivaldate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.qualifyingarrivaldate IS 'The qualifying arrival date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child''s eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.stateresidencydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.stateresidencydate IS 'The verified state residency for the student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialentry IS 'The month, day, and year on which the student first entered the U.S.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialschoolentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialschoolentry IS 'The month, day, and year on which the student first entered a U.S. school.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usmostrecententry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usmostrecententry IS 'The month, day, and year of the student''s most recent entry into the U.S.';


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    migranteducationprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 IS 'Indicates the service(s) being provided to the student by the migrant education program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the migrant education program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentneglectedordelinquentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    elaprogressleveldescriptorid integer,
    mathematicsprogressleveldescriptorid integer,
    neglectedordelinquentprogramdescriptorid integer
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociation IS 'This association represents the Title I Part D Neglected or Delinquent program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid IS 'The progress measured from pre- to post- test for ELA.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid IS 'The progress measured from pre- to post-test for Mathematics.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid IS 'The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociationneglectedo_520251; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 IS 'Indicates the service(s) being provided to the student by the neglected or delinquent program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid IS 'Indicates the service being provided to the student by the neglected or delinquent program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentothername (
    studentusi integer NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentothername OWNER TO postgres;

--
-- Name: TABLE studentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN studentothername.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN studentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN studentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN studentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN studentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN studentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: studentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparticipationcodedescriptor (
    studentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE studentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparticipationcodedescriptor IS 'The role or type of participation of a student in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN studentparticipationcodedescriptor.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparticipationcodedescriptor.studentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentpersonalidentificationdocument (
    studentusi integer NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN studentpersonalidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: studentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL
);


ALTER TABLE edfi.studentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociation IS 'This association represents the program(s) that a student participates in or is served by.';


--
-- Name: COLUMN studentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociationservice IS 'Indicates the service(s) being provided to the student by the program.';


--
-- Name: COLUMN studentprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicedescriptorid IS 'Indicates the service being provided to the student by the program.';


--
-- Name: COLUMN studentprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    eventdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    programattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentprogramattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramattendanceevent IS 'This event entity represents the recording of whether a student is in attendance to receive or participate in program services.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentprogramattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentprogramattendanceevent.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramattendanceevent.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentprogramattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentprogramattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentprogramattendanceevent.programattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programattendanceduration IS 'The duration in minutes of the program attendance event.';


--
-- Name: studentprogramevaluation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramevaluation (
    evaluationdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    educationorganizationid bigint,
    evaluationduration integer,
    staffevaluatorstaffusi integer,
    summaryevaluationcomment character varying(1024),
    summaryevaluationnumericrating numeric(6,3),
    summaryevaluationratingleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentprogramevaluation OWNER TO postgres;

--
-- Name: TABLE studentprogramevaluation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramevaluation IS 'The evaluation results for a student as evaluated in the context of a program.';


--
-- Name: COLUMN studentprogramevaluation.evaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.evaluationdate IS 'The month, day, and year on which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluation.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN studentprogramevaluation.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN studentprogramevaluation.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN studentprogramevaluation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramevaluation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramevaluation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramevaluation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluation.evaluationduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.evaluationduration IS 'The actual or estimated number of clock minutes during which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluation.staffevaluatorstaffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.staffevaluatorstaffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentprogramevaluation.summaryevaluationcomment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.summaryevaluationcomment IS 'Any comments about the summary evaluation to be captured.';


--
-- Name: COLUMN studentprogramevaluation.summaryevaluationnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.summaryevaluationnumericrating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN studentprogramevaluation.summaryevaluationratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluation.summaryevaluationratingleveldescriptorid IS 'The summary rating level achieved based upon the rating or score.';


--
-- Name: studentprogramevaluationexternalevaluator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramevaluationexternalevaluator (
    evaluationdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    externalevaluator character varying(150) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramevaluationexternalevaluator OWNER TO postgres;

--
-- Name: TABLE studentprogramevaluationexternalevaluator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramevaluationexternalevaluator IS 'The external person(s) - not staff - that conducted the evaluation.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.evaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.evaluationdate IS 'The month, day, and year on which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramevaluationexternalevaluator.externalevaluator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationexternalevaluator.externalevaluator IS 'The external person(s) - not staff - that conducted the evaluation.';


--
-- Name: studentprogramevaluationstudentevaluationelement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramevaluationstudentevaluationelement (
    evaluationdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    programevaluationelementtitle character varying(50) NOT NULL,
    evaluationelementnumericrating numeric(6,3),
    evaluationelementratingleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramevaluationstudentevaluationelement OWNER TO postgres;

--
-- Name: TABLE studentprogramevaluationstudentevaluationelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramevaluationstudentevaluationelement IS 'The student''s rating and/or rating levels earned for a program evaluation element.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.evaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.evaluationdate IS 'The month, day, and year on which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.programevaluationelementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.programevaluationelementtitle IS 'The name or title of the program evaluation element.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.evaluationelementnumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.evaluationelementnumericrating IS 'The numerical rating or score for the evaluation element.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationelement.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationelement.evaluationelementratingleveldescriptorid IS 'The rating level achieved based upon the rating or score for the evaluation element.';


--
-- Name: studentprogramevaluationstudentevaluationobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramevaluationstudentevaluationobjective (
    evaluationdate date NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programevaluationperioddescriptorid integer NOT NULL,
    programevaluationtitle character varying(50) NOT NULL,
    programevaluationtypedescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    programevaluationobjectivetitle character varying(50) NOT NULL,
    evaluationobjectivenumericrating numeric(6,3),
    evaluationobjectiveratingleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramevaluationstudentevaluationobjective OWNER TO postgres;

--
-- Name: TABLE studentprogramevaluationstudentevaluationobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramevaluationstudentevaluationobjective IS 'The student''s rating and/or rating levels earned for a program evaluation objective.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.evaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.evaluationdate IS 'The month, day, and year on which the evaluation was conducted.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programevaluationperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programevaluationperioddescriptorid IS 'The name of the period for the program evaluation.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programevaluationtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programevaluationtitle IS 'An assigned unique identifier for the student program evaluation.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programevaluationtypedescriptorid IS 'The type of program evaluation conducted.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.programevaluationobjectivetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.programevaluationobjectivetitle IS 'The name or title of the program evaluation objective.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.evaluationobjectivenumericrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.evaluationobjectivenumericrating IS 'The numerical rating or score for the evaluation objective.';


--
-- Name: COLUMN studentprogramevaluationstudentevaluationobjective.evaluationobjectiveratingleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramevaluationstudentevaluationobjective.evaluationobjectiveratingleveldescriptorid IS 'The rating level achieved based upon the rating or score for the evaluation objective.';


--
-- Name: studentschoolassociationalternativegraduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationalternativegraduationplan (
    entrydate date NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    alternativeeducationorganizationid bigint NOT NULL,
    alternativegraduationplantypedescriptorid integer NOT NULL,
    alternativegraduationschoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationalternativegraduationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationalternativegraduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationalternativegraduationplan IS 'The secondary graduation plan or plans associated with the student enrolled in the school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: studentschoolassociationeducationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationeducationplan (
    entrydate date NOT NULL,
    schoolid bigint NOT NULL,
    studentusi integer NOT NULL,
    educationplandescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationeducationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationeducationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationeducationplan IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN studentschoolassociationeducationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociationeducationplan.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.educationplandescriptorid IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    arrivaltime time without time zone,
    attendanceeventreason character varying(255),
    departuretime time without time zone,
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    schoolattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentschoolattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a school day.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentschoolattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentschoolattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentschoolattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentschoolattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentschoolattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentschoolattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolattendanceduration IS 'The duration in minutes of the school attendance event.';


--
-- Name: studentschoolfoodserviceprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    directcertification boolean
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociation IS 'This association represents the school food services program(s), such as the Free or Reduced Lunch program, that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.directcertification; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.directcertification IS 'Indicates that the student''s National School Lunch Program (NSLP) eligibility has been determined through direct certification.';


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb IS 'Indicates the service(s) being provided to the student by the school food service program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid IS 'Indicates the service being provided to the student by the school food service program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionassociation (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attemptstatusdescriptorid integer,
    enddate date,
    homeroomindicator boolean,
    repeatidentifierdescriptorid integer,
    teacherstudentdatalinkexclusion boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionassociation IS 'This association indicates the course sections to which a student is assigned.';


--
-- Name: COLUMN studentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionassociation.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.attemptstatusdescriptorid IS 'An indication of the student''s completion status for the section.';


--
-- Name: COLUMN studentsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.enddate IS 'Month, day, and year of the withdrawal or exit of the student from the section.';


--
-- Name: COLUMN studentsectionassociation.homeroomindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.homeroomindicator IS 'Indicates the section is the student''s homeroom. Homeroom period may the convention for taking daily attendance.';


--
-- Name: COLUMN studentsectionassociation.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.repeatidentifierdescriptorid IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN studentsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: studentsectionassociationprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionassociationprogram (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentsectionassociationprogram OWNER TO postgres;

--
-- Name: TABLE studentsectionassociationprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionassociationprogram IS 'The program(s) that the student is participating in the context of the course.';


--
-- Name: COLUMN studentsectionassociationprogram.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentsectionassociationprogram.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionassociationprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionassociationprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionassociationprogram.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionassociationprogram.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionassociationprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionassociationprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentsectionassociationprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentsectionassociationprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociationprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    arrivaltime time without time zone,
    attendanceeventreason character varying(255),
    departuretime time without time zone,
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    sectionattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a section.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentsectionattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentsectionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentsectionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionattendanceduration IS 'The duration in minutes of the section attendance event.';


--
-- Name: studentsectionattendanceeventclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceeventclassperiod (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    classperiodname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceeventclassperiod OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceeventclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceeventclassperiod IS 'The class period(s) to which the section attendance event applies.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: studentspecialeducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    ideaeligibility boolean,
    iepbegindate date,
    iependdate date,
    iepreviewdate date,
    lastevaluationdate date,
    medicallyfragile boolean,
    multiplydisabled boolean,
    schoolhoursperweek numeric(5,2),
    specialeducationhoursperweek numeric(5,2),
    specialeducationsettingdescriptorid integer
);


ALTER TABLE edfi.studentspecialeducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociation IS 'This association represents the special education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation particular for special education programs.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.ideaeligibility; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.ideaeligibility IS 'Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepbegindate IS 'The effective date of the most recent IEP.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iependdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iependdate IS 'The end date of the most recent IEP.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepreviewdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepreviewdate IS 'The date of the last IEP review.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.lastevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.lastevaluationdate IS 'The date of the last special education evaluation.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.medicallyfragile; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.medicallyfragile IS 'Indicates whether the student receiving special education and related services is: 1) in the age range of birth to 22 years, and 2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and 3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and 4) lives with ongoing threat to his or her continued well-being. Aligns with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.multiplydisabled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.multiplydisabled IS 'Indicates whether the student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.schoolhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.schoolhoursperweek IS 'Indicate the total number of hours of instructional time per week for the school that the student attends.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationhoursperweek IS 'The number of hours per week for special education instruction and therapy.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationsettingdescriptorid IS 'The major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: studentspecialeducationprogramassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisability (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydeterminationsourcetypedescriptorid integer,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisability OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as related to special education services received.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationserviceprovider (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    staffusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationserviceprovider OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationserviceprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationserviceprovider IS 'The staff providing special education services to the student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 IS 'Indicates the service(s) being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c IS 'The staff providing the service to the student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studentspecialeducationprogrameligibilityassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogrameligibilityassociation (
    consenttoevaluationreceiveddate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    consenttoevaluationdate date,
    eligibilitydelayreasondescriptorid integer,
    eligibilitydeterminationdate date,
    eligibilityevaluationdate date,
    eligibilityevaluationtypedescriptorid integer,
    evaluationcompleteindicator boolean,
    evaluationdelaydays integer,
    evaluationdelayreasondescriptorid integer,
    evaluationlatereason character varying(255),
    ideaindicator boolean,
    ideapartdescriptorid integer NOT NULL,
    originaleciservicesdate date,
    transitionconferencedate date,
    transitionnotificationdate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogrameligibilityassociation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogrameligibilityassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogrameligibilityassociation IS 'Captures details regarding the evaluation process for eligibility of students for special education services under IDEA Part C or Part B.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.consenttoevaluationreceiveddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.consenttoevaluationreceiveddate IS 'Indicates the date on which the local education agency received written consent for the evaluation from the student''s parent or guardian. This is the first day of the evaluation timeframe.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.consenttoevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.consenttoevaluationdate IS 'The date on which the student''s parent gave a consent (Parent Consent Date).';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.eligibilitydelayreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.eligibilitydelayreasondescriptorid IS 'The reason why the eligibility determination was completed beyond the required timeframe.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.eligibilitydeterminationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.eligibilitydeterminationdate IS 'Indicates the month, day, and year the local education agency (LEA) held the admission, review, and dismissal committee meeting regarding the child''s eligibility determination for special education and related services. An individualized education plan (IEP) would be developed and implemented for a child admitted into special education on this same date.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.eligibilityevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.eligibilityevaluationdate IS 'Indicates the month, day, and year when the written individual evaluation report was completed.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.eligibilityevaluationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.eligibilityevaluationtypedescriptorid IS 'Indicates if this is an initial evaluation or a reevaluation.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.evaluationcompleteindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.evaluationcompleteindicator IS 'Indicates the evaluation completed status.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.evaluationdelaydays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.evaluationdelaydays IS 'Indicates the number of student absences, if any, beginning the first instructional day following the date on which the local education agency (LEA) received written parental or guardian consent for the evaluation.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.evaluationdelayreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.evaluationdelayreasondescriptorid IS 'Refers to the justification as to why the evaluation report was completed beyond the state-established timeframe. This descriptor field will have allowed reasons as descriptor values.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.evaluationlatereason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.evaluationlatereason IS 'Refers to additional information for delay in doing the evaluation.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.ideaindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.ideaindicator IS 'Indicates whether or not the student was determined eligible and enrolled in special education and related services as a result of the evaluation report and the admission, review, and dismissal committee meeting decision.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.ideapartdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.ideapartdescriptorid IS 'Indicates if the evaluation is done under Part B IDEA or Part C IDEA.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.originaleciservicesdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.originaleciservicesdate IS 'The month, date, and year when an infant or toddler, from birth through age 2, began participating in the early childhood intervention (ECI) program.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.transitionconferencedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.transitionconferencedate IS 'Indicates the month, day, and year when the transition conference was held (for a child receiving early childhood intervention (ECI) services) among the lead agency, the family, and the local education agency (LEA) where the child resides to discuss the child''s potential eligibility for early childhood special education (ECSE) services.';


--
-- Name: COLUMN studentspecialeducationprogrameligibilityassociation.transitionnotificationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogrameligibilityassociation.transitionnotificationdate IS 'Indicates the month, day, and year the LEA Notification of Potentially Eligible for Special Education Services was sent by the early childhood intervention (ECI) contractor to the local education agency (LEA) to notify them that a child enrolled in ECI will shortly reach the age of eligibility for Part B services and the child is potentially eligible for services under Part B, early childhood special education (ECSE). The LEA Notification constitutes a referral to the LEA for an initial evaluation and eligibility determination of the child which the parent or guardian may opt out from the referral.';


--
-- Name: studenttitleipartaprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociation (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociation IS 'This association represents the Title I Part A program(s) that a student participates in or from which the student receives services. The association is an extension of the StudentProgramAssociation particular for Title I Part A programs.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid IS 'An indication of the type of Title I program, if any, in which the student is participating and by which the student is served.';


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (
    begindate date NOT NULL,
    educationorganizationid bigint NOT NULL,
    programeducationorganizationid bigint NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationtitleipartaprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice IS 'Indicates the service(s) being provided to the student by the Title I Part A program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Title I Part A Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentvisa (
    studentusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentvisa OWNER TO postgres;

--
-- Name: TABLE studentvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN studentvisa.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: submissionstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.submissionstatusdescriptor (
    submissionstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.submissionstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE submissionstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.submissionstatusdescriptor IS 'The status of the student''s submission.';


--
-- Name: COLUMN submissionstatusdescriptor.submissionstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.submissionstatusdescriptor.submissionstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: supportermilitaryconnectiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.supportermilitaryconnectiondescriptor (
    supportermilitaryconnectiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.supportermilitaryconnectiondescriptor OWNER TO postgres;

--
-- Name: TABLE supportermilitaryconnectiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.supportermilitaryconnectiondescriptor IS 'Military connection of the person/people whom the student is a dependent of.';


--
-- Name: COLUMN supportermilitaryconnectiondescriptor.supportermilitaryconnectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.supportermilitaryconnectiondescriptor.supportermilitaryconnectiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: survey; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.survey (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    educationorganizationid bigint,
    numberadministered integer,
    schoolid bigint,
    schoolyear smallint NOT NULL,
    sessionname character varying(60),
    surveycategorydescriptorid integer,
    surveytitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.survey OWNER TO postgres;

--
-- Name: TABLE survey; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.survey IS 'A survey to identified or anonymous respondents.';


--
-- Name: COLUMN survey.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN survey.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN survey.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN survey.numberadministered; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.numberadministered IS 'Number of persons to whom this survey was administered.';


--
-- Name: COLUMN survey.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN survey.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolyear IS 'The school year associated with the survey.';


--
-- Name: COLUMN survey.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN survey.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveycategorydescriptorid IS 'The category or type of survey.';


--
-- Name: COLUMN survey.surveytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveytitle IS 'The title of the survey.';


--
-- Name: surveycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycategorydescriptor (
    surveycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE surveycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycategorydescriptor IS 'The descriptor holds the category or type of survey.';


--
-- Name: COLUMN surveycategorydescriptor.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycategorydescriptor.surveycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveycourseassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycourseassociation (
    coursecode character varying(60) NOT NULL,
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: TABLE surveycourseassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycourseassociation IS 'The course associated with the survey.';


--
-- Name: COLUMN surveycourseassociation.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN surveycourseassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveycourseassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveycourseassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyleveldescriptor (
    surveyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE surveyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyleveldescriptor IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyleveldescriptor.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyleveldescriptor.surveyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveyprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyprogramassociation (
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: TABLE surveyprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyprogramassociation IS 'The program associated with the survey.';


--
-- Name: COLUMN surveyprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyprogramassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN surveyprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN surveyprogramassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyquestion; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestion (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    questionformdescriptorid integer NOT NULL,
    questiontext character varying(1024) NOT NULL,
    surveysectiontitle character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestion OWNER TO postgres;

--
-- Name: TABLE surveyquestion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestion IS 'The questions for the survey.';


--
-- Name: COLUMN surveyquestion.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestion.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestion.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestion.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questionformdescriptorid IS 'The form or type of question.';


--
-- Name: COLUMN surveyquestion.questiontext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questiontext IS 'The text of the question.';


--
-- Name: COLUMN surveyquestion.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveyquestionmatrix; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionmatrix (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    matrixelement character varying(255) NOT NULL,
    maxrawscore integer,
    minrawscore integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionmatrix OWNER TO postgres;

--
-- Name: TABLE surveyquestionmatrix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionmatrix IS 'Information about the matrix element in the survey.';


--
-- Name: COLUMN surveyquestionmatrix.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionmatrix.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionmatrix.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionmatrix.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionmatrix.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.maxrawscore IS 'The maximum score possible on a survey.';


--
-- Name: COLUMN surveyquestionmatrix.minrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.minrawscore IS 'The minimum score possible on a survey.';


--
-- Name: surveyquestionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponse (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    comment character varying(1024),
    noresponse boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponse IS 'The response to a survey question.';


--
-- Name: COLUMN surveyquestionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponse.comment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.comment IS 'Additional information provided by the responder about the question in the survey.';


--
-- Name: COLUMN surveyquestionresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: surveyquestionresponsechoice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsechoice (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    sortorder integer NOT NULL,
    numericvalue integer,
    textvalue character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsechoice OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsechoice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsechoice IS 'The optional list of possible responses to a survey question.';


--
-- Name: COLUMN surveyquestionresponsechoice.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsechoice.sortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.sortorder IS 'Sort order of this ResponseChoice within the complete list of choices attached to a SurveyQuestion. If sort order doesn''t apply, the value of NumericValue or a unique, possibly sequential numeric value.';


--
-- Name: COLUMN surveyquestionresponsechoice.numericvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.numericvalue IS 'A valid numeric response. If paired with a TextValue, the numeric equivalent of the TextValue.';


--
-- Name: COLUMN surveyquestionresponsechoice.textvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.textvalue IS 'A valid text response. If paired with a NumericValue, the text equivalent of the NumericValue.';


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    matrixelement character varying(255) NOT NULL,
    maxnumericresponse integer,
    minnumericresponse integer,
    noresponse boolean,
    numericresponse integer,
    textresponse character varying(2048),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsesurveyquestionmatrixelementresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse IS 'For matrix questions, the response for each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse IS 'The maximum score response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse IS 'The minimum score response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse IS 'The numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse IS 'The text response(s) for the question.';


--
-- Name: surveyquestionresponsevalue; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsevalue (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveyquestionresponsevalueidentifier integer NOT NULL,
    numericresponse integer,
    textresponse character varying(2048),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsevalue OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsevalue IS 'For free-form, single- or multiple-selection questions, one or more responses.';


--
-- Name: COLUMN surveyquestionresponsevalue.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyquestionresponsevalueidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyquestionresponsevalueidentifier IS 'Primary key for the response value; a unique, usually sequential numeric value for a collection of responses, or potentially the value of NumericResponse for a single response.';


--
-- Name: COLUMN surveyquestionresponsevalue.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.numericresponse IS 'A numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsevalue.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.textresponse IS 'A text response to the question.';


--
-- Name: surveyresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    contactusi integer,
    electronicmailaddress character varying(128),
    fullname character varying(80),
    location character varying(75),
    responsedate date NOT NULL,
    responsetime integer,
    staffusi integer,
    studentusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponse OWNER TO postgres;

--
-- Name: TABLE surveyresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponse IS 'Responses to a Survey for named or anonymous persons.';


--
-- Name: COLUMN surveyresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponse.contactusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.contactusi IS 'A unique alphanumeric code assigned to a contact.';


--
-- Name: COLUMN surveyresponse.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.electronicmailaddress IS 'Email address of the respondent.';


--
-- Name: COLUMN surveyresponse.fullname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.fullname IS 'Full name of the respondent.';


--
-- Name: COLUMN surveyresponse.location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.location IS 'Location of the respondent, often a city, district, or school.';


--
-- Name: COLUMN surveyresponse.responsedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsedate IS 'Date of the survey response.';


--
-- Name: COLUMN surveyresponse.responsetime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsetime IS 'The amount of time (in seconds) it took for the respondent to complete the survey.';


--
-- Name: COLUMN surveyresponse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveyresponse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponseeducationorganizationtargetassociation (
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponseeducationorganizationtargetassociation IS 'This association provides information about the survey being taken and the education organization the survey is about.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsestafftargetassociation IS 'The association provides information about the survey being taken and who the survey is about.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsesurveylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsesurveylevel (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveyleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyresponsesurveylevel OWNER TO postgres;

--
-- Name: TABLE surveyresponsesurveylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsesurveylevel IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyresponsesurveylevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyleveldescriptorid IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: surveysection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysection (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysection OWNER TO postgres;

--
-- Name: TABLE surveysection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysection IS 'The section of questions for the survey.';


--
-- Name: COLUMN surveysection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysection.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysection.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionassociation (
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionassociation IS 'The section associated with the survey.';


--
-- Name: COLUMN surveysectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN surveysectionassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN surveysectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN surveysectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN surveysectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN surveysectionassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveysectionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    sectionrating numeric(9,3),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: TABLE surveysectionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponse IS 'Optional information about the responses provided for a section of a survey.';


--
-- Name: COLUMN surveysectionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponse.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: COLUMN surveysectionresponse.sectionrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.sectionrating IS 'Numeric rating computed from the survey responses for the section.';


--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponseeducationorganizationtargetassociation (
    educationorganizationid bigint NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponseeducationorganizationtargetassociation IS 'This association provides information about the survey section and the education organization the survey section is about.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponsestafftargetassociation IS 'This association provides information about the survey section and the staff the survey section is about.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: teachingcredentialbasisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialbasisdescriptor (
    teachingcredentialbasisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialbasisdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialbasisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialbasisdescriptor IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: teachingcredentialdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialdescriptor (
    teachingcredentialdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialdescriptor IS 'This descriptor defines an indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN teachingcredentialdescriptor.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialdescriptor.teachingcredentialdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: technicalskillsassessmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.technicalskillsassessmentdescriptor (
    technicalskillsassessmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.technicalskillsassessmentdescriptor OWNER TO postgres;

--
-- Name: TABLE technicalskillsassessmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.technicalskillsassessmentdescriptor IS 'This descriptor defines the results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: COLUMN technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: telephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.telephonenumbertypedescriptor (
    telephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.telephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE telephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.telephonenumbertypedescriptor IS 'The type of communication number listed for an individual.';


--
-- Name: COLUMN telephonenumbertypedescriptor.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.telephonenumbertypedescriptor.telephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: termdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.termdescriptor (
    termdescriptorid integer NOT NULL
);


ALTER TABLE edfi.termdescriptor OWNER TO postgres;

--
-- Name: TABLE termdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.termdescriptor IS 'A distinct period of time into which the academic year is divided. These could be “semesters”, “trimesters” or “quarters”, depending on the school or district’s academic calendar.';


--
-- Name: COLUMN termdescriptor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.termdescriptor.termdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaparticipantdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaparticipantdescriptor (
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaparticipantdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaparticipantdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaparticipantdescriptor IS 'An indication of the type of Title I program, if any, in which the student is participating and served.';


--
-- Name: COLUMN titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaprogramservicedescriptor (
    titleipartaprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a Title I Part A program.';


--
-- Name: COLUMN titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaschooldesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaschooldesignationdescriptor (
    titleipartaschooldesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaschooldesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaschooldesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaschooldesignationdescriptor IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: COLUMN titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: tribalaffiliationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.tribalaffiliationdescriptor (
    tribalaffiliationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.tribalaffiliationdescriptor OWNER TO postgres;

--
-- Name: TABLE tribalaffiliationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.tribalaffiliationdescriptor IS 'An American Indian tribe with which an individual is affiliated.';


--
-- Name: COLUMN tribalaffiliationdescriptor.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.tribalaffiliationdescriptor.tribalaffiliationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: visadescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.visadescriptor (
    visadescriptorid integer NOT NULL
);


ALTER TABLE edfi.visadescriptor OWNER TO postgres;

--
-- Name: TABLE visadescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.visadescriptor IS 'An indicator of a non-U.S. citizen''s Visa type.';


--
-- Name: COLUMN visadescriptor.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.visadescriptor.visadescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: weapondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.weapondescriptor (
    weapondescriptorid integer NOT NULL
);


ALTER TABLE edfi.weapondescriptor OWNER TO postgres;

--
-- Name: TABLE weapondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.weapondescriptor IS 'This descriptor defines the types of weapon used during an incident.';


--
-- Name: COLUMN weapondescriptor.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.weapondescriptor.weapondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptorequivalencegroup; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroup (
    descriptorequivalencegroupid uuid DEFAULT gen_random_uuid() NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroup OWNER TO postgres;

--
-- Name: descriptorequivalencegroupassignment; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupassignment (
    descriptorid integer NOT NULL,
    descriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupassignment OWNER TO postgres;

--
-- Name: descriptorequivalencegroupgeneralization; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupgeneralization (
    descriptorequivalencegroupid uuid NOT NULL,
    generalizationdescriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupgeneralization OWNER TO postgres;

--
-- Name: operationalcontext; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontext (
    operationalcontexturi character varying(255) NOT NULL,
    displayname character varying(100) NOT NULL,
    organizationname character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.operationalcontext OWNER TO postgres;

--
-- Name: operationalcontextdescriptorusage; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontextdescriptorusage (
    operationalcontexturi character varying(255) NOT NULL,
    descriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE interop.operationalcontextdescriptorusage OWNER TO postgres;

--
-- Name: operationalcontextsupport; Type: VIEW; Schema: interop; Owner: postgres
--

CREATE VIEW interop.operationalcontextsupport AS
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup deg ON ((sdega.descriptorequivalencegroupid = deg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((deg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    1 AS isgeneralized
   FROM (((((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup sdeg ON ((sdega.descriptorequivalencegroupid = sdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupgeneralization degg ON ((sdeg.descriptorequivalencegroupid = degg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroup tdeg ON ((degg.generalizationdescriptorequivalencegroupid = tdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((tdeg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (edfi.descriptor sd
     JOIN interop.operationalcontextdescriptorusage tocd ON ((sd.descriptorid = tocd.descriptorid)));


ALTER TABLE interop.operationalcontextsupport OWNER TO postgres;

--
-- Name: DeployJournal; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeployJournal" (
    schemaversionsid integer NOT NULL,
    scriptname character varying(255) NOT NULL,
    applied timestamp without time zone NOT NULL
);


ALTER TABLE public."DeployJournal" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."DeployJournal_schemaversionsid_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."DeployJournal_schemaversionsid_seq" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."DeployJournal_schemaversionsid_seq" OWNED BY public."DeployJournal".schemaversionsid;


--
-- Name: accreditationstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.accreditationstatusdescriptor (
    accreditationstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.accreditationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE accreditationstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.accreditationstatusdescriptor IS 'Accreditation Status for a Teacher Preparation Provider.';


--
-- Name: COLUMN accreditationstatusdescriptor.accreditationstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.accreditationstatusdescriptor.accreditationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: aidtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.aidtypedescriptor (
    aidtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.aidtypedescriptor OWNER TO postgres;

--
-- Name: TABLE aidtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.aidtypedescriptor IS 'This descriptor defines the classification of financial aid awarded to a person for the academic term/year.';


--
-- Name: COLUMN aidtypedescriptor.aidtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.aidtypedescriptor.aidtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: candidate; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidate (
    candidateidentifier character varying(32) NOT NULL,
    birthcity character varying(30),
    birthcountrydescriptorid integer,
    birthdate date NOT NULL,
    birthinternationalprovince character varying(150),
    birthsexdescriptorid integer,
    birthstateabbreviationdescriptorid integer,
    dateenteredus date,
    displacementstatus character varying(30),
    economicdisadvantaged boolean,
    englishlanguageexamdescriptorid integer,
    firstgenerationstudent boolean,
    firstname character varying(75) NOT NULL,
    genderdescriptorid integer,
    generationcodesuffix character varying(10),
    hispaniclatinoethnicity boolean,
    lastsurname character varying(75) NOT NULL,
    limitedenglishproficiencydescriptorid integer,
    maidenname character varying(75),
    middlename character varying(75),
    multiplebirthstatus boolean,
    personaltitleprefix character varying(30),
    personid character varying(32),
    preferredfirstname character varying(75),
    preferredlastsurname character varying(75),
    sexdescriptorid integer NOT NULL,
    sourcesystemdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.candidate OWNER TO postgres;

--
-- Name: TABLE candidate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidate IS 'A candidate is both a person enrolled in a educator preparation program and a candidate to become an educator.';


--
-- Name: COLUMN candidate.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidate.birthcity; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN candidate.birthcountrydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN candidate.birthdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN candidate.birthinternationalprovince; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN candidate.birthsexdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthsexdescriptorid IS 'A person''s sex at birth.';


--
-- Name: COLUMN candidate.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN candidate.dateenteredus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN candidate.displacementstatus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.displacementstatus IS 'Indicates a state health or weather related event that displaces a group of students, and may require additional funding, educational, or social services.';


--
-- Name: COLUMN candidate.economicdisadvantaged; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.economicdisadvantaged IS 'An indication of inadequate financial condition of an individual''s family, as determined by family income, number of family members/dependents, participation in public assistance programs, and/or other characteristics considered relevant by federal, state, and local policy.';


--
-- Name: COLUMN candidate.englishlanguageexamdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.englishlanguageexamdescriptorid IS 'Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).';


--
-- Name: COLUMN candidate.firstgenerationstudent; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.firstgenerationstudent IS 'Indicator of whether individual is a first generation college student.';


--
-- Name: COLUMN candidate.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN candidate.genderdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.genderdescriptorid IS 'The gender of the candidate.';


--
-- Name: COLUMN candidate.generationcodesuffix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN candidate.hispaniclatinoethnicity; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN candidate.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN candidate.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN candidate.maidenname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN candidate.middlename; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN candidate.multiplebirthstatus; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN candidate.personaltitleprefix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN candidate.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN candidate.preferredfirstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.preferredfirstname IS 'The first name the individual prefers, if different from their legal first name';


--
-- Name: COLUMN candidate.preferredlastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.preferredlastsurname IS 'The last name the individual prefers, if different from their legal last name';


--
-- Name: COLUMN candidate.sexdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.sexdescriptorid IS 'The sex of the candidate.';


--
-- Name: COLUMN candidate.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidate.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: candidateaddress; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateaddress (
    candidateidentifier character varying(32) NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    congressionaldistrict character varying(30),
    countyfipscode character varying(5),
    donotpublishindicator boolean,
    latitude character varying(20),
    localedescriptorid integer,
    longitude character varying(20),
    nameofcounty character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateaddress OWNER TO postgres;

--
-- Name: TABLE candidateaddress; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN candidateaddress.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateaddress.addresstypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN candidateaddress.city; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN candidateaddress.postalcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN candidateaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN candidateaddress.streetnumbername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN candidateaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN candidateaddress.buildingsitenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN candidateaddress.congressionaldistrict; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN candidateaddress.countyfipscode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN candidateaddress.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN candidateaddress.latitude; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN candidateaddress.localedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN candidateaddress.longitude; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN candidateaddress.nameofcounty; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: candidateaddressperiod; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateaddressperiod (
    candidateidentifier character varying(32) NOT NULL,
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    begindate date NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateaddressperiod OWNER TO postgres;

--
-- Name: TABLE candidateaddressperiod; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN candidateaddressperiod.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN candidateaddressperiod.city; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN candidateaddressperiod.postalcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN candidateaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN candidateaddressperiod.streetnumbername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN candidateaddressperiod.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN candidateaddressperiod.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: candidatedisability; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatedisability (
    candidateidentifier character varying(32) NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydeterminationsourcetypedescriptorid integer,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatedisability OWNER TO postgres;

--
-- Name: TABLE candidatedisability; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatedisability IS 'The disability condition(s) that best describes an individual''s impairment.';


--
-- Name: COLUMN candidatedisability.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatedisability.disabilitydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN candidatedisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: COLUMN candidatedisability.disabilitydiagnosis; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN candidatedisability.orderofdisability; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: candidatedisabilitydesignation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatedisabilitydesignation (
    candidateidentifier character varying(32) NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatedisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE candidatedisabilitydesignation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatedisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN candidatedisabilitydesignation.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatedisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN candidatedisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatedisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: candidateeducatorpreparationprogramassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociation (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    enddate date,
    eppprogrampathwaydescriptorid integer,
    reasonexiteddescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociation OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociation IS 'Information about the association between the Teacher Candidate and the EducatorPreparationProgram';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.enddate IS 'The end date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.eppprogrampathwaydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.eppprogrampathwaydescriptorid IS 'The program pathway the candidate is following; for example: Residency, Internship, Traditional';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociation.reasonexiteddescriptorid IS 'Reason exited for the association.';


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    cohortyeartypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociationcohortyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociationcohortyear IS 'The type and year of a cohort the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.schoolyear IS 'The school year associated with the cohort; for example, the intended school year of graduation.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationcohortyear.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationcohortyear.termdescriptorid IS 'The term associated with the cohort year; for example, the intended term of graduation.';


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 (
    begindate date NOT NULL,
    candidateidentifier character varying(32) NOT NULL,
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    majorspecialization character varying(255) NOT NULL,
    enddate date,
    minorspecialization character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 OWNER TO postgres;

--
-- Name: TABLE candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 IS 'Information around the area(s) of specialization for an individual.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.begindate IS 'The begin date for the association.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.majorspecialization; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.majorspecialization IS 'The major area for a degree or area of specialization for a certificate.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.enddate IS 'The month, day, and year on which the Teacher Candidate exited the declared specialization.';


--
-- Name: COLUMN candidateeducatorpreparationprogramassociationdegreespec_2501c4.minorspecialization; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4.minorspecialization IS 'The minor area for a degree or area of specialization for a certificate.';


--
-- Name: candidateelectronicmail; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateelectronicmail (
    candidateidentifier character varying(32) NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    primaryemailaddressindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateelectronicmail OWNER TO postgres;

--
-- Name: TABLE candidateelectronicmail; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN candidateelectronicmail.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateelectronicmail.electronicmailaddress; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN candidateelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN candidateelectronicmail.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: COLUMN candidateelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: candidatelanguage; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatelanguage (
    candidateidentifier character varying(32) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatelanguage OWNER TO postgres;

--
-- Name: TABLE candidatelanguage; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatelanguage IS 'The language(s) the individual uses to communicate.';


--
-- Name: COLUMN candidatelanguage.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguage.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatelanguage.languagedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: candidatelanguageuse; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatelanguageuse (
    candidateidentifier character varying(32) NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatelanguageuse OWNER TO postgres;

--
-- Name: TABLE candidatelanguageuse; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatelanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN candidatelanguageuse.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatelanguageuse.languagedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN candidatelanguageuse.languageusedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatelanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: candidateothername; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidateothername (
    candidateidentifier character varying(32) NOT NULL,
    othernametypedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    lastsurname character varying(75) NOT NULL,
    middlename character varying(75),
    personaltitleprefix character varying(30),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidateothername OWNER TO postgres;

--
-- Name: TABLE candidateothername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidateothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN candidateothername.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidateothername.othernametypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN candidateothername.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN candidateothername.generationcodesuffix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN candidateothername.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN candidateothername.middlename; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN candidateothername.personaltitleprefix; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidateothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: candidatepersonalidentificationdocument; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatepersonalidentificationdocument (
    candidateidentifier character varying(32) NOT NULL,
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documentexpirationdate date,
    documenttitle character varying(60),
    issuercountrydescriptorid integer,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatepersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE candidatepersonalidentificationdocument; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatepersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN candidatepersonalidentificationdocument.issuername; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatepersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: candidaterace; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidaterace (
    candidateidentifier character varying(32) NOT NULL,
    racedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidaterace OWNER TO postgres;

--
-- Name: TABLE candidaterace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidaterace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN candidaterace.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidaterace.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidaterace.racedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidaterace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: candidatetelephone; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.candidatetelephone (
    candidateidentifier character varying(32) NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.candidatetelephone OWNER TO postgres;

--
-- Name: TABLE candidatetelephone; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.candidatetelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN candidatetelephone.candidateidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.candidateidentifier IS 'A unique alphanumeric code assigned to a candidate.';


--
-- Name: COLUMN candidatetelephone.telephonenumber; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN candidatetelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN candidatetelephone.donotpublishindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: COLUMN candidatetelephone.orderofpriority; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN candidatetelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.candidatetelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: certificationroutedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.certificationroutedescriptor (
    certificationroutedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.certificationroutedescriptor OWNER TO postgres;

--
-- Name: TABLE certificationroutedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.certificationroutedescriptor IS 'The process, program, or pathway used to obtain a certification.';


--
-- Name: COLUMN certificationroutedescriptor.certificationroutedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.certificationroutedescriptor.certificationroutedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coteachingstyleobserveddescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.coteachingstyleobserveddescriptor (
    coteachingstyleobserveddescriptorid integer NOT NULL
);


ALTER TABLE tpdm.coteachingstyleobserveddescriptor OWNER TO postgres;

--
-- Name: TABLE coteachingstyleobserveddescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.coteachingstyleobserveddescriptor IS 'A type of co-teaching observed as part of the performance evaluation.';


--
-- Name: COLUMN coteachingstyleobserveddescriptor.coteachingstyleobserveddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.coteachingstyleobserveddescriptor.coteachingstyleobserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialextension (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    boardcertificationindicator boolean,
    certificationroutedescriptorid integer,
    certificationtitle character varying(64),
    credentialstatusdate date,
    credentialstatusdescriptorid integer,
    educatorroledescriptorid integer,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.credentialextension OWNER TO postgres;

--
-- Name: COLUMN credentialextension.credentialidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialextension.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialextension.boardcertificationindicator; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.boardcertificationindicator IS 'Indicator that the credential was granted under the authority of a national Board Certification.';


--
-- Name: COLUMN credentialextension.certificationroutedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.certificationroutedescriptorid IS 'The process, program, or pathway used to obtain certification.';


--
-- Name: COLUMN credentialextension.certificationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.certificationtitle IS 'The title of the certification obtained by the educator.';


--
-- Name: COLUMN credentialextension.credentialstatusdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialstatusdate IS 'The month, day, and year on which the credential status was effective.';


--
-- Name: COLUMN credentialextension.credentialstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.credentialstatusdescriptorid IS 'The current status of the credential (e.g., active, suspended, etc.).';


--
-- Name: COLUMN credentialextension.educatorroledescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.educatorroledescriptorid IS 'The specific roles or positions within an organization that the credential is intended to authorize (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.';


--
-- Name: COLUMN credentialextension.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN credentialextension.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialextension.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: credentialstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialstatusdescriptor (
    credentialstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.credentialstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE credentialstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.credentialstatusdescriptor IS 'The current status of the credential.';


--
-- Name: COLUMN credentialstatusdescriptor.credentialstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstatusdescriptor.credentialstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialstudentacademicrecord; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.credentialstudentacademicrecord (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    educationorganizationid bigint NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.credentialstudentacademicrecord OWNER TO postgres;

--
-- Name: TABLE credentialstudentacademicrecord; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.credentialstudentacademicrecord IS 'Reference to the person''s Student Academic Records for the school(s) with which the Credential is associated.';


--
-- Name: COLUMN credentialstudentacademicrecord.credentialidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialstudentacademicrecord.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credentialstudentacademicrecord.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN credentialstudentacademicrecord.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN credentialstudentacademicrecord.studentusi; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN credentialstudentacademicrecord.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.credentialstudentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: educatorpreparationprogram; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorpreparationprogram (
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    accreditationstatusdescriptorid integer,
    programid character varying(20),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.educatorpreparationprogram OWNER TO postgres;

--
-- Name: TABLE educatorpreparationprogram; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorpreparationprogram IS 'The Educator Preparation Program is designed to prepare students to become licensed educators.';


--
-- Name: COLUMN educatorpreparationprogram.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educatorpreparationprogram.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogram.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN educatorpreparationprogram.accreditationstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.accreditationstatusdescriptorid IS 'The current accreditation status of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogram.programid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogram.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: educatorpreparationprogramgradelevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorpreparationprogramgradelevel (
    educationorganizationid bigint NOT NULL,
    programname character varying(255) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.educatorpreparationprogramgradelevel OWNER TO postgres;

--
-- Name: TABLE educatorpreparationprogramgradelevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorpreparationprogramgradelevel IS 'The grade levels served at the EPP Program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.programname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.programname IS 'The name of the Educator Preparation Program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.programtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN educatorpreparationprogramgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorpreparationprogramgradelevel.gradeleveldescriptorid IS 'The grade levels served at the EPP Program.';


--
-- Name: educatorroledescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.educatorroledescriptor (
    educatorroledescriptorid integer NOT NULL
);


ALTER TABLE tpdm.educatorroledescriptor OWNER TO postgres;

--
-- Name: TABLE educatorroledescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.educatorroledescriptor IS 'The role authorized by the Credential or Certification (e.g., Principal, Reading Specialist), typically associated with service and administrative certifications.';


--
-- Name: COLUMN educatorroledescriptor.educatorroledescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.educatorroledescriptor.educatorroledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: englishlanguageexamdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.englishlanguageexamdescriptor (
    englishlanguageexamdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.englishlanguageexamdescriptor OWNER TO postgres;

--
-- Name: TABLE englishlanguageexamdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.englishlanguageexamdescriptor IS 'Indicates that a person passed, failed, or did not take an English Language assessment.';


--
-- Name: COLUMN englishlanguageexamdescriptor.englishlanguageexamdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.englishlanguageexamdescriptor.englishlanguageexamdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eppprogrampathwaydescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.eppprogrampathwaydescriptor (
    eppprogrampathwaydescriptorid integer NOT NULL
);


ALTER TABLE tpdm.eppprogrampathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE eppprogrampathwaydescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.eppprogrampathwaydescriptor IS 'The description of the program pathway, for example: Residency, Internship, Traditional';


--
-- Name: COLUMN eppprogrampathwaydescriptor.eppprogrampathwaydescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.eppprogrampathwaydescriptor.eppprogrampathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluation (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationdescription character varying(255),
    evaluationtypedescriptorid integer,
    interraterreliabilityscore integer,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluation OWNER TO postgres;

--
-- Name: TABLE evaluation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluation IS 'An evaluation instrument appled to evaluate an educator.  The evaluation could be internally developed, or could be an industry recognized instrument such as TTESS or Marzano.';


--
-- Name: COLUMN evaluation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluation.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluation.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluation.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluation.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluation.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluation.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluation.evaluationdescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationdescription IS 'The long description of the Evaluation.';


--
-- Name: COLUMN evaluation.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.evaluationtypedescriptorid IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluation.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: COLUMN evaluation.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.maxrating IS 'The maximum summary numerical rating or score for the evaluation.';


--
-- Name: COLUMN evaluation.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluation.minrating IS 'The minimum summary numerical rating or score for the evaluation. If omitted, assumed to be 0.0.';


--
-- Name: evaluationelement; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelement (
    educationorganizationid bigint NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationtypedescriptorid integer,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    sortorder integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationelement OWNER TO postgres;

--
-- Name: TABLE evaluationelement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelement IS 'The lowest-level Elements or criterion of performance being evaluated by rubric, quantitative measure, or aggregate survey response.';


--
-- Name: COLUMN evaluationelement.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelement.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelement.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelement.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelement.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelement.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelement.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelement.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelement.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelement.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.evaluationtypedescriptorid IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationelement.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.maxrating IS 'The maximum summary numerical rating or score for the evaluation element.';


--
-- Name: COLUMN evaluationelement.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.minrating IS 'The minimum summary numerical rating or score for the evaluation element. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN evaluationelement.sortorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelement.sortorder IS 'The sort order of this Evaluation Element.';


--
-- Name: evaluationelementrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementrating (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    areaofrefinement character varying(1024),
    areaofreinforcement character varying(1024),
    comments character varying(1024),
    evaluationelementratingleveldescriptorid integer,
    feedback character varying(2048),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationelementrating OWNER TO postgres;

--
-- Name: TABLE evaluationelementrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementrating IS 'The lowest-level rating for an Evaluation Element for an individual educator.';


--
-- Name: COLUMN evaluationelementrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementrating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationelementrating.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementrating.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementrating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationelementrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationelementrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementrating.areaofrefinement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.areaofrefinement IS 'Area identified for person to refine or improve as part of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.areaofreinforcement; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.areaofreinforcement IS 'Area identified for reinforcement or positive feedback as part of the evaluation.';


--
-- Name: COLUMN evaluationelementrating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN evaluationelementrating.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.evaluationelementratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN evaluationelementrating.feedback; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementrating.feedback IS 'Feedback provided to the evaluated person.';


--
-- Name: evaluationelementratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratinglevel (
    educationorganizationid bigint NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationelementratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationelementratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratinglevel IS 'The descriptive level(s) of ratings (cut scores) for evaluation element.';


--
-- Name: COLUMN evaluationelementratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationelementratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationelementratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationelementratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratingleveldescriptor (
    evaluationelementratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationelementratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationelementratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratingleveldescriptor IS 'Rating levels for Evaluation Elements.';


--
-- Name: COLUMN evaluationelementratingleveldescriptor.evaluationelementratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingleveldescriptor.evaluationelementratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationelementratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationelementratingresult (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationelementratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationelementratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationelementratingresult IS 'The numerical summary rating or score for the evaluation element.';


--
-- Name: COLUMN evaluationelementratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationelementratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationelementratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationelementratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationelementratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationelementratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationelementratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationelementratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationelementratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationobjective; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjective (
    educationorganizationid bigint NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationobjectivedescription character varying(255),
    evaluationtypedescriptorid integer,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    sortorder integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationobjective OWNER TO postgres;

--
-- Name: TABLE evaluationobjective; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjective IS 'A subcomponent of an Evaluation, a specific educator Objective or domain of performance that is being evaluated.';


--
-- Name: COLUMN evaluationobjective.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjective.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjective.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjective.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjective.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjective.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjective.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjective.evaluationobjectivedescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationobjectivedescription IS 'The long description of the Evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.evaluationtypedescriptorid IS 'The type of the evaluation Objective (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationobjective.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.maxrating IS 'The maximum summary numerical rating or score for the evaluation Objective.';


--
-- Name: COLUMN evaluationobjective.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.minrating IS 'The minimum summary numerical rating or score for the evaluation Objective. If omitted, assumed to be 0.0.';


--
-- Name: COLUMN evaluationobjective.sortorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjective.sortorder IS 'The sort order of this Evaluation Objective.';


--
-- Name: evaluationobjectiverating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiverating (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    comments character varying(1024),
    objectiveratingleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiverating OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiverating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiverating IS 'The rating for the component Evaluation Objective for an individual educator.';


--
-- Name: COLUMN evaluationobjectiverating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiverating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiverating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationobjectiverating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiverating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationobjectiverating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiverating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN evaluationobjectiverating.objectiveratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiverating.objectiveratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: evaluationobjectiveratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiveratinglevel (
    educationorganizationid bigint NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiveratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiveratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiveratinglevel IS 'The descriptive level(s) of ratings (cut scores) for evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationobjectiveratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationobjectiveratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationobjectiveratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationobjectiveratingresult (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationobjectiveratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationobjectiveratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationobjectiveratingresult IS 'The numerical summary rating or score for the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationobjectiveratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationobjectiveratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationobjectiveratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationobjectiveratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationobjectiveratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationobjectiveratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationobjectiveratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationobjectiveratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationperioddescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationperioddescriptor (
    evaluationperioddescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationperioddescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationperioddescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationperioddescriptor IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationperioddescriptor.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationperioddescriptor.evaluationperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationrating (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer,
    evaluationratingstatusdescriptorid integer,
    localcoursecode character varying(60),
    schoolid bigint,
    sectionidentifier character varying(255),
    sessionname character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.evaluationrating OWNER TO postgres;

--
-- Name: TABLE evaluationrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationrating IS 'The summary weighting for the Evaluation instrument for an individual educator.';


--
-- Name: COLUMN evaluationrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationrating.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationrating.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationrating.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN evaluationrating.evaluationratingstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.evaluationratingstatusdescriptorid IS 'The Status of the poerformance evaluation.';


--
-- Name: COLUMN evaluationrating.localcoursecode; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN evaluationrating.schoolid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN evaluationrating.sectionidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN evaluationrating.sessionname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationrating.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: evaluationratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratinglevel (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratinglevel OWNER TO postgres;

--
-- Name: TABLE evaluationratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN evaluationratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN evaluationratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: evaluationratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingleveldescriptor (
    evaluationratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingleveldescriptor IS 'Rating levels for Evaluations.';


--
-- Name: COLUMN evaluationratingleveldescriptor.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingleveldescriptor.evaluationratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingresult (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingresult OWNER TO postgres;

--
-- Name: TABLE evaluationratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingresult IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingresult.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN evaluationratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN evaluationratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: evaluationratingreviewer; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingreviewer (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    reviewerpersonid character varying(32),
    reviewersourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingreviewer OWNER TO postgres;

--
-- Name: TABLE evaluationratingreviewer; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingreviewer IS 'The person(s) that conducted the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewer.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingreviewer.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewer.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingreviewer.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingreviewer.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingreviewer.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN evaluationratingreviewer.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN evaluationratingreviewer.reviewerpersonid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.reviewerpersonid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewer.reviewersourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewer.reviewersourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: evaluationratingreviewerreceivedtraining; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingreviewerreceivedtraining (
    educationorganizationid bigint NOT NULL,
    evaluationdate timestamp without time zone NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    interraterreliabilityscore integer,
    receivedtrainingdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.evaluationratingreviewerreceivedtraining OWNER TO postgres;

--
-- Name: TABLE evaluationratingreviewerreceivedtraining; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingreviewerreceivedtraining IS 'An indication that the person administering the performance evauation has or has not received training on conducting performance measures.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationdate IS 'The date for the person''s evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: COLUMN evaluationratingreviewerreceivedtraining.receivedtrainingdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingreviewerreceivedtraining.receivedtrainingdate IS 'The date on which the person administering the performance meausre received training on how to conduct performance measures.';


--
-- Name: evaluationratingstatusdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationratingstatusdescriptor (
    evaluationratingstatusdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationratingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationratingstatusdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationratingstatusdescriptor IS 'Represents the status of a Evaluation Rating.';


--
-- Name: COLUMN evaluationratingstatusdescriptor.evaluationratingstatusdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationratingstatusdescriptor.evaluationratingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: evaluationtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.evaluationtypedescriptor (
    evaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.evaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE evaluationtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.evaluationtypedescriptor IS 'The type of the evaluation (e.g., observation, principal, peer, student survey, student growth).';


--
-- Name: COLUMN evaluationtypedescriptor.evaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.evaluationtypedescriptor.evaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: financialaid; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.financialaid (
    aidtypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    studentusi integer NOT NULL,
    aidamount numeric(19,4),
    aidconditiondescription character varying(1024),
    enddate date,
    pellgrantrecipient boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.financialaid OWNER TO postgres;

--
-- Name: TABLE financialaid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.financialaid IS 'This entity represents the financial aid a person is awarded.';


--
-- Name: COLUMN financialaid.aidtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidtypedescriptorid IS 'The classification of financial aid awarded to a person for the academic term/year.';


--
-- Name: COLUMN financialaid.begindate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.begindate IS 'The date the award was designated.';


--
-- Name: COLUMN financialaid.studentusi; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN financialaid.aidamount; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidamount IS 'The amount of financial aid awarded to a person for the term/year.';


--
-- Name: COLUMN financialaid.aidconditiondescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.aidconditiondescription IS 'The description of the condition (e.g., placement in a high need school) under which the aid was given.';


--
-- Name: COLUMN financialaid.enddate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.enddate IS 'The date the award was removed.';


--
-- Name: COLUMN financialaid.pellgrantrecipient; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.financialaid.pellgrantrecipient IS 'Indicates a person who receives Pell Grant aid.';


--
-- Name: genderdescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.genderdescriptor (
    genderdescriptorid integer NOT NULL
);


ALTER TABLE tpdm.genderdescriptor OWNER TO postgres;

--
-- Name: TABLE genderdescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.genderdescriptor IS 'A person''s gender.';


--
-- Name: COLUMN genderdescriptor.genderdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.genderdescriptor.genderdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectiveratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.objectiveratingleveldescriptor (
    objectiveratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.objectiveratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE objectiveratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.objectiveratingleveldescriptor IS 'Rating levels for Evaluation Objectives.';


--
-- Name: COLUMN objectiveratingleveldescriptor.objectiveratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.objectiveratingleveldescriptor.objectiveratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceevaluation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluation (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    academicsubjectdescriptorid integer,
    performanceevaluationdescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.performanceevaluation OWNER TO postgres;

--
-- Name: TABLE performanceevaluation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluation IS 'A performance evaluation of an educator, typically regularly scheduled and uniformly applied, composed of one or more Evaluations.';


--
-- Name: COLUMN performanceevaluation.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluation.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluation.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluation.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluation.academicsubjectdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.academicsubjectdescriptorid IS 'The description of the content or subject area of a performance evaluation.';


--
-- Name: COLUMN performanceevaluation.performanceevaluationdescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluation.performanceevaluationdescription IS 'The long description of the Performance Evaluation.';


--
-- Name: performanceevaluationgradelevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationgradelevel (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationgradelevel OWNER TO postgres;

--
-- Name: TABLE performanceevaluationgradelevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationgradelevel IS 'The grade levels involved with the performance evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationgradelevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationgradelevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationgradelevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationgradelevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationgradelevel.gradeleveldescriptorid IS 'The grade levels involved with the performance evaluation.';


--
-- Name: performanceevaluationrating; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationrating (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    actualdate date NOT NULL,
    actualduration integer,
    actualtime time without time zone,
    announced boolean,
    comments character varying(1024),
    coteachingstyleobserveddescriptorid integer,
    performanceevaluationratingleveldescriptorid integer,
    scheduledate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.performanceevaluationrating OWNER TO postgres;

--
-- Name: TABLE performanceevaluationrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationrating IS 'The summary rating for a Performance Evaluation across all Evaluation instruments for an individual educator.';


--
-- Name: COLUMN performanceevaluationrating.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationrating.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationrating.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationrating.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationrating.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationrating.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationrating.actualdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualdate IS 'The month, day, and year on which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.actualduration; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualduration IS 'The actual or estimated number of clock minutes during which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.actualtime; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.actualtime IS 'An indication of the the time at which the performance evaluation was conducted.';


--
-- Name: COLUMN performanceevaluationrating.announced; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.announced IS 'An indicator of whether the performance evaluation was announced or not.';


--
-- Name: COLUMN performanceevaluationrating.comments; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.comments IS 'Any comments about the performance evaluation to be captured.';


--
-- Name: COLUMN performanceevaluationrating.coteachingstyleobserveddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.coteachingstyleobserveddescriptorid IS 'A type of co-teaching observed as part of the performance evaluation.';


--
-- Name: COLUMN performanceevaluationrating.performanceevaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.performanceevaluationratingleveldescriptorid IS 'The rating level achieved based upon the rating or score.';


--
-- Name: COLUMN performanceevaluationrating.scheduledate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationrating.scheduledate IS 'The month, day, and year on which the performance evaluation was scheduled.';


--
-- Name: performanceevaluationratinglevel; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratinglevel (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    evaluationratingleveldescriptorid integer NOT NULL,
    maxrating numeric(6,3),
    minrating numeric(6,3),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratinglevel OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratinglevel; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratinglevel IS 'The descriptive level(s) of ratings (cut scores) for the evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratinglevel.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratinglevel.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratinglevel.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratinglevel.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratinglevel.evaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.evaluationratingleveldescriptorid IS 'The title for a level of rating or evaluation band (e.g., Excellent, Acceptable, Needs Improvement, Unacceptable).';


--
-- Name: COLUMN performanceevaluationratinglevel.maxrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.maxrating IS 'The maximum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: COLUMN performanceevaluationratinglevel.minrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratinglevel.minrating IS 'The minimum numerical rating or score to achieve the evaluation rating level.';


--
-- Name: performanceevaluationratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingleveldescriptor (
    performanceevaluationratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingleveldescriptor IS 'Rating levels for Performance Evaluations.';


--
-- Name: COLUMN performanceevaluationratingleveldescriptor.performanceevaluationratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingleveldescriptor.performanceevaluationratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceevaluationratingresult; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingresult (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    rating numeric(6,3) NOT NULL,
    ratingresulttitle character varying(50) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingresult OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingresult; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingresult IS 'The numerical summary rating or score for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingresult.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingresult.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingresult.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingresult.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingresult.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingresult.rating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.rating IS 'The numerical summary rating or score for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingresult.ratingresulttitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.ratingresulttitle IS 'The title of Rating Result.';


--
-- Name: COLUMN performanceevaluationratingresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingresult.resultdatatypetypedescriptorid IS 'The datatype of the result.';


--
-- Name: performanceevaluationratingreviewer; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingreviewer (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    reviewerpersonid character varying(32),
    reviewersourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingreviewer OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingreviewer; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingreviewer IS 'The person(s) that conducted the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingreviewer.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewer.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingreviewer.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewer.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewer.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN performanceevaluationratingreviewer.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN performanceevaluationratingreviewer.reviewerpersonid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.reviewerpersonid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewer.reviewersourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewer.reviewersourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: performanceevaluationratingreviewerreceivedtraining; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationratingreviewerreceivedtraining (
    educationorganizationid bigint NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    personid character varying(32) NOT NULL,
    schoolyear smallint NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    termdescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    interraterreliabilityscore integer,
    receivedtrainingdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.performanceevaluationratingreviewerreceivedtraining OWNER TO postgres;

--
-- Name: TABLE performanceevaluationratingreviewerreceivedtraining; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationratingreviewerreceivedtraining IS 'An indication that the person administering the performance evauation has or has not received training on conducting performance measures.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.firstname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.lastsurname; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.interraterreliabilityscore; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.interraterreliabilityscore IS 'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges. Most commonly a percentage scale (1-100)';


--
-- Name: COLUMN performanceevaluationratingreviewerreceivedtraining.receivedtrainingdate; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationratingreviewerreceivedtraining.receivedtrainingdate IS 'The date on which the person administering the performance meausre received training on how to conduct performance measures.';


--
-- Name: performanceevaluationtypedescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.performanceevaluationtypedescriptor (
    performanceevaluationtypedescriptorid integer NOT NULL
);


ALTER TABLE tpdm.performanceevaluationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE performanceevaluationtypedescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.performanceevaluationtypedescriptor IS 'The type of performance evaluation conducted (e.g., walkthrough, summative).';


--
-- Name: COLUMN performanceevaluationtypedescriptor.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.performanceevaluationtypedescriptor.performanceevaluationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: rubricdimension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.rubricdimension (
    educationorganizationid bigint NOT NULL,
    evaluationelementtitle character varying(255) NOT NULL,
    evaluationobjectivetitle character varying(50) NOT NULL,
    evaluationperioddescriptorid integer NOT NULL,
    evaluationtitle character varying(50) NOT NULL,
    performanceevaluationtitle character varying(50) NOT NULL,
    performanceevaluationtypedescriptorid integer NOT NULL,
    rubricrating integer NOT NULL,
    schoolyear smallint NOT NULL,
    termdescriptorid integer NOT NULL,
    criteriondescription character varying(1024) NOT NULL,
    dimensionorder integer,
    rubricratingleveldescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.rubricdimension OWNER TO postgres;

--
-- Name: TABLE rubricdimension; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.rubricdimension IS 'The cells of a rubric, consisting of a qualitative decription, definition, or exemplar with the associated rubric rating and rating level.';


--
-- Name: COLUMN rubricdimension.educationorganizationid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN rubricdimension.evaluationelementtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationelementtitle IS 'The name or title of the evaluation element.';


--
-- Name: COLUMN rubricdimension.evaluationobjectivetitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationobjectivetitle IS 'The name or title of the evaluation Objective.';


--
-- Name: COLUMN rubricdimension.evaluationperioddescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationperioddescriptorid IS 'The period for the evaluation.';


--
-- Name: COLUMN rubricdimension.evaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.evaluationtitle IS 'The name or title of the evaluation.';


--
-- Name: COLUMN rubricdimension.performanceevaluationtitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.performanceevaluationtitle IS 'An assigned unique identifier for the performance evaluation.';


--
-- Name: COLUMN rubricdimension.performanceevaluationtypedescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.performanceevaluationtypedescriptorid IS 'The type of performance evaluation conducted.';


--
-- Name: COLUMN rubricdimension.rubricrating; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.rubricrating IS 'The rating achieved for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.schoolyear; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN rubricdimension.termdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN rubricdimension.criteriondescription; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.criteriondescription IS 'The criterion description for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.dimensionorder; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.dimensionorder IS 'The order for the rubric dimension.';


--
-- Name: COLUMN rubricdimension.rubricratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricdimension.rubricratingleveldescriptorid IS 'The rating level achieved for the rubric dimension.';


--
-- Name: rubricratingleveldescriptor; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.rubricratingleveldescriptor (
    rubricratingleveldescriptorid integer NOT NULL
);


ALTER TABLE tpdm.rubricratingleveldescriptor OWNER TO postgres;

--
-- Name: TABLE rubricratingleveldescriptor; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.rubricratingleveldescriptor IS 'Rating levels for Rubric Dimensions.';


--
-- Name: COLUMN rubricratingleveldescriptor.rubricratingleveldescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.rubricratingleveldescriptor.rubricratingleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.schoolextension (
    schoolid bigint NOT NULL,
    postsecondaryinstitutionid bigint,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.schoolextension OWNER TO postgres;

--
-- Name: COLUMN schoolextension.schoolid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.schoolextension.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN schoolextension.postsecondaryinstitutionid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.schoolextension.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: surveyresponseextension; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveyresponseextension (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE tpdm.surveyresponseextension OWNER TO postgres;

--
-- Name: COLUMN surveyresponseextension.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponseextension.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponseextension.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponseextension.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveyresponseextension.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponseextension.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: surveyresponsepersontargetassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveyresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.surveyresponsepersontargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponsepersontargetassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.surveyresponsepersontargetassociation IS 'The association provides information about the survey being taken and who the survey is about.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsepersontargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveyresponsepersontargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveysectionresponsepersontargetassociation; Type: TABLE; Schema: tpdm; Owner: postgres
--

CREATE TABLE tpdm.surveysectionresponsepersontargetassociation (
    namespace character varying(255) NOT NULL,
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE tpdm.surveysectionresponsepersontargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponsepersontargetassociation; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON TABLE tpdm.surveysectionresponsepersontargetassociation IS 'This association provides information about the survey section and the person the survey section is about.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.namespace; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.personid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.sourcesystemdescriptorid; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveyidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponsepersontargetassociation.surveysectiontitle; Type: COMMENT; Schema: tpdm; Owner: postgres
--

COMMENT ON COLUMN tpdm.surveysectionresponsepersontargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: academicweek; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.academicweek (
    oldschoolid bigint NOT NULL,
    oldweekidentifier character varying(80) NOT NULL,
    newschoolid bigint,
    newweekidentifier character varying(80),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.academicweek OWNER TO postgres;

--
-- Name: accountabilityrating; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.accountabilityrating (
    oldeducationorganizationid bigint NOT NULL,
    oldratingtitle character varying(60) NOT NULL,
    oldschoolyear smallint NOT NULL,
    neweducationorganizationid bigint,
    newratingtitle character varying(60),
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.accountabilityrating OWNER TO postgres;

--
-- Name: assessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessment OWNER TO postgres;

--
-- Name: assessmentitem; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessmentitem (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldidentificationcode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newidentificationcode character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessmentitem OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessmentscorerangelearningstandard (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldscorerangeid character varying(60) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    newscorerangeid character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: balancesheetdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.balancesheetdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.balancesheetdimension OWNER TO postgres;

--
-- Name: bellschedule; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.bellschedule (
    oldbellschedulename character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    newbellschedulename character varying(60),
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.bellschedule OWNER TO postgres;

--
-- Name: calendar; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.calendar (
    oldcalendarcode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    newcalendarcode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.calendar OWNER TO postgres;

--
-- Name: calendardate; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.calendardate (
    oldcalendarcode character varying(60) NOT NULL,
    olddate date NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    newcalendarcode character varying(60),
    newdate date,
    newschoolid bigint,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.calendardate OWNER TO postgres;

--
-- Name: chartofaccount; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.chartofaccount (
    oldaccountidentifier character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.chartofaccount OWNER TO postgres;

--
-- Name: classperiod; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.classperiod (
    oldclassperiodname character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    newclassperiodname character varying(60),
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.classperiod OWNER TO postgres;

--
-- Name: cohort; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.cohort (
    oldcohortidentifier character varying(36) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    newcohortidentifier character varying(36),
    neweducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.cohort OWNER TO postgres;

--
-- Name: communityproviderlicense; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.communityproviderlicense (
    oldcommunityproviderid bigint NOT NULL,
    oldlicenseidentifier character varying(36) NOT NULL,
    oldlicensingorganization character varying(75) NOT NULL,
    newcommunityproviderid bigint,
    newlicenseidentifier character varying(36),
    newlicensingorganization character varying(75),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: competencyobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.competencyobjective (
    oldeducationorganizationid bigint NOT NULL,
    oldobjective character varying(60) NOT NULL,
    oldobjectivegradeleveldescriptorid integer NOT NULL,
    oldobjectivegradeleveldescriptornamespace character varying(255) NOT NULL,
    oldobjectivegradeleveldescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newobjective character varying(60),
    newobjectivegradeleveldescriptorid integer,
    newobjectivegradeleveldescriptornamespace character varying(255),
    newobjectivegradeleveldescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.competencyobjective OWNER TO postgres;

--
-- Name: contact; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.contact (
    oldcontactusi integer NOT NULL,
    oldcontactuniqueid character varying(32) NOT NULL,
    newcontactusi integer,
    newcontactuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.contact OWNER TO postgres;

--
-- Name: course; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.course (
    oldcoursecode character varying(60) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    newcoursecode character varying(60),
    neweducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.course OWNER TO postgres;

--
-- Name: courseoffering; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.courseoffering (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.courseoffering OWNER TO postgres;

--
-- Name: coursetranscript; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.coursetranscript (
    oldcourseattemptresultdescriptorid integer NOT NULL,
    oldcourseattemptresultdescriptornamespace character varying(255) NOT NULL,
    oldcourseattemptresultdescriptorcodevalue character varying(50) NOT NULL,
    oldcoursecode character varying(60) NOT NULL,
    oldcourseeducationorganizationid bigint NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    newcourseattemptresultdescriptorid integer,
    newcourseattemptresultdescriptornamespace character varying(255),
    newcourseattemptresultdescriptorcodevalue character varying(50),
    newcoursecode character varying(60),
    newcourseeducationorganizationid bigint,
    neweducationorganizationid bigint,
    newschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.coursetranscript OWNER TO postgres;

--
-- Name: credential; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.credential (
    oldcredentialidentifier character varying(60) NOT NULL,
    oldstateofissuestateabbreviationdescriptorid integer NOT NULL,
    oldstateofissuestateabbreviationdescriptornamespace character varying(255) NOT NULL,
    oldstateofissuestateabbreviationdescriptorcodevalue character varying(50) NOT NULL,
    newcredentialidentifier character varying(60),
    newstateofissuestateabbreviationdescriptorid integer,
    newstateofissuestateabbreviationdescriptornamespace character varying(255),
    newstateofissuestateabbreviationdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.credential OWNER TO postgres;

--
-- Name: descriptor; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.descriptor (
    olddescriptorid integer NOT NULL,
    oldcodevalue character varying(50) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newdescriptorid integer,
    newcodevalue character varying(50),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.descriptor OWNER TO postgres;

--
-- Name: descriptormapping; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.descriptormapping (
    oldmappednamespace character varying(255) NOT NULL,
    oldmappedvalue character varying(50) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldvalue character varying(50) NOT NULL,
    newmappednamespace character varying(255),
    newmappedvalue character varying(50),
    newnamespace character varying(255),
    newvalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.descriptormapping OWNER TO postgres;

--
-- Name: disciplineaction; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.disciplineaction (
    olddisciplineactionidentifier character varying(36) NOT NULL,
    olddisciplinedate date NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldresponsibilityschoolid bigint NOT NULL,
    newdisciplineactionidentifier character varying(36),
    newdisciplinedate date,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.disciplineaction OWNER TO postgres;

--
-- Name: disciplineincident; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.disciplineincident (
    oldincidentidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    newincidentidentifier character varying(36),
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.disciplineincident OWNER TO postgres;

--
-- Name: educationcontent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationcontent (
    oldcontentidentifier character varying(225) NOT NULL,
    newcontentidentifier character varying(225),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationcontent OWNER TO postgres;

--
-- Name: educationorganization; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganization (
    oldeducationorganizationid bigint NOT NULL,
    neweducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganization OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationinterventionprescriptionassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionprescriptioneducationorganizationid bigint NOT NULL,
    oldinterventionprescriptionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionprescriptioneducationorganizationid bigint,
    newinterventionprescriptionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationnetworkassociation (
    oldeducationorganizationnetworkid bigint NOT NULL,
    oldmembereducationorganizationid bigint NOT NULL,
    neweducationorganizationnetworkid bigint,
    newmembereducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationpeerassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldpeereducationorganizationid bigint NOT NULL,
    neweducationorganizationid bigint,
    newpeereducationorganizationid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: evaluationrubricdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.evaluationrubricdimension (
    oldevaluationrubricrating integer NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationelementtitle character varying(50) NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newevaluationrubricrating integer,
    newprogrameducationorganizationid bigint,
    newprogramevaluationelementtitle character varying(50),
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.evaluationrubricdimension OWNER TO postgres;

--
-- Name: feederschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.feederschoolassociation (
    oldbegindate date NOT NULL,
    oldfeederschoolid bigint NOT NULL,
    oldschoolid bigint NOT NULL,
    newbegindate date,
    newfeederschoolid bigint,
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: functiondimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.functiondimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.functiondimension OWNER TO postgres;

--
-- Name: funddimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.funddimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.funddimension OWNER TO postgres;

--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.generalstudentprogramassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid bigint,
    newprogrameducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: grade; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.grade (
    oldbegindate date NOT NULL,
    oldgradetypedescriptorid integer NOT NULL,
    oldgradetypedescriptornamespace character varying(255) NOT NULL,
    oldgradetypedescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodname character varying(60) NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newgradetypedescriptorid integer,
    newgradetypedescriptornamespace character varying(255),
    newgradetypedescriptorcodevalue character varying(50),
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodname character varying(60),
    newgradingperiodschoolyear smallint,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.grade OWNER TO postgres;

--
-- Name: gradebookentry; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.gradebookentry (
    oldgradebookentryidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newgradebookentryidentifier character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.gradebookentry OWNER TO postgres;

--
-- Name: gradingperiod; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.gradingperiod (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodname character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodname character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.gradingperiod OWNER TO postgres;

--
-- Name: graduationplan; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.graduationplan (
    oldeducationorganizationid bigint NOT NULL,
    oldgraduationplantypedescriptorid integer NOT NULL,
    oldgraduationplantypedescriptornamespace character varying(255) NOT NULL,
    oldgraduationplantypedescriptorcodevalue character varying(50) NOT NULL,
    oldgraduationschoolyear smallint NOT NULL,
    neweducationorganizationid bigint,
    newgraduationplantypedescriptorid integer,
    newgraduationplantypedescriptornamespace character varying(255),
    newgraduationplantypedescriptorcodevalue character varying(50),
    newgraduationschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.graduationplan OWNER TO postgres;

--
-- Name: intervention; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.intervention (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.intervention OWNER TO postgres;

--
-- Name: interventionprescription; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.interventionprescription (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionprescriptionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionprescriptionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.interventionprescription OWNER TO postgres;

--
-- Name: interventionstudy; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.interventionstudy (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionstudyidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionstudyidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.interventionstudy OWNER TO postgres;

--
-- Name: learningstandard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningstandard (
    oldlearningstandardid character varying(60) NOT NULL,
    newlearningstandardid character varying(60),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningstandard OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningstandardequivalenceassociation (
    oldnamespace character varying(255) NOT NULL,
    oldsourcelearningstandardid character varying(60) NOT NULL,
    oldtargetlearningstandardid character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsourcelearningstandardid character varying(60),
    newtargetlearningstandardid character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: localaccount; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localaccount (
    oldaccountidentifier character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localaccount OWNER TO postgres;

--
-- Name: localactual; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localactual (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localactual OWNER TO postgres;

--
-- Name: localbudget; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localbudget (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localbudget OWNER TO postgres;

--
-- Name: localcontractedstaff; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localcontractedstaff (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localcontractedstaff OWNER TO postgres;

--
-- Name: localencumbrance; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localencumbrance (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localencumbrance OWNER TO postgres;

--
-- Name: localpayroll; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localpayroll (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldfiscalyear integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid bigint,
    newfiscalyear integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localpayroll OWNER TO postgres;

--
-- Name: location; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.location (
    oldclassroomidentificationcode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    newclassroomidentificationcode character varying(60),
    newschoolid bigint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.location OWNER TO postgres;

--
-- Name: objectdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.objectdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.objectdimension OWNER TO postgres;

--
-- Name: objectiveassessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.objectiveassessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldidentificationcode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newidentificationcode character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.objectiveassessment OWNER TO postgres;

--
-- Name: openstaffposition; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.openstaffposition (
    oldeducationorganizationid bigint NOT NULL,
    oldrequisitionnumber character varying(20) NOT NULL,
    neweducationorganizationid bigint,
    newrequisitionnumber character varying(20),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.openstaffposition OWNER TO postgres;

--
-- Name: operationalunitdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.operationalunitdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.operationalunitdimension OWNER TO postgres;

--
-- Name: person; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.person (
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.person OWNER TO postgres;

--
-- Name: postsecondaryevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.postsecondaryevent (
    oldeventdate date NOT NULL,
    oldpostsecondaryeventcategorydescriptorid integer NOT NULL,
    oldpostsecondaryeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldpostsecondaryeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweventdate date,
    newpostsecondaryeventcategorydescriptorid integer,
    newpostsecondaryeventcategorydescriptornamespace character varying(255),
    newpostsecondaryeventcategorydescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: program; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.program (
    oldeducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.program OWNER TO postgres;

--
-- Name: programdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programdimension OWNER TO postgres;

--
-- Name: programevaluation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programevaluation (
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newprogrameducationorganizationid bigint,
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programevaluation OWNER TO postgres;

--
-- Name: programevaluationelement; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programevaluationelement (
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationelementtitle character varying(50) NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newprogrameducationorganizationid bigint,
    newprogramevaluationelementtitle character varying(50),
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programevaluationelement OWNER TO postgres;

--
-- Name: programevaluationobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programevaluationobjective (
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationobjectivetitle character varying(50) NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newprogrameducationorganizationid bigint,
    newprogramevaluationobjectivetitle character varying(50),
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programevaluationobjective OWNER TO postgres;

--
-- Name: projectdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.projectdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.projectdimension OWNER TO postgres;

--
-- Name: reportcard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.reportcard (
    oldeducationorganizationid bigint NOT NULL,
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodname character varying(60) NOT NULL,
    oldgradingperiodschoolid bigint NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid bigint,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodname character varying(60),
    newgradingperiodschoolid bigint,
    newgradingperiodschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.reportcard OWNER TO postgres;

--
-- Name: restraintevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.restraintevent (
    oldrestrainteventidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newrestrainteventidentifier character varying(36),
    newschoolid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.restraintevent OWNER TO postgres;

--
-- Name: schoolyeartype; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.schoolyeartype (
    oldschoolyear smallint NOT NULL,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.schoolyeartype OWNER TO postgres;

--
-- Name: section; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.section (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.section OWNER TO postgres;

--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.sectionattendancetakenevent (
    oldcalendarcode character varying(60) NOT NULL,
    olddate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newcalendarcode character varying(60),
    newdate date,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: session; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.session (
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newschoolid bigint,
    newschoolyear smallint,
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.session OWNER TO postgres;

--
-- Name: sourcedimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.sourcedimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.sourcedimension OWNER TO postgres;

--
-- Name: staff; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staff (
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staff OWNER TO postgres;

--
-- Name: staffabsenceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffabsenceevent (
    oldabsenceeventcategorydescriptorid integer NOT NULL,
    oldabsenceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldabsenceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newabsenceeventcategorydescriptorid integer,
    newabsenceeventcategorydescriptornamespace character varying(255),
    newabsenceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: staffcohortassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffcohortassociation (
    oldbegindate date NOT NULL,
    oldcohortidentifier character varying(36) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newcohortidentifier character varying(36),
    neweducationorganizationid bigint,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffdisciplineincidentassociation (
    oldincidentidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(36),
    newschoolid bigint,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationcontactassociation (
    oldcontacttitle character varying(75) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newcontacttitle character varying(75),
    neweducationorganizationid bigint,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: staffleave; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffleave (
    oldbegindate date NOT NULL,
    oldstaffleaveeventcategorydescriptorid integer NOT NULL,
    oldstaffleaveeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldstaffleaveeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newstaffleaveeventcategorydescriptorid integer,
    newstaffleaveeventcategorydescriptornamespace character varying(255),
    newstaffleaveeventcategorydescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffleave OWNER TO postgres;

--
-- Name: staffprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffprogramassociation (
    oldbegindate date NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newprogrameducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: staffschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffschoolassociation (
    oldprogramassignmentdescriptorid integer NOT NULL,
    oldprogramassignmentdescriptornamespace character varying(255) NOT NULL,
    oldprogramassignmentdescriptorcodevalue character varying(50) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newprogramassignmentdescriptorid integer,
    newprogramassignmentdescriptornamespace character varying(255),
    newprogramassignmentdescriptorcodevalue character varying(50),
    newschoolid bigint,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: staffsectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffsectionassociation (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: student; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.student (
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.student OWNER TO postgres;

--
-- Name: studentacademicrecord; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentacademicrecord (
    oldeducationorganizationid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: studentassessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentassessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentassessmentidentifier character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    newstudentassessmentidentifier character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentassessment OWNER TO postgres;

--
-- Name: studentassessmenteducationorganizationassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentassessmenteducationorganizationassociation (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldeducationorganizationassociationtypedescriptorid integer NOT NULL,
    oldeducationorganizationassociationtypedescriptornamespace character varying(255) NOT NULL,
    oldeducationorganizationassociationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentassessmentidentifier character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newassessmentidentifier character varying(60),
    neweducationorganizationassociationtypedescriptorid integer,
    neweducationorganizationassociationtypedescriptornamespace character varying(255),
    neweducationorganizationassociationtypedescriptorcodevalue character varying(50),
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newstudentassessmentidentifier character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentassessmenteducationorganizationassociation OWNER TO postgres;

--
-- Name: studentcohortassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcohortassociation (
    oldbegindate date NOT NULL,
    oldcohortidentifier character varying(36) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newcohortidentifier character varying(36),
    neweducationorganizationid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcompetencyobjective (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodname character varying(60) NOT NULL,
    oldgradingperiodschoolid bigint NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldobjectiveeducationorganizationid bigint NOT NULL,
    oldobjective character varying(60) NOT NULL,
    oldobjectivegradeleveldescriptorid integer NOT NULL,
    oldobjectivegradeleveldescriptornamespace character varying(255) NOT NULL,
    oldobjectivegradeleveldescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodname character varying(60),
    newgradingperiodschoolid bigint,
    newgradingperiodschoolyear smallint,
    newobjectiveeducationorganizationid bigint,
    newobjective character varying(60),
    newobjectivegradeleveldescriptorid integer,
    newobjectivegradeleveldescriptornamespace character varying(255),
    newobjectivegradeleveldescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentbehaviorassociation (
    oldbehaviordescriptorid integer NOT NULL,
    oldbehaviordescriptornamespace character varying(255) NOT NULL,
    oldbehaviordescriptorcodevalue character varying(50) NOT NULL,
    oldincidentidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbehaviordescriptorid integer,
    newbehaviordescriptornamespace character varying(255),
    newbehaviordescriptorcodevalue character varying(50),
    newincidentidentifier character varying(36),
    newschoolid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation (
    oldincidentidentifier character varying(36) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(36),
    newschoolid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studenteducationorganizationassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid bigint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: studentgradebookentry; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentgradebookentry (
    oldgradebookentryidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradebookentryidentifier character varying(60),
    newnamespace character varying(255),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: studentinterventionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentinterventionassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid bigint,
    newinterventionidentificationcode character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentinterventionattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldeventdate date NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweducationorganizationid bigint,
    neweventdate date,
    newinterventionidentificationcode character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentprogramattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldeventdate date NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweducationorganizationid bigint,
    neweventdate date,
    newprogrameducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: studentprogramevaluation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentprogramevaluation (
    oldevaluationdate date NOT NULL,
    oldprogrameducationorganizationid bigint NOT NULL,
    oldprogramevaluationperioddescriptorid integer NOT NULL,
    oldprogramevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldprogramevaluationtitle character varying(50) NOT NULL,
    oldprogramevaluationtypedescriptorid integer NOT NULL,
    oldprogramevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newevaluationdate date,
    newprogrameducationorganizationid bigint,
    newprogramevaluationperioddescriptorid integer,
    newprogramevaluationperioddescriptornamespace character varying(255),
    newprogramevaluationperioddescriptorcodevalue character varying(50),
    newprogramevaluationtitle character varying(50),
    newprogramevaluationtypedescriptorid integer,
    newprogramevaluationtypedescriptornamespace character varying(255),
    newprogramevaluationtypedescriptorcodevalue character varying(50),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentprogramevaluation OWNER TO postgres;

--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentschoolattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newschoolid bigint,
    newschoolyear smallint,
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: studentsectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentsectionassociation (
    oldbegindate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentsectionattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newlocalcoursecode character varying(60),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: studentspecialeducationprogrameligibilityassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation (
    oldconsenttoevaluationreceiveddate date NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newconsenttoevaluationreceiveddate date,
    neweducationorganizationid bigint,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation OWNER TO postgres;

--
-- Name: survey; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.survey (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.survey OWNER TO postgres;

--
-- Name: surveycourseassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveycourseassociation (
    oldcoursecode character varying(60) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newcoursecode character varying(60),
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: surveyprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyprogramassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: surveyquestion; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyquestion (
    oldnamespace character varying(255) NOT NULL,
    oldquestioncode character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newquestioncode character varying(60),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyquestion OWNER TO postgres;

--
-- Name: surveyquestionresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyquestionresponse (
    oldnamespace character varying(255) NOT NULL,
    oldquestioncode character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newquestioncode character varying(60),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: surveyresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponse (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponse OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponsestafftargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: surveysection; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysection (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysection OWNER TO postgres;

--
-- Name: surveysectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionassociation (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldschoolid bigint NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newnamespace character varying(255),
    newschoolid bigint,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: surveysectionresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponse (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation (
    oldeducationorganizationid bigint NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    neweducationorganizationid bigint,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponsestafftargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: candidate; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.candidate (
    oldcandidateidentifier character varying(32) NOT NULL,
    newcandidateidentifier character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.candidate OWNER TO postgres;

--
-- Name: candidateeducatorpreparationprogramassociation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.candidateeducatorpreparationprogramassociation (
    oldbegindate date NOT NULL,
    oldcandidateidentifier character varying(32) NOT NULL,
    oldeducationorganizationid bigint NOT NULL,
    oldprogramname character varying(255) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    newbegindate date,
    newcandidateidentifier character varying(32),
    neweducationorganizationid bigint,
    newprogramname character varying(255),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.candidateeducatorpreparationprogramassociation OWNER TO postgres;

--
-- Name: educatorpreparationprogram; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.educatorpreparationprogram (
    oldeducationorganizationid bigint NOT NULL,
    oldprogramname character varying(255) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newprogramname character varying(255),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.educatorpreparationprogram OWNER TO postgres;

--
-- Name: evaluation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluation (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluation OWNER TO postgres;

--
-- Name: evaluationelement; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationelement (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationelementtitle character varying(255) NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationelementtitle character varying(255),
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationelement OWNER TO postgres;

--
-- Name: evaluationelementrating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationelementrating (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationdate timestamp without time zone NOT NULL,
    oldevaluationelementtitle character varying(255) NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationdate timestamp without time zone,
    newevaluationelementtitle character varying(255),
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationelementrating OWNER TO postgres;

--
-- Name: evaluationobjective; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationobjective (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationobjective OWNER TO postgres;

--
-- Name: evaluationobjectiverating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationobjectiverating (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationdate timestamp without time zone NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationdate timestamp without time zone,
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationobjectiverating OWNER TO postgres;

--
-- Name: evaluationrating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.evaluationrating (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationdate timestamp without time zone NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationdate timestamp without time zone,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.evaluationrating OWNER TO postgres;

--
-- Name: financialaid; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.financialaid (
    oldaidtypedescriptorid integer NOT NULL,
    oldaidtypedescriptornamespace character varying(255) NOT NULL,
    oldaidtypedescriptorcodevalue character varying(50) NOT NULL,
    oldbegindate date NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newaidtypedescriptorid integer,
    newaidtypedescriptornamespace character varying(255),
    newaidtypedescriptorcodevalue character varying(50),
    newbegindate date,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.financialaid OWNER TO postgres;

--
-- Name: performanceevaluation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.performanceevaluation (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.performanceevaluation OWNER TO postgres;

--
-- Name: performanceevaluationrating; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.performanceevaluationrating (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newpersonid character varying(32),
    newschoolyear smallint,
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.performanceevaluationrating OWNER TO postgres;

--
-- Name: rubricdimension; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.rubricdimension (
    oldeducationorganizationid bigint NOT NULL,
    oldevaluationelementtitle character varying(255) NOT NULL,
    oldevaluationobjectivetitle character varying(50) NOT NULL,
    oldevaluationperioddescriptorid integer NOT NULL,
    oldevaluationperioddescriptornamespace character varying(255) NOT NULL,
    oldevaluationperioddescriptorcodevalue character varying(50) NOT NULL,
    oldevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtitle character varying(50) NOT NULL,
    oldperformanceevaluationtypedescriptorid integer NOT NULL,
    oldperformanceevaluationtypedescriptornamespace character varying(255) NOT NULL,
    oldperformanceevaluationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldrubricrating integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid bigint,
    newevaluationelementtitle character varying(255),
    newevaluationobjectivetitle character varying(50),
    newevaluationperioddescriptorid integer,
    newevaluationperioddescriptornamespace character varying(255),
    newevaluationperioddescriptorcodevalue character varying(50),
    newevaluationtitle character varying(50),
    newperformanceevaluationtitle character varying(50),
    newperformanceevaluationtypedescriptorid integer,
    newperformanceevaluationtypedescriptornamespace character varying(255),
    newperformanceevaluationtypedescriptorcodevalue character varying(50),
    newrubricrating integer,
    newschoolyear smallint,
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.rubricdimension OWNER TO postgres;

--
-- Name: surveyresponsepersontargetassociation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.surveyresponsepersontargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.surveyresponsepersontargetassociation OWNER TO postgres;

--
-- Name: surveysectionresponsepersontargetassociation; Type: TABLE; Schema: tracked_changes_tpdm; Owner: postgres
--

CREATE TABLE tracked_changes_tpdm.surveysectionresponsepersontargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_tpdm.surveysectionresponsepersontargetassociation OWNER TO postgres;

--
-- Name: contact contactusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact ALTER COLUMN contactusi SET DEFAULT nextval('edfi.contact_contactusi_seq'::regclass);


--
-- Name: descriptor descriptorid; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor ALTER COLUMN descriptorid SET DEFAULT nextval('edfi.descriptor_descriptorid_seq'::regclass);


--
-- Name: staff staffusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff ALTER COLUMN staffusi SET DEFAULT nextval('edfi.staff_staffusi_seq'::regclass);


--
-- Name: student studentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student ALTER COLUMN studentusi SET DEFAULT nextval('edfi.student_studentusi_seq'::regclass);


--
-- Name: DeployJournal schemaversionsid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal" ALTER COLUMN schemaversionsid SET DEFAULT nextval('public."DeployJournal_schemaversionsid_seq"'::regclass);


--
-- Data for Name: educationorganizationidtoeducationorganizationid; Type: TABLE DATA; Schema: auth; Owner: postgres
--

COPY auth.educationorganizationidtoeducationorganizationid (sourceeducationorganizationid, targeteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: absenceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.absenceeventcategorydescriptor (absenceeventcategorydescriptorid) FROM stdin;
109
110
111
112
115
116
114
113
117
119
118
120
\.


--
-- Data for Name: academichonorcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academichonorcategorydescriptor (academichonorcategorydescriptorid) FROM stdin;
2806
2807
2808
2809
2810
2811
2812
2813
2814
2815
2816
2817
2818
2819
2820
2821
2822
2823
\.


--
-- Data for Name: academicsubjectdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicsubjectdescriptor (academicsubjectdescriptorid) FROM stdin;
2941
2943
2942
2944
2945
2946
2947
2948
2949
2950
2951
2953
2952
2954
2955
2956
2957
2958
2959
3221
3222
3223
3224
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicweek (schoolid, weekidentifier, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accommodationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accommodationdescriptor (accommodationdescriptorid) FROM stdin;
3111
3114
3113
3112
3115
3116
3117
3118
3119
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountabilityrating (educationorganizationid, ratingtitle, schoolyear, rating, ratingdate, ratingorganization, ratingprogram, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accounttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accounttypedescriptor (accounttypedescriptorid) FROM stdin;
944
945
946
\.


--
-- Data for Name: achievementcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.achievementcategorydescriptor (achievementcategorydescriptorid) FROM stdin;
1753
1754
1756
1757
1758
1760
1761
1763
1764
1755
1759
1762
\.


--
-- Data for Name: additionalcredittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.additionalcredittypedescriptor (additionalcredittypedescriptorid) FROM stdin;
425
426
427
428
424
\.


--
-- Data for Name: addresstypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.addresstypedescriptor (addresstypedescriptorid) FROM stdin;
2431
2432
2433
2434
2435
2437
2436
2438
2439
2440
2441
2442
2443
2444
2445
\.


--
-- Data for Name: administrationenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrationenvironmentdescriptor (administrationenvironmentdescriptorid) FROM stdin;
297
296
299
298
\.


--
-- Data for Name: administrativefundingcontroldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrativefundingcontroldescriptor (administrativefundingcontroldescriptorid) FROM stdin;
2871
2873
2872
\.


--
-- Data for Name: ancestryethnicorigindescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.ancestryethnicorigindescriptor (ancestryethnicorigindescriptorid) FROM stdin;
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessment (assessmentidentifier, namespace, adaptiveassessment, assessmentcategorydescriptorid, assessmentfamily, assessmentform, assessmenttitle, assessmentversion, educationorganizationid, maxrawscore, nomenclature, revisiondate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentacademicsubject (assessmentidentifier, namespace, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentassessedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentassessedgradelevel (assessmentidentifier, namespace, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcategorydescriptor (assessmentcategorydescriptorid) FROM stdin;
2626
2627
2629
2628
2631
2630
2632
2633
2635
2634
2636
2637
2638
2639
2640
2641
2642
2643
2644
2645
2646
2647
2648
2649
2650
2651
2652
2653
2654
2655
2656
2657
2658
2659
2660
2661
2662
2663
2664
2665
2666
2667
2668
2669
\.


--
-- Data for Name: assessmentcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandard (assessmentidentifier, namespace, begindate, enddate, mandatingeducationorganizationid, publicationdate, publicationstatusdescriptorid, publicationyear, title, uri, version, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandardauthor (assessmentidentifier, namespace, author, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationcode (assessmentidentifier, namespace, assessmentidentificationsystemdescriptorid, assigningorganizationidentificationcode, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationsystemdescriptor (assessmentidentificationsystemdescriptorid) FROM stdin;
222
223
224
225
226
227
228
229
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitem (assessmentidentifier, identificationcode, namespace, assessmentitemcategorydescriptorid, assessmentitemuri, expectedtimeassessed, itemtext, maxrawscore, nomenclature, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentitemcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemcategorydescriptor (assessmentitemcategorydescriptorid) FROM stdin;
2981
2983
2986
2985
2990
2992
2994
2996
2997
2999
3002
2984
2987
2991
2995
2982
2988
2989
2993
2998
3000
3001
\.


--
-- Data for Name: assessmentitemlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemlearningstandard (assessmentidentifier, identificationcode, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitempossibleresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitempossibleresponse (assessmentidentifier, identificationcode, namespace, responsevalue, correctresponse, responsedescription, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitemresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemresultdescriptor (assessmentitemresultdescriptorid) FROM stdin;
2960
2961
2963
2962
2965
2964
\.


--
-- Data for Name: assessmentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentlanguage (assessmentidentifier, namespace, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperformancelevel (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, maximumscore, minimumscore, performancelevelindicatorname, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperiod (assessmentidentifier, namespace, assessmentperioddescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperioddescriptor (assessmentperioddescriptorid) FROM stdin;
2724
2725
2726
2727
2728
2729
\.


--
-- Data for Name: assessmentplatformtype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentplatformtype (assessmentidentifier, namespace, platformtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentprogram (assessmentidentifier, namespace, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentreportingmethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentreportingmethoddescriptor (assessmentreportingmethoddescriptorid) FROM stdin;
1205
1207
1208
1209
1214
1216
1217
1221
1223
1224
1225
1226
1229
1231
1233
1235
1239
1240
1242
1244
1246
1206
1210
1212
1215
1218
1222
1227
1232
1236
1237
1247
1204
1211
1213
1219
1220
1228
1230
1234
1238
1241
1243
1245
\.


--
-- Data for Name: assessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscore (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandard (assessmentidentifier, namespace, scorerangeid, assessmentreportingmethoddescriptorid, identificationcode, maximumscore, minimumscore, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandardlearningstandard (assessmentidentifier, namespace, scorerangeid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentsection (assessmentidentifier, namespace, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: assignmentlatestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assignmentlatestatusdescriptor (assignmentlatestatusdescriptorid) FROM stdin;
2912
2911
\.


--
-- Data for Name: attemptstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attemptstatusdescriptor (attemptstatusdescriptorid) FROM stdin;
3003
3006
3004
3005
3007
3008
3009
3010
3011
3012
3013
3014
3015
3016
3017
3018
\.


--
-- Data for Name: attendanceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attendanceeventcategorydescriptor (attendanceeventcategorydescriptorid) FROM stdin;
1032
1031
1033
1030
1034
1035
\.


--
-- Data for Name: balancesheetdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.balancesheetdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: balancesheetdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.balancesheetdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: barriertointernetaccessinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.barriertointernetaccessinresidencedescriptor (barriertointernetaccessinresidencedescriptorid) FROM stdin;
183
181
182
184
\.


--
-- Data for Name: behaviordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.behaviordescriptor (behaviordescriptorid) FROM stdin;
1000
1001
1003
1002
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedule (bellschedulename, schoolid, alternatedayname, endtime, starttime, totalinstructionaltime, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: bellscheduleclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduleclassperiod (bellschedulename, schoolid, classperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: bellscheduledate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduledate (bellschedulename, schoolid, date, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedulegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedulegradelevel (bellschedulename, schoolid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendar (calendarcode, schoolid, schoolyear, calendartypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardate (calendarcode, date, schoolid, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardatecalendarevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardatecalendarevent (calendarcode, date, schoolid, schoolyear, calendareventdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: calendareventdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendareventdescriptor (calendareventdescriptorid) FROM stdin;
142
143
144
145
146
147
148
149
150
151
\.


--
-- Data for Name: calendargradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendargradelevel (calendarcode, schoolid, schoolyear, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: calendartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendartypedescriptor (calendartypedescriptorid) FROM stdin;
2482
2483
2484
2485
2486
\.


--
-- Data for Name: careerpathwaydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.careerpathwaydescriptor (careerpathwaydescriptorid) FROM stdin;
2414
2416
2415
2417
2419
2418
2420
2421
2422
2423
2424
2425
2426
2427
2428
2429
2430
\.


--
-- Data for Name: charterapprovalagencytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterapprovalagencytypedescriptor (charterapprovalagencytypedescriptorid) FROM stdin;
1651
1649
1652
1650
\.


--
-- Data for Name: charterstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterstatusdescriptor (charterstatusdescriptorid) FROM stdin;
2804
2803
2805
2802
\.


--
-- Data for Name: chartofaccount; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.chartofaccount (accountidentifier, educationorganizationid, fiscalyear, accountname, accounttypedescriptorid, balancesheetcode, functioncode, fundcode, objectcode, operationalunitcode, programcode, projectcode, sourcecode, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: chartofaccountreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.chartofaccountreportingtag (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid, tagvalue, createdate) FROM stdin;
\.


--
-- Data for Name: citizenshipstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.citizenshipstatusdescriptor (citizenshipstatusdescriptorid) FROM stdin;
992
993
991
994
995
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiod (classperiodname, schoolid, officialattendanceperiod, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: classperiodmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiodmeetingtime (classperiodname, schoolid, endtime, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: classroompositiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classroompositiondescriptor (classroompositiondescriptorid) FROM stdin;
3040
3039
3041
3042
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohort (cohortidentifier, educationorganizationid, academicsubjectdescriptorid, cohortdescription, cohortscopedescriptorid, cohorttypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: cohortprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortprogram (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: cohortscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortscopedescriptor (cohortscopedescriptorid) FROM stdin;
2915
2919
2914
2916
2918
2921
2913
2917
2920
\.


--
-- Data for Name: cohorttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohorttypedescriptor (cohorttypedescriptorid) FROM stdin;
2900
2902
2901
2903
2904
2905
2906
2907
2908
2909
2910
\.


--
-- Data for Name: cohortyeartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortyeartypedescriptor (cohortyeartypedescriptorid) FROM stdin;
2673
2671
2674
2675
2679
2680
2670
2677
2678
2672
2676
2681
3245
3246
\.


--
-- Data for Name: communityorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityorganization (communityorganizationid) FROM stdin;
\.


--
-- Data for Name: communityprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityprovider (communityproviderid, communityorganizationid, licenseexemptindicator, providercategorydescriptorid, providerprofitabilitydescriptorid, providerstatusdescriptorid, schoolindicator) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityproviderlicense (communityproviderid, licenseidentifier, licensingorganization, authorizedfacilitycapacity, licenseeffectivedate, licenseexpirationdate, licenseissuedate, licensestatusdescriptorid, licensetypedescriptorid, oldestageauthorizedtoserve, youngestageauthorizedtoserve, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: competencyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyleveldescriptor (competencyleveldescriptorid) FROM stdin;
2762
2766
2764
2767
2765
2768
2763
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyobjective (educationorganizationid, objective, objectivegradeleveldescriptorid, competencyobjectiveid, description, successcriteria, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: contact; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contact (contactusi, contactuniqueid, firstname, genderidentity, generationcodesuffix, highestcompletedlevelofeducationdescriptorid, lastsurname, loginid, maidenname, middlename, personaltitleprefix, personid, preferredfirstname, preferredlastsurname, sexdescriptorid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: contactaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactaddress (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: contactaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactaddressperiod (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: contactelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactelectronicmail (contactusi, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: contactinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactinternationaladdress (contactusi, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: contactlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactlanguage (contactusi, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: contactlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactlanguageuse (contactusi, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: contactothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactothername (contactusi, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: contactpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contactpersonalidentificationdocument (contactusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: contacttelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contacttelephone (contactusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: contacttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contacttypedescriptor (contacttypedescriptorid) FROM stdin;
2613
\.


--
-- Data for Name: contentclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contentclassdescriptor (contentclassdescriptorid) FROM stdin;
1170
1171
1172
1173
1174
\.


--
-- Data for Name: continuationofservicesreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.continuationofservicesreasondescriptor (continuationofservicesreasondescriptorid) FROM stdin;
28
27
29
\.


--
-- Data for Name: costratedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.costratedescriptor (costratedescriptorid) FROM stdin;
1703
1704
\.


--
-- Data for Name: countrydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.countrydescriptor (countrydescriptorid) FROM stdin;
1323
1329
1334
1335
1338
1340
1346
1350
1352
1357
1362
1365
1368
1373
1375
1378
1382
1384
1398
1402
1405
1411
1413
1423
1427
1430
1438
1444
1449
1450
1455
1457
1463
1470
1473
1475
1478
1482
1484
1488
1492
1494
1497
1500
1504
1508
1510
1513
1515
1519
1526
1530
1533
1534
1536
1541
1543
1547
1550
1552
1556
1564
1569
1571
1326
1327
1331
1333
1341
1343
1348
1354
1356
1360
1363
1371
1377
1380
1383
1390
1394
1397
1403
1406
1409
1412
1415
1416
1419
1422
1424
1428
1433
1435
1440
1441
1443
1445
1446
1452
1460
1464
1466
1469
1481
1487
1490
1496
1499
1503
1507
1512
1517
1521
1522
1523
1537
1540
1542
1544
1549
1551
1554
1559
1563
1566
1325
1330
1332
1336
1339
1345
1347
1359
1361
1366
1369
1372
1379
1381
1386
1387
1389
1391
1392
1395
1399
1400
1404
1408
1417
1420
1426
1429
1431
1434
1437
1442
1447
1453
1456
1459
1461
1465
1467
1472
1474
1477
1479
1483
1486
1493
1495
1498
1501
1505
1509
1514
1516
1518
1525
1528
1529
1532
1539
1546
1558
1560
1565
1568
1570
1324
1328
1337
1342
1344
1349
1351
1353
1355
1358
1364
1367
1370
1374
1376
1385
1388
1393
1396
1401
1407
1410
1414
1418
1421
1425
1432
1436
1439
1448
1451
1454
1458
1462
1468
1471
1476
1480
1485
1489
1491
1502
1506
1511
1520
1524
1527
1531
1535
1538
1545
1548
1553
1555
1557
1561
1562
1567
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.course (coursecode, educationorganizationid, careerpathwaydescriptorid, coursedefinedbydescriptorid, coursedescription, coursegpaapplicabilitydescriptorid, coursetitle, datecourseadopted, highschoolcourserequirement, maxcompletionsforcredit, maximumavailablecreditconversion, maximumavailablecredits, maximumavailablecredittypedescriptorid, minimumavailablecreditconversion, minimumavailablecredits, minimumavailablecredittypedescriptorid, numberofparts, timerequiredforcompletion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseacademicsubject (coursecode, educationorganizationid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseattemptresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseattemptresultdescriptor (courseattemptresultdescriptorid) FROM stdin;
251
252
254
253
\.


--
-- Data for Name: coursecompetencylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursecompetencylevel (coursecode, educationorganizationid, competencyleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursedefinedbydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursedefinedbydescriptor (coursedefinedbydescriptorid) FROM stdin;
358
361
359
360
\.


--
-- Data for Name: coursegpaapplicabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursegpaapplicabilitydescriptor (coursegpaapplicabilitydescriptorid) FROM stdin;
2721
2723
2722
\.


--
-- Data for Name: courseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationcode (coursecode, educationorganizationid, courseidentificationsystemdescriptorid, assigningorganizationidentificationcode, coursecatalogurl, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: courseidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationsystemdescriptor (courseidentificationsystemdescriptorid) FROM stdin;
374
373
376
375
378
377
380
379
381
\.


--
-- Data for Name: courselearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningstandard (coursecode, educationorganizationid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristic (coursecode, educationorganizationid, courselevelcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristicdescriptor (courselevelcharacteristicdescriptorid) FROM stdin;
2845
2846
2849
2852
2853
2854
2859
2860
2861
2863
2865
2866
2847
2851
2856
2857
2862
2848
2850
2855
2858
2864
2867
\.


--
-- Data for Name: courseofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferedgradelevel (coursecode, educationorganizationid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseoffering (localcoursecode, schoolid, schoolyear, sessionname, coursecode, educationorganizationid, instructionaltimeplanned, localcoursetitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseofferingcourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcourselevelcharacteristic (localcoursecode, schoolid, schoolyear, sessionname, courselevelcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingcurriculumused; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcurriculumused (localcoursecode, schoolid, schoolyear, sessionname, curriculumuseddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingofferedgradelevel (localcoursecode, schoolid, schoolyear, sessionname, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courserepeatcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courserepeatcodedescriptor (courserepeatcodedescriptorid) FROM stdin;
932
934
931
935
930
933
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscript (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, alternativecoursetitle, assigningorganizationidentificationcode, attemptedcreditconversion, attemptedcredits, attemptedcredittypedescriptorid, coursecatalogurl, courserepeatcodedescriptorid, coursetitle, earnedcreditconversion, earnedcredits, earnedcredittypedescriptorid, externaleducationorganizationid, externaleducationorganizationnameofinstitution, finallettergradeearned, finalnumericgradeearned, methodcreditearneddescriptorid, responsibleteacherstaffusi, whentakengradeleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: coursetranscriptacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptacademicsubject (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptalternativecourseidentificationcode (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, courseidentificationsystemdescriptorid, assigningorganizationidentificationcode, coursecatalogurl, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptcreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptcreditcategory (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, creditcategorydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptearnedadditionalcredits; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptearnedadditionalcredits (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, additionalcredittypedescriptorid, credits, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptpartialcoursetranscriptawards (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, awarddate, earnedcredits, lettergradeearned, methodcreditearneddescriptorid, numericgradeearned, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptprogram (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptsection (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, localcoursecode, schoolid, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credential (credentialidentifier, stateofissuestateabbreviationdescriptorid, credentialfielddescriptorid, credentialtypedescriptorid, effectivedate, expirationdate, issuancedate, namespace, teachingcredentialbasisdescriptorid, teachingcredentialdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: credentialacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialacademicsubject (credentialidentifier, stateofissuestateabbreviationdescriptorid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialendorsement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialendorsement (credentialidentifier, stateofissuestateabbreviationdescriptorid, credentialendorsement, createdate) FROM stdin;
\.


--
-- Data for Name: credentialfielddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialfielddescriptor (credentialfielddescriptorid) FROM stdin;
1686
1687
1688
1689
1690
1691
1692
1693
1695
1694
1696
1697
1698
1699
1700
\.


--
-- Data for Name: credentialgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialgradelevel (credentialidentifier, stateofissuestateabbreviationdescriptorid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialtypedescriptor (credentialtypedescriptorid) FROM stdin;
3099
3100
3101
3102
3103
\.


--
-- Data for Name: creditcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.creditcategorydescriptor (creditcategorydescriptorid) FROM stdin;
2703
2704
2705
2706
2707
2708
2709
2710
\.


--
-- Data for Name: credittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credittypedescriptor (credittypedescriptorid) FROM stdin;
30
31
32
33
34
35
36
37
38
39
40
41
42
44
43
45
46
\.


--
-- Data for Name: cteprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cteprogramservicedescriptor (cteprogramservicedescriptorid) FROM stdin;
913
915
914
916
918
919
917
920
921
922
924
923
925
926
927
928
929
\.


--
-- Data for Name: curriculumuseddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.curriculumuseddescriptor (curriculumuseddescriptorid) FROM stdin;
1572
1574
1575
1573
1576
1577
1578
1579
1580
\.


--
-- Data for Name: deliverymethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.deliverymethoddescriptor (deliverymethoddescriptorid) FROM stdin;
292
294
295
293
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptor (descriptorid, namespace, codevalue, shortdescription, description, priordescriptorid, effectivebegindate, effectiveenddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
1	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Illness	Nonpromotion - Illness	Nonpromotion - Illness	\N	\N	\N	\N	2023-11-08 13:57:29.637668	2023-11-08 13:57:29.622937	e774d5da-84a4-4061-a031-e68781fe5bb2	1
6	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Other	Nonpromotion - Other	Nonpromotion - Other	\N	\N	\N	\N	2023-11-08 13:57:29.760773	2023-11-08 13:57:29.760752	619be75d-8a5d-4d89-b3c5-18f3a84b149b	6
12	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Probationary promotion	Promotion - Probationary promotion	Promotion - Probationary promotion	\N	\N	\N	\N	2023-11-08 13:57:29.773561	2023-11-08 13:57:29.773459	bc59ba00-991f-4af9-95da-76cf573e994e	12
13	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Variable progress	Promotion - Variable progress	Promotion - Variable progress	\N	\N	\N	\N	2023-11-08 13:57:29.783721	2023-11-08 13:57:29.783662	b8cea128-50f8-4fe4-b4f0-55ae4d51b1b9	13
15	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	\N	2023-11-08 13:57:29.813124	2023-11-08 13:57:29.811938	87180298-f8e5-4dcc-8ce6-a729457feffd	15
23	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit that crosses states	Resident of an administrative unit that crosses state boundaries	Resident of an administrative unit that crosses state boundaries	\N	\N	\N	\N	2023-11-08 13:57:29.862964	2023-11-08 13:57:29.861725	414b7a2d-baa5-4ad1-848b-ed4d6f92685b	23
29	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Previously migratory secondary student	Previously migratory secondary student continuing credit accrual	Previously migratory secondary student continuing secondary school credit accrual	\N	\N	\N	\N	2023-11-08 13:57:29.906733	2023-11-08 13:57:29.905656	ea7f7fd7-686a-4c4d-bb1d-3bcdb81e7089	29
32	uri://ed-fi.org/CreditTypeDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	\N	2023-11-08 13:57:29.91878	2023-11-08 13:57:29.91875	4c2b4e6d-f508-417c-a56b-a59d58591703	32
36	uri://ed-fi.org/CreditTypeDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	\N	2023-11-08 13:57:29.926841	2023-11-08 13:57:29.926823	855734bb-591b-46c0-adf6-60b0da7f2ce3	36
38	uri://ed-fi.org/CreditTypeDescriptor	Mini-term hour credit	Mini-term hour credit	Mini-term hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.935401	2023-11-08 13:57:29.935371	d50c3fdf-fd68-4b5d-af60-213addea774b	38
41	uri://ed-fi.org/CreditTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:29.939216	2023-11-08 13:57:29.939178	8cd5ffe8-0707-4747-aa86-e49b90b6cbe5	41
49	uri://ed-fi.org/StateAbbreviationDescriptor	AE	AE	AE	\N	\N	\N	\N	2023-11-08 13:57:29.99164	2023-11-08 13:57:29.990464	b91773e7-3db5-4cff-b229-0ae9386b8ecd	49
54	uri://ed-fi.org/StateAbbreviationDescriptor	AR	AR	AR	\N	\N	\N	\N	2023-11-08 13:57:30.006243	2023-11-08 13:57:30.006226	562bab59-2f0c-4506-a155-05d6c3fc2409	54
56	uri://ed-fi.org/StateAbbreviationDescriptor	CO	CO	CO	\N	\N	\N	\N	2023-11-08 13:57:30.012833	2023-11-08 13:57:30.012796	2c9c3636-2dc0-40c3-9566-c85de06fe9d3	57
60	uri://ed-fi.org/StateAbbreviationDescriptor	FM	FM	FM	\N	\N	\N	\N	2023-11-08 13:57:30.01972	2023-11-08 13:57:30.019704	b3cee015-cb93-4c03-b9b4-6544d6093a27	60
64	uri://ed-fi.org/StateAbbreviationDescriptor	HI	HI	HI	\N	\N	\N	\N	2023-11-08 13:57:30.028792	2023-11-08 13:57:30.028725	755557c8-d7f4-4422-b5f4-4cd041496a0a	64
69	uri://ed-fi.org/StateAbbreviationDescriptor	KS	KS	KS	\N	\N	\N	\N	2023-11-08 13:57:30.038403	2023-11-08 13:57:30.038367	e35b273c-f22f-43e3-a061-8a952c0eba8f	69
75	uri://ed-fi.org/StateAbbreviationDescriptor	MH	MH	MH	\N	\N	\N	\N	2023-11-08 13:57:30.052748	2023-11-08 13:57:30.052708	3b60a210-cbde-406b-b38b-dc629e14b3e3	75
87	uri://ed-fi.org/StateAbbreviationDescriptor	NM	NM	NM	\N	\N	\N	\N	2023-11-08 13:57:30.083702	2023-11-08 13:57:30.083637	54ae563c-f499-4ef1-bb2e-1e1d9ed3b5fb	87
93	uri://ed-fi.org/StateAbbreviationDescriptor	PA	PA	PA	\N	\N	\N	\N	2023-11-08 13:57:30.098265	2023-11-08 13:57:30.096928	484e3e6c-2023-4155-afee-eb6b361f37ad	93
95	uri://ed-fi.org/StateAbbreviationDescriptor	RI	RI	RI	\N	\N	\N	\N	2023-11-08 13:57:30.107146	2023-11-08 13:57:30.10711	adbfd119-7200-4193-961b-d48696da243f	95
98	uri://ed-fi.org/StateAbbreviationDescriptor	SC	SC	SC	\N	\N	\N	\N	2023-11-08 13:57:30.111408	2023-11-08 13:57:30.111393	eb4e0261-7e10-4092-b6be-b57298c52b79	98
101	uri://ed-fi.org/StateAbbreviationDescriptor	TX	TX	TX	\N	\N	\N	\N	2023-11-08 13:57:30.119996	2023-11-08 13:57:30.119896	6c905b03-bb1f-4564-a163-3a3a5f617339	101
103	uri://ed-fi.org/StateAbbreviationDescriptor	VT	VT	VT	\N	\N	\N	\N	2023-11-08 13:57:30.128151	2023-11-08 13:57:30.127971	fa8e6428-6655-41d3-9b89-b445028419f3	103
107	uri://ed-fi.org/StateAbbreviationDescriptor	WI	WI	WI	\N	\N	\N	\N	2023-11-08 13:57:30.137689	2023-11-08 13:57:30.137655	872f6768-2d09-4cf7-a4ea-c51f2aaa168b	107
110	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	\N	2023-11-08 13:57:30.177304	2023-11-08 13:57:30.17611	d6b3625d-f027-455e-9a25-ab52a36be94a	110
116	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	\N	2023-11-08 13:57:30.190603	2023-11-08 13:57:30.190571	5d0fa25c-6306-4325-a050-03510af8acf2	116
120	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	\N	2023-11-08 13:57:30.200288	2023-11-08 13:57:30.200253	5525f988-c9c2-4510-b76e-44c07151ebb7	120
123	uri://ed-fi.org/EvaluationDelayReasonDescriptor	Initial SLD Evaluation	Initial SLD Evaluation	Initial Specific Learning Disabilities (SLD) Evaluation	\N	\N	\N	\N	2023-11-08 13:57:30.237425	2023-11-08 13:57:30.235358	74597181-e487-406e-8d8c-caf9dfd1cf19	123
125	uri://ed-fi.org/SeparationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:30.260428	2023-11-08 13:57:30.258851	f87ccbf8-28f2-43cb-a719-8785777ef5f7	125
128	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Mid-Year	Mid-Year	Mid-Year	\N	\N	\N	\N	2023-11-08 13:57:30.300429	2023-11-08 13:57:30.298927	20e5ec18-cd60-4fb6-9e49-16ced4b13d4a	128
133	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	\N	2023-11-08 13:57:30.314153	2023-11-08 13:57:30.314107	261427da-febf-431d-ab7e-9691a5235adc	133
141	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Winter Semester	Winter Semester	Winter Semester	\N	\N	\N	\N	2023-11-08 13:57:30.330649	2023-11-08 13:57:30.330621	172c4846-8678-4af8-afe7-79b9adf5e555	141
142	uri://ed-fi.org/CalendarEventDescriptor	Make-up day	Make-up day	Make-up instructional day	\N	\N	\N	\N	2023-11-08 13:57:30.384266	2023-11-08 13:57:30.383256	7cb87ac7-c699-4cb9-85b7-fd08af91e9f8	142
147	uri://ed-fi.org/CalendarEventDescriptor	Strike	Strike	Instruction cancelled or reduced due to a strike	\N	\N	\N	\N	2023-11-08 13:57:30.397121	2023-11-08 13:57:30.397093	dab0e321-80a7-4b98-91b5-7af1de22823d	147
3	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Immaturity	Nonpromotion - Immaturity	Nonpromotion - Immaturity	\N	\N	\N	\N	2023-11-08 13:57:29.635942	2023-11-08 13:57:29.622943	5304b0e4-03b6-41d3-bde6-a9239d920e8a	3
4	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	\N	\N	\N	\N	2023-11-08 13:57:29.637572	2023-11-08 13:57:29.622939	08fe4b17-2097-45e2-9bf3-4ffce0b055eb	4
5	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Accelerated promotion	Promotion - Accelerated promotion	Promotion - Accelerated promotion	\N	\N	\N	\N	2023-11-08 13:57:29.759296	2023-11-08 13:57:29.759082	09f4e38d-03f8-4f22-bcf0-7e49505a4b65	5
8	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	\N	\N	\N	\N	2023-11-08 13:57:29.762798	2023-11-08 13:57:29.762753	ec746235-8e82-4f94-9c45-ef99a0cea803	8
9	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Continuous promotion	Promotion - Continuous promotion	Promotion - Continuous promotion	\N	\N	\N	\N	2023-11-08 13:57:29.772031	2023-11-08 13:57:29.771988	5445f202-1f91-44a1-b1bf-81296c76f639	9
10	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Regular promotion	Promotion - Regular promotion	Promotion - Regular promotion	\N	\N	\N	\N	2023-11-08 13:57:29.772415	2023-11-08 13:57:29.772282	4c937552-091f-4898-91d2-838e0512d577	10
14	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	\N	2023-11-08 13:57:29.812957	2023-11-08 13:57:29.811926	98d4d159-c1c7-457a-8aaf-c233ba85600d	14
17	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Organization Network	Education Organization Network	Education Organization Network	\N	\N	\N	\N	2023-11-08 13:57:29.81313	2023-11-08 13:57:29.811948	c4e9ff0f-7fcc-45ea-b871-ac382ee93520	17
18	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	\N	2023-11-08 13:57:29.823182	2023-11-08 13:57:29.823167	a1aca772-728f-478c-92d2-ddfd19f4425f	18
20	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Post Secondary Institution	Post Secondary Institution	Post Secondary Institution	\N	\N	\N	\N	2023-11-08 13:57:29.823578	2023-11-08 13:57:29.823561	12d38fe2-ff67-42de-835b-613ea99c4635	20
22	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit, but other school area	Resident of administrative unit, but of other school attendance area	Resident of administrative unit, but of other school attendance area	\N	\N	\N	\N	2023-11-08 13:57:29.862736	2023-11-08 13:57:29.861731	eb982d55-0795-41ae-bf67-e6e77912eb31	22
25	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of another state	Resident of another state	Resident of another state	\N	\N	\N	\N	2023-11-08 13:57:29.862906	2023-11-08 13:57:29.861737	992993c6-a866-4e0f-96df-c073009eda00	25
26	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of this state, but not of this admin unit	Resident of this state, but not of this administrative unit	Resident of this state, but not of this administrative unit	\N	\N	\N	\N	2023-11-08 13:57:29.874266	2023-11-08 13:57:29.874212	7e1def8e-dfa2-4836-9345-c02e679b55ed	26
28	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during school term	Ceased to be migratory during school term	Ceased to be migratory during school term	\N	\N	\N	\N	2023-11-08 13:57:29.906733	2023-11-08 13:57:29.905663	0ff525b0-4426-49f6-9041-4597f6f603e0	28
30	uri://ed-fi.org/CreditTypeDescriptor	Adult education credit	Adult education credit	Adult education credit	\N	\N	\N	\N	2023-11-08 13:57:29.913254	2023-11-08 13:57:29.911448	84867e52-f011-493c-8238-5432ad1f5b13	30
31	uri://ed-fi.org/CreditTypeDescriptor	Career and Technical Education credit	Career and Technical Education credit	Career and Technical Education credit	\N	\N	\N	\N	2023-11-08 13:57:29.918564	2023-11-08 13:57:29.918518	d6c7d0cc-5f76-4408-8cf5-efc18bd34d4f	31
33	uri://ed-fi.org/CreditTypeDescriptor	Carnegie unit	Carnegie unit	Carnegie unit	\N	\N	\N	\N	2023-11-08 13:57:29.918965	2023-11-08 13:57:29.918945	cea3ecb9-c956-4477-8683-aa57bd6b298b	33
34	uri://ed-fi.org/CreditTypeDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	\N	2023-11-08 13:57:29.924467	2023-11-08 13:57:29.924421	c86ae284-3106-4236-9d6d-fce5fc9b0541	34
37	uri://ed-fi.org/CreditTypeDescriptor	Long session hour credit	Long session hour credit	Long session hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.928839	2023-11-08 13:57:29.92881	877cffac-04e0-4f84-a2b9-9a4d12bdb782	37
40	uri://ed-fi.org/CreditTypeDescriptor	Nine month year hour credit	Nine month year hour credit	Nine month year hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.937703	2023-11-08 13:57:29.937668	35864696-a89f-4cc8-9091-98687aa8c563	40
43	uri://ed-fi.org/CreditTypeDescriptor	Summer term hour credit	Summer term hour credit	Summer term hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.946347	2023-11-08 13:57:29.946311	70268b18-7441-4f7c-ad7e-b4c03750269f	43
44	uri://ed-fi.org/CreditTypeDescriptor	Quinmester hour credit	Quinmester hour credit	Quinmester hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.94647	2023-11-08 13:57:29.945993	46b07ba8-21cd-4d16-adfe-221354bbc4f2	44
45	uri://ed-fi.org/CreditTypeDescriptor	Trimester hour credit	Trimester hour credit	Trimester hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.950758	2023-11-08 13:57:29.950724	772f2dc2-7b3b-4766-8e9a-ba2a643de82a	45
47	uri://ed-fi.org/StateAbbreviationDescriptor	AA	AA	AA	\N	\N	\N	\N	2023-11-08 13:57:29.991483	2023-11-08 13:57:29.99047	583c4c92-4961-4531-95f3-da6055d4bd1c	47
50	uri://ed-fi.org/StateAbbreviationDescriptor	AK	AK	AK	\N	\N	\N	\N	2023-11-08 13:57:29.991772	2023-11-08 13:57:29.990445	27bdeef1-be2d-4c95-a748-eb145e24f813	50
52	uri://ed-fi.org/StateAbbreviationDescriptor	AS	AS	AS	\N	\N	\N	\N	2023-11-08 13:57:30.003271	2023-11-08 13:57:30.003243	dd0a8bf4-5386-4d9b-b3d8-78de03b091dd	52
53	uri://ed-fi.org/StateAbbreviationDescriptor	AZ	AZ	AZ	\N	\N	\N	\N	2023-11-08 13:57:30.003105	2023-11-08 13:57:30.003087	6baa72b1-63e4-4884-9c51-d93d4cb494a7	53
55	uri://ed-fi.org/StateAbbreviationDescriptor	CA	CA	CA	\N	\N	\N	\N	2023-11-08 13:57:30.010464	2023-11-08 13:57:30.010406	13dfa4a1-d21f-4025-9a12-3d0d7420a528	55
57	uri://ed-fi.org/StateAbbreviationDescriptor	CT	CT	CT	\N	\N	\N	\N	2023-11-08 13:57:30.012853	2023-11-08 13:57:30.012825	8e86df6a-176c-4b28-8ddf-80fc494851e2	56
59	uri://ed-fi.org/StateAbbreviationDescriptor	DC	DC	DC	\N	\N	\N	\N	2023-11-08 13:57:30.019468	2023-11-08 13:57:30.01932	4e4f00c3-3301-4ebd-b909-0bd5a8131de2	59
61	uri://ed-fi.org/StateAbbreviationDescriptor	DE	DE	DE	\N	\N	\N	\N	2023-11-08 13:57:30.020388	2023-11-08 13:57:30.020364	0364209d-8250-482d-916b-670d99c91216	61
63	uri://ed-fi.org/StateAbbreviationDescriptor	GA	GA	GA	\N	\N	\N	\N	2023-11-08 13:57:30.026833	2023-11-08 13:57:30.026766	26c7aebc-57c8-448c-b51f-ada2384df7f7	63
67	uri://ed-fi.org/StateAbbreviationDescriptor	ID	ID	ID	\N	\N	\N	\N	2023-11-08 13:57:30.036085	2023-11-08 13:57:30.035691	09aac218-ce29-461f-b167-9a76a9211a0f	67
72	uri://ed-fi.org/StateAbbreviationDescriptor	MD	MD	MD	\N	\N	\N	\N	2023-11-08 13:57:30.047646	2023-11-08 13:57:30.047609	c037a7cf-3f1d-4feb-bf04-6f15fcf3d588	72
78	uri://ed-fi.org/StateAbbreviationDescriptor	MO	MO	MO	\N	\N	\N	\N	2023-11-08 13:57:30.060722	2023-11-08 13:57:30.06068	0b73f0c5-2bde-40bc-a9c4-a019ecfbaf06	78
82	uri://ed-fi.org/StateAbbreviationDescriptor	MT	MT	MT	\N	\N	\N	\N	2023-11-08 13:57:30.071237	2023-11-08 13:57:30.071194	cb60d6d2-9c33-41be-a526-7e91c71113d7	82
85	uri://ed-fi.org/StateAbbreviationDescriptor	NJ	NJ	NJ	\N	\N	\N	\N	2023-11-08 13:57:30.081365	2023-11-08 13:57:30.081325	2768c333-e915-4d9b-8a05-f8cfea46b467	85
91	uri://ed-fi.org/StateAbbreviationDescriptor	OK	OK	OK	\N	\N	\N	\N	2023-11-08 13:57:30.094247	2023-11-08 13:57:30.094172	74a7f58d-0dbe-4120-b563-59d5483cc7f7	91
97	uri://ed-fi.org/StateAbbreviationDescriptor	SD	SD	SD	\N	\N	\N	\N	2023-11-08 13:57:30.111159	2023-11-08 13:57:30.111118	b4016a5a-0125-47a4-8fc8-db437c0007d9	97
102	uri://ed-fi.org/StateAbbreviationDescriptor	VA	VA	VA	\N	\N	\N	\N	2023-11-08 13:57:30.126667	2023-11-08 13:57:30.126644	44d84eed-bece-4c22-bfeb-41b7ec6e1a82	102
104	uri://ed-fi.org/StateAbbreviationDescriptor	WA	WA	WA	\N	\N	\N	\N	2023-11-08 13:57:30.129539	2023-11-08 13:57:30.129389	8f00593c-8f1f-487d-ad85-e024a1ec3590	104
106	uri://ed-fi.org/StateAbbreviationDescriptor	WV	WV	WV	\N	\N	\N	\N	2023-11-08 13:57:30.13758	2023-11-08 13:57:30.137522	c6ff2139-3bc5-4826-9b6b-04c2a4790dac	106
111	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	\N	2023-11-08 13:57:30.177553	2023-11-08 13:57:30.176092	37ed6e26-7760-44a0-848b-23bdb38c3fdb	111
115	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:30.189892	2023-11-08 13:57:30.189862	b128a1a2-c7c0-4867-8716-afb048ba28ef	115
118	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	\N	2023-11-08 13:57:30.198857	2023-11-08 13:57:30.198798	23d0dcb0-63d5-4954-9dc3-dd4eeeb660dc	118
127	uri://ed-fi.org/SeparationDescriptor	Mutual agreement	Mutual agreement	Mutual agreement	\N	\N	\N	\N	2023-11-08 13:57:30.260031	2023-11-08 13:57:30.258848	f6418072-0ca7-4f1e-be1a-eb3790135131	127
130	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Attribution	Attribution	Indicates the education organization (state, district, and/or school) to which the student's results are attributed to; often used for accountability reporting.	\N	\N	\N	\N	2023-11-08 13:57:30.304898	2023-11-08 13:57:30.303278	228ecefc-dd85-42e5-a177-8c68047f70d3	130
135	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	\N	2023-11-08 13:57:30.316223	2023-11-08 13:57:30.316188	f510cf8e-dead-4331-bd21-4662250c542c	135
140	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	\N	2023-11-08 13:57:30.329113	2023-11-08 13:57:30.329098	1f575264-6234-4308-ae21-7acc3090bfab	140
145	uri://ed-fi.org/CalendarEventDescriptor	Emergency day	Emergency day	Instruction cancelled or reduced due to an emergency	\N	\N	\N	\N	2023-11-08 13:57:30.384269	2023-11-08 13:57:30.383259	98ba4542-40aa-4147-adc9-023a4d88f650	145
148	uri://ed-fi.org/CalendarEventDescriptor	Teacher only day	Teacher only day	Non-instructional day for students designated for teachers (e.g., staff development, work day)	\N	\N	\N	\N	2023-11-08 13:57:30.396648	2023-11-08 13:57:30.396631	1f6fa86d-24c5-4c92-9a3c-9a45be74c1d5	148
154	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Personal	Personal	The provider of the primary learning device is the student or guardian.	\N	\N	\N	\N	2023-11-08 13:57:30.470246	2023-11-08 13:57:30.469017	0f96a76c-338d-4878-953e-68e06909acee	154
157	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	\N	2023-11-08 13:57:30.484816	2023-11-08 13:57:30.483384	b036aab2-5bc0-433a-b95f-cb773f5917cd	157
161	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Unlisted	Unlisted	Unlisted	\N	\N	\N	\N	2023-11-08 13:57:30.494609	2023-11-08 13:57:30.49458	e25254eb-66ab-4a5f-ae59-3dda99cad80b	161
165	uri://ed-fi.org/TermDescriptor	Fall Semester	Fall Semester	Fall Semester	\N	\N	\N	\N	2023-11-08 13:57:30.541168	2023-11-08 13:57:30.539613	44126a28-d6a9-46db-b829-dd3db41c6a2d	165
170	uri://ed-fi.org/TermDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-11-08 13:57:30.550972	2023-11-08 13:57:30.550944	bf5301ae-88de-4e7f-804b-1f9332a8889c	170
172	uri://ed-fi.org/TermDescriptor	Trimester	Trimester	Trimester	\N	\N	\N	\N	2023-11-08 13:57:30.5596	2023-11-08 13:57:30.55957	bf349cd3-2817-48c0-8616-c62ffd394a93	172
177	uri://ed-fi.org/TermDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	\N	2023-11-08 13:57:30.568977	2023-11-08 13:57:30.568897	f0bbff25-e834-44c7-a158-a94f07f87803	177
183	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Other	Other	The reason why a student cannot access the internet in their primary place of residence is not yet defined.	\N	\N	\N	\N	2023-11-08 13:57:30.607538	2023-11-08 13:57:30.606399	b5a139ec-19ca-41fe-82fd-1aa7e050232f	183
187	uri://ed-fi.org/LicenseStatusDescriptor	Exempt	Exempt	Exempt	\N	\N	\N	\N	2023-11-08 13:57:30.646663	2023-11-08 13:57:30.645419	f1a7fd23-f9fb-463d-aa43-6ff65587017b	187
189	uri://ed-fi.org/IncidentLocationDescriptor	Bus stop	Bus stop	Bus stop	\N	\N	\N	\N	2023-11-08 13:57:30.656983	2023-11-08 13:57:30.656673	06ed2f98-1ef1-4719-a67b-1310c5d9d837	189
195	uri://ed-fi.org/IncidentLocationDescriptor	Computer lab	Computer lab	Computer lab	\N	\N	\N	\N	2023-11-08 13:57:30.666397	2023-11-08 13:57:30.666366	19fea42b-2243-4303-9bda-678cf55800cf	195
197	uri://ed-fi.org/IncidentLocationDescriptor	Locker room or gym areas	Locker room or gym areas	Locker room or gym areas	\N	\N	\N	\N	2023-11-08 13:57:30.672124	2023-11-08 13:57:30.672103	e96e4930-c33e-4a97-9cf3-6e647cbd6a0e	197
201	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school	Off-campus at other school	Off-campus at other school	\N	\N	\N	\N	2023-11-08 13:57:30.679489	2023-11-08 13:57:30.679362	b69ab5ef-d3ea-44a1-88fe-5752d9f53ee7	201
204	uri://ed-fi.org/IncidentLocationDescriptor	On campus	On campus	On campus	\N	\N	\N	\N	2023-11-08 13:57:30.685184	2023-11-08 13:57:30.685158	b96acc65-0a1e-4f0e-9de7-e9284ed64637	204
207	uri://ed-fi.org/IncidentLocationDescriptor	Parking lot	Parking lot	Parking lot	\N	\N	\N	\N	2023-11-08 13:57:30.691159	2023-11-08 13:57:30.691129	907729d7-3f6f-48c7-8a17-8e5056b3edd5	207
759	uri://ed-fi.org/LanguageDescriptor	fin	Finnish	Finnish	\N	\N	\N	\N	2023-11-08 13:57:32.624334	2023-11-08 13:57:32.62432	991f0041-ca77-4e69-89ac-0ae936d55681	759
66	uri://ed-fi.org/StateAbbreviationDescriptor	IL	IL	IL	\N	\N	\N	\N	2023-11-08 13:57:30.034384	2023-11-08 13:57:30.034339	3492a492-3f33-4964-aae5-00649eba2a71	66
68	uri://ed-fi.org/StateAbbreviationDescriptor	IN	IN	IN	\N	\N	\N	\N	2023-11-08 13:57:30.038278	2023-11-08 13:57:30.038118	3a1652cc-34a1-4305-9a2c-7ed8a3a5ff97	68
71	uri://ed-fi.org/StateAbbreviationDescriptor	LA	LA	LA	\N	\N	\N	\N	2023-11-08 13:57:30.044805	2023-11-08 13:57:30.04476	7a1bfa28-348e-4e20-85f8-6484dd27e707	71
74	uri://ed-fi.org/StateAbbreviationDescriptor	ME	ME	ME	\N	\N	\N	\N	2023-11-08 13:57:30.048733	2023-11-08 13:57:30.048692	677675c9-6411-4b22-91e6-90acf2776037	74
76	uri://ed-fi.org/StateAbbreviationDescriptor	MN	MN	MN	\N	\N	\N	\N	2023-11-08 13:57:30.055082	2023-11-08 13:57:30.05505	6e40f99d-c944-47cb-aeae-48492c82c072	76
79	uri://ed-fi.org/StateAbbreviationDescriptor	MP	MP	MP	\N	\N	\N	\N	2023-11-08 13:57:30.063372	2023-11-08 13:57:30.063334	c4400f5a-1170-46a0-bee5-8c4d43796ecb	79
81	uri://ed-fi.org/StateAbbreviationDescriptor	NC	NC	NC	\N	\N	\N	\N	2023-11-08 13:57:30.068435	2023-11-08 13:57:30.068161	ac0ca908-a079-463a-beb3-837e1d1b3656	81
84	uri://ed-fi.org/StateAbbreviationDescriptor	NE	NE	NE	\N	\N	\N	\N	2023-11-08 13:57:30.075048	2023-11-08 13:57:30.074646	adabd007-4a43-40bf-87d4-2c6eb50af7c0	84
88	uri://ed-fi.org/StateAbbreviationDescriptor	NV	NV	NV	\N	\N	\N	\N	2023-11-08 13:57:30.085043	2023-11-08 13:57:30.085015	788149b2-7906-477d-a6e8-3f83f7d7eca9	88
90	uri://ed-fi.org/StateAbbreviationDescriptor	OH	OH	OH	\N	\N	\N	\N	2023-11-08 13:57:30.090404	2023-11-08 13:57:30.090344	ebade252-2185-4767-80e3-b55468bb794d	90
96	uri://ed-fi.org/StateAbbreviationDescriptor	PW	PW	PW	\N	\N	\N	\N	2023-11-08 13:57:30.108237	2023-11-08 13:57:30.106733	5a9ad283-b82d-4a72-96da-2cfd7213ea5e	96
99	uri://ed-fi.org/StateAbbreviationDescriptor	TN	TN	TN	\N	\N	\N	\N	2023-11-08 13:57:30.115694	2023-11-08 13:57:30.115399	ac1e9da0-53e7-4fd2-b44c-494edd3af712	99
109	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	\N	2023-11-08 13:57:30.177315	2023-11-08 13:57:30.176127	26de1f58-6260-4207-8c8e-e29633e9c964	109
113	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	\N	2023-11-08 13:57:30.18774	2023-11-08 13:57:30.187689	3fa03be8-c578-4c08-a01d-0c14888bf973	113
117	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	\N	2023-11-08 13:57:30.198875	2023-11-08 13:57:30.198652	86996964-5fee-413d-907a-00dc391e04bc	117
121	uri://ed-fi.org/EvaluationDelayReasonDescriptor	Transfer	Transfer	Transfer	\N	\N	\N	\N	2023-11-08 13:57:30.236798	2023-11-08 13:57:30.235332	f72ea768-035f-43f5-b643-33032a985832	121
124	uri://ed-fi.org/SeparationDescriptor	Voluntary separation	Voluntary separation	Voluntary separation	\N	\N	\N	\N	2023-11-08 13:57:30.25987	2023-11-08 13:57:30.258821	35789b2f-cf9b-4d74-8a72-4ed234ff1ede	124
131	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Administration	Administration	Indicates the education organization (typically a school) that administered the assessment.	\N	\N	\N	\N	2023-11-08 13:57:30.304834	2023-11-08 13:57:30.303288	e15ad34a-e1a3-4c9f-81af-b3853fc2152a	131
134	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	\N	2023-11-08 13:57:30.315515	2023-11-08 13:57:30.315498	4b4a3f0b-9f67-4f87-a057-877e73689faf	134
136	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	\N	2023-11-08 13:57:30.321859	2023-11-08 13:57:30.321834	3b7367d9-10af-4442-aa1c-2a13a24ff7b7	136
139	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-11-08 13:57:30.328622	2023-11-08 13:57:30.328575	b7390d76-4345-4dfb-8688-0df4dfb55e07	139
144	uri://ed-fi.org/CalendarEventDescriptor	Instructional day	Instructional day	Student instructional day	\N	\N	\N	\N	2023-11-08 13:57:30.384257	2023-11-08 13:57:30.383238	6bd5ed13-9889-4339-8fb8-1bcc56154310	144
150	uri://ed-fi.org/CalendarEventDescriptor	Non-instructional day	Non-instructional day	Non-instructional day	\N	\N	\N	\N	2023-11-08 13:57:30.405174	2023-11-08 13:57:30.405144	9b610b81-9841-4682-a552-fb7d223f53f4	150
152	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Other	Other	The provider of the primary learning device is not yet defined.	\N	\N	\N	\N	2023-11-08 13:57:30.470259	2023-11-08 13:57:30.469013	ac8b9ee2-7741-4a7e-aee7-c369804aaa72	152
156	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Home	Home	Home	\N	\N	\N	\N	2023-11-08 13:57:30.484166	2023-11-08 13:57:30.483176	47372122-8dc1-4612-9609-25ddfb801cc2	156
159	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:30.49386	2023-11-08 13:57:30.493778	bdc80f11-1270-415a-8499-2d41f36ccc66	159
163	uri://ed-fi.org/SectionCharacteristicDescriptor	Attendance Tracked	Attendance Tracked	Attendance Tracked	\N	\N	\N	\N	2023-11-08 13:57:30.538722	2023-11-08 13:57:30.536979	aaf533f1-8652-4ad5-a046-6c94c37348c7	163
168	uri://ed-fi.org/TermDescriptor	Quarter	Quarter	Quarter	\N	\N	\N	\N	2023-11-08 13:57:30.550248	2023-11-08 13:57:30.550216	1cb17241-5060-4447-ab54-20ac4e4e31ef	168
171	uri://ed-fi.org/TermDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	\N	2023-11-08 13:57:30.559277	2023-11-08 13:57:30.559097	2d248e9f-5300-45b4-9354-99c66aa5e29b	171
175	uri://ed-fi.org/TermDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	\N	2023-11-08 13:57:30.566895	2023-11-08 13:57:30.56686	285059c9-e8eb-464a-b821-8ec8b6152aad	175
178	uri://ed-fi.org/TermDescriptor	MiniTerm	MiniTerm	MiniTerm	\N	\N	\N	\N	2023-11-08 13:57:30.57061	2023-11-08 13:57:30.57058	52a67ffc-4b7e-40bf-8af5-145ca5f83356	178
180	uri://ed-fi.org/TermDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:30.576942	2023-11-08 13:57:30.576911	92603f3d-3b62-40da-be89-330f4d4a135a	180
182	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Affordable	Not Affordable	The student cannot access the internet in their primary place of residence because internet service is not affordable.	\N	\N	\N	\N	2023-11-08 13:57:30.607525	2023-11-08 13:57:30.60643	1cc1fe35-30fe-4a1e-8c22-c7c1dda2f114	182
188	uri://ed-fi.org/IncidentLocationDescriptor	Administrative offices area	Administrative offices area	Administrative offices area	\N	\N	\N	\N	2023-11-08 13:57:30.649956	2023-11-08 13:57:30.648512	0e86ad71-b328-4ce3-9867-a40c050103dd	188
192	uri://ed-fi.org/IncidentLocationDescriptor	Cafeteria area	Cafeteria area	Cafeteria area	\N	\N	\N	\N	2023-11-08 13:57:30.658189	2023-11-08 13:57:30.658107	2b5ebc9f-3b23-471c-b89e-fd8516bf9132	192
194	uri://ed-fi.org/IncidentLocationDescriptor	Hallway or stairs	Hallway or stairs	Hallway or stairs	\N	\N	\N	\N	2023-11-08 13:57:30.665792	2023-11-08 13:57:30.665734	72c7a463-553a-4f7a-88d9-de022862e851	194
196	uri://ed-fi.org/IncidentLocationDescriptor	Library/media center	Library/media center	Library/media center	\N	\N	\N	\N	2023-11-08 13:57:30.669608	2023-11-08 13:57:30.669576	e599c9cc-4f5a-4110-a4ae-1ae96208f4a6	196
129	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Enrollment	Enrollment	Indicates the education organization (typically a school) where the student was enrolled at the time the assessment was taken by the student. If dual-enrolled, what the school of record.	\N	\N	\N	\N	2023-11-08 13:57:30.304821	2023-11-08 13:57:30.303295	e9988847-d120-4678-9e93-4395f5674194	129
132	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Beginning of year	Beginning of year	Beginning of year	\N	\N	\N	\N	2023-11-08 13:57:30.312141	2023-11-08 13:57:30.312112	d538b34c-18f1-4918-8aa5-a1c896f6a295	132
137	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Fall Semester	Fall	Fall	\N	\N	\N	\N	2023-11-08 13:57:30.322125	2023-11-08 13:57:30.32211	c644ab9f-f01a-4134-8951-af5156a80b59	137
138	uri://ed-fi.org/ProgramEvaluationPeriodDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	\N	2023-11-08 13:57:30.327353	2023-11-08 13:57:30.327307	2e936a26-248b-477e-948c-b69f991c9e2c	138
143	uri://ed-fi.org/CalendarEventDescriptor	Holiday	Holiday	Instruction cancelled or reduced due to a holiday	\N	\N	\N	\N	2023-11-08 13:57:30.384272	2023-11-08 13:57:30.383224	d85002d7-8701-499f-9f6e-86403748c3a1	143
146	uri://ed-fi.org/CalendarEventDescriptor	Student late arrival/early dismissal	Student late arrival/early dismissal	Abbreviated instructional day due to student late arrival or early dismissal	\N	\N	\N	\N	2023-11-08 13:57:30.396235	2023-11-08 13:57:30.396193	f63b6e28-99a8-4b99-aec7-5bef13c5266e	146
149	uri://ed-fi.org/CalendarEventDescriptor	Weather day	Weather day	Instruction cancelled or reduced due to weather	\N	\N	\N	\N	2023-11-08 13:57:30.404437	2023-11-08 13:57:30.404401	4dd13377-3526-44c2-bd86-3f62d42add41	149
153	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	School	School	The provider of the primary learning device is the school.	\N	\N	\N	\N	2023-11-08 13:57:30.470232	2023-11-08 13:57:30.469027	2cab0388-bdde-4e28-bdb2-1060eeee9c4c	153
158	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 2	Emergency 2	Emergency 2	\N	\N	\N	\N	2023-11-08 13:57:30.483812	2023-11-08 13:57:30.481349	b1aad701-2d28-4fee-857a-e712eec016fc	158
160	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Work	Work	Work	\N	\N	\N	\N	2023-11-08 13:57:30.494733	2023-11-08 13:57:30.494507	e2b1e4e8-99a2-49ac-93c9-f4ddd0b9d15a	160
164	uri://ed-fi.org/SectionCharacteristicDescriptor	Graded Credit Available	Graded Credit Available	Graded Credit Available	\N	\N	\N	\N	2023-11-08 13:57:30.538722	2023-11-08 13:57:30.536989	d1689408-75c3-4383-96fe-1b604bd21b49	164
167	uri://ed-fi.org/TermDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	\N	2023-11-08 13:57:30.550228	2023-11-08 13:57:30.550184	20849fdc-21df-48c9-8dd4-e4c6d5c9137c	167
173	uri://ed-fi.org/TermDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	\N	2023-11-08 13:57:30.559412	2023-11-08 13:57:30.559358	a38de057-3074-4784-8079-0e33ce986021	173
179	uri://ed-fi.org/TermDescriptor	Year Round	Year Round	Year Round	\N	\N	\N	\N	2023-11-08 13:57:30.57354	2023-11-08 13:57:30.573509	11685c34-a369-4d7c-b5a2-de232373a298	179
181	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Available	Not Available	The student cannot access the internet in their primary place of residence because internet service is not available.	\N	\N	\N	\N	2023-11-08 13:57:30.607381	2023-11-08 13:57:30.606405	aa5856e1-b6aa-4a90-94ed-a375a4592ff7	181
185	uri://ed-fi.org/LicenseStatusDescriptor	Regulated	Regulated	Regulated	\N	\N	\N	\N	2023-11-08 13:57:30.646244	2023-11-08 13:57:30.645127	6b43af21-0bfc-4328-8186-234d5b6c18bf	185
190	uri://ed-fi.org/IncidentLocationDescriptor	Auditorium	Auditorium	Auditorium	\N	\N	\N	\N	2023-11-08 13:57:30.657108	2023-11-08 13:57:30.65705	a13be1c5-5e88-4e17-a401-707d02c1c999	190
193	uri://ed-fi.org/IncidentLocationDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-11-08 13:57:30.663389	2023-11-08 13:57:30.663354	54da25d4-b157-48b3-a0b7-bab89f91e3e6	193
200	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	\N	\N	\N	\N	2023-11-08 13:57:30.677384	2023-11-08 13:57:30.677346	203bcb08-f160-4d45-bba8-c452a2003205	200
205	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other outside area	On-campus other outside area	On-campus other outside area	\N	\N	\N	\N	2023-11-08 13:57:30.687359	2023-11-08 13:57:30.687341	ffd74224-d7e1-4e21-bf49-0d21d0efe4b6	205
214	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Mixed Effects	Mixed Effects	Mixed Effects	\N	\N	\N	\N	2023-11-08 13:57:30.733874	2023-11-08 13:57:30.732856	9011dee6-91a8-4a97-bdf8-95d1061efcc4	214
217	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Positive Effects	Potentially Positive Effects	Potentially Positive Effects	\N	\N	\N	\N	2023-11-08 13:57:30.743139	2023-11-08 13:57:30.743082	2d346b92-6e47-4aaf-aaf9-ac247ef1a8d6	217
221	uri://ed-fi.org/IDEAPartDescriptor	IDEA Part C	IDEA Part C	IDEA Part C	\N	\N	\N	\N	2023-11-08 13:57:30.772576	2023-11-08 13:57:30.771439	c07a7c8c-8177-4d06-8aee-2a5dc8279e7e	221
222	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	District	District	District	\N	\N	\N	\N	2023-11-08 13:57:30.781741	2023-11-08 13:57:30.780419	725b9399-b7e5-4cbd-970e-028f13f45efc	222
228	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Test Contractor	Test Contractor	Test Contractor	\N	\N	\N	\N	2023-11-08 13:57:30.791611	2023-11-08 13:57:30.791572	538d9d6e-ddb3-4a0d-92fe-109655fb44d9	228
231	uri://ed-fi.org/SurveyCategoryDescriptor	Community	Community	Community	\N	\N	\N	\N	2023-11-08 13:57:30.826069	2023-11-08 13:57:30.825053	729bcf1d-81d2-496e-a552-516b84186009	231
235	uri://ed-fi.org/SurveyCategoryDescriptor	Exit	Exit	Exiting staff	\N	\N	\N	\N	2023-11-08 13:57:30.83526	2023-11-08 13:57:30.835214	e8f801b0-441e-4a78-b4d4-e3c7ee8ff34c	235
241	uri://ed-fi.org/SourceSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:30.872988	2023-11-08 13:57:30.872062	495020e5-1124-4a1b-8879-dd82e120f7a6	241
247	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Tablet	Tablet	A Tablet is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-11-08 13:57:30.90924	2023-11-08 13:57:30.908233	00fbdd3b-60a9-4cd3-a1fb-0883a5e4b2f6	247
251	uri://ed-fi.org/CourseAttemptResultDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	\N	2023-11-08 13:57:30.950692	2023-11-08 13:57:30.949633	fb897128-b2f3-4cd4-9d4d-6d41ccb52660	251
258	uri://ed-fi.org/EventCircumstanceDescriptor	Cheating	Cheating	Cheating	\N	\N	\N	\N	2023-11-08 13:57:30.988759	2023-11-08 13:57:30.987648	01249b6e-560a-418b-908e-2681031b92cc	258
261	uri://ed-fi.org/EventCircumstanceDescriptor	Foreign exchange student	Foreign exchange student	Foreign exchange student	\N	\N	\N	\N	2023-11-08 13:57:30.999356	2023-11-08 13:57:30.999317	81056621-c476-481e-862a-2f7d5f46dc5b	261
151	uri://ed-fi.org/CalendarEventDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:30.407634	2023-11-08 13:57:30.407598	1b65bbb8-1aa5-41d3-84ce-2c0eb20baaf0	151
155	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 1	Emergency 1	Emergency 1	\N	\N	\N	\N	2023-11-08 13:57:30.483763	2023-11-08 13:57:30.478847	77b458e2-1963-42fa-82b5-b4d84cf67a3d	155
162	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Mobile	Mobile	Mobile	\N	\N	\N	\N	2023-11-08 13:57:30.496823	2023-11-08 13:57:30.496802	4854ca13-4fea-4c18-a0b2-71903638a669	162
166	uri://ed-fi.org/TermDescriptor	Semester	Semester	Semester	\N	\N	\N	\N	2023-11-08 13:57:30.541319	2023-11-08 13:57:30.540844	dc9a0a67-fcd4-47e6-bd6f-ac0d6f71e96a	166
169	uri://ed-fi.org/TermDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	\N	2023-11-08 13:57:30.551558	2023-11-08 13:57:30.551541	686acb38-2402-4b34-b0d1-62da6e1a23a9	169
174	uri://ed-fi.org/TermDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	\N	2023-11-08 13:57:30.560934	2023-11-08 13:57:30.560906	7fa32b4a-8eda-42c3-be49-1523f7db8cf3	174
176	uri://ed-fi.org/TermDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	\N	2023-11-08 13:57:30.568276	2023-11-08 13:57:30.568246	0a278b20-a566-4a77-bfbc-45490c6dcc83	176
184	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Desired	Not Desired	The student cannot access the internet in their primary place of residence because the parent or guardian chooses not to subscribe to internet service.	\N	\N	\N	\N	2023-11-08 13:57:30.607971	2023-11-08 13:57:30.606413	b950ae26-86b6-4ba7-9a4e-95da82dc0184	184
186	uri://ed-fi.org/LicenseStatusDescriptor	Unregulated	Unregulated	Unregulated	\N	\N	\N	\N	2023-11-08 13:57:30.646367	2023-11-08 13:57:30.645128	33199a75-9fd7-4b67-9e56-30dc5b4c5853	186
191	uri://ed-fi.org/IncidentLocationDescriptor	Athletic field or playground	Athletic field or playground	Athletic field or playground	\N	\N	\N	\N	2023-11-08 13:57:30.657926	2023-11-08 13:57:30.65791	2e4acef4-8fcb-4ac7-8ad0-4ae53a4fc2a9	191
198	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	\N	\N	\N	\N	2023-11-08 13:57:30.672831	2023-11-08 13:57:30.672817	91cdf2a3-027e-4963-938d-b1114329575b	198
199	uri://ed-fi.org/IncidentLocationDescriptor	Off campus	Off campus	Off campus	\N	\N	\N	\N	2023-11-08 13:57:30.676678	2023-11-08 13:57:30.676646	93bd308f-6359-48dc-abc7-955fa3042a9c	199
202	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school district facility	Off-campus at other school district facility	Off-campus at other school district facility	\N	\N	\N	\N	2023-11-08 13:57:30.680427	2023-11-08 13:57:30.680412	1c5ab810-b75b-4ac3-aab7-496cc5d9bda5	202
206	uri://ed-fi.org/IncidentLocationDescriptor	Restroom	Restroom	Restroom	\N	\N	\N	\N	2023-11-08 13:57:30.690998	2023-11-08 13:57:30.690978	cb15954f-697c-43b1-b717-0019f25affcb	206
209	uri://ed-fi.org/IncidentLocationDescriptor	School bus	School bus	School bus	\N	\N	\N	\N	2023-11-08 13:57:30.696345	2023-11-08 13:57:30.696295	7f52edd0-3da2-4be8-9f58-38d2628ddf5b	209
212	uri://ed-fi.org/IncidentLocationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-11-08 13:57:30.70095	2023-11-08 13:57:30.70093	1301397f-f793-4fc1-ba42-363267f8bd91	212
216	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Negative Effects	Negative Effects	Negative Effects	\N	\N	\N	\N	2023-11-08 13:57:30.73603	2023-11-08 13:57:30.736016	0484374c-326f-48e5-a9d2-7d766473516e	216
218	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Positive Effects	Positive Effects	Positive Effects	\N	\N	\N	\N	2023-11-08 13:57:30.744116	2023-11-08 13:57:30.74408	395159e1-739a-49bd-a44f-f74e98dd48e0	218
224	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	\N	2023-11-08 13:57:30.78271	2023-11-08 13:57:30.782678	a37449fb-d82b-4587-936c-ef7d50fc7cb2	224
227	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	State	State	State	\N	\N	\N	\N	2023-11-08 13:57:30.791389	2023-11-08 13:57:30.791325	5ac12fdb-fb26-4268-a279-f1c11e050109	227
229	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	National	National	National	\N	\N	\N	\N	2023-11-08 13:57:30.795493	2023-11-08 13:57:30.795454	0da96adf-6d41-4621-8b0e-c7df86a2bc24	229
230	uri://ed-fi.org/SurveyCategoryDescriptor	Applicant	Applicant	Applicant	\N	\N	\N	\N	2023-11-08 13:57:30.8261	2023-11-08 13:57:30.82508	050bcd2a-1aea-41f2-aa40-931f6da18eb1	230
234	uri://ed-fi.org/SurveyCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:30.834386	2023-11-08 13:57:30.834361	c5ed2762-24eb-434a-a79c-92f5b22c1020	234
239	uri://ed-fi.org/SurveyCategoryDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	\N	2023-11-08 13:57:30.842065	2023-11-08 13:57:30.842035	16d647a6-8bd6-4c65-a0fd-4a17987a92d4	239
240	uri://ed-fi.org/SourceSystemDescriptor	State	State	State	\N	\N	\N	\N	2023-11-08 13:57:30.872993	2023-11-08 13:57:30.872035	bb6ee494-4655-479c-b07d-a419995c1817	240
246	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Chromebook	Chromebook	A Chromebook is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-11-08 13:57:30.909302	2023-11-08 13:57:30.908255	26ed4a28-fd2c-4c46-8771-fab153d1b3b1	246
248	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	None	None	There is not a device the student uses to complete learning activities away from school.	\N	\N	\N	\N	2023-11-08 13:57:30.918167	2023-11-08 13:57:30.918146	31fcd6a2-5a70-486e-9630-e001247b1007	248
250	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Other	Other	The type of device the student uses most often to complete learning activities away from school is not yet defined.	\N	\N	\N	\N	2023-11-08 13:57:30.924751	2023-11-08 13:57:30.924713	57c2a2b1-a048-45ff-9502-b9014ce349a1	250
253	uri://ed-fi.org/CourseAttemptResultDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-11-08 13:57:30.950919	2023-11-08 13:57:30.949637	504de808-6e67-437c-9c47-94f71bbcc548	253
255	uri://ed-fi.org/EventCircumstanceDescriptor	Chronic absences	Chronic absences	Chronic absences	\N	\N	\N	\N	2023-11-08 13:57:30.988608	2023-11-08 13:57:30.987655	e8028fae-b5d4-4cad-953b-c34864dd708a	255
262	uri://ed-fi.org/EventCircumstanceDescriptor	Fire alarm	Fire alarm	Fire alarm	\N	\N	\N	\N	2023-11-08 13:57:31.000616	2023-11-08 13:57:31.000586	24e9bafe-aaab-40d3-b07c-54a5d53988d0	262
266	uri://ed-fi.org/EventCircumstanceDescriptor	Home schooled for assessed subjects	Home schooled for assessed subjects	Home schooled for assessed subjects	\N	\N	\N	\N	2023-11-08 13:57:31.007949	2023-11-08 13:57:31.007932	5e6c1471-49a9-4e40-8634-4f900b440ed9	266
267	uri://ed-fi.org/EventCircumstanceDescriptor	Long-term suspension - non-special education	Long-term suspension - non-special education	Long-term suspension - non-special education	\N	\N	\N	\N	2023-11-08 13:57:31.014822	2023-11-08 13:57:31.014785	384b4e58-802c-4ef3-a72d-51ce93fda187	267
203	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other inside area	On-campus other inside area	On-campus other inside area	\N	\N	\N	\N	2023-11-08 13:57:30.683454	2023-11-08 13:57:30.683413	2fc620a1-6b92-4d6c-9b32-506b1df249da	203
208	uri://ed-fi.org/IncidentLocationDescriptor	Online	Online	Online	\N	\N	\N	\N	2023-11-08 13:57:30.690819	2023-11-08 13:57:30.690787	042f2f71-242b-4245-9097-8737f517abc9	208
210	uri://ed-fi.org/IncidentLocationDescriptor	Stadium	Stadium	Stadium	\N	\N	\N	\N	2023-11-08 13:57:30.696854	2023-11-08 13:57:30.696823	63defc9c-d968-4643-a166-fce74a71bba2	210
215	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	No Discernible Effects	No Discernible Effects	No Discernible Effects	\N	\N	\N	\N	2023-11-08 13:57:30.734047	2023-11-08 13:57:30.732854	e0dfa32e-4ce5-4f67-9551-cdb78753eb97	215
219	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Negative Effects	Potentially Negative Effects	Potentially Negative Effects	\N	\N	\N	\N	2023-11-08 13:57:30.745023	2023-11-08 13:57:30.744981	90a67cb4-cb80-4194-b273-b5a9066510ae	219
225	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:30.782223	2023-11-08 13:57:30.782209	82ada62d-4cba-4c84-9c85-20b8066f7aac	225
226	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:30.79042	2023-11-08 13:57:30.790396	001c56cc-2d7c-4abd-a0a7-2af748fd0c72	226
233	uri://ed-fi.org/SurveyCategoryDescriptor	Administrator	Administrator	Administrator	\N	\N	\N	\N	2023-11-08 13:57:30.826514	2023-11-08 13:57:30.825077	39117f6b-67e9-46da-9ef3-a7922cb368eb	233
237	uri://ed-fi.org/SurveyCategoryDescriptor	Parent	Parent	Parent	\N	\N	\N	\N	2023-11-08 13:57:30.835957	2023-11-08 13:57:30.835898	5d6ca259-6b52-43d0-a804-665a650e6951	237
243	uri://ed-fi.org/SourceSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-11-08 13:57:30.873001	2023-11-08 13:57:30.872055	b4ba4e44-0947-4f2a-b702-f108d7764ed2	243
245	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Laptop Computer	Laptop Computer	A Laptop Computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-11-08 13:57:30.909287	2023-11-08 13:57:30.908224	56b04388-f8b3-4c35-ac75-74e5022834fc	245
252	uri://ed-fi.org/CourseAttemptResultDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-11-08 13:57:30.950654	2023-11-08 13:57:30.94961	7a7472d3-fd8f-4dd1-bd55-e2760a8657cb	252
256	uri://ed-fi.org/EventCircumstanceDescriptor	Catastrophic illness or accident	Catastrophic illness or accident	Catastrophic illness or accident	\N	\N	\N	\N	2023-11-08 13:57:30.988622	2023-11-08 13:57:30.98767	bf2c024a-f784-41f2-9753-ac283e82247c	256
259	uri://ed-fi.org/EventCircumstanceDescriptor	Earlier truancy	Earlier truancy	Earlier truancy	\N	\N	\N	\N	2023-11-08 13:57:30.998403	2023-11-08 13:57:30.998382	a6826dc8-e282-42d3-b16d-c3806176934e	259
263	uri://ed-fi.org/EventCircumstanceDescriptor	Incarcerated at adult facility	Incarcerated at adult facility	Incarcerated at adult facility	\N	\N	\N	\N	2023-11-08 13:57:31.006494	2023-11-08 13:57:31.006477	6ee31096-86c6-40af-9506-78bfc5f8200f	263
270	uri://ed-fi.org/EventCircumstanceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:31.016986	2023-11-08 13:57:31.016936	781bc3bf-2ad7-4d3f-b90e-c61728cd9cbf	270
272	uri://ed-fi.org/EventCircumstanceDescriptor	Psychological factors of emotional trauma	Psychological factors of emotional trauma	Psychological factors of emotional trauma	\N	\N	\N	\N	2023-11-08 13:57:31.023215	2023-11-08 13:57:31.023159	b8fcee5d-cf66-439d-9d8a-8f8b4443b618	272
278	uri://ed-fi.org/EventCircumstanceDescriptor	Special treatment center	Special treatment center	Special treatment center	\N	\N	\N	\N	2023-11-08 13:57:31.03573	2023-11-08 13:57:31.035676	1453bb38-a45e-402a-9370-5d1d642ee3e5	278
282	uri://ed-fi.org/EventCircumstanceDescriptor	Student used math journal (non-IEP)	Student used math journal (non-IEP)	Student used math journal (non-IEP)	\N	\N	\N	\N	2023-11-08 13:57:31.045134	2023-11-08 13:57:31.045105	d0a27690-2b0c-41ab-8e27-bf6312e892ec	282
288	uri://ed-fi.org/SubmissionStatusDescriptor	Graded	Graded	Assignment has been graded by the teacher.	\N	\N	\N	\N	2023-11-08 13:57:31.083889	2023-11-08 13:57:31.082643	5d2f7b93-f7cc-4104-936b-7a468bb8d820	288
292	uri://ed-fi.org/DeliveryMethodDescriptor	Small Group	Small Group	Small Group	\N	\N	\N	\N	2023-11-08 13:57:31.121718	2023-11-08 13:57:31.12074	1565ec20-868f-4870-9734-5ce9d528ffae	292
299	uri://ed-fi.org/AdministrationEnvironmentDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:31.159071	2023-11-08 13:57:31.157754	4ad50312-8fb9-4faf-9863-503498ae6f7d	299
301	uri://ed-fi.org/GraduationPlanTypeDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	\N	2023-11-08 13:57:31.194432	2023-11-08 13:57:31.193298	3d3ab63e-eb97-411f-9752-35933c2b1bda	301
304	uri://ed-fi.org/GraduationPlanTypeDescriptor	Standard	Standard	Standard	\N	\N	\N	\N	2023-11-08 13:57:31.20491	2023-11-08 13:57:31.204868	b51c57b9-dd0c-4f8d-a5e5-601f49e7c4d4	304
306	uri://ed-fi.org/EducationalEnvironmentDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	\N	2023-11-08 13:57:31.231145	2023-11-08 13:57:31.229994	bf3508aa-c559-4871-8e79-6fabba55a718	306
310	uri://ed-fi.org/EducationalEnvironmentDescriptor	Mainstream (Special Education)	Mainstream (Special Education)	Mainstream (Special Education)	\N	\N	\N	\N	2023-11-08 13:57:31.23976	2023-11-08 13:57:31.239109	f4f1796a-97d0-410c-ad9b-00bea295e63e	310
313	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-contained (Special Education)	Self-contained (Special Education)	Self-contained (Special Education)	\N	\N	\N	\N	2023-11-08 13:57:31.24658	2023-11-08 13:57:31.246383	4508de0a-7c99-43b0-8e04-d6e4107902e0	313
320	uri://ed-fi.org/GradeLevelDescriptor	Preschool	Preschool	Preschool	\N	\N	\N	\N	2023-11-08 13:57:31.285516	2023-11-08 13:57:31.284441	64265367-0b69-42ca-aae1-02b287e186a0	320
324	uri://ed-fi.org/GradeLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	\N	2023-11-08 13:57:31.294934	2023-11-08 13:57:31.294919	91f1f5df-a77d-43a2-a717-5e8876571561	324
327	uri://ed-fi.org/GradeLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	\N	2023-11-08 13:57:31.301912	2023-11-08 13:57:31.301869	6b35e75a-f8a7-4d13-a7f6-55d2f2a19ce7	327
332	uri://ed-fi.org/GradeLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	\N	2023-11-08 13:57:31.311372	2023-11-08 13:57:31.311215	bb305485-d01e-4c4a-8d09-a6b7b0a69085	332
337	uri://ed-fi.org/GradeLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	\N	2023-11-08 13:57:31.321179	2023-11-08 13:57:31.321137	3ec66804-614c-4300-a57a-469cf0785074	337
341	uri://ed-fi.org/GradeLevelDescriptor	Early Education	DEPRECATED: Early Education	DEPRECATED: Early Education	\N	\N	\N	\N	2023-11-08 13:57:31.328168	2023-11-08 13:57:31.328139	9daa2930-658d-43a8-98ca-5bb71e884b87	341
211	uri://ed-fi.org/IncidentLocationDescriptor	Walking to or from school	Walking to or from school	Walking to or from school	\N	\N	\N	\N	2023-11-08 13:57:30.699952	2023-11-08 13:57:30.699936	d64fd197-bb78-4440-935c-3c525591032c	211
213	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:30.733883	2023-11-08 13:57:30.732842	01339867-9353-477e-9466-55f777eb080d	213
220	uri://ed-fi.org/IDEAPartDescriptor	IDEA Part B	IDEA Part B	IDEA Part B	\N	\N	\N	\N	2023-11-08 13:57:30.772414	2023-11-08 13:57:30.771442	aa13e57c-4dca-4057-8bd2-69b347a47de9	220
223	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-11-08 13:57:30.781942	2023-11-08 13:57:30.780443	c4e19dc2-432e-4efd-9016-daf7606ea3c1	223
232	uri://ed-fi.org/SurveyCategoryDescriptor	District	District	District	\N	\N	\N	\N	2023-11-08 13:57:30.826083	2023-11-08 13:57:30.82506	109a2894-a019-413e-8491-c89f5990f246	232
236	uri://ed-fi.org/SurveyCategoryDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-11-08 13:57:30.835409	2023-11-08 13:57:30.835393	fd6e4bb9-1001-4bbf-b7d7-a09abf519407	236
238	uri://ed-fi.org/SurveyCategoryDescriptor	Student	Student	Student	\N	\N	\N	\N	2023-11-08 13:57:30.841733	2023-11-08 13:57:30.841702	a3b1bbbd-735d-4663-aea4-0eb8fc870ef4	238
242	uri://ed-fi.org/SourceSystemDescriptor	District	District	District	\N	\N	\N	\N	2023-11-08 13:57:30.873008	2023-11-08 13:57:30.872027	93fd8bc3-8aa0-4055-87a1-81eb28d0d56e	242
244	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Desktop Computer	Desktop Computer	A desktop computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-11-08 13:57:30.909249	2023-11-08 13:57:30.908239	8e8ec421-d882-405e-ab39-84ed2d05d888	244
249	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Smartphone	Smartphone	A Smartphone is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	\N	2023-11-08 13:57:30.919815	2023-11-08 13:57:30.919746	095726b2-9933-4d9d-bf60-ca22fec5ec75	249
254	uri://ed-fi.org/CourseAttemptResultDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	\N	2023-11-08 13:57:30.95068	2023-11-08 13:57:30.949616	313ebfe6-488e-4eb4-84eb-5211c78babee	254
257	uri://ed-fi.org/EventCircumstanceDescriptor	Administration or system failure	Administration or system failure	Administration or system failure	\N	\N	\N	\N	2023-11-08 13:57:30.988753	2023-11-08 13:57:30.987676	0814211c-26de-4323-ae37-e20d566d688d	257
260	uri://ed-fi.org/EventCircumstanceDescriptor	Cross-enrolled	Cross-enrolled	Cross-enrolled	\N	\N	\N	\N	2023-11-08 13:57:30.998568	2023-11-08 13:57:30.998536	0aa34fcc-619a-49c7-9424-06b20df8234a	260
264	uri://ed-fi.org/EventCircumstanceDescriptor	Left testing	Left testing	Left testing	\N	\N	\N	\N	2023-11-08 13:57:31.006999	2023-11-08 13:57:31.006976	f45db1eb-615c-4839-b033-bc722b3cabcd	264
268	uri://ed-fi.org/EventCircumstanceDescriptor	Non-special ed student used calculator	Non-special education student used calculator on non-calculator items	Non-special education student used calculator on non-calculator items	\N	\N	\N	\N	2023-11-08 13:57:31.015307	2023-11-08 13:57:31.015258	66eadc3d-7817-4d02-968b-c4afc0d0a613	268
274	uri://ed-fi.org/EventCircumstanceDescriptor	Short-term suspension - non-special education	Short-term suspension - non-special education	Short-term suspension - non-special education	\N	\N	\N	\N	2023-11-08 13:57:31.028799	2023-11-08 13:57:31.028755	e3c3e0b4-8e9b-4d90-93f5-5709c76a079e	274
280	uri://ed-fi.org/EventCircumstanceDescriptor	Student refusal	Student refusal	Student refusal	\N	\N	\N	\N	2023-11-08 13:57:31.038876	2023-11-08 13:57:31.038396	7a2f6083-094f-4a4a-ae3c-edb4351ab124	280
284	uri://ed-fi.org/EventCircumstanceDescriptor	Suspension - special education	Suspension - special education	Suspension - special education	\N	\N	\N	\N	2023-11-08 13:57:31.045772	2023-11-08 13:57:31.045733	f37d62a2-f9ce-4b7b-91a7-e04c1985cc6c	284
287	uri://ed-fi.org/SubmissionStatusDescriptor	Exempt	Exempt	The student is exempted from the assignment and the assignment's score will not affect the student's grade calculations.	\N	\N	\N	\N	2023-11-08 13:57:31.083627	2023-11-08 13:57:31.082657	2ef43209-ecf0-467c-bfef-8675cd97f2d1	287
291	uri://ed-fi.org/SubmissionStatusDescriptor	Submitted	Submitted	The assignment has been submitted by the student but has not been graded.	\N	\N	\N	\N	2023-11-08 13:57:31.09247	2023-11-08 13:57:31.092418	91bd2904-8678-4328-b912-0a4221c5b439	291
294	uri://ed-fi.org/DeliveryMethodDescriptor	Individual	Individual	Individual	\N	\N	\N	\N	2023-11-08 13:57:31.122028	2023-11-08 13:57:31.12072	37ea85ef-c304-47cf-9eea-0271fdaad7ab	294
298	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-11-08 13:57:31.159051	2023-11-08 13:57:31.157747	a0303864-28b4-4087-9f6a-88a88e08e1a1	298
300	uri://ed-fi.org/GraduationPlanTypeDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	\N	2023-11-08 13:57:31.194286	2023-11-08 13:57:31.193301	89128656-a3e1-4755-a74c-c153f9ce548e	300
307	uri://ed-fi.org/EducationalEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-11-08 13:57:31.231203	2023-11-08 13:57:31.229972	3bbeb8a6-ddcd-41ed-97b5-9926317d1292	307
311	uri://ed-fi.org/EducationalEnvironmentDescriptor	Pull-out class	Pull-out class	Pull-out class	\N	\N	\N	\N	2023-11-08 13:57:31.239916	2023-11-08 13:57:31.239889	9645e71a-0e47-4d77-b42e-d78b534dd3f8	311
316	uri://ed-fi.org/EducationalEnvironmentDescriptor	Shop	Shop	Shop	\N	\N	\N	\N	2023-11-08 13:57:31.24892	2023-11-08 13:57:31.248907	df811bec-3eb2-4045-aa61-54a95c60d1d3	316
321	uri://ed-fi.org/GradeLevelDescriptor	Transitional Kindergarten	Transitional Kindergarten	Transitional Kindergarten	\N	\N	\N	\N	2023-11-08 13:57:31.285569	2023-11-08 13:57:31.284458	2ff2ff34-f6ae-4db9-a2c3-669c38928778	321
322	uri://ed-fi.org/GradeLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	\N	2023-11-08 13:57:31.293973	2023-11-08 13:57:31.293873	a06cd3e6-d9b9-4323-8c88-51d112ca3da3	322
326	uri://ed-fi.org/GradeLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	\N	2023-11-08 13:57:31.301079	2023-11-08 13:57:31.300963	d4012b88-78f5-4126-8a57-562f2364f4c9	326
331	uri://ed-fi.org/GradeLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	\N	2023-11-08 13:57:31.307626	2023-11-08 13:57:31.307595	37c2d643-4076-43b7-8881-671ce80be84b	331
336	uri://ed-fi.org/GradeLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	\N	2023-11-08 13:57:31.31876	2023-11-08 13:57:31.31873	57be23cf-87d7-4f81-ac0c-a1f0d29d84cc	336
338	uri://ed-fi.org/GradeLevelDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:31.323569	2023-11-08 13:57:31.323539	17e6c384-1cd5-4080-a475-c6da2c50cc4a	338
342	uri://ed-fi.org/GradeLevelDescriptor	No grade level	DEPRECATED: No grade level	DEPRECATED: No grade level	\N	\N	\N	\N	2023-11-08 13:57:31.332581	2023-11-08 13:57:31.332499	4174b79e-2b68-4d78-8c18-830a1eae8bbe	342
265	uri://ed-fi.org/EventCircumstanceDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	\N	2023-11-08 13:57:31.007723	2023-11-08 13:57:31.007674	962bdeb1-6d9b-4c9f-8436-59565ab2e634	265
269	uri://ed-fi.org/EventCircumstanceDescriptor	Only for writing	Only for writing	Only for writing	\N	\N	\N	\N	2023-11-08 13:57:31.016317	2023-11-08 13:57:31.016286	5ac03cfa-ec96-42d1-b67d-515387af9202	269
273	uri://ed-fi.org/EventCircumstanceDescriptor	Parent refusal	Parent refusal	Parent refusal	\N	\N	\N	\N	2023-11-08 13:57:31.023454	2023-11-08 13:57:31.023425	32e9e74c-0ae6-4698-8b34-0fe4a5cd6591	273
275	uri://ed-fi.org/EventCircumstanceDescriptor	Special detention center	Special detention center	Special detention center	\N	\N	\N	\N	2023-11-08 13:57:31.029156	2023-11-08 13:57:31.029127	70450f20-b39e-4337-8460-38db62c6b653	275
277	uri://ed-fi.org/EventCircumstanceDescriptor	Reading passage read to student (IEP)	Reading passage read to student (IEP)	Reading passage read to student (IEP)	\N	\N	\N	\N	2023-11-08 13:57:31.033375	2023-11-08 13:57:31.033343	d30a4ba9-d559-4267-b754-0ac1fcc7e3a8	277
279	uri://ed-fi.org/EventCircumstanceDescriptor	Student not showing adequate effort	Student not showing adequate effort	Student not showing adequate effort	\N	\N	\N	\N	2023-11-08 13:57:31.036582	2023-11-08 13:57:31.036567	85ba9403-c477-40ca-95f6-097fef1ef50b	279
281	uri://ed-fi.org/EventCircumstanceDescriptor	Student took this grade level assessment last year	Student took this grade level assessment last year	Student took this grade level assessment last year	\N	\N	\N	\N	2023-11-08 13:57:31.040893	2023-11-08 13:57:31.040863	6d3bda9e-712d-427e-b8c9-e4cb0e6d173b	281
283	uri://ed-fi.org/EventCircumstanceDescriptor	Teacher cheating or mis-admin	Teacher cheating or mis-admin	Teacher cheating or mis-admin	\N	\N	\N	\N	2023-11-08 13:57:31.045189	2023-11-08 13:57:31.044952	8a06de78-1d44-481a-be25-0446f1f78d39	283
285	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - no paperwork filed	Truancy - no paperwork filed	Truancy - no paperwork filed	\N	\N	\N	\N	2023-11-08 13:57:31.049106	2023-11-08 13:57:31.049077	6c808135-db9d-4f7e-be44-a5140e99f3c7	285
290	uri://ed-fi.org/SubmissionStatusDescriptor	Returned	Returned	Assignment is returned by the teacher or reclaimed by the student for revision. Assignment needs to be submitted again after revisions have been made.	\N	\N	\N	\N	2023-11-08 13:57:31.084018	2023-11-08 13:57:31.082648	9343a320-5dc8-4c6e-bf1f-d48200375aac	290
295	uri://ed-fi.org/DeliveryMethodDescriptor	Whole School	Whole School	Whole School	\N	\N	\N	\N	2023-11-08 13:57:31.1219	2023-11-08 13:57:31.120717	e3fa0481-5777-4d30-a2a7-4094fc20d504	295
296	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Testing Center	Testing Center	Testing Center	\N	\N	\N	\N	2023-11-08 13:57:31.158729	2023-11-08 13:57:31.157772	56185700-22fa-4638-bbc5-908273b67aef	296
303	uri://ed-fi.org/GraduationPlanTypeDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	\N	2023-11-08 13:57:31.194481	2023-11-08 13:57:31.193323	57012eaa-7640-4880-a0a1-459165848ca4	303
305	uri://ed-fi.org/EducationalEnvironmentDescriptor	In-school suspension	In-school suspension	In-school suspension	\N	\N	\N	\N	2023-11-08 13:57:31.230919	2023-11-08 13:57:31.229963	c262f357-ab3a-4c24-ae9e-be97f0bf3199	305
312	uri://ed-fi.org/EducationalEnvironmentDescriptor	Off-school center	Off-school center	Off-school center	\N	\N	\N	\N	2023-11-08 13:57:31.240164	2023-11-08 13:57:31.24015	cfb05563-56a9-4a43-b2ec-ba3e8cc171f4	312
315	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-study	Self-study	Self-study	\N	\N	\N	\N	2023-11-08 13:57:31.248556	2023-11-08 13:57:31.248524	08982b69-fb62-4efc-817e-148a17c1f635	315
317	uri://ed-fi.org/EducationalEnvironmentDescriptor	Single sex classroom	Single sex classroom	Single sex classroom	\N	\N	\N	\N	2023-11-08 13:57:31.252541	2023-11-08 13:57:31.252513	70dfd0fe-aa17-49b9-a380-ec4701080874	317
319	uri://ed-fi.org/GradeLevelDescriptor	Prekindergarten	Prekindergarten	Prekindergarten	\N	\N	\N	\N	2023-11-08 13:57:31.285514	2023-11-08 13:57:31.284455	d8b514ed-8fc2-45a4-bb44-5ab08e67069a	319
325	uri://ed-fi.org/GradeLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	\N	2023-11-08 13:57:31.29581	2023-11-08 13:57:31.295727	43f9e967-b296-4f0a-9780-0065d3caa6f3	325
328	uri://ed-fi.org/GradeLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	\N	2023-11-08 13:57:31.30471	2023-11-08 13:57:31.304669	ba155323-a415-4e22-b6ab-fa4ac0480e35	328
333	uri://ed-fi.org/GradeLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	\N	2023-11-08 13:57:31.312982	2023-11-08 13:57:31.312944	c3c2c84b-36f7-4973-83aa-0543d4541ceb	333
335	uri://ed-fi.org/GradeLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	\N	2023-11-08 13:57:31.317702	2023-11-08 13:57:31.317477	2578391e-383c-4cf2-95b8-f6a24cf13ccf	335
339	uri://ed-fi.org/GradeLevelDescriptor	Out of School	Out of School	Out of School	\N	\N	\N	\N	2023-11-08 13:57:31.32579	2023-11-08 13:57:31.325752	2842495c-9bff-4b45-8b26-200bc12a013e	339
343	uri://ed-fi.org/GradeLevelDescriptor	Adult Education	DEPRECATED: Adult Education	DEPRECATED: Adult Education	\N	\N	\N	\N	2023-11-08 13:57:31.34023	2023-11-08 13:57:31.340198	537e226a-e126-4292-9b94-e344edee0c15	343
345	uri://ed-fi.org/SexDescriptor	Non-binary	Non-binary	Non-binary	\N	\N	\N	\N	2023-11-08 13:57:31.365251	2023-11-08 13:57:31.364048	e16fdf26-bae5-4a88-a6a9-cebac2c08101	345
353	uri://ed-fi.org/EmploymentStatusDescriptor	Non-contractual	Non-contractual	Non-contractual	\N	\N	\N	\N	2023-11-08 13:57:31.412404	2023-11-08 13:57:31.41239	1265b6f1-dced-4a55-a7ad-6fcab715f6d3	353
361	uri://ed-fi.org/CourseDefinedByDescriptor	LEA	LEA	LEA	\N	\N	\N	\N	2023-11-08 13:57:31.455341	2023-11-08 13:57:31.454336	0620014b-b489-450e-9d68-8b26f565a23f	361
363	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Federal operated agency	Federal operated agency	Federal operated agency	\N	\N	\N	\N	2023-11-08 13:57:31.494577	2023-11-08 13:57:31.493564	fe2682b8-fb5a-4f98-b179-18dcc1f20767	363
370	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Charter	DEPRECATED: Charter	DEPRECATED: Charter	\N	\N	\N	\N	2023-11-08 13:57:31.519539	2023-11-08 13:57:31.519508	96f9d721-a324-41a5-8605-96a65d42e831	370
372	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent	DEPRECATED: Independent	DEPRECATED: Independent	\N	\N	\N	\N	2023-11-08 13:57:31.526572	2023-11-08 13:57:31.526516	4f33ecc7-c49b-4f63-b668-a532c12068d4	372
375	uri://ed-fi.org/CourseIdentificationSystemDescriptor	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	\N	\N	\N	\N	2023-11-08 13:57:31.561469	2023-11-08 13:57:31.560383	fe9d89b0-15ca-4b85-b77e-8e89533f6092	375
378	uri://ed-fi.org/CourseIdentificationSystemDescriptor	SCED course code	SCED course code	SCED course code	\N	\N	\N	\N	2023-11-08 13:57:31.5713	2023-11-08 13:57:31.571283	db2a8f8b-4556-47ce-9262-f6cbcb0f8557	378
271	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for ineligibility	Other reason for ineligibility	Other reason for ineligibility	\N	\N	\N	\N	2023-11-08 13:57:31.021963	2023-11-08 13:57:31.021898	9e8b2be2-6547-4d75-bb51-91d8ee944dba	271
276	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for nonparticipation	Other reason for nonparticipation	Other reason for nonparticipation	\N	\N	\N	\N	2023-11-08 13:57:31.029269	2023-11-08 13:57:31.029249	7e1c84ad-1c89-406f-8935-7b4ace7f21b7	276
286	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - paperwork filed	Truancy - paperwork filed	Truancy - paperwork filed	\N	\N	\N	\N	2023-11-08 13:57:31.05204	2023-11-08 13:57:31.051898	afb6efc5-c0f0-475a-801c-5e198658b4ee	286
289	uri://ed-fi.org/SubmissionStatusDescriptor	Not Submitted	Not Submitted	The assignment has not been submitted by the student/received by the teacher.	\N	\N	\N	\N	2023-11-08 13:57:31.083776	2023-11-08 13:57:31.082674	cafe1c75-2c92-47d5-a3b6-ea23aabe954a	289
293	uri://ed-fi.org/DeliveryMethodDescriptor	Whole Class	Whole Class	Whole Class	\N	\N	\N	\N	2023-11-08 13:57:31.122041	2023-11-08 13:57:31.120743	9c4cbe1f-a3a9-4cbc-9d86-8e2d17feb666	293
297	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Remote	Remote	Outside the school or district	\N	\N	\N	\N	2023-11-08 13:57:31.15887	2023-11-08 13:57:31.157775	ec60020e-8641-4d98-966c-bbdba6d06088	297
302	uri://ed-fi.org/GraduationPlanTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-11-08 13:57:31.194478	2023-11-08 13:57:31.19332	0525b4a3-48fa-4883-9a2c-d8fdf63b3df3	302
308	uri://ed-fi.org/EducationalEnvironmentDescriptor	Hospital class	Hospital class	Hospital class	\N	\N	\N	\N	2023-11-08 13:57:31.231122	2023-11-08 13:57:31.229979	37f23096-b439-4335-8ac7-b096b3291d68	308
309	uri://ed-fi.org/EducationalEnvironmentDescriptor	Laboratory	Laboratory	Laboratory	\N	\N	\N	\N	2023-11-08 13:57:31.239636	2023-11-08 13:57:31.239592	6307afb8-ed96-4d90-96c3-80e5bc361c7e	309
314	uri://ed-fi.org/EducationalEnvironmentDescriptor	Resource room	Resource room	Resource room	\N	\N	\N	\N	2023-11-08 13:57:31.246667	2023-11-08 13:57:31.246639	ab635818-3e9e-4f00-8785-d7c0333f2a81	314
318	uri://ed-fi.org/GradeLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	\N	2023-11-08 13:57:31.285413	2023-11-08 13:57:31.284434	cd032a79-94bf-41bf-9bd7-60162cc1f0f9	318
323	uri://ed-fi.org/GradeLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	\N	2023-11-08 13:57:31.29458	2023-11-08 13:57:31.29455	03536925-22f5-4411-b442-b19d3a751795	323
329	uri://ed-fi.org/GradeLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	\N	2023-11-08 13:57:31.305112	2023-11-08 13:57:31.305073	aa8b0697-9f6b-4fe1-ac77-213d3fc0e9bb	329
330	uri://ed-fi.org/GradeLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	\N	2023-11-08 13:57:31.309243	2023-11-08 13:57:31.309216	85b1edc6-f247-444b-9fe9-a1b1f8efb695	330
334	uri://ed-fi.org/GradeLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	\N	2023-11-08 13:57:31.315594	2023-11-08 13:57:31.315548	c4ba667b-083f-4926-9c2c-64aea5bdceff	334
340	uri://ed-fi.org/GradeLevelDescriptor	Preschool/Prekindergarten	DEPRECATED: Preschool/Prekindergarten	DEPRECATED: Preschool/Prekindergarten	\N	\N	\N	\N	2023-11-08 13:57:31.327171	2023-11-08 13:57:31.327027	24abf76a-18db-4300-9052-cb0de2d49acc	340
346	uri://ed-fi.org/SexDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	\N	2023-11-08 13:57:31.365249	2023-11-08 13:57:31.364061	ff4d9d33-fa23-4e0e-b4fb-867d6698c30d	346
352	uri://ed-fi.org/EmploymentStatusDescriptor	Employed part-time	Employed part-time	Employed part-time	\N	\N	\N	\N	2023-11-08 13:57:31.412033	2023-11-08 13:57:31.412002	bb1034ba-7a17-4b55-ac76-23b98267170c	352
355	uri://ed-fi.org/EmploymentStatusDescriptor	Tenured or permanent	Tenured or permanent	Tenured or permanent	\N	\N	\N	\N	2023-11-08 13:57:31.419176	2023-11-08 13:57:31.418751	0ae90977-0170-459f-b637-4ed15deb9acb	355
358	uri://ed-fi.org/CourseDefinedByDescriptor	SEA	SEA	SEA	\N	\N	\N	\N	2023-11-08 13:57:31.455324	2023-11-08 13:57:31.454344	f8f73aae-f68e-4251-879b-50c9d711adc9	358
362	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent charter district	Independent charter district	Independent charter district	\N	\N	\N	\N	2023-11-08 13:57:31.494589	2023-11-08 13:57:31.493588	b01cb92a-4055-4180-bf62-e3594661e901	362
368	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Specialized public school district	Specialized public school district	Specialized public school district	\N	\N	\N	\N	2023-11-08 13:57:31.516676	2023-11-08 13:57:31.516629	4d5d72a1-8c2c-4d43-a6bf-2faa7e49ca48	368
374	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Intermediate agency course code	Intermediate agency course code	Intermediate agency course code	\N	\N	\N	\N	2023-11-08 13:57:31.561559	2023-11-08 13:57:31.560393	6a1e98cf-ee9b-48a6-9cd2-c6e65f61b7d3	374
380	uri://ed-fi.org/CourseIdentificationSystemDescriptor	State course code	State course code	State course code	\N	\N	\N	\N	2023-11-08 13:57:31.572993	2023-11-08 13:57:31.572976	f3be4a52-9bf1-42b1-b338-2afeb4e424d8	380
384	uri://ed-fi.org/StudentCharacteristicDescriptor	Asylee	Asylee	Asylee	\N	\N	\N	\N	2023-11-08 13:57:31.611317	2023-11-08 13:57:31.61035	360fe1ab-0356-453a-9b6f-8d474170d9c0	384
389	uri://ed-fi.org/StudentCharacteristicDescriptor	Pregnant	Pregnant	Pregnant	\N	\N	\N	\N	2023-11-08 13:57:31.622603	2023-11-08 13:57:31.622572	065ee717-400e-4ece-8882-731a2c989520	389
392	uri://ed-fi.org/StudentCharacteristicDescriptor	Unaccompanied Youth	Unaccompanied Youth	Unaccompanied Youth	\N	\N	\N	\N	2023-11-08 13:57:31.62911	2023-11-08 13:57:31.629066	07910d22-c892-4a86-ac39-9c6c7de58563	392
394	uri://ed-fi.org/StudentCharacteristicDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	\N	2023-11-08 13:57:31.636321	2023-11-08 13:57:31.636285	f2d0a56a-5a99-44a8-b7f3-d33e122bef74	394
401	uri://ed-fi.org/StudentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	\N	2023-11-08 13:57:31.693676	2023-11-08 13:57:31.691657	f0ee3e7f-b34a-4fa6-bcb5-f1c82bddaa94	401
403	uri://ed-fi.org/MethodCreditEarnedDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	\N	2023-11-08 13:57:31.728615	2023-11-08 13:57:31.727485	289d2f35-c7e5-4c1f-9a2e-67f225cfdae5	403
406	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit recovery	Credit recovery	Credit recovery	\N	\N	\N	\N	2023-11-08 13:57:31.737402	2023-11-08 13:57:31.737354	4833f07a-4562-40d6-9b30-5450e0e96331	406
412	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	No Difference	No Difference	No Difference	\N	\N	\N	\N	2023-11-08 13:57:31.774164	2023-11-08 13:57:31.773041	80aa8778-cd11-4e81-8037-8ec52e02eafb	412
344	uri://ed-fi.org/SexDescriptor	Female	Female	Female	\N	\N	\N	\N	2023-11-08 13:57:31.365052	2023-11-08 13:57:31.364041	3b068091-70bb-4ebb-a4ee-80e5489c0dfe	344
349	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside agency part-ti	Employed or affiliated with outside agency part-time	Employed or affiliated with outside agency part-time	\N	\N	\N	\N	2023-11-08 13:57:31.401792	2023-11-08 13:57:31.40065	ba54be9b-f967-4a26-ae1f-e05c61e8a68f	349
351	uri://ed-fi.org/EmploymentStatusDescriptor	Contractual	Contractual	Contractual	\N	\N	\N	\N	2023-11-08 13:57:31.410948	2023-11-08 13:57:31.410875	2520f5e7-7234-4572-af7e-f4fc20e7c024	351
356	uri://ed-fi.org/EmploymentStatusDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:31.421374	2023-11-08 13:57:31.421329	fdee1a09-5213-4ae9-a234-2bb51d12e2fa	356
360	uri://ed-fi.org/CourseDefinedByDescriptor	National Organization	National Organization	National Organization	\N	\N	\N	\N	2023-11-08 13:57:31.455354	2023-11-08 13:57:31.454361	6ec942a0-2c54-4fe2-937d-86e59f154ef5	360
365	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Other local education agency	Other local education agency	Other local education agency	\N	\N	\N	\N	2023-11-08 13:57:31.494588	2023-11-08 13:57:31.493554	f0855b9b-e697-4c46-b6db-d887c2c84457	365
366	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Regular public school district	Regular public school district	Regular public school district that is not a component of a supervisory union	\N	\N	\N	\N	2023-11-08 13:57:31.504835	2023-11-08 13:57:31.504805	b0e2025f-92e2-4abc-b786-6f704f0f812b	367
371	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Supervisory union	Supervisory union	Supervisory union	\N	\N	\N	\N	2023-11-08 13:57:31.524064	2023-11-08 13:57:31.52402	580ebf40-21b5-47f1-bae2-98c9983516f1	371
373	uri://ed-fi.org/CourseIdentificationSystemDescriptor	LEA course code	LEA course code	LEA course code	\N	\N	\N	\N	2023-11-08 13:57:31.561334	2023-11-08 13:57:31.560368	3c33a132-0d43-44a6-afae-9737103cb3f0	373
377	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:31.571745	2023-11-08 13:57:31.571714	08833b32-a38f-46fd-b480-687231740633	377
382	uri://ed-fi.org/StudentCharacteristicDescriptor	Foster Care	Foster Care	Foster Care	\N	\N	\N	\N	2023-11-08 13:57:31.611313	2023-11-08 13:57:31.610334	3215fd9b-9ce3-467a-b3f7-93eeb0a07c9d	382
386	uri://ed-fi.org/StudentCharacteristicDescriptor	Parent in Military	Parent in Military	Parent in Military	\N	\N	\N	\N	2023-11-08 13:57:31.619862	2023-11-08 13:57:31.619785	9000385f-b12d-4341-b09b-a55ab718a9a8	386
391	uri://ed-fi.org/StudentCharacteristicDescriptor	Runaway	Runaway	Runaway	\N	\N	\N	\N	2023-11-08 13:57:31.629024	2023-11-08 13:57:31.628027	2f8f7849-937f-4ed6-9e40-a4ba79b8bb21	391
397	uri://ed-fi.org/EligibilityEvaluationTypeDescriptor	Initial Evaluation	Initial Evaluation	Initial Evaluation	\N	\N	\N	\N	2023-11-08 13:57:31.682629	2023-11-08 13:57:31.681412	c962524f-c033-43c1-936b-2af52b6e385d	397
400	uri://ed-fi.org/StudentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	\N	2023-11-08 13:57:31.693384	2023-11-08 13:57:31.693326	9d0d0e0d-e8ea-4747-a3d2-3cf649601f2e	400
402	uri://ed-fi.org/MethodCreditEarnedDescriptor	Classroom credit	Classroom credit	Classroom credit	\N	\N	\N	\N	2023-11-08 13:57:31.728462	2023-11-08 13:57:31.727502	039cbe63-6975-4537-87ff-8b07b5d6bac1	402
409	uri://ed-fi.org/MethodCreditEarnedDescriptor	Transfer credit	Transfer credit	Transfer credit	\N	\N	\N	\N	2023-11-08 13:57:31.739737	2023-11-08 13:57:31.739716	eb8f2336-7e13-4766-85f6-4d743fa4fc56	409
411	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	School Year Ended	School Year Ended	School Year Ended	\N	\N	\N	\N	2023-11-08 13:57:31.774173	2023-11-08 13:57:31.773036	8aa6acdb-9752-41d3-a65d-686b9e7bc33f	411
416	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Incarcerated	Student Incarcerated	Student Incarcerated	\N	\N	\N	\N	2023-11-08 13:57:31.783898	2023-11-08 13:57:31.783883	521354f8-8dc4-4cec-9a9b-e8889f77f207	416
425	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-11-08 13:57:31.831271	2023-11-08 13:57:31.830126	f3cfa25e-a928-4db8-a6b9-029fc921df7f	425
426	uri://ed-fi.org/AdditionalCreditTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-11-08 13:57:31.838509	2023-11-08 13:57:31.838458	f817b62c-b3dd-4fa3-9468-17b5fd532b64	426
432	uri://ed-fi.org/LanguageDescriptor	gsw	Swiss German	Swiss German	\N	\N	\N	\N	2023-11-08 13:57:31.876439	2023-11-08 13:57:31.876404	61abe3d6-15ff-4ff5-b5aa-69dae0ef8d49	432
434	uri://ed-fi.org/LanguageDescriptor	bej	Beja	Beja	\N	\N	\N	\N	2023-11-08 13:57:31.883853	2023-11-08 13:57:31.883836	5bc937ed-a83a-4725-aa45-be82c3732081	434
436	uri://ed-fi.org/LanguageDescriptor	byn	Blin	Blin	\N	\N	\N	\N	2023-11-08 13:57:31.887041	2023-11-08 13:57:31.886999	40598342-7153-4900-831a-5edb4d28a2e4	436
440	uri://ed-fi.org/LanguageDescriptor	crh	Crimean Tatar	Crimean Tatar	\N	\N	\N	\N	2023-11-08 13:57:31.895032	2023-11-08 13:57:31.894959	b00aafe2-5fce-4f0f-8c57-db47ba6c6226	440
444	uri://ed-fi.org/LanguageDescriptor	bin	Bini	Bini	\N	\N	\N	\N	2023-11-08 13:57:31.902923	2023-11-08 13:57:31.902867	1dd8b646-4540-4807-abe1-c1737eb64b16	444
445	uri://ed-fi.org/LanguageDescriptor	hat	Haitian	Haitian	\N	\N	\N	\N	2023-11-08 13:57:31.908879	2023-11-08 13:57:31.908813	1ab4b57f-250d-4b3f-9cad-df81795ccffb	445
450	uri://ed-fi.org/LanguageDescriptor	kac	Kachin	Kachin	\N	\N	\N	\N	2023-11-08 13:57:31.917536	2023-11-08 13:57:31.917521	eac40a72-a712-474c-b93e-fec0048fad45	450
456	uri://ed-fi.org/LanguageDescriptor	arn	Mapudungun	Mapudungun	\N	\N	\N	\N	2023-11-08 13:57:31.929598	2023-11-08 13:57:31.929571	81c13275-35a0-4692-a6a8-55064036d28f	456
460	uri://ed-fi.org/LanguageDescriptor	nav	Navajo	Navajo	\N	\N	\N	\N	2023-11-08 13:57:31.938374	2023-11-08 13:57:31.938339	25e74d8a-c03c-4eee-905b-c7ed85786d41	460
464	uri://ed-fi.org/LanguageDescriptor	iii	Sichuan Yi	Sichuan Yi	\N	\N	\N	\N	2023-11-08 13:57:31.945299	2023-11-08 13:57:31.945221	78eeeefc-01fa-4aab-9589-9b10deccde64	464
469	uri://ed-fi.org/LanguageDescriptor	chu	Church Slavic	Church Slavic	\N	\N	\N	\N	2023-11-08 13:57:31.963826	2023-11-08 13:57:31.963781	8ae5143b-9718-4dbd-83ee-ac8f05f66ac5	469
474	uri://ed-fi.org/LanguageDescriptor	pan	Panjabi	Panjabi	\N	\N	\N	\N	2023-11-08 13:57:31.973367	2023-11-08 13:57:31.973338	8a2ab534-b7cd-42b5-a30c-3d70451b69e1	474
478	uri://ed-fi.org/LanguageDescriptor	sin	Sinhala	Sinhala	\N	\N	\N	\N	2023-11-08 13:57:31.979592	2023-11-08 13:57:31.979563	c8a0a8f6-8ff2-43ae-954d-73a8553df445	478
481	uri://ed-fi.org/LanguageDescriptor	cat	Catalan	Catalan	\N	\N	\N	\N	2023-11-08 13:57:31.987437	2023-11-08 13:57:31.987396	eaf67518-68a9-4e34-a775-4fc514be5e06	481
485	uri://ed-fi.org/LanguageDescriptor	aar	Afar	Afar	\N	\N	\N	\N	2023-11-08 13:57:31.994623	2023-11-08 13:57:31.994451	2591551b-6613-4e2b-8d6f-5eeb6e3c2a0a	485
347	uri://ed-fi.org/SexDescriptor	Male	Male	Male	\N	\N	\N	\N	2023-11-08 13:57:31.367581	2023-11-08 13:57:31.367508	e8b32d2c-3de5-46c3-92a5-559d36bb0fc9	347
348	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside organization	Employed or affiliated with outside organization	Employed or affiliated with outside organization	\N	\N	\N	\N	2023-11-08 13:57:31.401616	2023-11-08 13:57:31.400653	0129e244-1e27-497b-b95a-76a49bf64afa	348
350	uri://ed-fi.org/EmploymentStatusDescriptor	Probationary	Probationary	Probationary	\N	\N	\N	\N	2023-11-08 13:57:31.410105	2023-11-08 13:57:31.410073	0dbb74ab-e886-43e1-9828-bade87e090ec	350
354	uri://ed-fi.org/EmploymentStatusDescriptor	Substitute/temporary	Substitute/temporary	Substitute/temporary	\N	\N	\N	\N	2023-11-08 13:57:31.417872	2023-11-08 13:57:31.417857	c43cb771-82f7-46b4-be9d-d2380a357bf0	354
357	uri://ed-fi.org/EmploymentStatusDescriptor	Volunteer/no contract	Volunteer/no contract	Volunteer/no contract	\N	\N	\N	\N	2023-11-08 13:57:31.422091	2023-11-08 13:57:31.421947	d8803db3-6cb3-47b3-8680-a76b66e20232	357
359	uri://ed-fi.org/CourseDefinedByDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:31.45535	2023-11-08 13:57:31.45433	accc9270-f9a4-4284-8466-7485f9d4ce30	359
364	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Public school district part of a supervisory union	Public school district part of a supervisory union	Regular public school district that is a component of a supervisory union	\N	\N	\N	\N	2023-11-08 13:57:31.494585	2023-11-08 13:57:31.493578	a60303d6-7709-4715-9493-3dbbf863532f	364
367	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Service agency	Service agency	Service agency	\N	\N	\N	\N	2023-11-08 13:57:31.504849	2023-11-08 13:57:31.504572	8a111718-d60e-46d3-959a-65197a062113	366
369	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	State operated agency	State operated agency	State operated agency	\N	\N	\N	\N	2023-11-08 13:57:31.519088	2023-11-08 13:57:31.519055	d1ca1e80-0ac5-4e3d-8391-f121acad3b9f	369
376	uri://ed-fi.org/CourseIdentificationSystemDescriptor	CSSC course code	CSSC course code	CSSC course code	\N	\N	\N	\N	2023-11-08 13:57:31.561436	2023-11-08 13:57:31.560363	e9eadb79-8e32-4da8-83d6-072ef44e3a04	376
379	uri://ed-fi.org/CourseIdentificationSystemDescriptor	School course code	School course code	School course code	\N	\N	\N	\N	2023-11-08 13:57:31.57273	2023-11-08 13:57:31.572531	41c18216-528f-4cca-8e85-f4e4a0462c17	379
381	uri://ed-fi.org/CourseIdentificationSystemDescriptor	University course code	University course code	University course code	\N	\N	\N	\N	2023-11-08 13:57:31.579346	2023-11-08 13:57:31.579317	89110b85-1510-4659-b67d-a1b55f6c7a70	381
383	uri://ed-fi.org/StudentCharacteristicDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	\N	2023-11-08 13:57:31.611329	2023-11-08 13:57:31.610355	6a8b66e6-80e4-44fc-947d-ac5c52c5a301	383
387	uri://ed-fi.org/StudentCharacteristicDescriptor	Immigrant	Immigrant	Immigrant	\N	\N	\N	\N	2023-11-08 13:57:31.620491	2023-11-08 13:57:31.620389	1b4768e5-d8d3-4ea5-b74b-91c56accebec	387
396	uri://ed-fi.org/EligibilityEvaluationTypeDescriptor	Reevaluation	Reevaluation	Reevaluation	\N	\N	\N	\N	2023-11-08 13:57:31.682455	2023-11-08 13:57:31.681416	2881063b-ffd2-4208-9a3c-93d636d1deb3	396
398	uri://ed-fi.org/StudentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	\N	2023-11-08 13:57:31.692794	2023-11-08 13:57:31.691643	87356caf-e90e-4f1e-ac0d-da785f8fcd11	398
404	uri://ed-fi.org/MethodCreditEarnedDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	\N	2023-11-08 13:57:31.728605	2023-11-08 13:57:31.727484	2aa7b863-9ae3-4d28-afc9-c5033b0aa830	404
408	uri://ed-fi.org/MethodCreditEarnedDescriptor	Online credit	Online credit	Online credit	\N	\N	\N	\N	2023-11-08 13:57:31.738461	2023-11-08 13:57:31.738448	0f640bfb-81c0-49f4-9430-ec5b5bb6c6d7	408
413	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Continuation Of Prior Year's Disciplinary Action	Continuation Of Previous Year's Disciplinary Action Assignment	Continuation Of Previous Year's Disciplinary Action Assignment	\N	\N	\N	\N	2023-11-08 13:57:31.774161	2023-11-08 13:57:31.773063	2b0062ef-e275-4ed1-827a-06e45a10fecf	413
417	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	\N	\N	\N	\N	2023-11-08 13:57:31.784174	2023-11-08 13:57:31.784117	9746abb9-ab64-4bfb-993f-5734641b5063	417
421	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By District	Term Modified By District	Term Modified By District	\N	\N	\N	\N	2023-11-08 13:57:31.797328	2023-11-08 13:57:31.797294	91851b99-f7cd-4e91-b536-74122ff73224	421
422	uri://ed-fi.org/ProficiencyDescriptor	Not Proficient	Not Proficient	Not Proficient	\N	\N	\N	\N	2023-11-08 13:57:31.827677	2023-11-08 13:57:31.826192	7829fd97-fc39-4eec-80b3-62fa360ca726	422
427	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Dual credit	Dual credit	Dual credit	\N	\N	\N	\N	2023-11-08 13:57:31.838512	2023-11-08 13:57:31.838341	13a4fc24-b537-48de-9bd5-aba708c91c92	427
429	uri://ed-fi.org/LanguageDescriptor	rup	Aromanian	Aromanian	\N	\N	\N	\N	2023-11-08 13:57:31.874088	2023-11-08 13:57:31.873077	72919581-ac7b-442d-ad75-1a2f7ad4d1ba	429
435	uri://ed-fi.org/LanguageDescriptor	zbl	Blissymbols	Blissymbols	\N	\N	\N	\N	2023-11-08 13:57:31.885269	2023-11-08 13:57:31.885215	04fdaaa9-d594-413d-b629-2ccd7fffc67c	435
438	uri://ed-fi.org/LanguageDescriptor	zha	Zhuang	Zhuang	\N	\N	\N	\N	2023-11-08 13:57:31.893125	2023-11-08 13:57:31.892915	a56b4f39-f431-4d2e-a6db-ba54b850796b	438
443	uri://ed-fi.org/LanguageDescriptor	div	Divehi	Divehi	\N	\N	\N	\N	2023-11-08 13:57:31.901931	2023-11-08 13:57:31.901704	6bd6a6d2-8709-4eab-b0cb-754e00e591b2	443
448	uri://ed-fi.org/LanguageDescriptor	kik	Kikuyu	Kikuyu	\N	\N	\N	\N	2023-11-08 13:57:31.910834	2023-11-08 13:57:31.910793	e62b1579-68fe-4eea-ab58-5c3a9e5afdc4	448
449	uri://ed-fi.org/LanguageDescriptor	arc	Official Aramaic (700-300 BCE)	Official Aramaic (700-300 BCE)	\N	\N	\N	\N	2023-11-08 13:57:31.914932	2023-11-08 13:57:31.914882	e6499ec9-d7f5-49e3-acce-2378b2640986	449
453	uri://ed-fi.org/LanguageDescriptor	kua	Kuanyama	Kuanyama	\N	\N	\N	\N	2023-11-08 13:57:31.921227	2023-11-08 13:57:31.921196	069e7e83-9f5e-41dc-9773-a454e0477ea7	453
454	uri://ed-fi.org/LanguageDescriptor	ltz	Luxembourgish	Luxembourgish	\N	\N	\N	\N	2023-11-08 13:57:31.925675	2023-11-08 13:57:31.925559	c8dd9304-33b3-48ad-af58-b848a4b1a98a	454
457	uri://ed-fi.org/LanguageDescriptor	nds	Low German	Low German	\N	\N	\N	\N	2023-11-08 13:57:31.931142	2023-11-08 13:57:31.93111	31efc280-a9b4-4e97-8f03-c689249bbf04	457
459	uri://ed-fi.org/LanguageDescriptor	hmn	Hmong	Hmong	\N	\N	\N	\N	2023-11-08 13:57:31.93466	2023-11-08 13:57:31.934623	7553cf11-6850-4b07-988a-b4425a9e61ae	459
385	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced Homemaker	Displaced Homemaker	Displaced Homemaker	\N	\N	\N	\N	2023-11-08 13:57:31.611414	2023-11-08 13:57:31.610327	ca881636-aa1c-4d67-9f47-0532c2f453cc	385
388	uri://ed-fi.org/StudentCharacteristicDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	\N	2023-11-08 13:57:31.621304	2023-11-08 13:57:31.621283	f1a8a4b1-b509-4c4d-90c9-986813bb84a5	388
390	uri://ed-fi.org/StudentCharacteristicDescriptor	Single Parent	Single Parent	Single Parent	\N	\N	\N	\N	2023-11-08 13:57:31.628356	2023-11-08 13:57:31.628328	bbc46c55-2fa2-453a-b116-ccb5fea5790b	390
393	uri://ed-fi.org/StudentCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:31.631396	2023-11-08 13:57:31.631379	dae5a379-aac3-4bcb-a2aa-d2b695312849	393
395	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced	Displaced	Displaced	\N	\N	\N	\N	2023-11-08 13:57:31.638563	2023-11-08 13:57:31.638517	eeaafcd4-314f-42f3-ae3c-d2074f0f4b82	395
399	uri://ed-fi.org/StudentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	\N	2023-11-08 13:57:31.692981	2023-11-08 13:57:31.691629	85e345e0-02b0-4096-baad-a6fb1b729d55	399
405	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	\N	2023-11-08 13:57:31.728622	2023-11-08 13:57:31.727508	bae83540-ee40-4fc2-aaef-ab60cc9c2dc9	405
407	uri://ed-fi.org/MethodCreditEarnedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:31.738384	2023-11-08 13:57:31.738357	6f2c6395-cc38-428a-9a8f-9f1022ff7527	407
410	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:31.774038	2023-11-08 13:57:31.773059	5b12e416-8c58-4c47-b75e-c603c02333c4	410
414	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Decreased Due To Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	\N	\N	\N	\N	2023-11-08 13:57:31.783843	2023-11-08 13:57:31.783801	a802b205-7e93-4bde-aa02-1a771d9f3c1e	414
419	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	\N	\N	\N	\N	2023-11-08 13:57:31.792305	2023-11-08 13:57:31.79228	4481266f-4759-43dd-8b85-5772a777f5ac	419
424	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-11-08 13:57:31.831271	2023-11-08 13:57:31.830129	c45d6624-94b3-4585-b31c-4c18df930291	424
431	uri://ed-fi.org/LanguageDescriptor	ady	Adyghe	Adyghe	\N	\N	\N	\N	2023-11-08 13:57:31.874385	2023-11-08 13:57:31.873114	2ae4a396-da6d-47e2-ac7d-dded06da224d	431
433	uri://ed-fi.org/LanguageDescriptor	spa	Spanish	Spanish	\N	\N	\N	\N	2023-11-08 13:57:31.883373	2023-11-08 13:57:31.883339	f6f4d2e0-fd40-4d4f-b1ac-e603ffce51ac	433
439	uri://ed-fi.org/LanguageDescriptor	rar	Rarotongan	Rarotongan	\N	\N	\N	\N	2023-11-08 13:57:31.893282	2023-11-08 13:57:31.893254	6d55a629-513e-464c-97cd-6e6da374bf03	439
442	uri://ed-fi.org/LanguageDescriptor	chp	Chipewyan	Chipewyan	\N	\N	\N	\N	2023-11-08 13:57:31.901316	2023-11-08 13:57:31.901222	eb3ab9ce-69ce-418f-bcea-03182d6e8a5a	442
446	uri://ed-fi.org/LanguageDescriptor	dut	Dutch	Dutch	\N	\N	\N	\N	2023-11-08 13:57:31.909122	2023-11-08 13:57:31.90908	fae576d3-37ea-41cb-b00a-4c4b3d04b358	446
451	uri://ed-fi.org/LanguageDescriptor	pam	Pampanga	Pampanga	\N	\N	\N	\N	2023-11-08 13:57:31.918515	2023-11-08 13:57:31.917899	b15eead1-bd84-4bea-a01b-6eeb2fed2015	451
455	uri://ed-fi.org/LanguageDescriptor	lim	Limburgan	Limburgan	\N	\N	\N	\N	2023-11-08 13:57:31.927286	2023-11-08 13:57:31.927215	e4b462eb-5a98-437e-9946-259b198b17ef	455
462	uri://ed-fi.org/LanguageDescriptor	nob	Bokmål, Norwegian	Bokmål, Norwegian	\N	\N	\N	\N	2023-11-08 13:57:31.943077	2023-11-08 13:57:31.943047	d92e5fe3-9390-4940-9d89-33d8c3b8a7f0	462
468	uri://ed-fi.org/LanguageDescriptor	pro	Provençal, Old (to 1500)	Provençal, Old (to 1500)	\N	\N	\N	\N	2023-11-08 13:57:31.953393	2023-11-08 13:57:31.953379	931d949c-080d-49c1-b617-cc97f0df7572	468
472	uri://ed-fi.org/LanguageDescriptor	pus	Pushto	Pushto	\N	\N	\N	\N	2023-11-08 13:57:31.965793	2023-11-08 13:57:31.965763	700ec40f-723e-4509-a4c5-204fa56caecf	472
475	uri://ed-fi.org/LanguageDescriptor	gla	Gaelic	Gaelic	\N	\N	\N	\N	2023-11-08 13:57:31.974695	2023-11-08 13:57:31.97468	5c772513-044d-485b-aed9-b283c241aaa2	475
484	uri://ed-fi.org/LanguageDescriptor	wal	Wolaitta	Wolaitta	\N	\N	\N	\N	2023-11-08 13:57:31.993705	2023-11-08 13:57:31.993608	1a76c3a6-af7d-4ff4-9c7e-130ef0de6d19	484
487	uri://ed-fi.org/LanguageDescriptor	ada	Adangme	Adangme	\N	\N	\N	\N	2023-11-08 13:57:32.000114	2023-11-08 13:57:32.000021	3b8a34c5-da52-463e-85d4-a0fdcf9ee5e0	487
491	uri://ed-fi.org/LanguageDescriptor	alb	Albanian	Albanian	\N	\N	\N	\N	2023-11-08 13:57:32.008772	2023-11-08 13:57:32.008722	98583e23-4390-4207-93a3-a2b1583523d0	491
494	uri://ed-fi.org/LanguageDescriptor	anp	Angika	Angika	\N	\N	\N	\N	2023-11-08 13:57:32.013898	2023-11-08 13:57:32.01383	7a50ded4-98db-496b-b41f-a40298e3979f	494
501	uri://ed-fi.org/LanguageDescriptor	awa	Awadhi	Awadhi	\N	\N	\N	\N	2023-11-08 13:57:32.027284	2023-11-08 13:57:32.027188	02a7b10e-3f54-460f-a287-5d7022039214	501
506	uri://ed-fi.org/LanguageDescriptor	bem	Bemba	Bemba	\N	\N	\N	\N	2023-11-08 13:57:32.041162	2023-11-08 13:57:32.041107	079d5e87-d4d7-4676-bfac-c3862fd5221e	506
508	uri://ed-fi.org/LanguageDescriptor	bla	Siksika	Siksika	\N	\N	\N	\N	2023-11-08 13:57:32.045976	2023-11-08 13:57:32.045945	4220926d-49b3-47c0-93c7-9d9d40d3db83	508
510	uri://ed-fi.org/LanguageDescriptor	bos	Bosnian	Bosnian	\N	\N	\N	\N	2023-11-08 13:57:32.050445	2023-11-08 13:57:32.050125	2cd3a64e-ee97-43e3-8dc2-a55038efe077	510
514	uri://ed-fi.org/LanguageDescriptor	bua	Buriat	Buriat	\N	\N	\N	\N	2023-11-08 13:57:32.058423	2023-11-08 13:57:32.057925	5a694dec-83d2-4ece-8084-204b999fc425	514
517	uri://ed-fi.org/LanguageDescriptor	cha	Chamorro	Chamorro	\N	\N	\N	\N	2023-11-08 13:57:32.065957	2023-11-08 13:57:32.065941	d6d15f46-447c-40e3-94a3-6a810764a92d	517
526	uri://ed-fi.org/LanguageDescriptor	cpe	Creoles and pidgins, English based	Creoles and pidgins, English based	\N	\N	\N	\N	2023-11-08 13:57:32.083355	2023-11-08 13:57:32.083157	da6458fa-4b46-43a0-83c3-074d5080cffa	526
528	uri://ed-fi.org/LanguageDescriptor	cze	Czech	Czech	\N	\N	\N	\N	2023-11-08 13:57:32.090169	2023-11-08 13:57:32.090139	247b1a94-5782-4db7-87ac-d06e0d1c2eb4	528
536	uri://ed-fi.org/LanguageDescriptor	dum	Dutch, Middle (ca.1050-1350)	Dutch, Middle (ca.1050-1350)	\N	\N	\N	\N	2023-11-08 13:57:32.105334	2023-11-08 13:57:32.105227	0e00e53a-9a7c-4735-826c-ad29e4a92f7a	536
540	uri://ed-fi.org/LanguageDescriptor	eng	English	English	\N	\N	\N	\N	2023-11-08 13:57:32.113445	2023-11-08 13:57:32.113412	310ee14b-b8e7-48f4-b935-a7b9af804a52	540
545	uri://ed-fi.org/LanguageDescriptor	fiu	Finno-Ugrian languages	Finno-Ugrian languages	\N	\N	\N	\N	2023-11-08 13:57:32.124415	2023-11-08 13:57:32.124362	9f571adb-0057-4041-bbe8-38384018a1e7	545
549	uri://ed-fi.org/LanguageDescriptor	frs	Eastern Frisian	Eastern Frisian	\N	\N	\N	\N	2023-11-08 13:57:32.136615	2023-11-08 13:57:32.136584	7bc144cf-05ac-4d15-9543-d44ddab6df07	549
415	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Withdrew From School	Student Withdrew From School	Student Withdrew From School	\N	\N	\N	\N	2023-11-08 13:57:31.784195	2023-11-08 13:57:31.784171	c0820ce2-885a-4b3f-b376-328f999ebf89	415
418	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Court Order	Term Modified By Court Order	Term Modified By Court Order	\N	\N	\N	\N	2023-11-08 13:57:31.791103	2023-11-08 13:57:31.791062	cc6367d7-2b50-44e7-955c-8dbc8ac5c3bf	418
420	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Placement Program Due To Behavior	Term Modified By Placement Program Due To Student Behavior	Term Modified By Placement Program Due To Student Behavior While In The Placement	\N	\N	\N	\N	2023-11-08 13:57:31.794042	2023-11-08 13:57:31.794013	2c7e9a95-b4e3-410d-8e60-73b0e8c3afa5	420
423	uri://ed-fi.org/ProficiencyDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-11-08 13:57:31.827867	2023-11-08 13:57:31.826204	d72ecc65-1340-4469-ace2-5743eede061f	423
428	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:31.841165	2023-11-08 13:57:31.841134	681a6415-d603-47d0-897e-5b94e06614f2	428
430	uri://ed-fi.org/LanguageDescriptor	ast	Asturian	Asturian	\N	\N	\N	\N	2023-11-08 13:57:31.874292	2023-11-08 13:57:31.873072	ea304672-fb5c-4d3e-823b-1195228f179f	430
437	uri://ed-fi.org/LanguageDescriptor	nya	Chichewa	Chichewa	\N	\N	\N	\N	2023-11-08 13:57:31.891532	2023-11-08 13:57:31.891504	5d6935b2-1bb0-4fcf-8a10-fc3e8bc77ea2	437
441	uri://ed-fi.org/LanguageDescriptor	zza	Zaza	Zaza	\N	\N	\N	\N	2023-11-08 13:57:31.901253	2023-11-08 13:57:31.900729	22a6474c-43c0-493b-8ffb-157fa448bdf0	441
447	uri://ed-fi.org/LanguageDescriptor	kal	Kalaallisut	Kalaallisut	\N	\N	\N	\N	2023-11-08 13:57:31.909962	2023-11-08 13:57:31.909926	15e6ad30-3ebf-4745-a6bd-1f83ac2338b7	447
452	uri://ed-fi.org/LanguageDescriptor	kir	Kirghiz	Kirghiz	\N	\N	\N	\N	2023-11-08 13:57:31.921081	2023-11-08 13:57:31.921052	8cc5872f-8d4e-4d77-a62d-345928f2d866	452
458	uri://ed-fi.org/LanguageDescriptor	mic	Mi'kmaq	Mi'kmaq	\N	\N	\N	\N	2023-11-08 13:57:31.933525	2023-11-08 13:57:31.933208	f255e3d8-6b3d-4e34-9700-79a58973be52	458
463	uri://ed-fi.org/LanguageDescriptor	nde	Ndebele, North	Ndebele, North	\N	\N	\N	\N	2023-11-08 13:57:31.943798	2023-11-08 13:57:31.943672	ecac0302-4462-4d01-b3f9-dbf225c43572	463
466	uri://ed-fi.org/LanguageDescriptor	xal	Kalmyk	Kalmyk	\N	\N	\N	\N	2023-11-08 13:57:31.951415	2023-11-08 13:57:31.951396	38e5c62d-2300-4b43-a6a1-e45335ed65e0	466
471	uri://ed-fi.org/LanguageDescriptor	oss	Ossetian	Ossetian	\N	\N	\N	\N	2023-11-08 13:57:31.96596	2023-11-08 13:57:31.965943	9f9c1110-0398-4496-96ae-1dc56019035a	471
473	uri://ed-fi.org/LanguageDescriptor	fil	Filipino	Filipino	\N	\N	\N	\N	2023-11-08 13:57:31.970888	2023-11-08 13:57:31.970851	a4f39dc7-2c34-4a10-b414-45655f37beba	473
476	uri://ed-fi.org/LanguageDescriptor	kho	Khotanese	Khotanese	\N	\N	\N	\N	2023-11-08 13:57:31.976592	2023-11-08 13:57:31.97656	e61927bb-9065-443d-911a-b90761bcd804	476
479	uri://ed-fi.org/LanguageDescriptor	nbl	Ndebele, South	Ndebele, South	\N	\N	\N	\N	2023-11-08 13:57:31.982579	2023-11-08 13:57:31.982544	3c258c8b-71f7-482b-a8d0-5bd8aa1b3fa6	479
482	uri://ed-fi.org/LanguageDescriptor	uig	Uighur	Uighur	\N	\N	\N	\N	2023-11-08 13:57:31.98819	2023-11-08 13:57:31.988117	d2d75209-e96a-4f7f-a621-22cfb8d86581	482
488	uri://ed-fi.org/LanguageDescriptor	afa	Afro-Asiatic languages	Afro-Asiatic languages	\N	\N	\N	\N	2023-11-08 13:57:32.00109	2023-11-08 13:57:32.001064	4bf79af7-f0fa-47fe-90da-a60e827d15e8	488
492	uri://ed-fi.org/LanguageDescriptor	alg	Algonquian languages	Algonquian languages	\N	\N	\N	\N	2023-11-08 13:57:32.009601	2023-11-08 13:57:32.009444	a54d3f05-0904-497e-ab12-d540d819cad9	492
495	uri://ed-fi.org/LanguageDescriptor	arg	Aragonese	Aragonese	\N	\N	\N	\N	2023-11-08 13:57:32.018772	2023-11-08 13:57:32.018733	c91eebc7-db56-402f-9521-2ea3bfabbae5	495
497	uri://ed-fi.org/LanguageDescriptor	art	Artificial languages	Artificial languages	\N	\N	\N	\N	2023-11-08 13:57:32.02109	2023-11-08 13:57:32.02104	01a500c7-6c3c-473d-878a-7a545504267d	497
498	uri://ed-fi.org/LanguageDescriptor	ath	Athapascan languages	Athapascan languages	\N	\N	\N	\N	2023-11-08 13:57:32.02486	2023-11-08 13:57:32.024818	a9bf6fef-5a61-47e4-b121-8301b3e2af97	498
504	uri://ed-fi.org/LanguageDescriptor	bal	Baluchi	Baluchi	\N	\N	\N	\N	2023-11-08 13:57:32.035795	2023-11-08 13:57:32.035731	a1b67123-42ff-48c2-b459-c558614d3180	504
507	uri://ed-fi.org/LanguageDescriptor	bas	Basa	Basa	\N	\N	\N	\N	2023-11-08 13:57:32.042522	2023-11-08 13:57:32.042122	ffb80ba3-02fe-46ed-bb63-88e88db1581a	507
511	uri://ed-fi.org/LanguageDescriptor	bih	Bihari languages	Bihari languages	\N	\N	\N	\N	2023-11-08 13:57:32.052229	2023-11-08 13:57:32.052134	3b942f72-7921-4bbe-870f-a31fb8c419a1	511
513	uri://ed-fi.org/LanguageDescriptor	bul	Bulgarian	Bulgarian	\N	\N	\N	\N	2023-11-08 13:57:32.057494	2023-11-08 13:57:32.057477	57c32cb3-40f3-4134-948a-ad32043c1b1e	513
516	uri://ed-fi.org/LanguageDescriptor	ceb	Cebuano	Cebuano	\N	\N	\N	\N	2023-11-08 13:57:32.06188	2023-11-08 13:57:32.061625	c8045814-7742-4324-a11a-b478c497faa3	516
521	uri://ed-fi.org/LanguageDescriptor	cho	Choctaw	Choctaw	\N	\N	\N	\N	2023-11-08 13:57:32.074789	2023-11-08 13:57:32.074761	48811dfa-0e19-4dfe-9fa1-a0f396f7a15e	521
524	uri://ed-fi.org/LanguageDescriptor	cmc	Chamic languages	Chamic languages	\N	\N	\N	\N	2023-11-08 13:57:32.080725	2023-11-08 13:57:32.080637	5eb907de-0ba4-463a-805d-15a2ceec32ad	524
527	uri://ed-fi.org/LanguageDescriptor	cpp	Creoles and pidgins, Portuguese-based	Creoles and pidgins, Portuguese-based	\N	\N	\N	\N	2023-11-08 13:57:32.084916	2023-11-08 13:57:32.084882	aa590e83-e85b-4589-8858-fb5a74f40346	527
531	uri://ed-fi.org/LanguageDescriptor	day	Land Dayak languages	Land Dayak languages	\N	\N	\N	\N	2023-11-08 13:57:32.093846	2023-11-08 13:57:32.093831	3dd09831-1d1a-4798-bd68-00a8bad220e3	531
534	uri://ed-fi.org/LanguageDescriptor	doi	Dogri	Dogri	\N	\N	\N	\N	2023-11-08 13:57:32.101942	2023-11-08 13:57:32.101897	abd7bd40-6a40-4822-9340-75faa866a53a	534
537	uri://ed-fi.org/LanguageDescriptor	dyu	Dyula	Dyula	\N	\N	\N	\N	2023-11-08 13:57:32.106712	2023-11-08 13:57:32.106587	9b3b5100-af3d-4e79-86ee-c0c7029c13db	537
539	uri://ed-fi.org/LanguageDescriptor	eka	Ekajuk	Ekajuk	\N	\N	\N	\N	2023-11-08 13:57:32.112429	2023-11-08 13:57:32.112408	c09c8fce-8704-40cf-ae7f-bf9ed79b0779	539
543	uri://ed-fi.org/LanguageDescriptor	fan	Fang	Fang	\N	\N	\N	\N	2023-11-08 13:57:32.122831	2023-11-08 13:57:32.122792	f89fe57b-5ec7-4c41-a1fd-8ba2c74a1a41	543
551	uri://ed-fi.org/LanguageDescriptor	gba	Gbaya	Gbaya	\N	\N	\N	\N	2023-11-08 13:57:32.140724	2023-11-08 13:57:32.140693	18b74605-3e4c-4c97-8797-53f10184e94d	551
554	uri://ed-fi.org/LanguageDescriptor	glg	Galician	Galician	\N	\N	\N	\N	2023-11-08 13:57:32.146893	2023-11-08 13:57:32.146861	3cf3c793-e9f2-47f9-8ed7-98b8b0766a3b	554
555	uri://ed-fi.org/LanguageDescriptor	gon	Gondi	Gondi	\N	\N	\N	\N	2023-11-08 13:57:32.153049	2023-11-08 13:57:32.152902	703c880c-fb7f-4ae2-ab05-b07d06f12c1b	555
560	uri://ed-fi.org/LanguageDescriptor	grn	Guarani	Guarani	\N	\N	\N	\N	2023-11-08 13:57:32.160725	2023-11-08 13:57:32.160475	880d20b1-8af3-4bf8-ae23-caacc4e159e2	560
562	uri://ed-fi.org/LanguageDescriptor	heb	Hebrew	Hebrew	\N	\N	\N	\N	2023-11-08 13:57:32.16708	2023-11-08 13:57:32.167065	93431202-9e0b-4ab3-989c-8d39e2cda7ea	562
461	uri://ed-fi.org/LanguageDescriptor	new	Nepal Bhasa	Nepal Bhasa	\N	\N	\N	\N	2023-11-08 13:57:31.942693	2023-11-08 13:57:31.942658	86dfb864-480e-4f6c-b549-1ed50a350835	461
465	uri://ed-fi.org/LanguageDescriptor	nno	Norwegian Nynorsk	Norwegian Nynorsk	\N	\N	\N	\N	2023-11-08 13:57:31.950466	2023-11-08 13:57:31.950299	e6e01cdc-a86c-4a1f-867d-7f1962e55f09	465
467	uri://ed-fi.org/LanguageDescriptor	ile	Interlingue	Interlingue	\N	\N	\N	\N	2023-11-08 13:57:31.953355	2023-11-08 13:57:31.95331	f3e3a5fc-9e6e-4c69-8214-0167f433ee6f	467
470	uri://ed-fi.org/LanguageDescriptor	nwc	Classical Newari	Classical Newari	\N	\N	\N	\N	2023-11-08 13:57:31.96522	2023-11-08 13:57:31.965124	7767f04d-f486-4f5d-976d-509ac82faef9	470
477	uri://ed-fi.org/LanguageDescriptor	nso	Pedi	Pedi	\N	\N	\N	\N	2023-11-08 13:57:31.978914	2023-11-08 13:57:31.978679	d5c9cb52-6c84-49c4-857d-698e795a638e	477
480	uri://ed-fi.org/LanguageDescriptor	tlh	Klingon	Klingon	\N	\N	\N	\N	2023-11-08 13:57:31.984255	2023-11-08 13:57:31.984225	cbdb7ebf-d845-4507-a8d3-e8ca71dee5bb	480
483	uri://ed-fi.org/LanguageDescriptor	him	Himachali languages	Himachali languages	\N	\N	\N	\N	2023-11-08 13:57:31.990453	2023-11-08 13:57:31.990425	40ea3bd8-cb12-4f3a-9ce0-2443e7ea490a	483
486	uri://ed-fi.org/LanguageDescriptor	ace	Achinese	Achinese	\N	\N	\N	\N	2023-11-08 13:57:31.99838	2023-11-08 13:57:31.998307	565e5ffe-0557-4e29-9d0e-4443d84fada7	486
489	uri://ed-fi.org/LanguageDescriptor	afr	Afrikaans	Afrikaans	\N	\N	\N	\N	2023-11-08 13:57:32.003439	2023-11-08 13:57:32.003066	e81eeefb-9e15-4109-8a9a-3690cd32daac	489
493	uri://ed-fi.org/LanguageDescriptor	amh	Amharic	Amharic	\N	\N	\N	\N	2023-11-08 13:57:32.010903	2023-11-08 13:57:32.010874	644cc95e-9248-407a-a5fa-3eab54f40cff	493
500	uri://ed-fi.org/LanguageDescriptor	ava	Avaric	Avaric	\N	\N	\N	\N	2023-11-08 13:57:32.025946	2023-11-08 13:57:32.025873	2ce6a61b-1e4d-4dd1-975b-7f0cbaa68fa9	500
503	uri://ed-fi.org/LanguageDescriptor	bai	Bamileke languages	Bamileke languages	\N	\N	\N	\N	2023-11-08 13:57:32.0337	2023-11-08 13:57:32.03367	fd86290e-865e-43c8-ace4-7e33b47b9108	503
509	uri://ed-fi.org/LanguageDescriptor	ber	Berber languages	Berber languages	\N	\N	\N	\N	2023-11-08 13:57:32.049227	2023-11-08 13:57:32.04921	139b4108-0de5-4d34-9b59-d123ea206151	509
512	uri://ed-fi.org/LanguageDescriptor	bre	Breton	Breton	\N	\N	\N	\N	2023-11-08 13:57:32.055578	2023-11-08 13:57:32.055548	02e39031-a783-4f67-822f-c5898b7d904a	512
519	uri://ed-fi.org/LanguageDescriptor	che	Chechen	Chechen	\N	\N	\N	\N	2023-11-08 13:57:32.067991	2023-11-08 13:57:32.067958	197d1aa8-128b-4c62-b7eb-240d8464ea6f	519
522	uri://ed-fi.org/LanguageDescriptor	chv	Chuvash	Chuvash	\N	\N	\N	\N	2023-11-08 13:57:32.075329	2023-11-08 13:57:32.075314	e88ff892-d94d-461f-a013-a02a50fa2d62	522
530	uri://ed-fi.org/LanguageDescriptor	dan	Danish	Danish	\N	\N	\N	\N	2023-11-08 13:57:32.092886	2023-11-08 13:57:32.092872	353b3028-7cfb-48e3-a191-5ed8971c44d7	530
533	uri://ed-fi.org/LanguageDescriptor	din	Dinka	Dinka	\N	\N	\N	\N	2023-11-08 13:57:32.098678	2023-11-08 13:57:32.098198	7d35d37d-3fdc-42b5-8312-44926b38ee26	533
535	uri://ed-fi.org/LanguageDescriptor	dsb	Lower Sorbian	Lower Sorbian	\N	\N	\N	\N	2023-11-08 13:57:32.10414	2023-11-08 13:57:32.104111	5d837d40-2b5b-44e8-9cb1-e1ac1c53dddb	535
541	uri://ed-fi.org/LanguageDescriptor	epo	Esperanto	Esperanto	\N	\N	\N	\N	2023-11-08 13:57:32.117361	2023-11-08 13:57:32.117345	bfc1a95d-4d56-4be3-a023-fb3b28ae5409	541
544	uri://ed-fi.org/LanguageDescriptor	fat	Fanti	Fanti	\N	\N	\N	\N	2023-11-08 13:57:32.123796	2023-11-08 13:57:32.123714	7fbb216e-0097-42ba-9b99-7b17b713b2e2	544
547	uri://ed-fi.org/LanguageDescriptor	fro	French, Old (842-ca.1400)	French, Old (842-ca.1400)	\N	\N	\N	\N	2023-11-08 13:57:32.131591	2023-11-08 13:57:32.131561	1d999f47-7b1d-42b2-80cf-e960777c9926	547
552	uri://ed-fi.org/LanguageDescriptor	gez	Geez	Geez	\N	\N	\N	\N	2023-11-08 13:57:32.14285	2023-11-08 13:57:32.142836	243ffeda-5172-4f01-bc21-a710b7a56157	552
553	uri://ed-fi.org/LanguageDescriptor	geo	Georgian	Georgian	\N	\N	\N	\N	2023-11-08 13:57:32.145208	2023-11-08 13:57:32.145177	7355f88b-8e19-46bb-b75b-2d17042e6415	553
557	uri://ed-fi.org/LanguageDescriptor	gmh	German, Middle High (ca.1050-1500)	German, Middle High (ca.1050-1500)	\N	\N	\N	\N	2023-11-08 13:57:32.154821	2023-11-08 13:57:32.154749	e62bcdea-427d-46a4-a8b0-3f9d03806b4b	557
559	uri://ed-fi.org/LanguageDescriptor	guj	Gujarati	Gujarati	\N	\N	\N	\N	2023-11-08 13:57:32.160605	2023-11-08 13:57:32.160571	a159c870-8bb7-4eb1-bda2-1db7f8b95196	559
564	uri://ed-fi.org/LanguageDescriptor	hau	Hausa	Hausa	\N	\N	\N	\N	2023-11-08 13:57:32.171196	2023-11-08 13:57:32.171168	dca7d81c-1ef9-4e19-af93-b02a5af6d137	564
572	uri://ed-fi.org/LanguageDescriptor	ilo	Iloko	Iloko	\N	\N	\N	\N	2023-11-08 13:57:32.195483	2023-11-08 13:57:32.195434	d49671ad-4322-45c6-82ea-2a3986eef48c	572
578	uri://ed-fi.org/LanguageDescriptor	jav	Javanese	Javanese	\N	\N	\N	\N	2023-11-08 13:57:32.207977	2023-11-08 13:57:32.207823	14784d01-2893-4136-9f33-7639dd44a2ca	578
582	uri://ed-fi.org/LanguageDescriptor	kaw	Kawi	Kawi	\N	\N	\N	\N	2023-11-08 13:57:32.216954	2023-11-08 13:57:32.216926	8360c850-6f5e-41b2-bb20-aecc013ad87c	582
584	uri://ed-fi.org/LanguageDescriptor	khi	Khoisan languages	Khoisan languages	\N	\N	\N	\N	2023-11-08 13:57:32.224233	2023-11-08 13:57:32.224214	740f0154-0d01-48c2-87c9-e09daec6fd55	584
589	uri://ed-fi.org/LanguageDescriptor	kor	Korean	Korean	\N	\N	\N	\N	2023-11-08 13:57:32.235635	2023-11-08 13:57:32.235603	15f19e10-6c72-4db8-b36d-67fd5129a5d7	589
593	uri://ed-fi.org/LanguageDescriptor	kut	Kutenai	Kutenai	\N	\N	\N	\N	2023-11-08 13:57:32.246683	2023-11-08 13:57:32.24658	8677ab4c-984f-4691-b86b-f7aad5d32ecc	593
598	uri://ed-fi.org/LanguageDescriptor	loz	Lozi	Lozi	\N	\N	\N	\N	2023-11-08 13:57:32.258364	2023-11-08 13:57:32.258259	d17bfc54-8a0a-4d41-8614-a992dd337837	598
601	uri://ed-fi.org/LanguageDescriptor	lua	Luba-Lulua	Luba-Lulua	\N	\N	\N	\N	2023-11-08 13:57:32.265395	2023-11-08 13:57:32.265304	19502dd7-b20a-4200-a9e1-32883dcda97b	601
603	uri://ed-fi.org/LanguageDescriptor	mad	Madurese	Madurese	\N	\N	\N	\N	2023-11-08 13:57:32.272551	2023-11-08 13:57:32.272513	e0787c4c-5d71-4f9d-b1b0-b83afa22dca8	603
607	uri://ed-fi.org/LanguageDescriptor	mas	Masai	Masai	\N	\N	\N	\N	2023-11-08 13:57:32.282049	2023-11-08 13:57:32.281721	e09b9b6f-39a0-44cf-8c06-aa936b687ee5	607
612	uri://ed-fi.org/LanguageDescriptor	mlg	Malagasy	Malagasy	\N	\N	\N	\N	2023-11-08 13:57:32.291171	2023-11-08 13:57:32.291081	19936a82-9726-44de-8434-cd4fe28dd21e	612
616	uri://ed-fi.org/LanguageDescriptor	mul	Multiple languages	Multiple languages	\N	\N	\N	\N	2023-11-08 13:57:32.29942	2023-11-08 13:57:32.299387	ec57dc04-5b59-406b-b7dc-c50efa500705	616
626	uri://ed-fi.org/LanguageDescriptor	non	Norse, Old	Norse, Old	\N	\N	\N	\N	2023-11-08 13:57:32.319278	2023-11-08 13:57:32.319258	7848fbda-1a46-4722-a816-9e29b20fb22b	626
633	uri://ed-fi.org/LanguageDescriptor	oto	Otomian languages	Otomian languages	\N	\N	\N	\N	2023-11-08 13:57:32.331437	2023-11-08 13:57:32.331422	f08d5d8a-32a6-4f4e-9af5-578c44faa5d5	633
637	uri://ed-fi.org/LanguageDescriptor	peo	Persian, Old (ca.600-400 B.C.)	Persian, Old (ca.600-400 B.C.)	\N	\N	\N	\N	2023-11-08 13:57:32.340695	2023-11-08 13:57:32.340664	188986dc-c3cd-4476-b525-970ade528b2c	637
640	uri://ed-fi.org/LanguageDescriptor	pra	Prakrit languages	Prakrit languages	\N	\N	\N	\N	2023-11-08 13:57:32.345846	2023-11-08 13:57:32.345799	b5c1c8b7-a456-4dc4-b2a0-fe8d7ab83adf	640
647	uri://ed-fi.org/LanguageDescriptor	sat	Santali	Santali	\N	\N	\N	\N	2023-11-08 13:57:32.362269	2023-11-08 13:57:32.362242	50ef7c2a-bb51-409c-a185-b4a0e30bec88	647
490	uri://ed-fi.org/LanguageDescriptor	aka	Akan	Akan	\N	\N	\N	\N	2023-11-08 13:57:32.006259	2023-11-08 13:57:32.006227	e2d4dfc7-86ff-4879-b0ca-4ed01ad9b1b7	490
496	uri://ed-fi.org/LanguageDescriptor	asm	Assamese	Assamese	\N	\N	\N	\N	2023-11-08 13:57:32.019834	2023-11-08 13:57:32.019801	e9f8d4f8-d27c-4fa2-88b3-44c20b1166b2	496
499	uri://ed-fi.org/LanguageDescriptor	ara	Arabic	Arabic	\N	\N	\N	\N	2023-11-08 13:57:32.025541	2023-11-08 13:57:32.025506	8614fb46-91b3-411f-9857-151aaa53c59b	499
502	uri://ed-fi.org/LanguageDescriptor	aze	Azerbaijani	Azerbaijani	\N	\N	\N	\N	2023-11-08 13:57:32.033373	2023-11-08 13:57:32.03329	60fd6213-83c5-410a-b39a-6d4073ccf611	502
505	uri://ed-fi.org/LanguageDescriptor	ban	Balinese	Balinese	\N	\N	\N	\N	2023-11-08 13:57:32.03681	2023-11-08 13:57:32.036795	d457cd49-1d58-46f2-a753-08e1c0c2d104	505
515	uri://ed-fi.org/LanguageDescriptor	cai	Central American Indian languages	Central American Indian languages	\N	\N	\N	\N	2023-11-08 13:57:32.06079	2023-11-08 13:57:32.060751	3bedef5d-a6bc-4d92-b02c-8e925c2545e2	515
518	uri://ed-fi.org/LanguageDescriptor	chi	Chinese	Chinese	\N	\N	\N	\N	2023-11-08 13:57:32.06796	2023-11-08 13:57:32.067931	b485446c-c2ec-4f57-8ad8-e90879aabdf4	518
520	uri://ed-fi.org/LanguageDescriptor	chm	Mari	Mari	\N	\N	\N	\N	2023-11-08 13:57:32.073134	2023-11-08 13:57:32.073117	529e7942-8f2e-4919-a88e-17ec3dbc6c81	520
523	uri://ed-fi.org/LanguageDescriptor	chr	Cherokee	Cherokee	\N	\N	\N	\N	2023-11-08 13:57:32.076609	2023-11-08 13:57:32.076589	5717454a-ff25-48f0-8471-6b57c69a9068	523
525	uri://ed-fi.org/LanguageDescriptor	cor	Cornish	Cornish	\N	\N	\N	\N	2023-11-08 13:57:32.082472	2023-11-08 13:57:32.082455	f700bb35-45d7-4b3b-896c-02fa0e176ce7	525
529	uri://ed-fi.org/LanguageDescriptor	csb	Kashubian	Kashubian	\N	\N	\N	\N	2023-11-08 13:57:32.09092	2023-11-08 13:57:32.090905	fd06d8e2-1ba5-435b-a585-38bf9f45148b	529
532	uri://ed-fi.org/LanguageDescriptor	den	Slave (Athapascan)	Slave (Athapascan)	\N	\N	\N	\N	2023-11-08 13:57:32.09668	2023-11-08 13:57:32.096648	b84ef0d9-00df-411f-9f63-c370bfeff6f6	532
538	uri://ed-fi.org/LanguageDescriptor	efi	Efik	Efik	\N	\N	\N	\N	2023-11-08 13:57:32.109413	2023-11-08 13:57:32.109393	3759e26f-d930-4a6e-9b19-ceb80180f472	538
542	uri://ed-fi.org/LanguageDescriptor	ewe	Ewe	Ewe	\N	\N	\N	\N	2023-11-08 13:57:32.118135	2023-11-08 13:57:32.117772	21453130-b144-4987-ae07-dbfd0887ac86	542
546	uri://ed-fi.org/LanguageDescriptor	fre	French	French	\N	\N	\N	\N	2023-11-08 13:57:32.129366	2023-11-08 13:57:32.12935	af307267-9d46-49c6-81ed-66fd0783ef4f	546
548	uri://ed-fi.org/LanguageDescriptor	ful	Fulah	Fulah	\N	\N	\N	\N	2023-11-08 13:57:32.132852	2023-11-08 13:57:32.132822	ff3e144b-cc0b-4b97-8f00-d63ee4c3edd8	548
550	uri://ed-fi.org/LanguageDescriptor	gaa	Ga	Ga	\N	\N	\N	\N	2023-11-08 13:57:32.136795	2023-11-08 13:57:32.136777	4b3750ee-5e16-4995-8a85-921ece2ce398	550
561	uri://ed-fi.org/LanguageDescriptor	hai	Haida	Haida	\N	\N	\N	\N	2023-11-08 13:57:32.163167	2023-11-08 13:57:32.163138	311fbe57-7066-494d-82d9-b32e43726fbd	561
566	uri://ed-fi.org/LanguageDescriptor	hrv	Croatian	Croatian	\N	\N	\N	\N	2023-11-08 13:57:32.173168	2023-11-08 13:57:32.172971	2fdf9ea0-47b6-426a-b49f-3125462f8c64	566
568	uri://ed-fi.org/LanguageDescriptor	iba	Iban	Iban	\N	\N	\N	\N	2023-11-08 13:57:32.17935	2023-11-08 13:57:32.179321	efca30e8-172d-48ed-af51-47b1e0cb29b6	568
570	uri://ed-fi.org/LanguageDescriptor	iku	Inuktitut	Inuktitut	\N	\N	\N	\N	2023-11-08 13:57:32.190779	2023-11-08 13:57:32.190763	b498ae02-29b9-4f32-9c38-d286a7dd91c8	570
571	uri://ed-fi.org/LanguageDescriptor	ine	Indo-European languages	Indo-European languages	\N	\N	\N	\N	2023-11-08 13:57:32.195183	2023-11-08 13:57:32.195128	17653d46-1f62-40bb-a36c-41a9df2ea8f3	571
576	uri://ed-fi.org/LanguageDescriptor	jrb	Judeo-Arabic	Judeo-Arabic	\N	\N	\N	\N	2023-11-08 13:57:32.206152	2023-11-08 13:57:32.206062	34978775-3a99-4985-bbb5-6a670f07a8c7	576
581	uri://ed-fi.org/LanguageDescriptor	kas	Kashmiri	Kashmiri	\N	\N	\N	\N	2023-11-08 13:57:32.215435	2023-11-08 13:57:32.215402	e7d97c08-39ec-4163-89da-6e75eb2bc2b6	581
585	uri://ed-fi.org/LanguageDescriptor	kin	Kinyarwanda	Kinyarwanda	\N	\N	\N	\N	2023-11-08 13:57:32.226039	2023-11-08 13:57:32.225935	16b5740b-e09f-4771-af87-fa83322d91d8	585
587	uri://ed-fi.org/LanguageDescriptor	kom	Komi	Komi	\N	\N	\N	\N	2023-11-08 13:57:32.231868	2023-11-08 13:57:32.231831	da2e728d-f9da-4a88-a58b-a1b7ad4f9599	587
591	uri://ed-fi.org/LanguageDescriptor	krl	Karelian	Karelian	\N	\N	\N	\N	2023-11-08 13:57:32.242301	2023-11-08 13:57:32.241759	f757a3a9-fdd5-4a6c-92d8-bb50bc8224b9	591
597	uri://ed-fi.org/LanguageDescriptor	lit	Lithuanian	Lithuanian	\N	\N	\N	\N	2023-11-08 13:57:32.257729	2023-11-08 13:57:32.257395	b6c712b3-0922-464f-ba6b-ececf0644f68	597
604	uri://ed-fi.org/LanguageDescriptor	mah	Marshallese	Marshallese	\N	\N	\N	\N	2023-11-08 13:57:32.27293	2023-11-08 13:57:32.27288	30ce996e-f8d3-48ac-98d2-2305c72b1a8a	604
608	uri://ed-fi.org/LanguageDescriptor	map	Austronesian languages	Austronesian languages	\N	\N	\N	\N	2023-11-08 13:57:32.283465	2023-11-08 13:57:32.283449	9d4524e8-c835-4849-b542-a6aaa0da8b10	608
613	uri://ed-fi.org/LanguageDescriptor	mno	Manobo languages	Manobo languages	\N	\N	\N	\N	2023-11-08 13:57:32.291975	2023-11-08 13:57:32.291927	4c653bb2-7ecc-4db9-82f0-d2efe27013af	613
618	uri://ed-fi.org/LanguageDescriptor	mus	Creek	Creek	\N	\N	\N	\N	2023-11-08 13:57:32.300543	2023-11-08 13:57:32.300501	bf8d5d48-c575-4881-ac88-20ea25e0787e	618
621	uri://ed-fi.org/LanguageDescriptor	nai	North American Indian languages	North American Indian languages	\N	\N	\N	\N	2023-11-08 13:57:32.307551	2023-11-08 13:57:32.307523	26d65172-59dd-4e2e-8d6c-dc8e315c7a13	621
625	uri://ed-fi.org/LanguageDescriptor	niu	Niuean	Niuean	\N	\N	\N	\N	2023-11-08 13:57:32.317653	2023-11-08 13:57:32.317623	da1f361a-893b-4cc2-bd07-2eacf7e61614	625
628	uri://ed-fi.org/LanguageDescriptor	nub	Nubian languages	Nubian languages	\N	\N	\N	\N	2023-11-08 13:57:32.321562	2023-11-08 13:57:32.321532	4ec9d636-be21-453a-aafd-e4bd9f0bd39b	628
632	uri://ed-fi.org/LanguageDescriptor	oji	Ojibwa	Ojibwa	\N	\N	\N	\N	2023-11-08 13:57:32.329582	2023-11-08 13:57:32.329555	0d6d4c5e-540b-4fc1-b19f-7e3398378310	632
636	uri://ed-fi.org/LanguageDescriptor	phi	Philippine languages	Philippine languages	\N	\N	\N	\N	2023-11-08 13:57:32.337961	2023-11-08 13:57:32.33793	45bf1897-c540-46ff-94b8-eaae58172b2a	636
639	uri://ed-fi.org/LanguageDescriptor	pon	Pohnpeian	Pohnpeian	\N	\N	\N	\N	2023-11-08 13:57:32.343284	2023-11-08 13:57:32.34301	10ad24e6-f6c3-444d-825c-d708c21d682f	639
642	uri://ed-fi.org/LanguageDescriptor	sad	Sandawe	Sandawe	\N	\N	\N	\N	2023-11-08 13:57:32.351383	2023-11-08 13:57:32.351352	a078414f-3208-4e43-924c-d3d6ff03b0b3	642
644	uri://ed-fi.org/LanguageDescriptor	sah	Yakut	Yakut	\N	\N	\N	\N	2023-11-08 13:57:32.354797	2023-11-08 13:57:32.354736	e4de936a-f836-4fe5-8ac7-ee81c0406ef6	644
646	uri://ed-fi.org/LanguageDescriptor	sal	Salishan languages	Salishan languages	\N	\N	\N	\N	2023-11-08 13:57:32.358716	2023-11-08 13:57:32.35845	8443abc0-35ac-4a9e-b890-4f3d2b15ef88	646
649	uri://ed-fi.org/LanguageDescriptor	sco	Scots	Scots	\N	\N	\N	\N	2023-11-08 13:57:32.363558	2023-11-08 13:57:32.36353	d8ec56c9-7555-4fb1-9079-4600e92c5655	649
652	uri://ed-fi.org/LanguageDescriptor	sio	Siouan languages	Siouan languages	\N	\N	\N	\N	2023-11-08 13:57:32.370192	2023-11-08 13:57:32.370173	3751bfc5-6dc1-444c-8a6a-6d9a117eb9b2	652
656	uri://ed-fi.org/LanguageDescriptor	sme	Northern Sami	Northern Sami	\N	\N	\N	\N	2023-11-08 13:57:32.378818	2023-11-08 13:57:32.37879	f86cb55a-1bb9-43c7-839d-ae08a87f526c	656
556	uri://ed-fi.org/LanguageDescriptor	grc	Greek, Ancient (to 1453)	Greek, Ancient (to 1453)	\N	\N	\N	\N	2023-11-08 13:57:32.153996	2023-11-08 13:57:32.153932	a57d40b3-21fe-46de-b990-f93286d8dccd	556
558	uri://ed-fi.org/LanguageDescriptor	got	Gothic	Gothic	\N	\N	\N	\N	2023-11-08 13:57:32.157426	2023-11-08 13:57:32.157355	9ec798ec-16e2-440a-9fd9-2dcc7087ce15	558
563	uri://ed-fi.org/LanguageDescriptor	hil	Hiligaynon	Hiligaynon	\N	\N	\N	\N	2023-11-08 13:57:32.168236	2023-11-08 13:57:32.168204	0caa0e2f-7be7-419d-b1f0-c91787363059	563
567	uri://ed-fi.org/LanguageDescriptor	hun	Hungarian	Hungarian	\N	\N	\N	\N	2023-11-08 13:57:32.1759	2023-11-08 13:57:32.17582	30fa5c5a-f37d-4e3e-9afd-31f6110ffd6c	567
574	uri://ed-fi.org/LanguageDescriptor	ipk	Inupiaq	Inupiaq	\N	\N	\N	\N	2023-11-08 13:57:32.198033	2023-11-08 13:57:32.19795	4236868d-cb6d-41a6-9a24-46ba7cdbc2d0	574
577	uri://ed-fi.org/LanguageDescriptor	iro	Iroquoian languages	Iroquoian languages	\N	\N	\N	\N	2023-11-08 13:57:32.206701	2023-11-08 13:57:32.20668	2cc300ff-0a41-4553-9c93-967827e5450a	577
579	uri://ed-fi.org/LanguageDescriptor	kan	Kannada	Kannada	\N	\N	\N	\N	2023-11-08 13:57:32.213477	2023-11-08 13:57:32.213458	9a95f4e2-82c1-4a54-abfa-2e2a5b56b18a	579
586	uri://ed-fi.org/LanguageDescriptor	kmb	Kimbundu	Kimbundu	\N	\N	\N	\N	2023-11-08 13:57:32.228209	2023-11-08 13:57:32.228082	6dca07b6-de55-478b-b22f-3eb96670058b	586
592	uri://ed-fi.org/LanguageDescriptor	kum	Kumyk	Kumyk	\N	\N	\N	\N	2023-11-08 13:57:32.242358	2023-11-08 13:57:32.242327	c7ef0671-de83-4cdc-98d8-2e99adce5806	592
594	uri://ed-fi.org/LanguageDescriptor	lah	Lahnda	Lahnda	\N	\N	\N	\N	2023-11-08 13:57:32.24861	2023-11-08 13:57:32.248576	c6686d4c-b82c-4397-8c18-abbce3bced74	594
596	uri://ed-fi.org/LanguageDescriptor	lav	Latvian	Latvian	\N	\N	\N	\N	2023-11-08 13:57:32.254837	2023-11-08 13:57:32.254819	7da20ae6-c246-4650-b678-9b65ce3dc370	596
600	uri://ed-fi.org/LanguageDescriptor	lun	Lunda	Lunda	\N	\N	\N	\N	2023-11-08 13:57:32.265182	2023-11-08 13:57:32.265131	4ef78dc3-6adb-450c-9188-63155da2ffae	600
605	uri://ed-fi.org/LanguageDescriptor	mak	Makasar	Makasar	\N	\N	\N	\N	2023-11-08 13:57:32.275742	2023-11-08 13:57:32.275704	2477ae58-0300-4468-8802-25b4897e8fcf	605
610	uri://ed-fi.org/LanguageDescriptor	men	Mende	Mende	\N	\N	\N	\N	2023-11-08 13:57:32.286293	2023-11-08 13:57:32.286251	73afcdf2-35b8-49f7-afa7-4cacb9787a3a	610
614	uri://ed-fi.org/LanguageDescriptor	mnc	Manchu	Manchu	\N	\N	\N	\N	2023-11-08 13:57:32.292639	2023-11-08 13:57:32.292589	679e1a51-00ac-4bfc-87f3-96baee38dd8b	614
617	uri://ed-fi.org/LanguageDescriptor	mwr	Marwari	Marwari	\N	\N	\N	\N	2023-11-08 13:57:32.300151	2023-11-08 13:57:32.300117	2aa9213f-52b2-4856-970b-2ebf1ca27cbe	617
620	uri://ed-fi.org/LanguageDescriptor	nau	Nauru	Nauru	\N	\N	\N	\N	2023-11-08 13:57:32.307045	2023-11-08 13:57:32.307017	777c6a55-85b7-48ae-93ab-642c25027dc3	620
623	uri://ed-fi.org/LanguageDescriptor	nep	Nepali	Nepali	\N	\N	\N	\N	2023-11-08 13:57:32.311433	2023-11-08 13:57:32.311403	51d54ed4-a250-45c4-ba9d-5c0eb63dd70d	623
627	uri://ed-fi.org/LanguageDescriptor	nqo	N'Ko	N'Ko	\N	\N	\N	\N	2023-11-08 13:57:32.318275	2023-11-08 13:57:32.318246	61136543-31b6-4c7d-ad1d-8879d2a89944	627
630	uri://ed-fi.org/LanguageDescriptor	nzi	Nzima	Nzima	\N	\N	\N	\N	2023-11-08 13:57:32.326143	2023-11-08 13:57:32.326113	b6c97a8d-715c-455c-9011-0664a4bb09ec	630
631	uri://ed-fi.org/LanguageDescriptor	orm	Oromo	Oromo	\N	\N	\N	\N	2023-11-08 13:57:32.329195	2023-11-08 13:57:32.329127	48c69959-cdc8-409a-8867-15862209222d	631
635	uri://ed-fi.org/LanguageDescriptor	pap	Papiamento	Papiamento	\N	\N	\N	\N	2023-11-08 13:57:32.335678	2023-11-08 13:57:32.335648	b11d1bd4-15df-4ad7-9fa6-0f5a2cd515f6	635
638	uri://ed-fi.org/LanguageDescriptor	pli	Pali	Pali	\N	\N	\N	\N	2023-11-08 13:57:32.342222	2023-11-08 13:57:32.34218	381eba6c-3424-4680-961a-2d9e708b1ca4	638
641	uri://ed-fi.org/LanguageDescriptor	raj	Rajasthani	Rajasthani	\N	\N	\N	\N	2023-11-08 13:57:32.347242	2023-11-08 13:57:32.34709	6dece2d6-ab6b-4fa5-869d-3ea6b6f7babe	641
643	uri://ed-fi.org/LanguageDescriptor	rum	Romanian	Romanian	\N	\N	\N	\N	2023-11-08 13:57:32.353529	2023-11-08 13:57:32.353499	6af3de35-952b-4023-88bf-acefdcfaa37d	643
648	uri://ed-fi.org/LanguageDescriptor	san	Sanskrit	Sanskrit	\N	\N	\N	\N	2023-11-08 13:57:32.362464	2023-11-08 13:57:32.361787	8afa11cc-0c7b-4388-b28e-3dffab7343c9	648
650	uri://ed-fi.org/LanguageDescriptor	sid	Sidamo	Sidamo	\N	\N	\N	\N	2023-11-08 13:57:32.369468	2023-11-08 13:57:32.369436	922d9650-8724-4457-9c06-cdc67e88f741	650
655	uri://ed-fi.org/LanguageDescriptor	slv	Slovenian	Slovenian	\N	\N	\N	\N	2023-11-08 13:57:32.378051	2023-11-08 13:57:32.378034	212ae519-7ecf-49e0-bda1-c5d12f15c039	655
658	uri://ed-fi.org/LanguageDescriptor	smo	Samoan	Samoan	\N	\N	\N	\N	2023-11-08 13:57:32.383315	2023-11-08 13:57:32.383298	a7b79531-c3dc-4872-ac6f-f4e18467249d	658
659	uri://ed-fi.org/LanguageDescriptor	som	Somali	Somali	\N	\N	\N	\N	2023-11-08 13:57:32.386722	2023-11-08 13:57:32.386673	e8f5c8b2-2649-4624-b84b-c25ad1fb6bc1	659
669	uri://ed-fi.org/LanguageDescriptor	syc	Classical Syriac	Classical Syriac	\N	\N	\N	\N	2023-11-08 13:57:32.405551	2023-11-08 13:57:32.405419	5d6f0043-120c-4c2c-bca3-c7e711f4d49d	669
671	uri://ed-fi.org/LanguageDescriptor	tel	Telugu	Telugu	\N	\N	\N	\N	2023-11-08 13:57:32.411316	2023-11-08 13:57:32.410841	c5ad0eb0-91e2-49a4-aff7-f0caeeaa35a2	671
676	uri://ed-fi.org/LanguageDescriptor	tig	Tigre	Tigre	\N	\N	\N	\N	2023-11-08 13:57:32.419917	2023-11-08 13:57:32.419902	b3448fea-6f89-4275-8ea9-8c71753bd51c	676
678	uri://ed-fi.org/LanguageDescriptor	tmh	Tamashek	Tamashek	\N	\N	\N	\N	2023-11-08 13:57:32.425783	2023-11-08 13:57:32.425723	11292688-fdce-4493-b794-aa9ba550fd2e	678
681	uri://ed-fi.org/LanguageDescriptor	tsi	Tsimshian	Tsimshian	\N	\N	\N	\N	2023-11-08 13:57:32.432175	2023-11-08 13:57:32.432097	82eac5f2-dfb1-4c5c-b14d-051b508ea42c	681
684	uri://ed-fi.org/LanguageDescriptor	tvl	Tuvalu	Tuvalu	\N	\N	\N	\N	2023-11-08 13:57:32.440381	2023-11-08 13:57:32.440366	37ceb820-8454-4158-8edf-06b4c1dad5ee	684
690	uri://ed-fi.org/LanguageDescriptor	ven	Venda	Venda	\N	\N	\N	\N	2023-11-08 13:57:32.45312	2023-11-08 13:57:32.452824	a2e2d0b5-6923-4781-a979-e4507e10ca65	690
694	uri://ed-fi.org/LanguageDescriptor	wak	Wakashan languages	Wakashan languages	\N	\N	\N	\N	2023-11-08 13:57:32.460467	2023-11-08 13:57:32.460398	3df3b11f-b8e1-44f1-b853-f0488aa7642b	694
705	uri://ed-fi.org/LanguageDescriptor	ain	Ainu	Ainu	\N	\N	\N	\N	2023-11-08 13:57:32.485712	2023-11-08 13:57:32.485699	4298c389-ec6b-4401-ba4e-411a3cc54978	705
706	uri://ed-fi.org/LanguageDescriptor	ale	Aleut	Aleut	\N	\N	\N	\N	2023-11-08 13:57:32.490673	2023-11-08 13:57:32.490645	3cd82168-32bf-4b32-abf1-68d9e979e25f	706
710	uri://ed-fi.org/LanguageDescriptor	apa	Apache languages	Apache languages	\N	\N	\N	\N	2023-11-08 13:57:32.502576	2023-11-08 13:57:32.502529	e6d75be3-3072-42ed-bad9-457aa27d9567	710
718	uri://ed-fi.org/LanguageDescriptor	baq	Basque	Basque	\N	\N	\N	\N	2023-11-08 13:57:32.521623	2023-11-08 13:57:32.521586	d5c36c42-9eb8-4a13-a6f2-b1dc017d874d	718
721	uri://ed-fi.org/LanguageDescriptor	bat	Baltic languages	Baltic languages	\N	\N	\N	\N	2023-11-08 13:57:32.52528	2023-11-08 13:57:32.525249	eab8da40-39f9-4340-85bc-fd66f04cf1b3	721
727	uri://ed-fi.org/LanguageDescriptor	bra	Braj	Braj	\N	\N	\N	\N	2023-11-08 13:57:32.543459	2023-11-08 13:57:32.543432	2d9db82a-2053-4bcb-a02c-7a6ef8a9d0e6	727
731	uri://ed-fi.org/LanguageDescriptor	car	Galibi Carib	Galibi Carib	\N	\N	\N	\N	2023-11-08 13:57:32.553879	2023-11-08 13:57:32.553584	be651134-1d9d-44da-a3eb-1d7e6fd2b3ff	731
565	uri://ed-fi.org/LanguageDescriptor	hin	Hindi	Hindi	\N	\N	\N	\N	2023-11-08 13:57:32.172789	2023-11-08 13:57:32.172759	eb2f3d74-9ba3-4e51-810b-a514ad0ef68e	565
569	uri://ed-fi.org/LanguageDescriptor	ice	Icelandic	Icelandic	\N	\N	\N	\N	2023-11-08 13:57:32.18846	2023-11-08 13:57:32.188313	29973af9-83b9-40d3-839f-db1b4a04de6a	569
573	uri://ed-fi.org/LanguageDescriptor	inc	Indic languages	Indic languages	\N	\N	\N	\N	2023-11-08 13:57:32.196087	2023-11-08 13:57:32.196025	bf4aa95e-a509-4ce3-aa92-a94b6c92147c	573
575	uri://ed-fi.org/LanguageDescriptor	jpn	Japanese	Japanese	\N	\N	\N	\N	2023-11-08 13:57:32.205357	2023-11-08 13:57:32.205315	cbbce1d9-8f78-4ffa-9d4d-62e961b3d698	575
580	uri://ed-fi.org/LanguageDescriptor	kab	Kabyle	Kabyle	\N	\N	\N	\N	2023-11-08 13:57:32.213728	2023-11-08 13:57:32.213698	4f953099-e1b6-4e10-aa78-c30185dcdd3b	580
583	uri://ed-fi.org/LanguageDescriptor	kbd	Kabardian	Kabardian	\N	\N	\N	\N	2023-11-08 13:57:32.22359	2023-11-08 13:57:32.223554	68b99993-c1de-4b46-bf2d-e985a1a7c03e	583
588	uri://ed-fi.org/LanguageDescriptor	kpe	Kpelle	Kpelle	\N	\N	\N	\N	2023-11-08 13:57:32.234907	2023-11-08 13:57:32.234872	8dee08f7-4908-4aac-b6e5-adb1604a0271	588
590	uri://ed-fi.org/LanguageDescriptor	kru	Kurukh	Kurukh	\N	\N	\N	\N	2023-11-08 13:57:32.240157	2023-11-08 13:57:32.240116	7bdcb09c-7111-478f-8c56-6ab72ac0fad9	590
595	uri://ed-fi.org/LanguageDescriptor	lao	Lao	Lao	\N	\N	\N	\N	2023-11-08 13:57:32.251248	2023-11-08 13:57:32.251219	c7fd6b2d-5987-4c49-a892-125a96b9c70e	595
599	uri://ed-fi.org/LanguageDescriptor	lug	Ganda	Ganda	\N	\N	\N	\N	2023-11-08 13:57:32.264104	2023-11-08 13:57:32.263437	dd36e45a-c8f7-4758-bd97-c59f1e6c880e	599
602	uri://ed-fi.org/LanguageDescriptor	lus	Lushai	Lushai	\N	\N	\N	\N	2023-11-08 13:57:32.26812	2023-11-08 13:57:32.268089	01a6592a-3def-43b4-a982-421392be2ad3	602
606	uri://ed-fi.org/LanguageDescriptor	man	Mandingo	Mandingo	\N	\N	\N	\N	2023-11-08 13:57:32.278135	2023-11-08 13:57:32.278105	a14372f5-894d-4c85-a768-83ab3c3ff0a6	606
609	uri://ed-fi.org/LanguageDescriptor	mdf	Moksha	Moksha	\N	\N	\N	\N	2023-11-08 13:57:32.284078	2023-11-08 13:57:32.28405	e7aea217-2083-4a6d-b873-fd806f531589	609
611	uri://ed-fi.org/LanguageDescriptor	mis	Uncoded languages	Uncoded languages	\N	\N	\N	\N	2023-11-08 13:57:32.290937	2023-11-08 13:57:32.290875	1821fc5a-82cf-4195-82aa-422d70e0af21	611
615	uri://ed-fi.org/LanguageDescriptor	mon	Mongolian	Mongolian	\N	\N	\N	\N	2023-11-08 13:57:32.298274	2023-11-08 13:57:32.298241	01575de1-1d04-442b-8204-e63a0bf8d5cc	615
619	uri://ed-fi.org/LanguageDescriptor	myv	Erzya	Erzya	\N	\N	\N	\N	2023-11-08 13:57:32.305075	2023-11-08 13:57:32.304962	cb0a4f61-f5ca-4743-9de5-f875c12726d0	619
622	uri://ed-fi.org/LanguageDescriptor	ndo	Ndonga	Ndonga	\N	\N	\N	\N	2023-11-08 13:57:32.308536	2023-11-08 13:57:32.308523	b0a3ded3-7040-451c-9bc3-622490e3a9a5	622
624	uri://ed-fi.org/LanguageDescriptor	nia	Nias	Nias	\N	\N	\N	\N	2023-11-08 13:57:32.313888	2023-11-08 13:57:32.313858	59058d5f-ceee-4892-8e39-d125ae798243	624
629	uri://ed-fi.org/LanguageDescriptor	nyn	Nyankole	Nyankole	\N	\N	\N	\N	2023-11-08 13:57:32.324802	2023-11-08 13:57:32.324786	5fe086b8-28d9-4d8c-a939-a4ab82316117	629
634	uri://ed-fi.org/LanguageDescriptor	pag	Pangasinan	Pangasinan	\N	\N	\N	\N	2023-11-08 13:57:32.335293	2023-11-08 13:57:32.33514	0cc1898c-cb09-4046-b60d-c6b0e434ec88	634
645	uri://ed-fi.org/LanguageDescriptor	roh	Romansh	Romansh	\N	\N	\N	\N	2023-11-08 13:57:32.356011	2023-11-08 13:57:32.355982	32f8cf7f-b64f-4c35-810a-14690255f613	645
653	uri://ed-fi.org/LanguageDescriptor	sgn	Sign Languages	Sign Languages	\N	\N	\N	\N	2023-11-08 13:57:32.371075	2023-11-08 13:57:32.371061	9cfc734d-bf5e-44af-b7a6-21b96c70b269	653
657	uri://ed-fi.org/LanguageDescriptor	smj	Lule Sami	Lule Sami	\N	\N	\N	\N	2023-11-08 13:57:32.37929	2023-11-08 13:57:32.379262	f17210b4-e22d-4c3e-b2c9-108b77bad109	657
662	uri://ed-fi.org/LanguageDescriptor	sot	Sotho, Southern	Sotho, Southern	\N	\N	\N	\N	2023-11-08 13:57:32.391263	2023-11-08 13:57:32.391237	1313d862-4646-4b34-bbd9-a0dd6a57bf15	662
667	uri://ed-fi.org/LanguageDescriptor	suk	Sukuma	Sukuma	\N	\N	\N	\N	2023-11-08 13:57:32.401714	2023-11-08 13:57:32.401623	c456b7cf-377a-4645-bc3a-d89bab2d4a2d	667
686	uri://ed-fi.org/LanguageDescriptor	tyv	Tuvinian	Tuvinian	\N	\N	\N	\N	2023-11-08 13:57:32.444824	2023-11-08 13:57:32.444787	90894d91-0138-46d9-a1f7-082d9b6e32b1	686
695	uri://ed-fi.org/LanguageDescriptor	wln	Walloon	Walloon	\N	\N	\N	\N	2023-11-08 13:57:32.460719	2023-11-08 13:57:32.460705	5da44588-914f-464d-948e-3f14a641657d	695
701	uri://ed-fi.org/LanguageDescriptor	zun	Zuni	Zuni	\N	\N	\N	\N	2023-11-08 13:57:32.476451	2023-11-08 13:57:32.476438	58768814-4aa0-4b86-b4ac-58e3ca022550	701
702	uri://ed-fi.org/LanguageDescriptor	abk	Abkhazian	Abkhazian	\N	\N	\N	\N	2023-11-08 13:57:32.482976	2023-11-08 13:57:32.482955	0800acb7-b444-40a9-a42c-0bb5b21fb1ef	702
708	uri://ed-fi.org/LanguageDescriptor	alt	Southern Altai	Southern Altai	\N	\N	\N	\N	2023-11-08 13:57:32.493375	2023-11-08 13:57:32.493345	08af7902-95a5-42f5-9a5c-95855d58a04f	708
713	uri://ed-fi.org/LanguageDescriptor	arw	Arawak	Arawak	\N	\N	\N	\N	2023-11-08 13:57:32.506824	2023-11-08 13:57:32.50636	0fe5ce69-38db-4ecc-b271-5f8d690b7b2a	713
716	uri://ed-fi.org/LanguageDescriptor	aus	Australian languages	Australian languages	\N	\N	\N	\N	2023-11-08 13:57:32.512608	2023-11-08 13:57:32.512506	b51698dd-a634-44be-ae49-5b42725d0876	716
720	uri://ed-fi.org/LanguageDescriptor	bad	Banda languages	Banda languages	\N	\N	\N	\N	2023-11-08 13:57:32.523265	2023-11-08 13:57:32.523244	2a728286-704b-4053-9b46-1c13703a9dd4	720
723	uri://ed-fi.org/LanguageDescriptor	ben	Bengali	Bengali	\N	\N	\N	\N	2023-11-08 13:57:32.534267	2023-11-08 13:57:32.53425	f83ef898-99a2-4bd0-971f-89af9fefcd8e	723
729	uri://ed-fi.org/LanguageDescriptor	bnt	Bantu languages	Bantu languages	\N	\N	\N	\N	2023-11-08 13:57:32.545034	2023-11-08 13:57:32.544459	3a609df3-7563-4e4b-8d05-86b2d3c39d65	729
730	uri://ed-fi.org/LanguageDescriptor	bug	Buginese	Buginese	\N	\N	\N	\N	2023-11-08 13:57:32.551032	2023-11-08 13:57:32.550988	3eb3ee92-b64f-46cb-b206-930b7d47ba81	730
732	uri://ed-fi.org/LanguageDescriptor	cau	Caucasian languages	Caucasian languages	\N	\N	\N	\N	2023-11-08 13:57:32.557779	2023-11-08 13:57:32.557462	18200c1c-b382-4377-8de5-a182470b30de	732
739	uri://ed-fi.org/LanguageDescriptor	chk	Chuukese	Chuukese	\N	\N	\N	\N	2023-11-08 13:57:32.571829	2023-11-08 13:57:32.571729	18a17cdb-f0b9-47d4-8c44-4f1dc76b0eb4	739
740	uri://ed-fi.org/LanguageDescriptor	chy	Cheyenne	Cheyenne	\N	\N	\N	\N	2023-11-08 13:57:32.57733	2023-11-08 13:57:32.577284	4608daf6-dcc7-45f6-acd1-6caeac87ae8c	740
741	uri://ed-fi.org/LanguageDescriptor	cpf	Creoles and pidgins, French-based	Creoles and pidgins, French-based	\N	\N	\N	\N	2023-11-08 13:57:32.579521	2023-11-08 13:57:32.579492	a0a89b2c-3495-4ce7-bcce-e1082afb1d34	741
743	uri://ed-fi.org/LanguageDescriptor	cop	Coptic	Coptic	\N	\N	\N	\N	2023-11-08 13:57:32.582542	2023-11-08 13:57:32.582512	ca57df9d-4f4a-43ac-8e6d-b05c30a2a7ce	743
746	uri://ed-fi.org/LanguageDescriptor	cus	Cushitic languages	Cushitic languages	\N	\N	\N	\N	2023-11-08 13:57:32.5903	2023-11-08 13:57:32.590285	fecab2a2-5815-4ad8-b846-453e3e29f50d	746
749	uri://ed-fi.org/LanguageDescriptor	dgr	Dogrib	Dogrib	\N	\N	\N	\N	2023-11-08 13:57:32.600669	2023-11-08 13:57:32.600633	c7c9f215-df38-4a56-a62d-4658bb460e51	749
752	uri://ed-fi.org/LanguageDescriptor	dzo	Dzongkha	Dzongkha	\N	\N	\N	\N	2023-11-08 13:57:32.607406	2023-11-08 13:57:32.607032	eb270b80-9a5c-4b77-bdb4-b977503ec516	752
651	uri://ed-fi.org/LanguageDescriptor	sem	Semitic languages	Semitic languages	\N	\N	\N	\N	2023-11-08 13:57:32.369748	2023-11-08 13:57:32.369721	9f1cb3d6-f7ed-4e2f-866f-a0965d1b3e86	651
654	uri://ed-fi.org/LanguageDescriptor	sla	Slavic languages	Slavic languages	\N	\N	\N	\N	2023-11-08 13:57:32.376842	2023-11-08 13:57:32.376809	eb1ce368-f9db-434b-a887-240c6cac0f1e	654
663	uri://ed-fi.org/LanguageDescriptor	srp	Serbian	Serbian	\N	\N	\N	\N	2023-11-08 13:57:32.39332	2023-11-08 13:57:32.393287	b2668ecd-1c1e-4baf-ae59-55421c65def0	663
665	uri://ed-fi.org/LanguageDescriptor	ssa	Nilo-Saharan languages	Nilo-Saharan languages	\N	\N	\N	\N	2023-11-08 13:57:32.398221	2023-11-08 13:57:32.397766	1f4b63e4-6119-4e83-85ab-f6b501aa80f0	665
666	uri://ed-fi.org/LanguageDescriptor	sus	Susu	Susu	\N	\N	\N	\N	2023-11-08 13:57:32.400869	2023-11-08 13:57:32.400853	92f28063-fce1-4877-ab40-ff28394f068a	666
672	uri://ed-fi.org/LanguageDescriptor	tam	Tamil	Tamil	\N	\N	\N	\N	2023-11-08 13:57:32.411358	2023-11-08 13:57:32.411343	a9f827ca-653c-44a2-a9d1-00e5e7f23a18	672
675	uri://ed-fi.org/LanguageDescriptor	tgk	Tajik	Tajik	\N	\N	\N	\N	2023-11-08 13:57:32.418529	2023-11-08 13:57:32.41849	9e9b7aac-82f4-482b-9b1a-d0cde672ab01	675
682	uri://ed-fi.org/LanguageDescriptor	tum	Tumbuka	Tumbuka	\N	\N	\N	\N	2023-11-08 13:57:32.43431	2023-11-08 13:57:32.434245	35eaea85-227b-4dd8-8f35-36a408214dbe	682
685	uri://ed-fi.org/LanguageDescriptor	uga	Ugaritic	Ugaritic	\N	\N	\N	\N	2023-11-08 13:57:32.440722	2023-11-08 13:57:32.440706	20072619-e916-4f54-aede-4af7f79d04c5	685
688	uri://ed-fi.org/LanguageDescriptor	ukr	Ukrainian	Ukrainian	\N	\N	\N	\N	2023-11-08 13:57:32.445984	2023-11-08 13:57:32.445941	9ac9cc28-c699-4598-b746-5bff2efb0893	688
689	uri://ed-fi.org/LanguageDescriptor	uzb	Uzbek	Uzbek	\N	\N	\N	\N	2023-11-08 13:57:32.451168	2023-11-08 13:57:32.451002	b34e8c40-b6fb-4cb6-aeab-4f9dea347fd1	689
691	uri://ed-fi.org/LanguageDescriptor	vol	Volapük	Volapük	\N	\N	\N	\N	2023-11-08 13:57:32.454792	2023-11-08 13:57:32.454779	47bfb277-d066-4539-a36e-6204ac910957	691
692	uri://ed-fi.org/LanguageDescriptor	wel	Welsh	Welsh	\N	\N	\N	\N	2023-11-08 13:57:32.458182	2023-11-08 13:57:32.457677	4f639426-64fd-4631-9982-465e1a0de545	692
697	uri://ed-fi.org/LanguageDescriptor	yao	Yao	Yao	\N	\N	\N	\N	2023-11-08 13:57:32.466467	2023-11-08 13:57:32.466137	b02b350f-9209-4bd5-adcf-beafc8f87cd2	697
700	uri://ed-fi.org/LanguageDescriptor	zgh	Standard Moroccan Tamazight	Standard Moroccan Tamazight	\N	\N	\N	\N	2023-11-08 13:57:32.474999	2023-11-08 13:57:32.474968	bdc0f378-cc65-4f32-b00f-440d361be5ec	700
704	uri://ed-fi.org/LanguageDescriptor	ach	Acoli	Acoli	\N	\N	\N	\N	2023-11-08 13:57:32.483795	2023-11-08 13:57:32.483686	e66d6394-02a0-4447-a6d0-8384297ab9d5	704
707	uri://ed-fi.org/LanguageDescriptor	akk	Akkadian	Akkadian	\N	\N	\N	\N	2023-11-08 13:57:32.490812	2023-11-08 13:57:32.490387	6ccd55ac-2f3a-4c3b-bf59-380887b2e469	707
709	uri://ed-fi.org/LanguageDescriptor	arm	Armenian	Armenian	\N	\N	\N	\N	2023-11-08 13:57:32.500361	2023-11-08 13:57:32.500312	49248463-1b0b-4244-86ac-3dba9865b4c7	709
711	uri://ed-fi.org/LanguageDescriptor	arp	Arapaho	Arapaho	\N	\N	\N	\N	2023-11-08 13:57:32.50485	2023-11-08 13:57:32.504836	07814573-0d7f-41d8-861e-4f7525d58b3c	711
714	uri://ed-fi.org/LanguageDescriptor	aym	Aymara	Aymara	\N	\N	\N	\N	2023-11-08 13:57:32.513145	2023-11-08 13:57:32.513129	5b83e0b0-d618-4996-9d09-5b6a9a04d398	714
717	uri://ed-fi.org/LanguageDescriptor	bam	Bambara	Bambara	\N	\N	\N	\N	2023-11-08 13:57:32.518862	2023-11-08 13:57:32.518831	bc047bad-b92e-4562-b07a-f559d751cfbb	717
719	uri://ed-fi.org/LanguageDescriptor	bak	Bashkir	Bashkir	\N	\N	\N	\N	2023-11-08 13:57:32.521892	2023-11-08 13:57:32.521864	ee06ca55-a89a-4d3c-aa4a-ab3fe150c225	719
724	uri://ed-fi.org/LanguageDescriptor	bho	Bhojpuri	Bhojpuri	\N	\N	\N	\N	2023-11-08 13:57:32.535381	2023-11-08 13:57:32.535132	53a86c10-59e6-4d29-9aff-0d75c42c24a1	724
726	uri://ed-fi.org/LanguageDescriptor	bis	Bislama	Bislama	\N	\N	\N	\N	2023-11-08 13:57:32.541717	2023-11-08 13:57:32.541656	d880e537-0735-407e-8b44-939bed7b7ac4	726
733	uri://ed-fi.org/LanguageDescriptor	bur	Burmese	Burmese	\N	\N	\N	\N	2023-11-08 13:57:32.558141	2023-11-08 13:57:32.558088	3143c1f6-048a-4eb0-b6ab-3970db7e0918	733
735	uri://ed-fi.org/LanguageDescriptor	cel	Celtic languages	Celtic languages	\N	\N	\N	\N	2023-11-08 13:57:32.561891	2023-11-08 13:57:32.561828	d293f1f0-347e-4364-b7c0-8804fe8c4d48	735
738	uri://ed-fi.org/LanguageDescriptor	chn	Chinook jargon	Chinook jargon	\N	\N	\N	\N	2023-11-08 13:57:32.571049	2023-11-08 13:57:32.570968	5a368328-d52a-4ca1-a6b1-4d2eae1099a4	738
744	uri://ed-fi.org/LanguageDescriptor	cre	Cree	Cree	\N	\N	\N	\N	2023-11-08 13:57:32.585094	2023-11-08 13:57:32.585066	b086b7a9-d5b2-4c37-9a3c-aaaee852cad3	744
755	uri://ed-fi.org/LanguageDescriptor	dua	Duala	Duala	\N	\N	\N	\N	2023-11-08 13:57:32.611473	2023-11-08 13:57:32.611341	4916bb4f-fc60-4aea-ab26-b895cb70b831	755
756	uri://ed-fi.org/LanguageDescriptor	ewo	Ewondo	Ewondo	\N	\N	\N	\N	2023-11-08 13:57:32.616149	2023-11-08 13:57:32.615887	e133f66b-703b-4a24-8a7d-b40e71e488f8	756
760	uri://ed-fi.org/LanguageDescriptor	fij	Fijian	Fijian	\N	\N	\N	\N	2023-11-08 13:57:32.625645	2023-11-08 13:57:32.625599	b8364382-ce95-4eed-a379-12fd0ab6a169	760
762	uri://ed-fi.org/LanguageDescriptor	fon	Fon	Fon	\N	\N	\N	\N	2023-11-08 13:57:32.628619	2023-11-08 13:57:32.628579	86470dbe-ad34-4a57-8a6e-ab12cde9a459	762
764	uri://ed-fi.org/LanguageDescriptor	frr	Northern Frisian	Northern Frisian	\N	\N	\N	\N	2023-11-08 13:57:32.635372	2023-11-08 13:57:32.635304	ff418994-91a3-40d1-a386-06630a0234b1	764
765	uri://ed-fi.org/LanguageDescriptor	fur	Friulian	Friulian	\N	\N	\N	\N	2023-11-08 13:57:32.636913	2023-11-08 13:57:32.636743	d5ff5b10-1f65-4717-b5e4-6775cbbaf845	765
768	uri://ed-fi.org/LanguageDescriptor	gil	Gilbertese	Gilbertese	\N	\N	\N	\N	2023-11-08 13:57:32.647747	2023-11-08 13:57:32.647716	f20d6661-24b5-4be4-a389-f3018dd3ce52	768
769	uri://ed-fi.org/LanguageDescriptor	gle	Irish	Irish	\N	\N	\N	\N	2023-11-08 13:57:32.650753	2023-11-08 13:57:32.650347	1c955a7e-8b87-499d-9261-b149e6daea55	769
771	uri://ed-fi.org/LanguageDescriptor	ger	German	German	\N	\N	\N	\N	2023-11-08 13:57:32.654031	2023-11-08 13:57:32.653999	17eb7fd2-1157-43f1-9fa9-2a40c8ea0880	771
772	uri://ed-fi.org/LanguageDescriptor	glv	Manx	Manx	\N	\N	\N	\N	2023-11-08 13:57:32.655348	2023-11-08 13:57:32.655321	5331f73a-97cf-4449-987b-c8c5271dfae3	772
774	uri://ed-fi.org/LanguageDescriptor	gor	Gorontalo	Gorontalo	\N	\N	\N	\N	2023-11-08 13:57:32.659373	2023-11-08 13:57:32.659343	586dc88f-6ec3-4ed5-b0a3-ecc0eb2dbe01	774
775	uri://ed-fi.org/LanguageDescriptor	gwi	Gwich'in	Gwich'in	\N	\N	\N	\N	2023-11-08 13:57:32.665541	2023-11-08 13:57:32.665428	575bc8e7-def9-4f2d-acae-97bf3f6bd051	775
778	uri://ed-fi.org/LanguageDescriptor	her	Herero	Herero	\N	\N	\N	\N	2023-11-08 13:57:32.670789	2023-11-08 13:57:32.670763	077801d6-0e3e-48e5-9a5d-2a2298312163	778
780	uri://ed-fi.org/LanguageDescriptor	hsb	Upper Sorbian	Upper Sorbian	\N	\N	\N	\N	2023-11-08 13:57:32.677121	2023-11-08 13:57:32.677094	fa9cef09-ba48-48e6-a6f1-6919dcc331c7	780
781	uri://ed-fi.org/LanguageDescriptor	hit	Hittite	Hittite	\N	\N	\N	\N	2023-11-08 13:57:32.673476	2023-11-08 13:57:32.673447	de71d164-fa5d-4ff4-bdba-b19c7bd06e1c	781
782	uri://ed-fi.org/LanguageDescriptor	ido	Ido	Ido	\N	\N	\N	\N	2023-11-08 13:57:32.684895	2023-11-08 13:57:32.684881	5756ad27-a965-47b4-9add-0a8e3006fb0d	782
783	uri://ed-fi.org/LanguageDescriptor	hup	Hupa	Hupa	\N	\N	\N	\N	2023-11-08 13:57:32.685211	2023-11-08 13:57:32.685174	443fafb4-1da3-4302-888e-632e28393ef6	783
660	uri://ed-fi.org/LanguageDescriptor	sna	Shona	Shona	\N	\N	\N	\N	2023-11-08 13:57:32.387752	2023-11-08 13:57:32.38767	75334b88-e711-48e7-99c8-35da4b9782b4	660
661	uri://ed-fi.org/LanguageDescriptor	snk	Soninke	Soninke	\N	\N	\N	\N	2023-11-08 13:57:32.390506	2023-11-08 13:57:32.39046	d2964103-05b4-412f-a533-a02b2b117b96	661
664	uri://ed-fi.org/LanguageDescriptor	srd	Sardinian	Sardinian	\N	\N	\N	\N	2023-11-08 13:57:32.395354	2023-11-08 13:57:32.395326	ae95b65f-2926-4f0a-b2e2-9a7333e2165a	664
668	uri://ed-fi.org/LanguageDescriptor	swa	Swahili	Swahili	\N	\N	\N	\N	2023-11-08 13:57:32.40274	2023-11-08 13:57:32.402713	7a28b1a3-3c4c-4a03-a0d0-d58252477020	668
670	uri://ed-fi.org/LanguageDescriptor	tah	Tahitian	Tahitian	\N	\N	\N	\N	2023-11-08 13:57:32.408093	2023-11-08 13:57:32.407993	71b16870-c7f8-4d96-8b05-b28784029d23	670
673	uri://ed-fi.org/LanguageDescriptor	ter	Tereno	Tereno	\N	\N	\N	\N	2023-11-08 13:57:32.413242	2023-11-08 13:57:32.413207	f82675a3-e8af-40cd-82bd-14ae7d032f03	673
674	uri://ed-fi.org/LanguageDescriptor	tha	Thai	Thai	\N	\N	\N	\N	2023-11-08 13:57:32.41855	2023-11-08 13:57:32.418502	c7336646-2a8d-4317-8cdc-309aafd75c25	674
677	uri://ed-fi.org/LanguageDescriptor	tiv	Tiv	Tiv	\N	\N	\N	\N	2023-11-08 13:57:32.423822	2023-11-08 13:57:32.423793	fefd9a61-fc81-4728-9bb6-110e1137758b	677
679	uri://ed-fi.org/LanguageDescriptor	ton	Tonga (Tonga Islands)	Tonga (Tonga Islands)	\N	\N	\N	\N	2023-11-08 13:57:32.427815	2023-11-08 13:57:32.427802	0b4c6bf4-c2d4-4d61-8267-f489c3d46cff	679
680	uri://ed-fi.org/LanguageDescriptor	tso	Tsonga	Tsonga	\N	\N	\N	\N	2023-11-08 13:57:32.43266	2023-11-08 13:57:32.432641	f19679e3-a1eb-46f7-8d47-55bb5f893c9e	680
683	uri://ed-fi.org/LanguageDescriptor	tur	Turkish	Turkish	\N	\N	\N	\N	2023-11-08 13:57:32.43801	2023-11-08 13:57:32.435794	c825b91e-c7fc-46af-b162-334bef5e4bc5	683
687	uri://ed-fi.org/LanguageDescriptor	und	Undetermined	Undetermined	\N	\N	\N	\N	2023-11-08 13:57:32.446016	2023-11-08 13:57:32.445994	8a27e709-93c3-470b-a7d1-fe09aaf6a0f9	687
693	uri://ed-fi.org/LanguageDescriptor	war	Waray	Waray	\N	\N	\N	\N	2023-11-08 13:57:32.459498	2023-11-08 13:57:32.45922	e0c3e156-0dae-48d2-85ff-380b3487d43d	693
696	uri://ed-fi.org/LanguageDescriptor	yid	Yiddish	Yiddish	\N	\N	\N	\N	2023-11-08 13:57:32.46506	2023-11-08 13:57:32.465042	894366e8-fd4f-4b56-943f-1772659cfa42	696
698	uri://ed-fi.org/LanguageDescriptor	ypk	Yupik languages	Yupik languages	\N	\N	\N	\N	2023-11-08 13:57:32.468775	2023-11-08 13:57:32.468687	a838d340-cc2b-4db2-ad2f-023376ebc68b	698
699	uri://ed-fi.org/LanguageDescriptor	znd	Zande languages	Zande languages	\N	\N	\N	\N	2023-11-08 13:57:32.472786	2023-11-08 13:57:32.472732	ad23fcf2-32e7-4292-8c8c-fde88388b4b9	699
703	uri://ed-fi.org/LanguageDescriptor	afh	Afrihili	Afrihili	\N	\N	\N	\N	2023-11-08 13:57:32.483496	2023-11-08 13:57:32.483483	7634d402-9c45-44aa-94c2-849f6f1efc49	703
712	uri://ed-fi.org/LanguageDescriptor	ang	English, Old (ca.450-1100)	English, Old (ca.450-1100)	\N	\N	\N	\N	2023-11-08 13:57:32.505191	2023-11-08 13:57:32.505164	ff6cc26b-0ac4-4591-8c69-47e1d7fb6eef	712
715	uri://ed-fi.org/LanguageDescriptor	ave	Avestan	Avestan	\N	\N	\N	\N	2023-11-08 13:57:32.513918	2023-11-08 13:57:32.513676	8a2db9c9-f865-4c77-a46a-a13230ee1bca	715
722	uri://ed-fi.org/LanguageDescriptor	bel	Belarusian	Belarusian	\N	\N	\N	\N	2023-11-08 13:57:32.528824	2023-11-08 13:57:32.528797	13066c60-f22e-4043-8ffa-a83b2b2d94de	722
725	uri://ed-fi.org/LanguageDescriptor	bik	Bikol	Bikol	\N	\N	\N	\N	2023-11-08 13:57:32.536255	2023-11-08 13:57:32.53624	0bb977b7-3bdb-4865-866a-7913eee88d07	725
728	uri://ed-fi.org/LanguageDescriptor	btk	Batak languages	Batak languages	\N	\N	\N	\N	2023-11-08 13:57:32.543857	2023-11-08 13:57:32.543842	859a031d-57c6-4ae4-8eb1-306f39d698e6	728
736	uri://ed-fi.org/LanguageDescriptor	chb	Chibcha	Chibcha	\N	\N	\N	\N	2023-11-08 13:57:32.56516	2023-11-08 13:57:32.565097	6111e4f2-8a44-40d8-97ae-1b36cc55aac2	736
747	uri://ed-fi.org/LanguageDescriptor	dak	Dakota	Dakota	\N	\N	\N	\N	2023-11-08 13:57:32.591678	2023-11-08 13:57:32.591662	2e5b446f-22ed-42d1-babd-d40af9de9c6c	747
750	uri://ed-fi.org/LanguageDescriptor	del	Delaware	Delaware	\N	\N	\N	\N	2023-11-08 13:57:32.603375	2023-11-08 13:57:32.603346	cdd43e2a-1a72-4f0b-94aa-4ad6d2f53c1f	750
753	uri://ed-fi.org/LanguageDescriptor	elx	Elamite	Elamite	\N	\N	\N	\N	2023-11-08 13:57:32.61027	2023-11-08 13:57:32.610255	26c5e881-ac80-4f82-9af8-80a1f37a40f5	753
757	uri://ed-fi.org/LanguageDescriptor	est	Estonian	Estonian	\N	\N	\N	\N	2023-11-08 13:57:32.616236	2023-11-08 13:57:32.61617	188f3275-9234-4b85-948e-811cbc0678eb	757
761	uri://ed-fi.org/LanguageDescriptor	fao	Faroese	Faroese	\N	\N	\N	\N	2023-11-08 13:57:32.628081	2023-11-08 13:57:32.628066	fcd1d078-7048-47e0-971b-92e765aaa2b6	761
763	uri://ed-fi.org/LanguageDescriptor	frm	French, Middle (ca.1400-1600)	French, Middle (ca.1400-1600)	\N	\N	\N	\N	2023-11-08 13:57:32.634409	2023-11-08 13:57:32.634364	94ab317c-8c38-4bc7-b321-b8e267f5eec3	763
770	uri://ed-fi.org/LanguageDescriptor	gem	Germanic languages	Germanic languages	\N	\N	\N	\N	2023-11-08 13:57:32.651514	2023-11-08 13:57:32.65148	1ee3ffb4-0e3b-4cd6-8652-46a1dd9c8e80	770
776	uri://ed-fi.org/LanguageDescriptor	gre	Greek, Modern (1453-)	Greek, Modern (1453-)	\N	\N	\N	\N	2023-11-08 13:57:32.667644	2023-11-08 13:57:32.667528	cb8d9159-79ca-4efd-b610-a3621723e348	776
777	uri://ed-fi.org/LanguageDescriptor	haw	Hawaiian	Hawaiian	\N	\N	\N	\N	2023-11-08 13:57:32.670207	2023-11-08 13:57:32.670169	65014f94-3bc8-4250-b125-4a06ecb8229b	777
779	uri://ed-fi.org/LanguageDescriptor	hmo	Hiri Motu	Hiri Motu	\N	\N	\N	\N	2023-11-08 13:57:32.676519	2023-11-08 13:57:32.676491	86aba495-1776-4194-a630-319292f58243	779
786	uri://ed-fi.org/LanguageDescriptor	ibo	Igbo	Igbo	\N	\N	\N	\N	2023-11-08 13:57:32.6918	2023-11-08 13:57:32.691748	72901872-65bf-47a6-bcd3-20cd79ff3698	786
787	uri://ed-fi.org/LanguageDescriptor	ind	Indonesian	Indonesian	\N	\N	\N	\N	2023-11-08 13:57:32.694897	2023-11-08 13:57:32.694383	f722f646-83cc-4bd1-9b96-4f152f698511	787
789	uri://ed-fi.org/LanguageDescriptor	ira	Iranian languages	Iranian languages	\N	\N	\N	\N	2023-11-08 13:57:32.700347	2023-11-08 13:57:32.700301	2d1f80ff-f642-4791-a01c-269622bf53f6	789
791	uri://ed-fi.org/LanguageDescriptor	ita	Italian	Italian	\N	\N	\N	\N	2023-11-08 13:57:32.702585	2023-11-08 13:57:32.702506	4195ebfa-f6fa-4f73-9add-a088fd11ba2b	791
793	uri://ed-fi.org/LanguageDescriptor	jpr	Judeo-Persian	Judeo-Persian	\N	\N	\N	\N	2023-11-08 13:57:32.708673	2023-11-08 13:57:32.708644	dc67771f-8047-4350-83c6-f9c25a944a1b	793
794	uri://ed-fi.org/LanguageDescriptor	kaa	Kara-Kalpak	Kara-Kalpak	\N	\N	\N	\N	2023-11-08 13:57:32.709002	2023-11-08 13:57:32.708974	a7076108-8068-4c8d-bdc2-e38b330d519e	794
795	uri://ed-fi.org/LanguageDescriptor	kam	Kamba	Kamba	\N	\N	\N	\N	2023-11-08 13:57:32.712266	2023-11-08 13:57:32.71225	e937e241-5786-4344-9ee3-87b83207dd3b	795
798	uri://ed-fi.org/LanguageDescriptor	kha	Khasi	Khasi	\N	\N	\N	\N	2023-11-08 13:57:32.718867	2023-11-08 13:57:32.718839	a94f1e44-e8b3-4259-89e8-5315452085c1	798
799	uri://ed-fi.org/LanguageDescriptor	kaz	Kazakh	Kazakh	\N	\N	\N	\N	2023-11-08 13:57:32.720874	2023-11-08 13:57:32.720847	b01f638f-bba1-406f-b7a4-e72cb88dc526	799
801	uri://ed-fi.org/LanguageDescriptor	kok	Konkani	Konkani	\N	\N	\N	\N	2023-11-08 13:57:32.725532	2023-11-08 13:57:32.725486	1e973440-2043-447f-844d-71a455a90aaf	801
803	uri://ed-fi.org/LanguageDescriptor	krc	Karachay-Balkar	Karachay-Balkar	\N	\N	\N	\N	2023-11-08 13:57:32.730501	2023-11-08 13:57:32.730474	0e998bcf-1050-4dea-aff8-75751f71e0cb	803
734	uri://ed-fi.org/LanguageDescriptor	cad	Caddo	Caddo	\N	\N	\N	\N	2023-11-08 13:57:32.558647	2023-11-08 13:57:32.557706	b3d9b3d8-3056-49a5-b68a-d3ff75ad88fa	734
737	uri://ed-fi.org/LanguageDescriptor	chg	Chagatai	Chagatai	\N	\N	\N	\N	2023-11-08 13:57:32.568571	2023-11-08 13:57:32.568259	a0d3f839-0fd3-4d52-a2b0-6bb325397c40	737
742	uri://ed-fi.org/LanguageDescriptor	cos	Corsican	Corsican	\N	\N	\N	\N	2023-11-08 13:57:32.580626	2023-11-08 13:57:32.580479	b22e5eb8-77e8-4319-9afa-d7035eeeab22	742
745	uri://ed-fi.org/LanguageDescriptor	crp	Creoles and pidgins	Creoles and pidgins	\N	\N	\N	\N	2023-11-08 13:57:32.587836	2023-11-08 13:57:32.587807	5bd3c3dd-c953-413e-8fc1-de2e655c0559	745
748	uri://ed-fi.org/LanguageDescriptor	dar	Dargwa	Dargwa	\N	\N	\N	\N	2023-11-08 13:57:32.593989	2023-11-08 13:57:32.593959	cde21a75-d233-4e90-b0fb-2cb2ef3a6ba8	748
751	uri://ed-fi.org/LanguageDescriptor	dra	Dravidian languages	Dravidian languages	\N	\N	\N	\N	2023-11-08 13:57:32.604783	2023-11-08 13:57:32.604724	b381e036-46ea-4db5-aced-3155dd066493	751
754	uri://ed-fi.org/LanguageDescriptor	egy	Egyptian (Ancient)	Egyptian (Ancient)	\N	\N	\N	\N	2023-11-08 13:57:32.610792	2023-11-08 13:57:32.61075	8a0741dd-43b8-4d85-9370-c34fdd4b7065	754
766	uri://ed-fi.org/LanguageDescriptor	fry	Western Frisian	Western Frisian	\N	\N	\N	\N	2023-11-08 13:57:32.637455	2023-11-08 13:57:32.637425	f41f63c3-5fae-42e0-b661-f4aa686da24b	766
767	uri://ed-fi.org/LanguageDescriptor	gay	Gayo	Gayo	\N	\N	\N	\N	2023-11-08 13:57:32.644769	2023-11-08 13:57:32.644691	48f40b88-2bef-4a94-922c-da5c7bfb0917	767
773	uri://ed-fi.org/LanguageDescriptor	goh	German, Old High (ca.750-1050)	German, Old High (ca.750-1050)	\N	\N	\N	\N	2023-11-08 13:57:32.65608	2023-11-08 13:57:32.656013	c15fb065-5f28-40e3-bc8a-34fcfe9950e8	773
784	uri://ed-fi.org/LanguageDescriptor	grb	Grebo	Grebo	\N	\N	\N	\N	2023-11-08 13:57:32.685745	2023-11-08 13:57:32.685716	7f820d3a-0b4f-4482-8c47-76f2e536b8de	784
785	uri://ed-fi.org/LanguageDescriptor	ijo	Ijo languages	Ijo languages	\N	\N	\N	\N	2023-11-08 13:57:32.691542	2023-11-08 13:57:32.691512	2f78732f-27b6-451b-bef7-3d9fab1a04b8	785
788	uri://ed-fi.org/LanguageDescriptor	ina	Interlingua (International Auxiliary Language Association)	Interlingua (International Auxiliary Language Association)	\N	\N	\N	\N	2023-11-08 13:57:32.695045	2023-11-08 13:57:32.694977	049eb039-4c78-4fcb-b814-c78fecbdcfec	788
790	uri://ed-fi.org/LanguageDescriptor	inh	Ingush	Ingush	\N	\N	\N	\N	2023-11-08 13:57:32.701187	2023-11-08 13:57:32.700615	46c05d61-021a-4018-918f-c6622dd3bd20	790
792	uri://ed-fi.org/LanguageDescriptor	jbo	Lojban	Lojban	\N	\N	\N	\N	2023-11-08 13:57:32.706514	2023-11-08 13:57:32.706391	02aaccda-13cf-4bff-9752-a6cb0b9d473e	792
796	uri://ed-fi.org/LanguageDescriptor	kar	Karen languages	Karen languages	\N	\N	\N	\N	2023-11-08 13:57:32.714858	2023-11-08 13:57:32.714763	5e2cb9d0-378e-46cb-9d84-874bc83a5e98	796
797	uri://ed-fi.org/LanguageDescriptor	kau	Kanuri	Kanuri	\N	\N	\N	\N	2023-11-08 13:57:32.717527	2023-11-08 13:57:32.717205	0645e1f2-6d0b-41bc-9a78-701cc9e3caed	797
800	uri://ed-fi.org/LanguageDescriptor	khm	Central Khmer	Central Khmer	\N	\N	\N	\N	2023-11-08 13:57:32.721793	2023-11-08 13:57:32.721779	b4537402-aca4-4ef0-a630-d45264c495cf	800
802	uri://ed-fi.org/LanguageDescriptor	kon	Kongo	Kongo	\N	\N	\N	\N	2023-11-08 13:57:32.7276	2023-11-08 13:57:32.72662	3ff83d84-1c4f-4ce6-8e94-d1db20ca8428	802
804	uri://ed-fi.org/LanguageDescriptor	kos	Kosraean	Kosraean	\N	\N	\N	\N	2023-11-08 13:57:32.731122	2023-11-08 13:57:32.731093	73fc6680-c7f2-457f-808e-c01d0cbeab27	804
805	uri://ed-fi.org/LanguageDescriptor	kur	Kurdish	Kurdish	\N	\N	\N	\N	2023-11-08 13:57:32.73502	2023-11-08 13:57:32.734994	b4941e5c-580d-481e-985e-bf8debe4a5a4	805
806	uri://ed-fi.org/LanguageDescriptor	kro	Kru languages	Kru languages	\N	\N	\N	\N	2023-11-08 13:57:32.73512	2023-11-08 13:57:32.734709	986b5303-b573-47d4-b841-220b6afa9326	806
807	uri://ed-fi.org/LanguageDescriptor	lad	Ladino	Ladino	\N	\N	\N	\N	2023-11-08 13:57:32.738297	2023-11-08 13:57:32.738283	e7deea08-4b0c-4150-aaa3-b0cab5361cfd	807
808	uri://ed-fi.org/LanguageDescriptor	lam	Lamba	Lamba	\N	\N	\N	\N	2023-11-08 13:57:32.742157	2023-11-08 13:57:32.741932	233c932e-c7e5-43e4-8f7e-d7d373b1cd64	808
809	uri://ed-fi.org/LanguageDescriptor	lat	Latin	Latin	\N	\N	\N	\N	2023-11-08 13:57:32.743844	2023-11-08 13:57:32.743817	33982cbc-fb49-456a-8eb9-8301d99be0b3	809
810	uri://ed-fi.org/LanguageDescriptor	lez	Lezghian	Lezghian	\N	\N	\N	\N	2023-11-08 13:57:32.745358	2023-11-08 13:57:32.745344	92a06965-e15a-4759-89af-b2a9b51f0b1c	810
811	uri://ed-fi.org/LanguageDescriptor	lin	Lingala	Lingala	\N	\N	\N	\N	2023-11-08 13:57:32.749271	2023-11-08 13:57:32.749216	f14b4154-bb37-445c-86f1-cdd671a128af	811
812	uri://ed-fi.org/LanguageDescriptor	lub	Luba-Katanga	Luba-Katanga	\N	\N	\N	\N	2023-11-08 13:57:32.75215	2023-11-08 13:57:32.751962	3ca80d72-562e-42b7-91d8-b66f6417612b	812
813	uri://ed-fi.org/LanguageDescriptor	lol	Mongo	Mongo	\N	\N	\N	\N	2023-11-08 13:57:32.753657	2023-11-08 13:57:32.75356	859df6e1-1412-4dcf-b24b-349fd11ee7ae	813
814	uri://ed-fi.org/LanguageDescriptor	lui	Luiseno	Luiseno	\N	\N	\N	\N	2023-11-08 13:57:32.754737	2023-11-08 13:57:32.754696	7b92204a-5dd5-46c6-8232-c0d91a42dbb1	814
815	uri://ed-fi.org/LanguageDescriptor	luo	Luo (Kenya and Tanzania)	Luo (Kenya and Tanzania)	\N	\N	\N	\N	2023-11-08 13:57:32.75783	2023-11-08 13:57:32.757713	381cd04a-6702-451c-9238-e97e191eaadf	815
816	uri://ed-fi.org/LanguageDescriptor	mag	Magahi	Magahi	\N	\N	\N	\N	2023-11-08 13:57:32.760223	2023-11-08 13:57:32.760193	731e2c76-5316-4a89-8aba-0a81e7e9a2ec	816
817	uri://ed-fi.org/LanguageDescriptor	mac	Macedonian	Macedonian	\N	\N	\N	\N	2023-11-08 13:57:32.760175	2023-11-08 13:57:32.760129	7859494c-d543-45c0-88e7-1859f89071aa	817
818	uri://ed-fi.org/LanguageDescriptor	mai	Maithili	Maithili	\N	\N	\N	\N	2023-11-08 13:57:32.762972	2023-11-08 13:57:32.76291	767df8ca-2eff-47b8-87cf-555eaad691a6	818
819	uri://ed-fi.org/LanguageDescriptor	mal	Malayalam	Malayalam	\N	\N	\N	\N	2023-11-08 13:57:32.764325	2023-11-08 13:57:32.764299	20dc1718-a3f9-4342-8a4f-1f02cb698543	819
820	uri://ed-fi.org/LanguageDescriptor	mao	Maori	Maori	\N	\N	\N	\N	2023-11-08 13:57:32.766035	2023-11-08 13:57:32.766012	3d513351-0338-487f-923a-ca31b58bcad1	820
821	uri://ed-fi.org/LanguageDescriptor	mar	Marathi	Marathi	\N	\N	\N	\N	2023-11-08 13:57:32.769278	2023-11-08 13:57:32.768894	56e7e171-ed58-4a94-b798-67ed890f355b	821
822	uri://ed-fi.org/LanguageDescriptor	may	Malay	Malay	\N	\N	\N	\N	2023-11-08 13:57:32.772169	2023-11-08 13:57:32.772145	b19a41db-536a-4de8-b3ec-bb6c41e458c7	822
823	uri://ed-fi.org/LanguageDescriptor	mdr	Mandar	Mandar	\N	\N	\N	\N	2023-11-08 13:57:32.772636	2023-11-08 13:57:32.772609	7fe68366-308d-49d3-a12e-89a50331468f	823
824	uri://ed-fi.org/LanguageDescriptor	min	Minangkabau	Minangkabau	\N	\N	\N	\N	2023-11-08 13:57:32.776882	2023-11-08 13:57:32.776833	9dc77a48-1700-481c-a21d-6ef7f0e20cc2	824
825	uri://ed-fi.org/LanguageDescriptor	mkh	Mon-Khmer languages	Mon-Khmer languages	\N	\N	\N	\N	2023-11-08 13:57:32.778535	2023-11-08 13:57:32.778521	279e3980-bd11-47ba-a5c1-666c9e11665e	825
826	uri://ed-fi.org/LanguageDescriptor	mga	Irish, Middle (900-1200)	Irish, Middle (900-1200)	\N	\N	\N	\N	2023-11-08 13:57:32.778672	2023-11-08 13:57:32.778641	8c5143bf-4992-4ecb-aa01-fd5f05f3f58b	826
827	uri://ed-fi.org/LanguageDescriptor	mlt	Maltese	Maltese	\N	\N	\N	\N	2023-11-08 13:57:32.779534	2023-11-08 13:57:32.779494	601a469e-ce83-4c3b-930b-bdc4e254c899	827
828	uri://ed-fi.org/LanguageDescriptor	moh	Mohawk	Mohawk	\N	\N	\N	\N	2023-11-08 13:57:32.784053	2023-11-08 13:57:32.78404	2ac080c3-3971-49d9-9192-a24563e3e6ae	828
2	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	\N	\N	\N	\N	2023-11-08 13:57:29.636049	2023-11-08 13:57:29.622949	b50648d7-0f49-42c3-8ecc-a15ac0af7a96	2
7	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	\N	\N	\N	\N	2023-11-08 13:57:29.760547	2023-11-08 13:57:29.760474	8973c60e-0379-412f-83c7-1af6feece204	7
11	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Other	Promotion - Other	Promotion - Other	\N	\N	\N	\N	2023-11-08 13:57:29.772602	2023-11-08 13:57:29.77254	001be881-9d46-4964-a7ee-b6dabc9e0d50	11
16	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:29.813124	2023-11-08 13:57:29.811919	934cb2ff-cccc-4d7a-bfba-191ecfe109cc	16
19	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Organization Department	Organization Department	An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.	\N	\N	\N	\N	2023-11-08 13:57:29.823125	2023-11-08 13:57:29.823099	ffade12e-f638-4358-8b89-1815ffaa443f	19
21	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:29.828655	2023-11-08 13:57:29.828611	83b67095-8371-4288-bdc0-cdd07a0a3c69	21
24	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit and school area	Resident of administrative unit and usual school attendance area	Resident of administrative unit and usual school attendance area	\N	\N	\N	\N	2023-11-08 13:57:29.863019	2023-11-08 13:57:29.861746	5a547975-8d55-48d9-9fdd-49a508fb266d	24
27	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during previous term	Ceased to be migratory in previous term - comparable services not available	Ceased to be migratory during previous school term and no comparable services are available	\N	\N	\N	\N	2023-11-08 13:57:29.90656	2023-11-08 13:57:29.905379	e14c86ce-00d9-46c3-8097-e6c39de932d0	27
35	uri://ed-fi.org/CreditTypeDescriptor	Intersession hour credit	Intersession hour credit	Intersession hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.926408	2023-11-08 13:57:29.926393	0bf3f0ef-e729-4c18-a591-8dfe4799e9e4	35
39	uri://ed-fi.org/CreditTypeDescriptor	Quarter hour credit	Quarter hour credit	Quarter hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.936606	2023-11-08 13:57:29.936568	76aba493-70fa-45b2-ab13-aa414c0813a2	39
42	uri://ed-fi.org/CreditTypeDescriptor	Semester hour credit	Semester hour credit	Semester hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.944127	2023-11-08 13:57:29.943868	fd7b1f12-fd92-4633-8ce0-ceb32c39343b	42
46	uri://ed-fi.org/CreditTypeDescriptor	Twelve month year hour credit	Twelve month year hour credit	Twelve month year hour credit	\N	\N	\N	\N	2023-11-08 13:57:29.954598	2023-11-08 13:57:29.954576	7d2cec2a-b9f0-47df-9333-953ddea2712d	46
48	uri://ed-fi.org/StateAbbreviationDescriptor	AL	AL	AL	\N	\N	\N	\N	2023-11-08 13:57:29.991678	2023-11-08 13:57:29.990442	2b3c11cd-ffae-428d-9c11-6df5a66a9acc	48
51	uri://ed-fi.org/StateAbbreviationDescriptor	AP	AP	AP	\N	\N	\N	\N	2023-11-08 13:57:30.002929	2023-11-08 13:57:30.002877	4f531fde-2e9a-429d-9e1e-9a4f01f05c1c	51
58	uri://ed-fi.org/StateAbbreviationDescriptor	FL	FL	FL	\N	\N	\N	\N	2023-11-08 13:57:30.018438	2023-11-08 13:57:30.018409	a2bf5b33-3d3b-4f96-b64a-c91876a72e28	58
62	uri://ed-fi.org/StateAbbreviationDescriptor	GU	GU	GU	\N	\N	\N	\N	2023-11-08 13:57:30.025977	2023-11-08 13:57:30.025925	bc13537c-b74d-4071-afaf-6bf10bdc29ef	62
65	uri://ed-fi.org/StateAbbreviationDescriptor	IA	IA	IA	\N	\N	\N	\N	2023-11-08 13:57:30.029632	2023-11-08 13:57:30.02947	44c5e662-b49a-462c-b6c5-1e41ea1086fd	65
70	uri://ed-fi.org/StateAbbreviationDescriptor	KY	KY	KY	\N	\N	\N	\N	2023-11-08 13:57:30.040586	2023-11-08 13:57:30.040517	24c7ae5c-f038-473e-a258-9a04f8d1b234	70
73	uri://ed-fi.org/StateAbbreviationDescriptor	MA	MA	MA	\N	\N	\N	\N	2023-11-08 13:57:30.048225	2023-11-08 13:57:30.048171	a079e890-7393-45cf-9854-c5d0853133e6	73
77	uri://ed-fi.org/StateAbbreviationDescriptor	MI	MI	MI	\N	\N	\N	\N	2023-11-08 13:57:30.055146	2023-11-08 13:57:30.055118	89f6baa4-0730-45c7-8e96-51cb9c39dd47	77
80	uri://ed-fi.org/StateAbbreviationDescriptor	MS	MS	MS	\N	\N	\N	\N	2023-11-08 13:57:30.065873	2023-11-08 13:57:30.065681	9f9d1b58-3f93-4567-bbd5-71d3a097c092	80
83	uri://ed-fi.org/StateAbbreviationDescriptor	ND	ND	ND	\N	\N	\N	\N	2023-11-08 13:57:30.07421	2023-11-08 13:57:30.07368	41469139-fd3a-457c-99ae-d61a7228853d	83
86	uri://ed-fi.org/StateAbbreviationDescriptor	NH	NH	NH	\N	\N	\N	\N	2023-11-08 13:57:30.082748	2023-11-08 13:57:30.082716	05cc76f1-fb52-41ec-98ec-56942fc90857	86
89	uri://ed-fi.org/StateAbbreviationDescriptor	NY	NY	NY	\N	\N	\N	\N	2023-11-08 13:57:30.089285	2023-11-08 13:57:30.089233	95502459-51a2-477e-900a-ef8ad85199c2	89
92	uri://ed-fi.org/StateAbbreviationDescriptor	OR	OR	OR	\N	\N	\N	\N	2023-11-08 13:57:30.09475	2023-11-08 13:57:30.094708	494363d0-1182-4412-8def-dd5c946e1f06	92
94	uri://ed-fi.org/StateAbbreviationDescriptor	PR	PR	PR	\N	\N	\N	\N	2023-11-08 13:57:30.102516	2023-11-08 13:57:30.102453	df709e12-9464-45e4-be37-a66d446a70af	94
100	uri://ed-fi.org/StateAbbreviationDescriptor	UT	UT	UT	\N	\N	\N	\N	2023-11-08 13:57:30.118869	2023-11-08 13:57:30.118832	03b8112f-5382-4dc9-9713-16e0e26f0f92	100
105	uri://ed-fi.org/StateAbbreviationDescriptor	VI	VI	VI	\N	\N	\N	\N	2023-11-08 13:57:30.129466	2023-11-08 13:57:30.129441	864c794f-7e8b-4c77-9b1e-8a8e6d1e759a	105
108	uri://ed-fi.org/StateAbbreviationDescriptor	WY	WY	WY	\N	\N	\N	\N	2023-11-08 13:57:30.139277	2023-11-08 13:57:30.13923	0c98e7c3-6797-41ad-ba9a-7b0843dc64d3	108
112	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	\N	2023-11-08 13:57:30.17756	2023-11-08 13:57:30.176088	169fd88c-c90b-4a39-aad6-cb38ff0d4e32	112
114	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	\N	2023-11-08 13:57:30.189828	2023-11-08 13:57:30.189767	025dd0b7-f870-4c6a-9fe8-76159fbf20bf	114
119	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	\N	2023-11-08 13:57:30.199624	2023-11-08 13:57:30.199555	f79766b2-fb47-4675-b4ec-e1e386280f90	119
122	uri://ed-fi.org/EvaluationDelayReasonDescriptor	Child Unavailable	Child Unavailable	Child Unavailable	\N	\N	\N	\N	2023-11-08 13:57:30.236862	2023-11-08 13:57:30.235345	c15753d9-c2a0-42bc-b8d9-5adee339a18a	122
126	uri://ed-fi.org/SeparationDescriptor	Involuntary separation	Involuntary separation	Involuntary separation	\N	\N	\N	\N	2023-11-08 13:57:30.259852	2023-11-08 13:57:30.258818	b0032457-ef09-4fd3-93da-0861f7b0843e	126
758	uri://ed-fi.org/LanguageDescriptor	enm	English, Middle (1100-1500)	English, Middle (1100-1500)	\N	\N	\N	\N	2023-11-08 13:57:32.618737	2023-11-08 13:57:32.618683	571ee5a5-55b0-4bd4-a879-15202aa9d54a	758
829	uri://ed-fi.org/LanguageDescriptor	mos	Mossi	Mossi	\N	\N	\N	\N	2023-11-08 13:57:32.784758	2023-11-08 13:57:32.784734	c9dc7694-3860-4d8b-a31c-85d36285c6d3	829
835	uri://ed-fi.org/LanguageDescriptor	nap	Neapolitan	Neapolitan	\N	\N	\N	\N	2023-11-08 13:57:32.795695	2023-11-08 13:57:32.795648	4585119c-af2d-4ec2-b9d1-324530c81e11	835
837	uri://ed-fi.org/LanguageDescriptor	nic	Niger-Kordofanian languages	Niger-Kordofanian languages	\N	\N	\N	\N	2023-11-08 13:57:32.800965	2023-11-08 13:57:32.800747	61e962af-90ec-4dea-a7de-071ea5a9cead	837
840	uri://ed-fi.org/LanguageDescriptor	nyo	Nyoro	Nyoro	\N	\N	\N	\N	2023-11-08 13:57:32.807116	2023-11-08 13:57:32.807079	fb37d3f2-766d-479a-9d49-21afccbfdde2	840
845	uri://ed-fi.org/LanguageDescriptor	paa	Papuan languages	Papuan languages	\N	\N	\N	\N	2023-11-08 13:57:32.816067	2023-11-08 13:57:32.815805	86b8e7ed-3983-4c88-9f5c-75243ea9b904	845
847	uri://ed-fi.org/LanguageDescriptor	pau	Palauan	Palauan	\N	\N	\N	\N	2023-11-08 13:57:32.823011	2023-11-08 13:57:32.822672	717d23b5-27b2-487c-b916-efe9b9e909d8	847
853	uri://ed-fi.org/LanguageDescriptor	que	Quechua	Quechua	\N	\N	\N	\N	2023-11-08 13:57:32.831563	2023-11-08 13:57:32.831531	0df027c6-55ff-496d-a2c4-07a4b8612b6f	853
856	uri://ed-fi.org/LanguageDescriptor	run	Rundi	Rundi	\N	\N	\N	\N	2023-11-08 13:57:32.83754	2023-11-08 13:57:32.837264	3fb7efc3-c2cc-4747-9ee5-fac7fa07fd75	856
861	uri://ed-fi.org/LanguageDescriptor	sas	Sasak	Sasak	\N	\N	\N	\N	2023-11-08 13:57:32.846295	2023-11-08 13:57:32.846254	85d7340e-95e7-434c-9775-c85e711b56d7	861
863	uri://ed-fi.org/LanguageDescriptor	scn	Sicilian	Sicilian	\N	\N	\N	\N	2023-11-08 13:57:32.850764	2023-11-08 13:57:32.85075	278f73e4-b12f-4fe9-817e-7baaa3a9c052	863
865	uri://ed-fi.org/LanguageDescriptor	shn	Shan	Shan	\N	\N	\N	\N	2023-11-08 13:57:32.855	2023-11-08 13:57:32.854984	caaf6ad1-20a8-495b-9f64-4a197018c35d	865
871	uri://ed-fi.org/LanguageDescriptor	smn	Inari Sami	Inari Sami	\N	\N	\N	\N	2023-11-08 13:57:32.865093	2023-11-08 13:57:32.864939	089b1f33-80db-4f33-8ba6-2323efc410a2	871
872	uri://ed-fi.org/LanguageDescriptor	sog	Sogdian	Sogdian	\N	\N	\N	\N	2023-11-08 13:57:32.869435	2023-11-08 13:57:32.869398	92e27cb5-edf4-4384-873c-b62db1b2dee8	872
875	uri://ed-fi.org/LanguageDescriptor	srn	Sranan Tongo	Sranan Tongo	\N	\N	\N	\N	2023-11-08 13:57:32.874473	2023-11-08 13:57:32.872992	fbf80be4-3988-4360-92a3-70c59ff32059	875
878	uri://ed-fi.org/LanguageDescriptor	sun	Sundanese	Sundanese	\N	\N	\N	\N	2023-11-08 13:57:32.879694	2023-11-08 13:57:32.879663	1c2d4b71-cd26-4a49-8ec5-a886ef1cc814	878
883	uri://ed-fi.org/LanguageDescriptor	tem	Timne	Timne	\N	\N	\N	\N	2023-11-08 13:57:32.888552	2023-11-08 13:57:32.888523	b83028ff-1619-4e1d-90fd-9e9af97be8a7	883
885	uri://ed-fi.org/LanguageDescriptor	tet	Tetum	Tetum	\N	\N	\N	\N	2023-11-08 13:57:32.893868	2023-11-08 13:57:32.893841	5d05777f-4ad6-4ea6-abf3-021bbad32143	885
894	uri://ed-fi.org/LanguageDescriptor	tsn	Tswana	Tswana	\N	\N	\N	\N	2023-11-08 13:57:32.909395	2023-11-08 13:57:32.909383	08928668-dde6-4940-9e87-f70d710397ef	894
896	uri://ed-fi.org/LanguageDescriptor	twi	Twi	Twi	\N	\N	\N	\N	2023-11-08 13:57:32.915561	2023-11-08 13:57:32.915533	590587bd-e034-4d93-b5bb-935eb3c02e43	896
902	uri://ed-fi.org/LanguageDescriptor	vie	Vietnamese	Vietnamese	\N	\N	\N	\N	2023-11-08 13:57:32.923217	2023-11-08 13:57:32.923172	d8ac6d15-4247-486a-90ee-fd55a466658b	902
905	uri://ed-fi.org/LanguageDescriptor	wen	Sorbian languages	Sorbian languages	\N	\N	\N	\N	2023-11-08 13:57:32.929836	2023-11-08 13:57:32.929786	f5451f5b-7a6f-438a-82a1-7b3599231d41	905
908	uri://ed-fi.org/LanguageDescriptor	yap	Yapese	Yapese	\N	\N	\N	\N	2023-11-08 13:57:32.935423	2023-11-08 13:57:32.935286	fe105cb8-e732-43ee-85a3-f155a9cc7fda	908
909	uri://ed-fi.org/LanguageDescriptor	yor	Yoruba	Yoruba	\N	\N	\N	\N	2023-11-08 13:57:32.937936	2023-11-08 13:57:32.937897	7edeaaaf-d7d8-4c3e-ba36-5c9a51137907	909
912	uri://ed-fi.org/LanguageDescriptor	zul	Zulu	Zulu	\N	\N	\N	\N	2023-11-08 13:57:32.943298	2023-11-08 13:57:32.94313	df398682-bee4-4bf5-b4cb-ba11d52bec8a	912
913	uri://ed-fi.org/CTEProgramServiceDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	\N	2023-11-08 13:57:32.976138	2023-11-08 13:57:32.975181	0a4581c5-e82c-4213-be95-96d2c9f16566	913
920	uri://ed-fi.org/CTEProgramServiceDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	\N	2023-11-08 13:57:32.986156	2023-11-08 13:57:32.986111	f4273b26-4341-4291-ba5a-27a5f1d3301c	920
924	uri://ed-fi.org/CTEProgramServiceDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	\N	2023-11-08 13:57:32.993502	2023-11-08 13:57:32.993344	ece786ed-cb64-4f5b-9655-93817040b57b	924
926	uri://ed-fi.org/CTEProgramServiceDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	\N	2023-11-08 13:57:33.000863	2023-11-08 13:57:33.000771	a212dfc9-1a56-4866-94ec-79ef03dbb122	926
932	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Other Institution	Repeat Other Institution	Repeat Other Institution	\N	\N	\N	\N	2023-11-08 13:57:33.043231	2023-11-08 13:57:33.042025	92fe09e0-1d20-41d3-80ee-9024bf82c787	931
934	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replaced NotCounted	Replaced NotCounted	Replaced NotCounted	\N	\N	\N	\N	2023-11-08 13:57:33.051824	2023-11-08 13:57:33.051808	30a62302-5743-4bab-9ca2-b8d83f2b0bcc	934
938	uri://ed-fi.org/OperationalStatusDescriptor	Closed	Closed	Closed	\N	\N	\N	\N	2023-11-08 13:57:33.082697	2023-11-08 13:57:33.081626	cd12b712-bdd9-4e1d-94cb-14d917f535d3	937
943	uri://ed-fi.org/OperationalStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	\N	2023-11-08 13:57:33.093201	2023-11-08 13:57:33.093163	6dcf6339-0f29-4e7a-9bc0-281ff68bf3bc	943
945	uri://ed-fi.org/AccountTypeDescriptor	Revenue	Revenue	Revenue	\N	\N	\N	\N	2023-11-08 13:57:33.131157	2023-11-08 13:57:33.129843	74d9b51e-c84f-4cb1-966c-383e769c3e48	945
956	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Not applicable	Not applicable	Not applicable	\N	\N	\N	\N	2023-11-08 13:57:33.177517	2023-11-08 13:57:33.176353	4b05e037-1df5-4cd7-9c24-a0b2f726925a	956
958	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-11-08 13:57:33.214517	2023-11-08 13:57:33.213412	234f0191-82ab-4663-9538-bd2eec1141ea	958
961	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	NCES	NCES	NCES	\N	\N	\N	\N	2023-11-08 13:57:33.223433	2023-11-08 13:57:33.223394	35aa205f-6fb6-4c6c-b452-ac2ab736f34c	961
967	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	USDE - OPE	USDE - OPE	USDE - OPE	\N	\N	\N	\N	2023-11-08 13:57:33.231977	2023-11-08 13:57:33.231811	0982840e-d5e1-4ed2-8f2e-a9cbda164756	967
971	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Integer	Integer	Integer	\N	\N	\N	\N	2023-11-08 13:57:33.26531	2023-11-08 13:57:33.264143	296f9080-2493-47a9-bad6-63b72fb8f828	971
977	uri://ed-fi.org/QuestionFormDescriptor	Radio box	Radio box	Radio box	\N	\N	\N	\N	2023-11-08 13:57:33.301739	2023-11-08 13:57:33.300639	7d1765df-ffbd-4bba-9aa3-490ca2af70c8	977
1000	uri://ed-fi.org/BehaviorDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:33.467364	2023-11-08 13:57:33.466378	b40a5082-f5c8-421d-b7a9-7ae67522bb31	1000
830	uri://ed-fi.org/LanguageDescriptor	mni	Manipuri	Manipuri	\N	\N	\N	\N	2023-11-08 13:57:32.78701	2023-11-08 13:57:32.786984	f6aea527-0139-4076-8fc8-9abe1e92d5de	830
833	uri://ed-fi.org/LanguageDescriptor	mwl	Mirandese	Mirandese	\N	\N	\N	\N	2023-11-08 13:57:32.791919	2023-11-08 13:57:32.791864	e2a8447b-ff39-4ec0-bfc6-85549ae4e148	833
836	uri://ed-fi.org/LanguageDescriptor	nog	Nogai	Nogai	\N	\N	\N	\N	2023-11-08 13:57:32.80016	2023-11-08 13:57:32.80013	d46c889d-7fca-4d5e-a097-024871e21e1c	836
841	uri://ed-fi.org/LanguageDescriptor	ori	Oriya	Oriya	\N	\N	\N	\N	2023-11-08 13:57:32.809444	2023-11-08 13:57:32.80917	75896239-41eb-48d7-96ce-c12e0a3b137a	841
844	uri://ed-fi.org/LanguageDescriptor	pal	Pahlavi	Pahlavi	\N	\N	\N	\N	2023-11-08 13:57:32.815959	2023-11-08 13:57:32.815454	f6a7ebf1-d4a3-481b-8725-0d46b9741f60	844
849	uri://ed-fi.org/LanguageDescriptor	per	Persian	Persian	\N	\N	\N	\N	2023-11-08 13:57:32.824294	2023-11-08 13:57:32.824051	6357a4b8-ec2f-45f5-a09d-1cb8e135b2bf	849
854	uri://ed-fi.org/LanguageDescriptor	rap	Rapanui	Rapanui	\N	\N	\N	\N	2023-11-08 13:57:32.832122	2023-11-08 13:57:32.832053	7edfb3ce-1756-4f3c-a5ed-b7b52358f24d	854
860	uri://ed-fi.org/LanguageDescriptor	sam	Samaritan Aramaic	Samaritan Aramaic	\N	\N	\N	\N	2023-11-08 13:57:32.845647	2023-11-08 13:57:32.845531	7e5429ae-c003-4aff-a515-ebe2a179aed8	860
862	uri://ed-fi.org/LanguageDescriptor	sel	Selkup	Selkup	\N	\N	\N	\N	2023-11-08 13:57:32.849168	2023-11-08 13:57:32.849139	9bdf5c62-c2a4-4cc9-85ba-65c7a466a016	862
866	uri://ed-fi.org/LanguageDescriptor	sit	Sino-Tibetan languages	Sino-Tibetan languages	\N	\N	\N	\N	2023-11-08 13:57:32.855403	2023-11-08 13:57:32.85538	b6f5820b-2b4f-4ae1-bf1e-c0e0fa9b8768	866
868	uri://ed-fi.org/LanguageDescriptor	sma	Southern Sami	Southern Sami	\N	\N	\N	\N	2023-11-08 13:57:32.86194	2023-11-08 13:57:32.861913	37ae1d98-f34c-4914-96f3-6e1f70959ad3	868
870	uri://ed-fi.org/LanguageDescriptor	sms	Skolt Sami	Skolt Sami	\N	\N	\N	\N	2023-11-08 13:57:32.864454	2023-11-08 13:57:32.864416	9efdc53a-640a-4487-a69c-8b14e32d55ae	870
874	uri://ed-fi.org/LanguageDescriptor	son	Songhai languages	Songhai languages	\N	\N	\N	\N	2023-11-08 13:57:32.871224	2023-11-08 13:57:32.870992	c7f6dda0-e488-4031-bdbb-032019c3c94c	874
879	uri://ed-fi.org/LanguageDescriptor	sux	Sumerian	Sumerian	\N	\N	\N	\N	2023-11-08 13:57:32.879891	2023-11-08 13:57:32.879865	7ce860ae-eadb-4301-9b21-083f8c1fc78f	879
882	uri://ed-fi.org/LanguageDescriptor	tai	Tai languages	Tai languages	\N	\N	\N	\N	2023-11-08 13:57:32.887032	2023-11-08 13:57:32.886986	ae029025-2cbf-4f5e-94fd-e8c0d01857f6	882
886	uri://ed-fi.org/LanguageDescriptor	tgl	Tagalog	Tagalog	\N	\N	\N	\N	2023-11-08 13:57:32.894848	2023-11-08 13:57:32.894817	48e250a5-1915-4009-866a-babe92b7e816	886
890	uri://ed-fi.org/LanguageDescriptor	tli	Tlingit	Tlingit	\N	\N	\N	\N	2023-11-08 13:57:32.902154	2023-11-08 13:57:32.902123	49f00d95-0023-4066-ba3d-3e0fc6e9e041	890
892	uri://ed-fi.org/LanguageDescriptor	tpi	Tok Pisin	Tok Pisin	\N	\N	\N	\N	2023-11-08 13:57:32.906308	2023-11-08 13:57:32.906231	92e396af-ecbb-49d6-9ed6-608fae262bc1	892
893	uri://ed-fi.org/LanguageDescriptor	tuk	Turkmen	Turkmen	\N	\N	\N	\N	2023-11-08 13:57:32.909026	2023-11-08 13:57:32.908999	377b839f-e26e-435b-bc85-8502ac72e628	893
898	uri://ed-fi.org/LanguageDescriptor	tup	Tupi languages	Tupi languages	\N	\N	\N	\N	2023-11-08 13:57:32.916278	2023-11-08 13:57:32.916164	68766e1a-a8fb-47e8-bbe7-35ac65fb5418	898
899	uri://ed-fi.org/LanguageDescriptor	umb	Umbundu	Umbundu	\N	\N	\N	\N	2023-11-08 13:57:32.920052	2023-11-08 13:57:32.920026	3b13a21d-65b9-4476-ab8b-872feed99c46	899
903	uri://ed-fi.org/LanguageDescriptor	vot	Votic	Votic	\N	\N	\N	\N	2023-11-08 13:57:32.927525	2023-11-08 13:57:32.927494	f6c6e9e7-8c27-4359-bfd2-9730c92c08f6	903
906	uri://ed-fi.org/LanguageDescriptor	wol	Wolof	Wolof	\N	\N	\N	\N	2023-11-08 13:57:32.931097	2023-11-08 13:57:32.931066	f436b108-798b-49d4-b869-9682feef08fb	906
911	uri://ed-fi.org/LanguageDescriptor	zen	Zenaga	Zenaga	\N	\N	\N	\N	2023-11-08 13:57:32.942583	2023-11-08 13:57:32.942487	5ac043b9-e182-4063-8148-2e8a28327122	911
914	uri://ed-fi.org/CTEProgramServiceDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	\N	2023-11-08 13:57:32.976344	2023-11-08 13:57:32.975153	de819dd6-65af-4860-ba4b-7fc8098a750e	914
918	uri://ed-fi.org/CTEProgramServiceDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	\N	2023-11-08 13:57:32.984615	2023-11-08 13:57:32.984603	4aba8233-4529-4fec-ae56-3b2b76ef32aa	918
921	uri://ed-fi.org/CTEProgramServiceDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	\N	2023-11-08 13:57:32.9923	2023-11-08 13:57:32.992234	3c129baf-cfab-4c74-a924-83dbec0fdd2b	921
927	uri://ed-fi.org/CTEProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:33.001273	2023-11-08 13:57:33.001245	351b9e8e-a13d-422a-a5f5-e44770422bc6	927
930	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat NotCounted	Repeat NotCounted	Repeat NotCounted	\N	\N	\N	\N	2023-11-08 13:57:33.043026	2023-11-08 13:57:33.042041	548045dc-c673-4b30-8cb8-65dffd18733b	930
936	uri://ed-fi.org/OperationalStatusDescriptor	Changed	Changed	Changed	\N	\N	\N	\N	2023-11-08 13:57:33.082652	2023-11-08 13:57:33.081613	4393f459-3be3-47b0-8b3d-4ba317a6da89	938
940	uri://ed-fi.org/OperationalStatusDescriptor	Future	Future	Future	\N	\N	\N	\N	2023-11-08 13:57:33.092831	2023-11-08 13:57:33.092819	0a096574-dfcf-49eb-a1df-8bd26a6ea322	940
946	uri://ed-fi.org/AccountTypeDescriptor	Expenditure	Expenditure	Expenditure	\N	\N	\N	\N	2023-11-08 13:57:33.131086	2023-11-08 13:57:33.129797	9aaa116f-6993-4fdf-b2cd-59caa016a6a4	946
948	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Student Growth	Student Growth	Student Growth Measures	\N	\N	\N	\N	2023-11-08 13:57:33.140226	2023-11-08 13:57:33.140212	c1bc4777-0666-4332-ba0f-81bda20d4aa7	948
952	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Teacher survey	Teacher survey	Teacher survey	\N	\N	\N	\N	2023-11-08 13:57:33.150554	2023-11-08 13:57:33.150513	038fcc60-0556-4d6c-bd4f-21c22ab40c3c	952
954	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	No	No	No	\N	\N	\N	\N	2023-11-08 13:57:33.177454	2023-11-08 13:57:33.176343	30e28d77-5c46-4fca-9de6-681ae84a2869	954
957	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	DUNS	DUNS	DUNS	\N	\N	\N	\N	2023-11-08 13:57:33.21438	2023-11-08 13:57:33.213431	d4e3da49-10f7-45c7-a5ca-03aad0b02842	957
964	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	LEA	LEA	LEA	\N	\N	\N	\N	2023-11-08 13:57:33.225242	2023-11-08 13:57:33.224897	cdc9ee46-b8e0-4303-b6be-485474fad6b4	964
965	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	SEA	SEA	SEA	\N	\N	\N	\N	2023-11-08 13:57:33.231283	2023-11-08 13:57:33.231256	110cc4d5-e138-4ca5-aede-7782ed9890af	965
969	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentage	Percentage	Percentage	\N	\N	\N	\N	2023-11-08 13:57:33.265268	2023-11-08 13:57:33.264112	b7229b3b-4e06-4dab-94a7-b889dbe91231	969
973	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Range	Range	Range	\N	\N	\N	\N	2023-11-08 13:57:33.273956	2023-11-08 13:57:33.273929	a0fc006c-91d8-4a62-899a-96cfc87a2dd6	973
831	uri://ed-fi.org/LanguageDescriptor	mun	Munda languages	Munda languages	\N	\N	\N	\N	2023-11-08 13:57:32.788335	2023-11-08 13:57:32.788294	18b60265-679a-493b-a801-d0c41302fd8f	831
834	uri://ed-fi.org/LanguageDescriptor	nah	Nahuatl languages	Nahuatl languages	\N	\N	\N	\N	2023-11-08 13:57:32.793082	2023-11-08 13:57:32.792962	43a40c1d-4a0c-4552-a198-a92af49ddae4	834
839	uri://ed-fi.org/LanguageDescriptor	nor	Norwegian	Norwegian	\N	\N	\N	\N	2023-11-08 13:57:32.803963	2023-11-08 13:57:32.80375	1a9d7522-bc41-431a-931c-c3baede19ef6	839
842	uri://ed-fi.org/LanguageDescriptor	oci	Occitan (post 1500)	Occitan (post 1500)	\N	\N	\N	\N	2023-11-08 13:57:32.80989	2023-11-08 13:57:32.809846	04abee30-9ada-457d-98ff-3c77c860d0ed	842
843	uri://ed-fi.org/LanguageDescriptor	osa	Osage	Osage	\N	\N	\N	\N	2023-11-08 13:57:32.815171	2023-11-08 13:57:32.815126	7cae86e0-b8aa-4b6c-b56e-a0cf3af1a51d	843
850	uri://ed-fi.org/LanguageDescriptor	phn	Phoenician	Phoenician	\N	\N	\N	\N	2023-11-08 13:57:32.824376	2023-11-08 13:57:32.82425	7fe7146e-0f78-407c-af16-0b50bed87494	850
852	uri://ed-fi.org/LanguageDescriptor	roa	Romance languages	Romance languages	\N	\N	\N	\N	2023-11-08 13:57:32.831385	2023-11-08 13:57:32.831023	4ea82290-8ec9-43dc-8566-522dabc0958e	852
857	uri://ed-fi.org/LanguageDescriptor	sag	Sango	Sango	\N	\N	\N	\N	2023-11-08 13:57:32.839776	2023-11-08 13:57:32.839749	8b62165b-65d0-47a9-a952-39a4a630431d	857
867	uri://ed-fi.org/LanguageDescriptor	slo	Slovak	Slovak	\N	\N	\N	\N	2023-11-08 13:57:32.856848	2023-11-08 13:57:32.856822	206fe7b6-2d56-4d95-b444-5903a6992526	867
869	uri://ed-fi.org/LanguageDescriptor	smi	Sami languages	Sami languages	\N	\N	\N	\N	2023-11-08 13:57:32.86274	2023-11-08 13:57:32.862608	7281b397-5caa-4e59-9232-ef817460673c	869
873	uri://ed-fi.org/LanguageDescriptor	snd	Sindhi	Sindhi	\N	\N	\N	\N	2023-11-08 13:57:32.869936	2023-11-08 13:57:32.86987	aa8c961d-4e28-499b-80a1-cc08675c3692	873
876	uri://ed-fi.org/LanguageDescriptor	srr	Serer	Serer	\N	\N	\N	\N	2023-11-08 13:57:32.875527	2023-11-08 13:57:32.875501	f58494e7-4584-42e5-948c-76a5c7358404	876
880	uri://ed-fi.org/LanguageDescriptor	swe	Swedish	Swedish	\N	\N	\N	\N	2023-11-08 13:57:32.882544	2023-11-08 13:57:32.882515	a0b767e3-3ed2-4ead-a95e-f9051413451d	880
884	uri://ed-fi.org/LanguageDescriptor	tat	Tatar	Tatar	\N	\N	\N	\N	2023-11-08 13:57:32.888607	2023-11-08 13:57:32.888502	fc268685-87c7-4714-a181-7702b4885c4f	884
888	uri://ed-fi.org/LanguageDescriptor	tir	Tigrinya	Tigrinya	\N	\N	\N	\N	2023-11-08 13:57:32.898055	2023-11-08 13:57:32.898021	97b8fc9a-6620-4336-a889-6167e2f16b1c	888
889	uri://ed-fi.org/LanguageDescriptor	tkl	Tokelau	Tokelau	\N	\N	\N	\N	2023-11-08 13:57:32.901045	2023-11-08 13:57:32.901005	5d4d2a0d-d6ca-448f-8866-83881032d1a6	889
891	uri://ed-fi.org/LanguageDescriptor	tog	Tonga (Nyasa)	Tonga (Nyasa)	\N	\N	\N	\N	2023-11-08 13:57:32.906276	2023-11-08 13:57:32.906243	81df98a7-b3de-40a0-a6b0-3f65616abfeb	891
897	uri://ed-fi.org/LanguageDescriptor	udm	Udmurt	Udmurt	\N	\N	\N	\N	2023-11-08 13:57:32.915709	2023-11-08 13:57:32.915696	07b52333-531e-4c94-a26b-702285429a07	897
900	uri://ed-fi.org/LanguageDescriptor	urd	Urdu	Urdu	\N	\N	\N	\N	2023-11-08 13:57:32.922809	2023-11-08 13:57:32.922782	96ff0519-7cc7-4b58-b834-8568466cea46	900
904	uri://ed-fi.org/LanguageDescriptor	was	Washo	Washo	\N	\N	\N	\N	2023-11-08 13:57:32.929216	2023-11-08 13:57:32.929183	70a37570-fc47-4c62-b672-ab164c8169c0	904
907	uri://ed-fi.org/LanguageDescriptor	xho	Xhosa	Xhosa	\N	\N	\N	\N	2023-11-08 13:57:32.934641	2023-11-08 13:57:32.934595	f244550a-37e1-4bb7-acf5-600f7d11b8b2	907
916	uri://ed-fi.org/CTEProgramServiceDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	\N	2023-11-08 13:57:32.976309	2023-11-08 13:57:32.975149	6bc6a230-599b-4299-8728-848c2fc8f8bb	916
919	uri://ed-fi.org/CTEProgramServiceDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	\N	2023-11-08 13:57:32.98579	2023-11-08 13:57:32.985761	1bee832e-6c5a-4bab-81b4-11e783f886b9	919
922	uri://ed-fi.org/CTEProgramServiceDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	\N	2023-11-08 13:57:32.992829	2023-11-08 13:57:32.992792	0a22ed65-7c93-46cf-804f-f24a224e7847	922
925	uri://ed-fi.org/CTEProgramServiceDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	\N	2023-11-08 13:57:32.997638	2023-11-08 13:57:32.997611	893435cf-5236-4ca3-92fd-6a9b8eff81ca	925
929	uri://ed-fi.org/CTEProgramServiceDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	\N	2023-11-08 13:57:33.006272	2023-11-08 13:57:33.006242	f621dd3f-a6e8-47e1-801c-d48e4b0d5210	929
933	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Counted	Repeat Counted	Repeat Counted	\N	\N	\N	\N	2023-11-08 13:57:33.043108	2023-11-08 13:57:33.042019	ee019474-5ad1-4bae-b36d-ca5c0b03b36c	933
937	uri://ed-fi.org/OperationalStatusDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-11-08 13:57:33.082668	2023-11-08 13:57:33.081584	4b4c155b-ce9b-4e47-a5b0-2f20e065fae3	936
942	uri://ed-fi.org/OperationalStatusDescriptor	Reopened	Reopened	Reopened	\N	\N	\N	\N	2023-11-08 13:57:33.092891	2023-11-08 13:57:33.092853	77d480e8-7063-43a6-bb26-3b02cd640dbc	942
947	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Observation	Observation	Observation	\N	\N	\N	\N	2023-11-08 13:57:33.137265	2023-11-08 13:57:33.135847	38cad0d9-5688-4946-852a-66ba856a96c7	947
950	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-11-08 13:57:33.141867	2023-11-08 13:57:33.141853	1dae00a4-14f9-4917-8b43-106e6decb732	950
951	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Student survey	Student survey	Student survey	\N	\N	\N	\N	2023-11-08 13:57:33.145484	2023-11-08 13:57:33.145341	ce3b3b86-1c62-4185-a113-eeb8185bc5fc	951
953	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with one or more student offenses	Yes, with reporting of one or more students for an offense	Yes, with reporting of one or more students for an offense	\N	\N	\N	\N	2023-11-08 13:57:33.177322	2023-11-08 13:57:33.176335	17862a3e-f9dd-4009-a897-c183bd885d5e	953
960	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	ACT	ACT	ACT	\N	\N	\N	\N	2023-11-08 13:57:33.214516	2023-11-08 13:57:33.213406	800c3efb-9721-470f-a11b-fbfa4376b7d3	960
962	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:33.224149	2023-11-08 13:57:33.224071	197e5711-9e75-4d25-bff7-2475c049196d	962
966	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:33.231384	2023-11-08 13:57:33.230665	64fc76e3-78e7-463f-8a88-143fe7c875e0	966
968	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Level	Level	Level	\N	\N	\N	\N	2023-11-08 13:57:33.265065	2023-11-08 13:57:33.264137	4fa3d69a-c78a-44f3-a50f-dd6a80e261e0	968
975	uri://ed-fi.org/QuestionFormDescriptor	Checkbox	Checkbox	Checkbox	\N	\N	\N	\N	2023-11-08 13:57:33.301739	2023-11-08 13:57:33.300643	eb8a60df-3868-4884-a444-d8d4c93c687f	975
832	uri://ed-fi.org/LanguageDescriptor	myn	Mayan languages	Mayan languages	\N	\N	\N	\N	2023-11-08 13:57:32.791361	2023-11-08 13:57:32.790575	b3616d01-e158-49aa-93ec-0b7b635688cf	832
838	uri://ed-fi.org/LanguageDescriptor	nym	Nyamwezi	Nyamwezi	\N	\N	\N	\N	2023-11-08 13:57:32.803063	2023-11-08 13:57:32.803035	074ee047-27d1-4e87-9a63-69852353f933	838
846	uri://ed-fi.org/LanguageDescriptor	ota	Turkish, Ottoman (1500-1928)	Turkish, Ottoman (1500-1928)	\N	\N	\N	\N	2023-11-08 13:57:32.817268	2023-11-08 13:57:32.817239	80817ce5-919e-42c8-931b-4dd4b303ae00	846
848	uri://ed-fi.org/LanguageDescriptor	pol	Polish	Polish	\N	\N	\N	\N	2023-11-08 13:57:32.822958	2023-11-08 13:57:32.822929	70a7a52f-d617-4cc1-a22b-d7ccdc57f681	848
851	uri://ed-fi.org/LanguageDescriptor	por	Portuguese	Portuguese	\N	\N	\N	\N	2023-11-08 13:57:32.829548	2023-11-08 13:57:32.82952	becf139a-86d5-433e-a619-9b7058e757d5	851
855	uri://ed-fi.org/LanguageDescriptor	rom	Romany	Romany	\N	\N	\N	\N	2023-11-08 13:57:32.83677	2023-11-08 13:57:32.83674	13f41da6-d662-4418-af1d-ce6d37373724	855
858	uri://ed-fi.org/LanguageDescriptor	rus	Russian	Russian	\N	\N	\N	\N	2023-11-08 13:57:32.839665	2023-11-08 13:57:32.839495	cfcc805a-78d5-4aa4-88c5-3649e1a94d49	858
859	uri://ed-fi.org/LanguageDescriptor	sai	South American Indian languages	South American Indian languages	\N	\N	\N	\N	2023-11-08 13:57:32.843118	2023-11-08 13:57:32.843069	3b5c3cf1-9440-4793-8a6b-d7ba503a9213	859
864	uri://ed-fi.org/LanguageDescriptor	sga	Irish, Old (to 900)	Irish, Old (to 900)	\N	\N	\N	\N	2023-11-08 13:57:32.853355	2023-11-08 13:57:32.853341	108c0498-166e-446c-8118-943a56d074cb	864
877	uri://ed-fi.org/LanguageDescriptor	ssw	Swati	Swati	\N	\N	\N	\N	2023-11-08 13:57:32.87663	2023-11-08 13:57:32.876587	9a38bf10-2e99-4ea5-976f-29f481a2c6a3	877
881	uri://ed-fi.org/LanguageDescriptor	syr	Syriac	Syriac	\N	\N	\N	\N	2023-11-08 13:57:32.884457	2023-11-08 13:57:32.884431	73ff7a26-b99d-4766-96fa-2546fc3338fe	881
887	uri://ed-fi.org/LanguageDescriptor	tib	Tibetan	Tibetan	\N	\N	\N	\N	2023-11-08 13:57:32.89601	2023-11-08 13:57:32.895981	ff46a9fd-42b4-40db-83b4-28a6800aff53	887
895	uri://ed-fi.org/LanguageDescriptor	tut	Altaic languages	Altaic languages	\N	\N	\N	\N	2023-11-08 13:57:32.913774	2023-11-08 13:57:32.913761	a954fd82-9531-4da5-9a0e-633284b6296b	895
901	uri://ed-fi.org/LanguageDescriptor	vai	Vai	Vai	\N	\N	\N	\N	2023-11-08 13:57:32.922824	2023-11-08 13:57:32.9228	ab34b5fd-ac3d-456d-8a1c-f3038f288915	901
910	uri://ed-fi.org/LanguageDescriptor	zap	Zapotec	Zapotec	\N	\N	\N	\N	2023-11-08 13:57:32.94025	2023-11-08 13:57:32.940213	84358008-29d0-41b0-97c3-f3e5ff66ed8a	910
915	uri://ed-fi.org/CTEProgramServiceDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	\N	2023-11-08 13:57:32.976344	2023-11-08 13:57:32.975164	44a24fd8-783e-4d95-ac50-e87717d076fb	915
917	uri://ed-fi.org/CTEProgramServiceDescriptor	Finance	Finance	Finance	\N	\N	\N	\N	2023-11-08 13:57:32.984565	2023-11-08 13:57:32.984549	ca69a052-8359-4142-8342-884f0d1afff5	917
923	uri://ed-fi.org/CTEProgramServiceDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	\N	2023-11-08 13:57:32.993511	2023-11-08 13:57:32.993473	b0f13ba0-9883-4cf7-9111-cf3b68e3f3e6	923
928	uri://ed-fi.org/CTEProgramServiceDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	\N	2023-11-08 13:57:33.004551	2023-11-08 13:57:33.004522	04d5c607-a499-4f72-8304-896352168f1e	928
931	uri://ed-fi.org/CourseRepeatCodeDescriptor	Not Counted Other	Not Counted Other	Not Counted Other	\N	\N	\N	\N	2023-11-08 13:57:33.043265	2023-11-08 13:57:33.042047	c50b11c2-521f-416c-a11c-88f102755e3b	932
935	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replacement Counted	Replacement Counted	Replacement Counted	\N	\N	\N	\N	2023-11-08 13:57:33.052012	2023-11-08 13:57:33.05195	cf1ce1c0-8e9b-4660-963c-986bc580fef7	935
939	uri://ed-fi.org/OperationalStatusDescriptor	Added	Added	Added	\N	\N	\N	\N	2023-11-08 13:57:33.083526	2023-11-08 13:57:33.081588	ba0bae2f-b022-49ea-8b57-420cd098bdb7	939
941	uri://ed-fi.org/OperationalStatusDescriptor	New	New	New	\N	\N	\N	\N	2023-11-08 13:57:33.093175	2023-11-08 13:57:33.092753	372e1b77-8b25-4024-b18f-b01e5c9d2f07	941
944	uri://ed-fi.org/AccountTypeDescriptor	Balance sheet	Balance sheet	Balance sheet	\N	\N	\N	\N	2023-11-08 13:57:33.130968	2023-11-08 13:57:33.129789	cc20ba48-be7e-4ee5-b3e0-a097ce3d15c7	944
949	uri://ed-fi.org/ProgramEvaluationTypeDescriptor	Peer	Peer	Peer	\N	\N	\N	\N	2023-11-08 13:57:33.141645	2023-11-08 13:57:33.141606	312676bc-cec3-4f97-971f-1d78411c3398	949
955	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with no reported offenses	Yes, with no reported offenses	Yes, with no reported offenses	\N	\N	\N	\N	2023-11-08 13:57:33.177409	2023-11-08 13:57:33.176371	17fcfcce-a998-4ff0-8caa-5e749e7d24b6	955
959	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	IPEDS	IPEDS	IPEDS	\N	\N	\N	\N	2023-11-08 13:57:33.214523	2023-11-08 13:57:33.213435	04ff29f8-04c1-4e94-8508-8655b8c13c6a	959
963	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	\N	2023-11-08 13:57:33.224386	2023-11-08 13:57:33.22436	8a59e8a7-5a70-4df2-ba89-bf3fcf938099	963
970	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Decimal	Decimal	Decimal	\N	\N	\N	\N	2023-11-08 13:57:33.265208	2023-11-08 13:57:33.26412	c88089cf-b9ed-4fb7-bda9-b0956626b8c0	970
972	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	\N	2023-11-08 13:57:33.273663	2023-11-08 13:57:33.273461	8b3e9ff8-7f84-4711-8875-e671f7006505	972
974	uri://ed-fi.org/QuestionFormDescriptor	Matrix of numeric ratings	Matrix of numeric ratings	Matrix of numeric ratings	\N	\N	\N	\N	2023-11-08 13:57:33.301562	2023-11-08 13:57:33.300621	73ed1f92-43b0-4bee-bcbc-7b2fb074c0ba	974
979	uri://ed-fi.org/QuestionFormDescriptor	Textbox	Textbox	Textbox	\N	\N	\N	\N	2023-11-08 13:57:33.309983	2023-11-08 13:57:33.309958	69829903-7c18-456e-b23d-755421867055	979
984	uri://ed-fi.org/EnrollmentTypeDescriptor	Preregistered	Preregistered	Preregistered	\N	\N	\N	\N	2023-11-08 13:57:33.34901	2023-11-08 13:57:33.347648	cbf26141-b500-4f71-ac9a-b85908c363cc	984
990	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Corrections	Juvenile Corrections	Juvenile Corrections	\N	\N	\N	\N	2023-11-08 13:57:33.357754	2023-11-08 13:57:33.357718	7a1e42fb-24a7-4d5e-a5f2-f0a43ba22a70	990
991	uri://ed-fi.org/CitizenshipStatusDescriptor	Resident alien	Resident alien	Resident alien	\N	\N	\N	\N	2023-11-08 13:57:33.389963	2023-11-08 13:57:33.388968	b1c83ec9-4fa9-4fc2-914e-2dbab75c406a	991
997	uri://ed-fi.org/ParticipationDescriptor	Unable Due To Medical Emergency	Unable Due To Medical Emergency	Unable Due To Medical Emergency	\N	\N	\N	\N	2023-11-08 13:57:33.428909	2023-11-08 13:57:33.427922	9d2749ac-2d5c-441b-bee2-049189cbd656	997
976	uri://ed-fi.org/QuestionFormDescriptor	Dropdown	Dropdown	Dropdown	\N	\N	\N	\N	2023-11-08 13:57:33.301689	2023-11-08 13:57:33.300615	21974a2e-2656-4dd6-83f1-d4a462ba6b0f	976
981	uri://ed-fi.org/QuestionFormDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	\N	2023-11-08 13:57:33.31084	2023-11-08 13:57:33.310802	3801668b-df6a-4dc4-b152-d1ba9645dc6e	981
982	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	At-Risk Programs	At-Risk Programs	At-Risk Programs	\N	\N	\N	\N	2023-11-08 13:57:33.34395	2023-11-08 13:57:33.341439	2a43b4b6-f07f-4052-ab73-7d8cc22d05d4	982
986	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	\N	2023-11-08 13:57:33.350987	2023-11-08 13:57:33.350958	b713173c-f7bf-48e2-9232-b93743517091	986
987	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Adult Corrections	Adult Corrections	Adult Corrections	\N	\N	\N	\N	2023-11-08 13:57:33.357797	2023-11-08 13:57:33.357787	60c54e14-565f-473c-b8a5-f934cffeb6dc	987
994	uri://ed-fi.org/CitizenshipStatusDescriptor	Non-resident alien	Non-resident alien	Non-resident alien	\N	\N	\N	\N	2023-11-08 13:57:33.390099	2023-11-08 13:57:33.388985	5c439876-63b5-4a8c-a5d8-b03a71b7014a	994
996	uri://ed-fi.org/ParticipationDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	\N	2023-11-08 13:57:33.428873	2023-11-08 13:57:33.427931	b3fdabc0-3a3d-475d-bbf6-f85d379a9b75	996
1001	uri://ed-fi.org/BehaviorDescriptor	School Violation	School Violation	School Violation	\N	\N	\N	\N	2023-11-08 13:57:33.467334	2023-11-08 13:57:33.46637	bfcf7265-dca8-47f7-b1d4-2e5608987474	1001
1004	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	\N	2023-11-08 13:57:33.504269	2023-11-08 13:57:33.503314	b174a159-ac7a-4187-b11c-8ddc515a1735	1004
1011	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Government-requested	Government-requested	Government-requested	\N	\N	\N	\N	2023-11-08 13:57:33.5146	2023-11-08 13:57:33.514532	c6ab331d-2776-4051-bfda-0d7d3c27cb25	1011
1013	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	\N	2023-11-08 13:57:33.521683	2023-11-08 13:57:33.521571	00548f6a-d832-4cfe-aeb7-9edb554a3827	1013
1017	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	\N	2023-11-08 13:57:33.529026	2023-11-08 13:57:33.52897	d26b677c-6a42-4c2f-9545-856d2010716c	1017
1021	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	\N	2023-11-08 13:57:33.549259	2023-11-08 13:57:33.549246	e43429c4-4beb-4aef-ba51-864cd5c021d7	1021
1022	uri://ed-fi.org/RepeatIdentifierDescriptor	Other, not counted in GPA	Other, not counted in GPA	Other, not counted in GPA	\N	\N	\N	\N	2023-11-08 13:57:33.583591	2023-11-08 13:57:33.582635	e3341213-a5f3-46a0-8a3c-a64e4905c7d4	1022
1026	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, other institution	Repeated, other institution	Repeated, other institution	\N	\N	\N	\N	2023-11-08 13:57:33.590939	2023-11-08 13:57:33.590887	ef312753-0753-497d-8230-0e55c0c2e6a4	1026
1029	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement not counted	Replacement not counted	Replacement not counted	\N	\N	\N	\N	2023-11-08 13:57:33.596179	2023-11-08 13:57:33.596164	28c632b6-588f-4c8b-9211-f8b952592810	1029
1033	uri://ed-fi.org/AttendanceEventCategoryDescriptor	In Attendance	In Attendance	In Attendance	\N	\N	\N	\N	2023-11-08 13:57:33.625451	2023-11-08 13:57:33.624402	7599492f-c380-481f-afd6-15dbdeb9cbe8	1033
1035	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Early departure	Early departure	Early departure	\N	\N	\N	\N	2023-11-08 13:57:33.634554	2023-11-08 13:57:33.633842	f2d6d200-9105-4037-b364-37a82a681c21	1035
1036	uri://ed-fi.org/ProgramSponsorDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	\N	2023-11-08 13:57:33.66268	2023-11-08 13:57:33.661712	688fd897-8bc1-4b66-bffd-9d682bac1b78	1036
1043	uri://ed-fi.org/ProgramSponsorDescriptor	Postsecondary institution	Postsecondary institution	Postsecondary institution	\N	\N	\N	\N	2023-11-08 13:57:33.674957	2023-11-08 13:57:33.674916	f6e5f18e-465b-4ec6-81a9-81b4b186962e	1043
1045	uri://ed-fi.org/ProgramSponsorDescriptor	Religious organization	Religious organization	Religious organization	\N	\N	\N	\N	2023-11-08 13:57:33.678303	2023-11-08 13:57:33.67829	87ca63fc-7ff2-4674-afd0-82effbd55283	1045
1050	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By health care provider	By health care provider	By health care provider	\N	\N	\N	\N	2023-11-08 13:57:33.714741	2023-11-08 13:57:33.71358	9f88ca46-c3df-467e-9508-bf63db2e922e	1049
1053	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By social service or other type of agency	By social service or other type of agency	By social service or other type of agency	\N	\N	\N	\N	2023-11-08 13:57:33.723752	2023-11-08 13:57:33.723738	750ef465-51c8-43ae-89f6-a4161b3fc596	1053
1058	uri://ed-fi.org/StaffClassificationDescriptor	Secondary Teacher	Secondary Teacher	Secondary Teacher	\N	\N	\N	\N	2023-11-08 13:57:33.764735	2023-11-08 13:57:33.763521	ef967dfa-c921-4ffd-9a52-bf721358b980	1058
1061	uri://ed-fi.org/StaffClassificationDescriptor	Secondary School Counselor	Secondary School Counselor	Secondary School Counselor	\N	\N	\N	\N	2023-11-08 13:57:33.775686	2023-11-08 13:57:33.775647	128089ec-92ce-413b-bb8c-f7f505829158	1061
1066	uri://ed-fi.org/StaffClassificationDescriptor	Librarian/Media Specialist	Librarian/Media Specialist	Librarian/Media Specialist	\N	\N	\N	\N	2023-11-08 13:57:33.783615	2023-11-08 13:57:33.78345	7dcf9e08-2be4-4105-bd90-b951f64bb988	1066
1070	uri://ed-fi.org/StaffClassificationDescriptor	Library/Media Support Staff	Library/Media Support Staff	Library/Media Support Staff	\N	\N	\N	\N	2023-11-08 13:57:33.79086	2023-11-08 13:57:33.790814	3a21adb5-c6fe-42c7-9c08-b872a19eeecf	1070
1073	uri://ed-fi.org/StaffClassificationDescriptor	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	\N	\N	\N	\N	2023-11-08 13:57:33.797688	2023-11-08 13:57:33.797661	8c5f0f8d-de49-4689-8470-51aef26b29fb	1073
1078	uri://ed-fi.org/StaffClassificationDescriptor	Counselor	DEPRECATED: Counselor	DEPRECATED: Counselor	\N	\N	\N	\N	2023-11-08 13:57:33.810799	2023-11-08 13:57:33.810361	0aa6233e-9113-4709-957e-4a3f4a0576e3	1078
1088	uri://ed-fi.org/StaffClassificationDescriptor	Principal	DEPRECATED: Principal	DEPRECATED: Principal	\N	\N	\N	\N	2023-11-08 13:57:33.829186	2023-11-08 13:57:33.82871	388be5d9-ac8e-427f-91c0-7bd212009df9	1088
1096	uri://ed-fi.org/SurveyLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	\N	2023-11-08 13:57:33.877021	2023-11-08 13:57:33.875927	162c4522-9200-4d99-bc9c-7bfed9b982de	1096
1348	uri://ed-fi.org/CountryDescriptor	BM	Bermuda	Bermuda	\N	\N	\N	\N	2023-11-08 13:57:34.988141	2023-11-08 13:57:34.988107	086cdbed-4dd2-4af9-be65-55d22dc02f0d	1348
978	uri://ed-fi.org/QuestionFormDescriptor	Matrix of textboxes	Matrix of textboxes	Matrix of textboxes	\N	\N	\N	\N	2023-11-08 13:57:33.309922	2023-11-08 13:57:33.309907	56c121ca-6576-4293-a28c-56e10ab4a9de	978
983	uri://ed-fi.org/EnrollmentTypeDescriptor	Current	Current	Current	\N	\N	\N	\N	2023-11-08 13:57:33.348835	2023-11-08 13:57:33.347656	3816a25c-91bb-4142-a8fb-4243765bfce4	983
988	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Detention Facilities	Juvenile Detention Facilities	Juvenile Detention Facilities	\N	\N	\N	\N	2023-11-08 13:57:33.357865	2023-11-08 13:57:33.357853	93354da2-27f0-480f-858a-7d4935584d0a	988
992	uri://ed-fi.org/CitizenshipStatusDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	\N	2023-11-08 13:57:33.390117	2023-11-08 13:57:33.388989	ce8c78cd-9fcd-42e2-9cb6-101df5d20200	992
995	uri://ed-fi.org/CitizenshipStatusDescriptor	US Citizen	US Citizen	US Citizen	\N	\N	\N	\N	2023-11-08 13:57:33.399729	2023-11-08 13:57:33.399681	340a89bf-0571-433c-91df-512ca5dc8c41	995
998	uri://ed-fi.org/ParticipationDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-11-08 13:57:33.429138	2023-11-08 13:57:33.427953	0d2033d2-00e5-4976-93f3-2b1579a67ff5	998
1002	uri://ed-fi.org/BehaviorDescriptor	School Code of Conduct	School Code of Conduct	School Code of Conduct	\N	\N	\N	\N	2023-11-08 13:57:33.467603	2023-11-08 13:57:33.466393	dd8b1da1-ce69-40d8-8cf0-746122e2f38e	1002
1007	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	\N	2023-11-08 13:57:33.504268	2023-11-08 13:57:33.503323	9c64ee30-c6e4-469d-a952-a6a0aa22d45d	1007
1010	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Family and medical leave	Family and medical leave	Family and medical leave	\N	\N	\N	\N	2023-11-08 13:57:33.514785	2023-11-08 13:57:33.514758	a16b9867-f705-4fb1-8340-08982e1df351	1010
1014	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Military leave	Military leave	Military leave	\N	\N	\N	\N	2023-11-08 13:57:33.52333	2023-11-08 13:57:33.5233	617f57b6-85fa-4965-9adb-9db5f255a86f	1014
1016	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sabbatical leave	Sabbatical leave	Sabbatical leave	\N	\N	\N	\N	2023-11-08 13:57:33.527349	2023-11-08 13:57:33.527314	e4b2d5b0-ae52-4502-b4ea-3b541514da48	1016
1018	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	\N	2023-11-08 13:57:33.547108	2023-11-08 13:57:33.54683	715818d2-f28e-4b95-b788-ee9fc50e42d2	1018
1023	uri://ed-fi.org/RepeatIdentifierDescriptor	Not repeated	Not repeated	Not repeated	\N	\N	\N	\N	2023-11-08 13:57:33.583813	2023-11-08 13:57:33.582615	0e3fe57f-3fe7-4460-8c3a-1f17e4069cf6	1023
1028	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement counted	Replacement counted	Replacement counted	\N	\N	\N	\N	2023-11-08 13:57:33.594108	2023-11-08 13:57:33.594092	428c5ed2-59db-4110-a24b-eaebaac77405	1028
1032	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Excused Absence	Excused Absence	Excused Absence	\N	\N	\N	\N	2023-11-08 13:57:33.625783	2023-11-08 13:57:33.624373	1b59f82c-033d-4fc5-aa3b-2d33bb0ea771	1032
1039	uri://ed-fi.org/ProgramSponsorDescriptor	Business	Business	Business	\N	\N	\N	\N	2023-11-08 13:57:33.663578	2023-11-08 13:57:33.661692	f9f08481-eec1-4be3-94f2-6b6d3edee6b0	1039
1042	uri://ed-fi.org/ProgramSponsorDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	\N	2023-11-08 13:57:33.672949	2023-11-08 13:57:33.672936	8cd0e2e4-31b9-4867-ac97-b56c60f504b5	1042
1047	uri://ed-fi.org/ProgramSponsorDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	\N	2023-11-08 13:57:33.686052	2023-11-08 13:57:33.686013	4402ffb5-5171-4d3b-9f29-2ce29e0af22b	1047
1048	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By licensed physical therapist	By licensed physical therapist	By licensed physical therapist	\N	\N	\N	\N	2023-11-08 13:57:33.714595	2023-11-08 13:57:33.713606	c856019c-16ef-4090-b71f-7a5c857deb73	1048
1052	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Not applicable to the student	Not applicable to the student	Not applicable to the student	\N	\N	\N	\N	2023-11-08 13:57:33.723597	2023-11-08 13:57:33.723551	ca0b75fc-6cbf-4d41-9e9b-8e554f9c816e	1052
1059	uri://ed-fi.org/StaffClassificationDescriptor	Elementary Teacher	Elementary Teacher	Elementary Teacher	\N	\N	\N	\N	2023-11-08 13:57:33.764791	2023-11-08 13:57:33.763507	5e5f8e24-3203-4a7b-8ffb-5708b35902ae	1059
1063	uri://ed-fi.org/StaffClassificationDescriptor	Elementary School Counselor	Elementary School Counselor	Elementary School Counselor	\N	\N	\N	\N	2023-11-08 13:57:33.776922	2023-11-08 13:57:33.776838	9ae4489a-a143-43d1-8e72-e55a3ad37318	1063
1065	uri://ed-fi.org/StaffClassificationDescriptor	School Counselor	School Counselor	School Counselor	\N	\N	\N	\N	2023-11-08 13:57:33.782863	2023-11-08 13:57:33.782834	91ec5044-f2f2-4373-98bd-e06866018623	1065
1067	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrator	LEA Administrator	LEA Administrator	\N	\N	\N	\N	2023-11-08 13:57:33.787946	2023-11-08 13:57:33.787904	0a095bc6-9fc4-45a7-8744-d5eb320bf7bb	1067
1074	uri://ed-fi.org/StaffClassificationDescriptor	Instr Coordinator and Supervisor to the Staff	Instructional Coordinator and Supervisor to the Staff	Instructional Coordinator and Supervisor to the Staff	\N	\N	\N	\N	2023-11-08 13:57:33.80188	2023-11-08 13:57:33.801851	d2cd5c9e-3f4d-421d-adc3-34685c6c75a8	1074
1080	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Aide	DEPRECATED: Instructional Aide	DEPRECATED: Instructional Aide	\N	\N	\N	\N	2023-11-08 13:57:33.813343	2023-11-08 13:57:33.813312	8e397ff6-e7cb-4ff0-8b1c-ea66f4190273	1080
1081	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Coordinator	DEPRECATED: Instructional Coordinator	DEPRECATED: Instructional Coordinator	\N	\N	\N	\N	2023-11-08 13:57:33.816829	2023-11-08 13:57:33.81664	e4d421ef-bb69-4e8f-9b2c-6eb5599692fe	1081
1082	uri://ed-fi.org/StaffClassificationDescriptor	Operational Support	DEPRECATED: Operational Support	DEPRECATED: Operational Support	\N	\N	\N	\N	2023-11-08 13:57:33.819768	2023-11-08 13:57:33.819726	cff3b606-20c4-4dcc-b9cb-1678dc78a611	1082
1084	uri://ed-fi.org/StaffClassificationDescriptor	LEA Specialist	DEPRECATED: LEA Specialist	DEPRECATED: LEA Specialist	\N	\N	\N	\N	2023-11-08 13:57:33.823687	2023-11-08 13:57:33.82366	84cce997-b76f-44f8-852a-908c70a43c9e	1084
1090	uri://ed-fi.org/StaffClassificationDescriptor	Superintendent	DEPRECATED: Superintendent	DEPRECATED: Superintendent	\N	\N	\N	\N	2023-11-08 13:57:33.836816	2023-11-08 13:57:33.836803	9bbfabb1-9058-4c15-b32d-a5e50e5a37ee	1090
1097	uri://ed-fi.org/SurveyLevelDescriptor	Early Education	Early Education	Early Education	\N	\N	\N	\N	2023-11-08 13:57:33.877498	2023-11-08 13:57:33.875961	faee540f-09ba-4093-a837-ccfa3ebaaf65	1097
980	uri://ed-fi.org/QuestionFormDescriptor	Matrix of dropdowns	Matrix of dropdowns	Matrix of dropdowns	\N	\N	\N	\N	2023-11-08 13:57:33.310489	2023-11-08 13:57:33.310336	0a3b38d3-a491-43a6-bd87-5bf7c86fa95f	980
985	uri://ed-fi.org/EnrollmentTypeDescriptor	Summer	Summer	Summer	\N	\N	\N	\N	2023-11-08 13:57:33.348828	2023-11-08 13:57:33.347651	aaaf23ed-c77b-4e63-bc86-8f2711c4d9a8	985
989	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	\N	2023-11-08 13:57:33.357954	2023-11-08 13:57:33.357927	10bd4cd4-9999-4e2f-84b8-703d3a2d71fc	989
993	uri://ed-fi.org/CitizenshipStatusDescriptor	Permanent resident	Permanent resident	Permanent resident	\N	\N	\N	\N	2023-11-08 13:57:33.390117	2023-11-08 13:57:33.388959	8a3d055b-08f1-4fec-accf-7521eed93b22	993
999	uri://ed-fi.org/ParticipationDescriptor	Attempted	Attempted	Attempted but did not complete	\N	\N	\N	\N	2023-11-08 13:57:33.429006	2023-11-08 13:57:33.427937	8a1bd6d5-e94c-4925-a869-73e1091850d3	999
1003	uri://ed-fi.org/BehaviorDescriptor	State Offense	State Offense	State Offense	\N	\N	\N	\N	2023-11-08 13:57:33.467356	2023-11-08 13:57:33.466398	de960fe7-457d-4514-b306-1d8c03e55f80	1003
1005	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Annual leave	Annual leave	Annual leave	\N	\N	\N	\N	2023-11-08 13:57:33.504277	2023-11-08 13:57:33.50334	5a205bcf-185a-431f-a5ec-4feb060e413f	1005
1009	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	\N	2023-11-08 13:57:33.514078	2023-11-08 13:57:33.51405	b12efbfc-6810-46a8-b623-53962be50968	1009
1012	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:33.519759	2023-11-08 13:57:33.51973	5ceab605-c371-4732-a62e-2a44e23e9ec6	1012
1015	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	\N	2023-11-08 13:57:33.524907	2023-11-08 13:57:33.524893	d7fbe223-1c3d-4325-9b16-b0d8794c1e9d	1015
1019	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	\N	2023-11-08 13:57:33.547105	2023-11-08 13:57:33.547078	76f0387f-a5d2-4609-bc45-746552cb9467	1019
1025	uri://ed-fi.org/RepeatIdentifierDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:33.583713	2023-11-08 13:57:33.58265	5ced62de-b2cd-4c93-ab61-43f707f4c820	1025
1030	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Unexcused Absence	Unexcused Absence	Unexcused Absence	\N	\N	\N	\N	2023-11-08 13:57:33.625402	2023-11-08 13:57:33.624365	76665840-39c7-4ddf-abf1-9455e9f46ba1	1030
1034	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Partial	Partial	Partial	\N	\N	\N	\N	2023-11-08 13:57:33.634251	2023-11-08 13:57:33.634205	38713cd8-c2c7-4336-b6e1-223214c9ea5d	1034
1038	uri://ed-fi.org/ProgramSponsorDescriptor	Education organization network	Education organization network	Education organization network	\N	\N	\N	\N	2023-11-08 13:57:33.662695	2023-11-08 13:57:33.661688	357b69f9-5966-4d3c-a55d-a2dafee533a6	1038
1041	uri://ed-fi.org/ProgramSponsorDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:33.672772	2023-11-08 13:57:33.672743	3ca2e268-a1cf-4fcb-8b76-bbbd78b48ea1	1041
1044	uri://ed-fi.org/ProgramSponsorDescriptor	Private organization	Private organization	Private organization	\N	\N	\N	\N	2023-11-08 13:57:33.677975	2023-11-08 13:57:33.67794	b8ef3612-b067-4c7b-b5da-0b4d2b2cb782	1044
1046	uri://ed-fi.org/ProgramSponsorDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:33.681122	2023-11-08 13:57:33.681096	0c5cf80a-e907-4032-bdb0-15021412ff7f	1046
1049	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By physician	By physician	By physician	\N	\N	\N	\N	2023-11-08 13:57:33.714729	2023-11-08 13:57:33.713589	c6f91f65-5deb-44c5-8299-5dd0995f7872	1050
1054	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:33.72403	2023-11-08 13:57:33.724016	9d76c071-bf4b-4c21-8077-55855810e568	1054
1056	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Unknown or Unreported	Unknown or Unreported	Unknown or Unreported	\N	\N	\N	\N	2023-11-08 13:57:33.729718	2023-11-08 13:57:33.729679	44a2bf57-dd07-4be7-bca8-aaaa8ba9b1e7	1056
1060	uri://ed-fi.org/StaffClassificationDescriptor	Kindergarten Teacher	Kindergarten Teacher	Kindergarten Teacher	\N	\N	\N	\N	2023-11-08 13:57:33.765101	2023-11-08 13:57:33.763512	10baa0cf-bfc5-4c70-afb5-4ae3300eed72	1060
1062	uri://ed-fi.org/StaffClassificationDescriptor	Paraprofessional/Instructional Aide	Paraprofessional/Instructional Aide	Paraprofessional/Instructional Aide	\N	\N	\N	\N	2023-11-08 13:57:33.77635	2023-11-08 13:57:33.77623	ac324b39-c4ad-4e36-a90c-7490e546de67	1062
1069	uri://ed-fi.org/StaffClassificationDescriptor	School Administrator	School Administrator	School Administrator	\N	\N	\N	\N	2023-11-08 13:57:33.790232	2023-11-08 13:57:33.790207	484ea54e-83dd-46d1-b5e8-9ef2cac0b77e	1069
1071	uri://ed-fi.org/StaffClassificationDescriptor	School Administrative Support Staff	School Administrative Support Staff	School Administrative Support Staff	\N	\N	\N	\N	2023-11-08 13:57:33.796262	2023-11-08 13:57:33.796236	4be4f39e-7191-4244-bf8d-3957f89911c8	1071
1076	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Principal	DEPRECATED: Assistant Principal	DEPRECATED: Assistant Principal	\N	\N	\N	\N	2023-11-08 13:57:33.806554	2023-11-08 13:57:33.806315	e4c9176c-17ed-4fb9-9c45-577b40258772	1076
1083	uri://ed-fi.org/StaffClassificationDescriptor	LEA System Administrator	DEPRECATED: LEA System Administrator	DEPRECATED: LEA System Administrator	\N	\N	\N	\N	2023-11-08 13:57:33.82049	2023-11-08 13:57:33.820477	a50f540c-2e7b-4fda-a6d4-c65c21f1eb06	1083
1085	uri://ed-fi.org/StaffClassificationDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	\N	2023-11-08 13:57:33.824092	2023-11-08 13:57:33.82408	8863cd64-cba5-4bbb-8734-752d16819281	1085
1087	uri://ed-fi.org/StaffClassificationDescriptor	School Specialist	DEPRECATED: School Specialist	DEPRECATED: School Specialist	\N	\N	\N	\N	2023-11-08 13:57:33.829924	2023-11-08 13:57:33.829899	ba529928-8ebe-45b7-ae0f-53356442bac3	1087
1089	uri://ed-fi.org/StaffClassificationDescriptor	State Administrator	DEPRECATED: State Administrator	DEPRECATED: State Administrator	\N	\N	\N	\N	2023-11-08 13:57:33.833409	2023-11-08 13:57:33.83326	9f767522-571a-4242-bc71-1cc678ec05ad	1089
1093	uri://ed-fi.org/StaffClassificationDescriptor	Support Services Staff	DEPRECATED: Support Services Staff	DEPRECATED: Support Services Staff	\N	\N	\N	\N	2023-11-08 13:57:33.842575	2023-11-08 13:57:33.842561	265de936-468d-4230-bfe9-5f9226a6ed8a	1093
1094	uri://ed-fi.org/SurveyLevelDescriptor	Preschool/Prekindergarten	Preschool/Prekindergarten	Preschool/Prekindergarten	\N	\N	\N	\N	2023-11-08 13:57:33.876955	2023-11-08 13:57:33.875945	b17d0a02-9c5f-476f-a520-140ebe6087e9	1094
1006	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	\N	2023-11-08 13:57:33.504316	2023-11-08 13:57:33.503306	e26de4e9-878f-4ec5-91a9-97f031e59339	1006
1008	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	\N	2023-11-08 13:57:33.513508	2023-11-08 13:57:33.513475	88ab3403-1754-474b-88a6-f27b8bad7c23	1008
1020	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	\N	2023-11-08 13:57:33.547281	2023-11-08 13:57:33.547214	4a5b0246-6be5-4ac0-bed1-1ec7a8a83758	1020
1024	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, counted in grade point average	Repeated, counted in grade point average	Repeated, counted in grade point average	\N	\N	\N	\N	2023-11-08 13:57:33.583814	2023-11-08 13:57:33.582625	133ed31e-4267-4fa4-8269-7174e9ec20df	1024
1027	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, not counted in grade point average	Repeated, not counted in grade point average	Repeated, not counted in grade point average	\N	\N	\N	\N	2023-11-08 13:57:33.593277	2023-11-08 13:57:33.593261	15a7a32e-7f7d-4e0d-b255-427abb83678b	1027
1031	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Tardy	Tardy	Tardy	\N	\N	\N	\N	2023-11-08 13:57:33.625399	2023-11-08 13:57:33.624395	d03de89e-9784-4398-bde1-ef6622cc0bbd	1031
1037	uri://ed-fi.org/ProgramSponsorDescriptor	Federal government	Federal government	Federal government	\N	\N	\N	\N	2023-11-08 13:57:33.663007	2023-11-08 13:57:33.661721	2b1dade0-8032-4cb6-8afa-752509041639	1037
1040	uri://ed-fi.org/ProgramSponsorDescriptor	Non-profit organization	Non-profit organization	Non-profit organization	\N	\N	\N	\N	2023-11-08 13:57:33.672196	2023-11-08 13:57:33.672138	7d6833ef-1055-4e82-8e6f-14de026a2e0a	1040
1051	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By school psychologist or other psychologist	By school psychologist or other psychologist	By school psychologist or other psychologist	\N	\N	\N	\N	2023-11-08 13:57:33.714734	2023-11-08 13:57:33.713576	638d8f7a-ffd2-446e-89bb-189d7f7b8754	1051
1055	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Self-reported	Self-reported	Self-reported	\N	\N	\N	\N	2023-11-08 13:57:33.725946	2023-11-08 13:57:33.725931	a654b13a-4030-401c-a8ec-bdf05e5eefa5	1055
1057	uri://ed-fi.org/StaffClassificationDescriptor	Pre-Kindergarten Teacher	Pre-Kindergarten Teacher	Pre-Kindergarten Teacher	\N	\N	\N	\N	2023-11-08 13:57:33.764753	2023-11-08 13:57:33.763532	613d39dd-c15f-4a89-8c88-b8300439e50e	1057
1064	uri://ed-fi.org/StaffClassificationDescriptor	Ungraded Teacher	Ungraded Teacher	Ungraded Teacher	\N	\N	\N	\N	2023-11-08 13:57:33.777117	2023-11-08 13:57:33.777013	7f0ea01e-6207-4454-bbb9-beb84ae6e57c	1064
1068	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrative Support Staff	LEA Administrative Support Staff	LEA Administrative Support Staff	\N	\N	\N	\N	2023-11-08 13:57:33.788992	2023-11-08 13:57:33.788963	0a155227-41df-4034-a14b-712cc4c79782	1068
1072	uri://ed-fi.org/StaffClassificationDescriptor	School Psychologist	School Psychologist	School Psychologist	\N	\N	\N	\N	2023-11-08 13:57:33.79637	2023-11-08 13:57:33.795933	1497ac9e-98bd-485c-8d9a-98c154a1bfc4	1072
1075	uri://ed-fi.org/StaffClassificationDescriptor	All Other Support Staff	All Other Support Staff	All Other Support Staff	\N	\N	\N	\N	2023-11-08 13:57:33.804552	2023-11-08 13:57:33.804507	9be63c74-4b08-435f-8a3a-ebba04dd5c46	1075
1077	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Superintendent	DEPRECATED: Assistant Superintendent	DEPRECATED: Assistant Superintendent	\N	\N	\N	\N	2023-11-08 13:57:33.808779	2023-11-08 13:57:33.808749	854f278f-3e93-46c1-afff-dc52ce4d16a5	1077
1079	uri://ed-fi.org/StaffClassificationDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-11-08 13:57:33.812719	2023-11-08 13:57:33.812694	48fbeb7f-a98d-4346-a18e-2d640827d72f	1079
1086	uri://ed-fi.org/StaffClassificationDescriptor	School Leader	DEPRECATED: School Leader	DEPRECATED: School Leader	\N	\N	\N	\N	2023-11-08 13:57:33.829446	2023-11-08 13:57:33.829418	5771f60c-df49-4e89-97de-afb3983a6bd6	1086
1091	uri://ed-fi.org/StaffClassificationDescriptor	Substitute Teacher	DEPRECATED: Substitute Teacher	DEPRECATED: Substitute Teacher	\N	\N	\N	\N	2023-11-08 13:57:33.838489	2023-11-08 13:57:33.836598	a417b1b8-2658-4523-86a3-4ef7b5e60624	1091
1092	uri://ed-fi.org/StaffClassificationDescriptor	Teacher	DEPRECATED: Teacher	DEPRECATED: Teacher	\N	\N	\N	\N	2023-11-08 13:57:33.842205	2023-11-08 13:57:33.842191	bbbe4faf-384b-4f06-ac97-c88985d3072a	1092
1095	uri://ed-fi.org/SurveyLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	\N	2023-11-08 13:57:33.876996	2023-11-08 13:57:33.875951	da6d2eee-2488-4e4c-91bd-5e0278e436c9	1095
1103	uri://ed-fi.org/SurveyLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	\N	2023-11-08 13:57:33.894006	2023-11-08 13:57:33.893967	9329692c-cc9d-4b79-a83c-dbacefc1e887	1103
1106	uri://ed-fi.org/SurveyLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	\N	2023-11-08 13:57:33.900883	2023-11-08 13:57:33.90084	c4597258-cccf-4bcd-b951-9fbc7620db60	1106
1110	uri://ed-fi.org/SurveyLevelDescriptor	Undergraduate	Undergraduate	Undergraduate	\N	\N	\N	\N	2023-11-08 13:57:33.909632	2023-11-08 13:57:33.909605	9598b553-ff80-472e-a029-25238c3ff845	1110
1114	uri://ed-fi.org/SurveyLevelDescriptor	Professional Certification	Professional Certification	Professional Certification	\N	\N	\N	\N	2023-11-08 13:57:33.916004	2023-11-08 13:57:33.915927	37808393-b97a-4c0a-885b-8721720ad188	1114
1116	uri://ed-fi.org/SurveyLevelDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:33.921035	2023-11-08 13:57:33.921022	e63f63cb-d493-4901-9eb5-5b3473dc88d3	1116
1118	uri://ed-fi.org/SurveyLevelDescriptor	No grade level	No grade level	No grade level	\N	\N	\N	\N	2023-11-08 13:57:33.925851	2023-11-08 13:57:33.925801	d35bb11f-7371-4a73-965a-83cb864f841b	1118
1120	uri://ed-fi.org/EducationPlanDescriptor	504 Plan	504 Plan	504 Plan	\N	\N	\N	\N	2023-11-08 13:57:33.955375	2023-11-08 13:57:33.954402	3ba9c43f-92ed-415e-9581-1babe6f365de	1120
1123	uri://ed-fi.org/EducationPlanDescriptor	IDEA IEP	IDEA IEP	IDEA IEP	\N	\N	\N	\N	2023-11-08 13:57:33.963586	2023-11-08 13:57:33.963515	1dc1c17b-c716-441b-90ec-121270dca751	1123
1129	uri://ed-fi.org/EducationPlanDescriptor	Personal Graduation Plan	Personal Graduation Plan	Personal Graduation Plan	\N	\N	\N	\N	2023-11-08 13:57:33.971874	2023-11-08 13:57:33.971648	3376c784-9148-40bd-afbd-01a6f8c5a692	1129
1131	uri://ed-fi.org/LocaleDescriptor	City-Large	City-Large	City-Large	\N	\N	\N	\N	2023-11-08 13:57:34.009135	2023-11-08 13:57:34.008157	403ed7a2-22a6-4ba7-82ac-17857f931310	1131
1138	uri://ed-fi.org/LocaleDescriptor	Town-Distant	Town-Distant	Town-Distant	\N	\N	\N	\N	2023-11-08 13:57:34.019411	2023-11-08 13:57:34.019392	a50f377b-758e-4960-a724-e1d9ad5ec126	1138
1141	uri://ed-fi.org/LocaleDescriptor	Town-Remote	Town-Remote	Town-Remote	\N	\N	\N	\N	2023-11-08 13:57:34.027794	2023-11-08 13:57:34.027756	1b7d1ddf-5e17-4290-aa33-4268adb160b4	1141
1098	uri://ed-fi.org/SurveyLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	\N	2023-11-08 13:57:33.884896	2023-11-08 13:57:33.884857	ec89037e-0e08-4006-bba7-708bec331395	1098
1101	uri://ed-fi.org/SurveyLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	\N	2023-11-08 13:57:33.887582	2023-11-08 13:57:33.887555	bf193a51-012e-4298-88b5-843b6d3eb820	1101
1104	uri://ed-fi.org/SurveyLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	\N	2023-11-08 13:57:33.894628	2023-11-08 13:57:33.894132	95c23cd8-24e6-4a69-9c23-62584fe3e29a	1104
1109	uri://ed-fi.org/SurveyLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	\N	2023-11-08 13:57:33.907973	2023-11-08 13:57:33.907959	dfe03968-ff2d-44e7-9260-6159a26c6f33	1109
1113	uri://ed-fi.org/SurveyLevelDescriptor	Master's	Master's	Master's	\N	\N	\N	\N	2023-11-08 13:57:33.913744	2023-11-08 13:57:33.913716	0a685ad1-3acf-4537-95ab-39694552cbcb	1113
1119	uri://ed-fi.org/EducationPlanDescriptor	Completion and Reach Age 22	Completion and Reach Age 22	Completion and Reach Age 22	\N	\N	\N	\N	2023-11-08 13:57:33.955326	2023-11-08 13:57:33.954366	aca51193-8e1a-4d48-b040-e2cc41b771b4	1119
1124	uri://ed-fi.org/EducationPlanDescriptor	High School Education Plan	High School Education Plan	High School Education Plan	\N	\N	\N	\N	2023-11-08 13:57:33.963823	2023-11-08 13:57:33.963776	e7731254-704e-4860-b235-4ee520202b9c	1124
1128	uri://ed-fi.org/EducationPlanDescriptor	Outside Service Access	Outside Service Access	Outside Service Access	\N	\N	\N	\N	2023-11-08 13:57:33.970893	2023-11-08 13:57:33.970497	d453ef7a-1fb4-4e44-83ba-5633bd5bff69	1128
1132	uri://ed-fi.org/LocaleDescriptor	City-Small	City-Small	City-Small	\N	\N	\N	\N	2023-11-08 13:57:34.009114	2023-11-08 13:57:34.008163	eb2341a5-7799-4a43-af55-c701eb9a97bd	1132
1137	uri://ed-fi.org/LocaleDescriptor	Suburban-Midsize	Suburban-Midsize	Suburban-Midsize	\N	\N	\N	\N	2023-11-08 13:57:34.019397	2023-11-08 13:57:34.019371	ac9fbbfe-dea6-474f-baae-10187c890ebf	1137
1142	uri://ed-fi.org/LocaleDescriptor	Rural-Remote	Rural-Remote	Rural-Remote	\N	\N	\N	\N	2023-11-08 13:57:34.028854	2023-11-08 13:57:34.028839	7a345065-52a6-4db7-a4af-995e26e3170f	1142
1143	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	DoD Civilian	Student is a dependent of a civil servant to the DoD	Student is a dependent of a person who is employed by the Department of Defense as a civil servant	\N	\N	\N	\N	2023-11-08 13:57:34.064401	2023-11-08 13:57:34.063443	f5cc4391-6f34-4e90-a1f9-2d7d421f9645	1143
1148	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Not Military Connected	People who the student is a dependent of is/are not military connected	Contact does not have a connection with military or department of defense as an employee or retiree	\N	\N	\N	\N	2023-11-08 13:57:34.079206	2023-11-08 13:57:34.07916	da9ffba6-8926-4403-91ec-3ba6bfb11b51	1148
1149	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Targeted Assistance Program	Public Targeted Assistance Program	Public Targeted Assistance Program	\N	\N	\N	\N	2023-11-08 13:57:34.104604	2023-11-08 13:57:34.103657	705d64a5-4513-4ded-a7fe-181a72897c97	1149
1153	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Was not served	Was not served	Was not served	\N	\N	\N	\N	2023-11-08 13:57:34.11465	2023-11-08 13:57:34.114621	6e239e08-3a03-4e2f-8e5f-7fbff181ac51	1153
1157	uri://ed-fi.org/SchoolCategoryDescriptor	Infant/toddler School	Infant/toddler School	Infant/toddler School	\N	\N	\N	\N	2023-11-08 13:57:34.143057	2023-11-08 13:57:34.141916	1eb34ff2-07ca-429a-9d29-112a95032108	1157
1159	uri://ed-fi.org/SchoolCategoryDescriptor	High School	High School	High School	\N	\N	\N	\N	2023-11-08 13:57:34.152237	2023-11-08 13:57:34.15221	84178ed2-cc2d-49fb-9d71-024dc367c860	1159
1163	uri://ed-fi.org/SchoolCategoryDescriptor	Other Secondary	Other Secondary	Other Secondary	\N	\N	\N	\N	2023-11-08 13:57:34.158909	2023-11-08 13:57:34.158866	c1730522-8fdb-4a17-849c-6f4b56f93f07	1163
1166	uri://ed-fi.org/SchoolCategoryDescriptor	All Levels	All Levels	All Levels	\N	\N	\N	\N	2023-11-08 13:57:34.168712	2023-11-08 13:57:34.168684	623f350c-bc3a-4e8f-9516-63bad87e912c	1166
1172	uri://ed-fi.org/ContentClassDescriptor	Presentation	Presentation	Presentation	\N	\N	\N	\N	2023-11-08 13:57:34.20404	2023-11-08 13:57:34.202766	0fc6efb3-ffc6-4553-9e23-c8a666460293	1172
1178	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	High School Accrual	High School Accrual	High School Accrual	\N	\N	\N	\N	2023-11-08 13:57:34.240977	2023-11-08 13:57:34.239701	6f72c38c-ae9f-4e73-8f6e-fd71a32f6a98	1178
1181	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Support Services	Support Services	Support Services	\N	\N	\N	\N	2023-11-08 13:57:34.250179	2023-11-08 13:57:34.250151	9399202b-67d7-44cc-8f02-6796cc638c9a	1181
1182	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	\N	2023-11-08 13:57:34.280171	2023-11-08 13:57:34.279205	fa5a8825-bac5-46c4-883b-2ea61eb1c2ed	1182
1187	uri://ed-fi.org/ProviderStatusDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-11-08 13:57:34.322373	2023-11-08 13:57:34.320777	210d0eed-944e-42dd-9ee3-591a4770be1b	1187
1191	uri://ed-fi.org/TeachingCredentialDescriptor	Nonrenewable	Nonrenewable	Nonrenewable	\N	\N	\N	\N	2023-11-08 13:57:34.331738	2023-11-08 13:57:34.331198	e561950a-334d-4c63-9a28-842544eea0e2	1191
1199	uri://ed-fi.org/TeachingCredentialDescriptor	Retired	Retired	Retired	\N	\N	\N	\N	2023-11-08 13:57:34.344068	2023-11-08 13:57:34.344055	98e30439-aea0-43ac-b9f6-70c3ca1ef8fd	1199
1201	uri://ed-fi.org/TeachingCredentialDescriptor	Substitute	Substitute	Substitute	\N	\N	\N	\N	2023-11-08 13:57:34.350584	2023-11-08 13:57:34.35057	bd6570cb-b0cd-4467-b9aa-a52d23aa67f9	1201
1206	uri://ed-fi.org/AssessmentReportingMethodDescriptor	ACT score	DEPRECATED: ACT score	DEPRECATED: ACT score	\N	\N	\N	\N	2023-11-08 13:57:34.386073	2023-11-08 13:57:34.384974	5aa29b39-1038-44a0-a8af-819e7c73b58f	1206
1210	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Score	Composite Score	Composite Score	\N	\N	\N	\N	2023-11-08 13:57:34.396632	2023-11-08 13:57:34.396608	cdc36618-bb8b-4bb5-b68d-6797b4533cf3	1210
1212	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composition Score	Composition Score	Composition Score	\N	\N	\N	\N	2023-11-08 13:57:34.401702	2023-11-08 13:57:34.401686	c0d6e25b-ae07-4600-941d-7d3456c98a52	1212
1215	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	\N	\N	\N	\N	2023-11-08 13:57:34.406606	2023-11-08 13:57:34.405963	769bacfe-62ac-42c6-8521-412f61afaedc	1215
1218	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Mastery level	Mastery level	Mastery level	\N	\N	\N	\N	2023-11-08 13:57:34.412587	2023-11-08 13:57:34.412551	0d838532-b8bf-4374-ad80-b34ed8c9dba4	1218
1222	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Pass-fail	Pass-fail	Pass-fail	\N	\N	\N	\N	2023-11-08 13:57:34.421355	2023-11-08 13:57:34.421293	7ae4b282-b7f8-4448-99bf-3521af0d5db3	1222
1099	uri://ed-fi.org/SurveyLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	\N	2023-11-08 13:57:33.886847	2023-11-08 13:57:33.886826	ffa9be17-b9c9-4ddb-92e0-1fe75de993b6	1099
1107	uri://ed-fi.org/SurveyLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	\N	2023-11-08 13:57:33.901725	2023-11-08 13:57:33.901711	cfe1949a-6825-4a30-8aa8-4964a94d3e88	1107
1112	uri://ed-fi.org/SurveyLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	\N	2023-11-08 13:57:33.910307	2023-11-08 13:57:33.910167	9ffe43c3-bc1c-4dbb-8219-b8b5917a3c6b	1112
1115	uri://ed-fi.org/SurveyLevelDescriptor	Adult Education	Adult Education	Adult Education	\N	\N	\N	\N	2023-11-08 13:57:33.920633	2023-11-08 13:57:33.920603	731ef2db-f087-4891-a2ac-6b15d437985f	1115
1117	uri://ed-fi.org/SurveyLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	\N	2023-11-08 13:57:33.925326	2023-11-08 13:57:33.925295	05aa89f6-ea9d-405b-8183-3005ab2a194d	1117
1121	uri://ed-fi.org/EducationPlanDescriptor	Career Pathways	Career Pathways	Career Pathways	\N	\N	\N	\N	2023-11-08 13:57:33.955319	2023-11-08 13:57:33.954374	09fd58ea-7a9b-47e0-867e-0a1946c4847f	1121
1125	uri://ed-fi.org/EducationPlanDescriptor	Employability Skills	Employability Skills	Employability Skills	\N	\N	\N	\N	2023-11-08 13:57:33.96439	2023-11-08 13:57:33.964339	07ffe0b9-3470-4a29-85d9-064e57e42e9f	1125
1127	uri://ed-fi.org/EducationPlanDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:33.970775	2023-11-08 13:57:33.970749	6332c245-2454-4f8a-a566-4550e2f6113b	1127
1130	uri://ed-fi.org/EducationPlanDescriptor	Student Success Plan	Student Success Plan	Student Success Plan	\N	\N	\N	\N	2023-11-08 13:57:33.976825	2023-11-08 13:57:33.975023	faf11f6b-2bb8-4f05-962f-c17722429b81	1130
1133	uri://ed-fi.org/LocaleDescriptor	Suburban-Large	Suburban-Large	Suburban-Large	\N	\N	\N	\N	2023-11-08 13:57:34.009624	2023-11-08 13:57:34.008177	4c44dd6a-cba1-49f9-a840-c93d05f1aa0d	1133
1135	uri://ed-fi.org/LocaleDescriptor	Suburban-Small	Suburban-Small	Suburban-Small	\N	\N	\N	\N	2023-11-08 13:57:34.01738	2023-11-08 13:57:34.017236	ae12e8b4-c926-4a70-a632-5271ec1f29d6	1135
1140	uri://ed-fi.org/LocaleDescriptor	Rural-Fringe	Rural-Fringe	Rural-Fringe	\N	\N	\N	\N	2023-11-08 13:57:34.026927	2023-11-08 13:57:34.026913	6725ad37-ad5d-457d-9fa0-30ae45692071	1140
1146	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Reserve	Student is a dependent of a  member of reserve forces or national guard	Student is a dependent of a member of the National Guard (not full-time) or the Reserve Forces Army, Navy, Air Force, Space Force, Marine Corps or Coast Guard	\N	\N	\N	\N	2023-11-08 13:57:34.064649	2023-11-08 13:57:34.063427	85f448a8-e585-43c8-851f-7d0dbb9af4ef	1146
1151	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Local Neglected Program	DEPRECATED: Local Neglected Program	DEPRECATED: Local Neglected Program	\N	\N	\N	\N	2023-11-08 13:57:34.104741	2023-11-08 13:57:34.103675	708e43ce-f4ae-4fc3-93b8-77a6db5f8126	1151
1155	uri://ed-fi.org/SchoolCategoryDescriptor	Preschool/early childhood	Preschool/early childhood	Preschool/early childhood	\N	\N	\N	\N	2023-11-08 13:57:34.143065	2023-11-08 13:57:34.141931	3e992452-bdda-4b08-b7a9-b74b00d0e171	1155
1158	uri://ed-fi.org/SchoolCategoryDescriptor	Intermediate School	Intermediate School	Intermediate School	\N	\N	\N	\N	2023-11-08 13:57:34.151883	2023-11-08 13:57:34.151855	0078dd4d-9f2d-437a-9ba6-dcb2f85cf22f	1158
1164	uri://ed-fi.org/SchoolCategoryDescriptor	Joint Secondary and Postsecondary School	Joint Secondary and Postsecondary School	Joint Secondary and Postsecondary School	\N	\N	\N	\N	2023-11-08 13:57:34.160883	2023-11-08 13:57:34.160555	728ee7e0-57ab-482f-90a6-a034477f762a	1164
1168	uri://ed-fi.org/SchoolCategoryDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	\N	2023-11-08 13:57:34.170263	2023-11-08 13:57:34.170236	cfa00c45-b80d-4fe5-8778-145a71bd2369	1168
1171	uri://ed-fi.org/ContentClassDescriptor	Vendor Intervention Offering	Vendor Intervention Offering	Vendor Intervention Offering	\N	\N	\N	\N	2023-11-08 13:57:34.203895	2023-11-08 13:57:34.202761	4263db95-a270-4874-933e-b7405c876768	1171
1174	uri://ed-fi.org/ContentClassDescriptor	Written Activity	Written Activity	Written Activity	\N	\N	\N	\N	2023-11-08 13:57:34.212994	2023-11-08 13:57:34.21296	0bf05060-6df1-4946-89cf-90bfcc156611	1174
1175	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	\N	2023-11-08 13:57:34.240649	2023-11-08 13:57:34.239683	5f4f89c7-fa83-46e1-8ac3-44e9ce1eef49	1175
1179	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Reading Instruction	Reading Instruction	Reading Instruction	\N	\N	\N	\N	2023-11-08 13:57:34.249502	2023-11-08 13:57:34.249483	0d2ce3c2-195a-47aa-bed3-dfe051d1a775	1179
1185	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	\N	2023-11-08 13:57:34.280377	2023-11-08 13:57:34.279215	dd5ec38e-934a-41d1-a942-70ceeaff58ab	1185
1189	uri://ed-fi.org/ProviderStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	\N	2023-11-08 13:57:34.322418	2023-11-08 13:57:34.320769	d8b27175-0428-47e9-b40c-c99a3b68b52c	1189
1192	uri://ed-fi.org/TeachingCredentialDescriptor	Master	Master	Master	\N	\N	\N	\N	2023-11-08 13:57:34.33203	2023-11-08 13:57:34.332004	3f5891a6-878a-44f8-8329-4f084615b12b	1192
1195	uri://ed-fi.org/TeachingCredentialDescriptor	Probationary/Initial	Probationary/Initial	Probationary/Initial	\N	\N	\N	\N	2023-11-08 13:57:34.337661	2023-11-08 13:57:34.337634	e59868e2-24f2-4933-9ac7-7399a8743333	1195
1198	uri://ed-fi.org/TeachingCredentialDescriptor	Regular/Standard	Regular/Standard	Regular/Standard	\N	\N	\N	\N	2023-11-08 13:57:34.343586	2023-11-08 13:57:34.343536	a821a9cd-4f40-41e2-907f-5d872feaa9ff	1198
1203	uri://ed-fi.org/TeachingCredentialDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	\N	2023-11-08 13:57:34.353714	2023-11-08 13:57:34.353616	9b403a62-9ab5-46d3-b620-a19714257579	1203
1205	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Age score	Age score	Age score	\N	\N	\N	\N	2023-11-08 13:57:34.386008	2023-11-08 13:57:34.384982	dd0d71e5-42c1-4c45-94c3-5fa3b0809d6e	1205
1209	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Rating	Composite Rating	Composite Rating	\N	\N	\N	\N	2023-11-08 13:57:34.395194	2023-11-08 13:57:34.395179	bf814006-c598-4efc-8401-5e3c4f329948	1209
1217	uri://ed-fi.org/AssessmentReportingMethodDescriptor	International Baccalaureate score	DEPRECATED: International Baccalaureate score	DEPRECATED: International Baccalaureate score	\N	\N	\N	\N	2023-11-08 13:57:34.410124	2023-11-08 13:57:34.41008	3942e345-3b54-4963-9103-ef69560641e3	1217
1223	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	\N	2023-11-08 13:57:34.424092	2023-11-08 13:57:34.424036	a30e3788-960d-4a5d-940b-9f476df10f4f	1223
1225	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Proficiency level	Proficiency level	Proficiency level	\N	\N	\N	\N	2023-11-08 13:57:34.428807	2023-11-08 13:57:34.428778	35168fa6-cc66-45a1-b3e5-74974ac25484	1225
1100	uri://ed-fi.org/SurveyLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	\N	2023-11-08 13:57:33.887725	2023-11-08 13:57:33.887691	64c9049b-7926-4135-8951-80d280689bd8	1100
1102	uri://ed-fi.org/SurveyLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	\N	2023-11-08 13:57:33.890881	2023-11-08 13:57:33.890846	18792118-0cae-4364-b2b3-610032e9eebf	1102
1105	uri://ed-fi.org/SurveyLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	\N	2023-11-08 13:57:33.896514	2023-11-08 13:57:33.896384	a1ab1b05-fbd8-4731-ac49-7eac08ae038e	1105
1108	uri://ed-fi.org/SurveyLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	\N	2023-11-08 13:57:33.903175	2023-11-08 13:57:33.903161	3f3ac2cb-c3f4-4ecc-b6a1-9a5c01ccb27a	1108
1111	uri://ed-fi.org/SurveyLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	\N	2023-11-08 13:57:33.910061	2023-11-08 13:57:33.910033	34467624-4de2-453e-a20d-11844f1f27af	1111
1122	uri://ed-fi.org/EducationPlanDescriptor	Career Suggestions	Career Suggestions	Career Suggestions	\N	\N	\N	\N	2023-11-08 13:57:33.955782	2023-11-08 13:57:33.954385	30ac8a9e-6bbd-45b1-92b8-cf4ced51bb14	1122
1126	uri://ed-fi.org/EducationPlanDescriptor	Full Time Employment	Full Time Employment	Full Time Employment	\N	\N	\N	\N	2023-11-08 13:57:33.965109	2023-11-08 13:57:33.965091	36af78c7-ed2e-424d-84e3-0af3b6e9bec2	1126
1134	uri://ed-fi.org/LocaleDescriptor	City-Midsize	City-Midsize	City-Midsize	\N	\N	\N	\N	2023-11-08 13:57:34.009687	2023-11-08 13:57:34.008195	8184646d-c549-479e-bbf5-a79a9f20549f	1134
1136	uri://ed-fi.org/LocaleDescriptor	Town-Fringe	Town-Fringe	Town-Fringe	\N	\N	\N	\N	2023-11-08 13:57:34.01904	2023-11-08 13:57:34.019027	1def7af9-9758-49ae-a2e0-31031c071a06	1136
1139	uri://ed-fi.org/LocaleDescriptor	Rural-Distant	Rural-Distant	Rural-Distant	\N	\N	\N	\N	2023-11-08 13:57:34.025584	2023-11-08 13:57:34.025553	172cda8d-2d0c-491f-b346-c4f53ec408ba	1139
1144	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Veteran	Student is a dependent of a discharged military personnel or a retiree	Student is a dependent of a person who has served in the US military and become discharged or released or got retired after completing required amount of years of military services	\N	\N	\N	\N	2023-11-08 13:57:34.06444	2023-11-08 13:57:34.063434	a5042698-7ae0-4353-9acb-38fb78a504fc	1144
1150	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Private school students participating	Private school students participating	Private school students participating	\N	\N	\N	\N	2023-11-08 13:57:34.104727	2023-11-08 13:57:34.103664	ab474f02-14c5-41fc-b0b7-1ca472325f11	1150
1154	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary School	Elementary School	Elementary School	\N	\N	\N	\N	2023-11-08 13:57:34.142897	2023-11-08 13:57:34.141908	33ea5af4-5da9-4081-a452-bf9b07dbb1b0	1154
1161	uri://ed-fi.org/SchoolCategoryDescriptor	Middle School	Middle School	Middle School	\N	\N	\N	\N	2023-11-08 13:57:34.154137	2023-11-08 13:57:34.1541	f35bae55-b91e-4c20-b058-e94991efc30b	1161
1162	uri://ed-fi.org/SchoolCategoryDescriptor	Secondary School	Secondary School	Secondary School	\N	\N	\N	\N	2023-11-08 13:57:34.159568	2023-11-08 13:57:34.159532	76a61352-f9c2-4211-9829-dd00c78fd3df	1162
1169	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary/Secondary School	DEPRECATED: Elementary/Secondary School	DEPRECATED: Elementary/Secondary School	\N	\N	\N	\N	2023-11-08 13:57:34.170728	2023-11-08 13:57:34.170693	1e961569-b7ff-4663-8c78-ba0cd56c6e84	1169
1173	uri://ed-fi.org/ContentClassDescriptor	Education Research	Education Research	Education Research	\N	\N	\N	\N	2023-11-08 13:57:34.203837	2023-11-08 13:57:34.202744	0d7bf810-c061-4d58-8477-26195c250638	1173
1176	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	\N	2023-11-08 13:57:34.240775	2023-11-08 13:57:34.239667	58a01592-fe07-4f5b-b94a-86810faf2d29	1176
1180	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Referral Services	Referral Services	Referral Services	\N	\N	\N	\N	2023-11-08 13:57:34.250456	2023-11-08 13:57:34.250441	5d63f866-bff6-4c56-ab9f-c444d6c8fbf6	1180
1184	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	\N	2023-11-08 13:57:34.280355	2023-11-08 13:57:34.279177	6ed15ad2-7a64-4af4-9036-1db761fef1b0	1184
1188	uri://ed-fi.org/ProviderStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-11-08 13:57:34.322407	2023-11-08 13:57:34.320781	cde46609-c523-4a7a-8951-69849a60e0f1	1188
1194	uri://ed-fi.org/TeachingCredentialDescriptor	Paraprofessional	Paraprofessional	Paraprofessional	\N	\N	\N	\N	2023-11-08 13:57:34.333676	2023-11-08 13:57:34.333649	e5ee8140-04e4-4534-93f4-119552bd7bdc	1194
1197	uri://ed-fi.org/TeachingCredentialDescriptor	Provisional	Provisional	Provisional	\N	\N	\N	\N	2023-11-08 13:57:34.343147	2023-11-08 13:57:34.343105	3ac6f6bd-2ba4-4f07-b3b1-3dcbc63e20a0	1197
1200	uri://ed-fi.org/TeachingCredentialDescriptor	Specialist	Specialist	Specialist	\N	\N	\N	\N	2023-11-08 13:57:34.346709	2023-11-08 13:57:34.346676	8e0404ec-e93e-47d7-a50f-d2f470438608	1200
1202	uri://ed-fi.org/TeachingCredentialDescriptor	Teacher Assistant	Teacher Assistant	Teacher Assistant	\N	\N	\N	\N	2023-11-08 13:57:34.350324	2023-11-08 13:57:34.350289	c2d729b4-df33-44fa-9077-e3224688e595	1202
1204	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Achievement/proficiency level	Achievement/proficiency level	Achievement/proficiency level	\N	\N	\N	\N	2023-11-08 13:57:34.386008	2023-11-08 13:57:34.384966	4dc11c9c-0335-4226-935f-f182e22605c3	1204
1211	uri://ed-fi.org/AssessmentReportingMethodDescriptor	C-scaled scores	C-scaled scores	C-scaled scores	\N	\N	\N	\N	2023-11-08 13:57:34.396617	2023-11-08 13:57:34.396474	1189f5ad-4906-4b60-a525-fd057cac83b0	1211
1213	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Graduation score	Graduation score	Graduation score	\N	\N	\N	\N	2023-11-08 13:57:34.404261	2023-11-08 13:57:34.404223	85c0b14c-d8ca-4ed5-8912-7aec86ec664f	1213
1219	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normal curve equivalent	Normal curve equivalent	Normal curve equivalent	\N	\N	\N	\N	2023-11-08 13:57:34.414952	2023-11-08 13:57:34.414898	2abb9420-2142-4b71-a802-60beec75d30a	1219
1220	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normalized standard score	Normalized standard score	Normalized standard score	\N	\N	\N	\N	2023-11-08 13:57:34.41898	2023-11-08 13:57:34.418953	28f88780-fda0-4f90-a4c9-c6506ac276c4	1220
1228	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ratio IQ's	Ratio IQ's	Ratio IQ's	\N	\N	\N	\N	2023-11-08 13:57:34.434078	2023-11-08 13:57:34.434063	064794b3-1ce7-4c19-92f0-83d1dfc68aa4	1228
1230	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Scale score	Scale score	Scale score	\N	\N	\N	\N	2023-11-08 13:57:34.439076	2023-11-08 13:57:34.439057	9448b475-814d-4120-aa39-cf25dd6b9b88	1230
1234	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Theta	Theta	Theta	\N	\N	\N	\N	2023-11-08 13:57:34.448326	2023-11-08 13:57:34.44826	5ad4b060-3a29-4017-8892-1e7d151bcf10	1234
1145	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Active Duty	Student is a dependent of a (full-time) member of the military	Student is a dependent of a member of the Active Duty Forces (full-time) Army, Navy, Air Force, Space Force, Marine Corps, or Coast Guard or a member on full-time National Guard duty	\N	\N	\N	\N	2023-11-08 13:57:34.064448	2023-11-08 13:57:34.063461	3dd523b7-c021-46f5-b47a-48fef0f409b8	1145
1147	uri://ed-fi.org/SupporterMilitaryConnectionDescriptor	Unknown	Military connection information is unknown	It is unknown whether or not the student is a dependent of a person who is military-connected	\N	\N	\N	\N	2023-11-08 13:57:34.07425	2023-11-08 13:57:34.074193	ec6a3e63-8458-47ba-bd15-6f78f6440fb1	1147
1152	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Schoolwide Program	Public Schoolwide Program	Public Schoolwide Program	\N	\N	\N	\N	2023-11-08 13:57:34.107041	2023-11-08 13:57:34.107005	96249f09-6456-4e67-b165-2bd5b4c95aee	1152
1156	uri://ed-fi.org/SchoolCategoryDescriptor	Primary School	Primary School	Primary School	\N	\N	\N	\N	2023-11-08 13:57:34.143057	2023-11-08 13:57:34.141896	b3d58ac9-4788-4c65-9853-d209be21bf96	1156
1160	uri://ed-fi.org/SchoolCategoryDescriptor	Junior High School	Junior High School	Junior High School	\N	\N	\N	\N	2023-11-08 13:57:34.153322	2023-11-08 13:57:34.153265	e454fc58-5e27-44ec-9304-0a7fa52ec684	1160
1165	uri://ed-fi.org/SchoolCategoryDescriptor	Other Combination	Other Combination	Other Combination	\N	\N	\N	\N	2023-11-08 13:57:34.163124	2023-11-08 13:57:34.163064	bce31258-4035-49b9-bd6a-6ca641c5b835	1165
1167	uri://ed-fi.org/SchoolCategoryDescriptor	Adult School	Adult School	Adult School	\N	\N	\N	\N	2023-11-08 13:57:34.169164	2023-11-08 13:57:34.169043	e49c2088-9230-44b7-93fe-4ef7e3032a20	1167
1170	uri://ed-fi.org/ContentClassDescriptor	Video	Video	Video	\N	\N	\N	\N	2023-11-08 13:57:34.20369	2023-11-08 13:57:34.202738	ef44e523-a673-469d-baee-317e3c157abc	1170
1177	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Mathematics Instruction	Mathematics Instruction	Mathematics Instruction	\N	\N	\N	\N	2023-11-08 13:57:34.240899	2023-11-08 13:57:34.239673	70c020d0-8199-4448-857a-d7904e205def	1177
1183	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	\N	2023-11-08 13:57:34.28037	2023-11-08 13:57:34.279171	229d8743-e1c5-488f-8349-7324dc2fc320	1183
1186	uri://ed-fi.org/TeachingCredentialDescriptor	Emergency	Emergency	Emergency	\N	\N	\N	\N	2023-11-08 13:57:34.316065	2023-11-08 13:57:34.313801	2caa082b-9b7a-4a8b-8ef6-fce753379d67	1186
1190	uri://ed-fi.org/TeachingCredentialDescriptor	Intern	Intern	Intern	\N	\N	\N	\N	2023-11-08 13:57:34.324559	2023-11-08 13:57:34.324546	8bb6e079-e6f9-47df-9468-f4eeb380f250	1190
1193	uri://ed-fi.org/TeachingCredentialDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:34.333012	2023-11-08 13:57:34.332971	ba515382-39b8-44db-83aa-d8f6636f4f09	1193
1196	uri://ed-fi.org/TeachingCredentialDescriptor	Professional	Professional	Professional	\N	\N	\N	\N	2023-11-08 13:57:34.33844	2023-11-08 13:57:34.338401	44166a81-2cbc-4873-b79e-cfde01435011	1196
1207	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Adaptive scale score	Adaptive scale score	Adaptive scale score	\N	\N	\N	\N	2023-11-08 13:57:34.386316	2023-11-08 13:57:34.384997	1a81ce77-f0c9-4a56-8c02-467693a04b7e	1207
1208	uri://ed-fi.org/AssessmentReportingMethodDescriptor	College Board examination scores	DEPRECATED: College Board examination scores	DEPRECATED: College Board examination scores	\N	\N	\N	\N	2023-11-08 13:57:34.394252	2023-11-08 13:57:34.394217	7c335b4f-6854-4232-b3df-f18570be3ce5	1208
1214	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Growth/value-added/indexing	Growth/value-added/indexing	Growth/value-added/indexing	\N	\N	\N	\N	2023-11-08 13:57:34.405035	2023-11-08 13:57:34.404971	25b13621-4e45-4d78-982e-741c57fcd562	1214
1216	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Letter grade/mark	Letter grade/mark	Letter grade/mark	\N	\N	\N	\N	2023-11-08 13:57:34.409499	2023-11-08 13:57:34.409486	48d28b29-6c31-4d43-8680-b858957f6c2c	1216
1221	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Number score	Number score	Number score	\N	\N	\N	\N	2023-11-08 13:57:34.420036	2023-11-08 13:57:34.420008	2247dcb7-4fa3-4ae4-b07a-6dfba92f2003	1221
1224	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile rank	Percentile rank	Percentile rank	\N	\N	\N	\N	2023-11-08 13:57:34.425589	2023-11-08 13:57:34.425571	f06dc090-e4f2-41bb-8d2a-7662c900ea54	1224
1229	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Raw score	Raw score	Raw score	\N	\N	\N	\N	2023-11-08 13:57:34.435807	2023-11-08 13:57:34.435766	2012f2f4-2849-4100-a166-7a96a0028219	1229
1231	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard age score	Standard age score	Standard age score	\N	\N	\N	\N	2023-11-08 13:57:34.440574	2023-11-08 13:57:34.440521	838e69bc-7cf5-4652-a485-9d27e084620c	1231
1233	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Stanine score	Stanine score	Stanine score	\N	\N	\N	\N	2023-11-08 13:57:34.446751	2023-11-08 13:57:34.446599	035e311b-0d80-460d-9ca5-baa5f12d6637	1233
1240	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Not applicable	DEPRECATED: Not applicable	DEPRECATED: Not applicable	\N	\N	\N	\N	2023-11-08 13:57:34.461612	2023-11-08 13:57:34.461585	d9bcf279-3fb3-457b-a601-405bf3ca81e7	1240
1244	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical Scale Score	Vertical Scale Score	Vertical Scale Score	\N	\N	\N	\N	2023-11-08 13:57:34.469403	2023-11-08 13:57:34.469388	e619191a-a064-46d7-b51b-ba1ff639e98f	1244
1250	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Sometimes	Sometimes	The student regularly experiences interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	\N	2023-11-08 13:57:34.510677	2023-11-08 13:57:34.508278	974c2df7-6610-4319-8ebd-7582d95da722	1250
1252	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	Some, but not all, students participate	Some, but not all, students participate	Some, but not all, students participate	\N	\N	\N	\N	2023-11-08 13:57:34.521067	2023-11-08 13:57:34.519976	0957349e-7d22-4fd0-a525-74623b9a1b29	1252
1255	uri://ed-fi.org/GradePointAverageTypeDescriptor	Unweighted	Unweighted	Unweighted	\N	\N	\N	\N	2023-11-08 13:57:34.549631	2023-11-08 13:57:34.548299	e8b908c4-c602-445d-a3f9-81e4e5459433	1255
1258	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Not Passed	Not Passed	Not Passed	\N	\N	\N	\N	2023-11-08 13:57:34.5579	2023-11-08 13:57:34.556625	77249db0-287c-4286-913a-bdfabd2a1a04	1258
1260	uri://ed-fi.org/ServiceDescriptor	Interpreting services	Interpreting services	Interpreting services	\N	\N	\N	\N	2023-11-08 13:57:34.588937	2023-11-08 13:57:34.58773	f319323e-094c-4396-bfaf-bbcd709e5615	1260
1364	uri://ed-fi.org/CountryDescriptor	CI	Côte d'Ivoire	Côte d'Ivoire	\N	\N	\N	\N	2023-11-08 13:57:35.020557	2023-11-08 13:57:35.020421	da37cecf-19ea-4808-b272-c9260a5bec9b	1364
1226	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Promotion score	Promotion score	Promotion score	\N	\N	\N	\N	2023-11-08 13:57:34.431886	2023-11-08 13:57:34.431859	1adbcc55-6aa4-490f-88ac-585abb51e319	1226
1235	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Sten score	Sten score	Sten score	\N	\N	\N	\N	2023-11-08 13:57:34.448914	2023-11-08 13:57:34.448899	e49688e3-1020-45fa-99ee-90f5a178c600	1235
1239	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Z-score	Z-score	Z-score	\N	\N	\N	\N	2023-11-08 13:57:34.459304	2023-11-08 13:57:34.459289	baa8e147-90e0-4060-9002-eab26b6b5776	1239
1242	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Quantile Measure	Quantile Measure	Quantile Measure	\N	\N	\N	\N	2023-11-08 13:57:34.464537	2023-11-08 13:57:34.464508	8b31dd06-3206-490d-8667-d0316f1d927c	1242
1246	uri://ed-fi.org/AssessmentReportingMethodDescriptor	National College-Bound Percentile	National College-Bound Percentile	National College-Bound Percentile	\N	\N	\N	\N	2023-11-08 13:57:34.475517	2023-11-08 13:57:34.475478	4a68385c-6aff-40e0-9706-c0e4a9e34ae7	1246
1249	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	No	No	The student is unable to complete learning activities due to poor internet performance in their primary place of residence.	\N	\N	\N	\N	2023-11-08 13:57:34.50956	2023-11-08 13:57:34.508267	0a9f154d-7479-4281-95f9-62da00c7d946	1249
1254	uri://ed-fi.org/GradePointAverageTypeDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	\N	2023-11-08 13:57:34.549433	2023-11-08 13:57:34.548296	1b587ef5-4be8-4515-b1ef-08ff19404d16	1254
1259	uri://ed-fi.org/ServiceDescriptor	Medical diagnostic services	Medical diagnostic services	Medical diagnostic services	\N	\N	\N	\N	2023-11-08 13:57:34.588706	2023-11-08 13:57:34.587724	13116494-9e44-4baa-a9fc-9a67ef6dc385	1259
1266	uri://ed-fi.org/ServiceDescriptor	Occupational therapy	Occupational therapy	Occupational therapy	\N	\N	\N	\N	2023-11-08 13:57:34.599094	2023-11-08 13:57:34.599065	e58ba7fe-36b4-4ddd-b37c-36e5762c55c9	1266
1268	uri://ed-fi.org/ServiceDescriptor	Psychological services	Psychological services	Psychological services	\N	\N	\N	\N	2023-11-08 13:57:34.605672	2023-11-08 13:57:34.605659	52cc8c8e-ca12-4ee4-8129-8b55c1969e0e	1268
1272	uri://ed-fi.org/ServiceDescriptor	Speech therapy	Speech therapy	Speech therapy	\N	\N	\N	\N	2023-11-08 13:57:34.614315	2023-11-08 13:57:34.614301	b44b2da6-cf7b-4062-bc7a-bdecd7808add	1272
1277	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	\N	\N	\N	\N	2023-11-08 13:57:34.650246	2023-11-08 13:57:34.648679	e79d324d-a8d5-464a-8e42-1fa5ae662121	1277
1279	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	\N	\N	\N	\N	2023-11-08 13:57:34.659454	2023-11-08 13:57:34.658778	023d83ce-d766-4977-b907-7c52088fdafd	1279
1282	uri://ed-fi.org/PublicationStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	\N	2023-11-08 13:57:34.69048	2023-11-08 13:57:34.68921	fc5283ca-0011-4531-a755-7dea10780154	1282
1288	uri://ed-fi.org/RaceDescriptor	American Indian - Alaska Native	American Indian - Alaska Native	American Indian - Alaska Native	\N	\N	\N	\N	2023-11-08 13:57:34.731621	2023-11-08 13:57:34.730169	ba3e0dd9-d1a7-4621-8eec-2e9f6bbe12f7	1288
1290	uri://ed-fi.org/RaceDescriptor	White	White	White	\N	\N	\N	\N	2023-11-08 13:57:34.741509	2023-11-08 13:57:34.741449	a505b0c4-e37b-45d9-9d89-5b1d0d04f48e	1290
1295	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Late Report from Contracted Personnel	Late Report from Contracted Personnel	LEA delay due to late report from contracted personnel.	\N	\N	\N	\N	2023-11-08 13:57:34.773368	2023-11-08 13:57:34.772404	5e1f3616-b60c-47df-a1fb-8d2f458f2840	1295
1300	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Part C (ECI)	Part C (ECI)	Part C (ECI) did not notify or refer the child to Part B at least 90 days prior to the child's third birthday.	\N	\N	\N	\N	2023-11-08 13:57:34.785873	2023-11-08 13:57:34.785799	449404d6-8ec2-4a49-88d7-93bbf39da7ec	1300
1303	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Juvenile Detention	Juvenile Detention	Juvenile Detention	\N	\N	\N	\N	2023-11-08 13:57:34.823376	2023-11-08 13:57:34.822402	e580bbf8-dabb-442d-b7e2-a995540531ae	1303
1307	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	\N	2023-11-08 13:57:34.83198	2023-11-08 13:57:34.831949	cf7113ee-dec9-4407-9d21-e6612f38d35e	1307
1314	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Pay For Success Initiatives	DEPRECATED: Pay For Success Initiatives	DEPRECATED: Pay For Success Initiatives	\N	\N	\N	\N	2023-11-08 13:57:34.845449	2023-11-08 13:57:34.845205	674fa5de-48e4-40ca-8998-fb269b9c7acb	1314
1318	uri://ed-fi.org/ResponsibilityDescriptor	Accountability	Accountability	Accountability	\N	\N	\N	\N	2023-11-08 13:57:34.887851	2023-11-08 13:57:34.886106	40c0b477-1333-4308-ac0c-0455321f1aea	1318
1322	uri://ed-fi.org/ResponsibilityDescriptor	Transportation	Transportation	Transportation	\N	\N	\N	\N	2023-11-08 13:57:34.901227	2023-11-08 13:57:34.901201	8ef2ff9c-fca0-42aa-97f7-0612852b47c5	1322
1324	uri://ed-fi.org/CountryDescriptor	AD	Andorra	Andorra	\N	\N	\N	\N	2023-11-08 13:57:34.938586	2023-11-08 13:57:34.937469	d37e26bc-8443-4173-934c-b8063c44f94d	1324
1328	uri://ed-fi.org/CountryDescriptor	AI	Anguilla	Anguilla	\N	\N	\N	\N	2023-11-08 13:57:34.947621	2023-11-08 13:57:34.947591	802386e3-1e6c-4024-9b2d-6bf70e23369e	1328
1337	uri://ed-fi.org/CountryDescriptor	AZ	Azerbaijan	Azerbaijan	\N	\N	\N	\N	2023-11-08 13:57:34.965126	2023-11-08 13:57:34.965098	8120cb91-68c6-4b01-bfb5-d6c4404c0c4e	1337
1342	uri://ed-fi.org/CountryDescriptor	BA	Bosnia and Herzegovina	Bosnia and Herzegovina	\N	\N	\N	\N	2023-11-08 13:57:34.973457	2023-11-08 13:57:34.97341	ab8237e9-dd67-4d1b-8e28-0ad8cdc9d749	1342
1344	uri://ed-fi.org/CountryDescriptor	BF	Burkina Faso	Burkina Faso	\N	\N	\N	\N	2023-11-08 13:57:34.980592	2023-11-08 13:57:34.980555	09f8d942-6d86-4f8a-9c15-dd9cd04de6f9	1344
1349	uri://ed-fi.org/CountryDescriptor	BN	Brunei Darussalam	Brunei Darussalam	\N	\N	\N	\N	2023-11-08 13:57:34.988761	2023-11-08 13:57:34.988705	6f7436a7-303a-4d8b-9c73-184120601ed4	1349
1351	uri://ed-fi.org/CountryDescriptor	BO	Bolivia, Plurinational State of	Bolivia, Plurinational State of	\N	\N	\N	\N	2023-11-08 13:57:34.992717	2023-11-08 13:57:34.992692	3aa06bdc-c7c3-4401-8339-f03dde1fa0f3	1351
1353	uri://ed-fi.org/CountryDescriptor	BR	Brazil	Brazil	\N	\N	\N	\N	2023-11-08 13:57:34.997434	2023-11-08 13:57:34.997296	44967b42-bc32-4a89-ba97-58fc7591176c	1353
1355	uri://ed-fi.org/CountryDescriptor	BT	Bhutan	Bhutan	\N	\N	\N	\N	2023-11-08 13:57:35.001014	2023-11-08 13:57:35.000955	0dba1cb4-ebec-4621-83b7-7a5dab93c8a9	1355
1358	uri://ed-fi.org/CountryDescriptor	BY	Belarus	Belarus	\N	\N	\N	\N	2023-11-08 13:57:35.005859	2023-11-08 13:57:35.005702	bc817288-2eff-4a3c-a3cd-0a72a28a56a9	1358
1227	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	\N	2023-11-08 13:57:34.433582	2023-11-08 13:57:34.433569	7736a837-a2ba-47da-bf31-7b949790b681	1227
1232	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard error measurement	Standard error measurement	Standard error measurement	\N	\N	\N	\N	2023-11-08 13:57:34.442543	2023-11-08 13:57:34.442516	8eb9813f-28ff-4939-b8f0-1e50d5334251	1232
1236	uri://ed-fi.org/AssessmentReportingMethodDescriptor	T-score	T-score	T-score	\N	\N	\N	\N	2023-11-08 13:57:34.449321	2023-11-08 13:57:34.449307	eb31dcae-6d1f-47cd-b96b-b94dc85f49f0	1236
1237	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical score	Vertical score	Vertical score	\N	\N	\N	\N	2023-11-08 13:57:34.456172	2023-11-08 13:57:34.456148	596bb714-26d3-41a5-a235-93a050cd0a53	1237
1247	uri://ed-fi.org/AssessmentReportingMethodDescriptor	State College-Bound Percentile	State College-Bound Percentile	State College-Bound Percentile	\N	\N	\N	\N	2023-11-08 13:57:34.476034	2023-11-08 13:57:34.475971	cbd0a225-6076-4021-a322-72ed57385fe9	1247
1248	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Yes	Yes	The student experiences very few or no interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	\N	2023-11-08 13:57:34.509618	2023-11-08 13:57:34.508274	58f3ec44-648f-4c41-aede-a2aa4e8c3dda	1248
1251	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	All students participate	All students participate	All students participate	\N	\N	\N	\N	2023-11-08 13:57:34.520914	2023-11-08 13:57:34.519965	a01570a6-c3cc-4d38-8171-2fdc965c836f	1251
1257	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	\N	2023-11-08 13:57:34.557899	2023-11-08 13:57:34.557169	2de57a5c-93a3-49ae-bbdb-5aea41b1841a	1257
1261	uri://ed-fi.org/ServiceDescriptor	Assistive technology device or service	Assistive technology device or service	Assistive technology device or service	\N	\N	\N	\N	2023-11-08 13:57:34.589439	2023-11-08 13:57:34.587762	7f76755b-5881-4c66-bf49-e10c77a91c6e	1261
1264	uri://ed-fi.org/ServiceDescriptor	Orientation and mobility training services	Orientation and mobility training services	Orientation and mobility training services	\N	\N	\N	\N	2023-11-08 13:57:34.597675	2023-11-08 13:57:34.59766	09331669-95b6-4274-95dc-25d7b8a64c86	1264
1269	uri://ed-fi.org/ServiceDescriptor	Audiological Impairment	Audiological Impairment	Audiological Impairment	\N	\N	\N	\N	2023-11-08 13:57:34.606503	2023-11-08 13:57:34.606475	6b1b7de4-21a0-40ed-b327-46bbb93235b8	1269
1271	uri://ed-fi.org/ServiceDescriptor	Disgraphia	Disgraphia	Disgraphia	\N	\N	\N	\N	2023-11-08 13:57:34.611786	2023-11-08 13:57:34.611757	45f2de55-d6a9-4d7e-9a1b-081156194bd2	1271
1273	uri://ed-fi.org/ServiceDescriptor	Audiological services	Audiological services	Audiological services	\N	\N	\N	\N	2023-11-08 13:57:34.618016	2023-11-08 13:57:34.61786	e00793b6-0499-469b-bf68-60126dc42bef	1273
1274	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide School	Title I Schoolwide School	Title I Schoolwide School	\N	\N	\N	\N	2023-11-08 13:57:34.649687	2023-11-08 13:57:34.648657	01b34cc3-355c-44bb-b342-ca6e94023680	1274
1281	uri://ed-fi.org/PublicationStatusDescriptor	Published	Published	Published	\N	\N	\N	\N	2023-11-08 13:57:34.690257	2023-11-08 13:57:34.689188	6f6ce516-6bf1-4ec0-bfd9-6bead48feac3	1281
1289	uri://ed-fi.org/RaceDescriptor	Black - African American	Black - African American	Black - African American	\N	\N	\N	\N	2023-11-08 13:57:34.731242	2023-11-08 13:57:34.730133	9d4c6ab2-067c-4794-89e0-c16934663a75	1289
1292	uri://ed-fi.org/RaceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:34.742087	2023-11-08 13:57:34.742031	9233c6cd-b2a2-4d95-8351-1c5597f0978a	1292
1293	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Lack of Available Assessment Personnel	Lack of Available Assessment Personnel	LEA delay due to lack of available assessment personnel.	\N	\N	\N	\N	2023-11-08 13:57:34.773412	2023-11-08 13:57:34.772433	d78f1003-9198-4f89-a32e-9341e7b82805	1293
1299	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Parent/Guardian Delay - Detailed Records	Parent Delay - Detailed Records	Delay due to parent or guardian. Detailed records maintained by LEA regarding a parent or guardian of a child who repeatedly fails or refuses to produce the child for the evaluation or eligibility determination.	\N	\N	\N	\N	2023-11-08 13:57:34.785358	2023-11-08 13:57:34.785246	c37a1330-d2d3-40e9-80cb-59886405cef9	1299
1301	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Scheduling	LEA Delay Due to Scheduling	LEA delay due to scheduling.	\N	\N	\N	\N	2023-11-08 13:57:34.792338	2023-11-08 13:57:34.792292	b34ba6bb-3d89-4c97-93cc-e74d31151064	1301
1305	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Adult Correction	Adult Correction	Adult Correction	\N	\N	\N	\N	2023-11-08 13:57:34.823513	2023-11-08 13:57:34.822418	6cda9b3f-9771-4eb0-a863-819d7c60055d	1305
1309	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Dropout Prevention Programs	DEPRECATED: Dropout Prevention Programs	DEPRECATED: Dropout Prevention Programs	\N	\N	\N	\N	2023-11-08 13:57:34.834373	2023-11-08 13:57:34.834329	92faa1e0-5b7b-4e9e-a6aa-931f7c9e2093	1309
1311	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	At-Risk Indian Youth Programs	DEPRECATED: At-Risk Indian Youth Programs	DEPRECATED: At-Risk Indian Youth Programs	\N	\N	\N	\N	2023-11-08 13:57:34.841438	2023-11-08 13:57:34.841425	63b40a45-3751-43b2-8008-b1aca9628d5d	1311
1315	uri://ed-fi.org/ResponsibilityDescriptor	Funding	Funding	Funding	\N	\N	\N	\N	2023-11-08 13:57:34.88748	2023-11-08 13:57:34.886098	a7feb841-c539-435f-a9c1-f4f18d42f5f5	1315
1321	uri://ed-fi.org/ResponsibilityDescriptor	Residency	Residency	Residency	\N	\N	\N	\N	2023-11-08 13:57:34.900389	2023-11-08 13:57:34.900357	d031d46c-c2a2-4e2c-bfd1-c0cd5c1ebbe5	1321
1326	uri://ed-fi.org/CountryDescriptor	AG	Antigua and Barbuda	Antigua and Barbuda	\N	\N	\N	\N	2023-11-08 13:57:34.938571	2023-11-08 13:57:34.937485	f7f2114f-9714-4ccd-94de-6d5f6aca3092	1326
1327	uri://ed-fi.org/CountryDescriptor	AM	Armenia	Armenia	\N	\N	\N	\N	2023-11-08 13:57:34.947129	2023-11-08 13:57:34.947113	7462124f-5f1d-437f-b060-48e36ce931d5	1327
1331	uri://ed-fi.org/CountryDescriptor	AQ	Antarctica	Antarctica	\N	\N	\N	\N	2023-11-08 13:57:34.952665	2023-11-08 13:57:34.952622	58b2d37a-0272-4d6d-9251-b70e7939cd8d	1331
1333	uri://ed-fi.org/CountryDescriptor	AS	American Samoa	American Samoa	\N	\N	\N	\N	2023-11-08 13:57:34.958402	2023-11-08 13:57:34.95837	db669657-ecde-4ff7-a7de-4cd97a0a659e	1333
1341	uri://ed-fi.org/CountryDescriptor	BE	Belgium	Belgium	\N	\N	\N	\N	2023-11-08 13:57:34.97391	2023-11-08 13:57:34.973897	bcf61a3e-89a4-413a-b4df-0a9f3f30ee9f	1341
1343	uri://ed-fi.org/CountryDescriptor	BG	Bulgaria	Bulgaria	\N	\N	\N	\N	2023-11-08 13:57:34.980169	2023-11-08 13:57:34.980157	8edf4280-34d1-4e3a-bd7f-f23ed149ab77	1343
1238	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Workplace readiness score	Workplace readiness score	Workplace readiness score	\N	\N	\N	\N	2023-11-08 13:57:34.455729	2023-11-08 13:57:34.455556	2293cd3d-b604-44e0-bbb9-1a5ca98a13ed	1238
1241	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:34.46321	2023-11-08 13:57:34.463186	b1df3baa-07cc-4b78-9f8b-bbadff0355f4	1241
1243	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Lexile Measure	Lexile Measure	Lexile Measure	\N	\N	\N	\N	2023-11-08 13:57:34.467842	2023-11-08 13:57:34.467812	8ab83061-0a11-4960-b809-759883fc3782	1243
1245	uri://ed-fi.org/AssessmentReportingMethodDescriptor	RIT scale score	RIT scale score	RIT scale score	\N	\N	\N	\N	2023-11-08 13:57:34.473443	2023-11-08 13:57:34.47338	eee437d0-3fac-4048-b0a0-5c572238d63f	1245
1253	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	No students participate	No students participate	No students participate	\N	\N	\N	\N	2023-11-08 13:57:34.521343	2023-11-08 13:57:34.519991	77e1e4e8-bf30-4b9c-824b-2c4009d12d58	1253
1256	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Passed	Passed	Passed	\N	\N	\N	\N	2023-11-08 13:57:34.557762	2023-11-08 13:57:34.556876	a4bf1eaf-af34-4432-92c1-20cf987fff23	1256
1262	uri://ed-fi.org/ServiceDescriptor	Counseling services	Counseling services	Counseling services	\N	\N	\N	\N	2023-11-08 13:57:34.58971	2023-11-08 13:57:34.587743	6fe4f68b-15c2-432c-b1b9-be3f6747e891	1262
1265	uri://ed-fi.org/ServiceDescriptor	Physical therapy	Physical therapy	Physical therapy	\N	\N	\N	\N	2023-11-08 13:57:34.598413	2023-11-08 13:57:34.598397	ab0bc5c1-3a7d-44ea-a6e9-e2979f8b2527	1265
1267	uri://ed-fi.org/ServiceDescriptor	Recreational services	Recreational services	Recreational services	\N	\N	\N	\N	2023-11-08 13:57:34.604285	2023-11-08 13:57:34.60425	1481a699-46e1-4df4-b231-9f929f79946b	1267
1276	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Not A Title I School	Not A Title I School	Not A Title I School	\N	\N	\N	\N	2023-11-08 13:57:34.650178	2023-11-08 13:57:34.648674	0b358776-6098-4e08-b97b-adcd718345a0	1276
1278	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-11-08 13:57:34.657605	2023-11-08 13:57:34.657548	70f1b21b-5544-4dc2-ace9-2dcdb8a7be55	1278
1280	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance School	Title I Targeted Assistance School	Title I Targeted Assistance School	\N	\N	\N	\N	2023-11-08 13:57:34.661798	2023-11-08 13:57:34.661784	fee6ade2-326c-47ad-b74e-fe94964a2bc7	1280
1284	uri://ed-fi.org/PublicationStatusDescriptor	Adopted	Adopted	Adopted	\N	\N	\N	\N	2023-11-08 13:57:34.690265	2023-11-08 13:57:34.689216	2cc1c328-d729-42dd-aa13-5a4ef7077002	1284
1287	uri://ed-fi.org/RaceDescriptor	Asian	Asian	Asian	\N	\N	\N	\N	2023-11-08 13:57:34.731253	2023-11-08 13:57:34.730151	561ff144-435f-4cd2-a501-d699dae2cbe4	1287
1294	uri://ed-fi.org/EligibilityDelayReasonDescriptor	No Detailed Records by LEA	No Detailed Records by LEA	LEA agreement with parent to timeframe. No detailed records maintained by LEA.	\N	\N	\N	\N	2023-11-08 13:57:34.773405	2023-11-08 13:57:34.772397	72789ae4-aa69-40ed-b199-d932b3d72390	1294
1298	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Parent/Guardian Delay - No Detailed Records	Parent Delay - No Detailed Records	Delay due to parent or guardian. No detailed records maintained by LEA regarding a parent or guardian of a child who repeatedly fails or refuses to produce the child for the evaluation or eligibility determination.	\N	\N	\N	\N	2023-11-08 13:57:34.784521	2023-11-08 13:57:34.784506	765b8188-eafe-4e09-915f-339a5fd95b0e	1298
1302	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-11-08 13:57:34.823372	2023-11-08 13:57:34.822409	95e303b0-c7c9-43ec-945f-14becddedf03	1302
1308	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Transition Programs	DEPRECATED: Transition Programs	DEPRECATED: Transition Programs	\N	\N	\N	\N	2023-11-08 13:57:34.834198	2023-11-08 13:57:34.834159	f56312f4-c500-46da-bfd7-9bccfcfa4f2e	1308
1312	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Special Programs	DEPRECATED: Special Programs	DEPRECATED: Special Programs	\N	\N	\N	\N	2023-11-08 13:57:34.841256	2023-11-08 13:57:34.841089	ad6480d3-c343-40d2-ba48-099aad9f11c2	1312
1317	uri://ed-fi.org/ResponsibilityDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	\N	2023-11-08 13:57:34.887613	2023-11-08 13:57:34.886124	2dcdc02d-0d03-4f8a-a418-92c90fa4041a	1317
1319	uri://ed-fi.org/ResponsibilityDescriptor	Individualized Education Program	Individualized Education Program	Individualized Education Program	\N	\N	\N	\N	2023-11-08 13:57:34.899737	2023-11-08 13:57:34.899709	eab9d681-6a7c-45aa-9d18-38d1eaf00e5b	1319
1323	uri://ed-fi.org/CountryDescriptor	AE	United Arab Emirates	United Arab Emirates	\N	\N	\N	\N	2023-11-08 13:57:34.93848	2023-11-08 13:57:34.937457	68bd8f2b-0989-43d7-9b04-39bd99bda913	1323
1329	uri://ed-fi.org/CountryDescriptor	AO	Angola	Angola	\N	\N	\N	\N	2023-11-08 13:57:34.947842	2023-11-08 13:57:34.947802	af7dc072-57ee-429d-80db-7f385a7f9163	1329
1334	uri://ed-fi.org/CountryDescriptor	AU	Australia	Australia	\N	\N	\N	\N	2023-11-08 13:57:34.960285	2023-11-08 13:57:34.960271	da7d0987-1ad6-497d-8653-89db86765239	1334
1335	uri://ed-fi.org/CountryDescriptor	AT	Austria	Austria	\N	\N	\N	\N	2023-11-08 13:57:34.963196	2023-11-08 13:57:34.963134	7e931c16-df2c-4832-a803-845b0ac7be1a	1335
1338	uri://ed-fi.org/CountryDescriptor	AW	Aruba	Aruba	\N	\N	\N	\N	2023-11-08 13:57:34.966815	2023-11-08 13:57:34.96673	1febb554-64ae-47fa-abb4-0025fb91b87a	1338
1340	uri://ed-fi.org/CountryDescriptor	BB	Barbados	Barbados	\N	\N	\N	\N	2023-11-08 13:57:34.97211	2023-11-08 13:57:34.972068	fd25350f-11d7-4b66-8311-cdab7118a479	1340
1346	uri://ed-fi.org/CountryDescriptor	BI	Burundi	Burundi	\N	\N	\N	\N	2023-11-08 13:57:34.98261	2023-11-08 13:57:34.982598	beb1c6b5-60e7-4b43-b2d9-fbeb77e9a2bc	1346
1350	uri://ed-fi.org/CountryDescriptor	BL	Saint Barthélemy	Saint Barthélemy	\N	\N	\N	\N	2023-11-08 13:57:34.988938	2023-11-08 13:57:34.988905	9565ff1c-ff57-4edd-924a-de5667b4e838	1350
1352	uri://ed-fi.org/CountryDescriptor	BS	Bahamas	Bahamas	\N	\N	\N	\N	2023-11-08 13:57:34.996102	2023-11-08 13:57:34.996072	9db65e63-a538-489a-b40e-359da4b7d9d0	1352
1357	uri://ed-fi.org/CountryDescriptor	BW	Botswana	Botswana	\N	\N	\N	\N	2023-11-08 13:57:35.004564	2023-11-08 13:57:35.004537	f18e2840-a0b0-4d16-b4a3-ee4bc4591257	1357
1362	uri://ed-fi.org/CountryDescriptor	CD	Congo, the Democratic Republic of the	Congo, the Democratic Republic of the	\N	\N	\N	\N	2023-11-08 13:57:35.01446	2023-11-08 13:57:35.014404	8bd497bd-dc01-4056-a76b-89ab7685f2a9	1362
1365	uri://ed-fi.org/CountryDescriptor	CG	Congo	Congo	\N	\N	\N	\N	2023-11-08 13:57:35.020879	2023-11-08 13:57:35.020842	91126f60-ae09-4d5b-a35b-0673e282d2f9	1365
1368	uri://ed-fi.org/CountryDescriptor	CL	Chile	Chile	\N	\N	\N	\N	2023-11-08 13:57:35.026968	2023-11-08 13:57:35.026926	bc693c2c-839b-40cd-b0a5-8ff240b54e08	1368
1373	uri://ed-fi.org/CountryDescriptor	CV	Cabo Verde	Cabo Verde	\N	\N	\N	\N	2023-11-08 13:57:35.037304	2023-11-08 13:57:35.037288	10e43c99-c20d-4831-a205-9583abbc17da	1373
1263	uri://ed-fi.org/ServiceDescriptor	Preschool children with disabilites program	Preschool children with disabilites program	Preschool children with disabilites program	\N	\N	\N	\N	2023-11-08 13:57:34.597709	2023-11-08 13:57:34.597696	66fbc3f9-e610-45ba-9e1f-3160c6e0930b	1263
1270	uri://ed-fi.org/ServiceDescriptor	Dyslexia	Dyslexia	Dyslexia	\N	\N	\N	\N	2023-11-08 13:57:34.608795	2023-11-08 13:57:34.608759	c7d03872-2e12-49dc-b3e2-b0bfa083188b	1270
1275	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	\N	\N	\N	\N	2023-11-08 13:57:34.64965	2023-11-08 13:57:34.648648	c525ff6c-4a9e-450c-8543-5b38c414c09d	1275
1283	uri://ed-fi.org/PublicationStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	\N	2023-11-08 13:57:34.690284	2023-11-08 13:57:34.689194	cfd89d8d-8eb5-4f78-a5aa-8c84874f8b34	1283
1285	uri://ed-fi.org/PublicationStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-11-08 13:57:34.69883	2023-11-08 13:57:34.698752	1f366b67-a0a5-4b0a-a5c4-831b60e1b4d3	1285
1286	uri://ed-fi.org/RaceDescriptor	Choose Not to Respond	Choose Not to Respond	Choose Not to Respond	\N	\N	\N	\N	2023-11-08 13:57:34.731259	2023-11-08 13:57:34.730143	5c68e626-50d6-405a-bfbe-3a5aaa83c471	1286
1291	uri://ed-fi.org/RaceDescriptor	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	\N	\N	\N	\N	2023-11-08 13:57:34.741673	2023-11-08 13:57:34.741656	70eb1181-ad2b-482a-ac3a-c74f03dc701a	1291
1296	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Detailed Records Maintained by LEA	Detailed Records Maintained by LEA	LEA agreement with parent or guardian to timeframe. Detailed records maintained by LEA.	\N	\N	\N	\N	2023-11-08 13:57:34.773534	2023-11-08 13:57:34.772415	0485c508-36f9-4568-a488-d0326ccae2b7	1296
1297	uri://ed-fi.org/EligibilityDelayReasonDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:34.783942	2023-11-08 13:57:34.783784	ac53fda3-74af-4f1c-845b-9410b2439df6	1297
1304	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Juvenile Correction	Juvenile Correction	Juvenile Correction	\N	\N	\N	\N	2023-11-08 13:57:34.82352	2023-11-08 13:57:34.822433	8b106a8b-7fec-4245-99c2-a4359ab5d40e	1304
1306	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	\N	2023-11-08 13:57:34.832038	2023-11-08 13:57:34.832009	d9348eec-af21-4cda-9e5d-78cb8713a37a	1306
1310	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Health And Social Services	DEPRECATED: Health And Social Services	DEPRECATED: Health And Social Services	\N	\N	\N	\N	2023-11-08 13:57:34.839109	2023-11-08 13:57:34.839079	8a1a59db-2abd-4c49-9df7-e4d0988a4f41	1310
1313	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Mentoring Programs	DEPRECATED: Mentoring Programs	DEPRECATED: Mentoring Programs	\N	\N	\N	\N	2023-11-08 13:57:34.843683	2023-11-08 13:57:34.843656	e7177952-5748-457a-8095-28d54ad5c329	1313
1316	uri://ed-fi.org/ResponsibilityDescriptor	Discipline	Discipline	Discipline	\N	\N	\N	\N	2023-11-08 13:57:34.887622	2023-11-08 13:57:34.886113	e2c862d1-c2ee-4bb5-ad68-6b7b2e031026	1316
1320	uri://ed-fi.org/ResponsibilityDescriptor	Graduation	Graduation	Graduation	\N	\N	\N	\N	2023-11-08 13:57:34.899552	2023-11-08 13:57:34.899513	88eb6b52-57ac-42b5-a456-9eb6607e0e65	1320
1325	uri://ed-fi.org/CountryDescriptor	AF	Afghanistan	Afghanistan	\N	\N	\N	\N	2023-11-08 13:57:34.93858	2023-11-08 13:57:34.93745	3cc9c4c1-06d5-4cda-a924-63a67bd25016	1325
1330	uri://ed-fi.org/CountryDescriptor	AL	Albania	Albania	\N	\N	\N	\N	2023-11-08 13:57:34.951515	2023-11-08 13:57:34.951495	a8086695-5ea7-4894-9444-a4ba2dc5eb63	1330
1332	uri://ed-fi.org/CountryDescriptor	AR	Argentina	Argentina	\N	\N	\N	\N	2023-11-08 13:57:34.955767	2023-11-08 13:57:34.955734	b35cc8d2-5bdf-4b4f-b22b-b77a9d388336	1332
1336	uri://ed-fi.org/CountryDescriptor	AX	Åland Islands	Åland Islands	\N	\N	\N	\N	2023-11-08 13:57:34.963944	2023-11-08 13:57:34.963782	c840f9ce-e15a-4ea4-a926-ea14a8f923a3	1336
1339	uri://ed-fi.org/CountryDescriptor	BD	Bangladesh	Bangladesh	\N	\N	\N	\N	2023-11-08 13:57:34.971779	2023-11-08 13:57:34.971749	eb491970-d8cd-4376-b56e-27c1401aaff4	1339
1345	uri://ed-fi.org/CountryDescriptor	BH	Bahrain	Bahrain	\N	\N	\N	\N	2023-11-08 13:57:34.981181	2023-11-08 13:57:34.981152	1c91a314-d0ec-41a5-b8be-dae12b30c837	1345
1347	uri://ed-fi.org/CountryDescriptor	BJ	Benin	Benin	\N	\N	\N	\N	2023-11-08 13:57:34.986967	2023-11-08 13:57:34.98694	e0d6c954-eebc-443a-8025-d9faf37ddc31	1347
1359	uri://ed-fi.org/CountryDescriptor	BZ	Belize	Belize	\N	\N	\N	\N	2023-11-08 13:57:35.009284	2023-11-08 13:57:35.009109	2c5d972e-ceb6-40ad-9a1e-7a9a2dfde84f	1359
1361	uri://ed-fi.org/CountryDescriptor	CC	Cocos (Keeling) Islands	Cocos (Keeling) Islands	\N	\N	\N	\N	2023-11-08 13:57:35.013737	2023-11-08 13:57:35.013551	6194dd49-3294-440d-982f-d913cfe36494	1361
1366	uri://ed-fi.org/CountryDescriptor	CF	Central African Republic	Central African Republic	\N	\N	\N	\N	2023-11-08 13:57:35.0218	2023-11-08 13:57:35.021786	ab3fc226-2768-4ac7-a4d4-b569a4d3b7d6	1366
1369	uri://ed-fi.org/CountryDescriptor	CM	Cameroon	Cameroon	\N	\N	\N	\N	2023-11-08 13:57:35.028472	2023-11-08 13:57:35.028445	ecadbc6f-86e0-4b41-9cd7-0f4e85a97ece	1369
1372	uri://ed-fi.org/CountryDescriptor	CU	Cuba	Cuba	\N	\N	\N	\N	2023-11-08 13:57:35.03697	2023-11-08 13:57:35.036937	3eaa6df8-7c7e-4778-86d0-848805cad68a	1372
1379	uri://ed-fi.org/CountryDescriptor	DE	Germany	Germany	\N	\N	\N	\N	2023-11-08 13:57:35.049057	2023-11-08 13:57:35.049022	cab58b04-2162-4b12-b279-22fc2d93c2ab	1379
1381	uri://ed-fi.org/CountryDescriptor	DK	Denmark	Denmark	\N	\N	\N	\N	2023-11-08 13:57:35.054661	2023-11-08 13:57:35.054511	89350b6b-7fc3-4dae-a06c-aa433abc59a9	1381
1386	uri://ed-fi.org/CountryDescriptor	EE	Estonia	Estonia	\N	\N	\N	\N	2023-11-08 13:57:35.063131	2023-11-08 13:57:35.063103	08062255-74ea-479d-847c-2fcf84d7604a	1386
1387	uri://ed-fi.org/CountryDescriptor	ER	Eritrea	Eritrea	\N	\N	\N	\N	2023-11-08 13:57:35.066851	2023-11-08 13:57:35.066806	cf93c809-eabd-4e5f-b67e-8fe677d4c6fc	1387
1389	uri://ed-fi.org/CountryDescriptor	EH	Western Sahara	Western Sahara	\N	\N	\N	\N	2023-11-08 13:57:35.069508	2023-11-08 13:57:35.069468	2f9000b1-4448-4ae4-85d7-4cc3ca1d0f3c	1389
1391	uri://ed-fi.org/CountryDescriptor	ET	Ethiopia	Ethiopia	\N	\N	\N	\N	2023-11-08 13:57:35.073641	2023-11-08 13:57:35.073613	1dd904f8-279a-41c5-96eb-23044f04e803	1391
1392	uri://ed-fi.org/CountryDescriptor	FI	Finland	Finland	\N	\N	\N	\N	2023-11-08 13:57:35.077289	2023-11-08 13:57:35.077252	9c43d182-401e-4d4e-8004-3c9525e17f3c	1392
1395	uri://ed-fi.org/CountryDescriptor	FM	Micronesia, Federated States of	Micronesia, Federated States of	\N	\N	\N	\N	2023-11-08 13:57:35.080512	2023-11-08 13:57:35.080467	6fac2b59-18c8-4d4e-81c7-3500555f9a90	1395
1399	uri://ed-fi.org/CountryDescriptor	GA	Gabon	Gabon	\N	\N	\N	\N	2023-11-08 13:57:35.087236	2023-11-08 13:57:35.087222	6e524d29-e51d-4786-81e9-c7993dadb105	1399
1400	uri://ed-fi.org/CountryDescriptor	GG	Guernsey	Guernsey	\N	\N	\N	\N	2023-11-08 13:57:35.093946	2023-11-08 13:57:35.093851	37849aab-bf12-4d7d-baa0-8254caeaf675	1400
1404	uri://ed-fi.org/CountryDescriptor	GL	Greenland	Greenland	\N	\N	\N	\N	2023-11-08 13:57:35.101672	2023-11-08 13:57:35.101644	8f314946-d227-4975-bb71-c6bba1d9c4a2	1404
1354	uri://ed-fi.org/CountryDescriptor	BQ	Bonaire, Sint Eustatius and Saba	Bonaire, Sint Eustatius and Saba	\N	\N	\N	\N	2023-11-08 13:57:34.998706	2023-11-08 13:57:34.998669	7d19843b-b7de-417e-a486-6e7185cd7041	1354
1356	uri://ed-fi.org/CountryDescriptor	BV	Bouvet Island	Bouvet Island	\N	\N	\N	\N	2023-11-08 13:57:35.002475	2023-11-08 13:57:35.002093	37afdf71-c690-48dc-bebf-ebd705e8b3bb	1356
1360	uri://ed-fi.org/CountryDescriptor	CA	Canada	Canada	\N	\N	\N	\N	2023-11-08 13:57:35.010773	2023-11-08 13:57:35.010744	9e4e2373-fae1-43cb-b9fe-4d4a5d7773c8	1360
1363	uri://ed-fi.org/CountryDescriptor	CH	Switzerland	Switzerland	\N	\N	\N	\N	2023-11-08 13:57:35.019791	2023-11-08 13:57:35.019649	9383ef63-1a2f-46b5-a389-175ab6982662	1363
1371	uri://ed-fi.org/CountryDescriptor	CO	Colombia	Colombia	\N	\N	\N	\N	2023-11-08 13:57:35.03444	2023-11-08 13:57:35.034354	f89cbcdc-13d1-4736-b710-1680565f8f07	1371
1377	uri://ed-fi.org/CountryDescriptor	CZ	Czech Republic	Czech Republic	\N	\N	\N	\N	2023-11-08 13:57:35.045724	2023-11-08 13:57:35.045639	cf15c77b-81fa-496f-9814-d91f7f25ec48	1377
1380	uri://ed-fi.org/CountryDescriptor	DJ	Djibouti	Djibouti	\N	\N	\N	\N	2023-11-08 13:57:35.052142	2023-11-08 13:57:35.052109	d4cd66b4-81df-4187-bee5-09ec8dde1f95	1380
1383	uri://ed-fi.org/CountryDescriptor	DO	Dominican Republic	Dominican Republic	\N	\N	\N	\N	2023-11-08 13:57:35.057303	2023-11-08 13:57:35.057276	76122bf9-7289-48da-91bc-099684aef47f	1383
1390	uri://ed-fi.org/CountryDescriptor	ES	Spain	Spain	\N	\N	\N	\N	2023-11-08 13:57:35.069565	2023-11-08 13:57:35.069537	99dcab38-cd4f-48bc-a951-5ce1511e9b2b	1390
1394	uri://ed-fi.org/CountryDescriptor	FK	Falkland Islands (Malvinas)	Falkland Islands (Malvinas)	\N	\N	\N	\N	2023-11-08 13:57:35.079572	2023-11-08 13:57:35.079544	f36307cb-4643-476f-a942-97bfe7bb8be2	1394
1397	uri://ed-fi.org/CountryDescriptor	GB	United Kingdom of Great Britain and Northern Ireland	United Kingdom of Great Britain and Northern Ireland	\N	\N	\N	\N	2023-11-08 13:57:35.086656	2023-11-08 13:57:35.086615	251fd695-ac9d-42f6-9c85-d1ba30151ef4	1397
1403	uri://ed-fi.org/CountryDescriptor	GF	French Guiana	French Guiana	\N	\N	\N	\N	2023-11-08 13:57:35.096842	2023-11-08 13:57:35.096814	e5f673b8-655e-4d30-be39-31c819d24605	1403
1406	uri://ed-fi.org/CountryDescriptor	GH	Ghana	Ghana	\N	\N	\N	\N	2023-11-08 13:57:35.104425	2023-11-08 13:57:35.103922	869fcc0c-e4cb-4bde-8664-0cfb65569e29	1406
1409	uri://ed-fi.org/CountryDescriptor	GP	Guadeloupe	Guadeloupe	\N	\N	\N	\N	2023-11-08 13:57:35.109905	2023-11-08 13:57:35.109876	f698bd3d-8f92-44e6-9cb1-fbc608ba4d56	1409
1412	uri://ed-fi.org/CountryDescriptor	GR	Greece	Greece	\N	\N	\N	\N	2023-11-08 13:57:35.114257	2023-11-08 13:57:35.114242	a6bf191a-2ea7-466e-8840-c8b118e82f5e	1412
1415	uri://ed-fi.org/CountryDescriptor	GW	Guinea-Bissau	Guinea-Bissau	\N	\N	\N	\N	2023-11-08 13:57:35.120853	2023-11-08 13:57:35.120838	2677e981-930a-48e0-a33a-7a3c7d3dfb41	1415
1416	uri://ed-fi.org/CountryDescriptor	GY	Guyana	Guyana	\N	\N	\N	\N	2023-11-08 13:57:35.12605	2023-11-08 13:57:35.126008	5443dd18-42ed-4b86-8cbd-1bb4fe069c36	1416
1419	uri://ed-fi.org/CountryDescriptor	HN	Honduras	Honduras	\N	\N	\N	\N	2023-11-08 13:57:35.130556	2023-11-08 13:57:35.130528	3c186819-1d8f-4a5f-ac21-cbfa474b86fa	1419
1422	uri://ed-fi.org/CountryDescriptor	HU	Hungary	Hungary	\N	\N	\N	\N	2023-11-08 13:57:35.13599	2023-11-08 13:57:35.135962	25ee6ca8-ec33-4035-b220-3786fc68b1f1	1422
1424	uri://ed-fi.org/CountryDescriptor	IE	Ireland	Ireland	\N	\N	\N	\N	2023-11-08 13:57:35.141479	2023-11-08 13:57:35.141454	fadaef11-31d4-40d0-b824-29cc688fa962	1424
1428	uri://ed-fi.org/CountryDescriptor	IN	India	India	\N	\N	\N	\N	2023-11-08 13:57:35.149486	2023-11-08 13:57:35.149455	974769e8-350a-482e-b81c-9ec699eaf85c	1428
1433	uri://ed-fi.org/CountryDescriptor	JE	Jersey	Jersey	\N	\N	\N	\N	2023-11-08 13:57:35.157326	2023-11-08 13:57:35.15731	2a3528bd-f51e-41f2-ae76-30955a666cef	1433
1435	uri://ed-fi.org/CountryDescriptor	JM	Jamaica	Jamaica	\N	\N	\N	\N	2023-11-08 13:57:35.162562	2023-11-08 13:57:35.162443	628c8f62-a82e-4c7b-a8b1-9db01b45c860	1435
1440	uri://ed-fi.org/CountryDescriptor	KH	Cambodia	Cambodia	\N	\N	\N	\N	2023-11-08 13:57:35.17202	2023-11-08 13:57:35.17156	43ae37cc-a45c-4eb3-a14b-b903956e675b	1440
1441	uri://ed-fi.org/CountryDescriptor	KM	Comoros	Comoros	\N	\N	\N	\N	2023-11-08 13:57:35.174737	2023-11-08 13:57:35.17457	4b11b4f7-ce82-4865-ae6f-c20fbcec3303	1441
1443	uri://ed-fi.org/CountryDescriptor	KP	Korea, Democratic People's Republic of	Korea, Democratic People's Republic of	\N	\N	\N	\N	2023-11-08 13:57:35.178639	2023-11-08 13:57:35.178612	70cfe3f7-c0d2-422b-a109-618f8983a657	1443
1445	uri://ed-fi.org/CountryDescriptor	KW	Kuwait	Kuwait	\N	\N	\N	\N	2023-11-08 13:57:35.181521	2023-11-08 13:57:35.181493	0c1a6360-db8b-481f-9fdc-8b140004ba89	1445
1446	uri://ed-fi.org/CountryDescriptor	KZ	Kazakhstan	Kazakhstan	\N	\N	\N	\N	2023-11-08 13:57:35.186898	2023-11-08 13:57:35.186785	94ae5fad-c8fd-4f2f-9637-0f9696dc5ae2	1446
1452	uri://ed-fi.org/CountryDescriptor	LI	Liechtenstein	Liechtenstein	\N	\N	\N	\N	2023-11-08 13:57:35.196335	2023-11-08 13:57:35.19618	e97f88af-6987-425f-b734-849b192e78be	1452
1460	uri://ed-fi.org/CountryDescriptor	MC	Monaco	Monaco	\N	\N	\N	\N	2023-11-08 13:57:35.211608	2023-11-08 13:57:35.211594	8186973f-d48f-46f0-86e7-f587ae141404	1460
1464	uri://ed-fi.org/CountryDescriptor	MG	Madagascar	Madagascar	\N	\N	\N	\N	2023-11-08 13:57:35.219267	2023-11-08 13:57:35.219237	598308a4-e6fe-461f-aac6-8e050b57096d	1464
1466	uri://ed-fi.org/CountryDescriptor	MK	Macedonia, the former Yugoslav Republic of	Macedonia, the former Yugoslav Republic of	\N	\N	\N	\N	2023-11-08 13:57:35.224106	2023-11-08 13:57:35.224059	9b0dc7ad-1e50-4b86-8e89-bfc4ab97e3f5	1466
1469	uri://ed-fi.org/CountryDescriptor	ML	Mali	Mali	\N	\N	\N	\N	2023-11-08 13:57:35.228197	2023-11-08 13:57:35.228134	c187f69b-cb14-4aad-b4b9-58e1ada07c0e	1469
1481	uri://ed-fi.org/CountryDescriptor	MZ	Mozambique	Mozambique	\N	\N	\N	\N	2023-11-08 13:57:35.252423	2023-11-08 13:57:35.252336	e71a8f5b-9ca6-46a2-9c29-7ead4717ff2a	1481
1487	uri://ed-fi.org/CountryDescriptor	NI	Nicaragua	Nicaragua	\N	\N	\N	\N	2023-11-08 13:57:35.264235	2023-11-08 13:57:35.264109	c6791e81-1822-4a49-91b6-edb8fd4f8197	1487
1490	uri://ed-fi.org/CountryDescriptor	NR	Nauru	Nauru	\N	\N	\N	\N	2023-11-08 13:57:35.272231	2023-11-08 13:57:35.271791	43c9ad5a-3472-44f8-a4ed-81c88d5d6bf5	1490
1496	uri://ed-fi.org/CountryDescriptor	PF	French Polynesia	French Polynesia	\N	\N	\N	\N	2023-11-08 13:57:35.282256	2023-11-08 13:57:35.282213	abd3e11f-ef6d-45f9-a2e5-db5046d4cfbb	1496
1499	uri://ed-fi.org/CountryDescriptor	PH	Philippines	Philippines	\N	\N	\N	\N	2023-11-08 13:57:35.287992	2023-11-08 13:57:35.287966	f6422f67-b51d-4b95-bc5f-7891dfafc7df	1499
1503	uri://ed-fi.org/CountryDescriptor	PN	Pitcairn	Pitcairn	\N	\N	\N	\N	2023-11-08 13:57:35.296526	2023-11-08 13:57:35.296503	490e8c41-5271-4b17-b525-15e82f48fab7	1503
1507	uri://ed-fi.org/CountryDescriptor	PT	Portugal	Portugal	\N	\N	\N	\N	2023-11-08 13:57:35.305295	2023-11-08 13:57:35.305278	d03e9e0e-123f-4411-b163-4eb909a626dd	1507
1512	uri://ed-fi.org/CountryDescriptor	RS	Serbia	Serbia	\N	\N	\N	\N	2023-11-08 13:57:35.315896	2023-11-08 13:57:35.315869	72908c7e-0378-4591-8c6b-3e41ec165c22	1512
1517	uri://ed-fi.org/CountryDescriptor	SC	Seychelles	Seychelles	\N	\N	\N	\N	2023-11-08 13:57:35.326912	2023-11-08 13:57:35.326884	9a48b74a-e481-46cd-a722-97bfae4431e4	1517
1521	uri://ed-fi.org/CountryDescriptor	SG	Singapore	Singapore	\N	\N	\N	\N	2023-11-08 13:57:35.337909	2023-11-08 13:57:35.337708	f52a6bed-43cb-4ec3-b3e3-7006315f2deb	1521
1522	uri://ed-fi.org/CountryDescriptor	SI	Slovenia	Slovenia	\N	\N	\N	\N	2023-11-08 13:57:35.343181	2023-11-08 13:57:35.343152	0bd30c23-65a5-4397-a5ce-a7db53264fde	1522
1367	uri://ed-fi.org/CountryDescriptor	CK	Cook Islands	Cook Islands	\N	\N	\N	\N	2023-11-08 13:57:35.026146	2023-11-08 13:57:35.026119	cfa25b7a-0cc7-47c1-b28e-125c43ee21a6	1367
1370	uri://ed-fi.org/CountryDescriptor	CN	China	China	\N	\N	\N	\N	2023-11-08 13:57:35.029606	2023-11-08 13:57:35.029576	a2dc8acc-9d5e-4d02-87b6-ccf80eeca993	1370
1374	uri://ed-fi.org/CountryDescriptor	CR	Costa Rica	Costa Rica	\N	\N	\N	\N	2023-11-08 13:57:35.038072	2023-11-08 13:57:35.037821	34f63b3d-1d3b-4138-8c1b-eeb7b1accdef	1374
1376	uri://ed-fi.org/CountryDescriptor	CW	Curaçao	Curaçao	\N	\N	\N	\N	2023-11-08 13:57:35.045351	2023-11-08 13:57:35.045319	fcd8c7b7-fe38-4cb5-8d74-f5decac0903d	1376
1385	uri://ed-fi.org/CountryDescriptor	EC	Ecuador	Ecuador	\N	\N	\N	\N	2023-11-08 13:57:35.061213	2023-11-08 13:57:35.061177	508b1b7c-c608-4141-9a78-590411c2ae97	1385
1388	uri://ed-fi.org/CountryDescriptor	EG	Egypt	Egypt	\N	\N	\N	\N	2023-11-08 13:57:35.067891	2023-11-08 13:57:35.067765	8f4c21e2-6071-4e20-b2bb-27724b2091ed	1388
1393	uri://ed-fi.org/CountryDescriptor	FJ	Fiji	Fiji	\N	\N	\N	\N	2023-11-08 13:57:35.077573	2023-11-08 13:57:35.077544	77d2f9e3-6ea9-4a7a-94e6-e8114174a864	1393
1396	uri://ed-fi.org/CountryDescriptor	FO	Faroe Islands	Faroe Islands	\N	\N	\N	\N	2023-11-08 13:57:35.085088	2023-11-08 13:57:35.085047	acf7bddc-654f-4d3a-b355-0ddb029f4484	1396
1401	uri://ed-fi.org/CountryDescriptor	GE	Georgia	Georgia	\N	\N	\N	\N	2023-11-08 13:57:35.09479	2023-11-08 13:57:35.094768	dfff49ee-7e78-42a0-9c07-85a58250ab8e	1401
1407	uri://ed-fi.org/CountryDescriptor	GM	Gambia	Gambia	\N	\N	\N	\N	2023-11-08 13:57:35.105013	2023-11-08 13:57:35.104986	90407937-036e-4c26-85f9-8b8a72041e5f	1407
1410	uri://ed-fi.org/CountryDescriptor	GQ	Equatorial Guinea	Equatorial Guinea	\N	\N	\N	\N	2023-11-08 13:57:35.112335	2023-11-08 13:57:35.1123	2c5bc3c9-4480-4e16-af13-1a17a87291dd	1410
1414	uri://ed-fi.org/CountryDescriptor	GU	Guam	Guam	\N	\N	\N	\N	2023-11-08 13:57:35.119064	2023-11-08 13:57:35.119033	84b195ee-c2a3-47f4-a864-fc530b3334f9	1414
1418	uri://ed-fi.org/CountryDescriptor	HM	Heard Island and McDonald Islands	Heard Island and McDonald Islands	\N	\N	\N	\N	2023-11-08 13:57:35.127793	2023-11-08 13:57:35.127777	007d34e7-37ae-4bf5-9b06-e4e80647fca9	1418
1421	uri://ed-fi.org/CountryDescriptor	HT	Haiti	Haiti	\N	\N	\N	\N	2023-11-08 13:57:35.134055	2023-11-08 13:57:35.133339	5a25a504-73b1-42b1-9d24-f97c45930545	1421
1425	uri://ed-fi.org/CountryDescriptor	IM	Isle of Man	Isle of Man	\N	\N	\N	\N	2023-11-08 13:57:35.142317	2023-11-08 13:57:35.14229	af863611-e7cb-4ba0-9236-50ee2348ee47	1425
1432	uri://ed-fi.org/CountryDescriptor	IT	Italy	Italy	\N	\N	\N	\N	2023-11-08 13:57:35.156954	2023-11-08 13:57:35.156927	cf72c6f1-e4a0-4632-9ef4-5e6483257478	1432
1436	uri://ed-fi.org/CountryDescriptor	JP	Japan	Japan	\N	\N	\N	\N	2023-11-08 13:57:35.164863	2023-11-08 13:57:35.164849	66658ac2-e959-4ddc-a356-79f4d6ded7be	1436
1439	uri://ed-fi.org/CountryDescriptor	KI	Kiribati	Kiribati	\N	\N	\N	\N	2023-11-08 13:57:35.171661	2023-11-08 13:57:35.171648	a3814127-b362-4489-b82f-43f19d7e20f8	1439
1448	uri://ed-fi.org/CountryDescriptor	LA	Lao People's Democratic Republic	Lao People's Democratic Republic	\N	\N	\N	\N	2023-11-08 13:57:35.187718	2023-11-08 13:57:35.187682	25b87fb8-c0d0-413c-99e0-bf7cfd875162	1448
1451	uri://ed-fi.org/CountryDescriptor	LK	Sri Lanka	Sri Lanka	\N	\N	\N	\N	2023-11-08 13:57:35.19541	2023-11-08 13:57:35.195365	dbb62cb1-0950-48aa-9962-c5a28a3d82c5	1451
1454	uri://ed-fi.org/CountryDescriptor	LS	Lesotho	Lesotho	\N	\N	\N	\N	2023-11-08 13:57:35.200824	2023-11-08 13:57:35.200789	3cc2849b-6188-455f-93ac-3fb752c23a55	1454
1458	uri://ed-fi.org/CountryDescriptor	LU	Luxembourg	Luxembourg	\N	\N	\N	\N	2023-11-08 13:57:35.209197	2023-11-08 13:57:35.209171	be8061d5-f3a7-416b-9415-9dd0e014f3b2	1458
1462	uri://ed-fi.org/CountryDescriptor	ME	Montenegro	Montenegro	\N	\N	\N	\N	2023-11-08 13:57:35.217104	2023-11-08 13:57:35.21709	9a0cfb88-0945-4b95-9fcc-5ac3efd17c14	1462
1468	uri://ed-fi.org/CountryDescriptor	MN	Mongolia	Mongolia	\N	\N	\N	\N	2023-11-08 13:57:35.227703	2023-11-08 13:57:35.227659	d2a25029-a2ef-400f-9ba2-39a850288279	1468
1471	uri://ed-fi.org/CountryDescriptor	MR	Mauritania	Mauritania	\N	\N	\N	\N	2023-11-08 13:57:35.232919	2023-11-08 13:57:35.232893	77dd2f2e-18c5-426b-8aed-c7e5a4054391	1471
1476	uri://ed-fi.org/CountryDescriptor	MU	Mauritius	Mauritius	\N	\N	\N	\N	2023-11-08 13:57:35.242857	2023-11-08 13:57:35.242818	3f7b244f-99cb-4f7b-8a82-fbb3d74c34f1	1476
1480	uri://ed-fi.org/CountryDescriptor	MX	Mexico	Mexico	\N	\N	\N	\N	2023-11-08 13:57:35.250896	2023-11-08 13:57:35.250864	2131d9ae-ebb9-4e11-8e8b-d1e2fd99bc47	1480
1485	uri://ed-fi.org/CountryDescriptor	NE	Niger	Niger	\N	\N	\N	\N	2023-11-08 13:57:35.26103	2023-11-08 13:57:35.260929	a6e73668-6c30-40f1-88c9-a7c8e9f9e6ae	1485
1489	uri://ed-fi.org/CountryDescriptor	NL	Netherlands	Netherlands	\N	\N	\N	\N	2023-11-08 13:57:35.266917	2023-11-08 13:57:35.266831	da5e2c5b-24aa-4870-b7ff-eac609225de8	1489
1491	uri://ed-fi.org/CountryDescriptor	NP	Nepal	Nepal	\N	\N	\N	\N	2023-11-08 13:57:35.272427	2023-11-08 13:57:35.272152	0d4644ce-af2c-4479-9aa2-9b03357008bb	1491
1502	uri://ed-fi.org/CountryDescriptor	PR	Puerto Rico	Puerto Rico	\N	\N	\N	\N	2023-11-08 13:57:35.29476	2023-11-08 13:57:35.294734	154f8af7-1cba-4a84-bc1a-9bfb40359606	1502
1506	uri://ed-fi.org/CountryDescriptor	PW	Palau	Palau	\N	\N	\N	\N	2023-11-08 13:57:35.304018	2023-11-08 13:57:35.303981	4e7e3698-046f-44eb-b081-9ccf0017c83e	1506
1511	uri://ed-fi.org/CountryDescriptor	RO	Romania	Romania	\N	\N	\N	\N	2023-11-08 13:57:35.313551	2023-11-08 13:57:35.313017	81dae08d-bb84-4e2c-ab24-8ec185586de9	1511
1520	uri://ed-fi.org/CountryDescriptor	SH	Saint Helena, Ascension and Tristan da Cunha	Saint Helena, Ascension and Tristan da Cunha	\N	\N	\N	\N	2023-11-08 13:57:35.337771	2023-11-08 13:57:35.337744	611d17b6-fcac-4e03-9288-68c8875f09dd	1520
1524	uri://ed-fi.org/CountryDescriptor	SJ	Svalbard and Jan Mayen	Svalbard and Jan Mayen	\N	\N	\N	\N	2023-11-08 13:57:35.346083	2023-11-08 13:57:35.346048	4af549d2-2fc2-445b-8555-e6b31ea4697a	1524
1527	uri://ed-fi.org/CountryDescriptor	SN	Senegal	Senegal	\N	\N	\N	\N	2023-11-08 13:57:35.352212	2023-11-08 13:57:35.352035	904b65f1-9443-4593-81cb-93feae510054	1527
1531	uri://ed-fi.org/CountryDescriptor	ST	Sao Tome and Principe	Sao Tome and Principe	\N	\N	\N	\N	2023-11-08 13:57:35.361902	2023-11-08 13:57:35.361885	40c6009c-7d74-4e9a-977e-e27b860444c0	1531
1535	uri://ed-fi.org/CountryDescriptor	TD	Chad	Chad	\N	\N	\N	\N	2023-11-08 13:57:35.371454	2023-11-08 13:57:35.371337	0cbe35d3-18ac-43ea-b1eb-40c18d467aad	1535
1538	uri://ed-fi.org/CountryDescriptor	TF	French Southern Territories	French Southern Territories	\N	\N	\N	\N	2023-11-08 13:57:35.378346	2023-11-08 13:57:35.37832	433c5fd9-7c72-415f-b5a0-932e06c92e87	1538
1545	uri://ed-fi.org/CountryDescriptor	TL	Timor-Leste	Timor-Leste	\N	\N	\N	\N	2023-11-08 13:57:35.392887	2023-11-08 13:57:35.392805	1ab4a93a-fd76-4d7e-906a-d116b7b1e7f0	1545
1548	uri://ed-fi.org/CountryDescriptor	TT	Trinidad and Tobago	Trinidad and Tobago	\N	\N	\N	\N	2023-11-08 13:57:35.4014	2023-11-08 13:57:35.401385	a8bf49a6-e931-466b-b76a-3f21e0785dbe	1548
1553	uri://ed-fi.org/CountryDescriptor	UG	Uganda	Uganda	\N	\N	\N	\N	2023-11-08 13:57:35.409614	2023-11-08 13:57:35.409588	f0cd4223-b7cd-4416-96d4-8910358106ed	1553
1555	uri://ed-fi.org/CountryDescriptor	UY	Uruguay	Uruguay	\N	\N	\N	\N	2023-11-08 13:57:35.416676	2023-11-08 13:57:35.416613	75852ee6-cd99-4a96-8992-85d77e7618ea	1555
1557	uri://ed-fi.org/CountryDescriptor	VA	Holy See	Holy See	\N	\N	\N	\N	2023-11-08 13:57:35.422051	2023-11-08 13:57:35.422022	1f1c8a45-6b9e-4b8b-a11f-c2b6b65c7294	1557
1375	uri://ed-fi.org/CountryDescriptor	CX	Christmas Island	Christmas Island	\N	\N	\N	\N	2023-11-08 13:57:35.042929	2023-11-08 13:57:35.042903	a4c95d60-2d95-4375-ab7a-441e4fd04389	1375
1378	uri://ed-fi.org/CountryDescriptor	CY	Cyprus	Cyprus	\N	\N	\N	\N	2023-11-08 13:57:35.046965	2023-11-08 13:57:35.046856	5e77c897-259a-495a-9dfd-cab5598ca64b	1378
1382	uri://ed-fi.org/CountryDescriptor	DM	Dominica	Dominica	\N	\N	\N	\N	2023-11-08 13:57:35.055292	2023-11-08 13:57:35.055249	9b2806f9-33f4-4534-827f-dd3a71ea62e3	1382
1384	uri://ed-fi.org/CountryDescriptor	DZ	Algeria	Algeria	\N	\N	\N	\N	2023-11-08 13:57:35.05854	2023-11-08 13:57:35.058514	bb782f19-3f06-4470-ba64-58147c161671	1384
1398	uri://ed-fi.org/CountryDescriptor	FR	France	France	\N	\N	\N	\N	2023-11-08 13:57:35.086967	2023-11-08 13:57:35.08693	36c582ea-fe27-4484-8af2-368a6e6a924d	1398
1402	uri://ed-fi.org/CountryDescriptor	GD	Grenada	Grenada	\N	\N	\N	\N	2023-11-08 13:57:35.095288	2023-11-08 13:57:35.095253	656d6e3a-dcfe-4564-aa4d-fea96b4ce438	1402
1405	uri://ed-fi.org/CountryDescriptor	GI	Gibraltar	Gibraltar	\N	\N	\N	\N	2023-11-08 13:57:35.103423	2023-11-08 13:57:35.103392	df07ceca-1050-4e58-995b-0d3ecadb5402	1405
1411	uri://ed-fi.org/CountryDescriptor	GS	South Georgia and the South Sandwich Islands	South Georgia and the South Sandwich Islands	\N	\N	\N	\N	2023-11-08 13:57:35.114669	2023-11-08 13:57:35.114618	7831670b-c878-449a-898d-2c7b7b32069d	1411
1413	uri://ed-fi.org/CountryDescriptor	GT	Guatemala	Guatemala	\N	\N	\N	\N	2023-11-08 13:57:35.117761	2023-11-08 13:57:35.117732	bbaf68f1-02c6-4092-b7d1-e4f01bffcbfc	1413
1423	uri://ed-fi.org/CountryDescriptor	ID	Indonesia	Indonesia	\N	\N	\N	\N	2023-11-08 13:57:35.140315	2023-11-08 13:57:35.140286	3aa10cbc-00bb-4dc6-8516-ffcb48aa4a43	1423
1427	uri://ed-fi.org/CountryDescriptor	IO	British Indian Ocean Territory	British Indian Ocean Territory	\N	\N	\N	\N	2023-11-08 13:57:35.147898	2023-11-08 13:57:35.147824	6d6d522e-4705-4328-9da0-fdcd65e0ef21	1427
1430	uri://ed-fi.org/CountryDescriptor	IR	Iran, Islamic Republic of	Iran, Islamic Republic of	\N	\N	\N	\N	2023-11-08 13:57:35.153862	2023-11-08 13:57:35.153784	ec8da285-c167-416d-93db-5bbe3319b8b3	1430
1438	uri://ed-fi.org/CountryDescriptor	KG	Kyrgyzstan	Kyrgyzstan	\N	\N	\N	\N	2023-11-08 13:57:35.169621	2023-11-08 13:57:35.169577	050b44ec-7403-4821-ab05-363ff814fc50	1438
1444	uri://ed-fi.org/CountryDescriptor	KR	Korea, Republic of	Korea, Republic of	\N	\N	\N	\N	2023-11-08 13:57:35.180881	2023-11-08 13:57:35.18086	38d18e5f-4f58-42c7-8727-9ca581997e2a	1444
1449	uri://ed-fi.org/CountryDescriptor	LB	Lebanon	Lebanon	\N	\N	\N	\N	2023-11-08 13:57:35.188657	2023-11-08 13:57:35.188642	f1d700b3-ca39-45b6-a1e1-2f817ee30dbd	1449
1450	uri://ed-fi.org/CountryDescriptor	LC	Saint Lucia	Saint Lucia	\N	\N	\N	\N	2023-11-08 13:57:35.19261	2023-11-08 13:57:35.192584	4a23e0da-760e-4b53-be51-36ffd09ab78d	1450
1455	uri://ed-fi.org/CountryDescriptor	LT	Lithuania	Lithuania	\N	\N	\N	\N	2023-11-08 13:57:35.202392	2023-11-08 13:57:35.202359	f54cc750-cd21-41f7-9102-19a14c14dc62	1455
1457	uri://ed-fi.org/CountryDescriptor	LY	Libya	Libya	\N	\N	\N	\N	2023-11-08 13:57:35.207137	2023-11-08 13:57:35.207124	5bed0580-1eea-479e-abec-45561b1335b5	1457
1463	uri://ed-fi.org/CountryDescriptor	MF	Saint Martin (French part)	Saint Martin (French part)	\N	\N	\N	\N	2023-11-08 13:57:35.217899	2023-11-08 13:57:35.217874	38b0be9e-5b0f-4806-8c60-18ee85275f77	1463
1470	uri://ed-fi.org/CountryDescriptor	MO	Macao	Macao	\N	\N	\N	\N	2023-11-08 13:57:35.232563	2023-11-08 13:57:35.232536	a797754e-2ae9-4786-bc51-e55f0cc84dcb	1470
1473	uri://ed-fi.org/CountryDescriptor	MQ	Martinique	Martinique	\N	\N	\N	\N	2023-11-08 13:57:35.235644	2023-11-08 13:57:35.235543	908127f3-d270-40c1-8660-a6a46ed3ccf2	1473
1475	uri://ed-fi.org/CountryDescriptor	MS	Montserrat	Montserrat	\N	\N	\N	\N	2023-11-08 13:57:35.242003	2023-11-08 13:57:35.241975	6dd04744-9e11-476f-9788-0c3f76b4c49e	1475
1478	uri://ed-fi.org/CountryDescriptor	MW	Malawi	Malawi	\N	\N	\N	\N	2023-11-08 13:57:35.245239	2023-11-08 13:57:35.245213	2d73fd85-389a-4f12-be82-14ec7e41963c	1478
1482	uri://ed-fi.org/CountryDescriptor	NA	Namibia	Namibia	\N	\N	\N	\N	2023-11-08 13:57:35.252859	2023-11-08 13:57:35.252819	ba65e42d-8d8a-41ce-a5e9-3fe0546b0985	1482
1484	uri://ed-fi.org/CountryDescriptor	NG	Nigeria	Nigeria	\N	\N	\N	\N	2023-11-08 13:57:35.258899	2023-11-08 13:57:35.258369	dfbcd351-ac8f-4d7c-ade3-0c7d4624ca52	1484
1488	uri://ed-fi.org/CountryDescriptor	NO	Norway	Norway	\N	\N	\N	\N	2023-11-08 13:57:35.266678	2023-11-08 13:57:35.266651	129ac570-35ff-46da-8027-c851341329ce	1488
1492	uri://ed-fi.org/CountryDescriptor	NU	Niue	Niue	\N	\N	\N	\N	2023-11-08 13:57:35.272975	2023-11-08 13:57:35.272923	2b59452e-ff45-43be-9ad4-4c946f9d7ca6	1492
1494	uri://ed-fi.org/CountryDescriptor	OM	Oman	Oman	\N	\N	\N	\N	2023-11-08 13:57:35.277179	2023-11-08 13:57:35.277109	abad0ff0-a318-40f5-9b59-3a901aefc966	1494
1497	uri://ed-fi.org/CountryDescriptor	PA	Panama	Panama	\N	\N	\N	\N	2023-11-08 13:57:35.284144	2023-11-08 13:57:35.284118	c432b471-305e-421f-bdd4-29142f805416	1497
1500	uri://ed-fi.org/CountryDescriptor	PK	Pakistan	Pakistan	\N	\N	\N	\N	2023-11-08 13:57:35.288539	2023-11-08 13:57:35.288513	a7a8facf-790d-4163-96d8-427563ead6df	1500
1504	uri://ed-fi.org/CountryDescriptor	PM	Saint Pierre and Miquelon	Saint Pierre and Miquelon	\N	\N	\N	\N	2023-11-08 13:57:35.297539	2023-11-08 13:57:35.297265	0cd1a422-c3f4-4af3-a754-d0b8faedf11d	1504
1508	uri://ed-fi.org/CountryDescriptor	PY	Paraguay	Paraguay	\N	\N	\N	\N	2023-11-08 13:57:35.30612	2023-11-08 13:57:35.305876	e148ab98-3f59-4a0f-a2f4-0fa1fe10f734	1508
1510	uri://ed-fi.org/CountryDescriptor	QA	Qatar	Qatar	\N	\N	\N	\N	2023-11-08 13:57:35.312001	2023-11-08 13:57:35.311975	02a00cd3-09c8-41de-b6e3-f4389d58fe70	1510
1513	uri://ed-fi.org/CountryDescriptor	RU	Russian Federation	Russian Federation	\N	\N	\N	\N	2023-11-08 13:57:35.319976	2023-11-08 13:57:35.319949	2ba3d521-db95-411f-a8a0-f4a25bafaabb	1513
1515	uri://ed-fi.org/CountryDescriptor	SB	Solomon Islands	Solomon Islands	\N	\N	\N	\N	2023-11-08 13:57:35.323821	2023-11-08 13:57:35.323773	6378d5a8-9bd2-4986-9cd9-cbe8f77a6610	1515
1519	uri://ed-fi.org/CountryDescriptor	SE	Sweden	Sweden	\N	\N	\N	\N	2023-11-08 13:57:35.337129	2023-11-08 13:57:35.337102	2f0b82bb-80d3-4be1-bad5-6871d7122416	1519
1526	uri://ed-fi.org/CountryDescriptor	SM	San Marino	San Marino	\N	\N	\N	\N	2023-11-08 13:57:35.350132	2023-11-08 13:57:35.349929	36eb9af3-27f6-4cc1-bf96-6b4bd0b64214	1526
1530	uri://ed-fi.org/CountryDescriptor	SV	El Salvador	El Salvador	\N	\N	\N	\N	2023-11-08 13:57:35.361099	2023-11-08 13:57:35.36084	65c87ab4-1507-47d8-901e-73e3a6881984	1530
1533	uri://ed-fi.org/CountryDescriptor	SX	Sint Maarten (Dutch part)	Sint Maarten (Dutch part)	\N	\N	\N	\N	2023-11-08 13:57:35.364522	2023-11-08 13:57:35.364494	e206b81f-4332-4aee-a4a3-e8676c28465e	1533
1534	uri://ed-fi.org/CountryDescriptor	SZ	Swaziland	Swaziland	\N	\N	\N	\N	2023-11-08 13:57:35.369063	2023-11-08 13:57:35.369027	8790b689-027d-49a5-b1a7-925426b6d46b	1534
1536	uri://ed-fi.org/CountryDescriptor	SY	Syrian Arab Republic	Syrian Arab Republic	\N	\N	\N	\N	2023-11-08 13:57:35.372723	2023-11-08 13:57:35.37265	289868d7-84bf-4270-8be0-ce317e084160	1536
1541	uri://ed-fi.org/CountryDescriptor	TJ	Tajikistan	Tajikistan	\N	\N	\N	\N	2023-11-08 13:57:35.383159	2023-11-08 13:57:35.383143	f756c2ed-5287-4533-8654-955ebe7ff1ec	1541
1543	uri://ed-fi.org/CountryDescriptor	TM	Turkmenistan	Turkmenistan	\N	\N	\N	\N	2023-11-08 13:57:35.388047	2023-11-08 13:57:35.38802	72a826f1-713e-4086-821f-b94950f09eb1	1543
1547	uri://ed-fi.org/CountryDescriptor	TO	Tonga	Tonga	\N	\N	\N	\N	2023-11-08 13:57:35.395733	2023-11-08 13:57:35.395719	29f7458b-e4be-464c-8a06-286175b43d51	1547
1408	uri://ed-fi.org/CountryDescriptor	GN	Guinea	Guinea	\N	\N	\N	\N	2023-11-08 13:57:35.107378	2023-11-08 13:57:35.107351	2a4c738b-2435-4107-8034-1b9490246527	1408
1417	uri://ed-fi.org/CountryDescriptor	HK	Hong Kong	Hong Kong	\N	\N	\N	\N	2023-11-08 13:57:35.127313	2023-11-08 13:57:35.12725	7ba46501-6c44-4f40-8cb1-6c511e093473	1417
1420	uri://ed-fi.org/CountryDescriptor	HR	Croatia	Croatia	\N	\N	\N	\N	2023-11-08 13:57:35.133937	2023-11-08 13:57:35.133773	0a6d5453-4ebf-4fdf-870c-d2469bf05597	1420
1426	uri://ed-fi.org/CountryDescriptor	IL	Israel	Israel	\N	\N	\N	\N	2023-11-08 13:57:35.145141	2023-11-08 13:57:35.145112	b90af575-4f5b-44a5-aecb-662d49145274	1426
1429	uri://ed-fi.org/CountryDescriptor	IQ	Iraq	Iraq	\N	\N	\N	\N	2023-11-08 13:57:35.149884	2023-11-08 13:57:35.149848	474741e1-2540-4638-8a4c-cc0403a298d8	1429
1431	uri://ed-fi.org/CountryDescriptor	IS	Iceland	Iceland	\N	\N	\N	\N	2023-11-08 13:57:35.154398	2023-11-08 13:57:35.154319	0f126b7b-145f-4da2-b3db-3231bd86af70	1431
1434	uri://ed-fi.org/CountryDescriptor	JO	Jordan	Jordan	\N	\N	\N	\N	2023-11-08 13:57:35.161606	2023-11-08 13:57:35.16158	3912d39d-014f-4764-86eb-2022667028c5	1434
1437	uri://ed-fi.org/CountryDescriptor	KE	Kenya	Kenya	\N	\N	\N	\N	2023-11-08 13:57:35.1675	2023-11-08 13:57:35.167466	c1430954-b3e9-4171-9b78-658aeac445ce	1437
1442	uri://ed-fi.org/CountryDescriptor	KN	Saint Kitts and Nevis	Saint Kitts and Nevis	\N	\N	\N	\N	2023-11-08 13:57:35.177458	2023-11-08 13:57:35.177431	c61ddf4c-e2d4-4820-a0c2-96be5daffdc4	1442
1447	uri://ed-fi.org/CountryDescriptor	KY	Cayman Islands	Cayman Islands	\N	\N	\N	\N	2023-11-08 13:57:35.187502	2023-11-08 13:57:35.187465	fb4a693e-3a96-4b2e-90d3-a45a7bf19784	1447
1453	uri://ed-fi.org/CountryDescriptor	LR	Liberia	Liberia	\N	\N	\N	\N	2023-11-08 13:57:35.198507	2023-11-08 13:57:35.198495	7608c606-7487-4214-a7b3-1ddd791730a3	1453
1456	uri://ed-fi.org/CountryDescriptor	LV	Latvia	Latvia	\N	\N	\N	\N	2023-11-08 13:57:35.205985	2023-11-08 13:57:35.205958	9ea080ea-c784-46c2-983b-d7f22d3d3374	1456
1459	uri://ed-fi.org/CountryDescriptor	MA	Morocco	Morocco	\N	\N	\N	\N	2023-11-08 13:57:35.209838	2023-11-08 13:57:35.209778	af03da67-cf41-47ca-bb9b-c460682d0baa	1459
1461	uri://ed-fi.org/CountryDescriptor	MD	Moldova, Republic of	Moldova, Republic of	\N	\N	\N	\N	2023-11-08 13:57:35.214987	2023-11-08 13:57:35.214956	b8625786-96f3-4aff-bddf-ed7c392da1e7	1461
1465	uri://ed-fi.org/CountryDescriptor	MH	Marshall Islands	Marshall Islands	\N	\N	\N	\N	2023-11-08 13:57:35.222213	2023-11-08 13:57:35.222187	86119fc2-3928-4015-a08e-6b2f967128a5	1465
1467	uri://ed-fi.org/CountryDescriptor	MM	Myanmar	Myanmar	\N	\N	\N	\N	2023-11-08 13:57:35.227094	2023-11-08 13:57:35.227073	cad1ca6d-ff97-4557-93a6-f18ede2853c0	1467
1472	uri://ed-fi.org/CountryDescriptor	MP	Northern Mariana Islands	Northern Mariana Islands	\N	\N	\N	\N	2023-11-08 13:57:35.235092	2023-11-08 13:57:35.235065	e32159a0-5cbd-44d6-9f66-1fbaeb005ded	1472
1474	uri://ed-fi.org/CountryDescriptor	MT	Malta	Malta	\N	\N	\N	\N	2023-11-08 13:57:35.238668	2023-11-08 13:57:35.238631	7b68a535-4738-46cc-9410-38c587e422bb	1474
1477	uri://ed-fi.org/CountryDescriptor	MV	Maldives	Maldives	\N	\N	\N	\N	2023-11-08 13:57:35.243102	2023-11-08 13:57:35.243073	83b488c4-6133-449e-bac4-e026d8fa646b	1477
1479	uri://ed-fi.org/CountryDescriptor	MY	Malaysia	Malaysia	\N	\N	\N	\N	2023-11-08 13:57:35.250322	2023-11-08 13:57:35.250273	ea928a28-053d-477d-ab99-7b829d6b605a	1479
1483	uri://ed-fi.org/CountryDescriptor	NC	New Caledonia	New Caledonia	\N	\N	\N	\N	2023-11-08 13:57:35.257766	2023-11-08 13:57:35.2576	edf712c8-630b-4bed-a60d-4619f552947c	1483
1486	uri://ed-fi.org/CountryDescriptor	NF	Norfolk Island	Norfolk Island	\N	\N	\N	\N	2023-11-08 13:57:35.261195	2023-11-08 13:57:35.260661	93488fd1-de9d-4ea2-91cf-20eaa07585d9	1486
1493	uri://ed-fi.org/CountryDescriptor	NZ	New Zealand	New Zealand	\N	\N	\N	\N	2023-11-08 13:57:35.274335	2023-11-08 13:57:35.274233	bc6a6ce1-f2ee-48d2-88fb-56d75d33b68d	1493
1495	uri://ed-fi.org/CountryDescriptor	PE	Peru	Peru	\N	\N	\N	\N	2023-11-08 13:57:35.282511	2023-11-08 13:57:35.282484	5e66de6d-4fa9-4b1f-ac32-093ae58c0b41	1495
1498	uri://ed-fi.org/CountryDescriptor	PG	Papua New Guinea	Papua New Guinea	\N	\N	\N	\N	2023-11-08 13:57:35.285845	2023-11-08 13:57:35.284752	b8f3c967-58b4-4542-bca6-23fddc4f4a69	1498
1501	uri://ed-fi.org/CountryDescriptor	PL	Poland	Poland	\N	\N	\N	\N	2023-11-08 13:57:35.293944	2023-11-08 13:57:35.293917	886ab5af-d097-42c6-9e11-d69ef304f237	1501
1505	uri://ed-fi.org/CountryDescriptor	PS	Palestine, State of	Palestine, State of	\N	\N	\N	\N	2023-11-08 13:57:35.302774	2023-11-08 13:57:35.302516	2a8419b8-8266-4e09-898a-f08be7c5f0d8	1505
1509	uri://ed-fi.org/CountryDescriptor	RE	Réunion	Réunion	\N	\N	\N	\N	2023-11-08 13:57:35.310632	2023-11-08 13:57:35.310574	45e8adf2-2918-4fe9-afcc-8096eae2352c	1509
1514	uri://ed-fi.org/CountryDescriptor	RW	Rwanda	Rwanda	\N	\N	\N	\N	2023-11-08 13:57:35.320101	2023-11-08 13:57:35.319706	0fdc9e76-5add-4a8c-8571-29f228600fc7	1514
1516	uri://ed-fi.org/CountryDescriptor	SA	Saudi Arabia	Saudi Arabia	\N	\N	\N	\N	2023-11-08 13:57:35.325539	2023-11-08 13:57:35.325509	e5d80479-b456-4db4-ab51-7f3b510a40d0	1516
1518	uri://ed-fi.org/CountryDescriptor	SD	Sudan	Sudan	\N	\N	\N	\N	2023-11-08 13:57:35.336472	2023-11-08 13:57:35.336454	bf47c205-5cd6-4e7d-89df-e109bfc70719	1518
1525	uri://ed-fi.org/CountryDescriptor	SL	Sierra Leone	Sierra Leone	\N	\N	\N	\N	2023-11-08 13:57:35.347989	2023-11-08 13:57:35.347864	8fc0ecc6-388b-453f-97f6-3678d54ca674	1525
1528	uri://ed-fi.org/CountryDescriptor	SO	Somalia	Somalia	\N	\N	\N	\N	2023-11-08 13:57:35.35384	2023-11-08 13:57:35.353741	a9c66ad7-8809-4bc0-a186-5bf59a37b9de	1528
1529	uri://ed-fi.org/CountryDescriptor	SR	Suriname	Suriname	\N	\N	\N	\N	2023-11-08 13:57:35.358236	2023-11-08 13:57:35.357429	dd2cbe01-2573-46d7-8d29-013476f5315e	1529
1532	uri://ed-fi.org/CountryDescriptor	SS	South Sudan	South Sudan	\N	\N	\N	\N	2023-11-08 13:57:35.362665	2023-11-08 13:57:35.362548	85460705-7f86-4e2e-8307-e009c4236c89	1532
1539	uri://ed-fi.org/CountryDescriptor	TG	Togo	Togo	\N	\N	\N	\N	2023-11-08 13:57:35.379299	2023-11-08 13:57:35.379243	5e48c6ff-b400-4116-a9c4-e5384f4159b3	1539
1546	uri://ed-fi.org/CountryDescriptor	TR	Turkey	Turkey	\N	\N	\N	\N	2023-11-08 13:57:35.395519	2023-11-08 13:57:35.395491	610b4e7a-57c7-418e-8bda-d15f4d910a22	1546
1558	uri://ed-fi.org/CountryDescriptor	UZ	Uzbekistan	Uzbekistan	\N	\N	\N	\N	2023-11-08 13:57:35.422142	2023-11-08 13:57:35.42213	4314660a-258e-4212-b3dd-28746efebc59	1558
1560	uri://ed-fi.org/CountryDescriptor	VE	Venezuela, Bolivarian Republic of	Venezuela, Bolivarian Republic of	\N	\N	\N	\N	2023-11-08 13:57:35.428164	2023-11-08 13:57:35.428091	f5bcbe87-8fa4-418f-9e75-76e8384b55f2	1560
1565	uri://ed-fi.org/CountryDescriptor	WF	Wallis and Futuna	Wallis and Futuna	\N	\N	\N	\N	2023-11-08 13:57:35.438398	2023-11-08 13:57:35.438369	0a289ed3-24a4-405d-82b8-00c58cc9401c	1565
1568	uri://ed-fi.org/CountryDescriptor	YT	Mayotte	Mayotte	\N	\N	\N	\N	2023-11-08 13:57:35.446542	2023-11-08 13:57:35.446418	803333e4-3014-47c1-881f-830c2d793563	1568
1570	uri://ed-fi.org/CountryDescriptor	ZM	Zambia	Zambia	\N	\N	\N	\N	2023-11-08 13:57:35.452471	2023-11-08 13:57:35.452456	22ed4767-ea1c-427c-a39d-907161b531d2	1570
1573	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope infants/toddlers	Highscope infants/toddlers	Highscope infants/toddlers	\N	\N	\N	\N	2023-11-08 13:57:35.486322	2023-11-08 13:57:35.485046	b7437b1a-9d3d-4330-bf31-ba5a2350346f	1573
1576	uri://ed-fi.org/CurriculumUsedDescriptor	None	None	None	\N	\N	\N	\N	2023-11-08 13:57:35.494972	2023-11-08 13:57:35.494731	c01bee7d-eaf3-4ea0-a629-2afd5a2d0ef8	1576
1523	uri://ed-fi.org/CountryDescriptor	SK	Slovakia	Slovakia	\N	\N	\N	\N	2023-11-08 13:57:35.345958	2023-11-08 13:57:35.34593	4f629d34-9cad-47b4-b4dc-d447e0bde349	1523
1537	uri://ed-fi.org/CountryDescriptor	TC	Turks and Caicos Islands	Turks and Caicos Islands	\N	\N	\N	\N	2023-11-08 13:57:35.373256	2023-11-08 13:57:35.373094	b79ac0ec-4965-4ce4-b05e-24e0b60bc80c	1537
1540	uri://ed-fi.org/CountryDescriptor	TH	Thailand	Thailand	\N	\N	\N	\N	2023-11-08 13:57:35.38031	2023-11-08 13:57:35.380269	a3de1c4d-0162-4f21-9f0c-f25acda49cc3	1540
1542	uri://ed-fi.org/CountryDescriptor	TK	Tokelau	Tokelau	\N	\N	\N	\N	2023-11-08 13:57:35.386785	2023-11-08 13:57:35.386749	a9f9c63f-5ff9-48e6-a453-56b4e6f4adc9	1542
1544	uri://ed-fi.org/CountryDescriptor	TN	Tunisia	Tunisia	\N	\N	\N	\N	2023-11-08 13:57:35.390689	2023-11-08 13:57:35.390661	b519d9a8-2bb2-4fdd-b830-5038df07f8de	1544
1549	uri://ed-fi.org/CountryDescriptor	TW	Taiwan, Province of China	Taiwan, Province of China	\N	\N	\N	\N	2023-11-08 13:57:35.402511	2023-11-08 13:57:35.402464	0bb19e48-5fa9-4523-8533-aaf0d64cffa0	1549
1551	uri://ed-fi.org/CountryDescriptor	TZ	Tanzania, United Republic of	Tanzania, United Republic of	\N	\N	\N	\N	2023-11-08 13:57:35.407135	2023-11-08 13:57:35.407119	7f9f9915-9834-4b06-a893-822247227877	1551
1554	uri://ed-fi.org/CountryDescriptor	UM	United States Minor Outlying Islands	United States Minor Outlying Islands	\N	\N	\N	\N	2023-11-08 13:57:35.414375	2023-11-08 13:57:35.414342	08420cec-9bcc-4084-a181-93d8291b5996	1554
1559	uri://ed-fi.org/CountryDescriptor	VC	Saint Vincent and the Grenadines	Saint Vincent and the Grenadines	\N	\N	\N	\N	2023-11-08 13:57:35.425582	2023-11-08 13:57:35.425555	e4ece9ff-c058-4060-add4-e895b7e2a951	1559
1563	uri://ed-fi.org/CountryDescriptor	VN	Viet Nam	Viet Nam	\N	\N	\N	\N	2023-11-08 13:57:35.436482	2023-11-08 13:57:35.43634	2f800ff4-325c-40e0-ad5e-ec6502e0d3ec	1563
1566	uri://ed-fi.org/CountryDescriptor	YE	Yemen	Yemen	\N	\N	\N	\N	2023-11-08 13:57:35.446309	2023-11-08 13:57:35.446281	7141b89d-8e10-4253-a4c6-5b610913b6db	1566
1574	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum preschool	Creative curriculum preschool	Creative curriculum preschool	\N	\N	\N	\N	2023-11-08 13:57:35.48611	2023-11-08 13:57:35.485028	63b98adf-a32f-46cb-86db-b397bef951a0	1574
1579	uri://ed-fi.org/CurriculumUsedDescriptor	Locally designed curriculum	Locally designed curriculum	Locally designed curriculum	\N	\N	\N	\N	2023-11-08 13:57:35.496511	2023-11-08 13:57:35.496351	7b759b6f-8a4b-4844-b924-6ac61bb902c4	1579
1583	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	\N	2023-11-08 13:57:35.533101	2023-11-08 13:57:35.531934	ca4fc00f-e3d1-4073-afa8-114917b82ac9	1583
1591	uri://ed-fi.org/ProgramTypeDescriptor	Alternative Education	Alternative Education	Alternative Education	\N	\N	\N	\N	2023-11-08 13:57:35.572559	2023-11-08 13:57:35.571425	c7e40b1b-cfbe-44cd-a988-cccd259146d6	1591
1593	uri://ed-fi.org/ProgramTypeDescriptor	College Preparatory	College Preparatory	College Preparatory	\N	\N	\N	\N	2023-11-08 13:57:35.581633	2023-11-08 13:57:35.581584	3242023d-5c23-47d6-81ff-965a9a60cea4	1593
1597	uri://ed-fi.org/ProgramTypeDescriptor	Community/Junior College Education Program	Community/Junior College Education Program	Community/Junior College Education Program	\N	\N	\N	\N	2023-11-08 13:57:35.589571	2023-11-08 13:57:35.588967	a3411ba6-f349-47f4-95e4-7fbead8bc1e6	1597
1602	uri://ed-fi.org/ProgramTypeDescriptor	Early Intervention Services Part C	Early Intervention Services Part C	Early Intervention Services Part C	\N	\N	\N	\N	2023-11-08 13:57:35.59774	2023-11-08 13:57:35.597703	9d775f3b-2ce0-4e18-b77a-332b68b635aa	1602
1604	uri://ed-fi.org/ProgramTypeDescriptor	Even Start	Even Start	Even Start	\N	\N	\N	\N	2023-11-08 13:57:35.604569	2023-11-08 13:57:35.604541	45b64289-f0eb-46ea-96cb-7c4f5e257943	1604
1609	uri://ed-fi.org/ProgramTypeDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	\N	2023-11-08 13:57:35.612675	2023-11-08 13:57:35.612555	8a4112ef-48de-4d7c-a20d-fc07369b70cd	1608
1614	uri://ed-fi.org/ProgramTypeDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	\N	2023-11-08 13:57:35.621329	2023-11-08 13:57:35.621306	f51cf171-b374-464c-b56e-cb7765e67c9e	1614
1617	uri://ed-fi.org/ProgramTypeDescriptor	Independent Study	Independent Study	Independent Study	\N	\N	\N	\N	2023-11-08 13:57:35.628735	2023-11-08 13:57:35.628709	ed4c0022-2060-4ff9-987b-fb3c231e93ce	1617
1619	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Extended Day	Kindergarten - Extended Day	Kindergarten - Extended Day	\N	\N	\N	\N	2023-11-08 13:57:35.632778	2023-11-08 13:57:35.632759	4c795be1-e672-463a-8934-e06ee402ee76	1619
1627	uri://ed-fi.org/ProgramTypeDescriptor	Migrant Education	Migrant Education	Migrant Education	\N	\N	\N	\N	2023-11-08 13:57:35.647313	2023-11-08 13:57:35.647197	fe8ff119-ddd4-4ae1-a489-e2e70abee670	1627
1630	uri://ed-fi.org/ProgramTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:35.655269	2023-11-08 13:57:35.655228	375d1dd3-34c0-4cd3-8830-51e8ff5880b0	1630
1634	uri://ed-fi.org/ProgramTypeDescriptor	Remedial Education	Remedial Education	Remedial Education	\N	\N	\N	\N	2023-11-08 13:57:35.663301	2023-11-08 13:57:35.663275	31f62b07-a4eb-44dc-9142-56e674664b44	1634
1636	uri://ed-fi.org/ProgramTypeDescriptor	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	\N	\N	\N	\N	2023-11-08 13:57:35.668231	2023-11-08 13:57:35.668193	6c48e19d-5306-4518-814e-2a67ffc4ab17	1636
1638	uri://ed-fi.org/ProgramTypeDescriptor	Section 504 Placement	Section 504 Placement	Section 504 Placement	\N	\N	\N	\N	2023-11-08 13:57:35.671015	2023-11-08 13:57:35.670988	c00ae5f7-3c67-4f2e-8eb1-5f5ea07c2876	1638
1640	uri://ed-fi.org/ProgramTypeDescriptor	Student School Food Service	Student School Food Service	Student School Food Service	\N	\N	\N	\N	2023-11-08 13:57:35.674843	2023-11-08 13:57:35.674814	fe056d46-9cef-4be9-91cf-1e4b581adfe5	1640
1642	uri://ed-fi.org/ProgramTypeDescriptor	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	\N	\N	\N	\N	2023-11-08 13:57:35.682732	2023-11-08 13:57:35.682695	3bd56ac6-e95e-406e-b609-86df3f15b561	1642
1648	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 2	Title I Part D Subpart 2	Title I Part D Subpart 2	\N	\N	\N	\N	2023-11-08 13:57:35.69198	2023-11-08 13:57:35.691951	2bcfefb6-9389-4644-99b4-5e84e2b8ef19	1648
1652	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	University	University	University	\N	\N	\N	\N	2023-11-08 13:57:35.723681	2023-11-08 13:57:35.722443	b16ece4a-a3e0-4703-a256-32ba583bab26	1652
1654	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Unknown	Unknown	It is not known whether the primary learning device is shared with another individual.	\N	\N	\N	\N	2023-11-08 13:57:35.763411	2023-11-08 13:57:35.761952	67685998-89a2-477a-bb40-3fd447547e77	1654
1659	uri://ed-fi.org/ResponseIndicatorDescriptor	Ineffective response	Ineffective response	Ineffective response	\N	\N	\N	\N	2023-11-08 13:57:35.80426	2023-11-08 13:57:35.803236	653d2edd-9ca9-4838-8a4d-aebb40e9bcea	1659
1550	uri://ed-fi.org/CountryDescriptor	TV	Tuvalu	Tuvalu	\N	\N	\N	\N	2023-11-08 13:57:35.402504	2023-11-08 13:57:35.40231	4de7a24e-1543-4459-b498-0f48f7ab233d	1550
1552	uri://ed-fi.org/CountryDescriptor	UA	Ukraine	Ukraine	\N	\N	\N	\N	2023-11-08 13:57:35.409797	2023-11-08 13:57:35.409768	a3e8bcce-c4e9-455a-8b01-4c7e0bf652ed	1552
1556	uri://ed-fi.org/CountryDescriptor	US	United States of America	United States of America	\N	\N	\N	\N	2023-11-08 13:57:35.418408	2023-11-08 13:57:35.417319	f423273b-36aa-4639-80df-c23ac7fdff48	1556
1564	uri://ed-fi.org/CountryDescriptor	VU	Vanuatu	Vanuatu	\N	\N	\N	\N	2023-11-08 13:57:35.437544	2023-11-08 13:57:35.437529	fe6c156d-75e5-4f7c-ad33-0f2a4486ae80	1564
1569	uri://ed-fi.org/CountryDescriptor	ZA	South Africa	South Africa	\N	\N	\N	\N	2023-11-08 13:57:35.449789	2023-11-08 13:57:35.449748	bf2797e6-422a-4127-8d0e-e7c8620f9b70	1569
1571	uri://ed-fi.org/CountryDescriptor	ZW	Zimbabwe	Zimbabwe	\N	\N	\N	\N	2023-11-08 13:57:35.454778	2023-11-08 13:57:35.454701	039b7b3d-32e0-4a65-84ae-8dc8ac927296	1571
1575	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	\N	\N	\N	\N	2023-11-08 13:57:35.486319	2023-11-08 13:57:35.485064	800dbbb4-880f-4311-a6da-3bfc248f047b	1575
1577	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope preschoolers	Highscope preschoolers	Highscope preschoolers	\N	\N	\N	\N	2023-11-08 13:57:35.495262	2023-11-08 13:57:35.495234	ce83d408-c392-431c-806b-a7c472b8434e	1577
1584	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	\N	2023-11-08 13:57:35.533023	2023-11-08 13:57:35.531919	e6e8251b-8bb8-4218-9539-71693deda142	1584
1586	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:35.541916	2023-11-08 13:57:35.541855	f17a53cb-92fe-444c-8cae-d0be53f78708	1586
1590	uri://ed-fi.org/ProgramTypeDescriptor	Athletics	Athletics	Athletics	\N	\N	\N	\N	2023-11-08 13:57:35.572628	2023-11-08 13:57:35.57142	76468945-7ad6-4272-81cb-33918fa9e561	1590
1594	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual Summer	Bilingual Summer	Bilingual Summer	\N	\N	\N	\N	2023-11-08 13:57:35.581862	2023-11-08 13:57:35.581803	95f40327-d02f-472c-affb-358a4cc6e03d	1594
1596	uri://ed-fi.org/ProgramTypeDescriptor	Community Service Program	Community Service Program	Community Service Program	\N	\N	\N	\N	2023-11-08 13:57:35.589046	2023-11-08 13:57:35.58901	339e8c30-74b3-4acc-a94c-9ce1f865ecc5	1596
1601	uri://ed-fi.org/ProgramTypeDescriptor	Early Head Start	Early Head Start	Early Head Start	\N	\N	\N	\N	2023-11-08 13:57:35.597281	2023-11-08 13:57:35.597229	a5ec2586-c34a-4c0f-8955-15fe96d6e6f7	1601
1605	uri://ed-fi.org/ProgramTypeDescriptor	Extended Day/Child Care Services	Extended Day/Child Care Services	Extended Day/Child Care Services	\N	\N	\N	\N	2023-11-08 13:57:35.605233	2023-11-08 13:57:35.605207	5a228105-b33b-468d-bbd8-81cfdd0c4336	1605
1607	uri://ed-fi.org/ProgramTypeDescriptor	Fee For Service	Fee For Service	Fee For Service	\N	\N	\N	\N	2023-11-08 13:57:35.609855	2023-11-08 13:57:35.609797	01c38fe7-a19d-43e5-bfd5-7bd087c0bb62	1607
1612	uri://ed-fi.org/ProgramTypeDescriptor	Home Visiting	Home Visiting	Home Visiting	\N	\N	\N	\N	2023-11-08 13:57:35.619761	2023-11-08 13:57:35.619712	9546e959-2c57-4531-b2db-60eee84049c5	1612
1615	uri://ed-fi.org/ProgramTypeDescriptor	Immigrant Education	Immigrant Education	Immigrant Education	\N	\N	\N	\N	2023-11-08 13:57:35.6249	2023-11-08 13:57:35.624871	d686b066-4cb7-4777-857f-fd4990e127b4	1615
1623	uri://ed-fi.org/ProgramTypeDescriptor	Library/Media Services Program	Library/Media Services Program	Library/Media Services Program	\N	\N	\N	\N	2023-11-08 13:57:35.640689	2023-11-08 13:57:35.640549	d2f9204c-7d48-4a4b-be85-7662f08600da	1623
1626	uri://ed-fi.org/ProgramTypeDescriptor	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	\N	\N	\N	\N	2023-11-08 13:57:35.647439	2023-11-08 13:57:35.647402	e44799be-9feb-4d20-9954-7e57e6537ab3	1626
1629	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Full Day	Prekindergarten - Full Day	Prekindergarten - Full Day	\N	\N	\N	\N	2023-11-08 13:57:35.653418	2023-11-08 13:57:35.653354	057687ea-09ee-4098-b646-23b8b5f4083b	1629
1635	uri://ed-fi.org/ProgramTypeDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	\N	2023-11-08 13:57:35.663755	2023-11-08 13:57:35.663737	aa5b7352-910f-4916-8cc9-b20f86101532	1635
1637	uri://ed-fi.org/ProgramTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-11-08 13:57:35.670354	2023-11-08 13:57:35.670315	ecb508a9-0a77-42ad-97f3-a19756e330ac	1637
1643	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part A	Title I Part A	Title I Part A	\N	\N	\N	\N	2023-11-08 13:57:35.683316	2023-11-08 13:57:35.683182	f7219d53-5d4d-4d79-b096-a0ee118ef7c3	1643
1647	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 1	Title I Part D Subpart 1	Title I Part D Subpart 1	\N	\N	\N	\N	2023-11-08 13:57:35.690858	2023-11-08 13:57:35.690489	bbf188d5-cfbe-4141-9df4-7a9fa4eb3c84	1647
1650	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	State board of education	State board of education	State board of education	\N	\N	\N	\N	2023-11-08 13:57:35.723672	2023-11-08 13:57:35.722473	136e4b2f-dcb0-4dac-bd51-6048eaf99429	1650
1653	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Not Shared	Not Shared	The primary learning device is not shared with another individual.	\N	\N	\N	\N	2023-11-08 13:57:35.763248	2023-11-08 13:57:35.76197	75a5cd76-1a02-4c1d-80ea-5fd60c61d1b8	1653
1658	uri://ed-fi.org/ProgressDescriptor	No Progress	No Progress	No Progress	\N	\N	\N	\N	2023-11-08 13:57:35.772243	2023-11-08 13:57:35.772229	69c4dcc3-9f73-40b0-9b3f-ed6683b3e32e	1658
1662	uri://ed-fi.org/ResponseIndicatorDescriptor	Partial response	Partial response	Partial response	\N	\N	\N	\N	2023-11-08 13:57:35.804409	2023-11-08 13:57:35.80323	991864a3-908a-4c4c-8b53-b3df100fd1c8	1662
1664	uri://ed-fi.org/PopulationServedDescriptor	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	\N	\N	\N	\N	2023-11-08 13:57:35.842206	2023-11-08 13:57:35.84121	ff6e75b3-6b9f-410d-9f74-85ad576d9a82	1664
1667	uri://ed-fi.org/PopulationServedDescriptor	Honors Students	Honors Students	Honors Students	\N	\N	\N	\N	2023-11-08 13:57:35.850541	2023-11-08 13:57:35.850528	849546ee-0b14-4d07-bd51-e7034fda414f	1667
1671	uri://ed-fi.org/PopulationServedDescriptor	Special Education Students	Special Education Students	Special Education Students	\N	\N	\N	\N	2023-11-08 13:57:35.857172	2023-11-08 13:57:35.857144	d61f3dc7-5320-44b5-8ef0-80b359ecb5b6	1671
1675	uri://ed-fi.org/ProgramAssignmentDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-11-08 13:57:35.891904	2023-11-08 13:57:35.890801	463e351a-4ffc-4185-bf2a-ff22dfc73d6e	1675
1678	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Non-Academic	Title I-Non-Academic	Title I-Non-Academic	\N	\N	\N	\N	2023-11-08 13:57:35.900053	2023-11-08 13:57:35.900037	c2c2cd95-3b13-4b06-8c61-8c0a7b73553f	1678
1561	uri://ed-fi.org/CountryDescriptor	VG	Virgin Islands, British	Virgin Islands, British	\N	\N	\N	\N	2023-11-08 13:57:35.42983	2023-11-08 13:57:35.429785	cdd57927-3a58-420e-93e9-92229374f1fd	1561
1562	uri://ed-fi.org/CountryDescriptor	VI	Virgin Islands, U.S.	Virgin Islands, U.S.	\N	\N	\N	\N	2023-11-08 13:57:35.435649	2023-11-08 13:57:35.435361	70968098-9a26-468d-bdfb-8e9907dee8ba	1562
1567	uri://ed-fi.org/CountryDescriptor	WS	Samoa	Samoa	\N	\N	\N	\N	2023-11-08 13:57:35.446484	2023-11-08 13:57:35.446474	c6be51c7-5713-4bb6-b1f8-5ed673191a80	1567
1572	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum family child care	Creative curriculum family child care	Creative curriculum family child care	\N	\N	\N	\N	2023-11-08 13:57:35.486057	2023-11-08 13:57:35.485032	8ccad6ac-de80-4a60-b76b-f1057167cbd9	1572
1578	uri://ed-fi.org/CurriculumUsedDescriptor	Montessori curriculum	Montessori curriculum	Montessori curriculum	\N	\N	\N	\N	2023-11-08 13:57:35.496044	2023-11-08 13:57:35.496017	0827fea6-df5a-4d59-85b9-629e6bc736f7	1578
1580	uri://ed-fi.org/CurriculumUsedDescriptor	Other curriculum	Other curriculum	Other curriculum	\N	\N	\N	\N	2023-11-08 13:57:35.501157	2023-11-08 13:57:35.501053	2d36136f-0425-41e6-9dc6-97aa105b5b72	1580
1582	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	\N	2023-11-08 13:57:35.53296	2023-11-08 13:57:35.531901	dde0223b-488e-4c1f-8cdf-66696cb83447	1582
1587	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Health Clinic	Health Clinic	Health Clinic	\N	\N	\N	\N	2023-11-08 13:57:35.54352	2023-11-08 13:57:35.543492	31c66a27-6637-4620-ae22-aa65b5d39bd9	1587
1588	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	\N	2023-11-08 13:57:35.572411	2023-11-08 13:57:35.571395	769001f8-ee45-4821-8c67-c3760e6fdc74	1588
1592	uri://ed-fi.org/ProgramTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-11-08 13:57:35.581598	2023-11-08 13:57:35.581566	62ecd1fb-0840-4b89-8dce-231c8084d9a4	1592
1599	uri://ed-fi.org/ProgramTypeDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	\N	2023-11-08 13:57:35.592069	2023-11-08 13:57:35.592056	fca638d4-d3a6-40a1-b76c-0564ab51dacf	1599
1608	uri://ed-fi.org/ProgramTypeDescriptor	Head Start	Head Start	Head Start	\N	\N	\N	\N	2023-11-08 13:57:35.612671	2023-11-08 13:57:35.612649	cbf0b6a1-e2b9-43f9-8509-a82c392f87dc	1609
1613	uri://ed-fi.org/ProgramTypeDescriptor	Health Services Program	Health Services Program	Health Services Program	\N	\N	\N	\N	2023-11-08 13:57:35.620633	2023-11-08 13:57:35.620583	fe25c538-4d98-4c58-a365-46f20e8bca12	1613
1616	uri://ed-fi.org/ProgramTypeDescriptor	IDEA	IDEA	IDEA	\N	\N	\N	\N	2023-11-08 13:57:35.626334	2023-11-08 13:57:35.626298	f44f3e13-1f8e-4c1f-b43a-dc2a11c7fae7	1616
1621	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Half Day	Kindergarten - Half Day	Kindergarten - Half Day	\N	\N	\N	\N	2023-11-08 13:57:35.637142	2023-11-08 13:57:35.637102	2fbe87af-f5e8-496d-ba75-f4cc570c0dd0	1621
1622	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Full Day	Kindergarten - Full Day	Kindergarten - Full Day	\N	\N	\N	\N	2023-11-08 13:57:35.639772	2023-11-08 13:57:35.639745	c3a99a27-e7d2-42fb-affe-1623066193f4	1622
1625	uri://ed-fi.org/ProgramTypeDescriptor	Neglected and Delinquent Program	Neglected and Delinquent Program	Neglected and Delinquent Program	\N	\N	\N	\N	2023-11-08 13:57:35.646091	2023-11-08 13:57:35.646075	b1c33898-d5bd-4101-b381-f7e39be4446e	1625
1628	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Extended Day	Prekindergarten - Extended Day	Prekindergarten - Extended Day	\N	\N	\N	\N	2023-11-08 13:57:35.652909	2023-11-08 13:57:35.652882	7d983036-cde5-497d-a12e-68666183bbdf	1628
1633	uri://ed-fi.org/ProgramTypeDescriptor	Public Preschool	Public Preschool	Public Preschool	\N	\N	\N	\N	2023-11-08 13:57:35.660911	2023-11-08 13:57:35.660872	39b88684-d065-49e8-b582-d513d8832600	1633
1639	uri://ed-fi.org/ProgramTypeDescriptor	Service Learning	Service Learning	Service Learning	\N	\N	\N	\N	2023-11-08 13:57:35.671769	2023-11-08 13:57:35.67174	f34e6475-e14e-4024-a748-249f3dccd12e	1639
1644	uri://ed-fi.org/ProgramTypeDescriptor	Technical Preparatory	Technical Preparatory	Technical Preparatory	\N	\N	\N	\N	2023-11-08 13:57:35.684864	2023-11-08 13:57:35.684849	e9041155-59bb-4ad8-80e2-4c7b591c96c1	1644
1651	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:35.723694	2023-11-08 13:57:35.722443	a9e0effa-397b-4d2c-9392-247651f7cbff	1651
1655	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Shared	Shared	The primary learning device is shared with another individual.	\N	\N	\N	\N	2023-11-08 13:57:35.763592	2023-11-08 13:57:35.762076	873365c2-438d-4dbc-aea3-84c5e6d3a170	1655
1657	uri://ed-fi.org/ProgressDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-11-08 13:57:35.772006	2023-11-08 13:57:35.771975	6c80f83c-2bb8-40dd-8aa9-e2a344b3becb	1657
1661	uri://ed-fi.org/ResponseIndicatorDescriptor	Nonscorable response	Nonscorable response	Nonscorable response	\N	\N	\N	\N	2023-11-08 13:57:35.804713	2023-11-08 13:57:35.803257	d68ea4fb-7c6b-4c04-b540-5855653bd6d6	1661
1666	uri://ed-fi.org/PopulationServedDescriptor	Adult Basic Education Students	Adult Basic Education Students	Adult Basic Education Students	\N	\N	\N	\N	2023-11-08 13:57:35.84456	2023-11-08 13:57:35.844548	b73ddadd-f47b-4b25-9a3e-d54f5836217f	1666
1668	uri://ed-fi.org/PopulationServedDescriptor	Gifted and Talented Students	Gifted and Talented Students	Gifted and Talented Students	\N	\N	\N	\N	2023-11-08 13:57:35.851184	2023-11-08 13:57:35.851156	80ea8f83-c9de-44b8-8036-6ea4a687930b	1668
1673	uri://ed-fi.org/PopulationServedDescriptor	Regular Students	Regular Students	Regular Students	\N	\N	\N	\N	2023-11-08 13:57:35.860046	2023-11-08 13:57:35.859053	692126d4-597f-46f7-9af9-ec05eb44f594	1673
1676	uri://ed-fi.org/ProgramAssignmentDescriptor	Bilingual/English as a Second Language	Bilingual/English as a Second Language	Bilingual/English as a Second Language	\N	\N	\N	\N	2023-11-08 13:57:35.891892	2023-11-08 13:57:35.890832	babacbdd-07bd-4d95-b760-85ff022bd813	1676
1680	uri://ed-fi.org/ReporterDescriptionDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:35.93371	2023-11-08 13:57:35.932423	5b04b83d-dab3-418d-8ed1-2a121559c39d	1680
1685	uri://ed-fi.org/ReporterDescriptionDescriptor	Staff	Staff	Staff	\N	\N	\N	\N	2023-11-08 13:57:35.945309	2023-11-08 13:57:35.945271	fd1d0800-a213-4921-a22b-547af81d5d9f	1685
1686	uri://ed-fi.org/CredentialFieldDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	\N	2023-11-08 13:57:35.975404	2023-11-08 13:57:35.974381	be65be3c-0c6b-434d-a47d-86b5fbdf3bdd	1686
1690	uri://ed-fi.org/CredentialFieldDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	\N	2023-11-08 13:57:35.9847	2023-11-08 13:57:35.984671	3792ef92-12e5-4a72-a5b2-6790e6d5c609	1690
1694	uri://ed-fi.org/CredentialFieldDescriptor	Physical Education	Physical Education	Physical Education	\N	\N	\N	\N	2023-11-08 13:57:35.9919	2023-11-08 13:57:35.991879	b42be077-ad90-4e73-b49a-23e98880603d	1695
1703	uri://ed-fi.org/CostRateDescriptor	Per Student	Per Student	Per Student	\N	\N	\N	\N	2023-11-08 13:57:36.057251	2023-11-08 13:57:36.055604	9474e6cb-6509-444c-ab15-069c53746b90	1703
1581	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Food Service	Food Service	Food Service	\N	\N	\N	\N	2023-11-08 13:57:35.532873	2023-11-08 13:57:35.531928	c1352fd4-65bf-4bbf-b67a-513ee7127b9c	1581
1585	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Main	Main	Main	\N	\N	\N	\N	2023-11-08 13:57:35.541981	2023-11-08 13:57:35.541955	dccc2d62-60b2-4216-a705-55f7c706969f	1585
1589	uri://ed-fi.org/ProgramTypeDescriptor	Adult/Continuing Education	Adult/Continuing Education	Adult/Continuing Education	\N	\N	\N	\N	2023-11-08 13:57:35.572632	2023-11-08 13:57:35.571401	7b31cf98-6c30-4981-a759-f7ceb67af3f3	1589
1595	uri://ed-fi.org/ProgramTypeDescriptor	Cocurricular Programs	Cocurricular Programs	Cocurricular Programs	\N	\N	\N	\N	2023-11-08 13:57:35.582439	2023-11-08 13:57:35.582423	032da63c-1e7d-4176-96c5-30ccadc13a38	1595
1598	uri://ed-fi.org/ProgramTypeDescriptor	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	\N	\N	\N	\N	2023-11-08 13:57:35.590565	2023-11-08 13:57:35.590536	73adcc7f-5d5e-4c13-b05e-ef9903087169	1598
1600	uri://ed-fi.org/ProgramTypeDescriptor	District-Funded GED	District-Funded GED	District-Funded GED	\N	\N	\N	\N	2023-11-08 13:57:35.595677	2023-11-08 13:57:35.595614	f3479f72-7ab6-4215-85df-38cb7a28b696	1600
1603	uri://ed-fi.org/ProgramTypeDescriptor	English as a Second Language (ESL)	English as a Second Language (ESL)	English as a Second Language (ESL)	\N	\N	\N	\N	2023-11-08 13:57:35.600666	2023-11-08 13:57:35.600639	1e9e98c3-494d-41eb-9f62-dbfa4900e041	1603
1606	uri://ed-fi.org/ProgramTypeDescriptor	Expelled Education	Expelled Education	Expelled Education	\N	\N	\N	\N	2023-11-08 13:57:35.606614	2023-11-08 13:57:35.605733	20ec56d3-1b01-441b-b8e1-0cd66d1d1ee3	1606
1610	uri://ed-fi.org/ProgramTypeDescriptor	Foreign Exchange	Foreign Exchange	Foreign Exchange	\N	\N	\N	\N	2023-11-08 13:57:35.612563	2023-11-08 13:57:35.612185	9dbf3a0c-b94b-4b44-80f2-4c6b3975aeb0	1610
1611	uri://ed-fi.org/ProgramTypeDescriptor	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	\N	\N	\N	\N	2023-11-08 13:57:35.618395	2023-11-08 13:57:35.617962	eb16e36e-e105-46e1-a829-57af1f2bb1df	1611
1618	uri://ed-fi.org/ProgramTypeDescriptor	Indian Education	Indian Education	Indian Education	\N	\N	\N	\N	2023-11-08 13:57:35.631266	2023-11-08 13:57:35.631224	e6ec2a00-4a2a-4e18-b7fd-6ab830c54404	1618
1620	uri://ed-fi.org/ProgramTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-11-08 13:57:35.634938	2023-11-08 13:57:35.634911	7a4665f4-d12b-4634-a640-fc53fc059323	1620
1624	uri://ed-fi.org/ProgramTypeDescriptor	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	\N	\N	\N	\N	2023-11-08 13:57:35.645326	2023-11-08 13:57:35.64479	110ea3ab-5fee-4881-9367-fe517bb615ee	1624
1631	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Half Day	Prekindergarten - Half Day	Prekindergarten - Half Day	\N	\N	\N	\N	2023-11-08 13:57:35.655287	2023-11-08 13:57:35.655208	6343215b-74eb-4c59-9164-e49c5fd94c26	1631
1632	uri://ed-fi.org/ProgramTypeDescriptor	Preschool Special Education	Preschool Special Education	Preschool Special Education	\N	\N	\N	\N	2023-11-08 13:57:35.659225	2023-11-08 13:57:35.659158	8149a47e-f58b-4c95-878e-73d2bef560f8	1632
1641	uri://ed-fi.org/ProgramTypeDescriptor	Support	Support	Support	\N	\N	\N	\N	2023-11-08 13:57:35.678034	2023-11-08 13:57:35.67802	8498365f-1bb6-470b-9f5b-e24403795365	1641
1645	uri://ed-fi.org/ProgramTypeDescriptor	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	\N	\N	\N	\N	2023-11-08 13:57:35.684675	2023-11-08 13:57:35.684642	b19dd90c-255a-4a40-91b9-d7b4daaa2048	1645
1646	uri://ed-fi.org/ProgramTypeDescriptor	Vocational Education	Vocational Education	Vocational Education	\N	\N	\N	\N	2023-11-08 13:57:35.690813	2023-11-08 13:57:35.690783	45962dfd-7027-4082-8849-84b95d125094	1646
1649	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Public charter school board	Public charter school board	Public charter school board	\N	\N	\N	\N	2023-11-08 13:57:35.723472	2023-11-08 13:57:35.72246	d7c57a34-fce2-44ca-a8d1-e1c88f428200	1649
1656	uri://ed-fi.org/ProgressDescriptor	Progress	Progress	Progress	\N	\N	\N	\N	2023-11-08 13:57:35.768986	2023-11-08 13:57:35.767219	f65341ac-c814-4338-94cd-b46f6bf103d3	1656
1660	uri://ed-fi.org/ResponseIndicatorDescriptor	Effective response	Effective response	Effective response	\N	\N	\N	\N	2023-11-08 13:57:35.804404	2023-11-08 13:57:35.803252	39d742c7-3bcb-48ed-a305-811933e6996a	1660
1665	uri://ed-fi.org/PopulationServedDescriptor	Bilingual Students	Bilingual Students	Bilingual Students	\N	\N	\N	\N	2023-11-08 13:57:35.842334	2023-11-08 13:57:35.841206	18a4788f-184e-44b0-a5df-95a6e8150d7f	1665
1669	uri://ed-fi.org/PopulationServedDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	\N	2023-11-08 13:57:35.851159	2023-11-08 13:57:35.851131	9c996d83-6ea6-4295-b8c1-77feef82f85f	1669
1672	uri://ed-fi.org/PopulationServedDescriptor	Migrant Students	Migrant Students	Migrant Students	\N	\N	\N	\N	2023-11-08 13:57:35.857448	2023-11-08 13:57:35.857417	7232a5f0-db10-4df2-b6ae-383180601418	1672
1674	uri://ed-fi.org/ProgramAssignmentDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:35.891839	2023-11-08 13:57:35.890827	259db8e2-1c96-4cca-ae99-663e302a5507	1674
1679	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Academic	Title I-Academic	Title I-Academic	\N	\N	\N	\N	2023-11-08 13:57:35.901069	2023-11-08 13:57:35.901021	c0cbb0ff-4540-4b99-bff1-bd79e6117e43	1679
1683	uri://ed-fi.org/ReporterDescriptionDescriptor	Parent/guardian	Parent/guardian	Parent/guardian	\N	\N	\N	\N	2023-11-08 13:57:35.933963	2023-11-08 13:57:35.932415	8fc396f4-fcbd-43b0-8d9d-ca52e80d7976	1683
1687	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	\N	2023-11-08 13:57:35.975593	2023-11-08 13:57:35.974401	fb04032a-c583-491b-9db8-8429dd0e49cf	1687
1693	uri://ed-fi.org/CredentialFieldDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	\N	2023-11-08 13:57:35.986438	2023-11-08 13:57:35.986269	8d02f057-f754-4373-8d4d-408715478474	1693
1699	uri://ed-fi.org/CredentialFieldDescriptor	Music	Music	Music	\N	\N	\N	\N	2023-11-08 13:57:35.997102	2023-11-08 13:57:35.997073	96f77fc9-ad31-416f-b041-498f1f4b7390	1699
1701	uri://ed-fi.org/RelationDescriptor	Brother	Brother	Brother	\N	\N	\N	\N	2023-11-08 13:57:36.052293	2023-11-08 13:57:36.050879	b4d5aeab-6eae-4d5c-9423-c3fe0e8994a5	1701
1706	uri://ed-fi.org/RelationDescriptor	BrotherInLaw	BrotherInLaw	BrotherInLaw	\N	\N	\N	\N	2023-11-08 13:57:36.060259	2023-11-08 13:57:36.060203	9fcfd798-aa07-4e98-8cb6-dbe09be90bea	1706
1708	uri://ed-fi.org/RelationDescriptor	DaughterInLaw	DaughterInLaw	DaughterInLaw	\N	\N	\N	\N	2023-11-08 13:57:36.068613	2023-11-08 13:57:36.068527	992a5277-ff78-476c-ba54-7099e3c6a3cb	1708
1663	uri://ed-fi.org/PopulationServedDescriptor	Career and Technical Education Students	Career and Technical Education Students	Career and Technical Education Students	\N	\N	\N	\N	2023-11-08 13:57:35.842209	2023-11-08 13:57:35.841198	181d79f8-3db4-4398-aaa4-3b995dbaf1de	1663
1670	uri://ed-fi.org/PopulationServedDescriptor	ESL Students	ESL Students	ESL Students	\N	\N	\N	\N	2023-11-08 13:57:35.851977	2023-11-08 13:57:35.851963	867c2e79-85bf-4d26-a9ce-0927cfa2eb84	1670
1677	uri://ed-fi.org/ProgramAssignmentDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	\N	2023-11-08 13:57:35.892402	2023-11-08 13:57:35.890811	f7b9c01c-0119-4749-937c-02b6d2f72e16	1677
1682	uri://ed-fi.org/ReporterDescriptionDescriptor	Non-school personnel	Non-school personnel	Non-school personnel	\N	\N	\N	\N	2023-11-08 13:57:35.934198	2023-11-08 13:57:35.932406	9f7264ac-9b9f-41b8-83b0-3186c69ad2ec	1682
1684	uri://ed-fi.org/ReporterDescriptionDescriptor	Student	Student	Student	\N	\N	\N	\N	2023-11-08 13:57:35.942961	2023-11-08 13:57:35.942905	86620196-21b0-49e1-8e47-bc0e7b50331c	1684
1689	uri://ed-fi.org/CredentialFieldDescriptor	Agricultural Science and Technology	Agricultural Science and Technology	Agricultural Science and Technology	\N	\N	\N	\N	2023-11-08 13:57:35.978059	2023-11-08 13:57:35.974414	7c3fb38f-c0b0-4174-844f-cca7d2041289	1689
1692	uri://ed-fi.org/CredentialFieldDescriptor	Art	Art	Art	\N	\N	\N	\N	2023-11-08 13:57:35.985015	2023-11-08 13:57:35.984951	2685a9bc-ef4b-4643-8192-a1c5daf5e8fc	1692
1695	uri://ed-fi.org/CredentialFieldDescriptor	Health	Health	Health	\N	\N	\N	\N	2023-11-08 13:57:35.991769	2023-11-08 13:57:35.991744	64786bb8-d900-4f63-b986-90abce479363	1694
1697	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	\N	\N	\N	\N	2023-11-08 13:57:36.008828	2023-11-08 13:57:36.008794	0c89f338-5234-45e1-b0b9-f52434b9e6d2	1697
1700	uri://ed-fi.org/CredentialFieldDescriptor	Elementary Education	Elementary Education	Elementary Education	\N	\N	\N	\N	2023-11-08 13:57:36.013861	2023-11-08 13:57:36.013834	cdf5dd37-24c0-4be6-9396-117451e2131d	1700
1702	uri://ed-fi.org/RelationDescriptor	Aunt	Aunt	Aunt	\N	\N	\N	\N	2023-11-08 13:57:36.052455	2023-11-08 13:57:36.050879	524fefa7-d851-4eac-aca7-74c787666139	1702
1705	uri://ed-fi.org/RelationDescriptor	CourtAppointedGuardian	CourtAppointedGuardian	CourtAppointedGuardian	\N	\N	\N	\N	2023-11-08 13:57:36.059508	2023-11-08 13:57:36.059481	3bea39db-e331-43ae-b2f7-2f4389c1cf9a	1705
1710	uri://ed-fi.org/RelationDescriptor	Emergency	DEPRECATED: Emergency	DEPRECATED: Emergency	\N	\N	\N	\N	2023-11-08 13:57:36.069552	2023-11-08 13:57:36.069525	25254c98-595a-4356-9dd5-0b1117d30d32	1710
1712	uri://ed-fi.org/RelationDescriptor	Father	Father	Father	\N	\N	\N	\N	2023-11-08 13:57:36.074194	2023-11-08 13:57:36.074181	61117a48-cb7d-41a8-801e-ead834a1b2b0	1712
1715	uri://ed-fi.org/RelationDescriptor	FathersSignificantOther	FathersSignificantOther	FathersSignificantOther	\N	\N	\N	\N	2023-11-08 13:57:36.080693	2023-11-08 13:57:36.080634	a3bc8bc2-e40a-4341-8f62-b79d63020bac	1715
1719	uri://ed-fi.org/RelationDescriptor	Friend	Friend	Friend	\N	\N	\N	\N	2023-11-08 13:57:36.087742	2023-11-08 13:57:36.08771	2c058c8a-0ae5-4ef6-b907-598f9a7755ad	1719
1723	uri://ed-fi.org/RelationDescriptor	Grandparent	Grandparent	Grandparent	\N	\N	\N	\N	2023-11-08 13:57:36.095671	2023-11-08 13:57:36.095644	ffa46552-50a1-4480-9b3c-48cba004c676	1723
1726	uri://ed-fi.org/RelationDescriptor	Great uncle	Great uncle	Great uncle	\N	\N	\N	\N	2023-11-08 13:57:36.101856	2023-11-08 13:57:36.1018	7457ad82-98b5-4fb9-9a45-7c39581f5e5c	1726
1728	uri://ed-fi.org/RelationDescriptor	Guardian	DEPRECATED: Guardian	DEPRECATED: Guardian	\N	\N	\N	\N	2023-11-08 13:57:36.105443	2023-11-08 13:57:36.105431	8cce4d29-7f25-4fc2-a560-fa7c18bdfeeb	1728
1732	uri://ed-fi.org/RelationDescriptor	MotherInLaw	MotherInLaw	MotherInLaw	\N	\N	\N	\N	2023-11-08 13:57:36.114585	2023-11-08 13:57:36.114493	a98b96cb-645f-4747-80db-60398ade9166	1732
1735	uri://ed-fi.org/RelationDescriptor	Neighbor	Neighbor	Neighbor	\N	\N	\N	\N	2023-11-08 13:57:36.120956	2023-11-08 13:57:36.120932	53071b4a-7df1-4f1e-8d63-bef53dab6dbd	1735
1740	uri://ed-fi.org/RelationDescriptor	Parent, step	Parent, step	Parent, step	\N	\N	\N	\N	2023-11-08 13:57:36.130064	2023-11-08 13:57:36.129983	41e87ce3-80e9-4a55-8660-4ca4bb79841c	1740
1741	uri://ed-fi.org/RelationDescriptor	Sibling	Sibling	Sibling	\N	\N	\N	\N	2023-11-08 13:57:36.133954	2023-11-08 13:57:36.133838	21db8df8-1535-457e-a037-ea091c137004	1741
1744	uri://ed-fi.org/RelationDescriptor	SignificantOther	SignificantOther	SignificantOther	\N	\N	\N	\N	2023-11-08 13:57:36.137372	2023-11-08 13:57:36.137239	e71d8c08-769e-43f2-a075-a89aa58302e1	1744
1751	uri://ed-fi.org/RelationDescriptor	Wife	Wife	Wife	\N	\N	\N	\N	2023-11-08 13:57:36.153011	2023-11-08 13:57:36.152946	ab99887f-2870-4972-9dba-9a2ee6fb9b10	1751
1756	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Mastered	Competency Mastered	Competency Mastered	\N	\N	\N	\N	2023-11-08 13:57:36.184583	2023-11-08 13:57:36.183436	61e72705-94ff-412b-b85f-3bd1dfc04efa	1756
1760	uri://ed-fi.org/AchievementCategoryDescriptor	License Earned	License Earned	License Earned	\N	\N	\N	\N	2023-11-08 13:57:36.194337	2023-11-08 13:57:36.194294	3d4f19c2-3d41-4d82-92c6-aca0d078c424	1760
1764	uri://ed-fi.org/AchievementCategoryDescriptor	Recognition	Recognition	Recognition	\N	\N	\N	\N	2023-11-08 13:57:36.203701	2023-11-08 13:57:36.203647	05389cd1-9e34-492c-bb27-32e7db4ca245	1764
1766	uri://ed-fi.org/TribalAffiliationDescriptor	Agdaagux	Agdaagux	Agdaagux Tribe of King Cove	\N	\N	\N	\N	2023-11-08 13:57:36.237533	2023-11-08 13:57:36.236457	9cd72f42-c497-443d-ae99-b2282016fdd0	1766
1771	uri://ed-fi.org/TribalAffiliationDescriptor	Akhiok	Akhiok	Native Village of Akhiok	\N	\N	\N	\N	2023-11-08 13:57:36.247814	2023-11-08 13:57:36.247785	8405891d-7819-4d4c-a4da-8bd4dedb0293	1771
1775	uri://ed-fi.org/TribalAffiliationDescriptor	Alakanuk	Alakanuk	Village of Alakanuk	\N	\N	\N	\N	2023-11-08 13:57:36.254589	2023-11-08 13:57:36.25455	b0cda474-2401-4a6b-9473-0ed903bf0d74	1775
1779	uri://ed-fi.org/TribalAffiliationDescriptor	Alatna	Alatna	Alatna Village	\N	\N	\N	\N	2023-11-08 13:57:36.261127	2023-11-08 13:57:36.260334	f5baa281-931b-4d17-86ed-d3967297015e	1779
1783	uri://ed-fi.org/TribalAffiliationDescriptor	Ambler	Ambler	Native Village of Ambler	\N	\N	\N	\N	2023-11-08 13:57:36.270642	2023-11-08 13:57:36.270615	05a12263-a255-432b-95d7-0c400f0ca86b	1783
1787	uri://ed-fi.org/TribalAffiliationDescriptor	Anvik	Anvik	Anvik Village	\N	\N	\N	\N	2023-11-08 13:57:36.279031	2023-11-08 13:57:36.279001	a695ee7d-2221-49e3-81d7-b876cb431049	1787
1790	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Village	Arctic Village	Arctic Village	\N	\N	\N	\N	2023-11-08 13:57:36.28305	2023-11-08 13:57:36.283005	1aa299a0-04e6-46ea-93db-534c5dabcac4	1790
1791	uri://ed-fi.org/TribalAffiliationDescriptor	Asa'carsarmiut	Asa'carsarmiut	Asa'carsarmiut Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.287722	2023-11-08 13:57:36.287693	b3252b59-119b-48ee-b087-724a0bd535cd	1791
1681	uri://ed-fi.org/ReporterDescriptionDescriptor	Law enforcement officer	Law enforcement officer	Law enforcement officer	\N	\N	\N	\N	2023-11-08 13:57:35.934132	2023-11-08 13:57:35.932427	58d51ee8-5130-4be9-bb59-da637b12a9a7	1681
1688	uri://ed-fi.org/CredentialFieldDescriptor	Computer Science	Computer Science	Computer Science	\N	\N	\N	\N	2023-11-08 13:57:35.975573	2023-11-08 13:57:35.974381	995f07d2-4497-4f66-998e-9f5d8b78e312	1688
1691	uri://ed-fi.org/CredentialFieldDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	\N	2023-11-08 13:57:35.984932	2023-11-08 13:57:35.984909	5a0532a1-0a13-4a04-88d9-727818f6ceeb	1691
1696	uri://ed-fi.org/CredentialFieldDescriptor	Psychology	Psychology	Psychology	\N	\N	\N	\N	2023-11-08 13:57:35.993741	2023-11-08 13:57:35.993717	02936620-0ae1-4a7b-9423-fa6c84b96d50	1696
1698	uri://ed-fi.org/CredentialFieldDescriptor	Master Teacher	Master Teacher	Master Teacher	\N	\N	\N	\N	2023-11-08 13:57:36.013079	2023-11-08 13:57:36.013052	fc31f4fc-542f-4ac7-87ef-62fcdc3bbf99	1698
1704	uri://ed-fi.org/CostRateDescriptor	Flat Fee	Flat Fee	Flat Fee	\N	\N	\N	\N	2023-11-08 13:57:36.057229	2023-11-08 13:57:36.055602	58fc24b1-f371-49ea-a077-2ed511272d34	1704
1707	uri://ed-fi.org/RelationDescriptor	Cousin	Cousin	Cousin	\N	\N	\N	\N	2023-11-08 13:57:36.065708	2023-11-08 13:57:36.065653	7d5e761f-c18a-4177-ab98-556663e97c97	1707
1709	uri://ed-fi.org/RelationDescriptor	Daughter	Daughter	Daughter	\N	\N	\N	\N	2023-11-08 13:57:36.069044	2023-11-08 13:57:36.069007	2c91aa87-70c8-40cc-b82c-9089e70385dc	1709
1713	uri://ed-fi.org/RelationDescriptor	Father, step	Father, step	Father, step	\N	\N	\N	\N	2023-11-08 13:57:36.079037	2023-11-08 13:57:36.079002	9bfd222d-95ee-47da-abf4-acb23b992652	1713
1717	uri://ed-fi.org/RelationDescriptor	Fiance	Fiance	Fiance	\N	\N	\N	\N	2023-11-08 13:57:36.087041	2023-11-08 13:57:36.086412	d96bb5fe-76ab-404e-8156-1e2649eb5bb1	1717
1724	uri://ed-fi.org/RelationDescriptor	Godparent	Godparent	Godparent	\N	\N	\N	\N	2023-11-08 13:57:36.096753	2023-11-08 13:57:36.096727	1434a11c-c5ae-457f-a84f-313399902195	1724
1733	uri://ed-fi.org/RelationDescriptor	MothersCivilPartner	MothersCivilPartner	MothersCivilPartner	\N	\N	\N	\N	2023-11-08 13:57:36.11697	2023-11-08 13:57:36.116956	2b27390f-fbc8-4869-a133-1e762c55c504	1733
1738	uri://ed-fi.org/RelationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:36.127636	2023-11-08 13:57:36.127583	ad6ab803-bcc0-4f4c-8f6b-26edb7cffe8d	1738
1742	uri://ed-fi.org/RelationDescriptor	Relative	Relative	Relative	\N	\N	\N	\N	2023-11-08 13:57:36.134481	2023-11-08 13:57:36.134417	208a8f8c-7a2e-45b6-8436-af8b2c83727b	1742
1746	uri://ed-fi.org/RelationDescriptor	Son	Son	Son	\N	\N	\N	\N	2023-11-08 13:57:36.141997	2023-11-08 13:57:36.141485	7182351e-8688-42bc-a50a-8b1643be0537	1746
1747	uri://ed-fi.org/RelationDescriptor	SonInLaw	SonInLaw	SonInLaw	\N	\N	\N	\N	2023-11-08 13:57:36.145758	2023-11-08 13:57:36.145718	2e864034-b470-4714-85ca-c0df09c9a1d7	1747
1750	uri://ed-fi.org/RelationDescriptor	Ward	Ward	Ward	\N	\N	\N	\N	2023-11-08 13:57:36.15194	2023-11-08 13:57:36.151879	e37060a0-fa37-4d24-b74d-7b6d5b1bda89	1750
1754	uri://ed-fi.org/AchievementCategoryDescriptor	Academic Honor	Academic Honor	Academic Honor	\N	\N	\N	\N	2023-11-08 13:57:36.184583	2023-11-08 13:57:36.18344	54b0bd13-2dad-4cf9-baf6-58ea96be1599	1754
1757	uri://ed-fi.org/AchievementCategoryDescriptor	Course Completed	Course Completed	Course Completed	\N	\N	\N	\N	2023-11-08 13:57:36.193019	2023-11-08 13:57:36.193005	b4269c40-b6f3-40be-9983-7ebbd7ee5a13	1757
1761	uri://ed-fi.org/AchievementCategoryDescriptor	License Endorsement Earned	License Endorsement Earned	License Endorsement Earned	\N	\N	\N	\N	2023-11-08 13:57:36.200952	2023-11-08 13:57:36.200913	61c12569-2def-435f-8ee0-b20d7b4d8623	1761
1767	uri://ed-fi.org/TribalAffiliationDescriptor	Agua Caliente	Agua Caliente	Agua Caliente Band of Cahuilla Indians of the Agua Caliente Indian Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:36.237551	2023-11-08 13:57:36.23649	a132c3a7-af42-4927-abfe-15b42c4826a5	1767
1769	uri://ed-fi.org/TribalAffiliationDescriptor	Akiachak	Akiachak	Akiachak Native Community	\N	\N	\N	\N	2023-11-08 13:57:36.246035	2023-11-08 13:57:36.245992	be17e9d9-496a-4361-8439-0d0b4bc5ff6f	1769
1773	uri://ed-fi.org/TribalAffiliationDescriptor	Akutan	Akutan	Native Village of Akutan	\N	\N	\N	\N	2023-11-08 13:57:36.254025	2023-11-08 13:57:36.253999	df3e40ad-693a-46ed-81a1-2fb0d94ecf24	1773
1780	uri://ed-fi.org/TribalAffiliationDescriptor	Allakaket	Allakaket	Allakaket Village	\N	\N	\N	\N	2023-11-08 13:57:36.265018	2023-11-08 13:57:36.264974	d50a380a-dd92-4f2a-b7a5-067cfca35ef9	1780
1786	uri://ed-fi.org/TribalAffiliationDescriptor	Angoon	Angoon	Angoon Community Association	\N	\N	\N	\N	2023-11-08 13:57:36.275572	2023-11-08 13:57:36.275526	6e4013af-444c-4ec1-8fa6-649ee7a646f4	1786
1793	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Sioux	Assiniboine and Sioux	Assiniboine & Sioux Tribes of the Fort Peck Indian Reservation, Montana	\N	\N	\N	\N	2023-11-08 13:57:36.290069	2023-11-08 13:57:36.29004	813b5785-c0f5-4dc6-b802-7cd52274b873	1793
1803	uri://ed-fi.org/TribalAffiliationDescriptor	Benton	Benton	Utu Utu Gwaitu Paiute Tribe of the Benton Paiute Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:36.31218	2023-11-08 13:57:36.312138	50e79b52-d2aa-4ef3-884a-82dd6a4748bb	1803
1807	uri://ed-fi.org/TribalAffiliationDescriptor	Big Pine	Big Pine	Big Pine Paiute Tribe of the Owens Valley	\N	\N	\N	\N	2023-11-08 13:57:36.320367	2023-11-08 13:57:36.320325	1da7d805-8697-4ff5-9fcc-a5429627f3e1	1807
1809	uri://ed-fi.org/TribalAffiliationDescriptor	Bill Moore's Slough	Bill Moore's Slough	Village of Bill Moore's Slough	\N	\N	\N	\N	2023-11-08 13:57:36.32448	2023-11-08 13:57:36.32446	f2faf18a-2ac2-4dbe-ad09-19d4b9331758	1809
1812	uri://ed-fi.org/TribalAffiliationDescriptor	Bishop Paiute	Bishop Paiute	Bishop Paiute Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.334906	2023-11-08 13:57:36.334893	9c088bb9-3907-47a5-a965-5608f3bc1d76	1812
1815	uri://ed-fi.org/TribalAffiliationDescriptor	Brevig Mission	Brevig Mission	Native Village of Brevig Mission	\N	\N	\N	\N	2023-11-08 13:57:36.34166	2023-11-08 13:57:36.34163	46d1ba0d-d41d-4100-be8b-acbef0d6149b	1815
1817	uri://ed-fi.org/TribalAffiliationDescriptor	Buckland	Buckland	Native Village of Buckland	\N	\N	\N	\N	2023-11-08 13:57:36.34563	2023-11-08 13:57:36.345604	8cff8fb1-8cde-4521-98e6-83a8dc981ca7	1817
1819	uri://ed-fi.org/TribalAffiliationDescriptor	Burns Paiute	Burns Paiute	Burns Paiute Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.350362	2023-11-08 13:57:36.35031	a7ddd67a-ceaa-43a4-9658-87d910f15d5a	1819
1824	uri://ed-fi.org/TribalAffiliationDescriptor	Cahto	Cahto	Cahto Tribe of the Laytonville Rancheria	\N	\N	\N	\N	2023-11-08 13:57:36.358022	2023-11-08 13:57:36.357958	d77c1922-3561-42e9-bf1b-710be6fd0ecf	1824
1829	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande Band	Capitan Grande Band	Capitan Grande Band of Diegueno Mission Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.370137	2023-11-08 13:57:36.370109	c31dd6f4-1af3-4c80-815d-95ec48d6f1da	1829
3046	uri://ed-fi.org/InternetAccessDescriptor	Cable	Cable	Cable	\N	\N	\N	\N	2023-11-08 13:57:41.121127	2023-11-08 13:57:41.120011	5f1d6573-b3b8-4f5a-92dd-fae690bbe529	3046
1711	uri://ed-fi.org/RelationDescriptor	Employer	Employer	Employer	\N	\N	\N	\N	2023-11-08 13:57:36.072531	2023-11-08 13:57:36.072476	c59f5973-ce69-4e94-b4b0-242343359221	1711
1716	uri://ed-fi.org/RelationDescriptor	FathersCivilPartner	FathersCivilPartner	FathersCivilPartner	\N	\N	\N	\N	2023-11-08 13:57:36.080578	2023-11-08 13:57:36.080551	e5b6a2a8-78c1-4a3c-9846-8b6d69bac9eb	1716
1718	uri://ed-fi.org/RelationDescriptor	Foster parent	Foster parent	Foster parent	\N	\N	\N	\N	2023-11-08 13:57:36.087404	2023-11-08 13:57:36.087376	37d1d789-c557-4d96-a8fe-9713fc3813d7	1718
1721	uri://ed-fi.org/RelationDescriptor	Grandfather	Grandfather	Grandfather	\N	\N	\N	\N	2023-11-08 13:57:36.095005	2023-11-08 13:57:36.094884	e503d0ec-4b86-4c8a-ae63-0ffd9554e697	1721
1725	uri://ed-fi.org/RelationDescriptor	Great aunt	Great aunt	Great aunt	\N	\N	\N	\N	2023-11-08 13:57:36.101447	2023-11-08 13:57:36.101432	96581064-ab5d-4668-a5cd-a869de8673c3	1725
1729	uri://ed-fi.org/RelationDescriptor	Mother, step	Mother, step	Mother, step	\N	\N	\N	\N	2023-11-08 13:57:36.109117	2023-11-08 13:57:36.10909	5047829c-9040-4217-a45b-792d7b631ad2	1729
1731	uri://ed-fi.org/RelationDescriptor	Mother	Mother	Mother	\N	\N	\N	\N	2023-11-08 13:57:36.112028	2023-11-08 13:57:36.111947	7d32bb16-a9a2-4bb2-a27a-1cd0562cf912	1731
1737	uri://ed-fi.org/RelationDescriptor	Niece	Niece	Niece	\N	\N	\N	\N	2023-11-08 13:57:36.124381	2023-11-08 13:57:36.12434	9284a248-64c8-4a85-9728-61453dcd769b	1737
1743	uri://ed-fi.org/RelationDescriptor	Sister	Sister	Sister	\N	\N	\N	\N	2023-11-08 13:57:36.137339	2023-11-08 13:57:36.13731	72065acc-3faf-42e5-9b0c-2aa67f204f94	1743
1749	uri://ed-fi.org/RelationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-11-08 13:57:36.147978	2023-11-08 13:57:36.147925	44c09f64-3a48-485d-a06b-bc88c68544be	1749
1753	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Retained	Competency Retained	Competency Retained	\N	\N	\N	\N	2023-11-08 13:57:36.184412	2023-11-08 13:57:36.183411	dae65370-f05a-417c-838b-97de43262532	1753
1758	uri://ed-fi.org/AchievementCategoryDescriptor	Diploma Earned	Diploma Earned	Diploma Earned	\N	\N	\N	\N	2023-11-08 13:57:36.193332	2023-11-08 13:57:36.193288	8c6c33cf-c84a-4750-ba2d-3b503b727f50	1758
1763	uri://ed-fi.org/AchievementCategoryDescriptor	Non-Academic Honor	Non-Academic Honor	Non-Academic Honor	\N	\N	\N	\N	2023-11-08 13:57:36.201564	2023-11-08 13:57:36.201525	9da0bea0-14f3-47d0-898b-321fddbe9e4d	1763
1765	uri://ed-fi.org/TribalAffiliationDescriptor	Absentee-Shawnee	Absentee-Shawnee	Absentee-Shawnee Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.237442	2023-11-08 13:57:36.236464	f7f081b4-0568-4b0e-b0e2-3c09353b635c	1765
1770	uri://ed-fi.org/TribalAffiliationDescriptor	Akiak	Akiak	Akiak Native Community	\N	\N	\N	\N	2023-11-08 13:57:36.246112	2023-11-08 13:57:36.246086	64663ebd-104e-4e08-a2d4-2156810c7549	1770
1776	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Coushatta	Alabama-Coushatta	Alabama-Coushatta Tribe of Texas	\N	\N	\N	\N	2023-11-08 13:57:36.254897	2023-11-08 13:57:36.254855	aeb88678-83ae-41a5-a6f5-1c5e7bff2520	1776
1778	uri://ed-fi.org/TribalAffiliationDescriptor	Aleknagik	Aleknagik	Native Village of Aleknagik	\N	\N	\N	\N	2023-11-08 13:57:36.261151	2023-11-08 13:57:36.260629	3c15a18a-6d1f-4d68-8d7c-543a618fb7e3	1778
1781	uri://ed-fi.org/TribalAffiliationDescriptor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	\N	\N	\N	\N	2023-11-08 13:57:36.266491	2023-11-08 13:57:36.266462	a5688e10-1795-4717-baab-262edeec598c	1781
1784	uri://ed-fi.org/TribalAffiliationDescriptor	Anaktuvuk Pass	Anaktuvuk Pass	Village of Anaktuvuk Pass	\N	\N	\N	\N	2023-11-08 13:57:36.272014	2023-11-08 13:57:36.271983	2570e48a-e98c-4ab5-bda4-080c6551e72b	1784
1788	uri://ed-fi.org/TribalAffiliationDescriptor	Aniak	Aniak	Village of Aniak	\N	\N	\N	\N	2023-11-08 13:57:36.27967	2023-11-08 13:57:36.279622	c89c50e0-f252-4ba5-9189-4a64934dc0ca	1788
1794	uri://ed-fi.org/TribalAffiliationDescriptor	Atka	Atka	Native Village of Atka	\N	\N	\N	\N	2023-11-08 13:57:36.291263	2023-11-08 13:57:36.29123	ec2416a7-08bc-483a-890e-5dc4d13a6009	1794
1795	uri://ed-fi.org/TribalAffiliationDescriptor	Atmautluak	Atmautluak	Village of Atmautluak	\N	\N	\N	\N	2023-11-08 13:57:36.294564	2023-11-08 13:57:36.294546	438dcc9c-76b9-4b66-a752-dbe7461693df	1795
1801	uri://ed-fi.org/TribalAffiliationDescriptor	Belkofski	Belkofski	Native Village of Belkofski	\N	\N	\N	\N	2023-11-08 13:57:36.308248	2023-11-08 13:57:36.308194	d0cc5c94-c024-4945-84a7-b2121e5fba23	1801
1804	uri://ed-fi.org/TribalAffiliationDescriptor	Berry Creek	Berry Creek	Berry Creek Rancheria of Maidu Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.314951	2023-11-08 13:57:36.314936	ce5e5583-48db-4b54-b46e-bc277761a56c	1804
1806	uri://ed-fi.org/TribalAffiliationDescriptor	Big Sandy	Big Sandy	Big Sandy Rancheria of Western Mono Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.319561	2023-11-08 13:57:36.319508	91a6a98c-2c8c-42c2-b137-03e95a9d55ff	1806
1813	uri://ed-fi.org/TribalAffiliationDescriptor	Blue Lake	Blue Lake	Blue Lake Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.334894	2023-11-08 13:57:36.334867	b9275f20-f001-4cfa-bdd4-3d62bc4f53ef	1813
1818	uri://ed-fi.org/TribalAffiliationDescriptor	Buena Vista Rancheria	Buena Vista Rancheria	Buena Vista Rancheria of Me-Wuk Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.346305	2023-11-08 13:57:36.346292	0afe0a79-d7c0-4712-8f02-77d06f441823	1818
1820	uri://ed-fi.org/TribalAffiliationDescriptor	Cachil DeHe	Cachil DeHe	Cachil DeHe Band of Wintun Indians of the Colusa Indian Community of the Colusa Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.351682	2023-11-08 13:57:36.351668	888f29f1-e14b-478d-88ff-36c97a9a1964	1820
1823	uri://ed-fi.org/TribalAffiliationDescriptor	Cahuilla	Cahuilla	Cahuilla Band of Indians	\N	\N	\N	\N	2023-11-08 13:57:36.357297	2023-11-08 13:57:36.357269	5b554913-99f8-4977-96bd-c3016b851452	1823
1827	uri://ed-fi.org/TribalAffiliationDescriptor	Campo	Campo	Campo Band of Diegueno Mission Indians of the Campo Indian Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:36.364164	2023-11-08 13:57:36.364131	eeb5ce69-1dfc-41b4-a5cd-83998460ff47	1827
1830	uri://ed-fi.org/TribalAffiliationDescriptor	Catawba	Catawba	Catawba Indian Nation (aka Catawba Indian Tribe of South Carolina)	\N	\N	\N	\N	2023-11-08 13:57:36.372431	2023-11-08 13:57:36.372418	7e31e232-e823-4384-b771-e181dec295c7	1830
1838	uri://ed-fi.org/TribalAffiliationDescriptor	Chenega	Chenega	Native Village of Chenega (aka Chanega)	\N	\N	\N	\N	2023-11-08 13:57:36.388281	2023-11-08 13:57:36.388253	1c55ab9e-4d33-4a76-8347-54cdf0a9f0d0	1838
1842	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River	Cheyenne River	Cheyenne and Arapaho Tribes, Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.395177	2023-11-08 13:57:36.395164	22876ff0-6aed-4132-8297-fd218a266b5f	1842
1950	uri://ed-fi.org/TribalAffiliationDescriptor	Hopland	Hopland	Hopland Band of Pomo Indians, California	\N	\N	\N	\N	2023-11-08 13:57:36.644664	2023-11-08 13:57:36.644651	effd7a10-1138-42a1-8fc0-3ab279b95ff4	1950
1714	uri://ed-fi.org/RelationDescriptor	FatherInLaw	FatherInLaw	FatherInLaw	\N	\N	\N	\N	2023-11-08 13:57:36.080106	2023-11-08 13:57:36.08009	136d8c9e-4b37-4736-8e41-4787100d7801	1714
1720	uri://ed-fi.org/RelationDescriptor	Fiancee	Fiancee	Fiancee	\N	\N	\N	\N	2023-11-08 13:57:36.088122	2023-11-08 13:57:36.0881	e5e429fe-d28b-419d-ab6a-a299dfd72911	1720
1722	uri://ed-fi.org/RelationDescriptor	Grandmother	Grandmother	Grandmother	\N	\N	\N	\N	2023-11-08 13:57:36.095611	2023-11-08 13:57:36.095573	a032e5f0-0186-49fa-837e-84f65e2ae003	1722
1727	uri://ed-fi.org/RelationDescriptor	Great Grandparent	Great Grandparent	Great Grandparent	\N	\N	\N	\N	2023-11-08 13:57:36.10404	2023-11-08 13:57:36.103819	86ca2107-2240-4a76-8e23-b33b8086f8cd	1727
1730	uri://ed-fi.org/RelationDescriptor	Husband	Husband	Husband	\N	\N	\N	\N	2023-11-08 13:57:36.110594	2023-11-08 13:57:36.110558	d8bf3b24-7fed-4061-b280-dc0c887f51f8	1730
1734	uri://ed-fi.org/RelationDescriptor	MothersSignificantOther	MothersSignificantOther	MothersSignificantOther	\N	\N	\N	\N	2023-11-08 13:57:36.117597	2023-11-08 13:57:36.117569	2b642e80-9dcc-4443-a12d-2ee88401a54b	1734
1736	uri://ed-fi.org/RelationDescriptor	Nephew	Nephew	Nephew	\N	\N	\N	\N	2023-11-08 13:57:36.122362	2023-11-08 13:57:36.122327	5eb6c26c-47f0-439d-9ea2-1c89577582ea	1736
1739	uri://ed-fi.org/RelationDescriptor	Parent	Parent	Parent	\N	\N	\N	\N	2023-11-08 13:57:36.129333	2023-11-08 13:57:36.129304	36348062-ddfe-4cca-b14f-d2c10ebf85ef	1739
1745	uri://ed-fi.org/RelationDescriptor	SisterInLaw	SisterInLaw	SisterInLaw	\N	\N	\N	\N	2023-11-08 13:57:36.139609	2023-11-08 13:57:36.139582	35c942cb-59d3-4307-9fc5-ab16f3725076	1745
1748	uri://ed-fi.org/RelationDescriptor	Uncle	Uncle	Uncle	\N	\N	\N	\N	2023-11-08 13:57:36.146815	2023-11-08 13:57:36.146755	7625bbc7-0c44-4c0d-9254-05856df8ffd4	1748
1752	uri://ed-fi.org/RelationDescriptor	Spouse	Spouse	Spouse	\N	\N	\N	\N	2023-11-08 13:57:36.153724	2023-11-08 13:57:36.153653	aa19495a-60bc-4bb4-87b3-e47fd24b7637	1752
1755	uri://ed-fi.org/AchievementCategoryDescriptor	Certificate Earned	Certificate Earned	Certificate Earned	\N	\N	\N	\N	2023-11-08 13:57:36.18456	2023-11-08 13:57:36.183419	99b1fec4-5fc2-4266-a297-d7e6d7908d92	1755
1759	uri://ed-fi.org/AchievementCategoryDescriptor	Level Completed	Level Completed	Level Completed	\N	\N	\N	\N	2023-11-08 13:57:36.194352	2023-11-08 13:57:36.194318	315cc92a-98a8-4665-9512-4040257f9b3a	1759
1762	uri://ed-fi.org/AchievementCategoryDescriptor	Participation	Participation	Participation	\N	\N	\N	\N	2023-11-08 13:57:36.201253	2023-11-08 13:57:36.201214	258a7ab8-993a-42ea-92a5-a054695f02f0	1762
1768	uri://ed-fi.org/TribalAffiliationDescriptor	Afognak	Afognak	Native Village of Afognak	\N	\N	\N	\N	2023-11-08 13:57:36.237595	2023-11-08 13:57:36.236483	2f5d5268-7f99-494b-a339-92a4142e2b95	1768
1772	uri://ed-fi.org/TribalAffiliationDescriptor	Ak Chin	Ak Chin	Ak-Chin Indian Community	\N	\N	\N	\N	2023-11-08 13:57:36.248097	2023-11-08 13:57:36.24807	c6bc3fdb-a6db-45a2-b900-8db46a94be4d	1772
1774	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Quassarte	Alabama-Quassarte	Alabama-Quassarte Tribal Town	\N	\N	\N	\N	2023-11-08 13:57:36.254	2023-11-08 13:57:36.253972	1492bed9-90d8-475b-86f4-ec481dede9d2	1774
1777	uri://ed-fi.org/TribalAffiliationDescriptor	Algaaciq	Algaaciq	Algaaciq Native Village (St. Mary's)	\N	\N	\N	\N	2023-11-08 13:57:36.260976	2023-11-08 13:57:36.260942	f26bcbf8-06a6-4b33-a13b-fe644df764a5	1777
1782	uri://ed-fi.org/TribalAffiliationDescriptor	Alturas	Alturas	Alturas Indian Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.269475	2023-11-08 13:57:36.269463	abd6eec3-f02b-41cb-bfeb-0bb71587cce9	1782
1785	uri://ed-fi.org/TribalAffiliationDescriptor	Andreafski	Andreafski	Yupiit of Andreafski	\N	\N	\N	\N	2023-11-08 13:57:36.274125	2023-11-08 13:57:36.274098	b04d839b-9320-4464-97a0-b8519daaae8a	1785
1789	uri://ed-fi.org/TribalAffiliationDescriptor	Apache	Apache	Apache Tribe of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.282316	2023-11-08 13:57:36.28228	2a93cf6e-b611-4d67-b552-b3fd7a8aa5f1	1789
1792	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Gros Ventre Tribes	Assiniboine and Gros Ventre Tribes	Fort Belknap Indian Community of the Fort Belknap Reservation of Montana	\N	\N	\N	\N	2023-11-08 13:57:36.288949	2023-11-08 13:57:36.288913	273d59db-d406-4ae7-864d-35fa0b1a461d	1792
1796	uri://ed-fi.org/TribalAffiliationDescriptor	Augustine	Augustine	Augustine Band of Cahuilla Indians, California	\N	\N	\N	\N	2023-11-08 13:57:36.296548	2023-11-08 13:57:36.296518	9ac98743-48ba-472d-9f5b-d8ff25d73f5a	1796
1797	uri://ed-fi.org/TribalAffiliationDescriptor	Barrow	Barrow	Native Village of Barrow Inupiat Traditional Government	\N	\N	\N	\N	2023-11-08 13:57:36.300402	2023-11-08 13:57:36.300375	64dca1ff-aff2-4f5a-b017-6e435ec6025f	1797
1799	uri://ed-fi.org/TribalAffiliationDescriptor	Bay Mills	Bay Mills	Bay Mills Indian Community, Michigan	\N	\N	\N	\N	2023-11-08 13:57:36.30375	2023-11-08 13:57:36.30372	d8c777af-e7dd-4b7c-9816-40fe9e2f9c18	1799
1802	uri://ed-fi.org/TribalAffiliationDescriptor	Beaver	Beaver	Beaver Village	\N	\N	\N	\N	2023-11-08 13:57:36.308508	2023-11-08 13:57:36.308483	607c0806-ba17-456b-a1a1-f3ed026560fa	1802
1808	uri://ed-fi.org/TribalAffiliationDescriptor	Big Valley Rancheria	Big Valley Rancheria	Big Valley Band of Pomo Indians of the Big Valley Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.320948	2023-11-08 13:57:36.320915	666003fc-891c-4d56-82c4-f81b0328e39e	1808
1810	uri://ed-fi.org/TribalAffiliationDescriptor	Birch Creek	Birch Creek	Birch Creek Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.332221	2023-11-08 13:57:36.332203	f5dde0a2-2cba-4b0b-ab7c-081c7157258d	1810
1816	uri://ed-fi.org/TribalAffiliationDescriptor	Bridgeport Indian Colony	Bridgeport Indian Colony	Bridgeport Indian Colony	\N	\N	\N	\N	2023-11-08 13:57:36.342575	2023-11-08 13:57:36.342501	263ddd86-2f04-4be2-9f85-2175cbddcf9d	1816
1821	uri://ed-fi.org/TribalAffiliationDescriptor	Caddo	Caddo	Caddo Nation of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.355046	2023-11-08 13:57:36.355032	311644ee-648a-4f06-bf61-213f42de6779	1821
1825	uri://ed-fi.org/TribalAffiliationDescriptor	California Valley	California Valley	California Valley Miwok Tribe, California	\N	\N	\N	\N	2023-11-08 13:57:36.360993	2023-11-08 13:57:36.360966	21a5beb7-c872-4288-bac7-5f5338a6afee	1825
1826	uri://ed-fi.org/TribalAffiliationDescriptor	Cantwell	Cantwell	Native Village of Cantwell	\N	\N	\N	\N	2023-11-08 13:57:36.364135	2023-11-08 13:57:36.364108	895dedd6-b239-4a3d-aacb-16ecd7b4649c	1826
1831	uri://ed-fi.org/TribalAffiliationDescriptor	Cayuga Nation of New York	Cayuga Nation of New York	Cayuga Nation	\N	\N	\N	\N	2023-11-08 13:57:36.372763	2023-11-08 13:57:36.37275	c32af9c4-ed2a-4eb7-9549-32ecc8f6773f	1831
1835	uri://ed-fi.org/TribalAffiliationDescriptor	Chehalis	Chehalis	Confederated Tribes of the Chehalis Reservation	\N	\N	\N	\N	2023-11-08 13:57:36.382264	2023-11-08 13:57:36.382237	b1773150-3f76-4903-ab9d-9e67e64bc681	1835
1840	uri://ed-fi.org/TribalAffiliationDescriptor	Cherokee	Cherokee	Cherokee Nation	\N	\N	\N	\N	2023-11-08 13:57:36.391392	2023-11-08 13:57:36.391376	96c15245-4441-44fe-a5ae-0d983cf1d7c5	1840
1798	uri://ed-fi.org/TribalAffiliationDescriptor	Bad River Band	Bad River Band	Bad River Band of the Lake Superior Tribe of Chippewa Indians of the Bad River Reservation, Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:36.300731	2023-11-08 13:57:36.30067	eed0af1d-4d8a-418f-b641-0b01e046e214	1798
1800	uri://ed-fi.org/TribalAffiliationDescriptor	Bear River	Bear River	Bear River Band of the Rohnerville Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.305095	2023-11-08 13:57:36.305079	810faba0-dd3b-4613-abd4-f9701bae4fbb	1800
1805	uri://ed-fi.org/TribalAffiliationDescriptor	Big Lagoon	Big Lagoon	Big Lagoon Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.31579	2023-11-08 13:57:36.315754	2ed8ff63-3245-4315-9693-6b7a9fdb694f	1805
1811	uri://ed-fi.org/TribalAffiliationDescriptor	Blackfeet	Blackfeet	Blackfeet Tribe of the Blackfeet Indian Reservation of Montana	\N	\N	\N	\N	2023-11-08 13:57:36.334068	2023-11-08 13:57:36.334039	e4288725-006c-409e-a741-8340635fc544	1811
1814	uri://ed-fi.org/TribalAffiliationDescriptor	Bois Forte	Bois Forte	Minnesota Chippewa Tribe - Bois Forte Band (Nett Lake)	\N	\N	\N	\N	2023-11-08 13:57:36.340315	2023-11-08 13:57:36.340277	bf6b5334-5eb8-4753-931e-cbafd67087ff	1814
1822	uri://ed-fi.org/TribalAffiliationDescriptor	Cabazon	Cabazon	Cabazon Band of Mission Indians, California	\N	\N	\N	\N	2023-11-08 13:57:36.356155	2023-11-08 13:57:36.356126	5fbcd254-9149-4e01-bae3-79681f7fa5d1	1822
1828	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande	Capitan Grande	Capitan Grande Band of Diegueno Mission Indians of California (Barona Group of Capitan Grande Band of Mission Indians of the Barona Reservation, California)	\N	\N	\N	\N	2023-11-08 13:57:36.366476	2023-11-08 13:57:36.366448	6d1875cd-b03c-4103-a55e-3ddbec02d5a3	1828
1833	uri://ed-fi.org/TribalAffiliationDescriptor	Cheesh-Na	Cheesh-Na	Cheesh-Na Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.378912	2023-11-08 13:57:36.378898	874f5452-d575-40dc-bb33-f3bd3d653634	1833
1836	uri://ed-fi.org/TribalAffiliationDescriptor	Chalkyitsik	Chalkyitsik	Chalkyitsik Village	\N	\N	\N	\N	2023-11-08 13:57:36.383587	2023-11-08 13:57:36.383532	e6594cf3-c62f-4cba-8c34-5500037add2a	1836
1839	uri://ed-fi.org/TribalAffiliationDescriptor	Cher-Ae Heights	Cher-Ae Heights	Cher-Ae Heights Indian Community of the Trinidad Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.390579	2023-11-08 13:57:36.39055	d121329d-bcf0-4fad-b512-b8fdd460849b	1839
1844	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe, Inc.	Chickahominy Indian Tribe, Inc.	Chickahominy Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.398782	2023-11-08 13:57:36.398744	2234a97e-ec7c-428e-a248-073f295be35e	1844
1851	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lake	Chignik Lake	Chignik Lake Village	\N	\N	\N	\N	2023-11-08 13:57:36.417691	2023-11-08 13:57:36.417661	25184990-00f4-458c-a018-86141c76dfea	1851
1855	uri://ed-fi.org/TribalAffiliationDescriptor	Chitimacha	Chitimacha	Chitimacha Tribe of Louisiana	\N	\N	\N	\N	2023-11-08 13:57:36.427987	2023-11-08 13:57:36.427961	b6fe6660-5af7-4b6b-a5e9-bd7164da573b	1855
1857	uri://ed-fi.org/TribalAffiliationDescriptor	Chitina	Chitina	Native Village of Chitina	\N	\N	\N	\N	2023-11-08 13:57:36.432419	2023-11-08 13:57:36.432404	47d44c97-6e71-4099-899a-04f396c8c39a	1857
1859	uri://ed-fi.org/TribalAffiliationDescriptor	Chuloonawick	Chuloonawick	Chuloonawick Native Village	\N	\N	\N	\N	2023-11-08 13:57:36.439378	2023-11-08 13:57:36.439255	0b51ca1d-74be-4bca-92bf-ee783f56d61d	1859
1862	uri://ed-fi.org/TribalAffiliationDescriptor	Circle	Circle	Circle Native Community	\N	\N	\N	\N	2023-11-08 13:57:36.442164	2023-11-08 13:57:36.442119	30576f44-8810-4a41-aa94-10a938c375af	1862
1870	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Colville	Confederated Colville	Confederated Tribes of the Colville Reservation	\N	\N	\N	\N	2023-11-08 13:57:36.463063	2023-11-08 13:57:36.463022	36e174ff-0f44-4514-87f9-80cb3e8b1b64	1870
1876	uri://ed-fi.org/TribalAffiliationDescriptor	Cortina	Cortina	Kletsel Dehe Band of Wintun Indians	\N	\N	\N	\N	2023-11-08 13:57:36.477714	2023-11-08 13:57:36.477681	1031f1cf-b84d-48d1-9e92-9265c37bae68	1876
1877	uri://ed-fi.org/TribalAffiliationDescriptor	Coushatta	Coushatta	Coushatta Tribe of Louisiana	\N	\N	\N	\N	2023-11-08 13:57:36.481271	2023-11-08 13:57:36.481256	cf50d104-6c6f-472a-a358-faeb739e3876	1877
1879	uri://ed-fi.org/TribalAffiliationDescriptor	Cow Creek	Cow Creek	Cow Creek Band of Umpqua Tribe of Indians	\N	\N	\N	\N	2023-11-08 13:57:36.487031	2023-11-08 13:57:36.487005	c64a1c59-3bb6-40d0-95a3-3cea31b80b05	1879
1883	uri://ed-fi.org/TribalAffiliationDescriptor	Crooked Creek	Crooked Creek	Village of Crooked Creek	\N	\N	\N	\N	2023-11-08 13:57:36.494467	2023-11-08 13:57:36.494429	272715a0-b142-457a-96ec-28e0af13635a	1883
1889	uri://ed-fi.org/TribalAffiliationDescriptor	Dot Lake	Dot Lake	Village of Dot Lake	\N	\N	\N	\N	2023-11-08 13:57:36.505228	2023-11-08 13:57:36.505102	ecb97385-7349-474b-85b9-7636016e2300	1889
1893	uri://ed-fi.org/TribalAffiliationDescriptor	Dry Creek	Dry Creek	Dry Creek Rancheria Band of Pomo Indians, California	\N	\N	\N	\N	2023-11-08 13:57:36.514322	2023-11-08 13:57:36.514296	a98864b6-2df7-472f-9e8e-4379443e2f23	1893
1903	uri://ed-fi.org/TribalAffiliationDescriptor	Ekwok	Ekwok	Native Village of Ekwok	\N	\N	\N	\N	2023-11-08 13:57:36.531732	2023-11-08 13:57:36.531422	26ba4159-10fc-480f-a28f-195fb7ff8f69	1903
1913	uri://ed-fi.org/TribalAffiliationDescriptor	False Pass	False Pass	Native Village of False Pass	\N	\N	\N	\N	2023-11-08 13:57:36.554463	2023-11-08 13:57:36.554163	efc5ed33-cdff-4852-92d4-c1e2feb12ab2	1913
1918	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDermitt	Fort McDermitt	Fort McDermitt Paiute and Shoshone Tribes of the Fort McDermitt Indian Reservation, Nevada and Oregon	\N	\N	\N	\N	2023-11-08 13:57:36.568697	2023-11-08 13:57:36.568672	652613b1-3e2d-4922-b3ec-26e692917d69	1918
1922	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDowell	Fort McDowell	Fort McDowell Yavapai Nation, Arizona	\N	\N	\N	\N	2023-11-08 13:57:36.574865	2023-11-08 13:57:36.574808	697b5985-a124-49e2-89dd-a34b10453ed8	1922
1923	uri://ed-fi.org/TribalAffiliationDescriptor	Gakona	Gakona	Native Village of Gakona	\N	\N	\N	\N	2023-11-08 13:57:36.581247	2023-11-08 13:57:36.581192	0a2c99d4-b9ec-4fd3-98a9-a7254520a905	1923
1929	uri://ed-fi.org/TribalAffiliationDescriptor	Goodnews Bay	Goodnews Bay	Native Village of Goodnews Bay	\N	\N	\N	\N	2023-11-08 13:57:36.593887	2023-11-08 13:57:36.593487	c988ffb1-46d1-4c07-a2f2-6346eeaff13f	1929
1937	uri://ed-fi.org/TribalAffiliationDescriptor	Guidiville	Guidiville	Guidiville Rancheria of California	\N	\N	\N	\N	2023-11-08 13:57:36.614191	2023-11-08 13:57:36.614157	eed390fe-f238-458a-8746-94dbf6743929	1937
1939	uri://ed-fi.org/TribalAffiliationDescriptor	Hamilton	Hamilton	Native Village of Hamilton	\N	\N	\N	\N	2023-11-08 13:57:36.619584	2023-11-08 13:57:36.619543	3b2ef10c-c159-41a1-a8e9-7e9dafeb0337	1939
1948	uri://ed-fi.org/TribalAffiliationDescriptor	Hoonah	Hoonah	Hoonah Indian Association	\N	\N	\N	\N	2023-11-08 13:57:36.637467	2023-11-08 13:57:36.63744	abb024ee-4093-4c52-b4ac-3ebfebdc77bc	1948
1832	uri://ed-fi.org/TribalAffiliationDescriptor	Cedarville	Cedarville	Cedarville Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.375345	2023-11-08 13:57:36.375331	1b09de8d-ce90-486c-a6ed-1ae1919fe1ed	1832
1834	uri://ed-fi.org/TribalAffiliationDescriptor	Chefornak	Chefornak	Village of Chefornak	\N	\N	\N	\N	2023-11-08 13:57:36.380524	2023-11-08 13:57:36.380315	530e9228-4a8c-4ee0-a757-c0ed6d7a8663	1834
1837	uri://ed-fi.org/TribalAffiliationDescriptor	Chemehuevi	Chemehuevi	Chemehuevi Indian Tribe of the Chemehuevi Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:36.38526	2023-11-08 13:57:36.385233	1dff30a5-eeec-4a41-adf1-386c09f8cfa8	1837
1841	uri://ed-fi.org/TribalAffiliationDescriptor	Chevak	Chevak	Chevak Native Village	\N	\N	\N	\N	2023-11-08 13:57:36.394175	2023-11-08 13:57:36.39408	1ad2de59-72c2-485d-84f3-819e968a46c1	1841
1846	uri://ed-fi.org/TribalAffiliationDescriptor	Chickasaw	Chickasaw	The Chickasaw Nation	\N	\N	\N	\N	2023-11-08 13:57:36.403849	2023-11-08 13:57:36.403833	3f74e010-8aaf-4d0b-a804-aadfe9153bb8	1846
1848	uri://ed-fi.org/TribalAffiliationDescriptor	Chicken Ranch	Chicken Ranch	Chicken Ranch Rancheria of Me-Wuk Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.408051	2023-11-08 13:57:36.408037	2f1d8a1f-131e-4bb2-a7d2-2dd1951a3d0b	1848
1849	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Bay	Chignik Bay	Chignik Bay Tribal Council	\N	\N	\N	\N	2023-11-08 13:57:36.411024	2023-11-08 13:57:36.411006	1eadbeb3-2c98-4fa5-8261-428dfea450f7	1849
1853	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkoot	Chilkoot	Chilkoot Indian Association (Haines)	\N	\N	\N	\N	2023-11-08 13:57:36.42252	2023-11-08 13:57:36.422493	aa7e78ee-81dd-4ebc-9e50-d32a293f6436	1853
1856	uri://ed-fi.org/TribalAffiliationDescriptor	Chippewa-Cree	Chippewa-Cree	Chippewa Cree Indians of the Rocky Boy's Reservation, Montana	\N	\N	\N	\N	2023-11-08 13:57:36.427361	2023-11-08 13:57:36.427326	6d12505b-d6c1-4233-9198-d694249f1ea3	1856
1860	uri://ed-fi.org/TribalAffiliationDescriptor	Citizen Potawatomi	Citizen Potawatomi	Citizen Potawatomi Nation, Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.440187	2023-11-08 13:57:36.440158	79b4c2c9-89db-4131-934e-a3c1165d47ac	1860
1864	uri://ed-fi.org/TribalAffiliationDescriptor	Cloverdale	Cloverdale	Cloverdale Rancheria of Pomo Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.449979	2023-11-08 13:57:36.44995	f4685eef-f01d-4d50-aa59-b0aa8bdfdbb5	1864
1868	uri://ed-fi.org/TribalAffiliationDescriptor	Colorado River	Colorado River	Colorado River Indian Tribes of the Colorado River Indian Reservation, Arizona and California	\N	\N	\N	\N	2023-11-08 13:57:36.460481	2023-11-08 13:57:36.460453	78968e05-c031-48b7-b0db-0a68c6b0577d	1868
1871	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Coos	Confederated Coos	Confederated Tribes of the Coos, Lower Umpqua and Siuslaw Indians	\N	\N	\N	\N	2023-11-08 13:57:36.464699	2023-11-08 13:57:36.464682	3758ad06-b393-4600-a6a7-75f7d42a0cde	1871
1873	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Goshute	Confederated Goshute	Confederated Tribes of the Goshute Reservation, Nevada and Utah	\N	\N	\N	\N	2023-11-08 13:57:36.470859	2023-11-08 13:57:36.470735	e8ea8185-74a4-4316-b18e-ea9033d10b02	1873
1875	uri://ed-fi.org/TribalAffiliationDescriptor	Coquille	Coquille	Coquille Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.474337	2023-11-08 13:57:36.474312	f1efc818-5eb4-445e-9aaf-ffa47a7b17d0	1875
1882	uri://ed-fi.org/TribalAffiliationDescriptor	Craig	Craig	Craig Tribal Association	\N	\N	\N	\N	2023-11-08 13:57:36.488289	2023-11-08 13:57:36.48825	1b408513-740f-4f5d-87bc-1e0584ae35e9	1882
1885	uri://ed-fi.org/TribalAffiliationDescriptor	Curyung	Curyung	Curyung Tribal Council	\N	\N	\N	\N	2023-11-08 13:57:36.496579	2023-11-08 13:57:36.496432	60d81705-47dd-4c20-8103-c03cbb3a271b	1885
1887	uri://ed-fi.org/TribalAffiliationDescriptor	Deering	Deering	Native Village of Deering	\N	\N	\N	\N	2023-11-08 13:57:36.50065	2023-11-08 13:57:36.500565	fcb71f07-5449-4fc4-8a74-f14d6f958514	1887
1888	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Tribe	Delaware Tribe	Delaware Tribe of Indians	\N	\N	\N	\N	2023-11-08 13:57:36.503985	2023-11-08 13:57:36.503942	59a96851-6850-48a1-911b-05d5845aedf6	1888
1891	uri://ed-fi.org/TribalAffiliationDescriptor	Diomede	Diomede	Native Village of Diomede (aka Inalik)	\N	\N	\N	\N	2023-11-08 13:57:36.507312	2023-11-08 13:57:36.50728	6ed27d80-2e7e-4fb8-9815-5ad9a904c0f7	1891
1895	uri://ed-fi.org/TribalAffiliationDescriptor	Eagle	Eagle	Native Village of Eagle	\N	\N	\N	\N	2023-11-08 13:57:36.516451	2023-11-08 13:57:36.51642	face0c92-4850-4ef7-bf2e-e13f54063a4e	1895
1899	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shoshone	Eastern Shoshone	Eastern Shoshone Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	\N	2023-11-08 13:57:36.524362	2023-11-08 13:57:36.52435	38f7e66f-fd3c-4654-9699-0c5ece26ce7f	1899
1902	uri://ed-fi.org/TribalAffiliationDescriptor	Ekuk	Ekuk	Native Village of Ekuk	\N	\N	\N	\N	2023-11-08 13:57:36.530682	2023-11-08 13:57:36.530519	6a4f2916-e405-483a-90c1-7be7173a83e9	1902
1904	uri://ed-fi.org/TribalAffiliationDescriptor	Elem	Elem	Elem Indian Colony of Pomo Indians of the Sulphur Bank Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.537092	2023-11-08 13:57:36.537048	051f81a2-68a9-4565-88e5-7667384c6791	1904
1906	uri://ed-fi.org/TribalAffiliationDescriptor	Elk Valley	Elk Valley	Elk Valley Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.541142	2023-11-08 13:57:36.541114	5d2863fe-a4d3-4b25-b823-603d424db615	1906
1909	uri://ed-fi.org/TribalAffiliationDescriptor	Enterprise	Enterprise	Enterprise Rancheria of Maidu Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.545079	2023-11-08 13:57:36.545052	11a839a3-d9d9-48b0-9983-34ced8c4cbdf	1909
1911	uri://ed-fi.org/TribalAffiliationDescriptor	Ewiiaapaayp	Ewiiaapaayp	Ewiiaapaayp Band of Kumeyaay Indians, California	\N	\N	\N	\N	2023-11-08 13:57:36.552574	2023-11-08 13:57:36.552561	cbc88340-51fa-4150-80f9-f16f9c3b5212	1911
1915	uri://ed-fi.org/TribalAffiliationDescriptor	Fond du Lac	Fond du Lac	Minnesota Chippewa Tribe - Fond du Lac Band	\N	\N	\N	\N	2023-11-08 13:57:36.561449	2023-11-08 13:57:36.561421	8edc1140-c2c7-487f-bd4d-e44dca554ab4	1915
1919	uri://ed-fi.org/TribalAffiliationDescriptor	Flandreau	Flandreau	Flandreau Santee Sioux Tribe of South Dakota	\N	\N	\N	\N	2023-11-08 13:57:36.568744	2023-11-08 13:57:36.568624	ad6638d5-54c1-43e5-a1bc-47ba3a1c10ad	1919
1921	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Mojave	Fort Mojave	Fort Mojave Indian Tribe of Arizona, California & Nevada	\N	\N	\N	\N	2023-11-08 13:57:36.573915	2023-11-08 13:57:36.573902	ce031942-efd4-4d9b-9a4e-55490f756939	1921
1925	uri://ed-fi.org/TribalAffiliationDescriptor	Galena	Galena	Galena Village (aka Louden Village)	\N	\N	\N	\N	2023-11-08 13:57:36.583297	2023-11-08 13:57:36.583271	01afb800-93fc-418e-94b9-9aa87de3e7be	1925
1928	uri://ed-fi.org/TribalAffiliationDescriptor	Georgetown	Georgetown	Native Village of Georgetown	\N	\N	\N	\N	2023-11-08 13:57:36.59447	2023-11-08 13:57:36.594457	ef6a63e1-f844-4b76-b3dc-e0774dc5a001	1928
2048	uri://ed-fi.org/TribalAffiliationDescriptor	Mechoopda	Mechoopda	Mechoopda Indian Tribe of Chico Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.895131	2023-11-08 13:57:36.895104	2cf5c67a-6f43-49bb-8ba5-b682e87b135e	2048
1843	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River Sioux Tribe	Cheyenne River Sioux Tribe	Cheyenne River Sioux Tribe of the Cheyenne River Reservation, South Dakota	\N	\N	\N	\N	2023-11-08 13:57:36.39717	2023-11-08 13:57:36.39712	349320a9-c069-4188-aa15-7298f1a848b6	1843
1845	uri://ed-fi.org/TribalAffiliationDescriptor	Chickaloon	Chickaloon	Chickaloon Native Village	\N	\N	\N	\N	2023-11-08 13:57:36.402778	2023-11-08 13:57:36.402748	efa7353a-532c-4995-870b-dccc3755230b	1845
1852	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkat	Chilkat	Chilkat Indian Village (Klukwan)	\N	\N	\N	\N	2023-11-08 13:57:36.419282	2023-11-08 13:57:36.419262	c6ecf6c6-35f8-41b6-bc1c-0a26380e84ac	1852
1854	uri://ed-fi.org/TribalAffiliationDescriptor	Chinik	Chinik	Chinik Eskimo Community (Golovin)	\N	\N	\N	\N	2023-11-08 13:57:36.426072	2023-11-08 13:57:36.42602	ff413c4d-19d1-4814-b98c-248118ec6bed	1854
1858	uri://ed-fi.org/TribalAffiliationDescriptor	Choctaw	Choctaw	The Choctaw Nation of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.433649	2023-11-08 13:57:36.433505	2f1d9906-74e9-4b51-8a3f-c7047d8d1f22	1858
1866	uri://ed-fi.org/TribalAffiliationDescriptor	Coeur D'Alene	Coeur D'Alene	Coeur D'Alene Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.453752	2023-11-08 13:57:36.453521	10d1dc93-0bdf-4b61-8248-4c34189aaa14	1866
1872	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Salish	Confederated Salish	Confederated Salish and Kootenai Tribes of the Flathead Reservation	\N	\N	\N	\N	2023-11-08 13:57:36.469165	2023-11-08 13:57:36.469147	c5f18550-4254-40fa-b7e3-2a7f174cd877	1872
1880	uri://ed-fi.org/TribalAffiliationDescriptor	Coyote Valley	Coyote Valley	Coyote Valley Band of Pomo Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.486785	2023-11-08 13:57:36.486652	4ce8bc2a-8b3b-42d5-b99c-28a443233b05	1880
1884	uri://ed-fi.org/TribalAffiliationDescriptor	Crow	Crow	Crow Tribe of Montana	\N	\N	\N	\N	2023-11-08 13:57:36.494854	2023-11-08 13:57:36.494827	207478c2-e6e1-44f6-b3df-d15e77fbe2bd	1884
1896	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Cherokee	Eastern Cherokee	Eastern Band of Cherokee Indians	\N	\N	\N	\N	2023-11-08 13:57:36.517934	2023-11-08 13:57:36.517689	2b192e0b-9b06-460a-8fae-14f76f663a8d	1896
1897	uri://ed-fi.org/TribalAffiliationDescriptor	Egegik	Egegik	Egegik Village	\N	\N	\N	\N	2023-11-08 13:57:36.523451	2023-11-08 13:57:36.523418	326ba51e-8377-414c-9ee8-b910b3b268f5	1897
1900	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shawnee	Eastern Shawnee	Eastern Shawnee Tribe of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.528031	2023-11-08 13:57:36.528003	67d2a8de-ffde-46c9-8e79-0354255c8407	1900
1907	uri://ed-fi.org/TribalAffiliationDescriptor	Ely Shoshone	Ely Shoshone	Ely Shoshone Tribe of Nevada	\N	\N	\N	\N	2023-11-08 13:57:36.54095	2023-11-08 13:57:36.540891	65b53c4a-dad7-4522-9ddd-74bddebb5102	1907
1912	uri://ed-fi.org/TribalAffiliationDescriptor	Eyak	Eyak	Native Village of Eyak (Cordova)	\N	\N	\N	\N	2023-11-08 13:57:36.553518	2023-11-08 13:57:36.55349	c015d04d-52df-4973-ad58-b42401937c01	1912
1916	uri://ed-fi.org/TribalAffiliationDescriptor	Forest County	Forest County	Forest County Potawatomi Community, Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:36.56226	2023-11-08 13:57:36.562215	e31f3cdd-4bfc-4b8c-8a78-b368f3112872	1916
1917	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Bidwell	Fort Bidwell	Fort Bidwell Indian Community of the Fort Bidwell Reservation of California	\N	\N	\N	\N	2023-11-08 13:57:36.5668	2023-11-08 13:57:36.566766	86ba7dca-9985-41f5-9a4f-879f078183ec	1917
1920	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Independence	Fort Independence	Fort Independence Indian Community of Paiute Indians of the Fort Independence Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:36.571366	2023-11-08 13:57:36.571341	396d0c0f-4f16-4ced-badf-281e1bdb8e47	1920
1924	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Sill	Fort Sill	Fort Sill Apache Tribe of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.580861	2023-11-08 13:57:36.58075	34f06a99-7bc3-49f5-a88b-bc7a252fa4c7	1924
1927	uri://ed-fi.org/TribalAffiliationDescriptor	Gambell	Gambell	Native Village of Gambell	\N	\N	\N	\N	2023-11-08 13:57:36.586996	2023-11-08 13:57:36.586933	df5081cf-1216-4677-937b-758fe8fb9088	1927
1930	uri://ed-fi.org/TribalAffiliationDescriptor	Gila River	Gila River	Gila River Indian Community of the Gila River Indian Reservation, Arizona	\N	\N	\N	\N	2023-11-08 13:57:36.596153	2023-11-08 13:57:36.594948	6ebae886-8673-4cf1-a62f-481bddca9b32	1930
1934	uri://ed-fi.org/TribalAffiliationDescriptor	Grayling	Grayling	Organized Village of Grayling (aka Holikachuk)	\N	\N	\N	\N	2023-11-08 13:57:36.607901	2023-11-08 13:57:36.60774	373bbfdf-1d49-457f-94c7-9974b51ef18a	1934
1940	uri://ed-fi.org/TribalAffiliationDescriptor	Habematolel	Habematolel	Habematolel Pomo of Upper Lake, California	\N	\N	\N	\N	2023-11-08 13:57:36.62149	2023-11-08 13:57:36.62135	141ef07b-ba6c-474a-90cb-259e3824259b	1940
1943	uri://ed-fi.org/TribalAffiliationDescriptor	Hoh	Hoh	Hoh Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.628659	2023-11-08 13:57:36.628632	1e3ab8fc-76b3-45d7-a491-a4eff245ca39	1943
1945	uri://ed-fi.org/TribalAffiliationDescriptor	Healy Lake	Healy Lake	Healy Lake Village	\N	\N	\N	\N	2023-11-08 13:57:36.632919	2023-11-08 13:57:36.632891	7edfbced-4752-40ca-bd30-be756c39d510	1945
1951	uri://ed-fi.org/TribalAffiliationDescriptor	Hooper Bay	Hooper Bay	Native Village of Hooper Bay	\N	\N	\N	\N	2023-11-08 13:57:36.646508	2023-11-08 13:57:36.646493	0e2b0c65-b9f3-490f-a717-dd3a7cba40f2	1951
1955	uri://ed-fi.org/TribalAffiliationDescriptor	Huslia	Huslia	Huslia Village	\N	\N	\N	\N	2023-11-08 13:57:36.654302	2023-11-08 13:57:36.654267	38e588cd-b027-45e0-a04b-dc3c3337c746	1955
1964	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Oklahoma	Iowa of Oklahoma	Iowa Tribe of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.677338	2023-11-08 13:57:36.677315	87bdb162-2ea6-481c-9578-62b97d2455f7	1964
1965	uri://ed-fi.org/TribalAffiliationDescriptor	Iqugmiut	Iqugmiut	Iqugmiut Traditional Council	\N	\N	\N	\N	2023-11-08 13:57:36.680962	2023-11-08 13:57:36.680935	e9516daa-a188-4eee-a632-a1871dd5b536	1965
1968	uri://ed-fi.org/TribalAffiliationDescriptor	Jamestown	Jamestown	Jamestown S'Klallam Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.686011	2023-11-08 13:57:36.685981	21f5856f-68c4-4d24-81a3-a6d728925a84	1968
1970	uri://ed-fi.org/TribalAffiliationDescriptor	Jena	Jena	Jena Band of Choctaw Indians	\N	\N	\N	\N	2023-11-08 13:57:36.69418	2023-11-08 13:57:36.694151	b18423c0-63d3-4df2-8c72-00055141ea2b	1970
1973	uri://ed-fi.org/TribalAffiliationDescriptor	Kake	Kake	Organized Village of Kake	\N	\N	\N	\N	2023-11-08 13:57:36.702443	2023-11-08 13:57:36.70239	88eaf1cb-0388-4e40-a8e9-4f093c78fb9e	1973
1979	uri://ed-fi.org/TribalAffiliationDescriptor	Kalskag	Kalskag	Village of Kalskag	\N	\N	\N	\N	2023-11-08 13:57:36.714878	2023-11-08 13:57:36.714825	ff1dbce6-0538-42bc-b6b2-d3fb282d6eb6	1979
1987	uri://ed-fi.org/TribalAffiliationDescriptor	Keweenaw	Keweenaw	Keweenaw Bay Indian Community, Michigan	\N	\N	\N	\N	2023-11-08 13:57:36.737913	2023-11-08 13:57:36.737884	5bbc7228-7475-4444-a246-300f92c1a0d5	1987
2223	uri://ed-fi.org/TribalAffiliationDescriptor	Saxman	Saxman	Organized Village of Saxman	\N	\N	\N	\N	2023-11-08 13:57:37.417885	2023-11-08 13:57:37.417857	361a5ffe-c4a9-4c2d-a595-8bef7a4d862b	2223
1847	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indians-Eastern Division	Chickahominy Indians-Eastern Division	Chickahominy Indian Tribe - Eastern Division	\N	\N	\N	\N	2023-11-08 13:57:36.406133	2023-11-08 13:57:36.406104	9a82bc6b-1c3c-44e2-80f2-c1c464844419	1847
1850	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lagoon	Chignik Lagoon	Native Village of Chignik Lagoon	\N	\N	\N	\N	2023-11-08 13:57:36.413875	2023-11-08 13:57:36.413861	59baead5-eda0-4824-a396-5564c6783b58	1850
1861	uri://ed-fi.org/TribalAffiliationDescriptor	Chuathbaluk	Chuathbaluk	Native Village of Chuathbaluk (Russian Mission, Kuskokwim)	\N	\N	\N	\N	2023-11-08 13:57:36.441947	2023-11-08 13:57:36.441932	0f7da558-ef5c-4da2-ab6d-f3004c0e23ef	1861
1863	uri://ed-fi.org/TribalAffiliationDescriptor	Clark's Point	Clark's Point	Village of Clarks Point	\N	\N	\N	\N	2023-11-08 13:57:36.445705	2023-11-08 13:57:36.445678	1be4f547-4d2e-4084-9309-0b5742be1569	1863
1865	uri://ed-fi.org/TribalAffiliationDescriptor	Cocopah	Cocopah	Cocopah Tribe of Arizona	\N	\N	\N	\N	2023-11-08 13:57:36.45134	2023-11-08 13:57:36.451293	c4fd1c58-2402-4e29-8b52-2c628ddcf22c	1865
1867	uri://ed-fi.org/TribalAffiliationDescriptor	Cold Springs	Cold Springs	Cold Springs Rancheria of Mono Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.455526	2023-11-08 13:57:36.455424	aaa56bf2-5955-4f06-981b-408b4d38905a	1867
1869	uri://ed-fi.org/TribalAffiliationDescriptor	Comanche	Comanche	Comanche Nation, Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.462116	2023-11-08 13:57:36.4621	57685571-f963-46d3-9a33-1732fd8d3b03	1869
1874	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Yakama	Confederated Yakama	Confederated Tribes and Bands of the Yakama Nation	\N	\N	\N	\N	2023-11-08 13:57:36.472266	2023-11-08 13:57:36.472189	c101e3c3-9e6f-4307-8b9f-e8cfab48d400	1874
1878	uri://ed-fi.org/TribalAffiliationDescriptor	Council	Council	Native Village of Council	\N	\N	\N	\N	2023-11-08 13:57:36.481792	2023-11-08 13:57:36.481766	dec9a0f9-c2b2-4fcd-b07e-d2a2a65418e4	1878
1881	uri://ed-fi.org/TribalAffiliationDescriptor	Cowlitz	Cowlitz	Cowlitz Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.487281	2023-11-08 13:57:36.487256	02bf5900-bfbe-4a67-8efc-741bb563daf9	1881
1886	uri://ed-fi.org/TribalAffiliationDescriptor	Crow Creek	Crow Creek	Crow Creek Sioux Tribe of the Crow Creek Reservation, South Dakota	\N	\N	\N	\N	2023-11-08 13:57:36.497385	2023-11-08 13:57:36.497342	f405e619-8805-47ca-8bea-24ef1b64a889	1886
1890	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Nation	Delaware Nation	Delaware Nation, Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.505726	2023-11-08 13:57:36.505699	16f15f35-9f97-4138-99c9-908cad1db161	1890
1892	uri://ed-fi.org/TribalAffiliationDescriptor	Douglas	Douglas	Douglas Indian Association	\N	\N	\N	\N	2023-11-08 13:57:36.510386	2023-11-08 13:57:36.510352	2b01b663-d873-4b07-b0dd-88c9e23c0080	1892
1894	uri://ed-fi.org/TribalAffiliationDescriptor	Duckwater	Duckwater	Duckwater Shoshone Tribe of the Duckwater Reservation, Nevada	\N	\N	\N	\N	2023-11-08 13:57:36.514652	2023-11-08 13:57:36.514614	df04f0d5-d719-48a0-a5f0-5e52209d7cb8	1894
1898	uri://ed-fi.org/TribalAffiliationDescriptor	Eek	Eek	Native Village of Eek	\N	\N	\N	\N	2023-11-08 13:57:36.523275	2023-11-08 13:57:36.523235	d9bfe2cc-342e-4d82-a664-b06c285df8a8	1898
1901	uri://ed-fi.org/TribalAffiliationDescriptor	Eklutna	Eklutna	Eklutna Native Village	\N	\N	\N	\N	2023-11-08 13:57:36.529446	2023-11-08 13:57:36.529337	64b8321c-bdbd-4c39-92d0-041094e09c6b	1901
1905	uri://ed-fi.org/TribalAffiliationDescriptor	Elim IRA	Elim IRA	Native Village of Elim	\N	\N	\N	\N	2023-11-08 13:57:36.537681	2023-11-08 13:57:36.537507	87b8f2ea-d9a0-4afe-9cc6-8cbe745c11e2	1905
1908	uri://ed-fi.org/TribalAffiliationDescriptor	Emmonak	Emmonak	Emmonak Village	\N	\N	\N	\N	2023-11-08 13:57:36.543759	2023-11-08 13:57:36.543663	9a67c905-136f-4e2a-928a-af9a80b6fc77	1908
1910	uri://ed-fi.org/TribalAffiliationDescriptor	Evansville	Evansville	Evansville Village (aka Bettles Field)	\N	\N	\N	\N	2023-11-08 13:57:36.550032	2023-11-08 13:57:36.550006	fa881729-b70c-480a-88fe-e90ae5c6b122	1910
1914	uri://ed-fi.org/TribalAffiliationDescriptor	Federated Indians of Graton	Federated Indians of Graton	Federated Indians of Graton Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.560284	2023-11-08 13:57:36.560267	792b2115-38da-49f9-9c95-21beed089647	1914
1926	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Yukon	Fort Yukon	Native Village of Fort Yukon	\N	\N	\N	\N	2023-11-08 13:57:36.583763	2023-11-08 13:57:36.583397	a00d3c79-e9e3-454d-9103-ce6a4a367e74	1926
1931	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Portage	Grand Portage	Minnesota Chippewa Tribe - Grand Portage Band	\N	\N	\N	\N	2023-11-08 13:57:36.597065	2023-11-08 13:57:36.597028	4fda27e1-e8c3-490b-afbd-26202dedb982	1931
1935	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Traverse	Grand Traverse	Grand Traverse Band of Ottawa and Chippewa Indians, Michigan	\N	\N	\N	\N	2023-11-08 13:57:36.609221	2023-11-08 13:57:36.609036	449f65ea-eb1c-4b37-9e7a-f3e35e32c904	1935
1938	uri://ed-fi.org/TribalAffiliationDescriptor	Gulkana	Gulkana	Gulkana Village Council	\N	\N	\N	\N	2023-11-08 13:57:36.613972	2023-11-08 13:57:36.613913	22701d71-1419-46a6-adf1-f5ca0b2522e7	1938
1942	uri://ed-fi.org/TribalAffiliationDescriptor	Havasupai	Havasupai	Havasupai Tribe of the Havasupai Reservation, Arizona	\N	\N	\N	\N	2023-11-08 13:57:36.625224	2023-11-08 13:57:36.625153	7cab9556-c77d-4748-90c7-2de4cf54f0af	1942
1946	uri://ed-fi.org/TribalAffiliationDescriptor	Holy Cross	Holy Cross	Holy Cross Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.634877	2023-11-08 13:57:36.634841	4fd9a372-afc4-494d-b1bd-17cf726edac4	1946
1949	uri://ed-fi.org/TribalAffiliationDescriptor	Hopi	Hopi	Hopi Tribe of Arizona	\N	\N	\N	\N	2023-11-08 13:57:36.644017	2023-11-08 13:57:36.644001	2d8ca7f9-59e2-40b8-9cf6-38dfee33d5b3	1949
1952	uri://ed-fi.org/TribalAffiliationDescriptor	Houlton	Houlton	Houlton Band of Maliseet Indians	\N	\N	\N	\N	2023-11-08 13:57:36.648066	2023-11-08 13:57:36.648053	791e052c-315b-45aa-a7c7-28f1714ed7a1	1952
1958	uri://ed-fi.org/TribalAffiliationDescriptor	Iliamna	Iliamna	Village of Iliamna	\N	\N	\N	\N	2023-11-08 13:57:36.667341	2023-11-08 13:57:36.667327	b8bf0bcb-4d23-4aa3-8f6e-4eff0c0c61ae	1958
1960	uri://ed-fi.org/TribalAffiliationDescriptor	Iipay	Iipay	Iipay Nation of Santa Ysabel, California	\N	\N	\N	\N	2023-11-08 13:57:36.669764	2023-11-08 13:57:36.669738	b8cac50a-85ec-4941-9326-d76f1a2f01a2	1960
1963	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Kansas	Iowa of Kansas	Iowa Tribe of Kansas and Nebraska	\N	\N	\N	\N	2023-11-08 13:57:36.675614	2023-11-08 13:57:36.675567	49d53035-8829-4819-9a1b-108179441649	1963
1977	uri://ed-fi.org/TribalAffiliationDescriptor	Kaltag	Kaltag	Village of Kaltag	\N	\N	\N	\N	2023-11-08 13:57:36.712	2023-11-08 13:57:36.711971	5748715b-50c7-4567-82b4-00beb4b05932	1977
1982	uri://ed-fi.org/TribalAffiliationDescriptor	Kasaan	Kasaan	Organized Village of Kasaan	\N	\N	\N	\N	2023-11-08 13:57:36.723088	2023-11-08 13:57:36.722899	4e8a2696-53d3-4c84-a0f9-4da5d5ce9fe1	1982
2444	uri://ed-fi.org/AddressTypeDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	\N	2023-11-08 13:57:38.014374	2023-11-08 13:57:38.014195	3f1397a5-3420-4d94-8ed0-7842e469d931	2444
1932	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Ronde Tribes	Grand Ronde Tribes	Confederated Tribes of the Grand Ronde Community of Oregon	\N	\N	\N	\N	2023-11-08 13:57:36.602632	2023-11-08 13:57:36.60257	621cbdae-be67-4e3d-9ca3-e5f166b95ff4	1932
1933	uri://ed-fi.org/TribalAffiliationDescriptor	Greenville	Greenville	Greenville Rancheria	\N	\N	\N	\N	2023-11-08 13:57:36.607299	2023-11-08 13:57:36.607271	49adf80b-f79e-4391-b4e0-66ca65e1a0eb	1933
1936	uri://ed-fi.org/TribalAffiliationDescriptor	Grindstone	Grindstone	Grindstone Indian Rancheria of Wintun-Wailaki Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.61121	2023-11-08 13:57:36.611197	6a65c64a-dd51-4923-9fdb-0221cbde9a87	1936
1941	uri://ed-fi.org/TribalAffiliationDescriptor	Hannahville	Hannahville	Hannahville Indian Community, Michigan	\N	\N	\N	\N	2023-11-08 13:57:36.621782	2023-11-08 13:57:36.621748	e71984a0-44b0-48bb-a32e-bd5e2ded707f	1941
1944	uri://ed-fi.org/TribalAffiliationDescriptor	Ho-Chunk	Ho-Chunk	Ho-Chunk Nation of Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:36.627859	2023-11-08 13:57:36.627827	0b43d7f4-e2c3-4fb3-826e-dec0ef1e1f9b	1944
1947	uri://ed-fi.org/TribalAffiliationDescriptor	Hoopa	Hoopa	Hoopa Valley Tribe, California	\N	\N	\N	\N	2023-11-08 13:57:36.635597	2023-11-08 13:57:36.635367	f173811e-791b-498d-9449-dca978702950	1947
1953	uri://ed-fi.org/TribalAffiliationDescriptor	Hughes	Hughes	Hughes Village	\N	\N	\N	\N	2023-11-08 13:57:36.650323	2023-11-08 13:57:36.650296	8bbf0fcc-129f-4575-abf1-20a3dedc4e2a	1953
1956	uri://ed-fi.org/TribalAffiliationDescriptor	Igiugig	Igiugig	Igiugig Village	\N	\N	\N	\N	2023-11-08 13:57:36.659091	2023-11-08 13:57:36.659061	4cb4a39e-2a64-4af9-a577-681e06b1e923	1956
1959	uri://ed-fi.org/TribalAffiliationDescriptor	Inaja	Inaja	Inaja Band of Diegueno Mission Indians of the Inaja and Cosmit Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:36.668145	2023-11-08 13:57:36.668117	ea5de3a1-5d7f-46ad-bb23-051dbeced991	1959
1967	uri://ed-fi.org/TribalAffiliationDescriptor	Jackson	Jackson	Jackson Band of Miwuk Indians	\N	\N	\N	\N	2023-11-08 13:57:36.685225	2023-11-08 13:57:36.685159	194a00f8-2cd9-4aec-9cb7-1db63f38cad9	1967
1971	uri://ed-fi.org/TribalAffiliationDescriptor	Jicarilla	Jicarilla	Jicarilla Apache Nation, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:36.694843	2023-11-08 13:57:36.694709	6ba57061-0823-48d2-a220-5740c4c48e44	1971
1974	uri://ed-fi.org/TribalAffiliationDescriptor	Kaibab	Kaibab	Kaibab Band of Paiute Indians of the Kaibab Indian Reservation, Arizona	\N	\N	\N	\N	2023-11-08 13:57:36.702958	2023-11-08 13:57:36.702931	4a898a7c-b1c3-41b7-bc1f-da4265dfccf0	1974
1976	uri://ed-fi.org/TribalAffiliationDescriptor	Kalispel	Kalispel	Kalispel Indian Community of the Kalispel Reservation	\N	\N	\N	\N	2023-11-08 13:57:36.707393	2023-11-08 13:57:36.707366	09dc15e1-1a8e-4707-8639-30e8eea1594b	1976
1978	uri://ed-fi.org/TribalAffiliationDescriptor	Kanatak	Kanatak	Native Village of Kanatak	\N	\N	\N	\N	2023-11-08 13:57:36.714122	2023-11-08 13:57:36.714095	1f602477-6d0e-4ada-8b81-7dd216110a9d	1978
1980	uri://ed-fi.org/TribalAffiliationDescriptor	Karuk	Karuk	Karuk Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.717652	2023-11-08 13:57:36.717615	93348260-2176-4a5a-9a3c-f5676fd7279b	1980
1981	uri://ed-fi.org/TribalAffiliationDescriptor	Karluk	Karluk	Native Village of Karluk	\N	\N	\N	\N	2023-11-08 13:57:36.721936	2023-11-08 13:57:36.721908	93b08b3c-6a61-4026-969b-0f28f2fdc6a6	1981
1983	uri://ed-fi.org/TribalAffiliationDescriptor	Kasigluk	Kasigluk	Kasigluk Traditional Elders Council	\N	\N	\N	\N	2023-11-08 13:57:36.72652	2023-11-08 13:57:36.726391	c1fed152-05b7-4ed7-b1a6-6cbabc6f0e8f	1983
1985	uri://ed-fi.org/TribalAffiliationDescriptor	Kaw	Kaw	Kaw Nation, Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.730822	2023-11-08 13:57:36.730792	3c6c52dc-4717-4f25-a695-f24554ee0538	1985
1988	uri://ed-fi.org/TribalAffiliationDescriptor	Kialegee	Kialegee	Kialegee Tribal Town	\N	\N	\N	\N	2023-11-08 13:57:36.737944	2023-11-08 13:57:36.737504	2b2e316d-d0d5-4bc1-8a75-1aeb28882635	1988
1994	uri://ed-fi.org/TribalAffiliationDescriptor	King Island	King Island	King Island Native Community	\N	\N	\N	\N	2023-11-08 13:57:36.748416	2023-11-08 13:57:36.74839	2a44dc10-ad28-4db8-8624-88f2c3f8dfbe	1994
1999	uri://ed-fi.org/TribalAffiliationDescriptor	Klawock	Klawock	Klawock Cooperative Association	\N	\N	\N	\N	2023-11-08 13:57:36.773506	2023-11-08 13:57:36.77348	29cbaa38-08d0-4eb3-87aa-87ad5c534661	1999
2005	uri://ed-fi.org/TribalAffiliationDescriptor	Kootenai	Kootenai	Kootenai Tribe of Idaho	\N	\N	\N	\N	2023-11-08 13:57:36.792952	2023-11-08 13:57:36.792924	58d7779a-d3ac-4f8c-bcfe-a23a9bf7dee4	2005
2008	uri://ed-fi.org/TribalAffiliationDescriptor	Koyuk	Koyuk	Native Village of Koyuk	\N	\N	\N	\N	2023-11-08 13:57:36.801901	2023-11-08 13:57:36.801875	91049960-cc71-4a2d-ab8a-24b152cdc0de	2008
2012	uri://ed-fi.org/TribalAffiliationDescriptor	Kwigillingok	Kwigillingok	Native Village of Kwigillingok	\N	\N	\N	\N	2023-11-08 13:57:36.813973	2023-11-08 13:57:36.813961	700820fd-5dd1-4692-bce6-5b987b43eb60	2012
2014	uri://ed-fi.org/TribalAffiliationDescriptor	La Jolla	La Jolla	La Jolla Band of Luiseno Indians, California	\N	\N	\N	\N	2023-11-08 13:57:36.819051	2023-11-08 13:57:36.818947	bd02c787-415c-4420-b5d8-4cf1888a45ac	2014
2017	uri://ed-fi.org/TribalAffiliationDescriptor	Kwinhagak	Kwinhagak	Native Village of Kwinhagak (aka Quinhagak)	\N	\N	\N	\N	2023-11-08 13:57:36.826287	2023-11-08 13:57:36.826214	b5b21168-907c-41be-be02-89670db34b2d	2017
2019	uri://ed-fi.org/TribalAffiliationDescriptor	La Posta	La Posta	La Posta Band of Diegueno Mission Indians of the La Posta Indian Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:36.832647	2023-11-08 13:57:36.832626	f94af103-c207-4374-b2e3-c1dae4bbfa4c	2019
2022	uri://ed-fi.org/TribalAffiliationDescriptor	Larsen Bay	Larsen Bay	Native Village of Larsen Bay	\N	\N	\N	\N	2023-11-08 13:57:36.840027	2023-11-08 13:57:36.839999	5f007daa-2e8d-4b21-812a-5b2e904423bb	2022
2028	uri://ed-fi.org/TribalAffiliationDescriptor	Los Coyotes	Los Coyotes	Los Coyotes Band of Cahuilla and Cupeno Indians, California	\N	\N	\N	\N	2023-11-08 13:57:36.853949	2023-11-08 13:57:36.853881	08b63493-63cd-46a8-a728-fdf893e088b1	2028
2034	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Sioux	Lower Sioux	Lower Sioux Indian Community in the State of Minnesota	\N	\N	\N	\N	2023-11-08 13:57:36.86504	2023-11-08 13:57:36.865027	a2bb0d01-465c-4ade-b216-fd829b942152	2034
2038	uri://ed-fi.org/TribalAffiliationDescriptor	Manchester	Manchester	Manchester Band of Pomo Indians of the Manchester Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.872962	2023-11-08 13:57:36.872949	448f7be1-ef30-4f0c-aecc-9870ef331951	2038
2041	uri://ed-fi.org/TribalAffiliationDescriptor	Manley Hot Springs	Manley Hot Springs	Manley Hot Springs Village	\N	\N	\N	\N	2023-11-08 13:57:36.881335	2023-11-08 13:57:36.88129	959610f3-3add-4421-b0d6-5de66844a397	2041
2043	uri://ed-fi.org/TribalAffiliationDescriptor	Mary's Igloo	Mary's Igloo	Native Village of Mary's Igloo	\N	\N	\N	\N	2023-11-08 13:57:36.884959	2023-11-08 13:57:36.884933	95588e73-e423-409a-bf74-03b892ffb162	2043
2045	uri://ed-fi.org/TribalAffiliationDescriptor	Mashpee	Mashpee	Mashpee Wampanoag Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.889324	2023-11-08 13:57:36.889281	81ee0556-219a-476b-b011-f23287e1404a	2045
1954	uri://ed-fi.org/TribalAffiliationDescriptor	Hualapai	Hualapai	Hualapai Indian Tribe of the Hualapai Indian Reservation, Arizona	\N	\N	\N	\N	2023-11-08 13:57:36.650979	2023-11-08 13:57:36.65093	102d2c92-0771-4a01-862b-88ad22a0403e	1954
1957	uri://ed-fi.org/TribalAffiliationDescriptor	Hydaburg	Hydaburg	Hydaburg Cooperative Association	\N	\N	\N	\N	2023-11-08 13:57:36.660034	2023-11-08 13:57:36.660007	70fd36cb-210b-414a-8fb1-d6379059ba10	1957
1961	uri://ed-fi.org/TribalAffiliationDescriptor	Inupiat Community of the Arctic Slope	Inupiat Community of the Arctic Slope	Inupiat Community of the Arctic Slope	\N	\N	\N	\N	2023-11-08 13:57:36.671704	2023-11-08 13:57:36.671519	34dff675-1c98-4e95-a1a3-62bf1ad696e1	1961
1962	uri://ed-fi.org/TribalAffiliationDescriptor	Ione	Ione	Ione Band of Miwok Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.675162	2023-11-08 13:57:36.675104	311131d0-4d19-4473-b164-c1b78528af18	1962
1966	uri://ed-fi.org/TribalAffiliationDescriptor	Ivanof Bay Tribe	Ivanof Bay Tribe	Ivanof Bay Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.682662	2023-11-08 13:57:36.682635	7421413a-23bb-481d-b371-ca3c1c5d9e66	1966
1969	uri://ed-fi.org/TribalAffiliationDescriptor	Jamul	Jamul	Jamul Indian Village of California	\N	\N	\N	\N	2023-11-08 13:57:36.693395	2023-11-08 13:57:36.693356	4587953a-e628-4ba1-b209-813b684cb0fe	1969
1972	uri://ed-fi.org/TribalAffiliationDescriptor	Kaguyuk	Kaguyuk	Kaguyak Village	\N	\N	\N	\N	2023-11-08 13:57:36.698366	2023-11-08 13:57:36.698335	20432fbb-60b6-4005-94ac-c711ae17717d	1972
1975	uri://ed-fi.org/TribalAffiliationDescriptor	Kaktovik	Kaktovik	Kaktovik Village (aka Barter Island)	\N	\N	\N	\N	2023-11-08 13:57:36.704804	2023-11-08 13:57:36.704777	bff4e265-045f-4f34-9aea-5756eb1ab487	1975
1990	uri://ed-fi.org/TribalAffiliationDescriptor	Ketchikan	Ketchikan	Ketchikan Indian Community	\N	\N	\N	\N	2023-11-08 13:57:36.739032	2023-11-08 13:57:36.738986	4a22e3b8-2955-4725-81cf-91e04904e4ec	1990
1993	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Oklahoma	Kickapoo of Oklahoma	Kickapoo Tribe of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.748184	2023-11-08 13:57:36.748156	d1a2558f-2097-49df-bf80-458f0daa9683	1993
1996	uri://ed-fi.org/TribalAffiliationDescriptor	Kiowa	Kiowa	Kiowa Indian Tribe of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.766132	2023-11-08 13:57:36.765968	9b03be6f-d421-477c-904a-90a033257c1d	1996
2001	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti Kaah	Kluti Kaah	Native Village of Kluti Kaah (aka Copper Center)	\N	\N	\N	\N	2023-11-08 13:57:36.781039	2023-11-08 13:57:36.780669	b1b117ce-54d3-4c7b-9270-a93dabebd81b	2001
2003	uri://ed-fi.org/TribalAffiliationDescriptor	Knik	Knik	Knik Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.78656	2023-11-08 13:57:36.786424	e0f9d040-4cfb-44e7-8a97-d63d65d483ce	2003
2007	uri://ed-fi.org/TribalAffiliationDescriptor	Kotlik	Kotlik	Village of Kotlik	\N	\N	\N	\N	2023-11-08 13:57:36.79743	2023-11-08 13:57:36.797406	0eabf786-aa69-437f-9da3-efb09f5a2717	2007
2013	uri://ed-fi.org/TribalAffiliationDescriptor	Kwethluk	Kwethluk	Organized Village of Kwethluk	\N	\N	\N	\N	2023-11-08 13:57:36.81479	2023-11-08 13:57:36.81475	fdabd193-01c2-4bab-9d86-920b49d08185	2013
2015	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Courte Oreilles	Lac Courte Oreilles	Lac Courte Oreilles Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:36.822036	2023-11-08 13:57:36.822008	63001dfc-8119-42d8-b90e-4dc3f308f09e	2015
2016	uri://ed-fi.org/TribalAffiliationDescriptor	Lac du Flambeau	Lac du Flambeau	Lac du Flambeau Band of Lake Superior Chippewa Indians of the Lac du Flambeau Reservation of Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:36.825506	2023-11-08 13:57:36.825439	9e96f9d2-6b1d-421b-8361-de03239ad36f	2016
2018	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Vieux	Lac Vieux	Lac Vieux Desert Band of Lake Superior Chippewa Indians of Michigan	\N	\N	\N	\N	2023-11-08 13:57:36.830958	2023-11-08 13:57:36.830739	f34cadf0-96fb-4590-9a70-ada9543e1887	2018
2023	uri://ed-fi.org/TribalAffiliationDescriptor	Levelock	Levelock	Levelock Village	\N	\N	\N	\N	2023-11-08 13:57:36.842577	2023-11-08 13:57:36.842556	262d5364-30d4-42e6-990f-ead0387785e2	2023
2026	uri://ed-fi.org/TribalAffiliationDescriptor	Little River	Little River	Little River Band of Ottawa Indians, Michigan	\N	\N	\N	\N	2023-11-08 13:57:36.84743	2023-11-08 13:57:36.847276	490edee5-9c34-4f4b-8002-ced83757c875	2026
2030	uri://ed-fi.org/TribalAffiliationDescriptor	Lone Pine	Lone Pine	Lone Pine Paiute-Shoshone Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.854879	2023-11-08 13:57:36.854866	be21d8d1-e73c-4302-ba86-18573f5e3d8a	2030
2032	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Brule	Lower Brule	Lower Brule Sioux Tribe of the Lower Brule Reservation, South Dakota	\N	\N	\N	\N	2023-11-08 13:57:36.860944	2023-11-08 13:57:36.860883	da2abc6c-91f1-4ec7-a7b6-9bad67f2cbce	2032
2036	uri://ed-fi.org/TribalAffiliationDescriptor	Makah	Makah	Makah Indian Tribe of the Makah Indian Reservation	\N	\N	\N	\N	2023-11-08 13:57:36.870624	2023-11-08 13:57:36.870597	190ae82d-0989-4423-b17a-ca956f9f5614	2036
2040	uri://ed-fi.org/TribalAffiliationDescriptor	Manzanita	Manzanita	Manzanita Band of Diegueno Mission Indians of the Manzanita Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:36.878063	2023-11-08 13:57:36.878025	3a956e27-5549-408b-ac2e-0e391233400c	2040
2044	uri://ed-fi.org/TribalAffiliationDescriptor	Mashantucket Pequot	Mashantucket Pequot	Mashantucket Pequot Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.887357	2023-11-08 13:57:36.887329	40536e6c-4853-49e2-b1d9-97de07f47ccb	2044
2047	uri://ed-fi.org/TribalAffiliationDescriptor	Mcgrath	Mcgrath	McGrath Native Village	\N	\N	\N	\N	2023-11-08 13:57:36.894193	2023-11-08 13:57:36.894166	b7e4638e-245a-40ee-aa8f-6e418dcea887	2047
2053	uri://ed-fi.org/TribalAffiliationDescriptor	Metlakatla	Metlakatla	Metlakatla Indian Community, Annette Island Reserve	\N	\N	\N	\N	2023-11-08 13:57:36.916301	2023-11-08 13:57:36.915902	9366b777-b4fd-4221-8f7b-c314e9074c62	2053
2057	uri://ed-fi.org/TribalAffiliationDescriptor	Mi'kmaq Nation	Mi'kmaq Nation	Mi'kmaq Nation	\N	\N	\N	\N	2023-11-08 13:57:36.93124	2023-11-08 13:57:36.93115	6dac0b58-d698-47fe-a5e6-5194fe3d6aa5	2057
2060	uri://ed-fi.org/TribalAffiliationDescriptor	Minto	Minto	Native Village of Minto	\N	\N	\N	\N	2023-11-08 13:57:36.941376	2023-11-08 13:57:36.941348	8d4c60a0-24aa-44fc-bca9-e54d8b16f587	2060
2063	uri://ed-fi.org/TribalAffiliationDescriptor	Moapa	Moapa	Moapa Band of Paiute Indians of the Moapa River Indian Reservation, Nevada	\N	\N	\N	\N	2023-11-08 13:57:36.954779	2023-11-08 13:57:36.954753	a06d8774-2bd4-4f3a-a5ee-3987cb327b52	2063
2066	uri://ed-fi.org/TribalAffiliationDescriptor	Modoc	Modoc	Modoc Nation	\N	\N	\N	\N	2023-11-08 13:57:36.988856	2023-11-08 13:57:36.988545	8767e898-ce23-4130-bb9e-b8e50f974c5e	2066
2067	uri://ed-fi.org/TribalAffiliationDescriptor	Mooretown	Mooretown	Mooretown Rancheria of Maidu Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.993744	2023-11-08 13:57:36.993708	2d6fe00c-ebce-4fa7-8e44-4610cbf9b249	2067
2077	uri://ed-fi.org/TribalAffiliationDescriptor	Napaimute	Napaimute	Native Village of Napaimute	\N	\N	\N	\N	2023-11-08 13:57:37.018804	2023-11-08 13:57:37.018768	693e17e8-1dd2-4783-9672-409746f3b295	2077
1984	uri://ed-fi.org/TribalAffiliationDescriptor	Kashia	Kashia	Kashia Band of Pomo Indians of the Stewarts Point Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:36.72842	2023-11-08 13:57:36.727756	875081d2-d0f6-4695-b4f9-6096489df628	1984
1986	uri://ed-fi.org/TribalAffiliationDescriptor	Kenaitze	Kenaitze	Kenaitze Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.73222	2023-11-08 13:57:36.73219	633b8efd-c619-414f-be3b-d8818fdf9a05	1986
1989	uri://ed-fi.org/TribalAffiliationDescriptor	Kiana	Kiana	Native Village of Kiana	\N	\N	\N	\N	2023-11-08 13:57:36.737785	2023-11-08 13:57:36.737758	c0916250-b013-47ef-89fc-d1174befc678	1989
1992	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Texas	Kickapoo of Texas	Kickapoo Traditional Tribe of Texas	\N	\N	\N	\N	2023-11-08 13:57:36.747807	2023-11-08 13:57:36.747779	df74113e-bbe6-43c7-a093-6d410d5d3100	1992
1998	uri://ed-fi.org/TribalAffiliationDescriptor	Kipnuk	Kipnuk	Native Village of Kipnuk	\N	\N	\N	\N	2023-11-08 13:57:36.770583	2023-11-08 13:57:36.770252	f6d65b38-65df-4e6a-8014-5ca94a6b13cf	1998
2002	uri://ed-fi.org/TribalAffiliationDescriptor	Kobuk	Kobuk	Native Village of Kobuk	\N	\N	\N	\N	2023-11-08 13:57:36.785953	2023-11-08 13:57:36.785915	ed7c0242-1cba-4473-8621-5ba99b63ee01	2002
2004	uri://ed-fi.org/TribalAffiliationDescriptor	Kokhanok	Kokhanok	Kokhanok Village	\N	\N	\N	\N	2023-11-08 13:57:36.790554	2023-11-08 13:57:36.790482	1f120427-6431-4990-b502-0339fab31b21	2004
2006	uri://ed-fi.org/TribalAffiliationDescriptor	Kongiganak	Kongiganak	Native Village of Kongiganak	\N	\N	\N	\N	2023-11-08 13:57:36.797106	2023-11-08 13:57:36.796994	2d6c2eff-a227-473d-8903-a543b85cc3b3	2006
2010	uri://ed-fi.org/TribalAffiliationDescriptor	Kotzebue	Kotzebue	Native Village of Kotzebue	\N	\N	\N	\N	2023-11-08 13:57:36.808874	2023-11-08 13:57:36.808562	5668a828-31c2-4bcf-b7c6-4ba72727b32f	2010
2020	uri://ed-fi.org/TribalAffiliationDescriptor	Las Vegas	Las Vegas	Las Vegas Tribe of Paiute Indians of the Las Vegas Indian Colony, Nevada	\N	\N	\N	\N	2023-11-08 13:57:36.83524	2023-11-08 13:57:36.835227	1728c53e-658c-4ee1-9ab7-557ec7a7092e	2020
2024	uri://ed-fi.org/TribalAffiliationDescriptor	Little Shell Tribe 	Little Shell Tribe 	Little Shell Tribe of Chippewa Indians of Montana	\N	\N	\N	\N	2023-11-08 13:57:36.845595	2023-11-08 13:57:36.845559	8b00ecab-e336-4554-9fd4-51ffa1a3953f	2024
2029	uri://ed-fi.org/TribalAffiliationDescriptor	Lovelock	Lovelock	Lovelock Paiute Tribe of the Lovelock Indian Colony, Nevada	\N	\N	\N	\N	2023-11-08 13:57:36.85446	2023-11-08 13:57:36.854409	4c20dc39-f958-4a60-a279-87a8686dd27e	2029
2037	uri://ed-fi.org/TribalAffiliationDescriptor	Lummi	Lummi	Lummi Tribe of the Lummi Reservation	\N	\N	\N	\N	2023-11-08 13:57:36.867548	2023-11-08 13:57:36.867519	dd574017-9f40-4354-8c7c-563f713159de	2037
2039	uri://ed-fi.org/TribalAffiliationDescriptor	Manokotak	Manokotak	Manokotak Village	\N	\N	\N	\N	2023-11-08 13:57:36.876231	2023-11-08 13:57:36.876192	c81630d5-cf55-40c9-a492-6c6c3da1a221	2039
2042	uri://ed-fi.org/TribalAffiliationDescriptor	Marshall	Marshall	Native Village of Marshall (aka Fortuna Ledge)	\N	\N	\N	\N	2023-11-08 13:57:36.883622	2023-11-08 13:57:36.883597	6621b208-8d2a-40f7-8621-f3480b484f82	2042
2046	uri://ed-fi.org/TribalAffiliationDescriptor	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band of Pottawatomi Indians of Michigan	\N	\N	\N	\N	2023-11-08 13:57:36.894029	2023-11-08 13:57:36.894002	64a21432-4415-40f8-b55d-0ddb66620bc7	2046
2051	uri://ed-fi.org/TribalAffiliationDescriptor	Mentasta	Mentasta	Mentasta Traditional Council	\N	\N	\N	\N	2023-11-08 13:57:36.912619	2023-11-08 13:57:36.912588	11e61909-1be5-406a-8fb9-55e62b94ec5b	2051
2061	uri://ed-fi.org/TribalAffiliationDescriptor	Minnesota Chippewa	Minnesota Chippewa	Minnesota Chippewa Tribe, Minnesota	\N	\N	\N	\N	2023-11-08 13:57:36.941411	2023-11-08 13:57:36.941288	3d443834-6e6a-4b88-ab1a-4dc22079a3ef	2061
2073	uri://ed-fi.org/TribalAffiliationDescriptor	Nanwalek	Nanwalek	Native Village of Nanwalek (aka English Bay)	\N	\N	\N	\N	2023-11-08 13:57:37.01107	2023-11-08 13:57:37.011057	b9c01060-34bc-43f3-b64d-53b4151c28f6	2073
2076	uri://ed-fi.org/TribalAffiliationDescriptor	Napaskiak	Napaskiak	Native Village of Napaskiak	\N	\N	\N	\N	2023-11-08 13:57:37.017084	2023-11-08 13:57:37.017059	e3b8753e-4156-49fb-946d-5053c711aafc	2076
2084	uri://ed-fi.org/TribalAffiliationDescriptor	Newhalen	Newhalen	Newhalen Village	\N	\N	\N	\N	2023-11-08 13:57:37.03902	2023-11-08 13:57:37.038973	0a7a5822-1ed4-44cc-8991-4bf72ecfd36e	2084
2092	uri://ed-fi.org/TribalAffiliationDescriptor	Newtok	Newtok	Newtok Village	\N	\N	\N	\N	2023-11-08 13:57:37.072932	2023-11-08 13:57:37.072867	07185852-c270-4efc-9cad-3be380eb3719	2092
2099	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Cheyenne	Northern Cheyenne	Northern Cheyenne Tribe of the Northern Cheyenne Indian Reservation, Montana	\N	\N	\N	\N	2023-11-08 13:57:37.095857	2023-11-08 13:57:37.095823	f7d33717-9251-4f3a-8497-763f60010063	2099
2100	uri://ed-fi.org/TribalAffiliationDescriptor	Northway	Northway	Northway Village	\N	\N	\N	\N	2023-11-08 13:57:37.100297	2023-11-08 13:57:37.09988	0f28c48f-7210-4039-b3a6-203fe3ef5ace	2100
2104	uri://ed-fi.org/TribalAffiliationDescriptor	Nulato	Nulato	Nulato Village	\N	\N	\N	\N	2023-11-08 13:57:37.114113	2023-11-08 13:57:37.113565	8241ee13-af29-4922-a801-5ecf422a2c21	2104
2108	uri://ed-fi.org/TribalAffiliationDescriptor	Nottawaseppi Potawatomi	Nottawaseppi Potawatomi	Nottawaseppi Huron Band of the Potawatomi, Michigan	\N	\N	\N	\N	2023-11-08 13:57:37.121296	2023-11-08 13:57:37.120335	d23d6c79-32d4-410a-b24c-31f5168aa02f	2108
2110	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamiut	Ohogamiut	Village of Ohogamiut	\N	\N	\N	\N	2023-11-08 13:57:37.130454	2023-11-08 13:57:37.129444	9f39c9b8-f686-4335-b6ec-8edf6791c76c	2110
2112	uri://ed-fi.org/TribalAffiliationDescriptor	Onondaga	Onondaga	Onondaga Nation	\N	\N	\N	\N	2023-11-08 13:57:37.137585	2023-11-08 13:57:37.137557	7f919473-2c35-4b69-9179-5fcaf0701158	2112
2113	uri://ed-fi.org/TribalAffiliationDescriptor	Osage Nation	Osage Nation	The Osage Nation	\N	\N	\N	\N	2023-11-08 13:57:37.142685	2023-11-08 13:57:37.142667	be1f63c3-e715-44cd-81b8-74881435b422	2113
2117	uri://ed-fi.org/TribalAffiliationDescriptor	Oscarville	Oscarville	Oscarville Traditional Village	\N	\N	\N	\N	2023-11-08 13:57:37.149975	2023-11-08 13:57:37.149945	4fa12d7f-2bc1-46db-b86f-32b398997002	2117
2118	uri://ed-fi.org/TribalAffiliationDescriptor	Ouzinkie	Ouzinkie	Native Village of Ouzinkie	\N	\N	\N	\N	2023-11-08 13:57:37.155859	2023-11-08 13:57:37.15582	ae3e2842-f27c-4e86-9c3e-230b58294695	2118
2121	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute of Utah	Paiute of Utah	Paiute Indian Tribe of Utah (Cedar Band of Paiutes, Kanosh Band of Paiutes, Koosharem Band of Paiutes, Indian Peaks Band of Paiutes, and Shivwits Band of Paiutes)	\N	\N	\N	\N	2023-11-08 13:57:37.167282	2023-11-08 13:57:37.167165	cb8d7ecd-1f3c-42cf-8234-b0a3ac0d88f7	2121
2123	uri://ed-fi.org/TribalAffiliationDescriptor	Pala	Pala	Pala Band of Mission Indians	\N	\N	\N	\N	2023-11-08 13:57:37.173959	2023-11-08 13:57:37.173136	c7c8ca32-64f5-40bd-a115-8d528ffba45c	2123
1991	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Kansas	Kickapoo of Kansas	Kickapoo Tribe of Indians of the Kickapoo Reservation in Kansas	\N	\N	\N	\N	2023-11-08 13:57:36.745147	2023-11-08 13:57:36.745111	b33617bc-e186-46b1-8af4-27ccb17770e4	1991
1995	uri://ed-fi.org/TribalAffiliationDescriptor	King Salmon	King Salmon	King Salmon Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.764934	2023-11-08 13:57:36.764918	2e90abe0-510d-4408-b7cf-8505da781cef	1995
1997	uri://ed-fi.org/TribalAffiliationDescriptor	Kivalina	Kivalina	Native Village of Kivalina	\N	\N	\N	\N	2023-11-08 13:57:36.768384	2023-11-08 13:57:36.768355	c207f1ee-bf39-4362-84d0-10ed7edcd8c9	1997
2000	uri://ed-fi.org/TribalAffiliationDescriptor	Klamath	Klamath	Klamath Tribes	\N	\N	\N	\N	2023-11-08 13:57:36.775099	2023-11-08 13:57:36.775084	7b69bf41-e8e5-41b9-9ae4-e897813b58b7	2000
2009	uri://ed-fi.org/TribalAffiliationDescriptor	Koi	Koi	Koi Nation of Northern California	\N	\N	\N	\N	2023-11-08 13:57:36.799124	2023-11-08 13:57:36.798788	6b6bc1ed-1f7e-4ff9-985c-b08b61ad08ae	2009
2011	uri://ed-fi.org/TribalAffiliationDescriptor	Koyukuk	Koyukuk	Koyukuk Native Village	\N	\N	\N	\N	2023-11-08 13:57:36.809054	2023-11-08 13:57:36.808996	e5d7488e-e2e8-4b7e-bb3d-4684f539efe6	2011
2021	uri://ed-fi.org/TribalAffiliationDescriptor	Leech Lake	Leech Lake	Minnesota Chippewa Tribe - Leech Lake Band	\N	\N	\N	\N	2023-11-08 13:57:36.838461	2023-11-08 13:57:36.838164	c13de7af-cc68-4eba-92b4-35a14a2d8b3e	2021
2025	uri://ed-fi.org/TribalAffiliationDescriptor	Lime	Lime	Lime Village	\N	\N	\N	\N	2023-11-08 13:57:36.846764	2023-11-08 13:57:36.846718	4c7ea6c6-fc12-44b6-811e-b97426382530	2025
2027	uri://ed-fi.org/TribalAffiliationDescriptor	Little Traverse	Little Traverse	Little Traverse Bay Bands of Odawa Indians, Michigan	\N	\N	\N	\N	2023-11-08 13:57:36.850354	2023-11-08 13:57:36.850329	5af32bd0-1655-4120-aff8-1485afed584c	2027
2031	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Elwha	Lower Elwha	Lower Elwha Tribal Community	\N	\N	\N	\N	2023-11-08 13:57:36.859092	2023-11-08 13:57:36.859073	63a9aaa4-7740-4a26-b575-ad7df9805b8b	2031
2033	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Kalskag	Lower Kalskag	Village of Lower Kalskag	\N	\N	\N	\N	2023-11-08 13:57:36.863742	2023-11-08 13:57:36.86371	9d1e5f1b-cc35-41d7-bf71-248d2b227744	2033
2035	uri://ed-fi.org/TribalAffiliationDescriptor	Lytton	Lytton	Lytton Rancheria of California	\N	\N	\N	\N	2023-11-08 13:57:36.868277	2023-11-08 13:57:36.868226	30ed2ac8-45bd-4d5e-8448-9222944c3b47	2035
2049	uri://ed-fi.org/TribalAffiliationDescriptor	Mekoryuk	Mekoryuk	Native Village of Mekoryuk	\N	\N	\N	\N	2023-11-08 13:57:36.897365	2023-11-08 13:57:36.896666	82c8e64c-838b-42b8-8c58-06911090ee60	2049
2050	uri://ed-fi.org/TribalAffiliationDescriptor	Menominee	Menominee	Menominee Indian Tribe of Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:36.907473	2023-11-08 13:57:36.907409	3884c830-9db9-41f3-b378-49b17b8b485f	2050
2054	uri://ed-fi.org/TribalAffiliationDescriptor	Miami of Oklahoma	Miami of Oklahoma	Miami Tribe of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:36.919316	2023-11-08 13:57:36.919288	c8dae47c-c12c-47c8-b77a-55ec2e6eb84b	2054
2056	uri://ed-fi.org/TribalAffiliationDescriptor	Miccosukee	Miccosukee	Miccosukee Tribe of Indians	\N	\N	\N	\N	2023-11-08 13:57:36.928363	2023-11-08 13:57:36.928314	a8d0fe00-f197-47b3-8e86-75dcf4cdaf72	2056
2059	uri://ed-fi.org/TribalAffiliationDescriptor	Middletown	Middletown	Middletown Rancheria of Pomo Indians of California	\N	\N	\N	\N	2023-11-08 13:57:36.938714	2023-11-08 13:57:36.938662	2eee7460-7bbb-4fcd-9c3d-796fbc80b081	2059
2062	uri://ed-fi.org/TribalAffiliationDescriptor	Mississippi Choctaw	Mississippi Choctaw	Mississippi Band of Choctaw Indians	\N	\N	\N	\N	2023-11-08 13:57:36.951021	2023-11-08 13:57:36.950985	4a18f434-2d5b-487e-a953-3e5ed09a9d21	2062
2064	uri://ed-fi.org/TribalAffiliationDescriptor	Mohegan	Mohegan	Mohegan Tribe of Indians of Connecticut	\N	\N	\N	\N	2023-11-08 13:57:36.987954	2023-11-08 13:57:36.987853	955694a3-fc37-4d5e-a3cf-20498b9407ab	2064
2068	uri://ed-fi.org/TribalAffiliationDescriptor	Muckleshoot	Muckleshoot	Muckleshoot Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:36.997834	2023-11-08 13:57:36.997776	f31e6319-a993-4e2d-aaf4-aae043f35c4f	2068
2070	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee (Creek) Nation	Muscogee (Creek) Nation	The Muscogee (Creek) Nation	\N	\N	\N	\N	2023-11-08 13:57:37.001842	2023-11-08 13:57:37.001558	9c644d98-d144-4e35-bf59-a1ae70d759b5	2070
2072	uri://ed-fi.org/TribalAffiliationDescriptor	Nansemond Indian Tribe	Nansemond Indian Tribe	Nansemond Indian Nation	\N	\N	\N	\N	2023-11-08 13:57:37.008065	2023-11-08 13:57:37.007965	8f388d7e-aaaf-4ad2-9a01-531fd9e7186e	2072
2075	uri://ed-fi.org/TribalAffiliationDescriptor	Narragansett	Narragansett	Narragansett Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.016918	2023-11-08 13:57:37.01689	cc5d3747-ddf1-4bf3-9bea-6e57023fae6d	2075
2078	uri://ed-fi.org/TribalAffiliationDescriptor	Native Village of Atqasuk	Native Village of Atqasuk	Native Village of Atqasuk	\N	\N	\N	\N	2023-11-08 13:57:37.022408	2023-11-08 13:57:37.022383	140f4026-9d85-4f7a-b163-cc58899830fe	2078
2081	uri://ed-fi.org/TribalAffiliationDescriptor	Nenana	Nenana	Nenana Native Association	\N	\N	\N	\N	2023-11-08 13:57:37.028662	2023-11-08 13:57:37.028609	4cb67abc-df3b-4239-8657-1c6ecb8e0583	2081
2083	uri://ed-fi.org/TribalAffiliationDescriptor	New Koliganek	New Koliganek	New Koliganek Village Council	\N	\N	\N	\N	2023-11-08 13:57:37.035383	2023-11-08 13:57:37.035353	f634955e-114f-436f-ac8b-acfec020a19b	2083
2085	uri://ed-fi.org/TribalAffiliationDescriptor	Nez Perce	Nez Perce	Nez Perce Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.043046	2023-11-08 13:57:37.043018	7ce96173-323a-4c9c-b4ce-2590c31de3b7	2085
2090	uri://ed-fi.org/TribalAffiliationDescriptor	Nightmute	Nightmute	Native Village of Nightmute	\N	\N	\N	\N	2023-11-08 13:57:37.059349	2023-11-08 13:57:37.059322	ded14e57-108b-465d-8a9d-0627bf161a46	2090
2098	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Arapaho	Northern Arapaho	Northern Arapaho Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	\N	2023-11-08 13:57:37.089887	2023-11-08 13:57:37.08986	4f7dfb25-8263-42dd-8d87-5f078cb3aac3	2098
2102	uri://ed-fi.org/TribalAffiliationDescriptor	Nuiqsut	Nuiqsut	Native Village of Nuiqsut (aka Nooiksut)	\N	\N	\N	\N	2023-11-08 13:57:37.10721	2023-11-08 13:57:37.107194	23baae22-8ddc-4005-8d9f-2e5627b6cf32	2102
2103	uri://ed-fi.org/TribalAffiliationDescriptor	Nunakauyarmiut	Nunakauyarmiut	Nunakauyarmiut Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.113913	2023-11-08 13:57:37.113888	d0d1b674-5709-4045-9607-44bec21520f9	2103
2107	uri://ed-fi.org/TribalAffiliationDescriptor	Nunapitchuk	Nunapitchuk	Native Village of Nunapitchuk	\N	\N	\N	\N	2023-11-08 13:57:37.120916	2023-11-08 13:57:37.120772	37a0d5d4-828e-4ffc-a2ba-1a1d44a18eba	2107
2119	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida Nation (Wisconsin)	Oneida Nation (Wisconsin)	Oneida Nation	\N	\N	\N	\N	2023-11-08 13:57:37.15598	2023-11-08 13:57:37.155546	a4c39eb7-0f01-4776-a952-f26b9290e0ae	2119
3049	uri://ed-fi.org/InternetAccessDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:41.13148	2023-11-08 13:57:41.131443	4f853352-810f-44a7-ae90-764834eeb1f4	3049
2052	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero Apache	Mescalero Apache	Mescalero Apache Tribe of the Mescalero Reservation, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:36.913015	2023-11-08 13:57:36.912954	dfab90e4-1039-480d-973c-8515bf6cc62e	2052
2055	uri://ed-fi.org/TribalAffiliationDescriptor	Mesa Grande	Mesa Grande	Mesa Grande Band of Diegueno Mission Indians of the Mesa Grande Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:36.921256	2023-11-08 13:57:36.921228	bdecd0ea-b298-4e4a-96c6-ed60a4cba69d	2055
2058	uri://ed-fi.org/TribalAffiliationDescriptor	Mille Lacs	Mille Lacs	Minnesota Chippewa Tribe - Mille Lacs Band	\N	\N	\N	\N	2023-11-08 13:57:36.931654	2023-11-08 13:57:36.93164	381ac87a-b761-45ef-8ff2-130d54fae78a	2058
2065	uri://ed-fi.org/TribalAffiliationDescriptor	Monacan Indian Nation	Monacan Indian Nation	Monacan Indian Nation	\N	\N	\N	\N	2023-11-08 13:57:36.988747	2023-11-08 13:57:36.988709	18fdf600-9a0f-448f-9702-adf7de7e5c6b	2065
2069	uri://ed-fi.org/TribalAffiliationDescriptor	Morongo	Morongo	Morongo Band of Mission Indians, California	\N	\N	\N	\N	2023-11-08 13:57:36.999717	2023-11-08 13:57:36.999588	111fe9dc-8956-4bb0-b1ad-c1ad74226128	2069
2071	uri://ed-fi.org/TribalAffiliationDescriptor	Naknek	Naknek	Naknek Native Village	\N	\N	\N	\N	2023-11-08 13:57:37.005375	2023-11-08 13:57:37.005349	4228d8e3-044e-43ce-be86-447456426431	2071
2074	uri://ed-fi.org/TribalAffiliationDescriptor	Napakiak	Napakiak	Native Village of Napakiak	\N	\N	\N	\N	2023-11-08 13:57:37.015357	2023-11-08 13:57:37.015277	c410d7a0-8e2b-4b3a-901e-484d5cd7dc57	2074
2079	uri://ed-fi.org/TribalAffiliationDescriptor	Navajo	Navajo	Navajo Nation, Arizona, New Mexico & Utah	\N	\N	\N	\N	2023-11-08 13:57:37.024519	2023-11-08 13:57:37.024492	d3ac0f80-15d8-4f6f-8fb6-b75b0e696d7e	2079
2082	uri://ed-fi.org/TribalAffiliationDescriptor	New Stuyahok	New Stuyahok	New Stuyahok Village	\N	\N	\N	\N	2023-11-08 13:57:37.03231	2023-11-08 13:57:37.032282	ca6972ae-14d2-4b78-84cc-398458a11c51	2082
2087	uri://ed-fi.org/TribalAffiliationDescriptor	Ninilchik	Ninilchik	Ninilchik Village	\N	\N	\N	\N	2023-11-08 13:57:37.051531	2023-11-08 13:57:37.051505	88df8f52-dfb7-4049-8f13-a325172ec324	2087
2089	uri://ed-fi.org/TribalAffiliationDescriptor	Nisqually	Nisqually	Nisqually Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.055932	2023-11-08 13:57:37.055905	d7a0caa0-40c1-470f-8c23-f8746cd798aa	2089
2093	uri://ed-fi.org/TribalAffiliationDescriptor	Nome	Nome	Nome Eskimo Community	\N	\N	\N	\N	2023-11-08 13:57:37.074478	2023-11-08 13:57:37.074448	590b7ef1-b44f-4b36-9c5a-2862e232f922	2093
2095	uri://ed-fi.org/TribalAffiliationDescriptor	Noorvik	Noorvik	Noorvik Native Community	\N	\N	\N	\N	2023-11-08 13:57:37.081125	2023-11-08 13:57:37.081097	616ec734-7788-4812-b75f-d75a41ad1f36	2095
2096	uri://ed-fi.org/TribalAffiliationDescriptor	Nondalton	Nondalton	Nondalton Village	\N	\N	\N	\N	2023-11-08 13:57:37.084231	2023-11-08 13:57:37.084202	73f4e9e0-87fa-4fa8-b09e-d90b512b8245	2096
2106	uri://ed-fi.org/TribalAffiliationDescriptor	Oglala Sioux	Oglala Sioux	Oglala Sioux Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.120542	2023-11-08 13:57:37.120528	b18b5217-64cd-46ba-aac8-c344f6d64be2	2106
2109	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay Owingeh	Ohkay Owingeh	Ohkay Owingeh, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.130344	2023-11-08 13:57:37.130316	80911e0a-dfa4-4209-a424-4689b70c1f5e	2109
2115	uri://ed-fi.org/TribalAffiliationDescriptor	Orutsararmiut	Orutsararmiut	Orutsararmiut Traditional Native Council	\N	\N	\N	\N	2023-11-08 13:57:37.143997	2023-11-08 13:57:37.14397	81cdd6ae-ad12-4e84-a867-ba12cb018407	2115
2116	uri://ed-fi.org/TribalAffiliationDescriptor	Otoe-Missouria	Otoe-Missouria	Otoe-Missouria Tribe of Indians, Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.148867	2023-11-08 13:57:37.148802	ad4d9c4e-0e97-468f-8c59-f6495c688cdd	2116
2127	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Indian Township	Passamaquoddy Indian Township	Passamaquoddy Tribe - Indian Township	\N	\N	\N	\N	2023-11-08 13:57:37.185418	2023-11-08 13:57:37.18539	73235f5f-ddb2-41ad-a6ce-38b0cbfd0f1d	2127
2130	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Tribe	Passamaquoddy Tribe	Passamaquoddy Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.197055	2023-11-08 13:57:37.197027	5105652a-f586-49f4-a3a6-c0860d2b4999	2130
2133	uri://ed-fi.org/TribalAffiliationDescriptor	Pawnee	Pawnee	Pawnee Nation of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.201393	2023-11-08 13:57:37.201356	762bc559-46f3-4439-928b-396677c5cf35	2133
2136	uri://ed-fi.org/TribalAffiliationDescriptor	Pedro Bay	Pedro Bay	Pedro Bay Village	\N	\N	\N	\N	2023-11-08 13:57:37.209875	2023-11-08 13:57:37.209287	8adc4627-b7c8-48db-b704-57f1e2181c76	2136
2140	uri://ed-fi.org/TribalAffiliationDescriptor	Picayune	Picayune	Picayune Rancheria of Chukchansi Indians of California	\N	\N	\N	\N	2023-11-08 13:57:37.228146	2023-11-08 13:57:37.228103	1814030b-4335-4c7f-9d36-aa8460c70b45	2140
2143	uri://ed-fi.org/TribalAffiliationDescriptor	Pinoleville	Pinoleville	Pinoleville Pomo Nation, California	\N	\N	\N	\N	2023-11-08 13:57:37.234558	2023-11-08 13:57:37.234532	1a8262d6-f1f0-4803-8fdb-f102b5a3a478	2143
2145	uri://ed-fi.org/TribalAffiliationDescriptor	Platinum	Platinum	Platinum Traditional Village	\N	\N	\N	\N	2023-11-08 13:57:37.239694	2023-11-08 13:57:37.239577	31c19d7b-936e-448b-ad9d-d295701379c6	2145
2151	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Nebraska	Ponca of Nebraska	Ponca Tribe of Nebraska	\N	\N	\N	\N	2023-11-08 13:57:37.248959	2023-11-08 13:57:37.248932	a0f53ed5-f73c-46e4-9d91-4c85262fdfb3	2151
2152	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Oklahoma	Ponca of Oklahoma	Ponca Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.254826	2023-11-08 13:57:37.254786	4a000957-184b-4400-8781-f5954e4541a9	2152
2156	uri://ed-fi.org/TribalAffiliationDescriptor	Port Lions	Port Lions	Native Village of Port Lions	\N	\N	\N	\N	2023-11-08 13:57:37.262056	2023-11-08 13:57:37.262029	87319c65-34fa-4a3b-910f-2088e067102c	2156
2161	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Band	Prairie Band	Prairie Band Potawatomi Nation	\N	\N	\N	\N	2023-11-08 13:57:37.278141	2023-11-08 13:57:37.27785	60bb277a-2a58-4b0c-86d5-33501b360efa	2161
2164	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Isleta	Pueblo of Isleta	Pueblo of Isleta, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.28574	2023-11-08 13:57:37.285703	de4e9136-ae2c-442d-8ea6-820b91ee80bd	2164
2167	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Nambe	Pueblo of Nambe	Pueblo of Nambe, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.291397	2023-11-08 13:57:37.29136	b2a1d661-5c99-4c6d-9da7-7acc41f758e7	2167
2170	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Felipe	Pueblo of San Felipe	Pueblo of San Felipe, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.29785	2023-11-08 13:57:37.297793	83141075-03e8-431a-afad-2d77a572ad75	2170
2176	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zia	Pueblo of Zia	Pueblo of Zia, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.313668	2023-11-08 13:57:37.313526	07814947-e743-4c42-8958-b0fcb5385af9	2176
2080	uri://ed-fi.org/TribalAffiliationDescriptor	Nelson Lagoon	Nelson Lagoon	Native Village of Nelson Lagoon	\N	\N	\N	\N	2023-11-08 13:57:37.027628	2023-11-08 13:57:37.0276	59d6f0ec-aa6d-4b55-bcec-7869f1c49e61	2080
2086	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolai	Nikolai	Nikolai Village	\N	\N	\N	\N	2023-11-08 13:57:37.046351	2023-11-08 13:57:37.046336	18f8da07-29a8-4eb0-8a14-344923400c26	2086
2088	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolski	Nikolski	Native Village of Nikolski	\N	\N	\N	\N	2023-11-08 13:57:37.050969	2023-11-08 13:57:37.050654	60cf2662-2b3b-49de-b38f-3ae98683785b	2088
2091	uri://ed-fi.org/TribalAffiliationDescriptor	Noatak	Noatak	Native Village of Noatak	\N	\N	\N	\N	2023-11-08 13:57:37.061251	2023-11-08 13:57:37.061238	9e2c9610-095c-4261-b422-d4e807e94c2d	2091
2094	uri://ed-fi.org/TribalAffiliationDescriptor	Nooksack	Nooksack	Nooksack Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.078571	2023-11-08 13:57:37.078543	824275c3-74fd-4686-ab4b-bea79ef5f87a	2094
2097	uri://ed-fi.org/TribalAffiliationDescriptor	North Fork	North Fork	Northfork Rancheria of Mono Indians of California	\N	\N	\N	\N	2023-11-08 13:57:37.085021	2023-11-08 13:57:37.084791	52322d88-de41-4821-ad46-2250b287664b	2097
2101	uri://ed-fi.org/TribalAffiliationDescriptor	Northwestern Shoshone	Northwestern Shoshone	Northwestern Band of the Shoshone Nation	\N	\N	\N	\N	2023-11-08 13:57:37.101117	2023-11-08 13:57:37.10109	87fdb685-08ec-4710-8335-d2b9d00b3b06	2101
2105	uri://ed-fi.org/TribalAffiliationDescriptor	Nunam Iqua	Nunam Iqua	Native Village of Nunam Iqua	\N	\N	\N	\N	2023-11-08 13:57:37.119292	2023-11-08 13:57:37.119266	d6bfd7c7-8000-4c4a-b0fb-40e55fc2fa13	2105
2111	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida	Oneida	Oneida Indian Nation	\N	\N	\N	\N	2023-11-08 13:57:37.131069	2023-11-08 13:57:37.131025	222440d6-f854-4cd0-a01f-0ef5065968df	2111
2114	uri://ed-fi.org/TribalAffiliationDescriptor	Omaha	Omaha	Omaha Tribe of Nebraska	\N	\N	\N	\N	2023-11-08 13:57:37.143664	2023-11-08 13:57:37.143606	61d06026-24bd-41ae-80f8-e5a1830dfd68	2114
2120	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa Tribe of Oklahoma	Ottawa Tribe of Oklahoma	Ottawa Tribe of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.156172	2023-11-08 13:57:37.15616	ca7a35c3-9784-40e5-9af9-9b9c04d37f58	2120
2122	uri://ed-fi.org/TribalAffiliationDescriptor	Pamunkey Indian Tribe	Pamunkey Indian Tribe	Pamunkey Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.173538	2023-11-08 13:57:37.173509	403bda35-8692-404d-8966-a27de9725337	2122
2129	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Pleasant Point	Passamaquoddy Pleasant Point	Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	\N	2023-11-08 13:57:37.190427	2023-11-08 13:57:37.188525	89225aa1-5867-4d06-8586-a8b437be99da	2129
2132	uri://ed-fi.org/TribalAffiliationDescriptor	Pauloff Harbor	Pauloff Harbor	Pauloff Harbor Village	\N	\N	\N	\N	2023-11-08 13:57:37.198806	2023-11-08 13:57:37.198782	5df31b4b-b12e-41da-83fb-481b5cb42482	2132
2138	uri://ed-fi.org/TribalAffiliationDescriptor	Penobscot	Penobscot	Penobscot Nation	\N	\N	\N	\N	2023-11-08 13:57:37.212198	2023-11-08 13:57:37.212138	16237caf-e090-4644-b03b-70f0e120ce5e	2138
2141	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Point	Pilot Point	Native Village of Pilot Point	\N	\N	\N	\N	2023-11-08 13:57:37.231938	2023-11-08 13:57:37.231908	65a2cd66-7871-4887-baeb-3db7bb43e9a4	2141
2147	uri://ed-fi.org/TribalAffiliationDescriptor	Poarch	Poarch	Poarch Band of Creek Indians	\N	\N	\N	\N	2023-11-08 13:57:37.242725	2023-11-08 13:57:37.242698	b3a9a412-ace6-4d19-a5f2-bb6f20fda64b	2147
2148	uri://ed-fi.org/TribalAffiliationDescriptor	Point Hope IRA	Point Hope IRA	Native Village of Point Hope	\N	\N	\N	\N	2023-11-08 13:57:37.245925	2023-11-08 13:57:37.245793	c86df6b0-59b4-497b-928d-882b09e4c50b	2148
2162	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Acoma	Pueblo of Acoma	Pueblo of Acoma, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.280192	2023-11-08 13:57:37.280166	611e499d-3c8f-4fa2-a09d-f29dc03443fe	2162
2165	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Jemez	Pueblo of Jemez	Pueblo of Jemez, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.286497	2023-11-08 13:57:37.28647	c8907610-1e7d-4801-9e25-a286d2c9b35f	2165
2168	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Picuris	Pueblo of Picuris	Pueblo of Picuris, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.29491	2023-11-08 13:57:37.294877	991db408-177b-4d3d-9868-b39cfec46360	2168
2173	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Clara	Pueblo of Santa Clara	Pueblo of Santa Clara, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.306483	2023-11-08 13:57:37.306101	77aba474-f999-4b93-97ff-51e2fdc0a45d	2173
2177	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Tesuque	Pueblo of Tesuque	Pueblo of Tesuque, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.314928	2023-11-08 13:57:37.314641	7c812542-3805-4c07-b483-5bad5e206ca2	2177
2180	uri://ed-fi.org/TribalAffiliationDescriptor	Qawalangin	Qawalangin	Qawalangin Tribe of Unalaska	\N	\N	\N	\N	2023-11-08 13:57:37.322008	2023-11-08 13:57:37.321982	e8ab66b7-642e-462a-a457-7e42b4d5071b	2180
2185	uri://ed-fi.org/TribalAffiliationDescriptor	Quechan	Quechan	Quechan Tribe of the Fort Yuma Indian Reservation, California & Arizona	\N	\N	\N	\N	2023-11-08 13:57:37.33174	2023-11-08 13:57:37.331723	ec7917c2-4152-4243-9173-13cfcd6017fd	2185
2195	uri://ed-fi.org/TribalAffiliationDescriptor	Redding	Redding	Redding Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:37.351707	2023-11-08 13:57:37.351671	7f09e3b1-896f-4648-aea0-cc2bf42894ae	2195
2197	uri://ed-fi.org/TribalAffiliationDescriptor	Reno-Sparks	Reno-Sparks	Reno-Sparks Indian Colony, Nevada	\N	\N	\N	\N	2023-11-08 13:57:37.355364	2023-11-08 13:57:37.355345	e626b18b-09eb-40ec-90c9-5a97787b38b2	2197
2201	uri://ed-fi.org/TribalAffiliationDescriptor	Rosebud	Rosebud	Rosebud Sioux Tribe of the Rosebud Indian Reservation, South Dakota	\N	\N	\N	\N	2023-11-08 13:57:37.36568	2023-11-08 13:57:37.365563	d2c9c261-9450-4159-ab56-bbfc813ffc56	2201
2203	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox Nation of Missouri in KS & NE	Sac & Fox Nation of Missouri in Kansas and Nebraska	Sac & Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	\N	2023-11-08 13:57:37.37286	2023-11-08 13:57:37.37255	99db5653-e471-4dd2-a55e-4f2784c930c7	2203
2209	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Paul	Saint Paul	Saint Paul Island	\N	\N	\N	\N	2023-11-08 13:57:37.383259	2023-11-08 13:57:37.38315	23b21cc8-7964-4148-915d-597aa0cf3776	2209
2210	uri://ed-fi.org/TribalAffiliationDescriptor	Salt River	Salt River	Salt River Pima-Maricopa Indian Community of the Salt River Reservation, Arizona	\N	\N	\N	\N	2023-11-08 13:57:37.387512	2023-11-08 13:57:37.387484	09309cdc-d336-45bc-8ab0-64e16586fb5f	2210
2212	uri://ed-fi.org/TribalAffiliationDescriptor	San Carlos	San Carlos	San Carlos Apache Tribe of the San Carlos Reservation, Arizona	\N	\N	\N	\N	2023-11-08 13:57:37.39296	2023-11-08 13:57:37.392882	55f8e00c-8c45-43ba-9eeb-12c9eba88590	2212
2214	uri://ed-fi.org/TribalAffiliationDescriptor	San Juan	San Juan	San Juan Southern Paiute Tribe of Arizona	\N	\N	\N	\N	2023-11-08 13:57:37.396554	2023-11-08 13:57:37.396527	6077a619-ed70-4dde-b923-0bb183a12774	2214
2226	uri://ed-fi.org/TribalAffiliationDescriptor	Selawik	Selawik	Native Village of Selawik	\N	\N	\N	\N	2023-11-08 13:57:37.42404	2023-11-08 13:57:37.424022	4f3a41b7-95bc-4dc7-9ec3-aa90146b3da2	2226
2124	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute-Shoshone	Paiute-Shoshone	Paiute-Shoshone Tribe of the Fallon Reservation and Colony, Nevada	\N	\N	\N	\N	2023-11-08 13:57:37.177618	2023-11-08 13:57:37.177576	499c910e-bf50-4318-afd0-b2cd7dc004a7	2124
2126	uri://ed-fi.org/TribalAffiliationDescriptor	Paimiut	Paimiut	Native Village of Paimiut	\N	\N	\N	\N	2023-11-08 13:57:37.184001	2023-11-08 13:57:37.183964	6ce4127d-6edd-4d46-9752-afb8c5c66f42	2126
2131	uri://ed-fi.org/TribalAffiliationDescriptor	Pauma	Pauma	Pauma Band of Luiseno Mission Indians of the Pauma & Yuima Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:37.198621	2023-11-08 13:57:37.198537	c05745cd-35c0-467b-902f-0b03393ea98e	2131
2135	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria Tribe of Oklahoma	Peoria Tribe of Oklahoma	Peoria Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.209675	2023-11-08 13:57:37.209639	894e0e76-663e-4967-b6ec-a50401f4fcf8	2135
2137	uri://ed-fi.org/TribalAffiliationDescriptor	Petersburg	Petersburg	Petersburg Indian Association	\N	\N	\N	\N	2023-11-08 13:57:37.217221	2023-11-08 13:57:37.217161	2474fa07-d2a6-4ce0-b215-cda1adf24d21	2137
2146	uri://ed-fi.org/TribalAffiliationDescriptor	Pitka's Point	Pitka's Point	Pitka's Point Traditional Council	\N	\N	\N	\N	2023-11-08 13:57:37.239197	2023-11-08 13:57:37.239169	ecfa50a3-671d-4a69-bafa-0fb0b48cda30	2146
2150	uri://ed-fi.org/TribalAffiliationDescriptor	Point Lay IRA	Point Lay IRA	Native Village of Point Lay	\N	\N	\N	\N	2023-11-08 13:57:37.248443	2023-11-08 13:57:37.2482	61fe2c6a-616b-4164-b86e-f7cd26b73ced	2150
2154	uri://ed-fi.org/TribalAffiliationDescriptor	Port Graham	Port Graham	Native Village of Port Graham	\N	\N	\N	\N	2023-11-08 13:57:37.255618	2023-11-08 13:57:37.255591	8a4da5aa-92fd-4a7b-8525-2eaa0d018632	2154
2155	uri://ed-fi.org/TribalAffiliationDescriptor	Port Heiden	Port Heiden	Native Village of Port Heiden	\N	\N	\N	\N	2023-11-08 13:57:37.260943	2023-11-08 13:57:37.260326	3641dddb-9717-49c3-8334-9b721388ef25	2155
2157	uri://ed-fi.org/TribalAffiliationDescriptor	Potter Valley	Potter Valley	Potter Valley Tribe, California	\N	\N	\N	\N	2023-11-08 13:57:37.264503	2023-11-08 13:57:37.264474	2dd2c5fd-ccde-44ea-bec1-822c5ddf6bef	2157
2159	uri://ed-fi.org/TribalAffiliationDescriptor	Pribilof Islands Aleut Communities	Pribilof Islands Aleut Communities	Pribilof Islands Aleut Communities	\N	\N	\N	\N	2023-11-08 13:57:37.276203	2023-11-08 13:57:37.276172	552e374f-da4e-44cc-83ea-e9db57a7cfb6	2159
2163	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Cochiti	Pueblo of Cochiti	Pueblo of Cochiti, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.283039	2023-11-08 13:57:37.282945	4b36ac31-b612-41b4-bfac-1018154743ca	2163
2166	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Laguna	Pueblo of Laguna	Pueblo of Laguna, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.288884	2023-11-08 13:57:37.288808	d0ce0716-452c-46c9-8729-fd53c50e0c66	2166
2172	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Sandia	Pueblo of Sandia	Pueblo of Sandia, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.304047	2023-11-08 13:57:37.304021	1cfa8a3e-2dc5-42d1-aee1-6b8ac23db8c5	2172
2174	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Ana	Pueblo of Santa Ana	Pueblo of Santa Ana, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.309157	2023-11-08 13:57:37.309144	03089664-d6c2-44d7-a25b-4cac3d1763b0	2174
2178	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zuni	Pueblo of Zuni	Zuni Tribe of the Zuni Reservation, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.316497	2023-11-08 13:57:37.31647	45001fd6-a9ac-4ed6-92ea-daf7aeed2d1e	2178
2183	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw Tribe	Quapaw Tribe	Quapaw Nation	\N	\N	\N	\N	2023-11-08 13:57:37.324903	2023-11-08 13:57:37.324862	1da8a1e2-f0b8-43d2-8bee-71b6a4752444	2183
2186	uri://ed-fi.org/TribalAffiliationDescriptor	Quileute	Quileute	Quileute Tribe of the Quileute Reservation	\N	\N	\N	\N	2023-11-08 13:57:37.332789	2023-11-08 13:57:37.332743	87bf20e9-2599-43df-9d41-03bdd930c865	2186
2188	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah Navajo Chapter	Ramah Navajo Chapter	Ramah Navajo Chapter of the Navajo Nation	\N	\N	\N	\N	2023-11-08 13:57:37.337271	2023-11-08 13:57:37.337229	13cb82e2-5966-4d44-97f9-868a6e7e1536	2188
2189	uri://ed-fi.org/TribalAffiliationDescriptor	Rampart	Rampart	Rampart Village	\N	\N	\N	\N	2023-11-08 13:57:37.340941	2023-11-08 13:57:37.340928	c60cf39f-ca57-4b0e-8556-a40768ed6b85	2189
2193	uri://ed-fi.org/TribalAffiliationDescriptor	Red Devil	Red Devil	Village of Red Devil	\N	\N	\N	\N	2023-11-08 13:57:37.347918	2023-11-08 13:57:37.347856	c4d3d414-e7ee-4b55-9a9e-aa88b717866d	2193
2199	uri://ed-fi.org/TribalAffiliationDescriptor	Resighini	Resighini	Resighini Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:37.363179	2023-11-08 13:57:37.363165	16ca7b18-1484-4604-8af1-3cba3710c8c9	2199
2205	uri://ed-fi.org/TribalAffiliationDescriptor	Ruby	Ruby	Native Village of Ruby	\N	\N	\N	\N	2023-11-08 13:57:37.374074	2023-11-08 13:57:37.374038	20ffef03-c442-402e-a0d9-17cbb5e0c01d	2205
2208	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Regis	Saint Regis	Saint Regis Mohawk Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.381181	2023-11-08 13:57:37.381156	28a5f5af-722a-46a3-b66f-81f1436fb365	2208
2213	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatof	Salamatof	Salamatof Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.393292	2023-11-08 13:57:37.393263	ba6173b3-ca58-42a8-baf9-4885ce83e120	2213
2216	uri://ed-fi.org/TribalAffiliationDescriptor	San Pasqual	San Pasqual	San Pasqual Band of Diegueno Mission Indians of California	\N	\N	\N	\N	2023-11-08 13:57:37.39992	2023-11-08 13:57:37.399894	26c60c4b-7bc1-4245-a32b-4363e737570e	2216
2218	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Ynez	Santa Ynez	Santa Ynez Band of Chumash Mission Indians of the Santa Ynez Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:37.406076	2023-11-08 13:57:37.40605	92c16d10-1da4-415c-80da-ef1ff5a47103	2218
2229	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga Nation	Seneca-Cayuga Nation	Seneca-Cayuga Nation	\N	\N	\N	\N	2023-11-08 13:57:37.435613	2023-11-08 13:57:37.435586	cf79498f-a059-4744-a8e8-4b4eb3df6da9	2229
2239	uri://ed-fi.org/TribalAffiliationDescriptor	Shinnecock	Shinnecock	Shinnecock Indian Nation	\N	\N	\N	\N	2023-11-08 13:57:37.45888	2023-11-08 13:57:37.458844	3087555e-a0cf-4b1f-83d8-78d7f7d8d379	2239
2240	uri://ed-fi.org/TribalAffiliationDescriptor	Shoalwater	Shoalwater	Shoalwater Bay Indian Tribe of the Shoalwater Bay Indian Reservation	\N	\N	\N	\N	2023-11-08 13:57:37.464151	2023-11-08 13:57:37.463969	3b3f8ef2-3a34-45c6-8bb4-bcd8f409eb50	2240
2245	uri://ed-fi.org/TribalAffiliationDescriptor	Siletz Tribe	Siletz Tribe	Confederated Tribes of Siletz Indians of Oregon	\N	\N	\N	\N	2023-11-08 13:57:37.475177	2023-11-08 13:57:37.475159	8f29238b-96ec-46a8-8624-85386b8f1158	2245
2247	uri://ed-fi.org/TribalAffiliationDescriptor	Skagway	Skagway	Skagway Village	\N	\N	\N	\N	2023-11-08 13:57:37.480336	2023-11-08 13:57:37.480302	fd486c15-7439-459a-9eb0-09103fe78de4	2247
2125	uri://ed-fi.org/TribalAffiliationDescriptor	Paskenta	Paskenta	Paskenta Band of Nomlaki Indians of California	\N	\N	\N	\N	2023-11-08 13:57:37.181266	2023-11-08 13:57:37.181238	a34d235f-2a4b-4e64-9cee-638cd12e40d5	2125
2128	uri://ed-fi.org/TribalAffiliationDescriptor	Pascua Yaqui	Pascua Yaqui	Pascua Yaqui Tribe of Arizona	\N	\N	\N	\N	2023-11-08 13:57:37.188073	2023-11-08 13:57:37.188037	2db0fdd6-200c-47ca-8f1c-210a61275d53	2128
2134	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga Band of Indians 	Pechanga Band of Indians 	Pechanga Band of Indians	\N	\N	\N	\N	2023-11-08 13:57:37.206408	2023-11-08 13:57:37.206363	91a5b127-afea-41e3-b4df-87a3cb36ba5c	2134
2139	uri://ed-fi.org/TribalAffiliationDescriptor	Perryville	Perryville	Native Village of Perryville	\N	\N	\N	\N	2023-11-08 13:57:37.218723	2023-11-08 13:57:37.218694	41107324-b3c3-42e4-9bfd-538f349d9618	2139
2142	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Station	Pilot Station	Pilot Station Traditional Village	\N	\N	\N	\N	2023-11-08 13:57:37.232323	2023-11-08 13:57:37.232287	df4b0f61-689c-49b9-8729-fde69d0bbe36	2142
2144	uri://ed-fi.org/TribalAffiliationDescriptor	Pit River	Pit River	Pit River Tribe, California	\N	\N	\N	\N	2023-11-08 13:57:37.237603	2023-11-08 13:57:37.237517	cd8c7a7a-6292-4dad-a347-130ee77df9e9	2144
2149	uri://ed-fi.org/TribalAffiliationDescriptor	Pokagon	Pokagon	Pokagon Band of Potawatomi Indians, Michigan and Indiana	\N	\N	\N	\N	2023-11-08 13:57:37.248423	2023-11-08 13:57:37.248381	feb8721a-a392-4f9a-8c93-10a701193832	2149
2153	uri://ed-fi.org/TribalAffiliationDescriptor	Port Gamble	Port Gamble	Port Gamble S'Klallam Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.254419	2023-11-08 13:57:37.254392	aa7919c8-2166-4a64-9745-f3647cb55d04	2153
2158	uri://ed-fi.org/TribalAffiliationDescriptor	Portage Creek	Portage Creek	Portage Creek Village (aka Ohgsenakale)	\N	\N	\N	\N	2023-11-08 13:57:37.265746	2023-11-08 13:57:37.265721	4c3ec3b3-1097-4851-b414-ec05ee80ea44	2158
2160	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Island	Prairie Island	Prairie Island Indian Community in the State of Minnesota	\N	\N	\N	\N	2023-11-08 13:57:37.276472	2023-11-08 13:57:37.276447	3412305e-e4c9-430f-8855-fd599ba81046	2160
2169	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Pojoaque	Pueblo of Pojoaque	Pueblo of Pojoaque, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.295402	2023-11-08 13:57:37.295357	22321c02-8a48-4adf-a267-3599234fc73b	2169
2171	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Ildefonso	Pueblo of San Ildefonso	Pueblo of San Ildefonso, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.301707	2023-11-08 13:57:37.30168	2541a3f3-a891-4fc5-a744-555a720d0d1c	2171
2175	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Taos	Pueblo of Taos	Pueblo of Taos, New Mexico	\N	\N	\N	\N	2023-11-08 13:57:37.309577	2023-11-08 13:57:37.309511	bbc8772f-2b2e-4064-b432-98fcc8a0cb56	2175
2182	uri://ed-fi.org/TribalAffiliationDescriptor	Qagan Tayagungin	Qagan Tayagungin	Qagan Tayagungin Tribe of Sand Point	\N	\N	\N	\N	2023-11-08 13:57:37.323851	2023-11-08 13:57:37.323837	4a34f44b-0506-4f49-9bd5-816bce8a3bac	2182
2184	uri://ed-fi.org/TribalAffiliationDescriptor	Quartz Valley	Quartz Valley	Quartz Valley Indian Community of the Quartz Valley Reservation of California	\N	\N	\N	\N	2023-11-08 13:57:37.33155	2023-11-08 13:57:37.331302	bcc88e20-df17-42ff-b0ac-ac12b8b15509	2184
2191	uri://ed-fi.org/TribalAffiliationDescriptor	Rappahannock Tribe, Inc.	Rappahannock Tribe, Inc.	Rappahannock Tribe, Inc.	\N	\N	\N	\N	2023-11-08 13:57:37.342033	2023-11-08 13:57:37.342008	9990d733-6e6b-4300-9402-e428cc49ed60	2191
2194	uri://ed-fi.org/TribalAffiliationDescriptor	Red Lake	Red Lake	Red Lake Band of Chippewa Indians, Minnesota	\N	\N	\N	\N	2023-11-08 13:57:37.349962	2023-11-08 13:57:37.349893	3974fcba-e454-436d-af75-22f319fabbd9	2194
2196	uri://ed-fi.org/TribalAffiliationDescriptor	Redwood Valley	Redwood Valley	Redwood Valley or Little River Band of Pomo Indians of the Redwood Valley Rancheria California	\N	\N	\N	\N	2023-11-08 13:57:37.35295	2023-11-08 13:57:37.352934	fa182b61-7f98-4d4e-9c36-66344df7c597	2196
2202	uri://ed-fi.org/TribalAffiliationDescriptor	Round Valley	Round Valley	Round Valley Indian Tribes, Round Valley Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:37.365852	2023-11-08 13:57:37.365826	2367fba8-d0c8-428e-890d-09f99577683f	2202
2206	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox Nation, Oklahoma	Sac & Fox Nation, Oklahoma	Sac & Fox Nation, Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.37612	2023-11-08 13:57:37.376043	31e88b75-0856-4fc4-adfb-0d905f15bd43	2206
2217	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Cahuilla	Santa Rosa of Cahuilla	Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	\N	2023-11-08 13:57:37.403214	2023-11-08 13:57:37.4032	91a69974-4ec3-41f6-ae54-d0f218bae389	2217
2219	uri://ed-fi.org/TribalAffiliationDescriptor	Santo Domingo	Santo Domingo	Santo Domingo Pueblo	\N	\N	\N	\N	2023-11-08 13:57:37.408036	2023-11-08 13:57:37.408001	3526002d-b8be-4740-8e22-eb20ae6f547a	2219
2221	uri://ed-fi.org/TribalAffiliationDescriptor	Sauk-Suiattle	Sauk-Suiattle	Sauk-Suiattle Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.413207	2023-11-08 13:57:37.413142	9faea716-3754-41a3-a234-34ea368860ce	2221
2224	uri://ed-fi.org/TribalAffiliationDescriptor	Sault Ste. Marie	Sault Ste. Marie	Sault Ste. Marie Tribe of Chippewa Indians, Michigan	\N	\N	\N	\N	2023-11-08 13:57:37.420711	2023-11-08 13:57:37.420694	21f1c130-4154-4add-944c-66783818fd2c	2224
2227	uri://ed-fi.org/TribalAffiliationDescriptor	Seldovia	Seldovia	Seldovia Village Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.429196	2023-11-08 13:57:37.429176	47a12db2-838d-4710-b97c-2b3ea1b7fbaa	2227
2231	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca	Seneca	Seneca Nation of Indians	\N	\N	\N	\N	2023-11-08 13:57:37.437731	2023-11-08 13:57:37.437695	bcf5a10b-e479-4789-bf01-79fa7f75bd61	2231
2238	uri://ed-fi.org/TribalAffiliationDescriptor	Shakopee	Shakopee	Shakopee Mdewakanton Sioux Community of Minnesota	\N	\N	\N	\N	2023-11-08 13:57:37.446716	2023-11-08 13:57:37.446689	dd38603f-a13c-4fd0-ba8d-9870a8a2f9c9	2238
2243	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Bannock	Shoshone-Bannock	Shoshone-Bannock Tribes of the Fort Hall Reservation	\N	\N	\N	\N	2023-11-08 13:57:37.470102	2023-11-08 13:57:37.470074	a0b985fc-cc20-4c70-b75e-4e6b18b40433	2243
2249	uri://ed-fi.org/TribalAffiliationDescriptor	Sitka	Sitka	Sitka Tribe of Alaska	\N	\N	\N	\N	2023-11-08 13:57:37.48098	2023-11-08 13:57:37.480919	b021f03f-59da-4ad1-b0ff-b79e28222621	2249
2251	uri://ed-fi.org/TribalAffiliationDescriptor	Sleetmute	Sleetmute	Village of Sleetmute	\N	\N	\N	\N	2023-11-08 13:57:37.486666	2023-11-08 13:57:37.48618	f5cd4579-c8bc-4c88-bccb-6db2f614f7f5	2251
2255	uri://ed-fi.org/TribalAffiliationDescriptor	Solomon	Solomon	Village of Solomon	\N	\N	\N	\N	2023-11-08 13:57:37.494828	2023-11-08 13:57:37.494802	0324dc70-bf59-4e25-83ec-a0dd2bcb033b	2255
2257	uri://ed-fi.org/TribalAffiliationDescriptor	Spokane	Spokane	Spokane Tribe of the Spokane Reservation	\N	\N	\N	\N	2023-11-08 13:57:37.500977	2023-11-08 13:57:37.50095	0a2f6e70-d5ad-4f9f-aa5c-ae19dcf0fc43	2257
2179	uri://ed-fi.org/TribalAffiliationDescriptor	Puyallup	Puyallup	Puyallup Tribe of the Puyallup Reservation	\N	\N	\N	\N	2023-11-08 13:57:37.317905	2023-11-08 13:57:37.31789	ef1ff598-bc91-4c27-a1a5-c581255b282a	2179
2181	uri://ed-fi.org/TribalAffiliationDescriptor	Pyramid Lake	Pyramid Lake	Pyramid Lake Paiute Tribe of the Pyramid Lake Reservation, Nevada	\N	\N	\N	\N	2023-11-08 13:57:37.32337	2023-11-08 13:57:37.323351	986b0b11-a10a-4084-93f3-491c4a080fff	2181
2187	uri://ed-fi.org/TribalAffiliationDescriptor	Quinault	Quinault	Quinault Indian Nation	\N	\N	\N	\N	2023-11-08 13:57:37.3328	2023-11-08 13:57:37.332648	eb46875a-224f-41a9-a47c-5109af5d80ad	2187
2190	uri://ed-fi.org/TribalAffiliationDescriptor	Ramona	Ramona	Ramona Band of Cahuilla, California	\N	\N	\N	\N	2023-11-08 13:57:37.341468	2023-11-08 13:57:37.341441	ca61ebf4-841d-4b18-8287-61f36cb32f45	2190
2192	uri://ed-fi.org/TribalAffiliationDescriptor	Red Cliff	Red Cliff	Red Cliff Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:37.345181	2023-11-08 13:57:37.345074	dd5c81e0-8fe5-4a2a-86d4-2aceb38f624d	2192
2198	uri://ed-fi.org/TribalAffiliationDescriptor	Rincon	Rincon	Rincon Band of Luiseno Mission Indians of the Rincon Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:37.357848	2023-11-08 13:57:37.357832	4ad9f894-ce89-461e-beb8-832cc9287c4b	2198
2200	uri://ed-fi.org/TribalAffiliationDescriptor	Robinson	Robinson	Robinson Rancheria	\N	\N	\N	\N	2023-11-08 13:57:37.363798	2023-11-08 13:57:37.363772	99ba5156-eccd-4bcb-ac32-16d3b013b54a	2200
2204	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox of Mississippi	Sac & Fox of Mississippi	Sac & Fox Tribe of the Mississippi in Iowa	\N	\N	\N	\N	2023-11-08 13:57:37.37272	2023-11-08 13:57:37.372291	f57913b6-1150-426c-8329-b1f4f0b40468	2204
2207	uri://ed-fi.org/TribalAffiliationDescriptor	Saginaw Chippewa	Saginaw Chippewa	Saginaw Chippewa Indian Tribe of Michigan	\N	\N	\N	\N	2023-11-08 13:57:37.380777	2023-11-08 13:57:37.38075	de8b24a7-b5de-4103-b5a5-ccfb6c4bd4ce	2207
2211	uri://ed-fi.org/TribalAffiliationDescriptor	Samish	Samish	Samish Indian Nation	\N	\N	\N	\N	2023-11-08 13:57:37.389721	2023-11-08 13:57:37.389565	efa5f510-cebb-487f-ae4a-c424c9bc2e27	2211
2215	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa	Santa Rosa	Santa Rosa Indian Community of the Santa Rosa Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:37.398871	2023-11-08 13:57:37.398835	4378ba19-bf2e-4ceb-b035-0e9fae01cb57	2215
2220	uri://ed-fi.org/TribalAffiliationDescriptor	Santee Sioux	Santee Sioux	Santee Sioux Nation, Nebraska	\N	\N	\N	\N	2023-11-08 13:57:37.410016	2023-11-08 13:57:37.409953	211ec032-36eb-43cc-a948-1757d8a729bc	2220
2222	uri://ed-fi.org/TribalAffiliationDescriptor	Savoonga	Savoonga	Native Village of Savoonga	\N	\N	\N	\N	2023-11-08 13:57:37.417342	2023-11-08 13:57:37.417296	713fbf29-3262-4441-99dd-11c294759629	2222
2225	uri://ed-fi.org/TribalAffiliationDescriptor	Scammon Bay	Scammon Bay	Native Village of Scammon Bay	\N	\N	\N	\N	2023-11-08 13:57:37.422808	2023-11-08 13:57:37.421977	0ddf7c00-9ec3-4bce-98f6-d0f12ec8a6ee	2225
2228	uri://ed-fi.org/TribalAffiliationDescriptor	Scotts Valley	Scotts Valley	Scotts Valley Band of Pomo Indians of California	\N	\N	\N	\N	2023-11-08 13:57:37.429152	2023-11-08 13:57:37.429079	4870c910-e70b-4c0c-a1d3-9c83b695d3d2	2228
2233	uri://ed-fi.org/TribalAffiliationDescriptor	Shageluk	Shageluk	Shageluk Native Village	\N	\N	\N	\N	2023-11-08 13:57:37.443585	2023-11-08 13:57:37.443547	10fa7ce2-b903-44e9-b3fb-f676f0c6973c	2233
2235	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee Tribe	Shawnee Tribe	Shawnee Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.449598	2023-11-08 13:57:37.449563	55fe6ae2-8751-470c-9978-d1ad8b62904b	2235
2244	uri://ed-fi.org/TribalAffiliationDescriptor	Shungnak	Shungnak	Native Village of Shungnak	\N	\N	\N	\N	2023-11-08 13:57:37.47208	2023-11-08 13:57:37.472051	20111ae7-a656-48dd-aa64-644c776cd9ff	2244
2246	uri://ed-fi.org/TribalAffiliationDescriptor	Sisseton-Wahpeton	Sisseton-Wahpeton	Sisseton-Wahpeton Oyate of the Lake Traverse Reservation, South Dakota	\N	\N	\N	\N	2023-11-08 13:57:37.478848	2023-11-08 13:57:37.478821	a482e2d5-1da4-4cee-922a-b530d8d139ec	2246
2253	uri://ed-fi.org/TribalAffiliationDescriptor	Soboba	Soboba	Soboba Band of Luiseno Indians, California	\N	\N	\N	\N	2023-11-08 13:57:37.490323	2023-11-08 13:57:37.490298	74217779-cbbe-4102-8ac3-80c9133eac4d	2253
2258	uri://ed-fi.org/TribalAffiliationDescriptor	South Naknek	South Naknek	South Naknek Village	\N	\N	\N	\N	2023-11-08 13:57:37.50119	2023-11-08 13:57:37.501164	134d67c3-cf73-4931-9ad7-5780b38f1908	2258
2262	uri://ed-fi.org/TribalAffiliationDescriptor	St. George	St. George	Saint George Island	\N	\N	\N	\N	2023-11-08 13:57:37.50941	2023-11-08 13:57:37.509392	0eaafc9e-8d9b-4ea4-aac9-579ff745bfc8	2262
2266	uri://ed-fi.org/TribalAffiliationDescriptor	Stevens Village	Stevens Village	Native Village of Stevens	\N	\N	\N	\N	2023-11-08 13:57:37.517282	2023-11-08 13:57:37.517189	4dd8075f-519c-45b8-9020-c9abecb83160	2266
2271	uri://ed-fi.org/TribalAffiliationDescriptor	Stockbridge	Stockbridge	Stockbridge Munsee Community, Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:37.525516	2023-11-08 13:57:37.525489	da0944c2-28d1-4138-b5cd-3f89f350a291	2271
2273	uri://ed-fi.org/TribalAffiliationDescriptor	Susanville	Susanville	Susanville Indian Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:37.531502	2023-11-08 13:57:37.531472	bcf8e827-f3f0-47ec-b138-3b8181e8b5ef	2273
2277	uri://ed-fi.org/TribalAffiliationDescriptor	Takotna	Takotna	Takotna Village	\N	\N	\N	\N	2023-11-08 13:57:37.53745	2023-11-08 13:57:37.53742	36605bfc-f037-4cb2-8639-09525acc91b5	2277
2285	uri://ed-fi.org/TribalAffiliationDescriptor	Telida	Telida	Telida Village	\N	\N	\N	\N	2023-11-08 13:57:37.55389	2023-11-08 13:57:37.553862	858adc62-e538-467c-89e9-559b6b7ea961	2285
2287	uri://ed-fi.org/TribalAffiliationDescriptor	Tetlin	Tetlin	Native Village of Tetlin	\N	\N	\N	\N	2023-11-08 13:57:37.559207	2023-11-08 13:57:37.559173	3ea27fea-532f-4574-b3a0-2201d1829f08	2287
2292	uri://ed-fi.org/TribalAffiliationDescriptor	Tohono O'odham	Tohono O'odham	Tohono O'odham Nation of Arizona	\N	\N	\N	\N	2023-11-08 13:57:37.568202	2023-11-08 13:57:37.568103	00f5c84c-dca5-42dc-90df-9c023a88f9f2	2292
2297	uri://ed-fi.org/TribalAffiliationDescriptor	Tonto Apache	Tonto Apache	Tonto Apache Tribe of Arizona	\N	\N	\N	\N	2023-11-08 13:57:37.576832	2023-11-08 13:57:37.576786	55aaa078-9813-46b6-9aa4-44347a60489e	2297
2300	uri://ed-fi.org/TribalAffiliationDescriptor	Tulalip	Tulalip	Tulalip Tribes of Washington	\N	\N	\N	\N	2023-11-08 13:57:37.584682	2023-11-08 13:57:37.584652	3d1d3cca-31d6-42b4-8e98-3bb839002687	2300
2302	uri://ed-fi.org/TribalAffiliationDescriptor	Tunica-Biloxi	Tunica-Biloxi	Tunica-Biloxi Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.592056	2023-11-08 13:57:37.591817	659a793c-04ec-4e06-85fd-a60be597e47c	2302
2306	uri://ed-fi.org/TribalAffiliationDescriptor	Turtle Mountain	Turtle Mountain	Turtle Mountain Band of Chippewa Indians of North Dakota	\N	\N	\N	\N	2023-11-08 13:57:37.598265	2023-11-08 13:57:37.598228	42ac75e8-2619-4f05-9b08-93d30693f1cf	2306
2230	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole	Seminole	Seminole Tribe of Florida	\N	\N	\N	\N	2023-11-08 13:57:37.436795	2023-11-08 13:57:37.436678	76d47bd7-892e-4b13-be0d-f0a2f8a4f490	2230
2232	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole Nation of Oklahoma	Seminole Nation of Oklahoma	The Seminole Nation of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.441181	2023-11-08 13:57:37.441154	e9074184-4e33-4da3-a923-7d789409708b	2232
2234	uri://ed-fi.org/TribalAffiliationDescriptor	Shaktoolik	Shaktoolik	Native Village of Shaktoolik	\N	\N	\N	\N	2023-11-08 13:57:37.446357	2023-11-08 13:57:37.44632	8e8b5709-5ba5-4f6e-85d5-1e818da0fba0	2234
2236	uri://ed-fi.org/TribalAffiliationDescriptor	Sherwood Valley	Sherwood Valley	Sherwood Valley Rancheria of Pomo Indians of California	\N	\N	\N	\N	2023-11-08 13:57:37.451389	2023-11-08 13:57:37.451363	684bdfe0-608c-45e9-ab00-d7cbc2ffbdd2	2236
2237	uri://ed-fi.org/TribalAffiliationDescriptor	Shingle Springs	Shingle Springs	Shingle Springs Band of Miwok Indians, Shingle Springs Rancheria (Verona Tract), California	\N	\N	\N	\N	2023-11-08 13:57:37.453745	2023-11-08 13:57:37.453732	c3da476f-5cfb-4fa0-9b5e-07d468d5d42e	2237
2241	uri://ed-fi.org/TribalAffiliationDescriptor	Shishmaref IRA	Shishmaref IRA	Native Village of Shishmaref	\N	\N	\N	\N	2023-11-08 13:57:37.465014	2023-11-08 13:57:37.464744	5f4b505f-c2bd-45f7-aff4-017e4f5b1352	2241
2242	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Paiute	Shoshone-Paiute	Shoshone-Paiute Tribes of the Duck Valley Reservation, Nevada	\N	\N	\N	\N	2023-11-08 13:57:37.468888	2023-11-08 13:57:37.468859	aa3ce08d-e1c7-49b0-8f46-e0b4aad2d758	2242
2248	uri://ed-fi.org/TribalAffiliationDescriptor	Skokomish	Skokomish	Skokomish Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.481435	2023-11-08 13:57:37.481421	a7667618-800b-4a48-ac2f-29f74e7a39ca	2248
2250	uri://ed-fi.org/TribalAffiliationDescriptor	Skull Valley	Skull Valley	Skull Valley Band of Goshute Indians of Utah	\N	\N	\N	\N	2023-11-08 13:57:37.485129	2023-11-08 13:57:37.48509	da2ecb27-990a-4cff-8268-2c4f99ecad68	2250
2254	uri://ed-fi.org/TribalAffiliationDescriptor	Sokaogon	Sokaogon	Sokaogon Chippewa Community, Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:37.491981	2023-11-08 13:57:37.491966	1a0c97a7-68d1-4cfc-8997-b2fec14a1b7d	2254
2256	uri://ed-fi.org/TribalAffiliationDescriptor	Southern Ute	Southern Ute	Southern Ute Indian Tribe of the Southern Ute Reservation, Colorado	\N	\N	\N	\N	2023-11-08 13:57:37.500805	2023-11-08 13:57:37.500658	2404766b-3f1f-4feb-b05a-4fe480d7181a	2256
2263	uri://ed-fi.org/TribalAffiliationDescriptor	St. Croix	St. Croix	St. Croix Chippewa Indians of Wisconsin	\N	\N	\N	\N	2023-11-08 13:57:37.510735	2023-11-08 13:57:37.510717	27c8df0e-5580-4135-9f23-9eb61f55c839	2263
2267	uri://ed-fi.org/TribalAffiliationDescriptor	Stillaguamish	Stillaguamish	Stillaguamish Tribe of Indians of Washington	\N	\N	\N	\N	2023-11-08 13:57:37.518112	2023-11-08 13:57:37.518087	fe7e5fa5-620e-4992-8ddc-f61385633b88	2267
2269	uri://ed-fi.org/TribalAffiliationDescriptor	Stony River	Stony River	Village of Stony River	\N	\N	\N	\N	2023-11-08 13:57:37.524488	2023-11-08 13:57:37.524449	3b6aba0f-cc00-4325-993d-e89affaa8b2a	2269
2272	uri://ed-fi.org/TribalAffiliationDescriptor	Suquamish	Suquamish	Suquamish Indian Tribe of the Port Madison Reservation	\N	\N	\N	\N	2023-11-08 13:57:37.530388	2023-11-08 13:57:37.53035	3d26ffeb-b851-45fb-8c18-1dd06c05a6c3	2272
2275	uri://ed-fi.org/TribalAffiliationDescriptor	Swinomish	Swinomish	Swinomish Indian Tribal Community	\N	\N	\N	\N	2023-11-08 13:57:37.536088	2023-11-08 13:57:37.536062	97665adb-7f13-4195-ace0-5fd0cd3a00e8	2275
2278	uri://ed-fi.org/TribalAffiliationDescriptor	Tanana	Tanana	Native Village of Tanana	\N	\N	\N	\N	2023-11-08 13:57:37.541472	2023-11-08 13:57:37.541446	7c67e358-6f9d-490d-aae8-57414b6a8866	2278
2281	uri://ed-fi.org/TribalAffiliationDescriptor	Tatitlek	Tatitlek	Native Village of Tatitlek	\N	\N	\N	\N	2023-11-08 13:57:37.546968	2023-11-08 13:57:37.546943	6fc58627-ccd5-470c-a619-a8314dc582e9	2281
2284	uri://ed-fi.org/TribalAffiliationDescriptor	Teller	Teller	Native Village of Teller	\N	\N	\N	\N	2023-11-08 13:57:37.553643	2023-11-08 13:57:37.553615	929c0b6d-8d52-4240-b453-730b60cdf54a	2284
2289	uri://ed-fi.org/TribalAffiliationDescriptor	Three Affiliated	Three Affiliated	Three Affiliated Tribes of the Fort Berthold Reservation, North Dakota	\N	\N	\N	\N	2023-11-08 13:57:37.561962	2023-11-08 13:57:37.561935	da01ec43-35ac-469e-9ef0-00d64daf44a4	2289
2291	uri://ed-fi.org/TribalAffiliationDescriptor	Tlingit & Haida	Tlingit & Haida	Central Council of the Tlingit & Haida Indian Tribes	\N	\N	\N	\N	2023-11-08 13:57:37.565943	2023-11-08 13:57:37.565916	a3f2b736-1277-4de1-a6e3-99e341169492	2291
2296	uri://ed-fi.org/TribalAffiliationDescriptor	Tonkawa	Tonkawa	Tonkawa Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.576309	2023-11-08 13:57:37.576285	4f9ff7bf-9aab-41cc-810c-836dc1b22443	2296
2299	uri://ed-fi.org/TribalAffiliationDescriptor	Torres Martinez	Torres Martinez	Torres Martinez Desert Cahuilla Indians, California	\N	\N	\N	\N	2023-11-08 13:57:37.584229	2023-11-08 13:57:37.584182	8fcebfba-2f83-44b1-9f0e-870deca8c840	2299
2303	uri://ed-fi.org/TribalAffiliationDescriptor	Tuolumne	Tuolumne	Tuolumne Band of Me-Wuk Indians of the Tuolumne Rancheria of California	\N	\N	\N	\N	2023-11-08 13:57:37.592545	2023-11-08 13:57:37.592492	bbe0d21c-0470-42bf-b49e-8d06ebdabf04	2303
2309	uri://ed-fi.org/TribalAffiliationDescriptor	Twin Hills	Twin Hills	Twin Hills Village	\N	\N	\N	\N	2023-11-08 13:57:37.602738	2023-11-08 13:57:37.602659	4ebb1501-657e-4918-9f0e-090a2b25b147	2309
2313	uri://ed-fi.org/TribalAffiliationDescriptor	Umatilla Tribe	Umatilla Tribe	Confederated Tribes of the Umatilla Indian Reservation	\N	\N	\N	\N	2023-11-08 13:57:37.611539	2023-11-08 13:57:37.611498	9e52896a-4027-40b9-bad5-176ab0598659	2313
2316	uri://ed-fi.org/TribalAffiliationDescriptor	Unalakleet	Unalakleet	Native Village of Unalakleet	\N	\N	\N	\N	2023-11-08 13:57:37.61979	2023-11-08 13:57:37.619718	cc181f4c-2295-41f5-8481-395f972c0d64	2316
2318	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Mattaponi Tribe	Upper Mattaponi Tribe	Upper Mattaponi Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.624657	2023-11-08 13:57:37.624621	e9eff443-cc4c-4e82-8613-8e09774aba31	2318
2322	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain Ute	Ute Mountain Ute	Ute Mountain Ute Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.631793	2023-11-08 13:57:37.631763	98f05c3d-d209-449c-a33d-6bda0c5f423a	2322
2323	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie	Venetie	Village of Venetie	\N	\N	\N	\N	2023-11-08 13:57:37.637757	2023-11-08 13:57:37.63773	2e2a0b2b-ab6f-404e-afa7-8f1a98816ebb	2323
2326	uri://ed-fi.org/TribalAffiliationDescriptor	Wainwright	Wainwright	Village of Wainwright	\N	\N	\N	\N	2023-11-08 13:57:37.64299	2023-11-08 13:57:37.642963	0406046d-bac0-4e1f-b253-4320fa9ca80e	2326
2252	uri://ed-fi.org/TribalAffiliationDescriptor	Snoqualmie	Snoqualmie	Snoqualmie Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.489773	2023-11-08 13:57:37.489737	a1225511-56aa-4893-aadb-9d93c0e28293	2252
2259	uri://ed-fi.org/TribalAffiliationDescriptor	Spirit Lake	Spirit Lake	Spirit Lake Tribe, North Dakota	\N	\N	\N	\N	2023-11-08 13:57:37.501067	2023-11-08 13:57:37.501005	b346ceb2-7be0-4024-ac2e-ee0104db917c	2259
2260	uri://ed-fi.org/TribalAffiliationDescriptor	Squaxin	Squaxin	Squaxin Island Tribe of the Squaxin Island Reservation	\N	\N	\N	\N	2023-11-08 13:57:37.508266	2023-11-08 13:57:37.508202	5c0bc43c-7bf1-4442-8119-4e8857faa565	2260
2264	uri://ed-fi.org/TribalAffiliationDescriptor	Standing Rock	Standing Rock	Standing Rock Sioux Tribe of North & South Dakota	\N	\N	\N	\N	2023-11-08 13:57:37.51495	2023-11-08 13:57:37.514883	7591ad4e-f2d9-4328-8485-57204ffda939	2264
2268	uri://ed-fi.org/TribalAffiliationDescriptor	Summit Lake	Summit Lake	Summit Lake Paiute Tribe of Nevada	\N	\N	\N	\N	2023-11-08 13:57:37.524189	2023-11-08 13:57:37.52414	8c1a44ca-f67b-4a89-bf1d-f585c2b57dff	2268
2274	uri://ed-fi.org/TribalAffiliationDescriptor	Table Mountain	Table Mountain	Table Mountain Rancheria 	\N	\N	\N	\N	2023-11-08 13:57:37.535959	2023-11-08 13:57:37.535924	985d4424-0452-447f-a92f-aab900c9518f	2274
2279	uri://ed-fi.org/TribalAffiliationDescriptor	Tanacross	Tanacross	Native Village of Tanacross	\N	\N	\N	\N	2023-11-08 13:57:37.541984	2023-11-08 13:57:37.541802	0c6681df-8093-471d-8511-a4d6feaa23fa	2279
2280	uri://ed-fi.org/TribalAffiliationDescriptor	Tangirnaq	Tangirnaq	Tangirnaq Native Village 	\N	\N	\N	\N	2023-11-08 13:57:37.546264	2023-11-08 13:57:37.546238	292c36bd-9442-4c15-9ec3-fa3e46ae592a	2280
2283	uri://ed-fi.org/TribalAffiliationDescriptor	Tejon	Tejon	Tejon Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.549589	2023-11-08 13:57:37.549553	cdaff723-a504-4290-99cd-2430d5ef8d5e	2283
2290	uri://ed-fi.org/TribalAffiliationDescriptor	Timbi-sha Shoshone	Timbi-sha Shoshone	Timbisha Shoshone Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.562394	2023-11-08 13:57:37.562354	203d2d1a-86dc-4760-82e1-5d4c7a1fca64	2290
2293	uri://ed-fi.org/TribalAffiliationDescriptor	Togiak	Togiak	Traditional Village of Togiak	\N	\N	\N	\N	2023-11-08 13:57:37.568914	2023-11-08 13:57:37.568888	6bd6e9bb-483b-4fc5-893b-bf54d359bbc7	2293
2295	uri://ed-fi.org/TribalAffiliationDescriptor	Tonawanda	Tonawanda	Tonawanda Band of Seneca	\N	\N	\N	\N	2023-11-08 13:57:37.572525	2023-11-08 13:57:37.572498	376c0ce2-ab91-4f76-b7a1-777d934ccb23	2295
2298	uri://ed-fi.org/TribalAffiliationDescriptor	Tule River	Tule River	Tule River Indian Tribe of the Tule River Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:37.582812	2023-11-08 13:57:37.582664	b7e6fb7b-a770-4b91-930e-28d7ae09b0f8	2298
2305	uri://ed-fi.org/TribalAffiliationDescriptor	Tuntutuliak	Tuntutuliak	Native Village of Tuntutuliak	\N	\N	\N	\N	2023-11-08 13:57:37.594144	2023-11-08 13:57:37.594114	89e4b2ad-10dd-408c-b594-9dd1b731a1e2	2305
2307	uri://ed-fi.org/TribalAffiliationDescriptor	Tuscarora	Tuscarora	Tuscarora Nation	\N	\N	\N	\N	2023-11-08 13:57:37.600113	2023-11-08 13:57:37.600071	5071b4ea-7db3-4f7c-b595-0e1029847225	2307
2310	uri://ed-fi.org/TribalAffiliationDescriptor	Umkumiut	Umkumiut	Umkumiut Native Village	\N	\N	\N	\N	2023-11-08 13:57:37.608979	2023-11-08 13:57:37.608926	ce5dbc89-1ff7-4cff-87f2-1a67abe92c9e	2310
2315	uri://ed-fi.org/TribalAffiliationDescriptor	Unga	Unga	Native Village of Unga	\N	\N	\N	\N	2023-11-08 13:57:37.619291	2023-11-08 13:57:37.619243	3d91a3a9-0862-4d3d-b94c-993524575516	2315
2320	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Skagit	Upper Skagit	Upper Skagit Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.629838	2023-11-08 13:57:37.629794	4986e3b0-be87-4939-aee2-c20b6606debb	2320
2324	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie IRA	Venetie IRA	Native Village of Venetie Tribal Government (Arctic Village and Village of Venetie)	\N	\N	\N	\N	2023-11-08 13:57:37.637827	2023-11-08 13:57:37.637388	513ed465-6a60-4832-bc05-3c220eecd6a2	2324
2331	uri://ed-fi.org/TribalAffiliationDescriptor	Washoe	Washoe	Washoe Tribe of Nevada & California (Carson Colony, Dresslerville Colony, Woodfords Community, Stewart Community, & Washoe Ranches)	\N	\N	\N	\N	2023-11-08 13:57:37.654482	2023-11-08 13:57:37.65437	22225396-d580-4716-85ee-4b9ab049975f	2331
2333	uri://ed-fi.org/TribalAffiliationDescriptor	White Earth	White Earth	Minnesota Chippewa Tribe - White Earth Band	\N	\N	\N	\N	2023-11-08 13:57:37.659777	2023-11-08 13:57:37.659419	b9452dab-bed7-4db2-981f-9eafcc6fcd12	2333
2335	uri://ed-fi.org/TribalAffiliationDescriptor	Wichita	Wichita	Wichita and Affiliated Tribes (Wichita, Keechi, Waco & Tawakonie), Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.662914	2023-11-08 13:57:37.662886	3f673226-170c-4d7c-ba05-0bc9ef650109	2335
2338	uri://ed-fi.org/TribalAffiliationDescriptor	Winnemucca	Winnemucca	Winnemucca Indian Colony of Nevada	\N	\N	\N	\N	2023-11-08 13:57:37.67025	2023-11-08 13:57:37.670216	b18f1cbb-9f3a-43c9-9b07-a224431dbe60	2338
2342	uri://ed-fi.org/TribalAffiliationDescriptor	Yakutat	Yakutat	Yakutat Tlingit Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.678239	2023-11-08 13:57:37.678197	3c78471f-8b6c-40dd-946b-a95d7461d840	2342
2345	uri://ed-fi.org/TribalAffiliationDescriptor	Yankton	Yankton	Yankton Sioux Tribe of South Dakota	\N	\N	\N	\N	2023-11-08 13:57:37.686859	2023-11-08 13:57:37.686845	62a1196c-bbac-4b5f-bf78-27dea8588e5c	2345
2348	uri://ed-fi.org/TribalAffiliationDescriptor	Ysleta Del Sur	Ysleta Del Sur	Ysleta del Sur Pueblo	\N	\N	\N	\N	2023-11-08 13:57:37.695073	2023-11-08 13:57:37.695059	51637e1c-6466-4ef6-b1a1-1e844f3dd3b9	2348
2353	uri://ed-fi.org/TribalAffiliationDescriptor	Yuhaaviatam of San Manuel Nation 	Yuhaaviatam of San Manuel Nation 	Yuhaaviatam of San Manuel Nation 	\N	\N	\N	\N	2023-11-08 13:57:37.705991	2023-11-08 13:57:37.705922	24a8cd73-ad23-42e3-abdd-00124db1ae00	2353
2355	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe	DEPRECATED: Inc.	DEPRECATED: Chickahominy Indian Tribe, Inc.	\N	\N	\N	\N	2023-11-08 13:57:37.712111	2023-11-08 13:57:37.712024	3bd7f5e1-89ff-4e22-99bf-e793152e22ce	2355
2358	uri://ed-fi.org/TribalAffiliationDescriptor	Kewa Pueblo	DEPRECATED: Kewa Pueblo	DEPRECATED: Kewa Pueblo	\N	\N	\N	\N	2023-11-08 13:57:37.717778	2023-11-08 13:57:37.717752	db162b16-aeea-4349-8879-783ddd861136	2358
2366	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa of Oklahoma	DEPRECATED: Ottawa of Oklahoma	DEPRECATED: Ottawa Tribe of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.738254	2023-11-08 13:57:37.738171	187abc4d-a58f-43c7-90b2-eb3cc43a420c	2366
2371	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga	DEPRECATED: Pechanga	DEPRECATED: Pechanga Band of Luiseno Mission Indians of the Pechanga Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:37.749362	2023-11-08 13:57:37.749092	258d77f4-33d8-41d0-b17e-4d3de884a164	2371
2377	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Chuilla	DEPRECATED: Santa Rosa of Chuilla	DEPRECATED: Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	\N	2023-11-08 13:57:37.761555	2023-11-08 13:57:37.761528	77fb20c3-27b7-4fe0-bd6a-f96fa5439d08	2377
2261	uri://ed-fi.org/TribalAffiliationDescriptor	St. Michael IRA	St. Michael IRA	Native Village of Saint Michael	\N	\N	\N	\N	2023-11-08 13:57:37.508891	2023-11-08 13:57:37.508877	f4e5c32a-d9e5-4ac7-be25-520cbe32a1ef	2261
2265	uri://ed-fi.org/TribalAffiliationDescriptor	Stebbins	Stebbins	Stebbins Community Association	\N	\N	\N	\N	2023-11-08 13:57:37.51666	2023-11-08 13:57:37.516648	c3e52a05-fad2-490f-ae28-a853701b7779	2265
2270	uri://ed-fi.org/TribalAffiliationDescriptor	Sun'aq	Sun'aq	Sun'aq Tribe of Kodiak	\N	\N	\N	\N	2023-11-08 13:57:37.525109	2023-11-08 13:57:37.525071	598fd2f3-dfb1-46a0-b3ba-1bf7b9db04e2	2270
2276	uri://ed-fi.org/TribalAffiliationDescriptor	Sycuan	Sycuan	Sycuan Band of the Kumeyaay Nation	\N	\N	\N	\N	2023-11-08 13:57:37.534752	2023-11-08 13:57:37.534724	0006d671-b298-4079-b83e-8976c0273779	2276
2282	uri://ed-fi.org/TribalAffiliationDescriptor	Tazlina	Tazlina	Native Village of Tazlina	\N	\N	\N	\N	2023-11-08 13:57:37.54813	2023-11-08 13:57:37.548095	e0c00358-38c2-4196-ae91-28d19248b1f7	2282
2286	uri://ed-fi.org/TribalAffiliationDescriptor	Te-Moak	Te-Moak	Te-Moak Tribe of Western Shoshone Indians of Nevada (Four constituent bands: Battle Mountain Band, Elko Band, South Fork Band and Wells Band)	\N	\N	\N	\N	2023-11-08 13:57:37.55411	2023-11-08 13:57:37.554082	24cdbe38-d1c6-49f3-a680-773353d653d2	2286
2288	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco Tribal Town	Thlopthlocco Tribal Town	Thlopthlocco Tribal Town	\N	\N	\N	\N	2023-11-08 13:57:37.56089	2023-11-08 13:57:37.560485	33228579-6441-468a-83a2-7c22afd052b1	2288
2294	uri://ed-fi.org/TribalAffiliationDescriptor	Tolowa Dee-ni'	Tolowa Dee-ni'	Tolowa Dee-ni' Nation	\N	\N	\N	\N	2023-11-08 13:57:37.570151	2023-11-08 13:57:37.570111	af6d3c7e-1e71-407d-87e8-ebba971e9ba1	2294
2301	uri://ed-fi.org/TribalAffiliationDescriptor	Tuluksak	Tuluksak	Tuluksak Native Community	\N	\N	\N	\N	2023-11-08 13:57:37.585008	2023-11-08 13:57:37.584956	4f064592-772d-4567-9469-d398cdc206f4	2301
2304	uri://ed-fi.org/TribalAffiliationDescriptor	Tununak	Tununak	Native Village of Tununak	\N	\N	\N	\N	2023-11-08 13:57:37.593118	2023-11-08 13:57:37.593089	cff31071-b53c-4efd-8811-c921b890b73b	2304
2308	uri://ed-fi.org/TribalAffiliationDescriptor	Twenty-Nine Palms	Twenty-Nine Palms	Twenty-Nine Palms Band of Mission Indians of California	\N	\N	\N	\N	2023-11-08 13:57:37.602075	2023-11-08 13:57:37.602049	6c10469c-b355-43b2-9841-0be03ced2688	2308
2311	uri://ed-fi.org/TribalAffiliationDescriptor	Tyonek	Tyonek	Native Village of Tyonek	\N	\N	\N	\N	2023-11-08 13:57:37.61018	2023-11-08 13:57:37.610122	84bd72ac-d6d7-45ac-a27a-599e189bf146	2311
2314	uri://ed-fi.org/TribalAffiliationDescriptor	United Auburn	United Auburn	United Auburn Indian Community of the Auburn Rancheria of California	\N	\N	\N	\N	2023-11-08 13:57:37.617932	2023-11-08 13:57:37.617905	4c4ea5c1-1ab1-4bb9-8a3c-eb6112f2f3a9	2314
2319	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Sioux	Upper Sioux	Upper Sioux Community, Minnesota	\N	\N	\N	\N	2023-11-08 13:57:37.627527	2023-11-08 13:57:37.627512	65ef270e-7a3b-4beb-82bd-61f3a0abb12c	2319
2327	uri://ed-fi.org/TribalAffiliationDescriptor	Wales	Wales	Native Village of Wales	\N	\N	\N	\N	2023-11-08 13:57:37.646799	2023-11-08 13:57:37.645986	7ab18c85-5df4-4b32-9a07-39c6d7266285	2327
2330	uri://ed-fi.org/TribalAffiliationDescriptor	Warms Springs Tribe	Warms Springs Tribe	Confederated Tribes of the Warm Springs Reservation of Oregon	\N	\N	\N	\N	2023-11-08 13:57:37.652999	2023-11-08 13:57:37.652929	957d8ed1-a770-4b4f-97d8-d809c539686b	2330
2334	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain AK	White Mountain AK	Native Village of White Mountain	\N	\N	\N	\N	2023-11-08 13:57:37.660507	2023-11-08 13:57:37.66048	5665045e-decc-4e1f-a149-72f76b2918e6	2334
2336	uri://ed-fi.org/TribalAffiliationDescriptor	Wilton	Wilton	Wilton Rancheria, California	\N	\N	\N	\N	2023-11-08 13:57:37.666472	2023-11-08 13:57:37.66643	1c94dc5e-e82d-4291-b8da-152bbf0dd6a1	2336
2339	uri://ed-fi.org/TribalAffiliationDescriptor	Wiyot	Wiyot	Wiyot Tribe, California	\N	\N	\N	\N	2023-11-08 13:57:37.67166	2023-11-08 13:57:37.671637	56bd78ef-20ac-438a-8662-463d4671be94	2339
2340	uri://ed-fi.org/TribalAffiliationDescriptor	Wyandotte	Wyandotte	Wyandotte Nation	\N	\N	\N	\N	2023-11-08 13:57:37.677019	2023-11-08 13:57:37.677003	6c305480-df17-4dc6-8d48-e6e9ba436cbe	2340
2343	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Prescott	Yavapai-Prescott	Yavapai-Prescott Indian Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.684584	2023-11-08 13:57:37.684567	61b3786a-dc72-40ec-a98e-ed255ed206d5	2343
2347	uri://ed-fi.org/TribalAffiliationDescriptor	Yomba Shoshone	Yomba Shoshone	Yomba Shoshone Tribe of the Yomba Reservation, Nevada	\N	\N	\N	\N	2023-11-08 13:57:37.693085	2023-11-08 13:57:37.693047	dbc1e21b-d7fb-4538-95a1-f59e7c1836f7	2347
2351	uri://ed-fi.org/TribalAffiliationDescriptor	Aroostok	DEPRECATED: Aroostok	DEPRECATED: Aroostook Band of Micmacs	\N	\N	\N	\N	2023-11-08 13:57:37.702998	2023-11-08 13:57:37.70297	3b9cbc98-7bc9-4c70-b6be-b6c7916d6a67	2351
2357	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne-Arapaho	DEPRECATED: Cheyenne-Arapaho	DEPRECATED: Cheyenne River Sioux Tribe of the Cheyenne River Reservation, SD	\N	\N	\N	\N	2023-11-08 13:57:37.716188	2023-11-08 13:57:37.716175	a1406e3a-0327-4e0c-97ba-93d80170fe2b	2357
2360	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero	DEPRECATED: Mescalero	DEPRECATED: Mescalero Apache Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.720528	2023-11-08 13:57:37.720512	2c517224-83d5-46d4-9c75-b29bcb74e567	2360
2367	uri://ed-fi.org/TribalAffiliationDescriptor	Osage	DEPRECATED: Osage	DEPRECATED: The Osage Nation	\N	\N	\N	\N	2023-11-08 13:57:37.738917	2023-11-08 13:57:37.738902	203dabc6-0511-4871-8ef1-c2f994c7949d	2367
2369	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw	DEPRECATED: Quapaw	DEPRECATED: The Quapaw Tribe of Indians	\N	\N	\N	\N	2023-11-08 13:57:37.747879	2023-11-08 13:57:37.747851	882dce2a-86bc-49ea-a63b-1db9551501f0	2369
2372	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah	DEPRECATED: Ramah	DEPRECATED: Ramah Navajo Chapter	\N	\N	\N	\N	2023-11-08 13:57:37.751613	2023-11-08 13:57:37.751586	461fe4a5-c697-4c09-88a7-ea7156429c2f	2372
2375	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatoff	DEPRECATED: Salamatoff	DEPRECATED: Village of Salamatoff	\N	\N	\N	\N	2023-11-08 13:57:37.761924	2023-11-08 13:57:37.761866	966c8e0f-7f42-4eda-aac1-450677a35132	2375
2379	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco	DEPRECATED: Thlopthlocco	DEPRECATED: Thlopthlocco Tribal Town	\N	\N	\N	\N	2023-11-08 13:57:37.769323	2023-11-08 13:57:37.769213	b8e053b2-b4ab-4aae-af91-698d85ccc595	2379
2382	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah	DEPRECATED: United Keetoowah	DEPRECATED: United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.773434	2023-11-08 13:57:37.773407	08465e6d-fb3a-4754-aeb8-cc9dc41dfedb	2382
2384	uri://ed-fi.org/TribalAffiliationDescriptor	Zuni	DEPRECATED: Zuni	DEPRECATED: Zuni Tribe of the Zuni Reservation	\N	\N	\N	\N	2023-11-08 13:57:37.779776	2023-11-08 13:57:37.779749	e439064d-8e37-4619-b0bf-1ae6c64a369a	2384
2312	uri://ed-fi.org/TribalAffiliationDescriptor	Ugashik	Ugashik	Ugashik Village	\N	\N	\N	\N	2023-11-08 13:57:37.610539	2023-11-08 13:57:37.610514	ea4ddd84-0f59-4125-985f-6248780c3965	2312
2446	uri://ed-fi.org/RecognitionTypeDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	\N	2023-11-08 13:57:38.047154	2023-11-08 13:57:38.046201	8b403048-3899-4050-b449-012c6cb47f28	2446
2317	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah Band	United Keetoowah Band	United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.620749	2023-11-08 13:57:37.620731	3f60468e-b69d-4fe2-91e9-a7c18a64fb9b	2317
2321	uri://ed-fi.org/TribalAffiliationDescriptor	Ute	Ute	Ute Indian Tribe of the Uintah & Ouray Reservation, Utah	\N	\N	\N	\N	2023-11-08 13:57:37.631034	2023-11-08 13:57:37.63084	c8f33489-b9d6-4f52-916e-cc26efdf0d2b	2321
2325	uri://ed-fi.org/TribalAffiliationDescriptor	Viejas	Viejas	Capitan Grande Band of Diegueno Mission Indians of California: Viejas (Baron Long) Group of Capitan Grande Band of Mission Indians of the Viejas Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:37.638872	2023-11-08 13:57:37.638821	e735d918-b0a3-4eb6-9b95-6c12a5f2137a	2325
2328	uri://ed-fi.org/TribalAffiliationDescriptor	Walker River	Walker River	Walker River Paiute Tribe of the Walker River Reservation, Nevada	\N	\N	\N	\N	2023-11-08 13:57:37.64772	2023-11-08 13:57:37.647459	7b7f6849-af0a-4a59-b294-aa97544f9dd2	2328
2341	uri://ed-fi.org/TribalAffiliationDescriptor	Wrangell	Wrangell	Wrangell Cooperative Association	\N	\N	\N	\N	2023-11-08 13:57:37.67743	2023-11-08 13:57:37.677415	6eead7f1-0e72-47d4-9fa6-c3371aa12092	2341
2346	uri://ed-fi.org/TribalAffiliationDescriptor	Yerington	Yerington	Yerington Paiute Tribe of the Yerington Colony and Campbell Ranch, Nevada	\N	\N	\N	\N	2023-11-08 13:57:37.68805	2023-11-08 13:57:37.688025	4fea272e-1b06-4372-b364-65036ddf5fab	2346
2352	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Slope	DEPRECATED: Arctic Slope	DEPRECATED: Inupiat Community of the Arctic Slope	\N	\N	\N	\N	2023-11-08 13:57:37.704118	2023-11-08 13:57:37.70409	442a5a5a-1ef1-43ca-a061-0fa4cae49899	2352
2361	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee	DEPRECATED: Muscogee	DEPRECATED: The Muscogee (Creek) Nation	\N	\N	\N	\N	2023-11-08 13:57:37.724469	2023-11-08 13:57:37.724442	cb2c03c9-50bc-4e42-b0b7-85364eb09012	2361
2363	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay	DEPRECATED: Ohkay	DEPRECATED: Ohkay Owingeh	\N	\N	\N	\N	2023-11-08 13:57:37.730138	2023-11-08 13:57:37.730116	a0a60e6b-9b33-44a0-a313-cc48eb1106e0	2363
2368	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquaddy Pleasant Point	DEPRECATED: Passamaquaddy Pleasant Point	DEPRECATED: Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	\N	2023-11-08 13:57:37.74275	2023-11-08 13:57:37.742735	b30e3c5f-1350-4d67-89d6-357d04c6cc9b	2368
2370	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria	DEPRECATED: Peoria	DEPRECATED: Peoria Tribe of Indians of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.748676	2023-11-08 13:57:37.748516	f6f39cb6-0b48-4a9a-8e26-8e3081254f4d	2370
2374	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation of Missouri in KS and NE	DEPRECATED: Sac and Fox Nation of Missouri in Kansas and Nebraska	DEPRECATED: Sac and Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	\N	2023-11-08 13:57:37.758771	2023-11-08 13:57:37.758741	14f6a9e0-bd9e-45b8-b9a8-9f4c90a1be8f	2374
2378	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole of Oklahoma	DEPRECATED: Seminole of Oklahoma	DEPRECATED: The Seminole Nation of Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.765507	2023-11-08 13:57:37.765423	d81736ba-ea60-46a7-94fd-f5beee7cdd83	2378
2381	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee	DEPRECATED: Shawnee	DEPRECATED: Shawnee Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.770809	2023-11-08 13:57:37.770782	d5968a73-aa6e-4408-85d4-ac04e01bd333	2381
2387	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Entry in family Bible	Entry in family Bible	Entry in family Bible	\N	\N	\N	\N	2023-11-08 13:57:37.809342	2023-11-08 13:57:37.809335	13561564-a3da-4d7e-a2de-3fc989e7e15c	2387
2389	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:37.81745	2023-11-08 13:57:37.817407	236164d3-650a-4499-8f15-e8e4b0145630	2389
2394	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other official document	Other official document	Other official document	\N	\N	\N	\N	2023-11-08 13:57:37.824287	2023-11-08 13:57:37.824227	ebdce47f-d04a-4f91-bbcc-7b443212b07c	2394
2397	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Physicians certificate	Physicians certificate	Physicians certificate	\N	\N	\N	\N	2023-11-08 13:57:37.8313	2023-11-08 13:57:37.8312	7d0ca11d-b601-4017-8ac0-cacbeadc3afa	2397
2402	uri://ed-fi.org/PerformanceLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	\N	2023-11-08 13:57:37.868848	2023-11-08 13:57:37.867714	c59452d0-7b60-48dc-af18-7888767f868e	2403
2407	uri://ed-fi.org/PerformanceLevelDescriptor	Did Not Meet Standard	Did Not Meet Standard	Did Not Meet Standard	\N	\N	\N	\N	2023-11-08 13:57:37.87879	2023-11-08 13:57:37.878729	63f7eb66-0b5f-4bf2-b210-3fa8a9f4b203	2407
2409	uri://ed-fi.org/PerformanceLevelDescriptor	Commended Performance	DEPRECATED: Commended Performance	DEPRECATED: Commended Performance	\N	\N	\N	\N	2023-11-08 13:57:37.884453	2023-11-08 13:57:37.884426	3cf34a36-9084-4fa4-a6bf-35a8f927d302	2409
2414	uri://ed-fi.org/CareerPathwayDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	\N	2023-11-08 13:57:37.926379	2023-11-08 13:57:37.925401	1367a703-76cb-413f-b278-e3e050604cad	2414
2419	uri://ed-fi.org/CareerPathwayDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	\N	2023-11-08 13:57:37.934605	2023-11-08 13:57:37.934581	b532240e-2f17-4a45-a2af-d5fdb22ca586	2419
2422	uri://ed-fi.org/CareerPathwayDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	\N	2023-11-08 13:57:37.940488	2023-11-08 13:57:37.940459	f5c505f5-ac0a-43ee-ac7c-79b8a1f04af1	2422
2425	uri://ed-fi.org/CareerPathwayDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	\N	2023-11-08 13:57:37.944385	2023-11-08 13:57:37.944351	5e6bcb0b-0841-4621-b3ef-5b9fe14f7c09	2425
2428	uri://ed-fi.org/CareerPathwayDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:37.951542	2023-11-08 13:57:37.951347	cece494a-077a-4874-aa1b-ba5b9ad6b052	2428
2434	uri://ed-fi.org/AddressTypeDescriptor	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	\N	\N	\N	\N	2023-11-08 13:57:37.988151	2023-11-08 13:57:37.986957	43182c5d-24f0-4c90-842c-2d0fb0b75680	2434
2437	uri://ed-fi.org/AddressTypeDescriptor	Mailing	Mailing	Mailing	\N	\N	\N	\N	2023-11-08 13:57:37.998356	2023-11-08 13:57:37.998328	eeb1a6a3-b915-4a25-8b57-c42b13d1d70e	2437
2442	uri://ed-fi.org/AddressTypeDescriptor	Physical	Physical	Physical	\N	\N	\N	\N	2023-11-08 13:57:38.008199	2023-11-08 13:57:38.008157	a0e5e48e-084a-49f4-a278-3c46d9c0fb55	2442
2329	uri://ed-fi.org/TribalAffiliationDescriptor	Wampanoag	Wampanoag	Wampanoag Tribe of Gay Head (Aquinnah)	\N	\N	\N	\N	2023-11-08 13:57:37.651936	2023-11-08 13:57:37.651694	a79f0759-aa31-4abb-bc7e-ee03c003cc48	2329
2332	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain	White Mountain	White Mountain Apache Tribe of the Fort Apache Reservation, Arizona	\N	\N	\N	\N	2023-11-08 13:57:37.659555	2023-11-08 13:57:37.659095	88766ad3-a0e0-495b-bea2-b21583ff1a34	2332
2337	uri://ed-fi.org/TribalAffiliationDescriptor	Winnebago	Winnebago	Winnebago Tribe of Nebraska	\N	\N	\N	\N	2023-11-08 13:57:37.667395	2023-11-08 13:57:37.667353	69033672-60e6-48aa-8d91-5ba5ce6996ad	2337
2344	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Apache	Yavapai-Apache	Yavapai-Apache Nation of the Camp Verde Indian Reservation, Arizona	\N	\N	\N	\N	2023-11-08 13:57:37.686198	2023-11-08 13:57:37.686162	5de3c7d9-5e25-4424-a468-3b95929496ee	2344
2349	uri://ed-fi.org/TribalAffiliationDescriptor	Yocha Dehe	Yocha Dehe	Yocha Dehe Wintun Nation, California	\N	\N	\N	\N	2023-11-08 13:57:37.695092	2023-11-08 13:57:37.694732	87210927-6383-40bf-a41e-450d8642ffed	2349
2350	uri://ed-fi.org/TribalAffiliationDescriptor	Yurok	Yurok	Yurok Tribe of the Yurok Reservation, California	\N	\N	\N	\N	2023-11-08 13:57:37.700378	2023-11-08 13:57:37.700341	1b5f2724-1843-4e29-a4f8-0d860b571167	2350
2354	uri://ed-fi.org/TribalAffiliationDescriptor	Atqasuk	DEPRECATED: Atqasuk	DEPRECATED: Atqasuk Village (Atkasook)	\N	\N	\N	\N	2023-11-08 13:57:37.708567	2023-11-08 13:57:37.70851	e690c9be-7643-46a3-a921-1390a7656a8d	2354
2356	uri://ed-fi.org/TribalAffiliationDescriptor	Iqurmuit	DEPRECATED: Iqurmuit	DEPRECATED: Iqurmuit Traditional Council	\N	\N	\N	\N	2023-11-08 13:57:37.713983	2023-11-08 13:57:37.713948	8f1cf2a6-6814-4aca-aba4-35c9c5f86344	2356
2359	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti-Kaah	DEPRECATED: Kluti-Kaah	DEPRECATED: Native Village of Kluti-Kaah (aka Copper Center)	\N	\N	\N	\N	2023-11-08 13:57:37.720133	2023-11-08 13:57:37.720097	a7d569e9-b89c-40bc-b8ac-4db23f4625a6	2359
2362	uri://ed-fi.org/TribalAffiliationDescriptor	Northfork	DEPRECATED: Northfork	DEPRECATED: Northfork Rancheria of Mono Indians of California	\N	\N	\N	\N	2023-11-08 13:57:37.726339	2023-11-08 13:57:37.726325	968e1a05-97ea-4a03-b3ab-9b98590ac3f5	2362
2364	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamuit	DEPRECATED: Ohogamuit	DEPRECATED: Village of Ohogamiut	\N	\N	\N	\N	2023-11-08 13:57:37.73102	2023-11-08 13:57:37.730994	04a5f1ab-5893-439d-a9ee-64084d623fa5	2364
2365	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida  Nation of New York	DEPRECATED: Oneida  Nation of New York	DEPRECATED: Oneida  Nation of New York	\N	\N	\N	\N	2023-11-08 13:57:37.734957	2023-11-08 13:57:37.734944	d439c5fd-0890-4526-8e7d-b18a37af0d4e	2365
2373	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation	DEPRECATED: Oklahoma	DEPRECATED: Sac and Fox Nation, Oklahoma	\N	\N	\N	\N	2023-11-08 13:57:37.752913	2023-11-08 13:57:37.7529	44c29a47-843c-4208-89fb-13097fac646e	2373
2376	uri://ed-fi.org/TribalAffiliationDescriptor	San Manuel	DEPRECATED: San Manuel	DEPRECATED: San Manuel Band of Mission Indians, California	\N	\N	\N	\N	2023-11-08 13:57:37.761465	2023-11-08 13:57:37.761436	63c99eb6-dd32-4713-817a-9b12d29b7ea3	2376
2380	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga	DEPRECATED: Seneca-Cayuga	DEPRECATED: Seneca-Cayuga Nation	\N	\N	\N	\N	2023-11-08 13:57:37.770091	2023-11-08 13:57:37.770046	1cd9dad5-2a2f-4736-a7d9-ef8a83959968	2380
2385	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Baptismal or church certificate	Baptismal or church certificate	Baptismal or church certificate	\N	\N	\N	\N	2023-11-08 13:57:37.808967	2023-11-08 13:57:37.808038	e97b7885-4ea5-4a7a-a507-48dcad33acef	2385
2390	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Hospital certificate	Hospital certificate	Hospital certificate	\N	\N	\N	\N	2023-11-08 13:57:37.817502	2023-11-08 13:57:37.817478	3871a9d7-4a39-4c19-b6f6-b244558b915a	2390
2393	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other non-official document	Other non-official document	Other non-official document	\N	\N	\N	\N	2023-11-08 13:57:37.824294	2023-11-08 13:57:37.823975	65f2e272-c677-4fd6-a8b6-abee87ec8ad1	2393
2398	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Previously verified school records	Previously verified school records	Previously verified school records	\N	\N	\N	\N	2023-11-08 13:57:37.832032	2023-11-08 13:57:37.832018	a34c297c-a5f2-4967-83f3-d9cce667db62	2398
2403	uri://ed-fi.org/PerformanceLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	\N	2023-11-08 13:57:37.868854	2023-11-08 13:57:37.867708	ed61b731-83e5-4593-9040-53034c518c39	2402
2405	uri://ed-fi.org/PerformanceLevelDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	\N	2023-11-08 13:57:37.877452	2023-11-08 13:57:37.877394	caf362d2-960b-4cbc-8857-b972e7c32877	2405
2411	uri://ed-fi.org/PerformanceLevelDescriptor	Minimum	DEPRECATED: Minimum	DEPRECATED: Minimum	\N	\N	\N	\N	2023-11-08 13:57:37.886224	2023-11-08 13:57:37.88621	db08d07b-cc74-4362-9ecd-bf2587f5f68a	2411
2412	uri://ed-fi.org/PerformanceLevelDescriptor	Satisfactory	DEPRECATED: Satisfactory	DEPRECATED: Satisfactory	\N	\N	\N	\N	2023-11-08 13:57:37.891895	2023-11-08 13:57:37.891881	4ea12b96-589b-4619-b8ea-7cd74de48e51	2412
2415	uri://ed-fi.org/CareerPathwayDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	\N	2023-11-08 13:57:37.926478	2023-11-08 13:57:37.925377	8855229d-ef46-414c-9f02-58ae5603b86d	2415
2420	uri://ed-fi.org/CareerPathwayDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	\N	2023-11-08 13:57:37.93644	2023-11-08 13:57:37.936411	f8ecea31-137c-4421-963f-a5282558a6fd	2420
2423	uri://ed-fi.org/CareerPathwayDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	\N	2023-11-08 13:57:37.943271	2023-11-08 13:57:37.943205	5ec7c8bc-8b45-4d02-88b1-91bd3dd42e30	2423
2427	uri://ed-fi.org/CareerPathwayDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	\N	2023-11-08 13:57:37.949554	2023-11-08 13:57:37.949244	4f932629-b4dd-4420-84b0-542ef2e41da3	2427
2430	uri://ed-fi.org/CareerPathwayDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	\N	2023-11-08 13:57:37.953883	2023-11-08 13:57:37.953852	64e9e586-c946-4763-a9d5-311735252e67	2430
2432	uri://ed-fi.org/AddressTypeDescriptor	Billing	Billing	Billing	\N	\N	\N	\N	2023-11-08 13:57:37.988101	2023-11-08 13:57:37.986977	cb2ce883-265f-4385-a31b-4a171e3e40c3	2432
2438	uri://ed-fi.org/AddressTypeDescriptor	Hotels/Motels	Hotels/Motels	Hotels/Motels	\N	\N	\N	\N	2023-11-08 13:57:37.997885	2023-11-08 13:57:37.997858	0793d21f-6de6-4c28-9588-43b56a91512b	2438
2441	uri://ed-fi.org/AddressTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.007629	2023-11-08 13:57:38.007568	c4d281ba-0b34-4bcc-948f-862ad3301aa4	2441
2383	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain	DEPRECATED: Ute Mountain	DEPRECATED: Ute Mountain Ute Tribe	\N	\N	\N	\N	2023-11-08 13:57:37.776828	2023-11-08 13:57:37.776766	ac703dad-bb9e-4e49-9ec2-5036a1a489c6	2383
2386	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Birth certificate	Birth certificate	Birth certificate	\N	\N	\N	\N	2023-11-08 13:57:37.809368	2023-11-08 13:57:37.809355	6d013548-7dbc-4608-bf33-7fb31367f6e3	2386
2392	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Life insurance policy	Life insurance policy	Life insurance policy	\N	\N	\N	\N	2023-11-08 13:57:37.819373	2023-11-08 13:57:37.819293	7a729600-2b9b-4a14-8436-ca656b6044f9	2392
2395	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Passport	Passport	Passport	\N	\N	\N	\N	2023-11-08 13:57:37.828228	2023-11-08 13:57:37.828175	72ab57a8-798d-445c-819b-2e4efd9e63b3	2395
2399	uri://ed-fi.org/PersonalInformationVerificationDescriptor	State-issued ID	State-issued ID	State-issued ID	\N	\N	\N	\N	2023-11-08 13:57:37.834569	2023-11-08 13:57:37.834542	61c7970a-4100-42d6-afd6-b487c8414dd6	2399
2400	uri://ed-fi.org/PerformanceLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-11-08 13:57:37.86873	2023-11-08 13:57:37.867738	6081ca4b-90a7-41ef-a2c6-3d30732cc765	2400
2404	uri://ed-fi.org/PerformanceLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-11-08 13:57:37.877451	2023-11-08 13:57:37.877413	ae3cbe52-c94e-4d72-92ab-c1797f001380	2404
2410	uri://ed-fi.org/PerformanceLevelDescriptor	Above Benchmark	DEPRECATED: Above Benchmark	DEPRECATED: Above Benchmark	\N	\N	\N	\N	2023-11-08 13:57:37.885514	2023-11-08 13:57:37.885375	74b0a036-6ad2-469b-b08a-50f871cdf31a	2410
2416	uri://ed-fi.org/CareerPathwayDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	\N	2023-11-08 13:57:37.926502	2023-11-08 13:57:37.925392	348d4bc3-1025-4c44-b16a-36c264038fa8	2416
2418	uri://ed-fi.org/CareerPathwayDescriptor	Finance	Finance	Finance	\N	\N	\N	\N	2023-11-08 13:57:37.934445	2023-11-08 13:57:37.934415	96da412c-534a-4087-a285-b51ee28e0d83	2418
2429	uri://ed-fi.org/CareerPathwayDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	\N	2023-11-08 13:57:37.952621	2023-11-08 13:57:37.952578	9fdc4fb0-b6ae-47dc-bf2c-4597a3f25049	2429
2433	uri://ed-fi.org/AddressTypeDescriptor	Father Address	Father Address	Father Address	\N	\N	\N	\N	2023-11-08 13:57:37.988216	2023-11-08 13:57:37.98698	f0c6319e-30c6-4fd0-a713-9c10d6fd1db6	2433
2435	uri://ed-fi.org/AddressTypeDescriptor	Mother Address	Mother Address	Mother Address	\N	\N	\N	\N	2023-11-08 13:57:37.997885	2023-11-08 13:57:37.99784	9bd8aded-efdc-4d2c-a04d-8943ae22479f	2435
2440	uri://ed-fi.org/AddressTypeDescriptor	Shipping	Shipping	Shipping	\N	\N	\N	\N	2023-11-08 13:57:38.00751	2023-11-08 13:57:38.007445	2a2f247a-2014-4864-bb59-338acca22f86	2440
2445	uri://ed-fi.org/AddressTypeDescriptor	Work	Work	Work	\N	\N	\N	\N	2023-11-08 13:57:38.015967	2023-11-08 13:57:38.015786	e73d218f-3d78-4641-a4d2-b131af4b5b9a	2445
2449	uri://ed-fi.org/RecognitionTypeDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	\N	2023-11-08 13:57:38.047389	2023-11-08 13:57:38.046197	522add86-be5c-4aef-8d90-2214cf46d8b1	2449
2453	uri://ed-fi.org/RecognitionTypeDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	\N	2023-11-08 13:57:38.05684	2023-11-08 13:57:38.056815	fefa2f89-6a55-4b81-9ba4-a2099519ce18	2453
2459	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Residential Broadband	Residential Broadband	The type of internet service used in the student’s primary place of residence is residential broadband.	\N	\N	\N	\N	2023-11-08 13:57:38.09846	2023-11-08 13:57:38.097314	e9c5b541-76da-40d6-b6fb-acab0d64d5bb	2459
2463	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Dial-up	Dial-up	The type of internet service used in the student’s primary place of residence is dial-up.	\N	\N	\N	\N	2023-11-08 13:57:38.107135	2023-11-08 13:57:38.107122	c93eb892-4b76-43a8-878a-790ef03ed2d3	2463
2468	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Speech-Language And Audiology Services	Speech-Language And Audiology Services	Speech-Language And Audiology Services	\N	\N	\N	\N	2023-11-08 13:57:38.14549	2023-11-08 13:57:38.144338	488d6df4-9f5c-42d3-be00-139c95b26160	2468
2472	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Counseling Services	Counseling Services (Including Rehabilitation Counseling)	Counseling Services (Including Rehabilitation Counseling)	\N	\N	\N	\N	2023-11-08 13:57:38.15604	2023-11-08 13:57:38.156011	b285bfa3-e654-4189-9992-a6c8cdb32e08	2472
2476	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	School Health and/or School Nurse Services	School Health and/or School Nurse Services	School Health and/or School Nurse Services	\N	\N	\N	\N	2023-11-08 13:57:38.165672	2023-11-08 13:57:38.165651	d22c8c88-285b-4325-8f54-536f2636c76b	2476
2478	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Parent Counseling And Training	Parent Counseling And Training	Parent Counseling And Training	\N	\N	\N	\N	2023-11-08 13:57:38.17034	2023-11-08 13:57:38.170314	458befdf-0692-4729-a0f0-4ed2aeaa33af	2478
2479	uri://ed-fi.org/ProviderProfitabilityDescriptor	ForProfit	ForProfit	ForProfit	\N	\N	\N	\N	2023-11-08 13:57:38.223939	2023-11-08 13:57:38.2229	8d5d7219-e2cf-42b9-8f2a-e9afff3f8ce6	2479
2485	uri://ed-fi.org/CalendarTypeDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:38.236291	2023-11-08 13:57:38.236279	05c47a70-3178-4922-ac6e-808f47c9b12b	2485
2489	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with a high school diploma	Graduated with a high school diploma	Graduated with a high school diploma	\N	\N	\N	\N	2023-11-08 13:57:38.275369	2023-11-08 13:57:38.27441	1db50259-3024-44aa-8381-c743532695b6	2489
2494	uri://ed-fi.org/ReasonExitedDescriptor	Received certificate of completion or equivalent	Received completion certificate, modified diploma, or met IEP requirements	Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	\N	2023-11-08 13:57:38.287704	2023-11-08 13:57:38.287637	042403e7-8b91-4206-8da6-98f40f393d6e	2494
2497	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to another district or school	Transferred to another district or school	Transferred to another district or school	\N	\N	\N	\N	2023-11-08 13:57:38.293742	2023-11-08 13:57:38.293687	8f59297f-9a25-46d3-802e-330019174df0	2497
2499	uri://ed-fi.org/ReasonExitedDescriptor	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	\N	\N	\N	\N	2023-11-08 13:57:38.298698	2023-11-08 13:57:38.2981	45b191fa-b3a3-44fb-b1e3-f2d0c6fa44bf	2499
2388	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Drivers license	Drivers license	Drivers license	\N	\N	\N	\N	2023-11-08 13:57:37.809492	2023-11-08 13:57:37.8093	f88babdd-047b-4fc4-a980-a194351b5885	2388
2452	uri://ed-fi.org/RecognitionTypeDescriptor	Medals	Medals	Medals	\N	\N	\N	\N	2023-11-08 13:57:38.056165	2023-11-08 13:57:38.05614	6db5ba6e-7212-4d6c-adf7-34e7069a0fdb	2452
2391	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Immigration document/visa	Immigration document/visa	Immigration document/visa	\N	\N	\N	\N	2023-11-08 13:57:37.818188	2023-11-08 13:57:37.817954	a4715501-688c-4ef7-96a6-a283789a11e5	2391
2396	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Parents affidavit	Parents affidavit	Parents affidavit	\N	\N	\N	\N	2023-11-08 13:57:37.828751	2023-11-08 13:57:37.827606	53322f79-fce9-46e6-a178-67a1ee0066f0	2396
2401	uri://ed-fi.org/PerformanceLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-11-08 13:57:37.86892	2023-11-08 13:57:37.867733	e5abbb73-80de-4915-918b-b72748612aff	2401
2406	uri://ed-fi.org/PerformanceLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-11-08 13:57:37.878476	2023-11-08 13:57:37.878423	30711b1d-27f1-413d-82c0-c2045018cb68	2406
2408	uri://ed-fi.org/PerformanceLevelDescriptor	Proficient	DEPRECATED: Proficient	DEPRECATED: Proficient	\N	\N	\N	\N	2023-11-08 13:57:37.884337	2023-11-08 13:57:37.884295	b7ad8cb4-d0f3-4b86-9ddc-6069d7b89ce3	2408
2413	uri://ed-fi.org/PerformanceLevelDescriptor	Unsatisfactory	DEPRECATED: Unsatisfactory	DEPRECATED: Unsatisfactory	\N	\N	\N	\N	2023-11-08 13:57:37.892671	2023-11-08 13:57:37.892643	fe8aabee-dfd1-4957-bf1d-78032dc6fd5c	2413
2417	uri://ed-fi.org/CareerPathwayDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	\N	2023-11-08 13:57:37.926482	2023-11-08 13:57:37.925369	799375e3-1320-45b0-977c-c01f449089d3	2417
2421	uri://ed-fi.org/CareerPathwayDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	\N	2023-11-08 13:57:37.936495	2023-11-08 13:57:37.936469	a653bcc8-1931-4f62-911f-0b07a520ea0e	2421
2424	uri://ed-fi.org/CareerPathwayDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	\N	2023-11-08 13:57:37.942949	2023-11-08 13:57:37.942906	4b289674-84d7-406e-bd95-728b9e4623cb	2424
2426	uri://ed-fi.org/CareerPathwayDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	\N	2023-11-08 13:57:37.946418	2023-11-08 13:57:37.946391	9f2c7e98-6bba-4748-b470-c29cbbcc1a67	2426
2431	uri://ed-fi.org/AddressTypeDescriptor	Guardian Address	Guardian Address	Guardian Address	\N	\N	\N	\N	2023-11-08 13:57:37.987928	2023-11-08 13:57:37.986952	b03283dd-96b8-4c35-905d-def174377091	2431
2436	uri://ed-fi.org/AddressTypeDescriptor	Home	Home	Home	\N	\N	\N	\N	2023-11-08 13:57:37.998011	2023-11-08 13:57:37.997969	8c6e45e7-e2f8-4d3f-9f67-d4bca244a8d2	2436
2439	uri://ed-fi.org/AddressTypeDescriptor	Shelter, Transitional housing, Awaiting Foster	Shelters, Transitional housing, Awaiting Foster Care	Shelters, Transitional housing, Awaiting Foster Care	\N	\N	\N	\N	2023-11-08 13:57:38.006355	2023-11-08 13:57:38.00631	a3de93c9-078b-49b0-9c99-9ad5bd499f21	2439
2447	uri://ed-fi.org/RecognitionTypeDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	\N	2023-11-08 13:57:38.047281	2023-11-08 13:57:38.04618	ad9b63cc-0175-4876-897f-0fe1ac7eaa2c	2447
2450	uri://ed-fi.org/RecognitionTypeDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	\N	2023-11-08 13:57:38.056104	2023-11-08 13:57:38.05603	5f47ca4c-445e-4c50-b931-c260284ee5d8	2450
2456	uri://ed-fi.org/RecognitionTypeDescriptor	Points	Points	Points	\N	\N	\N	\N	2023-11-08 13:57:38.063321	2023-11-08 13:57:38.063115	8d1f084d-5dbd-4460-acfc-f56ab16017b2	2456
2460	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Cellular Network	Cellular Network	The type of internet service used in the student’s primary place of residence is a cellular network that creates a hot spot using a cell phone for additional device access or access to the internet is only available through a cellular device.	\N	\N	\N	\N	2023-11-08 13:57:38.098517	2023-11-08 13:57:38.097311	753ef6b7-5031-4c6f-b20e-940b1c9abf74	2460
2462	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Satellite	Satellite	The type of internet service used in the student’s primary place of residence is satellite.	\N	\N	\N	\N	2023-11-08 13:57:38.106884	2023-11-08 13:57:38.106857	70d85004-626a-4c34-88db-451a007257ae	2462
2467	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Interpreting Services	Interpreting Services	Interpreting Services	\N	\N	\N	\N	2023-11-08 13:57:38.145325	2023-11-08 13:57:38.144323	512f60a9-2f5f-47db-b54b-38eea8b71e83	2467
2471	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Early Identification And Evaluation	Early Identification And Evaluation	Early Identification And Evaluation	\N	\N	\N	\N	2023-11-08 13:57:38.155654	2023-11-08 13:57:38.155617	f6e5e0f9-1556-4094-936e-1c18d5afe407	2471
2482	uri://ed-fi.org/CalendarTypeDescriptor	IEP	IEP	IEP	\N	\N	\N	\N	2023-11-08 13:57:38.230283	2023-11-08 13:57:38.228324	ad4534ce-481f-47d2-be0a-4cea6327668e	2482
2487	uri://ed-fi.org/ReasonExitedDescriptor	Discontinued schooling	Discontinued schooling	Discontinued schooling	\N	\N	\N	\N	2023-11-08 13:57:38.275378	2023-11-08 13:57:38.274424	34271ff2-529d-4a2b-adb7-eace205340ac	2487
2492	uri://ed-fi.org/ReasonExitedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.285141	2023-11-08 13:57:38.285105	ea29d583-3fd7-4b62-8907-45987a4000e9	2492
2495	uri://ed-fi.org/ReasonExitedDescriptor	Suspended or expelled from school	Suspended or expelled from school	Suspended or expelled from school	\N	\N	\N	\N	2023-11-08 13:57:38.292049	2023-11-08 13:57:38.292036	e6d9247c-1bec-4c2f-9d0d-669ae320deb2	2495
2503	uri://ed-fi.org/DiagnosisDescriptor	Dropout Risk	DEPRECATED: Dropout Risk	DEPRECATED: Dropout Risk	\N	\N	\N	\N	2023-11-08 13:57:38.336558	2023-11-08 13:57:38.335256	fb0c550b-d09e-410c-a0c2-d2769ea0dcd5	2503
2506	uri://ed-fi.org/SchoolTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-11-08 13:57:38.373295	2023-11-08 13:57:38.37326	8aab0b49-6b5e-4420-9e76-2d331b823b8c	2506
2508	uri://ed-fi.org/SchoolTypeDescriptor	Reportable Program	Reportable Program	Reportable Program	\N	\N	\N	\N	2023-11-08 13:57:38.380873	2023-11-08 13:57:38.380807	47aa8b48-f3a8-44f3-afca-8c7ebf432b56	2508
2511	uri://ed-fi.org/LanguageUseDescriptor	Correspondence language	Correspondence language	Correspondence language	\N	\N	\N	\N	2023-11-08 13:57:38.410981	2023-11-08 13:57:38.409693	99fff375-4d9f-4f86-a512-15e28101936d	2511
2516	uri://ed-fi.org/LanguageUseDescriptor	Written language	Written language	Written language	\N	\N	\N	\N	2023-11-08 13:57:38.420815	2023-11-08 13:57:38.420787	6c2eeb75-a3d7-4935-a14d-27688d1758cd	2516
2517	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 1	Limited Monitored 1	Limited Monitored 1	\N	\N	\N	\N	2023-11-08 13:57:38.455871	2023-11-08 13:57:38.454904	30e1907f-c2fd-4764-a541-0b0d3bc71d8d	2517
2454	uri://ed-fi.org/RecognitionTypeDescriptor	Monogram/letter	Monogram/letter	Monogram/letter	\N	\N	\N	\N	2023-11-08 13:57:38.061399	2023-11-08 13:57:38.06134	92cc90b3-54e4-4f16-9fde-b2bd9d21cf81	2454
2443	uri://ed-fi.org/AddressTypeDescriptor	Unsheltered	Unsheltered (cars, parks, temporary trailers, or abandoned buildings)	Unsheltered (e.g. cars, parks, campgrounds, temporary trailers including FEMA trailers, or abandoned buildings)	\N	\N	\N	\N	2023-11-08 13:57:38.012846	2023-11-08 13:57:38.012805	6da62940-151b-4f06-a09c-1586a382d82e	2443
2448	uri://ed-fi.org/RecognitionTypeDescriptor	Athletic awards	Athletic awards	Athletic awards	\N	\N	\N	\N	2023-11-08 13:57:38.047373	2023-11-08 13:57:38.046169	36e4e6f4-3341-4915-8baa-2c15d0fb4e72	2448
2451	uri://ed-fi.org/RecognitionTypeDescriptor	Letter of commendation	Letter of commendation	Letter of commendation	\N	\N	\N	\N	2023-11-08 13:57:38.056165	2023-11-08 13:57:38.05614	59d25c19-475d-49db-b4c2-8f32028b6781	2451
2455	uri://ed-fi.org/RecognitionTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.062656	2023-11-08 13:57:38.062618	603bb9e5-5035-4a86-bf5d-20bd7197c548	2455
2461	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Community Provided Wi-Fi	Community Provided Wi-Fi	The type of internet service used in the student’s primary place of residence is community provided Wi-Fi.	\N	\N	\N	\N	2023-11-08 13:57:38.09849	2023-11-08 13:57:38.097287	49c5e756-b0ea-4125-8c49-34fe2c1dd75b	2461
2465	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	None	None	There is no internet service in the student’s primary place of residence.	\N	\N	\N	\N	2023-11-08 13:57:38.108308	2023-11-08 13:57:38.108274	a0bd0238-0e3e-49ad-b941-939a90171c8d	2465
2470	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Psychological Services	Psychological Services	Psychological Services	\N	\N	\N	\N	2023-11-08 13:57:38.145493	2023-11-08 13:57:38.144306	5f4712bc-b0f8-418f-b810-44623b901919	2470
2474	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	\N	\N	\N	\N	2023-11-08 13:57:38.158378	2023-11-08 13:57:38.158358	9f043609-7455-4511-90ea-d094091cf4b8	2474
2475	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Medical Services	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	\N	\N	\N	\N	2023-11-08 13:57:38.164052	2023-11-08 13:57:38.163681	bfb4fe39-cdd2-4f63-a62d-d3374e301474	2475
2480	uri://ed-fi.org/ProviderProfitabilityDescriptor	Government Run	Government Run	Government Run	\N	\N	\N	\N	2023-11-08 13:57:38.224156	2023-11-08 13:57:38.222922	0a31ae6b-3ad4-4984-9a53-6849d73fe70f	2480
2484	uri://ed-fi.org/CalendarTypeDescriptor	Student Specific	Student Specific	Student Specific	\N	\N	\N	\N	2023-11-08 13:57:38.236139	2023-11-08 13:57:38.235988	d159ea1b-bcb3-4095-b282-76caeacbc188	2484
2486	uri://ed-fi.org/CalendarTypeDescriptor	Staff	Staff	Staff	\N	\N	\N	\N	2023-11-08 13:57:38.243704	2023-11-08 13:57:38.243582	87b5e63f-dcdc-4905-bf13-82be0ab11c66	2486
2488	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with an alternate diploma	Graduated with an alternate diploma	Graduated with an alternate diploma	\N	\N	\N	\N	2023-11-08 13:57:38.275372	2023-11-08 13:57:38.274433	435a986e-556d-4f5a-bfec-d415aca9bd6f	2488
2491	uri://ed-fi.org/ReasonExitedDescriptor	Moved out of state	Moved out of state	Moved out of state	\N	\N	\N	\N	2023-11-08 13:57:38.284653	2023-11-08 13:57:38.284624	9ae65d6b-4005-461c-9985-b1d3e898471e	2491
2498	uri://ed-fi.org/ReasonExitedDescriptor	Unknown reason	Unknown reason	Unknown reason	\N	\N	\N	\N	2023-11-08 13:57:38.29668	2023-11-08 13:57:38.295675	70b438b6-f395-4f82-9f99-9bc34fb45c24	2498
2502	uri://ed-fi.org/DiagnosisDescriptor	Low Attendance	DEPRECATED: Low Attendance	DEPRECATED: Low Attendance	\N	\N	\N	\N	2023-11-08 13:57:38.336585	2023-11-08 13:57:38.335301	f6e52ab2-e7eb-43a6-aa0c-ea3cde303037	2502
2505	uri://ed-fi.org/SchoolTypeDescriptor	Alternative	Alternative	Alternative	\N	\N	\N	\N	2023-11-08 13:57:38.371831	2023-11-08 13:57:38.370892	aef66d2d-10af-430f-b6bd-b429d5ce125a	2505
2510	uri://ed-fi.org/LanguageUseDescriptor	Dominant language	Dominant language	Dominant language	\N	\N	\N	\N	2023-11-08 13:57:38.410856	2023-11-08 13:57:38.409687	034ff05e-a2f8-4816-8168-b8cc4a287efb	2510
2515	uri://ed-fi.org/LanguageUseDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.42025	2023-11-08 13:57:38.420235	03ee8799-cfa4-4322-8cb7-922ceb394fdc	2515
2520	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited	Limited	Limited	\N	\N	\N	\N	2023-11-08 13:57:38.456095	2023-11-08 13:57:38.454886	659f1f23-2ebe-4f31-837d-5e8bdf94b4ec	2520
2524	uri://ed-fi.org/EntryTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.494559	2023-11-08 13:57:38.493388	ec3b2e96-9d53-4af7-9be7-a882ec347aab	2524
2526	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language or Two-way Immersion	Dual Language or Two-way Immersion	Dual Language or Two-way Immersion	\N	\N	\N	\N	2023-11-08 13:57:38.533903	2023-11-08 13:57:38.53284	57f6f83b-5b8a-4880-80b8-45eca3192c29	2526
2530	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.544097	2023-11-08 13:57:38.544031	ac777e50-7707-4d6b-ad3b-9317a280105c	2530
2534	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Two-Way Immersion	DEPRECATED: Two-Way Immersion	DEPRECATED: Two-Way Immersion	\N	\N	\N	\N	2023-11-08 13:57:38.551465	2023-11-08 13:57:38.551447	22039ae3-4c28-43f5-a186-b3f93ec699b9	2534
2537	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Heritage Language	DEPRECATED: Heritage Language	DEPRECATED: Heritage Language	\N	\N	\N	\N	2023-11-08 13:57:38.554418	2023-11-08 13:57:38.554392	15903f13-01cd-47eb-b69e-e73a71031ee5	2537
2539	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Structured English Immersion	DEPRECATED: Structured English Immersion	DEPRECATED: Structured English Immersion	\N	\N	\N	\N	2023-11-08 13:57:38.559688	2023-11-08 13:57:38.559537	b7eab0f6-ee19-4f6d-a5d2-c9046f7f8dcf	2539
2541	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content-Based ESL	DEPRECATED: Content-Based ESL	DEPRECATED: Content-Based ESL	\N	\N	\N	\N	2023-11-08 13:57:38.562903	2023-11-08 13:57:38.562836	b3b08920-fb7a-4b96-8da4-04cf62475b49	2541
2545	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-11-08 13:57:38.600406	2023-11-08 13:57:38.599315	8dfb3a49-8b87-4296-b725-d1b5e5675893	2545
2550	uri://ed-fi.org/StudentIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	\N	2023-11-08 13:57:38.615813	2023-11-08 13:57:38.615795	291e98fb-3eb4-48ff-a336-87da3ccdac73	2550
2554	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Student Number	Student Number	A category of IDs often provided to enable students and others to remember and use in daily operations. If none exists, the Student Number system is generally equivalent to the District system.	\N	\N	\N	\N	2023-11-08 13:57:38.624003	2023-11-08 13:57:38.623972	73ccb2fc-ff6d-4de9-8c63-30470496b7bf	2554
2457	uri://ed-fi.org/RecognitionTypeDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	\N	2023-11-08 13:57:38.065962	2023-11-08 13:57:38.065929	c12e5107-81a9-49ad-874e-0729521329c3	2457
2458	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Hot Spot	Hot Spot	The type of internet service used in the student’s primary place of residence is a standalone hot spot device that is not a cell phone that allows for additional device access.	\N	\N	\N	\N	2023-11-08 13:57:38.098345	2023-11-08 13:57:38.097291	de83e32b-3ace-4eb5-aa47-b2c71a367570	2458
2464	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Other	Other	The type of internet service used in the student’s primary place of residence is not yet defined.	\N	\N	\N	\N	2023-11-08 13:57:38.10757	2023-11-08 13:57:38.107529	35bc5ec7-7914-462d-b7e2-67345436d881	2464
2466	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Unknown	Unknown	It is not known whether there is internet service in the student’s primary place of residence.	\N	\N	\N	\N	2023-11-08 13:57:38.113836	2023-11-08 13:57:38.113761	69752439-c6ee-4518-b9f2-a045a9dc18fc	2466
2469	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Occupational And Physical Therapy	Occupational And Physical Therapy	Occupational And Physical Therapy	\N	\N	\N	\N	2023-11-08 13:57:38.145483	2023-11-08 13:57:38.144316	9a5f5ea9-19d0-48c6-947b-55abd6b41b8c	2469
2473	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Orientation And Mobility	Orientation And Mobility	Orientation And Mobility	\N	\N	\N	\N	2023-11-08 13:57:38.157148	2023-11-08 13:57:38.157134	2e419d94-8d04-4509-9b54-282d99381c34	2473
2477	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Social Work Services	Social Work Services	Social Work Services	\N	\N	\N	\N	2023-11-08 13:57:38.167647	2023-11-08 13:57:38.167611	58520a12-67a3-4cd0-a484-54a8eb39516f	2477
2481	uri://ed-fi.org/ProviderProfitabilityDescriptor	Nonprofit	Nonprofit	Nonprofit	\N	\N	\N	\N	2023-11-08 13:57:38.22409	2023-11-08 13:57:38.222906	ec4ed7bb-9da8-431c-8f79-fdbf91885d7e	2481
2483	uri://ed-fi.org/CalendarTypeDescriptor	Grade Level	Grade Level	Grade Level	\N	\N	\N	\N	2023-11-08 13:57:38.235151	2023-11-08 13:57:38.234533	e8524350-0f9d-4136-9dd8-a412633a85bc	2483
2490	uri://ed-fi.org/ReasonExitedDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	\N	2023-11-08 13:57:38.275352	2023-11-08 13:57:38.274406	8a0c21c7-0a0d-45ca-9b95-3ab0a070eaa1	2490
2493	uri://ed-fi.org/ReasonExitedDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	\N	2023-11-08 13:57:38.285463	2023-11-08 13:57:38.285431	117450b9-44d8-4620-9b59-54d494c14a89	2493
2496	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to regular education	Transferred to regular education	Transferred to regular education	\N	\N	\N	\N	2023-11-08 13:57:38.29271	2023-11-08 13:57:38.292568	920307a3-d238-49e5-9dc8-0a8c41075fcf	2496
2500	uri://ed-fi.org/PostingResultDescriptor	Position Filled	Position Filled	Position Filled	\N	\N	\N	\N	2023-11-08 13:57:38.333546	2023-11-08 13:57:38.332158	dcc8e450-f803-4fa7-b478-a2f1f6e4e08c	2500
2507	uri://ed-fi.org/SchoolTypeDescriptor	Regular	Regular	Regular	\N	\N	\N	\N	2023-11-08 13:57:38.374409	2023-11-08 13:57:38.37431	f455b64e-ce1b-45a4-9538-39b0d07fd8d4	2507
2512	uri://ed-fi.org/LanguageUseDescriptor	Native language	Native language	Native language	\N	\N	\N	\N	2023-11-08 13:57:38.410904	2023-11-08 13:57:38.409718	76a3410a-9c28-4b13-ae70-7159ea5f0682	2512
2513	uri://ed-fi.org/LanguageUseDescriptor	Other language proficiency	Other language proficiency	Other language proficiency	\N	\N	\N	\N	2023-11-08 13:57:38.419551	2023-11-08 13:57:38.419508	a678dff4-57e3-42ba-b813-b6385e486fcd	2513
2518	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	NotLimited	NotLimited	NotLimited	\N	\N	\N	\N	2023-11-08 13:57:38.456016	2023-11-08 13:57:38.454908	191384eb-ae29-46dc-be05-ecce5db9f36c	2518
2521	uri://ed-fi.org/EntryTypeDescriptor	Transfer	Transfer	Transfer	\N	\N	\N	\N	2023-11-08 13:57:38.494516	2023-11-08 13:57:38.493411	8178f70d-e136-4c5a-b068-2accd9d1cba0	2521
2529	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Missing	Missing	Missing	\N	\N	\N	\N	2023-11-08 13:57:38.534092	2023-11-08 13:57:38.532817	efcf00ee-e550-4456-b5ed-a85428829c34	2529
2533	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual or Early-Exit Bilingual	Transitional Bilingual Education or Early-Exit Bilingual Education	Transitional Bilingual Education or Early-Exit Bilingual Education	\N	\N	\N	\N	2023-11-08 13:57:38.544911	2023-11-08 13:57:38.544896	291bcc8d-33c2-45cf-98e2-1737072f3c70	2533
2536	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual	DEPRECATED: Transitional Bilingual	DEPRECATED: Transitional Bilingual	\N	\N	\N	\N	2023-11-08 13:57:38.551614	2023-11-08 13:57:38.551162	a45837fd-8c99-4cc3-b2f1-3b6182395745	2536
2538	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Sheltered English Instruction	DEPRECATED: Sheltered English Instruction	DEPRECATED: Sheltered English Instruction	\N	\N	\N	\N	2023-11-08 13:57:38.558375	2023-11-08 13:57:38.558339	635f2d89-aa43-4966-910c-63613244bd94	2538
2546	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	\N	2023-11-08 13:57:38.601199	2023-11-08 13:57:38.599295	01a9d053-4534-4ef6-9ac2-415656041ace	2546
2547	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Local	DEPRECATED: Local	DEPRECATED: Local	\N	\N	\N	\N	2023-11-08 13:57:38.60925	2023-11-08 13:57:38.609202	e2c2fc5c-b616-42e5-9916-7710262d4067	2547
2557	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-11-08 13:57:38.657262	2023-11-08 13:57:38.656322	0a2690ed-f1a7-4f20-accd-f2f35c6c5939	2557
2560	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-11-08 13:57:38.666622	2023-11-08 13:57:38.666578	34c41197-7877-4cdd-8292-8d34f38eac87	2560
2565	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Doctoral degree	Doctoral degree	Doctoral degree	\N	\N	\N	\N	2023-11-08 13:57:38.69844	2023-11-08 13:57:38.696489	ee0c0486-5e72-4654-91b6-e15088d3221f	2565
2670	uri://ed-fi.org/CohortYearTypeDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	\N	2023-11-08 13:57:39.17436	2023-11-08 13:57:39.173359	6665e0b1-1794-4fde-b6e0-e174edd30c65	2670
2501	uri://ed-fi.org/PostingResultDescriptor	Posting Cancelled	Posting Cancelled	Posting Cancelled	\N	\N	\N	\N	2023-11-08 13:57:38.333636	2023-11-08 13:57:38.332167	e6be35a5-8b78-42c1-aae3-59065179fe35	2501
2504	uri://ed-fi.org/SchoolTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-11-08 13:57:38.371826	2023-11-08 13:57:38.370887	abe946a2-abb0-4ae0-9f07-5f1886b7b33e	2504
2509	uri://ed-fi.org/LanguageUseDescriptor	Home language	Home language	Home language	\N	\N	\N	\N	2023-11-08 13:57:38.410688	2023-11-08 13:57:38.409702	fa559318-38c7-45f3-947c-79ff30d8a999	2509
2514	uri://ed-fi.org/LanguageUseDescriptor	Spoken language	Spoken language	Spoken language	\N	\N	\N	\N	2023-11-08 13:57:38.419985	2023-11-08 13:57:38.419957	ce5bb938-3ac4-4b58-9710-1e323a851b91	2514
2519	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 2	Limited Monitored 2	Limited Monitored 2	\N	\N	\N	\N	2023-11-08 13:57:38.456157	2023-11-08 13:57:38.45488	0745c7a2-9e7a-4362-992e-cb2d87cac268	2519
2522	uri://ed-fi.org/EntryTypeDescriptor	New to education system	New to education system	New to education system	\N	\N	\N	\N	2023-11-08 13:57:38.494393	2023-11-08 13:57:38.493382	0be4343c-de78-40e6-b24c-e655e853c8c2	2522
2525	uri://ed-fi.org/EntryTypeDescriptor	Re-entry	Re-entry	Re-entry	\N	\N	\N	\N	2023-11-08 13:57:38.503227	2023-11-08 13:57:38.503145	72e4627d-8b64-41b8-bbc2-783eb27288d7	2525
2527	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	ESL or ELD	ESL or ELD	ESL or ELD	\N	\N	\N	\N	2023-11-08 13:57:38.534074	2023-11-08 13:57:38.532824	ac4eafc0-9cde-4893-88f8-de6696d072e1	2527
2532	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language	DEPRECATED: Dual Language	DEPRECATED: Dual Language	\N	\N	\N	\N	2023-11-08 13:57:38.544837	2023-11-08 13:57:38.544807	4679b6ce-a158-438e-8cb8-4921c735f88d	2532
2540	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	SDAIE	DEPRECATED: Specially Designed Academic Instruction Delivered In English	DEPRECATED: SDAIE - Specially Designed Academic Instruction Delivered In English	\N	\N	\N	\N	2023-11-08 13:57:38.560288	2023-11-08 13:57:38.560197	c34e0e83-ae90-4da2-b37d-f1c7d2a4385b	2540
2543	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Family	Family	Family	\N	\N	\N	\N	2023-11-08 13:57:38.600298	2023-11-08 13:57:38.599278	317647e6-0b15-4ef2-9cda-7308fd547137	2543
2549	uri://ed-fi.org/StudentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:38.610795	2023-11-08 13:57:38.610755	606b18f0-2e20-462d-be92-9d34b8cdd625	2549
2551	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State	State	The state identification system for students that assigns a state ID to each student.	\N	\N	\N	\N	2023-11-08 13:57:38.616165	2023-11-08 13:57:38.616151	61ac3ef7-2976-4be2-a52a-9ed91b3fcfe3	2551
2558	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-11-08 13:57:38.657255	2023-11-08 13:57:38.656314	36e61829-a86b-4921-b375-7760e99e879d	2558
2561	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-11-08 13:57:38.666877	2023-11-08 13:57:38.666788	0ae94d0f-8913-4ef2-af1d-bffd76dba49a	2561
2563	uri://ed-fi.org/TeachingCredentialBasisDescriptor	4-year bachelor's degree	4-year bachelor's degree	4-year bachelor's degree	\N	\N	\N	\N	2023-11-08 13:57:38.697474	2023-11-08 13:57:38.696472	2fef3b01-a296-4a31-bb1e-8ac41d254b4d	2563
2566	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Met state testing requirement	Met state testing requirement	Met state testing requirement	\N	\N	\N	\N	2023-11-08 13:57:38.706982	2023-11-08 13:57:38.706869	1f2bea6c-5e44-40ed-9438-620ff558c3ee	2566
2573	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of attendance	Certificate of attendance	Certificate of attendance	\N	\N	\N	\N	2023-11-08 13:57:38.741365	2023-11-08 13:57:38.740231	a48e4512-ed0c-4f0d-8fb3-de96aec2d1f4	2573
2577	uri://ed-fi.org/DiplomaTypeDescriptor	Endorsed/advanced diploma	Endorsed/advanced diploma	Endorsed/advanced diploma	\N	\N	\N	\N	2023-11-08 13:57:38.751508	2023-11-08 13:57:38.751489	727e4f20-e8bf-4663-9976-fc01a4dcad1e	2577
2580	uri://ed-fi.org/DiplomaTypeDescriptor	Modified diploma	Modified diploma	Modified diploma	\N	\N	\N	\N	2023-11-08 13:57:38.758388	2023-11-08 13:57:38.758375	b710f4b4-79ca-402f-86a6-d7ee2da1aab5	2580
2583	uri://ed-fi.org/DiplomaTypeDescriptor	Occupational License	Occupational License	Occupational License	\N	\N	\N	\N	2023-11-08 13:57:38.764864	2023-11-08 13:57:38.764532	51dc6536-6758-42a5-9673-2512ec1c43cf	2583
2588	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Not required to implement public school choice	Not required to implement public school choice	Not required to implement public school choice	\N	\N	\N	\N	2023-11-08 13:57:38.80783	2023-11-08 13:57:38.806675	01b1a5fe-a057-496e-afbd-be84b8222802	2588
2591	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Certification Received	Certification Received	Certification Received	\N	\N	\N	\N	2023-11-08 13:57:38.8449	2023-11-08 13:57:38.843961	aced0184-2ce5-450c-94c9-1f5499748bac	2591
2597	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Selection	College Selection	College Selection	\N	\N	\N	\N	2023-11-08 13:57:38.854184	2023-11-08 13:57:38.854169	045e2f28-e374-4b99-b0e6-3842bca8cefc	2597
2602	uri://ed-fi.org/ParticipationStatusDescriptor	Referred	Referred	Referred	\N	\N	\N	\N	2023-11-08 13:57:38.891872	2023-11-08 13:57:38.890935	63fb2567-a72c-40ca-8fc8-3f79195ff9c8	2602
2607	uri://ed-fi.org/SectionTypeDescriptor	Credit Only	Credit Only	Credit Only	\N	\N	\N	\N	2023-11-08 13:57:38.932418	2023-11-08 13:57:38.930982	27180a99-551b-4b52-8d25-4d26795eeb30	2607
2616	uri://ed-fi.org/LearningStandardCategoryDescriptor	Practices	Practices	Practices	\N	\N	\N	\N	2023-11-08 13:57:38.978596	2023-11-08 13:57:38.977618	77f40396-781e-4ef6-a6f9-0647b8a52103	2616
2619	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Mathematics Instructional Services	Mathematics Instructional Services	Mathematics Instructional Services	\N	\N	\N	\N	2023-11-08 13:57:39.014125	2023-11-08 13:57:39.013134	3b605006-c1e2-4aa5-a6de-3720e3fc4eb7	2619
2624	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Instructional Services	Other Instructional Services	Other Instructional Services	\N	\N	\N	\N	2023-11-08 13:57:39.025756	2023-11-08 13:57:39.025712	ef132aa5-6894-45c9-9f82-6bf52d8fb90d	2624
2629	uri://ed-fi.org/AssessmentCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-11-08 13:57:39.061321	2023-11-08 13:57:39.06021	75195e1f-886a-4ff2-b020-f92dc30bd391	2629
2633	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/ELL	Alternate assessment/ELL	Alternate assessment/ELL	\N	\N	\N	\N	2023-11-08 13:57:39.072517	2023-11-08 13:57:39.072483	55ce1b8f-c7ec-4ac3-a732-0e912d30e323	2633
2523	uri://ed-fi.org/EntryTypeDescriptor	Next year school	Next year school	Next year school	\N	\N	\N	\N	2023-11-08 13:57:38.494608	2023-11-08 13:57:38.493402	fcca81fe-04a9-42ae-861d-ebe635f794fb	2523
2528	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content Classes with integrated ESL support	Content Classes with integrated ESL support	Content Classes with integrated ESL support	\N	\N	\N	\N	2023-11-08 13:57:38.534074	2023-11-08 13:57:38.532846	c83f91c9-7516-45f0-8ea4-88f904b074ac	2528
2531	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Newcomer programs	Newcomer programs	Newcomer programs	\N	\N	\N	\N	2023-11-08 13:57:38.544637	2023-11-08 13:57:38.544589	91fd3406-46fd-4400-a628-5f0a636c0e12	2531
2535	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Developmental Bilingual	DEPRECATED: Developmental Bilingual	DEPRECATED: Developmental Bilingual	\N	\N	\N	\N	2023-11-08 13:57:38.551465	2023-11-08 13:57:38.551376	7f488f0d-baf1-43fd-817c-47853fd26bb3	2535
2542	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Pull-Out ESL	DEPRECATED: Pull-Out ESL	DEPRECATED: Pull-Out ESL	\N	\N	\N	\N	2023-11-08 13:57:38.56493	2023-11-08 13:57:38.564904	1aba993a-d1dc-4997-bc01-c80bb3ac949e	2542
2544	uri://ed-fi.org/StudentIdentificationSystemDescriptor	District	District	The student identification system for the student at the district level, generally managed by the district student information system, and the one that assigns the principal IDs used to join student data for district operations.	\N	\N	\N	\N	2023-11-08 13:57:38.600307	2023-11-08 13:57:38.599323	30024977-a72a-4379-b176-8fd9e22b6d5d	2544
2548	uri://ed-fi.org/StudentIdentificationSystemDescriptor	National Migrant	National Migrant	National Migrant	\N	\N	\N	\N	2023-11-08 13:57:38.60991	2023-11-08 13:57:38.609896	48e0ce6e-c5c0-4bc9-9ddf-350191e1e7d5	2548
2552	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.615361	2023-11-08 13:57:38.615222	dd2f8e14-f978-41ee-bea7-11d3c12f2d61	2552
2553	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State Migrant	State Migrant	State Migrant	\N	\N	\N	\N	2023-11-08 13:57:38.623161	2023-11-08 13:57:38.623015	4107ca20-6462-4151-b0e4-57c01c418ea2	2553
2555	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-11-08 13:57:38.657265	2023-11-08 13:57:38.656307	954d12df-11fa-4e05-a6ee-88ad1c72154f	2555
2564	uri://ed-fi.org/TeachingCredentialBasisDescriptor	5-year bachelor's degree	5-year bachelor's degree	5-year bachelor's degree	\N	\N	\N	\N	2023-11-08 13:57:38.697542	2023-11-08 13:57:38.696463	e770a371-9bfd-47d3-b0af-786c48b16dac	2564
2569	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Master's degree	Master's degree	Master's degree	\N	\N	\N	\N	2023-11-08 13:57:38.707835	2023-11-08 13:57:38.707809	c2777b3b-17a4-4b87-84e0-82107f010564	2569
2572	uri://ed-fi.org/DiplomaTypeDescriptor	Apprenticeship Certificate	Apprenticeship Certificate	Apprenticeship Certificate	\N	\N	\N	\N	2023-11-08 13:57:38.74128	2023-11-08 13:57:38.740237	dd32df55-3df4-4705-a9f8-cf3cac6451c2	2572
2575	uri://ed-fi.org/DiplomaTypeDescriptor	High school equivalency credential, other than GED	High school equivalency credential, other than GED	High school equivalency credential, other than GED	\N	\N	\N	\N	2023-11-08 13:57:38.75065	2023-11-08 13:57:38.750577	a3797685-c7d0-41e6-9cf9-1c83aa5a86d9	2575
2581	uri://ed-fi.org/DiplomaTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.760807	2023-11-08 13:57:38.760747	99f4407c-6895-47fd-bf9a-a8137ac00d1c	2581
2589	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at all grade levels	Implemented at all grade levels	Implemented at all grade levels	\N	\N	\N	\N	2023-11-08 13:57:38.807825	2023-11-08 13:57:38.806687	8d2e0736-dab5-463c-8ac1-1f7e00976ceb	2589
2594	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Application	College Application	College Application	\N	\N	\N	\N	2023-11-08 13:57:38.845249	2023-11-08 13:57:38.843989	6882d438-252a-469b-a4d1-fcd16c0d11f9	2594
2595	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Exit Date	College Exit Date	College Exit Date	\N	\N	\N	\N	2023-11-08 13:57:38.853861	2023-11-08 13:57:38.853834	6ea02d5b-345d-4137-a0f7-a71c76b7cf0c	2595
2600	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Student Interest	Student Interest	Student Interest	\N	\N	\N	\N	2023-11-08 13:57:38.861044	2023-11-08 13:57:38.860915	b2b07d56-96ce-468d-8464-d2eed74be3b1	2600
2604	uri://ed-fi.org/ParticipationStatusDescriptor	Active in Program	Active in Program	Active in Program	\N	\N	\N	\N	2023-11-08 13:57:38.892116	2023-11-08 13:57:38.890953	85c30238-cdfa-4857-bfd8-11afdb8e30e9	2604
2610	uri://ed-fi.org/DisabilityDesignationDescriptor	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	\N	\N	\N	\N	2023-11-08 13:57:38.939128	2023-11-08 13:57:38.937665	6c721050-b0af-4f18-a6e6-2cf546c07fb9	2610
2614	uri://ed-fi.org/LearningStandardCategoryDescriptor	Core Ideas	Core Ideas	Core Ideas	\N	\N	\N	\N	2023-11-08 13:57:38.978562	2023-11-08 13:57:38.977353	3e830ac2-df21-4612-af0d-a511744b20ae	2614
2620	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Social Studies Instructional Services	Social Studies Instructional Services	Social Studies Instructional Services	\N	\N	\N	\N	2023-11-08 13:57:39.014116	2023-11-08 13:57:39.013152	f0645864-10bf-4845-9bfe-4d00feb023ed	2620
2623	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	\N	\N	\N	\N	2023-11-08 13:57:39.024687	2023-11-08 13:57:39.024673	2019a663-cf09-4555-9d33-3c49b42fa0f0	2623
2626	uri://ed-fi.org/AssessmentCategoryDescriptor	Language proficiency test	Language proficiency test	Language proficiency test	\N	\N	\N	\N	2023-11-08 13:57:39.061197	2023-11-08 13:57:39.06022	eb1c5260-3af7-40de-a78a-cb16dd988479	2626
2631	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychomotor test	Psychomotor test	Psychomotor test	\N	\N	\N	\N	2023-11-08 13:57:39.070186	2023-11-08 13:57:39.070157	450ba67b-5684-47a6-a692-dc86cfcc0fea	2631
2636	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Social and emotional development	Early Learning - Social and emotional development	Early Learning - Social and emotional development	\N	\N	\N	\N	2023-11-08 13:57:39.077819	2023-11-08 13:57:39.077716	cb37509d-95a9-448b-ba76-7b7efbe21683	2636
2638	uri://ed-fi.org/AssessmentCategoryDescriptor	Achievement test	Achievement test	Achievement test	\N	\N	\N	\N	2023-11-08 13:57:39.085482	2023-11-08 13:57:39.085454	a547dc0c-53ab-4c36-a231-2e2523c0dfd3	2638
2556	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	\N	2023-11-08 13:57:38.657262	2023-11-08 13:57:38.656332	31fe99e4-cba8-4b2b-8bfa-d97c4a5c9ebe	2556
2559	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	\N	2023-11-08 13:57:38.665668	2023-11-08 13:57:38.66564	c9491090-1110-4118-a0e2-08c8e0806950	2559
2639	uri://ed-fi.org/AssessmentCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-11-08 13:57:39.086485	2023-11-08 13:57:39.086449	055661ec-baf9-49c0-8152-2ea2c60a7d8f	2639
2562	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Reciprocation with another state	Credentials based on reciprocation with another state	Credentials based on reciprocation with another state	\N	\N	\N	\N	2023-11-08 13:57:38.697512	2023-11-08 13:57:38.696492	686dcdc6-bd21-439d-b9ac-f714094579c5	2562
2567	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Relevant experience	Relevant experience	Relevant experience	\N	\N	\N	\N	2023-11-08 13:57:38.70706	2023-11-08 13:57:38.707022	47a9e4e4-26f9-44ae-931f-fd9a70d5cdff	2567
2570	uri://ed-fi.org/DiplomaTypeDescriptor	Alternative credential	Alternative credential	Alternative credential	\N	\N	\N	\N	2023-11-08 13:57:38.741156	2023-11-08 13:57:38.740209	d2853272-7356-48f9-bb51-acd796c044a1	2570
2576	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of completion	Certificate of completion	Certificate of completion	\N	\N	\N	\N	2023-11-08 13:57:38.750782	2023-11-08 13:57:38.75076	cf99a354-0270-4e90-aedd-917382f73167	2576
2578	uri://ed-fi.org/DiplomaTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-11-08 13:57:38.756607	2023-11-08 13:57:38.75657	8a91b3be-e809-4dec-b25a-f9faee23c70f	2578
2582	uri://ed-fi.org/DiplomaTypeDescriptor	Other diploma	Other diploma	Other diploma	\N	\N	\N	\N	2023-11-08 13:57:38.76393	2023-11-08 13:57:38.763841	1b1bcbcc-3e18-4b28-9e4c-e76bc53ef4e3	2582
2585	uri://ed-fi.org/DiplomaTypeDescriptor	Regents diploma	Regents diploma	Regents diploma	\N	\N	\N	\N	2023-11-08 13:57:38.767498	2023-11-08 13:57:38.767462	468fd283-1cbc-4e12-ab3f-f298afd4b788	2585
2587	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at some but not all grade levels	Implemented at some but not all grade levels	Implemented at some but not all grade levels	\N	\N	\N	\N	2023-11-08 13:57:38.807679	2023-11-08 13:57:38.806724	8d49962c-fa07-42d9-9f54-1bdbe0410b64	2587
2593	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Acceptance	College Acceptance	College Acceptance	\N	\N	\N	\N	2023-11-08 13:57:38.845063	2023-11-08 13:57:38.843972	eec4dc46-84c7-4ef5-9ad8-9f115c5910f9	2593
2596	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	FAFSA Application	FAFSA Application	FAFSA Application	\N	\N	\N	\N	2023-11-08 13:57:38.8538	2023-11-08 13:57:38.853411	a89b86c6-d23f-4bbf-abfd-7f6a25b8d134	2596
2599	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - ELA	Remedial Enrollment - ELA	Remedial Enrollment - ELA	\N	\N	\N	\N	2023-11-08 13:57:38.860301	2023-11-08 13:57:38.860012	8d73ee6f-30ae-430e-a689-f39a79745a3a	2599
2601	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - Math	Remedial Enrollment - Math	Remedial Enrollment - Math	\N	\N	\N	\N	2023-11-08 13:57:38.863765	2023-11-08 13:57:38.86374	c7077c1d-dece-410e-8849-578c3068878a	2601
2605	uri://ed-fi.org/ParticipationStatusDescriptor	Not Eligible	Not Eligible	Not Eligible	\N	\N	\N	\N	2023-11-08 13:57:38.892064	2023-11-08 13:57:38.890956	882a3068-8a55-4fa2-b16a-04998111e865	2605
2608	uri://ed-fi.org/SectionTypeDescriptor	Attendance and Credit	Attendance and Credit	Attendance and Credit	\N	\N	\N	\N	2023-11-08 13:57:38.932336	2023-11-08 13:57:38.930964	9c040777-cd9d-4628-8278-6ac1be4852eb	2608
2611	uri://ed-fi.org/DisabilityDesignationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.943489	2023-11-08 13:57:38.943446	1bd45964-71e1-411b-92d9-60d05a19882f	2611
2615	uri://ed-fi.org/LearningStandardCategoryDescriptor	Crosscutting Concepts	Crosscutting Concepts	Crosscutting Concepts	\N	\N	\N	\N	2023-11-08 13:57:38.978569	2023-11-08 13:57:38.977342	476880e4-aec6-4d1d-bc3b-83e91233c9ba	2615
2617	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Science Instructional Services	Science Instructional Services	Science Instructional Services	\N	\N	\N	\N	2023-11-08 13:57:39.014128	2023-11-08 13:57:39.013158	6f381ba4-7fb7-4711-bf80-9446fe6c6a53	2617
2622	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	\N	\N	\N	\N	2023-11-08 13:57:39.024343	2023-11-08 13:57:39.024329	3df7943a-5e9f-4504-b51b-4cff583714fa	2622
2625	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Support Services	Other Support Services	Other Support Services	\N	\N	\N	\N	2023-11-08 13:57:39.031222	2023-11-08 13:57:39.031177	840c88e8-09e3-48dd-922c-a80244eb7d0a	2625
2628	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Physical well-being and motor dev	Early Learning - Physical well-being and motor development	Early Learning - Physical well-being and motor development	\N	\N	\N	\N	2023-11-08 13:57:39.061319	2023-11-08 13:57:39.060243	f5bf8a12-6230-480f-911d-91f0bae1f7f7	2628
2632	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternate assessment/ELL	State alternate assessment/ELL	State alternate assessment/ELL	\N	\N	\N	\N	2023-11-08 13:57:39.07078	2023-11-08 13:57:39.070722	6531a3ff-e921-45c9-9e00-6ed94e8d6a9a	2632
2634	uri://ed-fi.org/AssessmentCategoryDescriptor	Reading readiness test	Reading readiness test	Reading readiness test	\N	\N	\N	\N	2023-11-08 13:57:39.077622	2023-11-08 13:57:39.077609	94dd4625-ee87-4011-b1cc-9dbb40692e24	2634
2641	uri://ed-fi.org/AssessmentCategoryDescriptor	Class test	Class test	Class test	\N	\N	\N	\N	2023-11-08 13:57:39.087187	2023-11-08 13:57:39.087164	166129bd-0383-4a18-b15d-20fe4ff82942	2641
2642	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychological test	Psychological test	Psychological test	\N	\N	\N	\N	2023-11-08 13:57:39.091636	2023-11-08 13:57:39.09158	505e888a-4196-4dfe-ac4b-104199cd3e13	2642
2646	uri://ed-fi.org/AssessmentCategoryDescriptor	Foreign language proficiency test	Foreign language proficiency test	Foreign language proficiency test	\N	\N	\N	\N	2023-11-08 13:57:39.09914	2023-11-08 13:57:39.099112	0edd8533-08e2-4685-a6b0-6505daf85de1	2646
2650	uri://ed-fi.org/AssessmentCategoryDescriptor	Aptitude test	Aptitude test	Aptitude test	\N	\N	\N	\N	2023-11-08 13:57:39.107057	2023-11-08 13:57:39.107028	c58373ba-57b0-418b-adfd-35561caf7836	2650
2653	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school subject assessment	State high school subject assessment	State high school subject assessment	\N	\N	\N	\N	2023-11-08 13:57:39.111021	2023-11-08 13:57:39.110994	6230b1be-8fd3-43a0-b716-29f12712e562	2653
2568	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Special/alternative program completion	Special/alternative program completion	Special/alternative program completion	\N	\N	\N	\N	2023-11-08 13:57:38.707164	2023-11-08 13:57:38.707152	12e43924-62b6-4ee3-9b43-b32830ec7f62	2568
2691	uri://ed-fi.org/LicenseTypeDescriptor	Independent Foster Home	Independent Foster Home	Independent Foster Home	\N	\N	\N	\N	2023-11-08 13:57:39.248757	2023-11-08 13:57:39.248742	26f7b950-7cd0-44d3-9747-d714cd7abb43	2691
2571	uri://ed-fi.org/DiplomaTypeDescriptor	Career and Technical Education certificate	Career and Technical Education certificate	Career and Technical Education certificate	\N	\N	\N	\N	2023-11-08 13:57:38.741393	2023-11-08 13:57:38.740213	f636c62c-38ee-41f7-8357-d535a83c46c5	2571
2574	uri://ed-fi.org/DiplomaTypeDescriptor	General Educational Development (GED) credential	General Educational Development (GED) credential	General Educational Development (GED) credential	\N	\N	\N	\N	2023-11-08 13:57:38.75039	2023-11-08 13:57:38.750327	b7166476-76af-4900-8898-b29ef3ebcb3b	2574
2579	uri://ed-fi.org/DiplomaTypeDescriptor	Industry-recognized Certification	Industry-recognized Certification	Industry-recognized Certification	\N	\N	\N	\N	2023-11-08 13:57:38.758092	2023-11-08 13:57:38.758078	6a315b58-2775-4034-b655-a714a8800902	2579
2584	uri://ed-fi.org/DiplomaTypeDescriptor	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	\N	\N	\N	\N	2023-11-08 13:57:38.766039	2023-11-08 13:57:38.766012	07b8eee6-5778-4047-822b-ca8d19dd602b	2584
2586	uri://ed-fi.org/DiplomaTypeDescriptor	Regular diploma	Regular diploma	Regular diploma	\N	\N	\N	\N	2023-11-08 13:57:38.771708	2023-11-08 13:57:38.771594	0db26238-cf56-4118-9a85-d21d1446c61c	2586
2590	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Unable to implement at any grades levels	Unable to implement at any grades levels	Unable to implement at any grades levels	\N	\N	\N	\N	2023-11-08 13:57:38.80785	2023-11-08 13:57:38.806707	1b77d6f1-5883-4124-994e-6de15cb0ff8b	2590
2592	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Degree Received	College Degree Received	College Degree Received	\N	\N	\N	\N	2023-11-08 13:57:38.845129	2023-11-08 13:57:38.843956	6de630c7-3e3d-4a14-b491-e93b721cc9f6	2592
2598	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Enrollment	College Enrollment	College Enrollment	\N	\N	\N	\N	2023-11-08 13:57:38.854455	2023-11-08 13:57:38.854423	8af92958-98d7-463b-9e58-1860d3620dfa	2598
2603	uri://ed-fi.org/ParticipationStatusDescriptor	Eligible	Eligible	Eligible	\N	\N	\N	\N	2023-11-08 13:57:38.892023	2023-11-08 13:57:38.890928	971052b8-497f-4451-a9eb-51ea7fb3b640	2603
2606	uri://ed-fi.org/ParticipationStatusDescriptor	Refused	Refused	Refused	\N	\N	\N	\N	2023-11-08 13:57:38.902122	2023-11-08 13:57:38.902048	bc33a697-64e8-4d77-bfde-9eee97abc813	2606
2609	uri://ed-fi.org/SectionTypeDescriptor	Attendance Only	Attendance Only	Attendance Only	\N	\N	\N	\N	2023-11-08 13:57:38.932557	2023-11-08 13:57:38.930994	41d901b7-d9e2-4d89-bea7-20b26f370765	2609
2612	uri://ed-fi.org/DisabilityDesignationDescriptor	Section 504	Section 504	Section 504	\N	\N	\N	\N	2023-11-08 13:57:38.943704	2023-11-08 13:57:38.943683	42739714-406f-457d-8f29-2e41f18a3ccb	2612
2613	uri://ed-fi.org/ContactTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:38.973704	2023-11-08 13:57:38.971886	5f12634e-c64a-4dbf-abe6-13b718d59d1e	2613
2618	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Reading/Language Instructional Services	Reading/Language Instructional Services	Reading/Language Instructional Services	\N	\N	\N	\N	2023-11-08 13:57:39.014129	2023-11-08 13:57:39.013126	8053fe5f-f0d5-4bb9-bbfb-621381d01208	2618
2621	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	CTE Instructional Services	Career and Technical Education Instructional Services	Career and Technical Education Instructional Services	\N	\N	\N	\N	2023-11-08 13:57:39.022413	2023-11-08 13:57:39.021988	9ce91b66-2073-4268-88b6-a9f1d38ec653	2621
2627	uri://ed-fi.org/AssessmentCategoryDescriptor	Class quiz	Class quiz	Class quiz	\N	\N	\N	\N	2023-11-08 13:57:39.061327	2023-11-08 13:57:39.060238	1ea1789f-3a21-4b6d-a095-82ccd2e534c9	2627
2630	uri://ed-fi.org/AssessmentCategoryDescriptor	College entrance exam	College entrance exam	College entrance exam	\N	\N	\N	\N	2023-11-08 13:57:39.070319	2023-11-08 13:57:39.070308	d82abd6c-c7d9-45fa-b37e-421797bb608b	2630
2635	uri://ed-fi.org/AssessmentCategoryDescriptor	Manual dexterity test	Manual dexterity test	Manual dexterity test	\N	\N	\N	\N	2023-11-08 13:57:39.077402	2023-11-08 13:57:39.077375	c34876d6-9c59-4f24-9a60-07686eedef2a	2635
2640	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Language and literacy development	Early Learning - Language and literacy development	Early Learning - Language and literacy development	\N	\N	\N	\N	2023-11-08 13:57:39.086848	2023-11-08 13:57:39.086739	54d17983-8871-4ee3-9ab9-eae78dbd94e6	2640
2643	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/modified standards	State alternative assessment/modified standards	State alternative assessment/modified standards	\N	\N	\N	\N	2023-11-08 13:57:39.093636	2023-11-08 13:57:39.093589	21c22fe3-0ec4-4a84-9e92-e2e10cc41a53	2643
2649	uri://ed-fi.org/AssessmentCategoryDescriptor	Diagnostic	Diagnostic	Diagnostic	\N	\N	\N	\N	2023-11-08 13:57:39.105529	2023-11-08 13:57:39.105491	7a964ec6-31ac-41ae-b1a9-6ff453d91022	2649
2651	uri://ed-fi.org/AssessmentCategoryDescriptor	Formative	Formative	Formative	\N	\N	\N	\N	2023-11-08 13:57:39.108045	2023-11-08 13:57:39.108009	18ea6d99-2bd8-463f-ae7e-c122506d45f7	2651
2655	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	\N	\N	\N	\N	2023-11-08 13:57:39.115028	2023-11-08 13:57:39.115012	b2ba5e98-e575-4c31-bc80-e9c263bc33f2	2655
2657	uri://ed-fi.org/AssessmentCategoryDescriptor	Prekindergarten Readiness	Prekindergarten Readiness	Prekindergarten Readiness	\N	\N	\N	\N	2023-11-08 13:57:39.119293	2023-11-08 13:57:39.119258	196fad65-d969-47b8-9a71-3c6b5b32e9d5	2657
2661	uri://ed-fi.org/AssessmentCategoryDescriptor	Interest inventory	Interest inventory	Interest inventory	\N	\N	\N	\N	2023-11-08 13:57:39.125764	2023-11-08 13:57:39.125671	80a26821-652c-416f-af17-283793071434	2661
2664	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	\N	\N	\N	\N	2023-11-08 13:57:39.131148	2023-11-08 13:57:39.130986	bdf7eddf-a4b7-40e0-a5bf-7d3c9d895a4f	2664
2667	uri://ed-fi.org/AssessmentCategoryDescriptor	English proficiency screening test	English proficiency screening test	English proficiency screening test	\N	\N	\N	\N	2023-11-08 13:57:39.138521	2023-11-08 13:57:39.138329	fe31d1f1-69e1-4519-9319-7f8cbe35eff2	2667
2637	uri://ed-fi.org/AssessmentCategoryDescriptor	State English proficiency test	State English proficiency test	State English proficiency test	\N	\N	\N	\N	2023-11-08 13:57:39.080233	2023-11-08 13:57:39.080134	d94f08fc-327e-435c-806c-09a136f503ac	2637
2692	uri://ed-fi.org/LicenseTypeDescriptor	Night Care	Night Care	Night Care	\N	\N	\N	\N	2023-11-08 13:57:39.252566	2023-11-08 13:57:39.252539	ed685066-6743-402d-9e39-7cbba759ec5e	2692
2644	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternative assessment/modified standards	Alternative assessment/modified standards	Alternative assessment/modified standards	\N	\N	\N	\N	2023-11-08 13:57:39.093914	2023-11-08 13:57:39.093728	9ba3f279-1284-4428-b2bc-ae5e42f577bd	2644
2647	uri://ed-fi.org/AssessmentCategoryDescriptor	Performance assessment	Performance assessment	Performance assessment	\N	\N	\N	\N	2023-11-08 13:57:39.100572	2023-11-08 13:57:39.100536	406c6a96-26c6-41ed-9676-fc26b80d8894	2647
2652	uri://ed-fi.org/AssessmentCategoryDescriptor	Personality test	Personality test	Personality test	\N	\N	\N	\N	2023-11-08 13:57:39.109629	2023-11-08 13:57:39.109557	e8c2d15a-13e3-465f-afe3-d3c988f8778d	2652
2656	uri://ed-fi.org/AssessmentCategoryDescriptor	Interim	Interim	Interim	\N	\N	\N	\N	2023-11-08 13:57:39.117336	2023-11-08 13:57:39.117299	a802f321-bbd7-4a7d-a46c-d1baa9ff7ebd	2656
2660	uri://ed-fi.org/AssessmentCategoryDescriptor	Attitudinal test	Attitudinal test	Attitudinal test	\N	\N	\N	\N	2023-11-08 13:57:39.12345	2023-11-08 13:57:39.123429	432a9f75-a718-4a73-942e-08c25c9a1762	2660
2663	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school course assessment	State high school course assessment	State high school course assessment	\N	\N	\N	\N	2023-11-08 13:57:39.130175	2023-11-08 13:57:39.130127	2fdef941-f5cd-48f5-8a03-f230dcc649a5	2663
2668	uri://ed-fi.org/AssessmentCategoryDescriptor	State assessment	State assessment	State assessment	\N	\N	\N	\N	2023-11-08 13:57:39.139146	2023-11-08 13:57:39.139014	5d161208-98f8-49f6-a3ec-3ca7405f01c1	2668
2673	uri://ed-fi.org/CohortYearTypeDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	\N	2023-11-08 13:57:39.174442	2023-11-08 13:57:39.173382	d2e645b1-0b36-4102-b5c8-b3b68ed3bf0f	2673
2674	uri://ed-fi.org/CohortYearTypeDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	\N	2023-11-08 13:57:39.182552	2023-11-08 13:57:39.182463	75fc24be-8441-4dcb-99de-44db5938dfb2	2674
2679	uri://ed-fi.org/CohortYearTypeDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	\N	2023-11-08 13:57:39.189437	2023-11-08 13:57:39.18941	9bc64eb7-d2a5-407d-b1c9-e67537e4868e	2678
2684	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Foreign Citizenship Identification	Foreign Citizenship Identification	Foreign Citizenship Identification	\N	\N	\N	\N	2023-11-08 13:57:39.230716	2023-11-08 13:57:39.229347	7cd348fe-b6cb-4e56-b8bc-38c438260000	2684
2687	uri://ed-fi.org/LicenseTypeDescriptor	Child Placing Agency	Child Placing Agency	Child Placing Agency	\N	\N	\N	\N	2023-11-08 13:57:39.240227	2023-11-08 13:57:39.240201	4a2e0c01-be4f-4c4f-99f0-57b08ff7f628	2687
2689	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Program	Child Care Program	Child Care Program	\N	\N	\N	\N	2023-11-08 13:57:39.247378	2023-11-08 13:57:39.247361	e41bb8de-cf32-4e60-a967-c51408f3da26	2689
2694	uri://ed-fi.org/LicenseTypeDescriptor	Residential Child Care	Residential Child Care	Residential Child Care	\N	\N	\N	\N	2023-11-08 13:57:39.255626	2023-11-08 13:57:39.255328	4d14c7e2-9b59-4e54-9739-f16abf2af69a	2694
2696	uri://ed-fi.org/LicenseTypeDescriptor	School Age Program	School Age Program	School Age Program	\N	\N	\N	\N	2023-11-08 13:57:39.259042	2023-11-08 13:57:39.259017	2a1a8ec3-a8d5-4162-8633-29936682db4c	2696
2701	uri://ed-fi.org/MonitoredDescriptor	Year 2	Year 2	Year 2	\N	\N	\N	\N	2023-11-08 13:57:39.304568	2023-11-08 13:57:39.303327	dbf8a00b-536a-4d73-99b1-e38fbd2c1c27	2701
2706	uri://ed-fi.org/CreditCategoryDescriptor	General	General	General	\N	\N	\N	\N	2023-11-08 13:57:39.316885	2023-11-08 13:57:39.316856	6eceeb88-52aa-44fc-af9f-3da268ff409b	2706
2710	uri://ed-fi.org/CreditCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-11-08 13:57:39.324789	2023-11-08 13:57:39.324763	a7792250-d175-407c-b70a-49d9c1366de8	2710
2712	uri://ed-fi.org/LearningStandardScopeDescriptor	State	State	State	\N	\N	\N	\N	2023-11-08 13:57:39.365277	2023-11-08 13:57:39.36432	626b4fe1-5766-477f-baef-1886ac68f128	2712
2718	uri://ed-fi.org/ProgressLevelDescriptor	Up More Than One Grade	Up More Than One Grade	Up More Than One Grade	\N	\N	\N	\N	2023-11-08 13:57:39.406913	2023-11-08 13:57:39.405017	9bfb2595-b442-43d3-990f-52b8dc00eaa9	2718
2722	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	\N	2023-11-08 13:57:39.45497	2023-11-08 13:57:39.454146	db3cca4f-3ba1-4f06-9ac9-71aa10229fef	2722
2727	uri://ed-fi.org/AssessmentPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	\N	2023-11-08 13:57:39.468405	2023-11-08 13:57:39.468357	bc8bacf8-716f-4566-b122-e0ebf7b9763f	2727
2732	uri://ed-fi.org/OtherNameTypeDescriptor	Nickname	Nickname	Nickname	\N	\N	\N	\N	2023-11-08 13:57:39.508528	2023-11-08 13:57:39.507493	5ba31e9e-c571-4a79-9203-7c2de69c4920	2732
2734	uri://ed-fi.org/HomelessProgramServiceDescriptor	Expedited Evaluations	Expedited Evaluations	Expedited Evaluations	\N	\N	\N	\N	2023-11-08 13:57:39.547346	2023-11-08 13:57:39.546281	5893f129-970e-4dd4-b863-e5ed2fccfd51	2734
2740	uri://ed-fi.org/HomelessProgramServiceDescriptor	Early Childhood Education Programs	Early Childhood Education Programs	Early Childhood Education Programs	\N	\N	\N	\N	2023-11-08 13:57:39.558026	2023-11-08 13:57:39.558005	4ba84d74-21ee-488f-9816-c8adb74e9ebd	2740
2745	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	\N	\N	\N	\N	2023-11-08 13:57:39.596922	2023-11-08 13:57:39.595793	5a057220-fc2f-44b5-a66a-4fd4b465a555	2745
2749	uri://ed-fi.org/SpecialEducationSettingDescriptor	Other early childhood location (< 10 hours)	Other early childhood location (< 10 hours)	Other early childhood location (< 10 hours)	\N	\N	\N	\N	2023-11-08 13:57:39.605728	2023-11-08 13:57:39.605702	10c6029a-e50f-4cb5-8101-a390145d0a6e	2749
2752	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate school	Separate school	Separate school	\N	\N	\N	\N	2023-11-08 13:57:39.613798	2023-11-08 13:57:39.613759	0f9b1688-f2e1-49ff-b1d9-ea90ae4d2b3c	2752
2757	uri://ed-fi.org/SpecialEducationSettingDescriptor	Regular early childhood program (10+ hrs)	Regular early childhood program (10+ hrs)	Services in regular early childhood program (at least 10 hours)	\N	\N	\N	\N	2023-11-08 13:57:39.622377	2023-11-08 13:57:39.622348	43b52d33-655c-40c8-b4b7-e13ec77aa5c1	2757
2645	uri://ed-fi.org/AssessmentCategoryDescriptor	Developmental observation	Developmental observation	Developmental observation	\N	\N	\N	\N	2023-11-08 13:57:39.096706	2023-11-08 13:57:39.096678	2ef11c4a-264a-4e63-a78a-2006632f1342	2645
2648	uri://ed-fi.org/AssessmentCategoryDescriptor	State summative assessment 3-8 general	State summative assessment 3-8 general	State summative assessment 3-8 general	\N	\N	\N	\N	2023-11-08 13:57:39.101386	2023-11-08 13:57:39.101349	cfd6d3c8-b7f5-4deb-ba06-5ca874095cc9	2648
2659	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	\N	\N	\N	\N	2023-11-08 13:57:39.123443	2023-11-08 13:57:39.123391	bb130d65-1c27-4146-9162-3699df93dbda	2659
2662	uri://ed-fi.org/AssessmentCategoryDescriptor	Portfolio assessment	Portfolio assessment	Portfolio assessment	\N	\N	\N	\N	2023-11-08 13:57:39.129862	2023-11-08 13:57:39.129507	ed3f5217-5128-42e9-8c06-09c638261e89	2662
2669	uri://ed-fi.org/AssessmentCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:39.139887	2023-11-08 13:57:39.139875	f9cf405e-5d92-4a4c-8db9-6aa9fe596044	2669
2671	uri://ed-fi.org/CohortYearTypeDescriptor	First grade	First grade	First grade	\N	\N	\N	\N	2023-11-08 13:57:39.174437	2023-11-08 13:57:39.173372	cdbb047b-06d0-4fed-aef8-93931d725205	2671
2675	uri://ed-fi.org/CohortYearTypeDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	\N	2023-11-08 13:57:39.183165	2023-11-08 13:57:39.182948	3ce4768b-e628-43d6-9575-7facfd5e3deb	2675
2680	uri://ed-fi.org/CohortYearTypeDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	\N	2023-11-08 13:57:39.190042	2023-11-08 13:57:39.190013	790e0abe-da3a-4edc-aac8-fc3d52c6635f	2680
2685	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Personal Information Verification	Personal Information Verification	Personal Information Verification	\N	\N	\N	\N	2023-11-08 13:57:39.230709	2023-11-08 13:57:39.229356	5454eb15-ee08-47cf-925c-81fd84aed10a	2685
2688	uri://ed-fi.org/LicenseTypeDescriptor	Day Treatment Program	Day Treatment Program	Day Treatment Program	\N	\N	\N	\N	2023-11-08 13:57:39.241298	2023-11-08 13:57:39.241262	6a36a5a1-5dbd-45b7-b0ea-87498cabfc1e	2688
2690	uri://ed-fi.org/LicenseTypeDescriptor	Family Child Care Home	Family Child Care Home	Family Child Care Home	\N	\N	\N	\N	2023-11-08 13:57:39.247815	2023-11-08 13:57:39.2478	0f471884-ff30-4459-8245-4d21d111fa23	2690
2693	uri://ed-fi.org/LicenseTypeDescriptor	Large Family Child Care Home	Large Family Child Care Home	Large Family Child Care Home	\N	\N	\N	\N	2023-11-08 13:57:39.250302	2023-11-08 13:57:39.250277	db6939c8-5344-44fc-a3bd-6bd2c011d0c6	2693
2697	uri://ed-fi.org/LicenseTypeDescriptor	Shelter Care	Shelter Care	Shelter Care	\N	\N	\N	\N	2023-11-08 13:57:39.260691	2023-11-08 13:57:39.26065	9afb4b9d-6849-42fe-b900-4dd930b93934	2697
2698	uri://ed-fi.org/LicenseTypeDescriptor	Temporary Shelter Care	Temporary Shelter Care	Temporary Shelter Care	\N	\N	\N	\N	2023-11-08 13:57:39.265062	2023-11-08 13:57:39.26499	5e68dc59-9df0-4650-8b4d-02040405e22a	2698
2700	uri://ed-fi.org/MonitoredDescriptor	Year 1	Year 1	Year 1	\N	\N	\N	\N	2023-11-08 13:57:39.304509	2023-11-08 13:57:39.303322	211d0f95-6ce4-4054-81aa-cae4efb11a41	2700
2704	uri://ed-fi.org/CreditCategoryDescriptor	College Preparatory	College Preparatory	College Preparatory	\N	\N	\N	\N	2023-11-08 13:57:39.315383	2023-11-08 13:57:39.315351	3dab5a47-63ca-40a8-b134-092bc0d5e9ff	2704
2707	uri://ed-fi.org/CreditCategoryDescriptor	Honors	Honors	Honors	\N	\N	\N	\N	2023-11-08 13:57:39.321081	2023-11-08 13:57:39.321043	0e111e79-c3ce-4de9-af39-4e270ca26c5c	2707
2709	uri://ed-fi.org/CreditCategoryDescriptor	Career and Technical Education	DEPRECATED: Career and Technical Education	DEPRECATED: Career and Technical Education	\N	\N	\N	\N	2023-11-08 13:57:39.324501	2023-11-08 13:57:39.32437	63f84664-07d4-44ec-aa4b-d3bc1ab2213f	2709
2714	uri://ed-fi.org/LearningStandardScopeDescriptor	Local education agency	Local education agency	Local education agency	\N	\N	\N	\N	2023-11-08 13:57:39.365439	2023-11-08 13:57:39.364325	771c2e54-9d35-4cbd-8b24-868b8b24a68e	2714
2717	uri://ed-fi.org/ProgressLevelDescriptor	Up One Grade	Up One Grade	Up One Grade	\N	\N	\N	\N	2023-11-08 13:57:39.406581	2023-11-08 13:57:39.405929	41a17602-7e43-4603-bd4b-ebc66b28da11	2717
2721	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	\N	2023-11-08 13:57:39.454692	2023-11-08 13:57:39.453238	b3576c7c-ff1d-4a72-a0e9-adee133edb43	2721
2725	uri://ed-fi.org/AssessmentPeriodDescriptor	Middle of Year	Middle of Year	Middle of Year	\N	\N	\N	\N	2023-11-08 13:57:39.466707	2023-11-08 13:57:39.46666	75fe180d-ec52-479f-9aff-c1300003f63d	2725
2728	uri://ed-fi.org/AssessmentPeriodDescriptor	Summer	Summer	Summer	\N	\N	\N	\N	2023-11-08 13:57:39.472608	2023-11-08 13:57:39.472582	d3c8770b-ad3c-49a7-a23e-060bb170289d	2728
2730	uri://ed-fi.org/OtherNameTypeDescriptor	Other Name	Other Name	Other Name	\N	\N	\N	\N	2023-11-08 13:57:39.508461	2023-11-08 13:57:39.507472	4b359bc6-4e60-4507-b16e-ec56ca63d8e3	2730
2736	uri://ed-fi.org/HomelessProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	\N	2023-11-08 13:57:39.547832	2023-11-08 13:57:39.546266	543ae409-f8d0-493b-a542-eaea31fc903a	2736
2739	uri://ed-fi.org/HomelessProgramServiceDescriptor	Emergency Assistance	Emergency Assistance	Emergency Assistance	\N	\N	\N	\N	2023-11-08 13:57:39.557851	2023-11-08 13:57:39.55779	fc6698ce-294d-432e-9b76-df4b5dce8259	2739
2743	uri://ed-fi.org/SpecialEducationSettingDescriptor	Homebound/Hospital	Homebound/Hospital	Homebound/Hospital	\N	\N	\N	\N	2023-11-08 13:57:39.596928	2023-11-08 13:57:39.595808	156b0029-6871-463f-affd-5ebcff860e59	2743
2746	uri://ed-fi.org/SpecialEducationSettingDescriptor	Other early childhood location (10+ hrs)	Other early childhood location (10+ hrs)	Other early childhood location (10+ hrs)	\N	\N	\N	\N	2023-11-08 13:57:39.605347	2023-11-08 13:57:39.605318	515a742f-d21e-47dc-a65e-5eb7b7f41e8a	2746
2750	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate class	Separate class	Separate class	\N	\N	\N	\N	2023-11-08 13:57:39.612093	2023-11-08 13:57:39.612066	8ebe95e1-a3f7-4967-9fec-b3ed2fb58bd4	2750
2753	uri://ed-fi.org/SpecialEducationSettingDescriptor	Residential facility	Residential facility	Residential facility	\N	\N	\N	\N	2023-11-08 13:57:39.61528	2023-11-08 13:57:39.61522	fd3d212d-d9e8-494c-a251-d9b594a28e72	2753
2754	uri://ed-fi.org/SpecialEducationSettingDescriptor	Regular early childhood program (less than 10 hrs)	Regular early childhood program (less than 10 hrs)	Services in regular early childhood program (less than 10 hours)	\N	\N	\N	\N	2023-11-08 13:57:39.619117	2023-11-08 13:57:39.619081	d12e1d9a-a4aa-4108-b818-9f89b6ce3a8d	2754
2654	uri://ed-fi.org/AssessmentCategoryDescriptor	Benchmark test	Benchmark test	Benchmark test	\N	\N	\N	\N	2023-11-08 13:57:39.114164	2023-11-08 13:57:39.114136	804ddd02-12f2-4526-ac36-76f0d8de6415	2654
2658	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	\N	\N	\N	\N	2023-11-08 13:57:39.123257	2023-11-08 13:57:39.123227	c188bcda-e858-4032-b48b-827fd65f856d	2658
2781	uri://ed-fi.org/WeaponDescriptor	Knife	Knife	Knife	\N	\N	\N	\N	2023-11-08 13:57:39.82415	2023-11-08 13:57:39.823104	8b8dc7e9-6268-463e-8073-7751763dee36	2781
2665	uri://ed-fi.org/AssessmentCategoryDescriptor	Cognitive and perceptual skills test	Cognitive and perceptual skills test	Cognitive and perceptual skills test	\N	\N	\N	\N	2023-11-08 13:57:39.132645	2023-11-08 13:57:39.132619	39c7fe59-382b-44a9-971a-bcc9bcff6d2e	2665
2666	uri://ed-fi.org/AssessmentCategoryDescriptor	Mental ability (intelligence) test	Mental ability (intelligence) test	Mental ability (intelligence) test	\N	\N	\N	\N	2023-11-08 13:57:39.137737	2023-11-08 13:57:39.137331	fc7f254e-b454-425e-aa3d-556553f3a04f	2666
2672	uri://ed-fi.org/CohortYearTypeDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	\N	2023-11-08 13:57:39.174656	2023-11-08 13:57:39.173351	d2d8b394-c235-46b3-8498-2a0865c75d6a	2672
2676	uri://ed-fi.org/CohortYearTypeDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	\N	2023-11-08 13:57:39.183213	2023-11-08 13:57:39.183083	d230c3ae-3019-4e89-8d31-f04a8b9405d5	2676
2681	uri://ed-fi.org/CohortYearTypeDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	\N	2023-11-08 13:57:39.191493	2023-11-08 13:57:39.191466	c028b8da-19db-4e88-aec3-67bbec2a1853	2681
2683	uri://ed-fi.org/IdentificationDocumentUseDescriptor	US Citizenship Identification	US Citizenship Identification	US Citizenship Identification	\N	\N	\N	\N	2023-11-08 13:57:39.230611	2023-11-08 13:57:39.229373	07c29c9d-fb98-4673-ba61-28b9b4f575af	2683
2686	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Center	Child Care Center	Child Care Center	\N	\N	\N	\N	2023-11-08 13:57:39.2381	2023-11-08 13:57:39.238087	8a0c8e1a-8462-440e-942f-81bf42a06547	2686
2695	uri://ed-fi.org/LicenseTypeDescriptor	Purchase of Care	Purchase of Care	Purchase of Care	\N	\N	\N	\N	2023-11-08 13:57:39.255755	2023-11-08 13:57:39.255543	5da2f6a6-e73a-4fef-9ae6-0254e510ce57	2695
2703	uri://ed-fi.org/CreditCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-11-08 13:57:39.309471	2023-11-08 13:57:39.308263	c6cfe92d-9945-463e-8df0-5b1369fbe6c4	2703
2711	uri://ed-fi.org/LearningStandardScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-11-08 13:57:39.365286	2023-11-08 13:57:39.364304	85e0a14f-6243-4f1c-903c-6ee7c3972e3c	2711
2715	uri://ed-fi.org/LearningStandardScopeDescriptor	Multi-state or National	Multi-state or National	Multi-state or National	\N	\N	\N	\N	2023-11-08 13:57:39.373553	2023-11-08 13:57:39.373536	21870b2f-81e8-4bcd-a380-ed06280be8b8	2715
2720	uri://ed-fi.org/ProgressLevelDescriptor	Negative Grade	Negative Grade	Negative Grade	\N	\N	\N	\N	2023-11-08 13:57:39.407153	2023-11-08 13:57:39.405997	ea1a59df-9293-4fbd-8f8f-d16207f5f865	2720
2724	uri://ed-fi.org/AssessmentPeriodDescriptor	Beginning of Year	Beginning of Year	Beginning of Year	\N	\N	\N	\N	2023-11-08 13:57:39.462278	2023-11-08 13:57:39.460698	ca9bc94a-e16b-4945-b73c-215f9854d48e	2724
2729	uri://ed-fi.org/AssessmentPeriodDescriptor	Spring	Spring	Spring	\N	\N	\N	\N	2023-11-08 13:57:39.47427	2023-11-08 13:57:39.474243	8fba4161-c824-4e4e-85e1-3f0537c38a37	2729
2731	uri://ed-fi.org/OtherNameTypeDescriptor	Alias	Alias	Alias	\N	\N	\N	\N	2023-11-08 13:57:39.508538	2023-11-08 13:57:39.507496	5d57295b-e7be-4313-80b4-2cc30c96bd62	2731
2737	uri://ed-fi.org/HomelessProgramServiceDescriptor	Transportation Services	Transportation Services	Transportation Services	\N	\N	\N	\N	2023-11-08 13:57:39.547367	2023-11-08 13:57:39.546286	47734228-3977-46a2-b49a-587233e24c65	2737
2738	uri://ed-fi.org/HomelessProgramServiceDescriptor	Specialized Instructional Support Services	Specialized Instructional Support Services	Specialized Instructional Support Services	\N	\N	\N	\N	2023-11-08 13:57:39.557471	2023-11-08 13:57:39.557457	9b1b0067-451d-4fa7-8984-f11a4b9cd1ba	2738
2742	uri://ed-fi.org/SpecialEducationSettingDescriptor	Home	Home	Home	\N	\N	\N	\N	2023-11-08 13:57:39.596771	2023-11-08 13:57:39.595798	9c004fe9-1cdc-4079-b674-7c3d0cb45b0d	2742
2747	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	\N	\N	\N	\N	2023-11-08 13:57:39.60566	2023-11-08 13:57:39.605527	59e5076e-5586-40ff-a611-a50d9f4c63f2	2747
2755	uri://ed-fi.org/SpecialEducationSettingDescriptor	Service provider location	Service provider location	Service provider location	\N	\N	\N	\N	2023-11-08 13:57:39.620767	2023-11-08 13:57:39.620749	99ff29e0-5805-4c7d-a528-a59f329e1b5b	2755
2760	uri://ed-fi.org/RetestIndicatorDescriptor	Primary Administration	Primary Administration	Primary Administration	\N	\N	\N	\N	2023-11-08 13:57:39.658712	2023-11-08 13:57:39.657515	5a230d4c-ac9c-4408-95c0-d7e38c35487b	2760
2765	uri://ed-fi.org/CompetencyLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-11-08 13:57:39.698081	2023-11-08 13:57:39.696964	b49883ff-d605-4c51-b22f-33f3b7aaca6f	2765
2768	uri://ed-fi.org/CompetencyLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-11-08 13:57:39.708115	2023-11-08 13:57:39.708064	88335b02-5dbb-4ee2-b163-d81c254e0bef	2768
2772	uri://ed-fi.org/GradebookEntryTypeDescriptor	Activity	Activity	Activity	\N	\N	\N	\N	2023-11-08 13:57:39.741268	2023-11-08 13:57:39.740997	9ff9292e-28f6-4140-a51a-b51cef4e5e56	2772
2774	uri://ed-fi.org/GradebookEntryTypeDescriptor	Oral Presentation	Oral Presentation	Oral Presentation	\N	\N	\N	\N	2023-11-08 13:57:39.749937	2023-11-08 13:57:39.749887	54c2088b-30d9-4c9c-9820-eb032f6854b5	2774
2779	uri://ed-fi.org/ElectronicMailTypeDescriptor	Work	Work	Work	\N	\N	\N	\N	2023-11-08 13:57:39.787224	2023-11-08 13:57:39.786009	3ca7660f-be80-41e0-8832-fc9e96e69bcd	2779
2783	uri://ed-fi.org/WeaponDescriptor	Club	Club	Club	\N	\N	\N	\N	2023-11-08 13:57:39.824328	2023-11-08 13:57:39.823117	d474a613-6ced-40cb-a80a-2f0217736eef	2783
2788	uri://ed-fi.org/WeaponDescriptor	Rifle/Shotgun	Rifle/Shotgun	Rifle/Shotgun	\N	\N	\N	\N	2023-11-08 13:57:39.833389	2023-11-08 13:57:39.833375	c66040a3-b0ba-48fb-a7e5-b595819c8157	2788
2790	uri://ed-fi.org/WeaponDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-11-08 13:57:39.840021	2023-11-08 13:57:39.839993	46f0383d-fdcf-4e6f-b1ad-9326f8c6139d	2790
2791	uri://ed-fi.org/InterventionClassDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:39.871632	2023-11-08 13:57:39.870668	90b15dcb-80d9-4961-8717-33901f6670d8	2791
2797	uri://ed-fi.org/DiplomaLevelDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	\N	2023-11-08 13:57:39.908734	2023-11-08 13:57:39.907732	efc496e1-780a-430e-9f04-14077c48f9c0	2797
2677	uri://ed-fi.org/CohortYearTypeDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	\N	2023-11-08 13:57:39.184621	2023-11-08 13:57:39.184607	2383bbac-6619-44e1-b447-90326aa3e088	2677
2678	uri://ed-fi.org/CohortYearTypeDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	\N	2023-11-08 13:57:39.189342	2023-11-08 13:57:39.189315	9489e0c0-4642-4d3d-862d-fb6e66e46a1f	2679
2682	uri://ed-fi.org/LicenseTypeDescriptor	Before- and After-School Programs	Before- and After-School Programs	Before- and After-School Programs	\N	\N	\N	\N	2023-11-08 13:57:39.229445	2023-11-08 13:57:39.228312	d47ec670-fcb5-4df0-b009-f18a283dc669	2682
2699	uri://ed-fi.org/LicenseTypeDescriptor	Specialized Day Care	Specialized Day Care	Specialized Day Care	\N	\N	\N	\N	2023-11-08 13:57:39.267652	2023-11-08 13:57:39.267619	d9c422f6-a952-4126-a94a-054495c5e4fd	2699
2702	uri://ed-fi.org/MonitoredDescriptor	Not Monitored	Not Monitored	Not Monitored	\N	\N	\N	\N	2023-11-08 13:57:39.304582	2023-11-08 13:57:39.303338	8f2acc6e-dca3-46de-b199-1d3f7176b37b	2702
2705	uri://ed-fi.org/CreditCategoryDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	\N	2023-11-08 13:57:39.315577	2023-11-08 13:57:39.315549	29e8dc70-874e-47d3-839a-b69f957fef19	2705
2708	uri://ed-fi.org/CreditCategoryDescriptor	Remedial	Remedial	Remedial	\N	\N	\N	\N	2023-11-08 13:57:39.323221	2023-11-08 13:57:39.323207	62d13c48-c80a-4d9f-bfb5-c4be0c54ed11	2708
2713	uri://ed-fi.org/LearningStandardScopeDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:39.365265	2023-11-08 13:57:39.364296	c42a6c85-d729-46e9-bc2c-b29db780b7f1	2713
2716	uri://ed-fi.org/LearningStandardScopeDescriptor	International	International	International	\N	\N	\N	\N	2023-11-08 13:57:39.373917	2023-11-08 13:57:39.373879	2f0df103-8cc0-4a26-b92c-cc0b7558e9df	2716
2719	uri://ed-fi.org/ProgressLevelDescriptor	No Change	No Change	No Change	\N	\N	\N	\N	2023-11-08 13:57:39.406744	2023-11-08 13:57:39.40598	2987e8c4-dcfc-46c9-aa08-bbad48f00cca	2719
2723	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Applicable	Applicable	Applicable	\N	\N	\N	\N	2023-11-08 13:57:39.45474	2023-11-08 13:57:39.453331	e52b46a7-6ad9-4cff-a358-ea10d5d408c5	2723
2726	uri://ed-fi.org/AssessmentPeriodDescriptor	Fall	Fall	Fall	\N	\N	\N	\N	2023-11-08 13:57:39.46884	2023-11-08 13:57:39.468813	bc6dd247-ecc1-4ca9-8689-c17ca41f3c25	2726
2733	uri://ed-fi.org/OtherNameTypeDescriptor	Previous Legal Name	Previous Legal Name	Previous Legal Name	\N	\N	\N	\N	2023-11-08 13:57:39.509052	2023-11-08 13:57:39.507467	31ad3ed5-681b-414e-824a-fdd37a9d061e	2733
2735	uri://ed-fi.org/HomelessProgramServiceDescriptor	Medical Referrals	Medical Referrals	Medical Referrals	\N	\N	\N	\N	2023-11-08 13:57:39.547336	2023-11-08 13:57:39.546261	24aae7c6-adef-41c7-9ab1-568d85045e80	2735
2741	uri://ed-fi.org/HomelessProgramServiceDescriptor	External Instructional Services	External Instructional Services	External Instructional Services	\N	\N	\N	\N	2023-11-08 13:57:39.558179	2023-11-08 13:57:39.557241	9405c440-b7af-4f5a-a811-fc11fc28351e	2741
2744	uri://ed-fi.org/SpecialEducationSettingDescriptor	Correctional facilities	Correctional facilities	Correctional facilities	\N	\N	\N	\N	2023-11-08 13:57:39.596951	2023-11-08 13:57:39.595825	bd6bbb26-9c14-4b75-b0d6-9a514757d8cb	2744
2748	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class between 40-79% of the day	Inside regular class between 40-79% of the day	Inside regular class no more than 79% of day and no less than 40% of the day	\N	\N	\N	\N	2023-11-08 13:57:39.605463	2023-11-08 13:57:39.605391	78dfe30c-e0fe-44e8-8880-ccae7c062bc4	2748
2751	uri://ed-fi.org/SpecialEducationSettingDescriptor	Parentally-placed in private schools	Parentally-placed in private schools	Parentally-placed in private schools	\N	\N	\N	\N	2023-11-08 13:57:39.612195	2023-11-08 13:57:39.611723	f9750ff5-b150-43bb-856a-1ea290bfe806	2751
2756	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside reg class between 40-79% of the day	DEPRECATED: Inside reg class 40-79% of the day	DEPRECATED: Inside reg class 40-79% of the day	\N	\N	\N	\N	2023-11-08 13:57:39.622129	2023-11-08 13:57:39.622002	7b1e9f49-1c21-4f3e-9ea5-fe2a89eccd27	2756
2759	uri://ed-fi.org/RetestIndicatorDescriptor	1st Retest	1st Retest	1st Retest	\N	\N	\N	\N	2023-11-08 13:57:39.658728	2023-11-08 13:57:39.657544	313a4be6-50a3-4246-b40e-1a1c0dfd60bb	2759
2763	uri://ed-fi.org/CompetencyLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	\N	2023-11-08 13:57:39.698071	2023-11-08 13:57:39.696954	187695e5-88cd-4f84-b335-9e9dd60653b2	2763
2769	uri://ed-fi.org/GradebookEntryTypeDescriptor	Classroom Assessment	Classroom Assessment	Classroom Assessment	\N	\N	\N	\N	2023-11-08 13:57:39.74115	2023-11-08 13:57:39.739726	e1ffab40-6670-41f7-92bb-d1be6399c3c3	2769
2773	uri://ed-fi.org/GradebookEntryTypeDescriptor	Quiz	Quiz	Quiz	\N	\N	\N	\N	2023-11-08 13:57:39.749879	2023-11-08 13:57:39.74984	0178dda4-d817-47b7-9cf3-e98e91f7af5a	2773
2780	uri://ed-fi.org/ElectronicMailTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:39.787305	2023-11-08 13:57:39.786025	a4b4b199-9676-4733-97e7-b828ddb8e798	2780
2782	uri://ed-fi.org/WeaponDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:39.824287	2023-11-08 13:57:39.823109	3b7e8e0f-fd3f-4dff-83bf-9687181ef64f	2782
2785	uri://ed-fi.org/WeaponDescriptor	Other Object	Other Object	Other Object	\N	\N	\N	\N	2023-11-08 13:57:39.833352	2023-11-08 13:57:39.833326	01c3e107-139b-4855-9ad3-c89cdb1f9d67	2785
2793	uri://ed-fi.org/InterventionClassDescriptor	Practice	Practice	Practice	\N	\N	\N	\N	2023-11-08 13:57:39.871865	2023-11-08 13:57:39.870682	af6a743e-ae30-4f66-beb3-5462f7d96c0f	2793
2795	uri://ed-fi.org/DiplomaLevelDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	\N	2023-11-08 13:57:39.90875	2023-11-08 13:57:39.90774	c40ca715-8cd0-4235-92f7-3c6d9053cbc6	2795
2803	uri://ed-fi.org/CharterStatusDescriptor	College/University Charter	College/University Charter	College/University Charter	\N	\N	\N	\N	2023-11-08 13:57:39.949078	2023-11-08 13:57:39.948112	371e3c60-394a-4fb0-8f14-ce1e28e942bc	2802
2808	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	\N	2023-11-08 13:57:39.988465	2023-11-08 13:57:39.987497	3d824a1e-2e53-403a-97d6-87bc862b52cb	2808
2813	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor society	Honor society	Honor society	\N	\N	\N	\N	2023-11-08 13:57:39.999267	2023-11-08 13:57:39.999225	dadbc34b-0e13-40da-91f9-e9a74273a21b	2813
2758	uri://ed-fi.org/RetestIndicatorDescriptor	3rd or more Retest	3rd or more Retest	3rd or more Retest	\N	\N	\N	\N	2023-11-08 13:57:39.658602	2023-11-08 13:57:39.657546	5d458630-e3ed-4d22-be6c-eb6e80257c10	2758
2762	uri://ed-fi.org/CompetencyLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-11-08 13:57:39.697981	2023-11-08 13:57:39.696983	ba916be8-70f0-44a9-92b0-59d91060e637	2762
2766	uri://ed-fi.org/CompetencyLevelDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	\N	2023-11-08 13:57:39.70723	2023-11-08 13:57:39.707197	abec899d-4e5e-46a0-b1ea-ef23282c2846	2766
2770	uri://ed-fi.org/GradebookEntryTypeDescriptor	Homework	Homework	Homework	\N	\N	\N	\N	2023-11-08 13:57:39.741332	2023-11-08 13:57:39.739712	0beecd83-6a50-4318-b026-060707165cfb	2770
2776	uri://ed-fi.org/GradebookEntryTypeDescriptor	Unit Test	Unit Test	Unit Test	\N	\N	\N	\N	2023-11-08 13:57:39.750249	2023-11-08 13:57:39.750176	7e2b37e6-57b6-43f1-a6ad-0a523bfd3750	2776
2778	uri://ed-fi.org/ElectronicMailTypeDescriptor	Organization	Organization	Organization	\N	\N	\N	\N	2023-11-08 13:57:39.787231	2023-11-08 13:57:39.785992	078c8b13-21fd-4dc0-8b55-62cd06a91916	2778
2786	uri://ed-fi.org/WeaponDescriptor	Other Sharp Objects	Other Sharp Objects	Other Sharp Objects	\N	\N	\N	\N	2023-11-08 13:57:39.833359	2023-11-08 13:57:39.833334	1ac482cf-bf95-4052-a2d2-05d61d64805a	2786
2789	uri://ed-fi.org/WeaponDescriptor	Substance Used as Weapon	Substance Used as Weapon	Substance Used as Weapon	\N	\N	\N	\N	2023-11-08 13:57:39.838904	2023-11-08 13:57:39.838872	fc71cfc7-8641-4c29-a778-9563ab9a3936	2789
2794	uri://ed-fi.org/InterventionClassDescriptor	Curriculum	Curriculum	Curriculum	\N	\N	\N	\N	2023-11-08 13:57:39.871838	2023-11-08 13:57:39.870649	a657dfff-e7ed-43f6-889c-c79194ef9850	2794
2798	uri://ed-fi.org/DiplomaLevelDescriptor	Cum laude	Cum laude	Cum laude	\N	\N	\N	\N	2023-11-08 13:57:39.908709	2023-11-08 13:57:39.907769	ffa79016-883c-4e6d-b1c3-421f13787703	2798
2801	uri://ed-fi.org/DiplomaLevelDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	\N	2023-11-08 13:57:39.919589	2023-11-08 13:57:39.919561	5b3585a8-ebb1-4172-842c-742197f2538c	2801
2804	uri://ed-fi.org/CharterStatusDescriptor	School Charter	School Charter	School Charter	\N	\N	\N	\N	2023-11-08 13:57:39.949088	2023-11-08 13:57:39.948085	ecf6f4da-9a72-4796-ba73-0f6014c6dc7f	2804
2809	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	\N	2023-11-08 13:57:39.988517	2023-11-08 13:57:39.987518	39a75db3-4a57-4636-b0d9-c43b1afa743b	2809
2811	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	\N	2023-11-08 13:57:39.99841	2023-11-08 13:57:39.998385	cf55c095-8dad-4625-8384-bf898f760f65	2811
2817	uri://ed-fi.org/AcademicHonorCategoryDescriptor	National Merit Scholar	National Merit Scholar	National Merit Scholar	\N	\N	\N	\N	2023-11-08 13:57:40.010138	2023-11-08 13:57:40.010122	484f6fc8-fa8d-41be-9fc5-f7a653ebb37c	2817
2818	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.013383	2023-11-08 13:57:40.013357	930d9fee-7db2-412a-b3c1-80e26e931b7a	2818
2821	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honors program	Honors program	Honors program	\N	\N	\N	\N	2023-11-08 13:57:40.016842	2023-11-08 13:57:40.016816	1dd953b9-86f5-4ec8-8807-4393ced38668	2821
2823	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	\N	2023-11-08 13:57:40.020497	2023-11-08 13:57:40.020459	88d38390-6d10-4319-b915-4c6c49aee479	2823
2827	uri://ed-fi.org/VisaDescriptor	F1 - Foreign Student Visa	F1 - Foreign Student Visa	F1 - Foreign Student Visa	\N	\N	\N	\N	2023-11-08 13:57:40.058702	2023-11-08 13:57:40.057572	1065043e-8052-4cbe-8b2c-d552e103be65	2827
2828	uri://ed-fi.org/VisaDescriptor	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	\N	\N	\N	\N	2023-11-08 13:57:40.06824	2023-11-08 13:57:40.068196	7285eee7-eae6-4535-aadf-18d835de57b3	2828
2832	uri://ed-fi.org/ReasonNotTestedDescriptor	Alternate assessment administered	Alternate assessment administered	Alternate assessment administered	\N	\N	\N	\N	2023-11-08 13:57:40.099793	2023-11-08 13:57:40.098549	30004759-41ba-4fe3-8598-a08312df86a4	2833
2836	uri://ed-fi.org/ReasonNotTestedDescriptor	Not appropriate (ARD decision)	Not appropriate (ARD decision)	Not appropriate (ARD decision)	\N	\N	\N	\N	2023-11-08 13:57:40.108823	2023-11-08 13:57:40.108796	5f103a0d-a7eb-4aad-8a17-2c8363085886	2836
2840	uri://ed-fi.org/ReasonNotTestedDescriptor	Parental waiver	Parental waiver	Parental waiver	\N	\N	\N	\N	2023-11-08 13:57:40.116771	2023-11-08 13:57:40.116697	9de1cb98-d648-4289-adda-bdc9056f2bb5	2840
2848	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	\N	2023-11-08 13:57:40.157842	2023-11-08 13:57:40.156654	3f1e5129-02f9-44cb-979a-05d26ecf64ab	2848
2850	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	College-level	College-level	College-level	\N	\N	\N	\N	2023-11-08 13:57:40.167241	2023-11-08 13:57:40.167141	77671b9e-20f9-4761-9027-e22805e28f3f	2850
2855	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	\N	2023-11-08 13:57:40.174757	2023-11-08 13:57:40.174731	a7c4ba7d-12ff-4f2a-8866-9a7926a06a98	2855
2858	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Graduation Credit	Graduation Credit	Graduation Credit	\N	\N	\N	\N	2023-11-08 13:57:40.181421	2023-11-08 13:57:40.181406	650931bd-0e44-482f-b241-458224e7ec52	2858
2864	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-IB	Pre-IB	Pre-IB	\N	\N	\N	\N	2023-11-08 13:57:40.192793	2023-11-08 13:57:40.192766	299bf708-3497-4e73-9bf8-c7ad3b5d9e84	2864
2867	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Untracked	Untracked	Untracked	\N	\N	\N	\N	2023-11-08 13:57:40.197784	2023-11-08 13:57:40.197761	c4051e6c-76d5-4e5d-b5e6-05a5f761613b	2867
2868	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Property Destruction	Imminent Serious Property Destruction	Imminent Serious Property Destruction	\N	\N	\N	\N	2023-11-08 13:57:40.235123	2023-11-08 13:57:40.233697	338e0b65-407d-4756-b386-973b477a6fad	2868
2873	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Public School	Public School	Public School	\N	\N	\N	\N	2023-11-08 13:57:40.245266	2023-11-08 13:57:40.245215	be9e888c-6780-4204-b13a-13fba8854331	2873
2876	uri://ed-fi.org/SeparationReasonDescriptor	Change of assignment	Change of assignment	Change of assignment	\N	\N	\N	\N	2023-11-08 13:57:40.284158	2023-11-08 13:57:40.283076	50f4ca66-1e13-4529-b9a6-d7f6f18a1d5d	2876
2761	uri://ed-fi.org/RetestIndicatorDescriptor	2nd Retest	2nd Retest	2nd Retest	\N	\N	\N	\N	2023-11-08 13:57:39.658708	2023-11-08 13:57:39.657521	8af5ac31-6805-4fe2-8b54-69cbbd3b17b5	2761
2764	uri://ed-fi.org/CompetencyLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-11-08 13:57:39.698078	2023-11-08 13:57:39.696986	bcdef835-0853-4b0a-9d1a-b863d9191751	2764
2767	uri://ed-fi.org/CompetencyLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	\N	2023-11-08 13:57:39.707729	2023-11-08 13:57:39.707683	19932bd8-8d2e-4653-b787-ac6003091358	2767
2771	uri://ed-fi.org/GradebookEntryTypeDescriptor	Assignment	Assignment	Assignment	\N	\N	\N	\N	2023-11-08 13:57:39.741334	2023-11-08 13:57:39.739738	ed47feae-597c-436d-9e27-43cfcaed5d26	2771
2775	uri://ed-fi.org/GradebookEntryTypeDescriptor	Lesson	Lesson	Lesson	\N	\N	\N	\N	2023-11-08 13:57:39.750024	2023-11-08 13:57:39.749956	197457f7-15c3-4c3a-849d-19a17b69797b	2775
2777	uri://ed-fi.org/ElectronicMailTypeDescriptor	Home/Personal	Home/Personal	Home/Personal	\N	\N	\N	\N	2023-11-08 13:57:39.787001	2023-11-08 13:57:39.785999	3f720956-dd94-4e8f-95d9-14385a9f45d0	2777
2784	uri://ed-fi.org/WeaponDescriptor	Handgun	Handgun	Handgun	\N	\N	\N	\N	2023-11-08 13:57:39.824322	2023-11-08 13:57:39.823134	b3fc9e06-6392-419a-abe0-4a7494c1689b	2784
2829	uri://ed-fi.org/VisaDescriptor	Other Visa	Other Visa	Other Visa	\N	\N	\N	\N	2023-11-08 13:57:40.069249	2023-11-08 13:57:40.069194	86801e36-3488-4f9d-aa8f-6c2025e9a805	2829
2787	uri://ed-fi.org/WeaponDescriptor	Other Firearm	Other Firearm	Other Firearm	\N	\N	\N	\N	2023-11-08 13:57:39.833194	2023-11-08 13:57:39.833135	230f2a8e-3c74-44ed-8c5d-30c0d4f73268	2787
2792	uri://ed-fi.org/InterventionClassDescriptor	Supplement	Supplement	Supplement	\N	\N	\N	\N	2023-11-08 13:57:39.87181	2023-11-08 13:57:39.870668	666d6234-7c6e-4f80-9a64-19d27cafaa5d	2792
2796	uri://ed-fi.org/DiplomaLevelDescriptor	Magna cum laude	Magna cum laude	Magna cum laude	\N	\N	\N	\N	2023-11-08 13:57:39.908717	2023-11-08 13:57:39.907764	d497599a-44f6-4f1d-9874-422612ac2d59	2796
2799	uri://ed-fi.org/DiplomaLevelDescriptor	Summa cum laude	Summa cum laude	Summa cum laude	\N	\N	\N	\N	2023-11-08 13:57:39.917352	2023-11-08 13:57:39.917312	9d1f858f-5cb9-4802-ac76-5ae2fc6a2852	2799
2805	uri://ed-fi.org/CharterStatusDescriptor	Not a Charter School	Not a Charter School	Not a Charter School	\N	\N	\N	\N	2023-11-08 13:57:39.949076	2023-11-08 13:57:39.948079	52d6aecc-08c3-47ca-895f-c5c4c2c01074	2805
2807	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Attendance award	Attendance award	Attendance award	\N	\N	\N	\N	2023-11-08 13:57:39.988671	2023-11-08 13:57:39.987515	ea8d3661-dc4f-42df-b086-c769437477c2	2807
2812	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor roll	Honor roll	Honor roll	\N	\N	\N	\N	2023-11-08 13:57:39.998432	2023-11-08 13:57:39.998395	c90332aa-b50d-463b-9474-d02d6a537dc2	2812
2816	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Medals	Medals	Medals	\N	\N	\N	\N	2023-11-08 13:57:40.006811	2023-11-08 13:57:40.006752	6a0aece0-0c47-4076-b88a-f2eda9100262	2816
2822	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Scholarships	Scholarships	Scholarships	\N	\N	\N	\N	2023-11-08 13:57:40.019278	2023-11-08 13:57:40.019265	aa0b1408-f785-41f6-bce4-3315b24a8957	2822
2824	uri://ed-fi.org/VisaDescriptor	H1 - Employment Visa	H1 - Employment Visa	H1 - Employment Visa	\N	\N	\N	\N	2023-11-08 13:57:40.058596	2023-11-08 13:57:40.057588	cb097210-8c5f-4882-ac70-c7258b8f5970	2824
2833	uri://ed-fi.org/ReasonNotTestedDescriptor	Absent	Absent	Absent	\N	\N	\N	\N	2023-11-08 13:57:40.099806	2023-11-08 13:57:40.098566	048b16d4-6f8b-458e-b0ec-403cae1c0a8b	2832
2838	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP exempt	LEP exempt	LEP exempt	\N	\N	\N	\N	2023-11-08 13:57:40.110517	2023-11-08 13:57:40.110306	cc3237c3-e65e-4b83-ada4-fd4b8cd1ceae	2838
2839	uri://ed-fi.org/ReasonNotTestedDescriptor	Not tested (ARD decision)	Not tested (ARD decision)	Not tested (ARD decision)	\N	\N	\N	\N	2023-11-08 13:57:40.115252	2023-11-08 13:57:40.115225	4182695f-eab8-466e-9df1-843673eb52fd	2839
2847	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	\N	2023-11-08 13:57:40.157847	2023-11-08 13:57:40.156672	f4ee33c4-6ef7-46d2-86f5-861e2eba838c	2847
2851	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Correspondence	Correspondence	Correspondence	\N	\N	\N	\N	2023-11-08 13:57:40.167503	2023-11-08 13:57:40.167464	39de0944-d608-455f-82b5-9133c239cac0	2851
2856	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Distance Learning	Distance Learning	Distance Learning	\N	\N	\N	\N	2023-11-08 13:57:40.175809	2023-11-08 13:57:40.175791	fe6f4c59-3235-4daa-983c-22acb35fc67c	2856
2857	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	\N	2023-11-08 13:57:40.181187	2023-11-08 13:57:40.181138	f4e0e84c-fe0d-4f47-b30d-c8621f2f1576	2857
2862	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Magnet	Magnet	Magnet	\N	\N	\N	\N	2023-11-08 13:57:40.18961	2023-11-08 13:57:40.189552	424fd3af-48fd-4371-95e9-af3322488707	2862
2869	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	\N	\N	\N	\N	2023-11-08 13:57:40.23525	2023-11-08 13:57:40.23368	0d1bd72c-42b7-4df1-acf5-92054b1f79ad	2869
2872	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Private School	Private School	Private School	\N	\N	\N	\N	2023-11-08 13:57:40.245159	2023-11-08 13:57:40.245127	b1376fac-762e-4bc3-8ff2-d3c8c19e19da	2872
2879	uri://ed-fi.org/SeparationReasonDescriptor	Family/personal relocation	Family/personal relocation	Family/personal relocation	\N	\N	\N	\N	2023-11-08 13:57:40.287042	2023-11-08 13:57:40.287004	ce6031de-6393-4972-b12b-bf19b179c7d5	2879
2883	uri://ed-fi.org/SeparationReasonDescriptor	Personal reason	Personal reason	Personal reason	\N	\N	\N	\N	2023-11-08 13:57:40.29661	2023-11-08 13:57:40.296583	f2fa7ef8-d160-479b-8feb-799acbbdd2ad	2883
2885	uri://ed-fi.org/SeparationReasonDescriptor	Discharge	Discharge	Discharge	\N	\N	\N	\N	2023-11-08 13:57:40.31377	2023-11-08 13:57:40.313716	12522b4e-9eba-48b1-92f8-4a5f169e3e58	2885
2888	uri://ed-fi.org/MediumOfInstructionDescriptor	Distance Learning (other than online)	Distance Learning (other than online)	Distance Learning (other than online)	\N	\N	\N	\N	2023-11-08 13:57:40.353189	2023-11-08 13:57:40.351933	b9bfdffa-8eab-470e-ad84-7a2a1ea37292	2888
2893	uri://ed-fi.org/MediumOfInstructionDescriptor	Independent study	Independent study	Independent study	\N	\N	\N	\N	2023-11-08 13:57:40.365547	2023-11-08 13:57:40.365491	caac79c8-d8d1-48ad-bbaf-530b4355edb2	2893
2897	uri://ed-fi.org/MediumOfInstructionDescriptor	Televised	Televised	Televised	\N	\N	\N	\N	2023-11-08 13:57:40.375061	2023-11-08 13:57:40.375031	f405982c-f1aa-4af1-9394-57e252cbbb20	2897
2901	uri://ed-fi.org/CohortTypeDescriptor	Academic Intervention	Academic Intervention	Academic Intervention	\N	\N	\N	\N	2023-11-08 13:57:40.412858	2023-11-08 13:57:40.411864	cc66ace0-3f44-4fda-bc64-32a008b7fbfd	2900
2800	uri://ed-fi.org/DiplomaLevelDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	\N	2023-11-08 13:57:39.918822	2023-11-08 13:57:39.918792	44fd8df1-7801-40dc-af9b-54f4022b3de6	2800
2802	uri://ed-fi.org/CharterStatusDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	\N	2023-11-08 13:57:39.949081	2023-11-08 13:57:39.948105	9b08f12a-da53-48ae-a5f1-495ef353ecba	2803
2806	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	\N	2023-11-08 13:57:39.988464	2023-11-08 13:57:39.987491	4f026887-e820-445c-943b-b26953211e1a	2806
2810	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	\N	2023-11-08 13:57:39.998391	2023-11-08 13:57:39.998341	db1cf562-12a3-4a13-b3e6-f247fec58d77	2810
2814	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honorable mention	Honorable mention	Honorable mention	\N	\N	\N	\N	2023-11-08 13:57:40.004358	2023-11-08 13:57:40.004272	7bde29ab-efe4-4128-8926-6e371a367093	2814
2819	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Points	Points	Points	\N	\N	\N	\N	2023-11-08 13:57:40.013957	2023-11-08 13:57:40.013916	79001063-541b-42f0-b6f9-e144ed203faa	2819
2826	uri://ed-fi.org/VisaDescriptor	B1 - Business Visa	B1 - Business Visa	B1 - Business Visa	\N	\N	\N	\N	2023-11-08 13:57:40.058718	2023-11-08 13:57:40.057563	0070642a-17b0-4d8d-a9ee-251cc5b858c6	2826
2831	uri://ed-fi.org/ReasonNotTestedDescriptor	Foreign exchange student waiver	Foreign exchange student waiver	Foreign exchange student waiver	\N	\N	\N	\N	2023-11-08 13:57:40.099562	2023-11-08 13:57:40.098575	e97cc9d8-41d7-4e97-bf4b-b2f75ef0d714	2831
2837	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP postponement	LEP postponement	LEP postponement	\N	\N	\N	\N	2023-11-08 13:57:40.109877	2023-11-08 13:57:40.109864	cfb407cf-ad43-45c5-8d50-c87efd2c4a84	2837
2841	uri://ed-fi.org/ReasonNotTestedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.117465	2023-11-08 13:57:40.117451	da9178fb-dc01-4d6a-8351-834b7f59ffac	2841
2844	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by student	Refusal by student	Refusal by student	\N	\N	\N	\N	2023-11-08 13:57:40.12472	2023-11-08 13:57:40.124693	462950cf-01f3-4c44-a14e-3396382ca39f	2844
2846	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Basic	Basic	Basic	\N	\N	\N	\N	2023-11-08 13:57:40.157752	2023-11-08 13:57:40.156687	9cbc7ace-a502-4e36-aaba-73c283c8427a	2846
2849	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Core Subject	Core Subject	Core Subject	\N	\N	\N	\N	2023-11-08 13:57:40.167174	2023-11-08 13:57:40.167154	0dc094bf-4618-4608-9653-3fb172471a38	2849
2853	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	English Language Learner	English Language Learner	English Language Learner	\N	\N	\N	\N	2023-11-08 13:57:40.173315	2023-11-08 13:57:40.173287	9344d25f-973e-4595-b0eb-a0deafbdb7c8	2853
2859	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	\N	2023-11-08 13:57:40.182197	2023-11-08 13:57:40.181979	e80d9ef9-e4ee-4699-897e-573d015f9273	2859
2863	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.18947	2023-11-08 13:57:40.189172	59ae20db-628b-400a-879c-5081094bb159	2863
2866	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Remedial	Remedial	Remedial	\N	\N	\N	\N	2023-11-08 13:57:40.196254	2023-11-08 13:57:40.196107	559c59cb-4ec5-4ec2-9c77-8851b8807ddb	2866
2870	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	\N	\N	\N	\N	2023-11-08 13:57:40.23523	2023-11-08 13:57:40.233673	19e95551-ceeb-4a84-a7a7-0dfdb538e7a0	2870
2875	uri://ed-fi.org/NetworkPurposeDescriptor	Shared Services	Shared Services	Shared Services	\N	\N	\N	\N	2023-11-08 13:57:40.277946	2023-11-08 13:57:40.276472	2fe40f86-8dde-43f8-83c0-703b7f42141d	2875
2878	uri://ed-fi.org/SeparationReasonDescriptor	Illness/disability/death	Illness/disability/death	Illness/disability/death	\N	\N	\N	\N	2023-11-08 13:57:40.286715	2023-11-08 13:57:40.286688	63904fe8-4bf0-48a0-8787-7f981119b8b7	2878
2882	uri://ed-fi.org/SeparationReasonDescriptor	Layoff	Layoff	Layoff	\N	\N	\N	\N	2023-11-08 13:57:40.294979	2023-11-08 13:57:40.294826	34195042-b0bb-4701-ab86-c03ce4a01dbd	2882
2884	uri://ed-fi.org/SeparationReasonDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-11-08 13:57:40.313175	2023-11-08 13:57:40.313149	ad2c0823-a090-4e6e-8d2a-b7ec205272ae	2884
2887	uri://ed-fi.org/MediumOfInstructionDescriptor	Center-based instruction	Center-based instruction	Center-based instruction	\N	\N	\N	\N	2023-11-08 13:57:40.353208	2023-11-08 13:57:40.351916	162a19ff-7008-44f0-ba5e-3862a4247171	2887
2892	uri://ed-fi.org/MediumOfInstructionDescriptor	Internship	Internship	Internship	\N	\N	\N	\N	2023-11-08 13:57:40.364167	2023-11-08 13:57:40.364113	425c40d9-43c9-4840-a2b9-c733b72c1e96	2892
2895	uri://ed-fi.org/MediumOfInstructionDescriptor	Technology-based instruction in classroom	Technology-based instruction in classroom	Technology-based instruction in classroom	\N	\N	\N	\N	2023-11-08 13:57:40.371462	2023-11-08 13:57:40.37132	dd32a3fa-92a3-4e75-8827-8e59ce521f27	2895
2898	uri://ed-fi.org/MediumOfInstructionDescriptor	Videotaped/prerecorded video	Videotaped/prerecorded video	Videotaped/prerecorded video	\N	\N	\N	\N	2023-11-08 13:57:40.376944	2023-11-08 13:57:40.376927	972b4779-e7a8-4cce-9912-319706b35b8d	2898
2900	uri://ed-fi.org/CohortTypeDescriptor	Counselor List	Counselor List	Counselor List	\N	\N	\N	\N	2023-11-08 13:57:40.412871	2023-11-08 13:57:40.411851	f2e69fd9-6dc9-4ca5-96f8-5b6c351032b6	2901
2906	uri://ed-fi.org/CohortTypeDescriptor	In-school Suspension	In-school Suspension	In-school Suspension	\N	\N	\N	\N	2023-11-08 13:57:40.422728	2023-11-08 13:57:40.422714	539da789-67e3-44b9-a73e-ee744d2eb791	2906
2908	uri://ed-fi.org/CohortTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.426874	2023-11-08 13:57:40.426846	f27b3c2d-84b4-4120-aa61-e16c7e709d26	2908
2911	uri://ed-fi.org/AssignmentLateStatusDescriptor	Not Late	Not Late	The assignment was not submitted after the due date and/or is not marked as late.	\N	\N	\N	\N	2023-11-08 13:57:40.462409	2023-11-08 13:57:40.461258	40010615-ec9e-4828-913c-a2001d99149c	2911
2914	uri://ed-fi.org/CohortScopeDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	\N	2023-11-08 13:57:40.473156	2023-11-08 13:57:40.471267	d838b0ae-3fa2-4f1d-a2c7-8e1860bb735d	2914
2921	uri://ed-fi.org/CohortScopeDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	\N	2023-11-08 13:57:40.487135	2023-11-08 13:57:40.487052	3409f587-bb0b-4194-a09d-6f29740297b4	2921
2922	uri://ed-fi.org/InteractivityStyleDescriptor	Expositive	Expositive	Expositive	\N	\N	\N	\N	2023-11-08 13:57:40.519277	2023-11-08 13:57:40.518317	dcec42be-aadf-4b67-a052-2659a7333c5a	2922
2815	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Letter of student commendation	Letter of student commendation	Letter of student commendation	\N	\N	\N	\N	2023-11-08 13:57:40.005561	2023-11-08 13:57:40.005509	64736b19-640a-4f4f-9f33-9110100b59e0	2815
2820	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Prize awards	Prize awards	Prize awards	\N	\N	\N	\N	2023-11-08 13:57:40.015485	2023-11-08 13:57:40.015461	4517084b-34cf-4293-a2f6-1375dbf77879	2820
2825	uri://ed-fi.org/VisaDescriptor	B2 - Tourist Visa	B2 - Tourist Visa	B2 - Tourist Visa	\N	\N	\N	\N	2023-11-08 13:57:40.058574	2023-11-08 13:57:40.057555	e0ab7b67-1085-43b5-a3a6-e37785b82e15	2825
2830	uri://ed-fi.org/VisaDescriptor	M1 - Foreign Student vocational/non-academic Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	\N	\N	\N	\N	2023-11-08 13:57:40.069493	2023-11-08 13:57:40.069469	145e37b0-9fee-475e-a2d0-9235eaa5fbc5	2830
2834	uri://ed-fi.org/ReasonNotTestedDescriptor	Disruptive behavior	Disruptive behavior	Disruptive behavior	\N	\N	\N	\N	2023-11-08 13:57:40.099713	2023-11-08 13:57:40.098566	ad6da3c8-ff10-4655-9a9e-3ae186055b02	2834
2835	uri://ed-fi.org/ReasonNotTestedDescriptor	Medical waiver	Medical waiver	Medical waiver	\N	\N	\N	\N	2023-11-08 13:57:40.10877	2023-11-08 13:57:40.108726	82257234-35ed-4bc4-85ad-89bf2729843a	2835
2842	uri://ed-fi.org/ReasonNotTestedDescriptor	Previously passed the examination	Previously passed the examination	Previously passed the examination	\N	\N	\N	\N	2023-11-08 13:57:40.11875	2023-11-08 13:57:40.118664	578385e8-d2da-4c8a-9510-0c6c9d220fac	2842
2843	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by parent	Refusal by parent	Refusal by parent	\N	\N	\N	\N	2023-11-08 13:57:40.123493	2023-11-08 13:57:40.123405	3460cbcb-587a-47a9-b87f-7ae66c6e0134	2843
2845	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Accepted as high school equivalent	Accepted as high school equivalent	Accepted as high school equivalent	\N	\N	\N	\N	2023-11-08 13:57:40.157634	2023-11-08 13:57:40.156659	0659bfd4-925c-478c-b210-29ad2a638759	2845
2852	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-11-08 13:57:40.168405	2023-11-08 13:57:40.168308	7db67897-5c56-44ed-832a-6e31efa7fdfb	2852
2854	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	General	General	General	\N	\N	\N	\N	2023-11-08 13:57:40.174722	2023-11-08 13:57:40.174669	198759a8-3715-4185-901e-7cc87ef499d2	2854
2860	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Honors	Honors	Honors	\N	\N	\N	\N	2023-11-08 13:57:40.182997	2023-11-08 13:57:40.182925	fff6a95d-e1d8-43de-8ae2-1db265603751	2860
2861	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-AP	Pre-AP	Pre-AP	\N	\N	\N	\N	2023-11-08 13:57:40.189335	2023-11-08 13:57:40.189294	4b98bd48-1b50-4a68-88cb-271ff9c461a8	2861
2865	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Students with disabilities	Students with disabilities	Students with disabilities	\N	\N	\N	\N	2023-11-08 13:57:40.195364	2023-11-08 13:57:40.195336	5f66f246-7901-440c-8bd8-01905383f35c	2865
2871	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.23929	2023-11-08 13:57:40.237936	112491e6-fb96-46ec-b333-463245262bdf	2871
2874	uri://ed-fi.org/NetworkPurposeDescriptor	Collective Procurement	Collective Procurement	Collective Procurement	\N	\N	\N	\N	2023-11-08 13:57:40.277916	2023-11-08 13:57:40.27695	42b1a206-0254-43a5-a95e-ea3f2290d82f	2874
2877	uri://ed-fi.org/SeparationReasonDescriptor	Employment elsewhere	Employment elsewhere	Employment elsewhere	\N	\N	\N	\N	2023-11-08 13:57:40.284313	2023-11-08 13:57:40.283774	32058d58-cad7-42c8-a96d-991c1cc32d91	2877
2881	uri://ed-fi.org/SeparationReasonDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.293414	2023-11-08 13:57:40.293385	e5dcdd53-7606-424c-9213-f025e4b7ea34	2881
2886	uri://ed-fi.org/SeparationReasonDescriptor	Retirement	Retirement	Retirement	\N	\N	\N	\N	2023-11-08 13:57:40.31429	2023-11-08 13:57:40.314169	49be3bce-a603-4a3b-b66e-bcf2b3d000a8	2886
2890	uri://ed-fi.org/MediumOfInstructionDescriptor	Correspondence instruction	Correspondence instruction	Correspondence instruction	\N	\N	\N	\N	2023-11-08 13:57:40.35333	2023-11-08 13:57:40.351924	9535bf68-d041-4b91-89aa-baafbc1b222d	2890
2891	uri://ed-fi.org/MediumOfInstructionDescriptor	Other technology-based instruction	Other technology-based instruction	Other technology-based instruction	\N	\N	\N	\N	2023-11-08 13:57:40.363748	2023-11-08 13:57:40.363526	ded81d96-4c71-4102-b0bd-3e06832ed27a	2891
2896	uri://ed-fi.org/MediumOfInstructionDescriptor	Telepresence/video conference	Telepresence/video conference	Telepresence/video conference	\N	\N	\N	\N	2023-11-08 13:57:40.371845	2023-11-08 13:57:40.371806	7b6307e3-c5bb-4ff4-b86a-fc71ef172476	2896
2902	uri://ed-fi.org/CohortTypeDescriptor	Attendance Intervention	Attendance Intervention	Attendance Intervention	\N	\N	\N	\N	2023-11-08 13:57:40.412835	2023-11-08 13:57:40.411881	9a963d3a-cb89-4d0e-aaf0-5a54442f80cb	2902
2907	uri://ed-fi.org/CohortTypeDescriptor	Extracurricular Activity	Extracurricular Activity	Extracurricular Activity	\N	\N	\N	\N	2023-11-08 13:57:40.423327	2023-11-08 13:57:40.423291	217727b2-3ab3-49cb-852f-4d4c32bc985b	2907
2909	uri://ed-fi.org/CohortTypeDescriptor	Study Hall	Study Hall	Study Hall	\N	\N	\N	\N	2023-11-08 13:57:40.429586	2023-11-08 13:57:40.429559	6de853d8-a1cb-4ae9-82a0-94606aa00ae9	2909
2916	uri://ed-fi.org/CohortScopeDescriptor	Network	Network	Network	\N	\N	\N	\N	2023-11-08 13:57:40.473149	2023-11-08 13:57:40.472921	658b0929-1c05-46fe-9f68-030827aa2dbc	2916
2918	uri://ed-fi.org/CohortScopeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.480511	2023-11-08 13:57:40.480471	7b95a983-8042-4e14-aace-f124fa171f84	2918
2924	uri://ed-fi.org/InteractivityStyleDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-11-08 13:57:40.519399	2023-11-08 13:57:40.518283	1b16ea4c-b4ad-4da5-a3f3-721aa3697b57	2924
2928	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Milk	Free Milk	Free Milk	\N	\N	\N	\N	2023-11-08 13:57:40.559964	2023-11-08 13:57:40.558778	0123454a-53eb-46ba-8ad5-c5c76d607d74	2928
2931	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Lunch	Full Price Lunch	Full Price Lunch	\N	\N	\N	\N	2023-11-08 13:57:40.569156	2023-11-08 13:57:40.569127	0ee82820-a288-4610-89a1-f7a2d2c6947f	2932
2935	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Supper	Full Price Supper	Full Price Supper	\N	\N	\N	\N	2023-11-08 13:57:40.576201	2023-11-08 13:57:40.576187	07e21f17-58fc-4b97-8171-7e273689a636	2935
2938	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Snack	Reduced Price Snack	Reduced Price Snack	\N	\N	\N	\N	2023-11-08 13:57:40.581735	2023-11-08 13:57:40.581682	1796c72b-1615-468c-b9c0-6202ff5cd3e5	2938
2880	uri://ed-fi.org/SeparationReasonDescriptor	Formal study or research	Formal study or research	Formal study or research	\N	\N	\N	\N	2023-11-08 13:57:40.293153	2023-11-08 13:57:40.293111	1b36826e-d7fe-45b7-88ef-edda28405d3c	2880
2889	uri://ed-fi.org/MediumOfInstructionDescriptor	Face-to-face instruction	Face-to-face instruction	Face-to-face instruction	\N	\N	\N	\N	2023-11-08 13:57:40.354256	2023-11-08 13:57:40.351936	df37aa04-74f0-45bc-b36d-910965f01259	2889
2894	uri://ed-fi.org/MediumOfInstructionDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.366625	2023-11-08 13:57:40.366534	243bb567-3613-4608-a5ae-f71d52cef0b1	2894
2899	uri://ed-fi.org/MediumOfInstructionDescriptor	Virtual/On-line Distance learning	Virtual/On-line Distance learning	Virtual/On-line Distance learning	\N	\N	\N	\N	2023-11-08 13:57:40.383044	2023-11-08 13:57:40.383007	1553e6fa-fd89-4e64-8008-5c0566de5498	2899
2903	uri://ed-fi.org/CohortTypeDescriptor	Classroom Pullout	Classroom Pullout	Classroom Pullout	\N	\N	\N	\N	2023-11-08 13:57:40.412846	2023-11-08 13:57:40.411856	43c9a021-9c28-4ac9-8daa-2d25d4805b7e	2903
2904	uri://ed-fi.org/CohortTypeDescriptor	Field Trip	Field Trip	Field Trip	\N	\N	\N	\N	2023-11-08 13:57:40.421421	2023-11-08 13:57:40.421346	7764004f-cbda-4d19-be50-8e4d78a2ceee	2904
2912	uri://ed-fi.org/AssignmentLateStatusDescriptor	Late	Late	The assignment was submitted by the student after the due date/time and marked as late and the score may or may not be affected.	\N	\N	\N	\N	2023-11-08 13:57:40.462418	2023-11-08 13:57:40.461264	f76f2dc9-3b24-4e72-98c2-a87f285289be	2912
2915	uri://ed-fi.org/CohortScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	\N	2023-11-08 13:57:40.473159	2023-11-08 13:57:40.471262	ba8817fe-b807-4153-be18-887395e9f8c9	2915
2919	uri://ed-fi.org/CohortScopeDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:40.482711	2023-11-08 13:57:40.482673	d7b4c071-2689-460b-abbd-200508cdcf11	2919
2923	uri://ed-fi.org/InteractivityStyleDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.519283	2023-11-08 13:57:40.518293	8a1da878-bf6a-4dbb-bffd-87c5499cc486	2923
2926	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Lunch	Free Lunch	Free Lunch	\N	\N	\N	\N	2023-11-08 13:57:40.559814	2023-11-08 13:57:40.558785	ab9d7fce-211c-4057-83f9-bb01f54cd9e0	2926
2930	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Supper	Free Supper	Free Supper	\N	\N	\N	\N	2023-11-08 13:57:40.568685	2023-11-08 13:57:40.568638	2a9ba4f0-c276-4b14-b9e0-b93df0de035f	2930
2937	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Breakfast	Reduced Price Breakfast	Reduced Price Breakfast	\N	\N	\N	\N	2023-11-08 13:57:40.577504	2023-11-08 13:57:40.577473	159ba53f-9ea3-4355-b0ab-d3cb644d3fe5	2937
2939	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.583604	2023-11-08 13:57:40.58356	9752c4da-80fe-4e9c-bd89-0b8ae253e7a0	2939
2941	uri://ed-fi.org/AcademicSubjectDescriptor	Cross Subject	Cross Subject	Cross Subject	\N	\N	\N	\N	2023-11-08 13:57:40.616273	2023-11-08 13:57:40.615317	75791b6f-bcd5-4c4a-96f7-1e694ec0fb89	2941
2945	uri://ed-fi.org/AcademicSubjectDescriptor	English	English	English	\N	\N	\N	\N	2023-11-08 13:57:40.624909	2023-11-08 13:57:40.624863	40536497-224e-403c-98e9-7a7bf89e46c9	2945
2951	uri://ed-fi.org/AcademicSubjectDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.633173	2023-11-08 13:57:40.633146	7303280e-6d90-4f1a-a69c-a13c090cb329	2951
2954	uri://ed-fi.org/AcademicSubjectDescriptor	Religious Education and Theology	Religious Education and Theology	Religious Education and Theology	\N	\N	\N	\N	2023-11-08 13:57:40.639665	2023-11-08 13:57:40.639636	fe005fd0-4ab3-4629-9e2c-5580758d3fa3	2954
2958	uri://ed-fi.org/AcademicSubjectDescriptor	Writing	Writing	Writing	\N	\N	\N	\N	2023-11-08 13:57:40.647287	2023-11-08 13:57:40.647259	90a640fd-4f31-4c80-b9db-bc6977d628e3	2958
2960	uri://ed-fi.org/AssessmentItemResultDescriptor	Below Standard	Below Standard	Below Standard	\N	\N	\N	\N	2023-11-08 13:57:40.681626	2023-11-08 13:57:40.680573	cd0d9de7-f4e0-4dfb-bbb7-e99b3cf06a83	2960
2967	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Doctoral University	Doctoral University	Includes institutions that awarded at least 20 research/scholarship doctoral degrees during the update year and also institutions with below 20 research/scholarship doctoral degrees that awarded at least 30 professional practice doctoral degrees in at least 2 programs. Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-11-08 13:57:40.722549	2023-11-08 13:57:40.721555	a1e88178-086d-4b12-932f-8b4421b5a9f4	2966
2973	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Associate's College	Associate's College	Institutions at which the highest level degree awarded is an associate's degree. The institutions are sorted into nine categories based on the intersection of two factors: disciplinary focus (transfer, career and technical or mixed) and dominant student type (traditional, nontraditional or mixed). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-11-08 13:57:40.733716	2023-11-08 13:57:40.733681	ba43d5c0-5273-4167-b2d7-4da7b00e77ff	2973
2976	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	\N	\N	\N	\N	2023-11-08 13:57:40.740069	2023-11-08 13:57:40.740038	b8e241ff-42b5-4f68-a0e5-7fe92f83551d	2976
2979	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Shelters	Shelters	Shelters	\N	\N	\N	\N	2023-11-08 13:57:40.773838	2023-11-08 13:57:40.772788	8f3a8235-9ed9-422f-94a9-0175897c5182	2979
2982	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Essay	Essay	Essay	\N	\N	\N	\N	2023-11-08 13:57:40.812319	2023-11-08 13:57:40.811341	59e9435d-c956-4541-8392-0959cf0e3653	2982
2988	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Matching	Matching	Matching	\N	\N	\N	\N	2023-11-08 13:57:40.823738	2023-11-08 13:57:40.823725	cf61bdb1-4e5e-4911-b164-f4e112d18144	2988
2989	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice	Multiple-choice	Multiple-choice	\N	\N	\N	\N	2023-11-08 13:57:40.827465	2023-11-08 13:57:40.827406	192e22ae-4858-4840-ac15-1a2d6a3d53bc	2989
2993	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other extended response	Other extended response	Other extended response	\N	\N	\N	\N	2023-11-08 13:57:40.834491	2023-11-08 13:57:40.834477	be2505b9-6482-44f5-87f5-023e12fc2b9a	2993
2998	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Short answer	Short answer	Short answer	\N	\N	\N	\N	2023-11-08 13:57:40.843874	2023-11-08 13:57:40.843459	d3b2bea7-e5b1-43fc-9388-248645d49c55	2998
3000	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Substitution	Substitution	Substitution	\N	\N	\N	\N	2023-11-08 13:57:40.848292	2023-11-08 13:57:40.84824	0e5b8da0-0dd7-44ad-8c32-7b9f218c3dd0	3000
3034	uri://ed-fi.org/DisciplineDescriptor	Community Service	Community Service	Community Service	\N	\N	\N	\N	2023-11-08 13:57:41.040153	2023-11-08 13:57:41.040104	d07ee659-8766-49ed-8c21-7529e56a1e92	3034
2905	uri://ed-fi.org/CohortTypeDescriptor	Discipline Intervention	Discipline Intervention	Discipline Intervention	\N	\N	\N	\N	2023-11-08 13:57:40.42166	2023-11-08 13:57:40.421646	5c064ccd-a978-4127-a98a-fd7efc082940	2905
2910	uri://ed-fi.org/CohortTypeDescriptor	Principal Watch List	Principal Watch List	Principal Watch List	\N	\N	\N	\N	2023-11-08 13:57:40.429761	2023-11-08 13:57:40.429726	483729fa-fd16-45f0-9b57-ab41b9bf03a8	2910
2913	uri://ed-fi.org/CohortScopeDescriptor	District	District	District	\N	\N	\N	\N	2023-11-08 13:57:40.473156	2023-11-08 13:57:40.472919	8f2bedf7-3022-450f-ad78-a182d85e8503	2913
2917	uri://ed-fi.org/CohortScopeDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-11-08 13:57:40.480407	2023-11-08 13:57:40.480198	b20135aa-194f-46b7-82ee-256853bd3b9f	2917
2920	uri://ed-fi.org/CohortScopeDescriptor	Statewide	Statewide	Statewide	\N	\N	\N	\N	2023-11-08 13:57:40.483426	2023-11-08 13:57:40.483353	a2be8aed-9c50-4573-adb4-53394ca4e004	2920
2925	uri://ed-fi.org/InteractivityStyleDescriptor	Mixed	Mixed	Mixed	\N	\N	\N	\N	2023-11-08 13:57:40.519264	2023-11-08 13:57:40.5183	1a7889e5-80da-45a1-ac2d-70c8d1a8da9e	2925
2929	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Snack	Free Snack	Free Snack	\N	\N	\N	\N	2023-11-08 13:57:40.55999	2023-11-08 13:57:40.558807	08028fa6-05d9-43bb-8b87-5f2fcf12d45b	2929
2932	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Milk	Full Price Milk	Full Price Milk	\N	\N	\N	\N	2023-11-08 13:57:40.56905	2023-11-08 13:57:40.569021	cf9cf271-15c8-4c1a-b22a-3cb8bb3c177f	2931
2934	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Snack	Full Price Snack	Full Price Snack	\N	\N	\N	\N	2023-11-08 13:57:40.575334	2023-11-08 13:57:40.575293	48d29e13-bff2-4e71-bd26-65390e381665	2934
2940	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Supper	Reduced Price Supper	Reduced Price Supper	\N	\N	\N	\N	2023-11-08 13:57:40.583892	2023-11-08 13:57:40.583864	cea4089f-49a9-42fe-949d-1af893dc116e	2940
2944	uri://ed-fi.org/AcademicSubjectDescriptor	Critical Reading	Critical Reading	Critical Reading	\N	\N	\N	\N	2023-11-08 13:57:40.616492	2023-11-08 13:57:40.615332	f4b4f36a-cee2-45f6-bc35-b63f8283a473	2944
2947	uri://ed-fi.org/AcademicSubjectDescriptor	English Language Arts	English Language Arts	English Language Arts	\N	\N	\N	\N	2023-11-08 13:57:40.626627	2023-11-08 13:57:40.626595	2bf3fcb0-8816-4153-acaa-0fc2822bae74	2947
2952	uri://ed-fi.org/AcademicSubjectDescriptor	Physical, Health, and Safety Education	Physical, Health, and Safety Education	Physical, Health, and Safety Education	\N	\N	\N	\N	2023-11-08 13:57:40.638353	2023-11-08 13:57:40.637839	544ea9d1-7dc0-4c3c-a5fd-a9897b0549c9	2952
2957	uri://ed-fi.org/AcademicSubjectDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	\N	2023-11-08 13:57:40.6463	2023-11-08 13:57:40.646286	d7fbeae8-0012-4475-8f61-3dff4a6e9008	2957
2961	uri://ed-fi.org/AssessmentItemResultDescriptor	Incorrect	Incorrect	Incorrect	\N	\N	\N	\N	2023-11-08 13:57:40.68174	2023-11-08 13:57:40.68059	cab00a09-c7ff-4515-9dce-2c2f58c95e18	2961
2968	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate/Associate's College	Baccalaureate/Associate's College	Includes four-year colleges (by virtue of having at least one baccalaureate degree program) that conferred more than 50 percent of degrees at the associate's level . Excludes Special Focus Institutions, Tribal Colleges, and institutions that have sufficient master's or doctoral degrees to fall into those categories.	\N	\N	\N	\N	2023-11-08 13:57:40.722538	2023-11-08 13:57:40.721547	1a5377e2-a9cf-4f08-a358-da50eeabc363	2968
2971	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Four-Year	Special Focus Institution/Four-Year	Four-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	\N	2023-11-08 13:57:40.732042	2023-11-08 13:57:40.732011	6caeaac7-5b75-4291-909c-865209cb1ba9	2971
2974	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	\N	\N	\N	\N	2023-11-08 13:57:40.737636	2023-11-08 13:57:40.737608	6f9816d2-d75a-4121-98e4-5bd13057e782	2974
2978	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Unsheltered	Unsheltered	Unsheltered	\N	\N	\N	\N	2023-11-08 13:57:40.773829	2023-11-08 13:57:40.772793	2c3fa28f-a86a-4eb0-9f6d-f93a60b78908	2978
2984	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Fill-in-the-blank	Fill-in-the-blank	Fill-in-the-blank	\N	\N	\N	\N	2023-11-08 13:57:40.812328	2023-11-08 13:57:40.811371	6edd731c-7dc4-49e5-a17f-bc437e679f00	2984
2987	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Labeling	Labeling	Labeling	\N	\N	\N	\N	2023-11-08 13:57:40.821903	2023-11-08 13:57:40.821856	4199ec46-69a3-4f5c-8df9-cd57b6aba352	2987
2991	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other constructed response	Other constructed response	Other constructed response	\N	\N	\N	\N	2023-11-08 13:57:40.831105	2023-11-08 13:57:40.83107	5fccfa79-f672-4030-80ec-6d0c82ba02a7	2991
2995	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Prose	Prose	Prose	\N	\N	\N	\N	2023-11-08 13:57:40.841091	2023-11-08 13:57:40.840191	eeb5e917-93e8-4713-b2f6-a26e9441f07c	2995
3006	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	\N	2023-11-08 13:57:40.887425	2023-11-08 13:57:40.886443	59a1e233-6487-4100-a484-f70b89b1860c	3006
3009	uri://ed-fi.org/AttemptStatusDescriptor	Audited	Audited	Audited	\N	\N	\N	\N	2023-11-08 13:57:40.896597	2023-11-08 13:57:40.896282	150a28bd-ef6b-473f-8750-99271bfb3ce2	3009
3012	uri://ed-fi.org/AttemptStatusDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	\N	2023-11-08 13:57:40.903361	2023-11-08 13:57:40.90334	edfffa25-aa6e-4e3f-a531-f522b2f16194	3012
3013	uri://ed-fi.org/AttemptStatusDescriptor	Reached maximum age	DEPRECATED: Reached maximum age	DEPRECATED: Reached maximum age	\N	\N	\N	\N	2023-11-08 13:57:40.906853	2023-11-08 13:57:40.906815	95d2c6ec-8104-4f57-8a2b-e99004341e5f	3013
3021	uri://ed-fi.org/SchoolChoiceBasisDescriptor	State	State	State	\N	\N	\N	\N	2023-11-08 13:57:40.949787	2023-11-08 13:57:40.9488	76dd53d3-751e-481d-bb83-f1e1fabe6c90	3021
3026	uri://ed-fi.org/ReportingTagDescriptor	CMO	Charter Management Organization	Charter Management Organization	\N	\N	\N	\N	2023-11-08 13:57:40.990927	2023-11-08 13:57:40.989547	3c8afb13-f878-4e54-8375-eb31b9f416f5	3026
3028	uri://ed-fi.org/ReportingTagDescriptor	SEA	State Education Agency	State Education Agency	\N	\N	\N	\N	2023-11-08 13:57:41.000334	2023-11-08 13:57:41.000262	9eb70844-8009-45f1-9ff3-f145f51f8abb	3028
3030	uri://ed-fi.org/DisciplineDescriptor	In School Suspension	In School Suspension	In School Suspension	\N	\N	\N	\N	2023-11-08 13:57:41.031088	2023-11-08 13:57:41.02989	6cffe1c3-16cb-4247-956f-ef6537cf20f8	3030
2927	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Breakfast	Free Breakfast	Free Breakfast	\N	\N	\N	\N	2023-11-08 13:57:40.5601	2023-11-08 13:57:40.558805	b4a5120e-4c12-4262-9a62-f1d0e6390012	2927
2933	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Breakfast	Full Price Breakfast	Full Price Breakfast	\N	\N	\N	\N	2023-11-08 13:57:40.569638	2023-11-08 13:57:40.56961	8145542b-42e8-4df1-bbd8-68c2d36a2b1c	2933
2936	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Lunch	Reduced Price Lunch	Reduced Price Lunch	\N	\N	\N	\N	2023-11-08 13:57:40.576767	2023-11-08 13:57:40.576751	cf3b47f9-20fc-47ea-830a-424888ad396f	2936
2943	uri://ed-fi.org/AcademicSubjectDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	\N	2023-11-08 13:57:40.616496	2023-11-08 13:57:40.615337	d9d810a9-ec78-47ac-9c51-73cdd9024a3c	2943
2946	uri://ed-fi.org/AcademicSubjectDescriptor	Fine and Performing Arts	Fine and Performing Arts	Fine and Performing Arts	\N	\N	\N	\N	2023-11-08 13:57:40.625093	2023-11-08 13:57:40.625068	845fd561-b62d-44ea-8519-c7748bb6ca97	2946
2949	uri://ed-fi.org/AcademicSubjectDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	\N	2023-11-08 13:57:40.631951	2023-11-08 13:57:40.631912	ba66253e-ec41-4812-8a2d-31a69e109966	2949
2955	uri://ed-fi.org/AcademicSubjectDescriptor	Reading	Reading	Reading	\N	\N	\N	\N	2023-11-08 13:57:40.640342	2023-11-08 13:57:40.640247	6b52a6fe-1d57-4559-af49-7552377c1ed8	2955
2956	uri://ed-fi.org/AcademicSubjectDescriptor	Science	Science	Science	\N	\N	\N	\N	2023-11-08 13:57:40.644727	2023-11-08 13:57:40.644692	ebbf331d-525f-4b92-8390-4caa5b6e2118	2956
2959	uri://ed-fi.org/AcademicSubjectDescriptor	Social Sciences and History	Social Sciences and History	Social Sciences and History	\N	\N	\N	\N	2023-11-08 13:57:40.653945	2023-11-08 13:57:40.653886	6584bb83-ebf2-464e-ba22-63821c61c3e2	2959
2962	uri://ed-fi.org/AssessmentItemResultDescriptor	Above Standard	Above Standard	Above Standard	\N	\N	\N	\N	2023-11-08 13:57:40.681745	2023-11-08 13:57:40.680581	11aa17f9-922d-4714-9806-c6715d5e2c6c	2962
2964	uri://ed-fi.org/AssessmentItemResultDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	\N	2023-11-08 13:57:40.690875	2023-11-08 13:57:40.690833	67db4eb1-4919-485d-a9b6-fded49281d2e	2964
2966	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate College	Baccalaureate College	Includes institutions where baccalaureate or higher degrees represent at least 50 percent of all degrees but where fewer than 50 master's degrees or 20 doctoral degrees were awarded during the update year. (Some institutions above the master's degree threshold are also included.) Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-11-08 13:57:40.722559	2023-11-08 13:57:40.721573	212eee71-a179-476d-b951-3900be43757f	2967
2970	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Two-Year	Special Focus Institution/Two-Year	Two-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	\N	2023-11-08 13:57:40.731794	2023-11-08 13:57:40.731776	21ed693e-2c53-4922-832e-888ea61e55b0	2970
2977	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Doubled-up	Doubled-up	Doubled-up	\N	\N	\N	\N	2023-11-08 13:57:40.773777	2023-11-08 13:57:40.772768	eb60c34e-b58b-4178-a072-94077f1326e2	2977
2981	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Innovative	Innovative	Innovative	\N	\N	\N	\N	2023-11-08 13:57:40.812338	2023-11-08 13:57:40.811365	f021a9d9-c2ad-4b38-bf50-790e51260bd4	2981
2985	uri://ed-fi.org/AssessmentItemCategoryDescriptor	List Question	List Question	List Question	\N	\N	\N	\N	2023-11-08 13:57:40.820771	2023-11-08 13:57:40.82071	945200f5-a7cd-4d7b-b9d2-71587f42e5c6	2985
2992	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice multi-select	Multiple-choice multi-select	Multiple-choice multi-select	\N	\N	\N	\N	2023-11-08 13:57:40.832656	2023-11-08 13:57:40.832265	96e7ce92-2a44-4bcd-81e2-9d30e7b94870	2992
2994	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Performance task	Performance task	Performance task	\N	\N	\N	\N	2023-11-08 13:57:40.836397	2023-11-08 13:57:40.836371	07f7d9ae-3063-4eb9-acce-de08f524933a	2994
2996	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Reordering	Reordering	Reordering	\N	\N	\N	\N	2023-11-08 13:57:40.841393	2023-11-08 13:57:40.841258	6478dea0-1054-429e-b715-b451b74565df	2996
3002	uri://ed-fi.org/AssessmentItemCategoryDescriptor	True-False	True-False	True-False	\N	\N	\N	\N	2023-11-08 13:57:40.853043	2023-11-08 13:57:40.853004	1463e259-7889-4dd9-b002-b0c2ac55ef4f	3002
3003	uri://ed-fi.org/AttemptStatusDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-11-08 13:57:40.887413	2023-11-08 13:57:40.88645	5fe3112f-657c-4a0e-ac08-8f0a9c174fe7	3003
3007	uri://ed-fi.org/AttemptStatusDescriptor	Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	\N	\N	\N	\N	2023-11-08 13:57:40.895627	2023-11-08 13:57:40.895611	66519751-1046-41ad-b842-da43496f7a1e	3007
3011	uri://ed-fi.org/AttemptStatusDescriptor	Moved out of state	DEPRECATED: Moved out of state	DEPRECATED: Moved out of state	\N	\N	\N	\N	2023-11-08 13:57:40.901392	2023-11-08 13:57:40.901299	35131fa7-c1fd-414e-82f0-f989e68b59ad	3011
3014	uri://ed-fi.org/AttemptStatusDescriptor	Received certificate of completion or equivalent	DEPRECATED: Received completion certificate, modified diploma, or met IEP r	DEPRECATED: Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	\N	2023-11-08 13:57:40.907486	2023-11-08 13:57:40.907471	e4394e99-6a4a-4b43-907f-4d39b675ebc3	3014
3017	uri://ed-fi.org/AttemptStatusDescriptor	Unknown reason	DEPRECATED: Unknown reason	DEPRECATED: Unknown reason	\N	\N	\N	\N	2023-11-08 13:57:40.912501	2023-11-08 13:57:40.912396	9e199bfc-7763-491c-bee2-3e3936dcd2bd	3017
3018	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	\N	\N	\N	\N	2023-11-08 13:57:40.91534	2023-11-08 13:57:40.915292	2e6ac608-1f0b-4edb-906d-dd250e8870af	3018
3022	uri://ed-fi.org/SchoolChoiceBasisDescriptor	Local	Local	Local	\N	\N	\N	\N	2023-11-08 13:57:40.949825	2023-11-08 13:57:40.948805	84d7c1a0-2d78-4603-bb82-b3419f6df75f	3022
3024	uri://ed-fi.org/ReportingTagDescriptor	ESSA	Every Student Succeeds Act	Every Student Succeeds Act	\N	\N	\N	\N	2023-11-08 13:57:40.990563	2023-11-08 13:57:40.989525	bd8e3d24-06bc-4af1-bb1a-f76507155b51	3024
3031	uri://ed-fi.org/DisciplineDescriptor	Expulsion	Expulsion	Expulsion	\N	\N	\N	\N	2023-11-08 13:57:41.030923	2023-11-08 13:57:41.029866	018c691a-02d4-41b8-8b72-bc81e920ff69	3031
3041	uri://ed-fi.org/ClassroomPositionDescriptor	Substitute Teacher	Substitute Teacher	Substitute Teacher	\N	\N	\N	\N	2023-11-08 13:57:41.081965	2023-11-08 13:57:41.080995	7a83d744-9acf-4e49-aca7-9aea8df7fdc8	3041
2942	uri://ed-fi.org/AcademicSubjectDescriptor	Composite	Composite	Composite	\N	\N	\N	\N	2023-11-08 13:57:40.616265	2023-11-08 13:57:40.61531	48ac7c47-14bb-4eea-b611-239cb5db6c29	2942
2948	uri://ed-fi.org/AcademicSubjectDescriptor	Foreign Language and Literature	Foreign Language and Literature	Foreign Language and Literature	\N	\N	\N	\N	2023-11-08 13:57:40.626241	2023-11-08 13:57:40.626229	d548f3fe-0b7a-48b3-a586-9b6827f5d06f	2948
2950	uri://ed-fi.org/AcademicSubjectDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	\N	2023-11-08 13:57:40.632573	2023-11-08 13:57:40.63256	9a00465e-bbb0-4f8d-b1cb-37313b5bd832	2950
2953	uri://ed-fi.org/AcademicSubjectDescriptor	Military Science	Military Science	Military Science	\N	\N	\N	\N	2023-11-08 13:57:40.638514	2023-11-08 13:57:40.638434	83da6f4d-b96c-46f1-8f27-8491a620d034	2953
2963	uri://ed-fi.org/AssessmentItemResultDescriptor	Correct	Correct	Correct	\N	\N	\N	\N	2023-11-08 13:57:40.681734	2023-11-08 13:57:40.680607	e78e23e0-1068-42cc-83f7-f1283d152b2b	2963
2965	uri://ed-fi.org/AssessmentItemResultDescriptor	Partially Correct	Partially Correct	Partially Correct	\N	\N	\N	\N	2023-11-08 13:57:40.690926	2023-11-08 13:57:40.690899	97242a79-b31a-40e7-92ce-37a7e3b1fa03	2965
2969	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Master's College or University	Master's College or University	Generally includes institutions that awarded at least 50 master's degrees and fewer than 20 doctoral degrees during the update year (with occasional exceptions). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	\N	2023-11-08 13:57:40.722555	2023-11-08 13:57:40.721579	90d52429-b211-4361-a8e0-64c3daafb7c3	2969
2972	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Tribal College	Tribal College	Colleges and universities that are members of the American Indian Higher Education Consortium, as identified in IPEDS Institutional Characteristics.	\N	\N	\N	\N	2023-11-08 13:57:40.732456	2023-11-08 13:57:40.73232	ffceb955-79b8-4dfd-b98a-e4b0efc2f7d3	2972
2975	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Four or more years	DEPRECATED: Four or more years	DEPRECATED: Four or more years	\N	\N	\N	\N	2023-11-08 13:57:40.737736	2023-11-08 13:57:40.737711	bf7e150b-6e5b-4524-93cd-6cfac8afbec4	2975
2980	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Hotels/motels	Hotels/motels	Hotels/motels	\N	\N	\N	\N	2023-11-08 13:57:40.773958	2023-11-08 13:57:40.772761	cf2c029a-72e1-4bae-917c-944f94c51993	2980
2983	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Analytic	Analytic	Analytic	\N	\N	\N	\N	2023-11-08 13:57:40.812336	2023-11-08 13:57:40.811349	a2bd898f-e8de-404d-98c4-f39a3d1089ea	2983
2986	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Math Matrix	Math Matrix	Math Matrix	\N	\N	\N	\N	2023-11-08 13:57:40.821101	2023-11-08 13:57:40.821073	169bd2e6-835b-4f92-8fad-e33eb959a4a5	2986
2990	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:40.8303	2023-11-08 13:57:40.830208	b1731539-4f58-4cf3-b34a-04c431e4d4fe	2990
2997	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Rubric	Rubric	Rubric	\N	\N	\N	\N	2023-11-08 13:57:40.841841	2023-11-08 13:57:40.841709	09d88e04-377b-45f5-8670-102653a47b19	2997
2999	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Show your work	Show your work	Show your work	\N	\N	\N	\N	2023-11-08 13:57:40.84768	2023-11-08 13:57:40.847667	de3c9b53-78ed-4b10-8b18-d2b40eb7427a	2999
3005	uri://ed-fi.org/AttemptStatusDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-11-08 13:57:40.887418	2023-11-08 13:57:40.886475	122c3cfc-02b4-4863-9def-bee24b2e3d1c	3005
3008	uri://ed-fi.org/AttemptStatusDescriptor	Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	\N	\N	\N	\N	2023-11-08 13:57:40.89657	2023-11-08 13:57:40.896544	bfc78395-60f2-45c5-a843-8d94a30084a1	3008
3015	uri://ed-fi.org/AttemptStatusDescriptor	Transferred to another district or school	DEPRECATED: Transferred to another district or school	DEPRECATED: Transferred to another district or school	\N	\N	\N	\N	2023-11-08 13:57:40.908731	2023-11-08 13:57:40.908674	802d741b-d1f1-4b3e-b075-eb42e18284bc	3015
3019	uri://ed-fi.org/SchoolChoiceBasisDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-11-08 13:57:40.949795	2023-11-08 13:57:40.948786	191fe73b-70de-4c38-bd91-f10adc486426	3019
3023	uri://ed-fi.org/SchoolChoiceBasisDescriptor	Victim of a Violent Felony	Victim of a Violent Felony	Victim of a Violent Felony	\N	\N	\N	\N	2023-11-08 13:57:40.958089	2023-11-08 13:57:40.958027	228441e3-e062-4de6-8e64-1a90520c5bbb	3023
3027	uri://ed-fi.org/ReportingTagDescriptor	LEA	Local Education Agency	Local Education Agency	\N	\N	\N	\N	2023-11-08 13:57:40.990682	2023-11-08 13:57:40.989555	33fdc4bd-1173-451f-8a4b-eb5614455e0a	3027
3032	uri://ed-fi.org/DisciplineDescriptor	Out of School Suspension	Out of School Suspension	Out of School Suspension	\N	\N	\N	\N	2023-11-08 13:57:41.030923	2023-11-08 13:57:41.029894	50166341-7f91-4aa0-8be9-6bf47f1a1709	3032
3033	uri://ed-fi.org/DisciplineDescriptor	Expulsion with Services	Expulsion with Services	Expulsion with Services	\N	\N	\N	\N	2023-11-08 13:57:41.040052	2023-11-08 13:57:41.040017	4e2f4613-1896-4479-9223-301ba18a9e68	3033
3037	uri://ed-fi.org/DisciplineDescriptor	No action for incident	No action for incident	No action for incident	\N	\N	\N	\N	2023-11-08 13:57:41.04613	2023-11-08 13:57:41.046064	cb5f71b5-10fe-4e8e-9dd2-f57d8c8dc885	3037
3039	uri://ed-fi.org/ClassroomPositionDescriptor	Teacher of Record	Teacher of Record	Teacher of Record	\N	\N	\N	\N	2023-11-08 13:57:41.081973	2023-11-08 13:57:41.080978	199933e2-ad17-495a-991e-2806077ce577	3039
3043	uri://ed-fi.org/InternetAccessDescriptor	DSL	DSL	DSL	\N	\N	\N	\N	2023-11-08 13:57:41.121009	2023-11-08 13:57:41.12004	8e4577dc-ee95-4ade-a1b8-1d3be4e45c86	3043
3048	uri://ed-fi.org/InternetAccessDescriptor	None	None	None	\N	\N	\N	\N	2023-11-08 13:57:41.131281	2023-11-08 13:57:41.131199	6cc6048c-45f6-4667-9ca7-725948382c45	3048
3053	uri://ed-fi.org/InternetAccessDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-11-08 13:57:41.138605	2023-11-08 13:57:41.138579	c3d58ded-b04a-4214-9e5d-a34092517b2b	3053
3055	uri://ed-fi.org/InternetAccessDescriptor	Less Than High Speed	DEPRECATED: Less Than High Speed	DEPRECATED: Less Than High Speed	\N	\N	\N	\N	2023-11-08 13:57:41.145244	2023-11-08 13:57:41.145217	1dde2e74-d367-4094-b465-cee7f8e962c1	3055
3058	uri://ed-fi.org/LevelOfEducationDescriptor	Doctorate	Doctorate	Doctorate	\N	\N	\N	\N	2023-11-08 13:57:41.177013	2023-11-08 13:57:41.175814	e6bfb4ea-4425-48d7-9ed8-21ce0a6eae54	3058
3060	uri://ed-fi.org/LevelOfEducationDescriptor	Some College No Degree	Some College No Degree	Some College No Degree	\N	\N	\N	\N	2023-11-08 13:57:41.185346	2023-11-08 13:57:41.18531	c598e2f3-6212-457f-875f-4db274f07e61	3060
3066	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Dropout	Dropout	Dropout	\N	\N	\N	\N	2023-11-08 13:57:41.215375	2023-11-08 13:57:41.214186	b1eb1b73-c876-46f9-b156-8c724903e7f2	3066
3001	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Visual representation	Visual representation	Visual representation	\N	\N	\N	\N	2023-11-08 13:57:40.851935	2023-11-08 13:57:40.851908	e0039f4b-4158-4445-9448-198781ac9778	3001
3004	uri://ed-fi.org/AttemptStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	\N	2023-11-08 13:57:40.887499	2023-11-08 13:57:40.886467	309ea305-8213-43a2-bba5-d09567ce19a6	3004
3010	uri://ed-fi.org/AttemptStatusDescriptor	Discontinued schooling	DEPRECATED: Discontinued schooling	DEPRECATED: Discontinued schooling	\N	\N	\N	\N	2023-11-08 13:57:40.896624	2023-11-08 13:57:40.896591	2cf563f8-ca1a-4437-b2b9-b96671d77fdb	3010
3016	uri://ed-fi.org/AttemptStatusDescriptor	Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	\N	\N	\N	\N	2023-11-08 13:57:40.909372	2023-11-08 13:57:40.909253	c9f1a5b8-3101-4da6-b3a1-1d9e6fc1a0ac	3016
3020	uri://ed-fi.org/SchoolChoiceBasisDescriptor	NCLB choice	NCLB choice	NCLB choice	\N	\N	\N	\N	2023-11-08 13:57:40.94983	2023-11-08 13:57:40.948794	1a8b885d-5132-4a75-a59d-120f6c7b60fa	3020
3025	uri://ed-fi.org/ReportingTagDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-11-08 13:57:40.990571	2023-11-08 13:57:40.98953	53acdc24-21d6-4a71-9783-54e02ee517d0	3025
3029	uri://ed-fi.org/DisciplineDescriptor	Removal from Classroom	Removal from Classroom	Removal from Classroom	\N	\N	\N	\N	2023-11-08 13:57:41.030887	2023-11-08 13:57:41.029872	dbad643a-0288-4e87-9b7c-6db26bccd4ae	3029
3035	uri://ed-fi.org/DisciplineDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:41.040226	2023-11-08 13:57:41.040207	9bdfd39d-838e-49f0-a445-7146f3657a5b	3035
3036	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	\N	\N	\N	\N	2023-11-08 13:57:41.045915	2023-11-08 13:57:41.045887	bb2302a4-4dd9-44ee-9053-bf1eb52694aa	3036
3042	uri://ed-fi.org/ClassroomPositionDescriptor	Assistant Teacher	Assistant Teacher	Assistant Teacher	\N	\N	\N	\N	2023-11-08 13:57:41.081988	2023-11-08 13:57:41.081012	f0ecf162-9a7a-443c-897f-7b304ef678d9	3042
3044	uri://ed-fi.org/InternetAccessDescriptor	Fiber	Fiber	Fiber	\N	\N	\N	\N	2023-11-08 13:57:41.121142	2023-11-08 13:57:41.12002	d7059b2c-61fe-4c42-a472-957b788cc3d1	3045
3047	uri://ed-fi.org/InternetAccessDescriptor	Personal hotspot/smartphone	Personal hotspot/smartphone	Personal hotspot/smartphone	\N	\N	\N	\N	2023-11-08 13:57:41.130854	2023-11-08 13:57:41.130812	ced7cd85-2690-49ef-ae5f-ec540149c247	3047
3052	uri://ed-fi.org/InternetAccessDescriptor	School-provided hotspot	School-provided hotspot	School-provided hotspot	\N	\N	\N	\N	2023-11-08 13:57:41.13833	2023-11-08 13:57:41.138293	ab921493-9c38-4e8a-982c-024e03efec9a	3052
3056	uri://ed-fi.org/LevelOfEducationDescriptor	Associate's Degree (two years or more)	Associate's Degree (two years or more)	Associate's Degree (two years or more)	\N	\N	\N	\N	2023-11-08 13:57:41.17679	2023-11-08 13:57:41.17582	0a7e26f0-ef62-4616-b1d9-e21a87ee191b	3056
3064	uri://ed-fi.org/ExitWithdrawTypeDescriptor	End of school year	End of school year	End of school year	\N	\N	\N	\N	2023-11-08 13:57:41.215335	2023-11-08 13:57:41.214176	ca106607-f94b-4924-9dee-39f04181deb2	3064
3070	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Incarcerated	Incarcerated	Incarcerated	\N	\N	\N	\N	2023-11-08 13:57:41.22476	2023-11-08 13:57:41.224718	61d27c03-1961-4bed-9a53-978a13a9ac76	3070
3074	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:41.233938	2023-11-08 13:57:41.233925	c21d8af6-c2e1-405a-ae13-94dab8cc672f	3074
3075	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	\N	2023-11-08 13:57:41.237774	2023-11-08 13:57:41.23774	f9b46cf6-0b1b-4e15-869f-28b468fea436	3075
3078	uri://ed-fi.org/ProviderCategoryDescriptor	Care in your own home	Care in your own home	Care in your own home	\N	\N	\N	\N	2023-11-08 13:57:41.276202	2023-11-08 13:57:41.275209	1284a31a-194f-4298-bc81-ffec514f919f	3079
3083	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home - large	Family child care home - large	Family child care home - large	\N	\N	\N	\N	2023-11-08 13:57:41.286022	2023-11-08 13:57:41.286009	4c3268de-086b-401e-b8c8-d0f946d4d9de	3083
3088	uri://ed-fi.org/ProviderCategoryDescriptor	Resident camps	Resident camps	Resident camps	\N	\N	\N	\N	2023-11-08 13:57:41.294378	2023-11-08 13:57:41.294337	46bb62aa-59c3-436d-86cb-246ab9d8051a	3088
3091	uri://ed-fi.org/ProviderCategoryDescriptor	School-based child care	School-based child care	School-based child care	\N	\N	\N	\N	2023-11-08 13:57:41.301759	2023-11-08 13:57:41.301573	462130d9-7f5b-4e7d-a4d7-b1846baa0c20	3091
3094	uri://ed-fi.org/ProviderCategoryDescriptor	Center-SA Only	DEPRECATED: Center-SA Only	DEPRECATED: Center-SA Only	\N	\N	\N	\N	2023-11-08 13:57:41.30768	2023-11-08 13:57:41.307668	083bd1a2-f806-4a4e-bd65-ba3626f4fd8b	3094
3098	uri://ed-fi.org/ProviderCategoryDescriptor	Not Applicable	DEPRECATED: Not Applicable	DEPRECATED: Not Applicable	\N	\N	\N	\N	2023-11-08 13:57:41.314468	2023-11-08 13:57:41.314441	0dd0a228-6a17-42bf-8277-f8264cd88a49	3098
3102	uri://ed-fi.org/CredentialTypeDescriptor	Endorsement	Endorsement	Endorsement	\N	\N	\N	\N	2023-11-08 13:57:41.350036	2023-11-08 13:57:41.348257	32205487-c5bd-4ea9-8e72-67880f77a5e7	3102
3106	uri://ed-fi.org/GradeTypeDescriptor	Grading Period	Grading Period	Grading Period	\N	\N	\N	\N	2023-11-08 13:57:41.38956	2023-11-08 13:57:41.388434	15850169-e09e-461a-8304-95df9b108dc6	3106
3113	uri://ed-fi.org/AccommodationDescriptor	English language learner accommodation	English language learner accommodation	English language learner accommodation	\N	\N	\N	\N	2023-11-08 13:57:41.440563	2023-11-08 13:57:41.439137	4f5f9e42-66b3-4a7d-a975-69e7be0eeb72	3113
3116	uri://ed-fi.org/AccommodationDescriptor	Test material accommodation	Test material accommodation	Test material accommodation	\N	\N	\N	\N	2023-11-08 13:57:41.450066	2023-11-08 13:57:41.450052	faac28b7-032c-4b8c-8ceb-78a9fcb9f380	3116
3121	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	\N	2023-11-08 13:57:41.489718	2023-11-08 13:57:41.488495	f24e8df2-ad57-4176-a97a-26bae2dd3a02	3121
3126	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	\N	2023-11-08 13:57:41.498884	2023-11-08 13:57:41.498855	ad5b8075-6b35-48b6-b258-f70865ec98a7	3126
3130	uri://ed-fi.org/StaffIdentificationSystemDescriptor	PIN	PIN	PIN	\N	\N	\N	\N	2023-11-08 13:57:41.506596	2023-11-08 13:57:41.506563	50b00956-6236-4f02-910d-b49be33a38c9	3130
3138	uri://ed-fi.org/DisabilityDescriptor	Autism Spectrum Disorders	Autism Spectrum Disorders	Autism Spectrum Disorders	\N	\N	\N	\N	2023-11-08 13:57:41.551744	2023-11-08 13:57:41.550507	91fdae55-7860-49c0-846c-a5c8ef10ec4d	3138
3038	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	\N	\N	\N	\N	2023-11-08 13:57:41.046069	2023-11-08 13:57:41.045924	da0278a8-0558-4d45-b932-92d5a5471d7a	3038
3040	uri://ed-fi.org/ClassroomPositionDescriptor	Support Teacher	Support Teacher	Support Teacher	\N	\N	\N	\N	2023-11-08 13:57:41.081996	2023-11-08 13:57:41.080985	19661884-4b83-417b-909a-1e09cc47ddce	3040
3045	uri://ed-fi.org/InternetAccessDescriptor	Dial-up	Dial-up	Dial-up	\N	\N	\N	\N	2023-11-08 13:57:41.121137	2023-11-08 13:57:41.120034	01298325-b664-47ec-8f3a-88c5638e2783	3044
3050	uri://ed-fi.org/InternetAccessDescriptor	Microwave	Microwave	Microwave	\N	\N	\N	\N	2023-11-08 13:57:41.131488	2023-11-08 13:57:41.131466	01dbf9b3-d9f0-45de-89fb-eb6ab692cc5a	3050
3054	uri://ed-fi.org/InternetAccessDescriptor	High Speed	DEPRECATED: High Speed	DEPRECATED: High Speed	\N	\N	\N	\N	2023-11-08 13:57:41.139974	2023-11-08 13:57:41.139938	9cbb56c2-ae3e-4d7b-ba75-d5df83f9fd7b	3054
3059	uri://ed-fi.org/LevelOfEducationDescriptor	Bachelor's	Bachelor's	Bachelor's	\N	\N	\N	\N	2023-11-08 13:57:41.176781	2023-11-08 13:57:41.175787	5006c283-bd97-4fbb-b33e-8b29d5d62ff5	3059
3061	uri://ed-fi.org/LevelOfEducationDescriptor	Master's	Master's	Master's	\N	\N	\N	\N	2023-11-08 13:57:41.185306	2023-11-08 13:57:41.185277	e4db663c-d66e-4802-9a28-975088fd6018	3061
3065	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	\N	2023-11-08 13:57:41.215445	2023-11-08 13:57:41.214209	cc55b60a-52b0-4b0e-92d5-1013a8905099	3065
3069	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Expelled	Expelled	Expelled	\N	\N	\N	\N	2023-11-08 13:57:41.224033	2023-11-08 13:57:41.224004	ccce9b76-9a42-4c52-be33-e881536b6660	3069
3071	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Involuntarily Removed	Involuntarily Removed	Involuntarily Removed	\N	\N	\N	\N	2023-11-08 13:57:41.230798	2023-11-08 13:57:41.230659	f93dbd5b-e98c-4c69-ad8d-8aa48705c425	3071
3080	uri://ed-fi.org/ProviderCategoryDescriptor	Community care	Community care	Community care	\N	\N	\N	\N	2023-11-08 13:57:41.276167	2023-11-08 13:57:41.275201	0ad03a2f-27af-4bc5-a503-1ac91b6a974e	3080
3086	uri://ed-fi.org/ProviderCategoryDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:41.290966	2023-11-08 13:57:41.290939	5b8646cd-142c-449f-9adf-9c21f82fec64	3086
3089	uri://ed-fi.org/ProviderCategoryDescriptor	Residential treatment care	Residential treatment care	Residential treatment care	\N	\N	\N	\N	2023-11-08 13:57:41.296844	2023-11-08 13:57:41.296793	5644862f-6d70-4958-bc64-ffdac4433d90	3089
3092	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC with SA	DEPRECATED: Center-EC with SA	DEPRECATED: Center-EC with SA	\N	\N	\N	\N	2023-11-08 13:57:41.304113	2023-11-08 13:57:41.304072	2c41bfb8-52ea-4bb1-bf19-fc38593e572d	3092
3096	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	\N	\N	\N	\N	2023-11-08 13:57:41.311156	2023-11-08 13:57:41.31111	ec788b83-e280-428d-be05-992bd0d01864	3096
3099	uri://ed-fi.org/CredentialTypeDescriptor	Licensure	Licensure	Licensure	\N	\N	\N	\N	2023-11-08 13:57:41.349243	2023-11-08 13:57:41.348227	0ea9d1b5-54af-427d-ad15-945e9496529f	3099
3105	uri://ed-fi.org/GradeTypeDescriptor	Final	Final	Final	\N	\N	\N	\N	2023-11-08 13:57:41.389842	2023-11-08 13:57:41.388466	c4d84c63-74c9-44d8-941d-58022a8e28b5	3105
3108	uri://ed-fi.org/GradeTypeDescriptor	Progress Report	Progress Report	Progress Report	\N	\N	\N	\N	2023-11-08 13:57:41.402319	2023-11-08 13:57:41.402236	a241bfcd-56b5-4833-a0d3-0ba5cfc3e685	3108
3111	uri://ed-fi.org/AccommodationDescriptor	504 accommodation	504 accommodation	504 accommodation	\N	\N	\N	\N	2023-11-08 13:57:41.440124	2023-11-08 13:57:41.439132	7a5962ad-e117-4dea-9c70-e7dda91b9466	3111
3117	uri://ed-fi.org/AccommodationDescriptor	Student equipment/technology accommodation	Student equipment/technology	Student equipment/technology	\N	\N	\N	\N	2023-11-08 13:57:41.450435	2023-11-08 13:57:41.4503	2ec46034-95b1-4c51-aeee-f21f390f57be	3117
3122	uri://ed-fi.org/StaffIdentificationSystemDescriptor	District	District	District	\N	\N	\N	\N	2023-11-08 13:57:41.4896	2023-11-08 13:57:41.488471	f3197b60-fcbb-478d-ae3f-46340ab93433	3122
3124	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Medicaid	Medicaid	Medicaid	\N	\N	\N	\N	2023-11-08 13:57:41.498507	2023-11-08 13:57:41.498479	661c7697-7b64-4ac0-ae11-408a7b54782d	3124
3128	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Professional Certificate	Professional Certificate	Professional Certificate	\N	\N	\N	\N	2023-11-08 13:57:41.505833	2023-11-08 13:57:41.505786	2b28f5e1-b917-40c4-b611-cbbbe2c55063	3128
3132	uri://ed-fi.org/StaffIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	\N	2023-11-08 13:57:41.511895	2023-11-08 13:57:41.511868	1583741d-f62f-4c78-afe0-1c596656d88c	3132
3135	uri://ed-fi.org/DisabilityDescriptor	Intellectual Disability	Intellectual Disability	Intellectual Disability	\N	\N	\N	\N	2023-11-08 13:57:41.551604	2023-11-08 13:57:41.550481	3251e273-536e-4233-af0a-312d673e13ee	3135
3147	uri://ed-fi.org/DisabilityDescriptor	Physical Disability	Physical Disability	Physical Disability	\N	\N	\N	\N	2023-11-08 13:57:41.574076	2023-11-08 13:57:41.574031	6e1d7bfe-031d-45fa-9b7a-0562bf2a9ba3	3147
3152	uri://ed-fi.org/DisabilityDescriptor	Speech or Language Impairment	Speech or Language Impairment	Speech or Language Impairment	\N	\N	\N	\N	2023-11-08 13:57:41.583043	2023-11-08 13:57:41.582714	de8b88d2-3c62-4444-bc62-bee9fe195427	3152
3154	uri://ed-fi.org/DisabilityDescriptor	Specific Learning Disability	Specific Learning Disability	Specific Learning Disability	\N	\N	\N	\N	2023-11-08 13:57:41.595516	2023-11-08 13:57:41.595473	699cff87-b65b-461c-84fb-cc07119c363b	3154
3155	uri://ed-fi.org/FinancialCollectionDescriptor	31 to 45 days	31 to 45 days	31 to 45 days	\N	\N	\N	\N	2023-11-08 13:57:41.624836	2023-11-08 13:57:41.623808	a4e38b95-e76d-4900-b554-589b5741b9d1	3155
3159	uri://ed-fi.org/FinancialCollectionDescriptor	76 to 90 days	76 to 90 days	76 to 90 days	\N	\N	\N	\N	2023-11-08 13:57:41.634184	2023-11-08 13:57:41.634152	1ac0d6e5-e251-449c-843c-c3cd3b6bf125	3159
3162	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Mostly equivalent	Mostly equivalent	Mostly equivalent	\N	\N	\N	\N	2023-11-08 13:57:41.669625	2023-11-08 13:57:41.668577	6996d784-c720-4494-9b47-01c0c9b6fae6	3162
3165	uri://ed-fi.org/GradingPeriodDescriptor	First Summer Session	First Summer Session	First Summer Session	\N	\N	\N	\N	2023-11-08 13:57:41.710218	2023-11-08 13:57:41.709031	0d9dba65-67af-4564-a15a-d57739da5147	3165
3173	uri://ed-fi.org/GradingPeriodDescriptor	First Nine Weeks	First Nine Weeks	First Nine Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.723564	2023-11-08 13:57:41.723539	249b6de5-c44c-4d2e-83d3-6848c57224b1	3173
3051	uri://ed-fi.org/InternetAccessDescriptor	Satellite	Satellite	Satellite	\N	\N	\N	\N	2023-11-08 13:57:41.137406	2023-11-08 13:57:41.137365	79048704-7d35-4ad1-a32e-4130fcdc9634	3051
3057	uri://ed-fi.org/LevelOfEducationDescriptor	Did Not Graduate High School	Did Not Graduate High School	Did Not Graduate High School	\N	\N	\N	\N	2023-11-08 13:57:41.176911	2023-11-08 13:57:41.175795	7acd36d6-cf6b-4ae1-81db-933c9b9fa476	3057
3062	uri://ed-fi.org/LevelOfEducationDescriptor	High School Diploma	High School Diploma	High School Diploma	\N	\N	\N	\N	2023-11-08 13:57:41.187192	2023-11-08 13:57:41.187165	a545fb66-d6a5-4441-8f2f-203ed03a32bb	3062
3063	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-11-08 13:57:41.215144	2023-11-08 13:57:41.214194	947aa73c-b7f1-4343-9e1a-769e666524b7	3063
3067	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Enrolled in a high school diploma program	Enrolled in a high school diploma program	Enrolled in a high school diploma program	\N	\N	\N	\N	2023-11-08 13:57:41.224072	2023-11-08 13:57:41.224037	fa0896f7-3ce6-4312-bda5-30227d7f06a1	3067
3072	uri://ed-fi.org/ExitWithdrawTypeDescriptor	No show	No show	No show	\N	\N	\N	\N	2023-11-08 13:57:41.232222	2023-11-08 13:57:41.232195	9a885645-b902-4a4c-afd8-b55e21a3b4a6	3072
3076	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Transferred	Transferred	Transferred	\N	\N	\N	\N	2023-11-08 13:57:41.238258	2023-11-08 13:57:41.238198	893b8732-f198-4c32-b847-60d59715a86a	3076
3079	uri://ed-fi.org/ProviderCategoryDescriptor	Child care center	Child care center	Child care center	\N	\N	\N	\N	2023-11-08 13:57:41.276187	2023-11-08 13:57:41.275231	efaff427-b8e8-48f7-a236-12507793ad00	3078
3084	uri://ed-fi.org/ProviderCategoryDescriptor	Ministry care	Ministry care	Ministry care	\N	\N	\N	\N	2023-11-08 13:57:41.28655	2023-11-08 13:57:41.286536	0f4c8d51-d3cb-4eae-9636-1a8d636745be	3084
3087	uri://ed-fi.org/ProviderCategoryDescriptor	Preschool	Preschool	Preschool	\N	\N	\N	\N	2023-11-08 13:57:41.292182	2023-11-08 13:57:41.292155	c6f3f82c-8bd0-434b-8d14-5b1527665136	3087
3093	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC	DEPRECATED: Center-EC	DEPRECATED: Center-EC	\N	\N	\N	\N	2023-11-08 13:57:41.304272	2023-11-08 13:57:41.304252	d02f774b-88a3-4222-89a7-a9de79c6659b	3093
3097	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	\N	\N	\N	\N	2023-11-08 13:57:41.312491	2023-11-08 13:57:41.312476	4d6d0fa9-0e0a-481b-ba52-68e2f7b87c4c	3097
3101	uri://ed-fi.org/CredentialTypeDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:41.349719	2023-11-08 13:57:41.348249	7bb20c96-9981-4fd5-bef7-91c4536cbc22	3101
3103	uri://ed-fi.org/CredentialTypeDescriptor	Registration	Registration	Registration	\N	\N	\N	\N	2023-11-08 13:57:41.35762	2023-11-08 13:57:41.357584	2e887e5f-08c5-45f5-a275-1e37c4edee63	3103
3107	uri://ed-fi.org/GradeTypeDescriptor	Exam	Exam	Exam	\N	\N	\N	\N	2023-11-08 13:57:41.390179	2023-11-08 13:57:41.388466	ce427f03-e6b6-4a76-a3ba-b46f015d73d7	3107
3110	uri://ed-fi.org/GradeTypeDescriptor	Semester	Semester	Semester	\N	\N	\N	\N	2023-11-08 13:57:41.405167	2023-11-08 13:57:41.405092	8b38c717-213c-4ecc-b201-fd60a1f26f43	3110
3112	uri://ed-fi.org/AccommodationDescriptor	Scheduling accommodation	Scheduling accommodation	Scheduling accommodation	\N	\N	\N	\N	2023-11-08 13:57:41.440439	2023-11-08 13:57:41.439167	ab1d1ccb-7572-47b1-a734-86c43e8e6be9	3112
3115	uri://ed-fi.org/AccommodationDescriptor	Settings accommodation	Settings accommodation	Settings accommodation	\N	\N	\N	\N	2023-11-08 13:57:41.449578	2023-11-08 13:57:41.449544	581cef38-3c85-4b89-8233-8151b33e0d83	3115
3120	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Drivers License	Drivers License	Drivers License	\N	\N	\N	\N	2023-11-08 13:57:41.489419	2023-11-08 13:57:41.488475	0de98e6a-c6c5-4f9d-92ee-48f0887e75cb	3120
3125	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:41.498975	2023-11-08 13:57:41.498948	bde9b39f-06f3-41ca-9258-2c655f536d97	3125
3131	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Selective Service	Selective Service	Selective Service	\N	\N	\N	\N	2023-11-08 13:57:41.507061	2023-11-08 13:57:41.507045	5564aff6-fc80-4405-af86-70aaf7b888b8	3131
3134	uri://ed-fi.org/StaffIdentificationSystemDescriptor	State	State	State	\N	\N	\N	\N	2023-11-08 13:57:41.513294	2023-11-08 13:57:41.513127	ce75eab8-7fd9-447f-a965-a8c55cefb782	3134
3136	uri://ed-fi.org/DisabilityDescriptor	Deaf-Blindness	Deaf-Blindness	Deaf-Blindness	\N	\N	\N	\N	2023-11-08 13:57:41.551821	2023-11-08 13:57:41.550488	228861b1-9779-457e-baed-dfa90763b22a	3136
3141	uri://ed-fi.org/DisabilityDescriptor	Infant/Toddler with a Disability	Infant/Toddler with a Disability	Infant/Toddler with a Disability	\N	\N	\N	\N	2023-11-08 13:57:41.562639	2023-11-08 13:57:41.562584	1be6e954-b667-4162-8c5a-0e0f849c36cb	3141
3145	uri://ed-fi.org/DisabilityDescriptor	Other Health Impairment	Other Health Impairment	Other Health Impairment	\N	\N	\N	\N	2023-11-08 13:57:41.570427	2023-11-08 13:57:41.570333	395fc62b-debd-46a5-a9ca-259bb2323a28	3145
3148	uri://ed-fi.org/DisabilityDescriptor	Preschooler with a Disability	Preschooler with a Disability	Preschooler with a Disability	\N	\N	\N	\N	2023-11-08 13:57:41.576724	2023-11-08 13:57:41.57663	e496c941-8725-4f5a-970d-8156173d7ccd	3148
3153	uri://ed-fi.org/DisabilityDescriptor	Visual Impairment, including Blindness	Visual Impairment, including Blindness	Visual Impairment, including Blindness	\N	\N	\N	\N	2023-11-08 13:57:41.586065	2023-11-08 13:57:41.585712	b39912bb-def0-4101-b52b-0b5abe1a98c3	3153
3157	uri://ed-fi.org/FinancialCollectionDescriptor	0 to 30 days	0 to 30 days	0 to 30 days	\N	\N	\N	\N	2023-11-08 13:57:41.624995	2023-11-08 13:57:41.62382	d0710a56-8308-40a0-ad13-debd22326ec3	3157
3163	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Minimally equivalent	Minimally equivalent	Minimally equivalent	\N	\N	\N	\N	2023-11-08 13:57:41.669635	2023-11-08 13:57:41.668554	8c9b5d67-1403-45d2-b8c5-6b9aa946ce32	3163
3164	uri://ed-fi.org/GradingPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-11-08 13:57:41.710045	2023-11-08 13:57:41.709001	bac6ce54-d65b-45ee-a459-86981bcaad57	3164
3168	uri://ed-fi.org/GradingPeriodDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	\N	2023-11-08 13:57:41.718062	2023-11-08 13:57:41.718032	1668e34d-1621-4e46-8c6f-d4a7a5281f2a	3168
3172	uri://ed-fi.org/GradingPeriodDescriptor	Second Nine Weeks	Second Nine Weeks	Second Nine Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.723466	2023-11-08 13:57:41.723425	c5ffc070-d0fa-4c33-b849-f4918ebe6cb4	3172
3175	uri://ed-fi.org/GradingPeriodDescriptor	Third Nine Weeks	Third Nine Weeks	Third Nine Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.728498	2023-11-08 13:57:41.72847	a7c8570a-3dc5-4895-8f92-eca0450956dd	3175
3068	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Graduated	Graduated	Graduated	\N	\N	\N	\N	2023-11-08 13:57:41.224509	2023-11-08 13:57:41.224477	b5ba0636-0158-4d2b-8216-a2248b4e433f	3068
3073	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Invalid enrollment	Invalid enrollment	Invalid enrollment	\N	\N	\N	\N	2023-11-08 13:57:41.232074	2023-11-08 13:57:41.232051	2af898f7-efa7-4d35-9715-d2b85f3f0132	3073
3077	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	\N	2023-11-08 13:57:41.240692	2023-11-08 13:57:41.24065	0c12c1ec-8780-404c-a130-a6244bd3a706	3077
3081	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home	Family child care home	Family child care home	\N	\N	\N	\N	2023-11-08 13:57:41.276158	2023-11-08 13:57:41.275216	1f5269fa-d462-421f-80fa-b83377262767	3081
3082	uri://ed-fi.org/ProviderCategoryDescriptor	Head Start and Early Head Start	Head Start and Early Head Start	Head Start and Early Head Start	\N	\N	\N	\N	2023-11-08 13:57:41.284998	2023-11-08 13:57:41.284923	3164c760-c2a0-49e1-880e-2fdf2b065069	3082
3085	uri://ed-fi.org/ProviderCategoryDescriptor	On-premise child care	On-premise child care	On-premise child care	\N	\N	\N	\N	2023-11-08 13:57:41.287648	2023-11-08 13:57:41.287625	fb8ff3c3-4df5-4d81-a328-e9e8c088d6b8	3085
3090	uri://ed-fi.org/ProviderCategoryDescriptor	School-age child care	School-age child care	School-age child care	\N	\N	\N	\N	2023-11-08 13:57:41.301227	2023-11-08 13:57:41.301067	d29367ff-2515-4241-a4a7-1379d0aa3a0e	3090
3095	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	\N	\N	\N	\N	2023-11-08 13:57:41.310518	2023-11-08 13:57:41.310503	e3b2dee8-6e5c-49bb-b0d1-2de412cfd2d3	3095
3100	uri://ed-fi.org/CredentialTypeDescriptor	Certification	Certification	Certification	\N	\N	\N	\N	2023-11-08 13:57:41.349231	2023-11-08 13:57:41.348232	339173be-2522-4345-90a2-1c2c6de62d37	3100
3104	uri://ed-fi.org/GradeTypeDescriptor	Conduct	Conduct	Conduct	\N	\N	\N	\N	2023-11-08 13:57:41.389426	2023-11-08 13:57:41.388442	41575ee7-b7f4-4b47-b6e6-1d974d7cee3c	3104
3109	uri://ed-fi.org/GradeTypeDescriptor	Mid-Term Grade	Mid-Term Grade	Mid-Term Grade	\N	\N	\N	\N	2023-11-08 13:57:41.402813	2023-11-08 13:57:41.402797	b011c352-784c-4e54-8537-ef312550c4ec	3109
3114	uri://ed-fi.org/AccommodationDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:41.44018	2023-11-08 13:57:41.439174	c3ebd9c0-cf36-4c1c-99c5-49c4a5164077	3114
3118	uri://ed-fi.org/AccommodationDescriptor	Test administration accommodation	Test administration accommodation	Test administration accommodation	\N	\N	\N	\N	2023-11-08 13:57:41.451606	2023-11-08 13:57:41.45157	746692bb-95e4-4b11-989a-df28dfeff76a	3118
3119	uri://ed-fi.org/AccommodationDescriptor	Test response accommodation	Test response accommodation	Test response accommodation	\N	\N	\N	\N	2023-11-08 13:57:41.454744	2023-11-08 13:57:41.454714	ef7a16d5-96e4-47df-a030-cbc8616a20e2	3119
3123	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	\N	2023-11-08 13:57:41.489725	2023-11-08 13:57:41.488497	b66d4e25-29c1-4841-82ad-8bc4aecf5cf6	3123
3127	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Health Record	Health Record	Health Record	\N	\N	\N	\N	2023-11-08 13:57:41.499783	2023-11-08 13:57:41.499715	6ec59026-e03c-437e-8cb2-f59d00e0d35d	3127
3129	uri://ed-fi.org/StaffIdentificationSystemDescriptor	School	School	School	\N	\N	\N	\N	2023-11-08 13:57:41.5057	2023-11-08 13:57:41.505447	8bcc607d-01c2-4f33-ba28-fda04bb4a067	3129
3133	uri://ed-fi.org/StaffIdentificationSystemDescriptor	US Visa	US Visa	US Visa	\N	\N	\N	\N	2023-11-08 13:57:41.513434	2023-11-08 13:57:41.513422	ba0c6718-e83c-4e55-aaf1-42fae09e1ebb	3133
3137	uri://ed-fi.org/DisabilityDescriptor	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	\N	\N	\N	\N	2023-11-08 13:57:41.551823	2023-11-08 13:57:41.550512	b0bc0a55-cef8-4f72-aec2-82371e5a9dc0	3137
3140	uri://ed-fi.org/DisabilityDescriptor	Motor impairment	Motor impairment	Motor impairment	\N	\N	\N	\N	2023-11-08 13:57:41.560963	2023-11-08 13:57:41.56095	d9f93622-6489-4e5f-9688-76c364c5f533	3140
3143	uri://ed-fi.org/DisabilityDescriptor	Multiple Disabilities	Multiple Disabilities	Multiple disabilities	\N	\N	\N	\N	2023-11-08 13:57:41.566853	2023-11-08 13:57:41.566801	cfdbc214-cb89-4bae-8748-5449709ae19b	3143
3144	uri://ed-fi.org/DisabilityDescriptor	Orthopedic Impairment	Orthopedic Impairment	Orthopedic Impairment	\N	\N	\N	\N	2023-11-08 13:57:41.570143	2023-11-08 13:57:41.570109	7178d334-6989-48c8-af9d-9bbb44943fda	3144
3149	uri://ed-fi.org/DisabilityDescriptor	Serious Emotional Disability	Serious Emotional Disability	Serious Emotional Disability	\N	\N	\N	\N	2023-11-08 13:57:41.576848	2023-11-08 13:57:41.576833	4e4b647a-45a9-4d49-baab-1fa6e6ce8134	3149
3151	uri://ed-fi.org/DisabilityDescriptor	Traumatic Brain Injury	Traumatic Brain Injury	Traumatic Brain Injury	\N	\N	\N	\N	2023-11-08 13:57:41.582953	2023-11-08 13:57:41.58293	cdd31136-94c7-45be-930c-46e0f6648a0e	3151
3158	uri://ed-fi.org/FinancialCollectionDescriptor	61 to 75 days	61 to 75 days	61 to 75 days	\N	\N	\N	\N	2023-11-08 13:57:41.62511	2023-11-08 13:57:41.623828	8416e172-a1f7-4a93-b726-0dbcc1cb1d8c	3158
3161	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Equivalent	Equivalent	Equivalent	\N	\N	\N	\N	2023-11-08 13:57:41.669619	2023-11-08 13:57:41.668571	14124114-7051-410a-b5a2-3b990a32cf0d	3161
3166	uri://ed-fi.org/GradingPeriodDescriptor	First Semester	First Semester	First Semester	\N	\N	\N	\N	2023-11-08 13:57:41.710217	2023-11-08 13:57:41.709028	8cb7cc17-12e0-4a68-8734-dc9b10571be5	3166
3170	uri://ed-fi.org/GradingPeriodDescriptor	Second Summer Session	Second Summer Session	Second Summer Session	\N	\N	\N	\N	2023-11-08 13:57:41.718145	2023-11-08 13:57:41.717969	73a14e2b-8c8e-4a05-83ab-f837ad34a9a6	3170
3171	uri://ed-fi.org/GradingPeriodDescriptor	Third Summer Session	Third Summer Session	Third Summer Session	\N	\N	\N	\N	2023-11-08 13:57:41.721487	2023-11-08 13:57:41.721452	486117bc-600b-4a2a-a593-f4dbe964350b	3171
3176	uri://ed-fi.org/GradingPeriodDescriptor	First Six Weeks	First Six Weeks	First Six Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.731228	2023-11-08 13:57:41.731088	fedf216d-dfcc-4097-808f-263c387f4678	3176
3179	uri://ed-fi.org/GradingPeriodDescriptor	Third Six Weeks	Third Six Weeks	Third Six Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.737363	2023-11-08 13:57:41.737336	a8fc3e76-fe21-45a1-a5ba-167342a1157d	3179
3182	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Six Weeks	Fourth Six Weeks	Fourth Six Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.740942	2023-11-08 13:57:41.740324	d4ee81cc-5f4b-486a-b7ab-e2bd816ab67c	3182
3187	uri://ed-fi.org/RatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-11-08 13:57:41.779372	2023-11-08 13:57:41.779319	9a5f8375-02e0-4fcf-880f-c679963bf6d5	3187
3139	uri://ed-fi.org/DisabilityDescriptor	Medical condition	Medical condition	Medical condition	\N	\N	\N	\N	2023-11-08 13:57:41.560307	2023-11-08 13:57:41.560273	5ef880fc-bf1c-4a9f-a0f2-916e64143c9c	3139
3142	uri://ed-fi.org/DisabilityDescriptor	Mental impairment	Mental impairment	Mental impairment	\N	\N	\N	\N	2023-11-08 13:57:41.563106	2023-11-08 13:57:41.563084	0adf3980-65e3-42bb-8b43-f9bf74e55cd2	3142
3146	uri://ed-fi.org/DisabilityDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 13:57:41.570173	2023-11-08 13:57:41.570147	7bf45b5c-98ac-4a8b-830e-e46a72af00a4	3146
3150	uri://ed-fi.org/DisabilityDescriptor	Sensory impairment	Sensory impairment	Sensory impairment	\N	\N	\N	\N	2023-11-08 13:57:41.578971	2023-11-08 13:57:41.578944	95f795d4-e9cd-4819-8b2d-97f1db7f78ab	3150
3156	uri://ed-fi.org/FinancialCollectionDescriptor	46 to 60 days	46 to 60 days	46 to 60 days	\N	\N	\N	\N	2023-11-08 13:57:41.62493	2023-11-08 13:57:41.623804	fa6f701e-2bb6-4a2d-9148-f932ee0d148a	3156
3160	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Partially equivalent	Partially equivalent	Partially equivalent	\N	\N	\N	\N	2023-11-08 13:57:41.669497	2023-11-08 13:57:41.668545	1a7b943f-0db1-4c7e-9712-e71853bff123	3160
3167	uri://ed-fi.org/GradingPeriodDescriptor	Second Semester	Second Semester	Second Semester	\N	\N	\N	\N	2023-11-08 13:57:41.710227	2023-11-08 13:57:41.70901	d50d12d0-de2d-47eb-88ec-966b7c4c0b87	3167
3169	uri://ed-fi.org/GradingPeriodDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	\N	2023-11-08 13:57:41.71828	2023-11-08 13:57:41.718229	8aead606-67d0-4adf-8796-2fdba30c5e3f	3169
3174	uri://ed-fi.org/GradingPeriodDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	\N	2023-11-08 13:57:41.724023	2023-11-08 13:57:41.723977	731e682d-19e4-488b-ab6f-ed5d70a356f1	3174
3177	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Nine Weeks	Fourth Nine Weeks	Fourth Nine Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.73135	2023-11-08 13:57:41.731319	641f7ec7-0770-4490-b042-2eb4bfbb596d	3177
3186	uri://ed-fi.org/RatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-11-08 13:57:41.7775	2023-11-08 13:57:41.776494	a64702fc-d876-40a3-8131-b52f5725ee4e	3186
3188	uri://ed-fi.org/RatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-11-08 13:57:41.786859	2023-11-08 13:57:41.786821	51fdd82d-3615-4f36-b4c9-e7847b13aa13	3188
3194	uri://ed-fi.org/PlatformTypeDescriptor	Paper-based	Paper-based	Paper-based	\N	\N	\N	\N	2023-11-08 13:57:41.826703	2023-11-08 13:57:41.825627	62550bc3-318e-4348-896c-c96fccecf6ed	3194
3178	uri://ed-fi.org/GradingPeriodDescriptor	Second Six Weeks	Second Six Weeks	Second Six Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.731683	2023-11-08 13:57:41.731645	cd0c3c65-a966-4e8e-aafc-c5606b166126	3178
3181	uri://ed-fi.org/GradingPeriodDescriptor	Sixth Six Weeks	Sixth Six Weeks	Sixth Six Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.739106	2023-11-08 13:57:41.739013	802f1996-f459-4495-bc5d-ddc49f701fd7	3181
3183	uri://ed-fi.org/GradingPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	\N	2023-11-08 13:57:41.746169	2023-11-08 13:57:41.744833	cbcd8d2d-831b-4610-b1e4-59d1d4f0372c	3183
3185	uri://ed-fi.org/RatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-11-08 13:57:41.77744	2023-11-08 13:57:41.776488	ed82db7b-83be-4e22-a73c-6c86f7a9e62e	3185
3189	uri://ed-fi.org/RatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-11-08 13:57:41.787334	2023-11-08 13:57:41.787285	c4d2dad3-4762-4fc3-96ff-5d464b28c380	3189
3180	uri://ed-fi.org/GradingPeriodDescriptor	Fifth Six Weeks	Fifth Six Weeks	Fifth Six Weeks	\N	\N	\N	\N	2023-11-08 13:57:41.737419	2023-11-08 13:57:41.737248	92254ccd-9563-4f4a-b0f8-4cb0ddf34a26	3180
3184	uri://ed-fi.org/RatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-11-08 13:57:41.777484	2023-11-08 13:57:41.776497	349c4ada-8362-4156-a736-5a81a823db9c	3184
3190	uri://ed-fi.org/RatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-11-08 13:57:41.788781	2023-11-08 13:57:41.788656	a5242072-2b02-4020-bbb8-1653d24ba2cd	3190
3192	uri://ed-fi.org/RatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-11-08 13:57:41.79426	2023-11-08 13:57:41.794219	3c8b2c38-90fe-4b3f-a252-5734c6cd5918	3192
3191	uri://ed-fi.org/RatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-11-08 13:57:41.788756	2023-11-08 13:57:41.788722	569df17a-91c1-45fc-bf6e-0f8b411c40c6	3191
3193	uri://ed-fi.org/PlatformTypeDescriptor	Computer-based	Computer-based	Computer-based	\N	\N	\N	\N	2023-11-08 13:57:41.826606	2023-11-08 13:57:41.825628	3b1aec80-2382-4cdb-b32f-f88b39b37b9c	3193
3195	uri://tpdm.ed-fi.org/EducationOrganizationCategoryDescriptor	Educator Preparation Provider	Educator Preparation Provider	Educator Preparation Provider	\N	\N	\N	\N	2023-11-08 14:23:16.634664	2023-11-08 14:23:16.619838	0caef4bf-baed-41cf-8c96-c95422dfb23d	3195
3196	uri://tpdm.ed-fi.org/EducationOrganizationCategoryDescriptor	University	University	University	\N	\N	\N	\N	2023-11-08 14:23:16.766109	2023-11-08 14:23:16.765952	7fdffd18-a13d-4ebd-86be-197e65d83e98	3196
3197	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Renewed	Renewed	Renewed	\N	\N	\N	\N	2023-11-08 14:23:16.802479	2023-11-08 14:23:16.809424	b710e971-7134-403f-a806-9605781bc68c	3198
3198	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Revoked	Revoked	Revoked	\N	\N	\N	\N	2023-11-08 14:23:16.860114	2023-11-08 14:23:16.862193	7caf36e4-c665-4a78-ad4d-95f7c8f6d2b0	3200
3199	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Suspended	Suspended	Suspended	\N	\N	\N	\N	2023-11-08 14:23:16.869888	2023-11-08 14:23:16.871381	9d5fec53-d512-438d-81ce-3a461622e4fd	3202
3200	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Retired	Retired	Retired	\N	\N	\N	\N	2023-11-08 14:23:16.87815	2023-11-08 14:23:16.884096	570e67bd-22ed-44c5-84b9-4e600247ee7b	3204
3201	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Voluntary Surrender	Voluntary Surrender	Voluntary Surrender	\N	\N	\N	\N	2023-11-08 14:23:16.890851	2023-11-08 14:23:16.89312	d459d6e5-ca29-483a-8df5-7cbc550452cd	3206
3202	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Expired	Expired	Expired	\N	\N	\N	\N	2023-11-08 14:23:16.900012	2023-11-08 14:23:16.901277	fba18bf4-8745-48a0-9040-dcbd778c9e47	3208
3203	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	\N	2023-11-08 14:23:16.913111	2023-11-08 14:23:16.915533	56457c1c-66d1-47ab-ba34-c48884ea5a97	3210
3204	uri://tpdm.ed-fi.org/CredentialStatusDescriptor	Active	Active	Active	\N	\N	\N	\N	2023-11-08 14:23:16.92153	2023-11-08 14:23:16.922753	924c38b3-ab09-42be-a7d6-9edba64234ce	3212
3205	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Not Started	Not Started	Not Started	\N	\N	\N	\N	2023-11-08 14:23:16.961182	2023-11-08 14:23:16.963584	fd28118d-51ad-4399-a1e2-558cde60054a	3214
3206	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	In Progress	In Progress	In Progress	\N	\N	\N	\N	2023-11-08 14:23:16.970733	2023-11-08 14:23:16.972191	eb2702f4-a7a7-49ac-b97d-3c669b95d764	3216
3207	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	\N	2023-11-08 14:23:16.978503	2023-11-08 14:23:16.980075	e0e7eddf-bd75-41e4-a8de-1b0f61b5ba86	3218
3208	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Queued	Queued	Queued	\N	\N	\N	\N	2023-11-08 14:23:16.985634	2023-11-08 14:23:16.986988	c548b22c-399e-40f4-a4a4-47492b8d1e5d	3220
3209	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-11-08 14:23:16.992182	2023-11-08 14:23:16.993545	5bcb40ca-da6b-4d3e-9d0d-1d01d1dd4c05	3222
3210	uri://tpdm.ed-fi.org/EvaluationRatingStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	\N	2023-11-08 14:23:16.998962	2023-11-08 14:23:17.000429	d04ec706-6b79-416f-8160-446ef670e30d	3224
3211	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Evaluation	Formal Evaluation	Formal Evaluation	\N	\N	\N	\N	2023-11-08 14:23:17.036529	2023-11-08 14:23:17.039579	05741c0e-dcde-4954-bfce-2cc34f7ae5e6	3226
3212	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Observation	Formal Observation	Formal Observation	\N	\N	\N	\N	2023-11-08 14:23:17.048824	2023-11-08 14:23:17.050433	5c322655-2a03-41f0-8da1-51ac56ff4fc6	3228
3213	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	\N	\N	\N	\N	2023-11-08 14:23:17.060417	2023-11-08 14:23:17.061894	4beeab60-2b39-4bd1-b437-dea1df2156f2	3230
3214	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Informal Observation	Informal Observation	Informal Observation	\N	\N	\N	\N	2023-11-08 14:23:17.072	2023-11-08 14:23:17.073809	03b44be4-7074-409a-a8ff-dff192b2683f	3232
3215	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Growth	Student Growth	Student Growth Measures	\N	\N	\N	\N	2023-11-08 14:23:17.08137	2023-11-08 14:23:17.083019	bd4d2547-77b3-4962-8307-a373e9a6dee4	3234
3216	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Informal Observation Self-Rating	Informal Observation Self-Rating	Informal Observation Self-Rating	\N	\N	\N	\N	2023-11-08 14:23:17.090113	2023-11-08 14:23:17.091831	d69bec24-2579-4a92-859d-646a5cfe2e41	3236
3217	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Formal Observation Self-Rating	Formal Observation Self-Rating	Formal Observation Self-Rating	\N	\N	\N	\N	2023-11-08 14:23:17.097582	2023-11-08 14:23:17.099086	20572666-682e-4813-af9f-bb35674d5d6e	3238
3218	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Work	Student Work	Student Work	\N	\N	\N	\N	2023-11-08 14:23:17.104746	2023-11-08 14:23:17.106082	8cd92052-ce80-4726-a3f1-8dca5c517356	3240
3219	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Walkthrough	Walkthrough	Walkthrough	\N	\N	\N	\N	2023-11-08 14:23:17.112576	2023-11-08 14:23:17.114106	38b15d82-221e-4b53-be5c-b304db512731	3242
3220	uri://tpdm.ed-fi.org/EvaluationTypeDescriptor	Student Survey	Student Survey	Student Survey	\N	\N	\N	\N	2023-11-08 14:23:17.119871	2023-11-08 14:23:17.121087	b9d394df-8587-4137-b0f6-ba2ff19344f1	3244
3221	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	\N	2023-11-08 14:23:17.157957	2023-11-08 14:23:17.15676	6e6e8d91-e48e-446f-a3a6-c14b6d7ae2c5	3245
3222	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	English Language Learners	English Language Learners	English Language Learners	\N	\N	\N	\N	2023-11-08 14:23:17.168052	2023-11-08 14:23:17.16801	42334e11-594e-40e4-b145-fb4be5f0ffba	3246
3223	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Multiple Subjects	Multiple Subjects	Multiple Subjects	\N	\N	\N	\N	2023-11-08 14:23:17.176148	2023-11-08 14:23:17.176104	a0c917a7-c62c-44cb-9802-c7b2a15112af	3247
3224	uri://tpdm.ed-fi.org/AcademicSubjectDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-11-08 14:23:17.183017	2023-11-08 14:23:17.182975	8635a8eb-356c-4129-a682-c5def7f18a7a	3248
3225	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Master's Program	Master's Program	Master's Program	\N	\N	\N	\N	2023-11-08 14:23:17.219325	2023-11-08 14:23:17.218138	f531054d-3179-468b-a473-6022614a6d35	3249
3226	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Professional Certification	Professional Certification	Professional Certification	\N	\N	\N	\N	2023-11-08 14:23:17.228073	2023-11-08 14:23:17.228003	e58c8dca-1147-47c6-aee2-a6effd74a227	3250
3227	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Undergraduate	Undergraduate	Undergraduate	\N	\N	\N	\N	2023-11-08 14:23:17.233539	2023-11-08 14:23:17.233503	f7227c75-ce62-4d82-81a9-c2d2e645878d	3251
3228	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Freshman	Freshman	Freshman	\N	\N	\N	\N	2023-11-08 14:23:17.239071	2023-11-08 14:23:17.239034	831e79cc-7af0-4edf-b67f-ce5f19f7dabc	3252
3229	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Sophomore	Sophomore	Sophomore	\N	\N	\N	\N	2023-11-08 14:23:17.244896	2023-11-08 14:23:17.244763	f3d1423c-1c10-4091-bafa-0c7039156c3a	3253
3230	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Junior	Junior	Junior	\N	\N	\N	\N	2023-11-08 14:23:17.251718	2023-11-08 14:23:17.251667	baea49f6-0bbc-4ba7-9163-6c4b7b60c1fa	3254
3231	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Senior	Senior	Senior	\N	\N	\N	\N	2023-11-08 14:23:17.259815	2023-11-08 14:23:17.259674	cf89b484-c888-4144-a9a4-85424fcb9712	3255
3232	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Postbaccalaureate	Postbaccalaureate	Postbaccalaureate	\N	\N	\N	\N	2023-11-08 14:23:17.265794	2023-11-08 14:23:17.265751	116c17a8-fb50-40d8-ad80-b43c7fab942d	3256
3233	uri://tpdm.ed-fi.org/GradeLevelDescriptor	Doctoral Program	Doctoral Program	Doctoral Program	\N	\N	\N	\N	2023-11-08 14:23:17.271867	2023-11-08 14:23:17.271824	99be02a4-8faa-41c0-9980-41119588917c	3257
3234	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	MOY	MOY	Mid-Year	\N	\N	\N	\N	2023-11-08 14:23:17.320242	2023-11-08 14:23:17.322811	7c7d9433-955b-40c6-9c4d-07395dd40f1e	3259
3235	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	BOY	BOY	Beginning of year	\N	\N	\N	\N	2023-11-08 14:23:17.330218	2023-11-08 14:23:17.331674	f36cc6dd-0b9a-4f1e-8179-69aaac19da96	3261
3236	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	EOY	EOY	End of Year	\N	\N	\N	\N	2023-11-08 14:23:17.337457	2023-11-08 14:23:17.338786	c64562de-66e3-4b9c-b184-d204c594b8a1	3263
3237	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	\N	2023-11-08 14:23:17.345901	2023-11-08 14:23:17.347578	58c3498a-c3b5-4092-9cbd-72f592801f84	3265
3238	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	\N	2023-11-08 14:23:17.353678	2023-11-08 14:23:17.355198	57eb00d1-3716-4131-863e-84802e90e9f4	3267
3239	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	\N	2023-11-08 14:23:17.361808	2023-11-08 14:23:17.363547	be072f39-bc57-45a5-83cf-ece0ee7cf314	3269
3240	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Fall Semester	Fall	Fall	\N	\N	\N	\N	2023-11-08 14:23:17.370331	2023-11-08 14:23:17.371992	9f07e467-2d90-404d-aa6e-b2bb6176de1a	3271
3241	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	\N	2023-11-08 14:23:17.378552	2023-11-08 14:23:17.379957	29f6c754-d9b3-4813-bddc-0f12555069f3	3273
3242	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	\N	2023-11-08 14:23:17.388007	2023-11-08 14:23:17.39049	113e8b32-0919-4732-9473-f5d4b17ef62f	3275
3243	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	\N	2023-11-08 14:23:17.398757	2023-11-08 14:23:17.40049	6a2fec3e-1228-4be0-a4b7-587d6b8152b8	3277
3275	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Grants	Other Grants	Other Grants	\N	\N	\N	\N	2023-11-08 14:23:17.880129	2023-11-08 14:23:17.881729	391aae0f-e410-429b-925f-983a3c8a229b	3337
3244	uri://tpdm.ed-fi.org/EvaluationPeriodDescriptor	Winter Semester	Winter Semester	Winter Semester	\N	\N	\N	\N	2023-11-08 14:23:17.40884	2023-11-08 14:23:17.411367	c1646ca1-f1d7-4c33-84e2-5b4ab44625a3	3279
3245	uri://tpdm.ed-fi.org/CohortYearTypeDescriptor	Completion	Completion	A cohort year based on the candidate's scheduled completion	\N	\N	\N	\N	2023-11-08 14:23:17.452001	2023-11-08 14:23:17.450515	bfa06a0e-bf85-4903-bc6a-c2ebd46eddca	3280
3246	uri://tpdm.ed-fi.org/CohortYearTypeDescriptor	Entry	Entry	A cohort year based on the entry of candidate into the Eucator Preparation Provider	\N	\N	\N	\N	2023-11-08 14:23:17.468572	2023-11-08 14:23:17.46849	4a507f98-6e68-448b-9ded-43c786c5403d	3281
3247	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	One Teach, One Assist	One Teach, One Assist	One Teach, One Assist	\N	\N	\N	\N	2023-11-08 14:23:17.507759	2023-11-08 14:23:17.511141	ad72cc2f-2950-4a29-b7f4-af1002968479	3283
3248	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	One Teach, One Observe	One Teach, One Observe	One Teach, One Observe	\N	\N	\N	\N	2023-11-08 14:23:17.519744	2023-11-08 14:23:17.521271	9ceaacce-41e6-4fe5-8dec-de0d2709f3e6	3285
3249	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Parallel Teaching	Parallel Teaching	Parallel Teaching	\N	\N	\N	\N	2023-11-08 14:23:17.527242	2023-11-08 14:23:17.529594	48f7b35e-6886-4270-a7b2-9aa2f83390e8	3287
3250	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Station Teaching	Station Teaching	Station Teaching	\N	\N	\N	\N	2023-11-08 14:23:17.536241	2023-11-08 14:23:17.537549	c7191168-aa79-4e75-9b14-235694ae0497	3289
3251	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 14:23:17.546168	2023-11-08 14:23:17.547696	aa0b7b40-a317-4dc7-8d03-32f89b7a77c0	3291
3252	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Team Teaching	Team Teaching	Team Teaching	\N	\N	\N	\N	2023-11-08 14:23:17.553507	2023-11-08 14:23:17.554839	b42e5601-57ed-4525-bd84-8092a4c7895f	3293
3253	uri://tpdm.ed-fi.org/CoteachingStyleObservedDescriptor	Alternative Teaching	Alternative Teaching	Alternative Teaching	\N	\N	\N	\N	2023-11-08 14:23:17.598918	2023-11-08 14:23:17.60048	cbb99f20-225c-482d-b9bd-966e9655fce7	3295
3254	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-11-08 14:23:17.640655	2023-11-08 14:23:17.643006	64abd312-9f44-4310-bca3-765d15402351	3297
3255	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-11-08 14:23:17.651569	2023-11-08 14:23:17.652932	4cf709c6-bf5d-40d2-87bb-45ae1a9cc336	3299
3256	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-11-08 14:23:17.659212	2023-11-08 14:23:17.660626	dfa7cffe-f649-46bd-b5d4-4ae7a0a80e91	3301
3257	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-11-08 14:23:17.667934	2023-11-08 14:23:17.669444	1f4acfaa-14e6-46a1-9247-26de90cceb96	3303
3258	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-11-08 14:23:17.676055	2023-11-08 14:23:17.677533	4418ec66-b07e-4254-83fa-3b5e9cd820d5	3305
3259	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-11-08 14:23:17.683416	2023-11-08 14:23:17.684951	872216b7-4b85-42f6-aebb-3f090ee94d4e	3307
3260	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:17.691068	2023-11-08 14:23:17.692744	e8f0657e-35ce-4ac2-b2f1-816a94999f25	3309
3261	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:17.698618	2023-11-08 14:23:17.700197	73b9cd75-da09-4fc9-a771-897e99b5d3b3	3311
3262	uri://tpdm.ed-fi.org/ObjectiveRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-11-08 14:23:17.707139	2023-11-08 14:23:17.708613	e42a3302-5a45-406b-9d54-d1a6b6e5f475	3313
3263	uri://tpdm.ed-fi.org/ReasonExitedDescriptor	Completed	Completed	Completed	\N	\N	\N	\N	2023-11-08 14:23:17.746678	2023-11-08 14:23:17.745334	15d4eadb-1283-40cd-a6f4-30b5a17bc8c7	3314
3264	uri://tpdm.ed-fi.org/ReasonExitedDescriptor	Received Degree	Received Degree	Received Degree	\N	\N	\N	\N	2023-11-08 14:23:17.754336	2023-11-08 14:23:17.754289	1803c65a-71e1-49ab-b387-4e10bdb49d23	3315
3265	uri://tpdm.ed-fi.org/AidTypeDescriptor	Assistantship	Assistantship	Assistantship	\N	\N	\N	\N	2023-11-08 14:23:17.793073	2023-11-08 14:23:17.795565	651d0a32-4589-445c-8790-3a034a9db6bf	3317
3266	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Scholarships	Federal Scholarships	Federal Scholarships	\N	\N	\N	\N	2023-11-08 14:23:17.80389	2023-11-08 14:23:17.805207	f84b8135-0170-44af-b981-0effe8aa504f	3319
3267	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Subsidized Loans	Federal Subsidized Loans	Federal Subsidized Loans	\N	\N	\N	\N	2023-11-08 14:23:17.817368	2023-11-08 14:23:17.81879	3fc214a0-9bf3-478b-8fb8-c036090157d6	3321
3268	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Unsubsidized Loans	Federal Unsubsidized Loans	Federal Unsubsidized Loans	\N	\N	\N	\N	2023-11-08 14:23:17.825905	2023-11-08 14:23:17.827462	fe19e1d1-213e-4330-8738-def00712aa24	3323
3269	uri://tpdm.ed-fi.org/AidTypeDescriptor	Federal Work Study	Federal Work Study	Federal Work Study	\N	\N	\N	\N	2023-11-08 14:23:17.834344	2023-11-08 14:23:17.835756	0e0af52f-db55-4a66-9d7e-0585f26c6ea6	3325
3270	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Grants	Institutional Grants	Institutional Grants	\N	\N	\N	\N	2023-11-08 14:23:17.841793	2023-11-08 14:23:17.843169	e272b218-501d-41da-b49a-18ce3e0bd84a	3327
3271	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Loans	Institutional Loans	Institutional Loans	\N	\N	\N	\N	2023-11-08 14:23:17.849664	2023-11-08 14:23:17.851166	8482ae90-4173-4d34-a425-2a68e092492b	3329
3272	uri://tpdm.ed-fi.org/AidTypeDescriptor	Institutional Scholarships	Institutional Scholarships	Institutional Scholarships	\N	\N	\N	\N	2023-11-08 14:23:17.857496	2023-11-08 14:23:17.858837	5006ef4d-d878-4a10-884b-6f6f9326f406	3331
3273	uri://tpdm.ed-fi.org/AidTypeDescriptor	Loan Forgiveness	Loan Forgiveness	Loan Forgiveness	\N	\N	\N	\N	2023-11-08 14:23:17.864611	2023-11-08 14:23:17.865968	ce26a470-ad6c-44df-b9e1-f64f6e335c58	3333
3274	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Federal Grants	Other Federal Grants	Other Federal Grants	\N	\N	\N	\N	2023-11-08 14:23:17.872062	2023-11-08 14:23:17.873427	5d741cdc-7d73-42d0-b80f-ab1a70848faa	3335
3276	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other On-Campus Work	Other On-Campus Work	Other On-Campus Work	\N	\N	\N	\N	2023-11-08 14:23:17.88778	2023-11-08 14:23:17.889204	54097d43-542b-4fc9-ac57-0261d2f7912d	3339
3277	uri://tpdm.ed-fi.org/AidTypeDescriptor	Other Scholarships	Other Scholarships	Other Scholarships	\N	\N	\N	\N	2023-11-08 14:23:17.895232	2023-11-08 14:23:17.896609	a4037b9d-69cf-41b4-84ea-71cbd4d97b03	3341
3278	uri://tpdm.ed-fi.org/AidTypeDescriptor	Parent PLUS Loans	Parent PLUS Loans	Parent PLUS Loans	\N	\N	\N	\N	2023-11-08 14:23:17.902864	2023-11-08 14:23:17.90491	33564d47-a1c6-4654-be45-0d81fcfb680d	3343
3279	uri://tpdm.ed-fi.org/AidTypeDescriptor	Pell Grants	Pell Grants	Pell Grants	\N	\N	\N	\N	2023-11-08 14:23:17.91134	2023-11-08 14:23:17.912734	0b2c3ef2-9873-4834-afdb-84e87ef40e43	3345
3280	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Grants	Private Grants	Private Grants	\N	\N	\N	\N	2023-11-08 14:23:17.918772	2023-11-08 14:23:17.920127	0c66b919-ab49-4947-ae20-0565fc4ed29d	3347
3281	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Loans	Private Loans	Private Loans	\N	\N	\N	\N	2023-11-08 14:23:17.926237	2023-11-08 14:23:17.928223	07ad6e56-14bc-40a6-b616-b82b0e42346a	3349
3282	uri://tpdm.ed-fi.org/AidTypeDescriptor	Private Scholarships	Private Scholarships	Private Scholarships	\N	\N	\N	\N	2023-11-08 14:23:17.939741	2023-11-08 14:23:17.941655	2f41df71-4cdd-4e8e-a3ed-7c6576e8fdf9	3351
3283	uri://tpdm.ed-fi.org/AidTypeDescriptor	State and Local Grants	State and Local Grants	State and Local Grants	\N	\N	\N	\N	2023-11-08 14:23:17.948674	2023-11-08 14:23:17.950035	bd2e70f7-af6b-42d8-9548-2d1ac36b247c	3353
3284	uri://tpdm.ed-fi.org/AidTypeDescriptor	State and Local Scholarships	State and Local Scholarships	State and Local Scholarships	\N	\N	\N	\N	2023-11-08 14:23:17.955631	2023-11-08 14:23:17.957431	621273f4-c88b-4e89-b7c5-d97747dd7740	3355
3285	uri://tpdm.ed-fi.org/AidTypeDescriptor	State Loans	State Loans	State Loans	\N	\N	\N	\N	2023-11-08 14:23:17.968893	2023-11-08 14:23:17.970755	abdb092d-f6f2-4ee1-a8a1-0fc6e42ec89d	3357
3286	uri://tpdm.ed-fi.org/AidTypeDescriptor	State Work	State Work	State Work	\N	\N	\N	\N	2023-11-08 14:23:17.97723	2023-11-08 14:23:17.978985	0566ffae-f0dd-485d-80cb-8466104e05df	3359
3287	uri://tpdm.ed-fi.org/AidTypeDescriptor	Teach Grants	Teach Grants	Teach Grants	\N	\N	\N	\N	2023-11-08 14:23:17.985071	2023-11-08 14:23:17.986406	a7cf2071-760e-408b-9a75-f25b826d6fba	3361
3288	uri://tpdm.ed-fi.org/AidTypeDescriptor	Tuition Reimbursements	Tuition Reimbursements	Tuition Reimbursements	\N	\N	\N	\N	2023-11-08 14:23:17.992879	2023-11-08 14:23:17.994943	09b3a7c1-a73c-4388-b327-c1c86a50e0c3	3363
3289	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	\N	2023-11-08 14:23:18.031139	2023-11-08 14:23:18.033546	49648b86-7945-4b31-9d61-593c2770315e	3365
3290	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Assistant Principal	Assistant Principal	Assistant Principal	\N	\N	\N	\N	2023-11-08 14:23:18.04243	2023-11-08 14:23:18.04414	7611db2a-25c4-4688-becd-3eadca206741	3367
3291	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Associate School Psychologist	Associate School Psychologist	Associate School Psychologist	\N	\N	\N	\N	2023-11-08 14:23:18.052619	2023-11-08 14:23:18.054123	5bb85830-cd56-4ee5-9565-c768dee31aaa	3369
3292	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	\N	2023-11-08 14:23:18.06219	2023-11-08 14:23:18.064272	9c37707b-9851-41c0-afa1-66453b8fe767	3371
3293	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Diagnostician	Educational Diagnostician	Educational Diagnostician	\N	\N	\N	\N	2023-11-08 14:23:18.0708	2023-11-08 14:23:18.072332	32a8e11d-1587-4a08-ab87-555389e0b995	3373
3294	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Instructional Officer	Instructional Officer	Instructional Officer	\N	\N	\N	\N	2023-11-08 14:23:18.078162	2023-11-08 14:23:18.07985	a99c6c3d-c20c-4f90-9a64-e249d06563a5	3375
3295	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Librarian	Librarian	Librarian	\N	\N	\N	\N	2023-11-08 14:23:18.086143	2023-11-08 14:23:18.08754	6e0c0278-aeeb-4625-97b2-4b963fd91cbe	3377
3296	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Physician	Physician	Physician	\N	\N	\N	\N	2023-11-08 14:23:18.094036	2023-11-08 14:23:18.09558	8e1bfe7e-6454-4acc-afe4-7ac18400e73b	3379
3297	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Principal	Principal	Principal	\N	\N	\N	\N	2023-11-08 14:23:18.100836	2023-11-08 14:23:18.102171	364c086d-3737-4e48-ac27-7bdf73dea533	3381
3298	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	School Nurse	School Nurse	School Nurse	\N	\N	\N	\N	2023-11-08 14:23:18.107408	2023-11-08 14:23:18.108732	fe78bb92-9bdf-4846-b7f5-2a32d28b4925	3383
3299	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	School Psychologist	School Psychologist	School Psychologist	\N	\N	\N	\N	2023-11-08 14:23:18.113476	2023-11-08 14:23:18.114681	d6b9a2da-dfc5-4c52-a28b-bb2a339595c1	3385
3300	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Superintendent	Superintendent	Superintendent	\N	\N	\N	\N	2023-11-08 14:23:18.11976	2023-11-08 14:23:18.121099	a57f2dff-65ac-4a46-865c-496a72efbc2f	3387
3301	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Teacher Supervisor	Teacher Supervisor	Teacher Supervisor	\N	\N	\N	\N	2023-11-08 14:23:18.127076	2023-11-08 14:23:18.128527	23702f6a-6594-46ca-abc3-2c1b422f66f4	3389
3302	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	\N	2023-11-08 14:23:18.134293	2023-11-08 14:23:18.135786	d613cd03-07e5-4473-b717-848394626f24	3391
3303	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Visiting Teacher	Visiting Teacher	Visiting Teacher	\N	\N	\N	\N	2023-11-08 14:23:18.141984	2023-11-08 14:23:18.143438	c84df7c7-dedf-4e64-9465-ef9ddc7b95d3	3393
3304	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Secretary	Educational Secretary	Educational Secretary	\N	\N	\N	\N	2023-11-08 14:23:18.149591	2023-11-08 14:23:18.151069	806e7c25-ab59-4b3e-84af-e1854b23bd79	3395
3305	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Educational Aide	Educational Aide	Educational Aide	\N	\N	\N	\N	2023-11-08 14:23:18.156946	2023-11-08 14:23:18.158312	55f96d60-5f12-4d80-a299-fcce5b6bf5e5	3397
3306	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	\N	2023-11-08 14:23:18.163748	2023-11-08 14:23:18.165202	8d0c5d32-2d49-4af1-9ab5-df7a220f67dc	3399
3307	uri://tpdm.ed-fi.org/EducatorRoleDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	\N	2023-11-08 14:23:18.169993	2023-11-08 14:23:18.171371	10c078fd-7c99-469b-b1a7-91b4c9a99c56	3401
3308	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Excellent	Excellent	Excellent	\N	\N	\N	\N	2023-11-08 14:23:18.210978	2023-11-08 14:23:18.209807	947484e4-9886-4452-90a6-eed07eb81a96	3402
3309	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Good	Good	Good	\N	\N	\N	\N	2023-11-08 14:23:18.218194	2023-11-08 14:23:18.218153	41d9264b-41c3-4d42-92be-4d437ce0030a	3403
3310	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Average	Average	Average	\N	\N	\N	\N	2023-11-08 14:23:18.223756	2023-11-08 14:23:18.223697	f73832fd-a887-4353-9bf7-8a9b392062f5	3404
3311	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Below Average	Below Average	Below Average	\N	\N	\N	\N	2023-11-08 14:23:18.229121	2023-11-08 14:23:18.229078	042780fc-f975-4fa7-b943-4e9dfe5fce31	3405
3312	uri://tpdm.ed-fi.org/IndicatorLevelDescriptor	Unsatisfactory	Unsatisfactory	Unsatisfactory	\N	\N	\N	\N	2023-11-08 14:23:18.234315	2023-11-08 14:23:18.234272	37880482-c515-48f0-b6b1-b4f5d5c722d4	3406
3313	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Traditional Certification Program	Traditional Certification Program	Traditional Certification Program	\N	\N	\N	\N	2023-11-08 14:23:18.40464	2023-11-08 14:23:18.403358	e3269119-372e-4b11-8a98-343bfde55747	3407
3314	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Post-Baccalaureate	Post-Baccalaureate	Master's + Teaching certificate	\N	\N	\N	\N	2023-11-08 14:23:18.413542	2023-11-08 14:23:18.413452	5f0d129a-e220-46f1-8b7a-c1a737763ab8	3408
3315	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Continuing Education Certificate	Continuing Education Certificate	Certificates offered by education institution	\N	\N	\N	\N	2023-11-08 14:23:18.420242	2023-11-08 14:23:18.420122	e44742eb-3f30-4337-a4be-acc88c5f3587	3409
3316	uri://tpdm.ed-fi.org/ProgramTypeDescriptor	Alternative	Alternative	Training offered in ESC's, community colleges, private vendors, etc.	\N	\N	\N	\N	2023-11-08 14:23:18.427021	2023-11-08 14:23:18.426905	42dc495b-4a07-4b01-a253-ff0d1db06e89	3410
3317	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Evaluation	Formal Evaluation	Formal Evaluation	\N	\N	\N	\N	2023-11-08 14:23:18.461688	2023-11-08 14:23:18.463928	c705448c-8e93-4a57-a299-22feb5421997	3412
3318	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Observation	Formal Observation	Formal Observation	\N	\N	\N	\N	2023-11-08 14:23:18.471248	2023-11-08 14:23:18.472893	d3d3b0e2-b435-4d75-9257-81bc4ea91ac2	3414
3319	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	Formal Evaluation Self-Rating	\N	\N	\N	\N	2023-11-08 14:23:18.47884	2023-11-08 14:23:18.480372	5e62cf64-1fff-4ef3-8573-34f6668bcd70	3416
3320	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Informal Observation	Informal Observation	Informal Observation	\N	\N	\N	\N	2023-11-08 14:23:18.48615	2023-11-08 14:23:18.48769	374a8fd2-6d9e-4fe0-b342-a1fd58e1f338	3418
3321	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Growth Measures	Student Growth Measures	Student Growth Measures	\N	\N	\N	\N	2023-11-08 14:23:18.494793	2023-11-08 14:23:18.496229	983bc09e-7f6b-44f5-aadb-7414a33023fe	3420
3322	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Informal Observation Self-Rating	Informal Observation Self-Rating	Informal Observation Self-Rating	\N	\N	\N	\N	2023-11-08 14:23:18.501668	2023-11-08 14:23:18.504011	49b87aca-adde-4a95-8ca6-292ad8debed5	3422
3323	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Formal Observation Self-Rating	Formal Observation Self-Rating	Formal Observation Self-Rating	\N	\N	\N	\N	2023-11-08 14:23:18.511548	2023-11-08 14:23:18.513012	107c4873-ee2f-47c3-839d-c9c5b53d11c2	3424
3324	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Work	Student Work	Student Work	\N	\N	\N	\N	2023-11-08 14:23:18.518735	2023-11-08 14:23:18.520665	51aa6120-a015-43b4-89cb-2e0e50c17cc3	3426
3325	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Walkthrough	Walkthrough	Walkthrough	\N	\N	\N	\N	2023-11-08 14:23:18.526754	2023-11-08 14:23:18.528784	ebe12ac0-0c2a-426c-a7a1-a7e0fc83f02b	3428
3326	uri://tpdm.ed-fi.org/PerformanceEvaluationTypeDescriptor	Student Survey	Student Survey	Student Survey	\N	\N	\N	\N	2023-11-08 14:23:18.535706	2023-11-08 14:23:18.537092	4d14799d-7ce7-4452-a767-6c72c0d43922	3430
3327	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-11-08 14:23:18.573479	2023-11-08 14:23:18.575725	4e4308a2-4c6b-4306-8a58-16f168dbe236	3432
3328	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-11-08 14:23:18.583482	2023-11-08 14:23:18.584838	b30a8e5e-cd9c-40d4-b644-9a5620e81744	3434
3329	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-11-08 14:23:18.590207	2023-11-08 14:23:18.591581	f1a5ba15-6e7d-47ce-9ffc-29ceef9a79b5	3436
3330	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-11-08 14:23:18.596641	2023-11-08 14:23:18.597997	e1f01213-29ac-4b16-b768-6a71dee5a9fe	3438
3331	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-11-08 14:23:18.603531	2023-11-08 14:23:18.604976	690444fa-dbcd-47c0-9dbb-13454b546afd	3440
3332	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-11-08 14:23:18.610785	2023-11-08 14:23:18.612103	171b4557-c4fc-4b7b-b939-7ade1d366451	3442
3333	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:18.617206	2023-11-08 14:23:18.618508	42c6dc96-8894-41fb-8385-c5ba43061e2a	3444
3334	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:18.623972	2023-11-08 14:23:18.6255	b131476d-76ca-48d4-9a7b-d1610c96e7e0	3446
3335	uri://tpdm.ed-fi.org/PerformanceEvaluationRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-11-08 14:23:18.632023	2023-11-08 14:23:18.633428	42fac98a-f106-42d1-b8de-32a35b078e28	3448
3336	uri://tpdm.ed-fi.org/IndicatorDescriptor	Administrators Employed	Number of administrators employed	The number of administrators employed by the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.667531	2023-11-08 14:23:18.666263	53d6bfde-a57d-4517-a0cc-f96cb49d1b3e	3449
3337	uri://tpdm.ed-fi.org/IndicatorDescriptor	Teachers Employed	Number of teachers employed	The number of teachers employed by the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.67509	2023-11-08 14:23:18.675043	0910ef97-b795-4381-bb22-350dfbe16c2c	3450
3338	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students Enrolled	Number of students enrolled	The number of students enrolled in the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.68039	2023-11-08 14:23:18.680353	72ff35ab-95b9-4c89-b1bc-068df1900a2b	3451
3339	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students Eligible for Free Reduced Price Lunches	Percent of students eligible for free and reduced lunches	The percent of students eligible for free and reduced lunches in the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.685706	2023-11-08 14:23:18.685663	b0454c22-9157-4bbc-a134-123de65cef35	3452
3340	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students with Limited English Proficiency	Percent of students with limited English proficiency	The percent of students with limited English proficiency in the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.692927	2023-11-08 14:23:18.692894	45ea1a39-fd04-4461-8a2e-e32e698e0bcc	3453
3341	uri://tpdm.ed-fi.org/IndicatorDescriptor	Students in Special Education	Percent of students in a special education program	The percent of students in a special education program in the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.698019	2023-11-08 14:23:18.697977	81c2b598-73e3-4799-b9ff-e58dfddf7176	3454
3342	uri://tpdm.ed-fi.org/IndicatorDescriptor	Hiring Rate	Percent of staff hired	The percent of staff hired for the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.703858	2023-11-08 14:23:18.703814	6f685510-53c3-4bbe-a01b-1f31669c8ff7	3455
3343	uri://tpdm.ed-fi.org/IndicatorDescriptor	Retention Rate	Percent of staff retained	The percent of staff retained for the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.708931	2023-11-08 14:23:18.708887	74e0ccb8-38a5-424a-878a-3a5e173e2711	3456
3344	uri://tpdm.ed-fi.org/IndicatorDescriptor	Retirement Rate	Percent of staff retired	The percent of staff retired for the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.714337	2023-11-08 14:23:18.714295	2526201f-fe71-48aa-b119-154fe42c42e4	3457
3345	uri://tpdm.ed-fi.org/IndicatorDescriptor	Projected Vacancies	Number of projected vacancies	The number of projected vacancies associated with the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.719994	2023-11-08 14:23:18.719953	fd73a3fc-2c64-4cba-a541-1b7decd0a12d	3458
3346	uri://tpdm.ed-fi.org/IndicatorDescriptor	Actual Vacancies	Number of actual vacancies	The number of actual vacancies associated with the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.725636	2023-11-08 14:23:18.725594	ede71816-61f3-40e3-8ba5-d32dee296510	3459
3347	uri://tpdm.ed-fi.org/IndicatorDescriptor	Average Salary	Average of salaries	The average of salaries collected at the aggregate level	\N	\N	\N	\N	2023-11-08 14:23:18.730774	2023-11-08 14:23:18.730652	cdfa4030-3f52-4b06-90cf-61f0738d9a77	3460
3348	uri://tpdm.ed-fi.org/IndicatorDescriptor	Average Years Employed in District	Average number of years employed in the district	The average number of years that all staff have been employed in the current district of employment	\N	\N	\N	\N	2023-11-08 14:23:18.738402	2023-11-08 14:23:18.738288	335098b1-3e75-4578-877c-25ab9b48d18d	3461
3349	uri://tpdm.ed-fi.org/IndicatorDescriptor	Application Count	Number of applications received	The number of applications received for the education organization	\N	\N	\N	\N	2023-11-08 14:23:18.744638	2023-11-08 14:23:18.744592	c2db32e9-a6d3-4563-b332-9b4d86dab693	3462
3350	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-11-08 14:23:18.779437	2023-11-08 14:23:18.783325	e58a7e48-5be8-486a-a5ee-cffd30c859dd	3464
3351	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-11-08 14:23:18.794953	2023-11-08 14:23:18.796402	f395ea26-2fa6-4cc4-ac4c-2c728513696c	3466
3352	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-11-08 14:23:18.802137	2023-11-08 14:23:18.803504	7e0a5ad1-d6e1-4a5c-84b3-7285922409d5	3468
3353	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-11-08 14:23:18.809756	2023-11-08 14:23:18.811699	3af97984-c8e1-4a20-8129-e1eb5a83982d	3470
3354	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-11-08 14:23:18.818117	2023-11-08 14:23:18.819544	7be9afb0-4d5a-47c6-bb73-efff85d51a1d	3472
3355	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-11-08 14:23:18.825237	2023-11-08 14:23:18.826805	acbed319-69e1-4273-9f9e-20458876b701	3474
3356	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:18.832482	2023-11-08 14:23:18.833821	f20ee5bc-ca9d-4f66-84e3-3b3d9b90ff88	3476
3357	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:18.839384	2023-11-08 14:23:18.841197	9429c4d7-cd5c-404c-9ff0-01959cc53786	3478
3358	uri://tpdm.ed-fi.org/EvaluationElementRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-11-08 14:23:18.849538	2023-11-08 14:23:18.85088	cbaa1bf1-1013-402e-b25a-9b8a84ac2f92	3480
3359	uri://tpdm.ed-fi.org/GenderDescriptor	Female	Female	Female	\N	\N	\N	\N	2023-11-08 14:23:18.885423	2023-11-08 14:23:18.887797	50cc826c-ed25-4cee-8e12-2228bb42a2f1	3482
3360	uri://tpdm.ed-fi.org/GenderDescriptor	Male	Male	Male	\N	\N	\N	\N	2023-11-08 14:23:18.895087	2023-11-08 14:23:18.896449	3f3e433b-c016-45be-ab33-56fd2032b9c4	3484
3361	uri://tpdm.ed-fi.org/GenderDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 14:23:18.902914	2023-11-08 14:23:18.904367	0b696986-0349-4770-8e0c-48e45d871bd6	3486
3362	uri://tpdm.ed-fi.org/GenderDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	\N	2023-11-08 14:23:18.909766	2023-11-08 14:23:18.911189	e1cc2f9d-48d1-4d08-9156-63b28dd0ce12	3488
3363	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-11-08 14:23:18.944086	2023-11-08 14:23:18.946461	578d34d0-7363-40fc-b5cd-45ec98792d2a	3490
3364	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-11-08 14:23:18.953586	2023-11-08 14:23:18.955139	3fc51c7f-f253-4669-acf0-ae37f2f22533	3492
3365	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-11-08 14:23:18.961011	2023-11-08 14:23:18.962835	09369b9c-5be9-4295-8c3a-16848299b2a7	3494
3366	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-11-08 14:23:18.969219	2023-11-08 14:23:18.970608	8b482cb7-f9c6-40d1-ae10-6f4020a323dc	3496
3367	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-11-08 14:23:18.976869	2023-11-08 14:23:18.978146	d00776c8-b2c7-4f2f-855f-8adbcba5bddc	3498
3368	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-11-08 14:23:18.983722	2023-11-08 14:23:18.985043	b499fa89-48ec-421e-a344-a6175742ba5a	3500
3369	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:18.990838	2023-11-08 14:23:18.992213	cc10e38d-7444-492b-9c19-113b609e765f	3502
3370	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:18.997982	2023-11-08 14:23:18.99946	9b2f9d38-1aaf-48b7-8341-58ea71a259b6	3504
3371	uri://tpdm.ed-fi.org/RubricRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-11-08 14:23:19.005443	2023-11-08 14:23:19.006753	b2801f74-92eb-489f-96fa-6da2f839f31d	3506
3372	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Fail	Fail	Fail	\N	\N	\N	\N	2023-11-08 14:23:19.038502	2023-11-08 14:23:19.040865	3b127b42-34a9-406e-9dba-6a902bc704bf	3508
3373	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	\N	2023-11-08 14:23:19.047676	2023-11-08 14:23:19.049089	1e6d0bda-bd08-43ac-9d08-c9e535eda964	3510
3374	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Pass	Pass	Pass	\N	\N	\N	\N	2023-11-08 14:23:19.05505	2023-11-08 14:23:19.056379	32a3e4d3-5293-447b-af0e-20bb91fe9de8	3512
3375	uri://tpdm.ed-fi.org/EnglishLanguageExamDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 14:23:19.061415	2023-11-08 14:23:19.062952	b397e6ca-3ad4-4962-ad11-3f014ac07d95	3514
3376	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Developing	Developing	Developing	\N	\N	\N	\N	2023-11-08 14:23:19.096485	2023-11-08 14:23:19.098704	377f5298-9cb2-4533-b03d-3f51091c8305	3516
3377	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Minimally Effective	Minimally Effective	Minimally Effective	\N	\N	\N	\N	2023-11-08 14:23:19.105378	2023-11-08 14:23:19.107366	eb21fd2e-b070-4db1-a476-fdfec0c8f306	3518
3378	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Ineffective	Ineffective	Ineffective	\N	\N	\N	\N	2023-11-08 14:23:19.112806	2023-11-08 14:23:19.114668	54560e7d-d658-4b0d-91e4-d19a6ec84d6a	3520
3379	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Accomplished	Accomplished	Accomplished	\N	\N	\N	\N	2023-11-08 14:23:19.12106	2023-11-08 14:23:19.122701	45743633-e8f7-4c14-9fa8-b6f86727e52f	3522
3380	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Highly Effective	Highly Effective	Highly Effective	\N	\N	\N	\N	2023-11-08 14:23:19.128588	2023-11-08 14:23:19.130006	8a33c210-3c73-4340-9425-a995403ce463	3524
3381	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Effective	Effective	Effective	\N	\N	\N	\N	2023-11-08 14:23:19.134582	2023-11-08 14:23:19.13598	625cb7d1-68c9-490c-8f59-12673fcb9033	3526
3382	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Not Demonstrated	Not Demonstrated	Not Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:19.141922	2023-11-08 14:23:19.143258	1a6788ab-849b-4370-9e94-828c6206381e	3528
3383	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Demonstrated	Demonstrated	Demonstrated	\N	\N	\N	\N	2023-11-08 14:23:19.148087	2023-11-08 14:23:19.149427	a572201a-d0d2-4f57-97e2-9021ddb5f3b3	3530
3384	uri://tpdm.ed-fi.org/EvaluationRatingLevelDescriptor	Skilled	Skilled	Skilled	\N	\N	\N	\N	2023-11-08 14:23:19.156736	2023-11-08 14:23:19.158129	6558e255-3b42-4af2-80d8-e88d089e13d8	3532
3385	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Fellowship	Fellowship	Fellowship	\N	\N	\N	\N	2023-11-08 14:23:19.191497	2023-11-08 14:23:19.193913	c1cd928f-93e7-4212-81b4-43328046a8d9	3534
3386	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Internship	Internship	Internship	\N	\N	\N	\N	2023-11-08 14:23:19.199981	2023-11-08 14:23:19.201702	c205a7c4-8306-42c0-b4f6-4ec44b9b2c9b	3536
3387	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Residency	Residency	Residency	\N	\N	\N	\N	2023-11-08 14:23:19.206866	2023-11-08 14:23:19.208467	bd904c4b-07a4-4272-8eca-c1e4df03759c	3538
3388	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Traditional	Traditional	Traditional	\N	\N	\N	\N	2023-11-08 14:23:19.214084	2023-11-08 14:23:19.215538	386e645b-421d-45d8-b8dd-684850d22928	3540
3389	uri://tpdm.ed-fi.org/EPPProgramPathwayDescriptor	Other	Other	Other	\N	\N	\N	\N	2023-11-08 14:23:19.220966	2023-11-08 14:23:19.222343	31c2a3ad-e94f-4779-a5aa-9c04c74247be	3542
3390	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Enrollment	Student Enrollment	Student Enrollment	\N	\N	\N	\N	2023-11-08 14:23:19.258264	2023-11-08 14:23:19.257038	eaf7ad6e-2281-4525-b634-87d7c8aaedb1	3543
3391	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Staff Employment	Staff Employment	Staff Employment	\N	\N	\N	\N	2023-11-08 14:23:19.265301	2023-11-08 14:23:19.265256	e19d3bdd-ff3b-4f67-b817-97df73a0b318	3544
3392	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Programs	Student Programs	Student Programs	\N	\N	\N	\N	2023-11-08 14:23:19.270582	2023-11-08 14:23:19.270528	3ab769a8-42dc-4be9-88df-099e7560d727	3545
3393	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Demographics	Student Demographics	Student Demographics	\N	\N	\N	\N	2023-11-08 14:23:19.275631	2023-11-08 14:23:19.275512	0926baa5-0903-40ad-a9aa-33ff22837d2f	3546
3394	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Staff Demographics	Staff Demographics	Staff Demographics	\N	\N	\N	\N	2023-11-08 14:23:19.281693	2023-11-08 14:23:19.28163	80499dba-d3a2-4edf-93c9-fc631262aeef	3547
3395	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Academics	Student Academics	Student Academics	\N	\N	\N	\N	2023-11-08 14:23:19.286448	2023-11-08 14:23:19.286406	bd53bd5a-83ac-4045-8ee2-0649ee659555	3548
3396	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Student Assessment	Student Assessment	Student Assessment	\N	\N	\N	\N	2023-11-08 14:23:19.291961	2023-11-08 14:23:19.291919	47966d73-90d6-4bd4-8e34-d30e48d36711	3549
3397	uri://tpdm.ed-fi.org/IndicatorGroupDescriptor	Survey Response	Survey Response	Survey Response	\N	\N	\N	\N	2023-11-08 14:23:19.296575	2023-11-08 14:23:19.296459	12a300a2-688f-4338-9498-eb3d769005a2	3550
3398	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Alternative Program	Alternative Program	Alternative Program	\N	\N	\N	\N	2023-11-08 14:23:19.33359	2023-11-08 14:23:19.335894	490ca5e4-0219-45cb-bc25-2a6b9e9bd0e5	3552
3399	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Center for Professional Development	Center for Professional Development	Center for Professional Development	\N	\N	\N	\N	2023-11-08 14:23:19.342504	2023-11-08 14:23:19.344119	a7885bfd-0fb2-417d-a627-ccecc060f696	3554
3400	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Vocational Experience	Vocational Experience	Vocational Experience	\N	\N	\N	\N	2023-11-08 14:23:19.349218	2023-11-08 14:23:19.350624	13808803-49d8-4920-a467-2563a804b17d	3556
3401	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Certification by Exam	Certification by Exam	Certification by Exam	\N	\N	\N	\N	2023-11-08 14:23:19.355435	2023-11-08 14:23:19.356757	b0b29d98-3afa-46bc-a152-a967eb4917dc	3558
3402	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Out of State	Out of State	Out of State	\N	\N	\N	\N	2023-11-08 14:23:19.361865	2023-11-08 14:23:19.363176	cdd2ea23-b3c3-48d4-bbab-b30ecf20ae35	3560
3403	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Paraprofessional Program	Paraprofessional Program	Paraprofessional Program	\N	\N	\N	\N	2023-11-08 14:23:19.36815	2023-11-08 14:23:19.369751	43878360-15ce-4058-a696-0d96055e5273	3562
3404	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Post-Baccalaureate	Post-Baccalaureate	Post-Baccalaureate	\N	\N	\N	\N	2023-11-08 14:23:19.375843	2023-11-08 14:23:19.377375	a27e76df-86ec-4218-a32b-5d16896040b9	3564
3405	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Permit Program	Permit Program	Permit Program	\N	\N	\N	\N	2023-11-08 14:23:19.38247	2023-11-08 14:23:19.383858	699adbd2-f158-4dc9-ae8c-58be73054177	3566
3406	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Standard Program	Standard Program	Standard Program	\N	\N	\N	\N	2023-11-08 14:23:19.388804	2023-11-08 14:23:19.390413	6653d6e9-d6a1-4587-8f7f-6f5c8dc1a9b5	3568
3407	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	\N	2023-11-08 14:23:19.395239	2023-11-08 14:23:19.396635	e88c351e-de3b-4eb1-ab23-59f1aa00cbe2	3570
3408	uri://tpdm.ed-fi.org/CertificationRouteDescriptor	Temporary Teaching Certificate	Temporary Teaching Certificate	Temporary Teaching Certificate	\N	\N	\N	\N	2023-11-08 14:23:19.401442	2023-11-08 14:23:19.402735	c1bfe252-6cb9-4acb-bc8b-9f99c6ba7c74	3572
3409	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Not Rated	Not Rated	Not Rated	\N	\N	\N	\N	2023-11-08 14:23:19.436154	2023-11-08 14:23:19.438718	ae4a9d9e-f46c-4fbf-ade1-5796475df740	3574
3410	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited	Accredited	Accredited	\N	\N	\N	\N	2023-11-08 14:23:19.445856	2023-11-08 14:23:19.447319	0010cce7-22be-448e-849a-949ed5e601c1	3576
3411	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited - Warned	Accredited - Warned	Accredited - Warned	\N	\N	\N	\N	2023-11-08 14:23:19.451871	2023-11-08 14:23:19.453278	3060dfec-b12e-4712-939c-982633f782e8	3578
3412	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Accredited - Probation	Accredited - Probation	Accredited - Probation	\N	\N	\N	\N	2023-11-08 14:23:19.458294	2023-11-08 14:23:19.459879	d19e603b-1b0f-41e1-8ec1-6ed436fcf62e	3580
3413	uri://tpdm.ed-fi.org/AccreditationStatusDescriptor	Not Accredited	Not Accredited	Not Accredited	\N	\N	\N	\N	2023-11-08 14:23:19.464725	2023-11-08 14:23:19.466041	e71db103-01fb-4b18-aefe-ddf1820b8bca	3582
\.


--
-- Data for Name: descriptormapping; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptormapping (mappednamespace, mappedvalue, namespace, value, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: descriptormappingmodelentity; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptormappingmodelentity (mappednamespace, mappedvalue, namespace, value, modelentitydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: diagnosisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diagnosisdescriptor (diagnosisdescriptorid) FROM stdin;
2502
2503
\.


--
-- Data for Name: diplomaleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomaleveldescriptor (diplomaleveldescriptorid) FROM stdin;
2795
2796
2797
2798
2799
2800
2801
\.


--
-- Data for Name: diplomatypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomatypedescriptor (diplomatypedescriptorid) FROM stdin;
2570
2572
2573
2571
2574
2575
2576
2577
2578
2579
2580
2581
2582
2583
2584
2585
2586
\.


--
-- Data for Name: disabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydescriptor (disabilitydescriptorid) FROM stdin;
3136
3135
3138
3137
3139
3140
3141
3142
3143
3144
3145
3146
3147
3149
3148
3150
3151
3152
3153
3154
\.


--
-- Data for Name: disabilitydesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydesignationdescriptor (disabilitydesignationdescriptorid) FROM stdin;
2610
2611
2612
\.


--
-- Data for Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydeterminationsourcetypedescriptor (disabilitydeterminationsourcetypedescriptorid) FROM stdin;
1049
1050
1048
1051
1053
1052
1054
1055
1056
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineaction (disciplineactionidentifier, disciplinedate, studentusi, actualdisciplineactionlength, assignmentschoolid, disciplineactionlength, disciplineactionlengthdifferencereasondescriptorid, iepplacementmeetingindicator, relatedtozerotolerancepolicy, responsibilityschoolid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineactiondiscipline; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactiondiscipline (disciplineactionidentifier, disciplinedate, studentusi, disciplinedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionlengthdifferencereasondescriptor (disciplineactionlengthdifferencereasondescriptorid) FROM stdin;
410
412
413
411
414
416
415
417
418
419
420
421
\.


--
-- Data for Name: disciplineactionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstaff (disciplineactionidentifier, disciplinedate, studentusi, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (disciplineactionidentifier, disciplinedate, studentusi, behaviordescriptorid, incidentidentifier, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplinedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplinedescriptor (disciplinedescriptorid) FROM stdin;
3030
3031
3034
3038
3032
3033
3037
3029
3035
3036
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincident (incidentidentifier, schoolid, casenumber, incidentcost, incidentdate, incidentdescription, incidentlocationdescriptorid, incidenttime, reportedtolawenforcement, reporterdescriptiondescriptorid, reportername, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineincidentbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentbehavior (incidentidentifier, schoolid, behaviordescriptorid, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentexternalparticipant; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentexternalparticipant (incidentidentifier, schoolid, disciplineincidentparticipationcodedescriptorid, firstname, lastsurname, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentparticipationcodedescriptor (disciplineincidentparticipationcodedescriptorid) FROM stdin;
1182
1183
1184
1185
\.


--
-- Data for Name: disciplineincidentweapon; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentweapon (incidentidentifier, schoolid, weapondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationalenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationalenvironmentdescriptor (educationalenvironmentdescriptorid) FROM stdin;
305
306
308
307
310
312
311
309
314
313
315
316
317
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontent (contentidentifier, additionalauthorsindicator, contentclassdescriptorid, cost, costratedescriptorid, description, interactivitystyledescriptorid, learningresourcemetadatauri, learningstandardid, namespace, publicationdate, publicationyear, publisher, shortdescription, timerequired, userightsurl, version, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriategradelevel (contentidentifier, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriatesex (contentidentifier, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentauthor (contentidentifier, author, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceeducationcontent (contentidentifier, derivativesourcecontentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourcelearningresourcemetadatauri (contentidentifier, derivativesourcelearningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceuri (contentidentifier, derivativesourceuri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentlanguage (contentidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganization (educationorganizationid, nameofinstitution, operationalstatusdescriptorid, shortnameofinstitution, website, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddress (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddressperiod (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationassociationtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationassociationtypedescriptor (educationorganizationassociationtypedescriptorid) FROM stdin;
129
130
131
\.


--
-- Data for Name: educationorganizationcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategory (educationorganizationid, educationorganizationcategorydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategorydescriptor (educationorganizationcategorydescriptorid) FROM stdin;
14
20
17
18
15
16
19
21
3195
3196
\.


--
-- Data for Name: educationorganizationidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationcode (educationorganizationid, educationorganizationidentificationsystemdescriptorid, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationsystemdescriptor (educationorganizationidentificationsystemdescriptorid) FROM stdin;
959
963
960
962
966
958
961
967
957
964
965
\.


--
-- Data for Name: educationorganizationindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicator (educationorganizationid, indicatordescriptorid, designatedby, indicatorgroupdescriptorid, indicatorleveldescriptorid, indicatorvalue, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicatorperiod (educationorganizationid, indicatordescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinstitutiontelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinstitutiontelephone (educationorganizationid, institutiontelephonenumbertypedescriptorid, telephonenumber, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinternationaladdress (educationorganizationid, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinterventionprescriptionassociation (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, begindate, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetwork; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetwork (educationorganizationnetworkid, networkpurposedescriptorid) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetworkassociation (educationorganizationnetworkid, membereducationorganizationid, begindate, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationpeerassociation (educationorganizationid, peereducationorganizationid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationplandescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationplandescriptor (educationplandescriptorid) FROM stdin;
1119
1121
1120
1122
1123
1124
1125
1126
1127
1128
1129
1130
\.


--
-- Data for Name: educationservicecenter; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationservicecenter (educationservicecenterid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: electronicmailtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.electronicmailtypedescriptor (electronicmailtypedescriptorid) FROM stdin;
2777
2778
2780
2779
\.


--
-- Data for Name: eligibilitydelayreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eligibilitydelayreasondescriptor (eligibilitydelayreasondescriptorid) FROM stdin;
1295
1300
1296
1297
1293
1299
1301
1294
1298
\.


--
-- Data for Name: eligibilityevaluationtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eligibilityevaluationtypedescriptor (eligibilityevaluationtypedescriptorid) FROM stdin;
396
397
\.


--
-- Data for Name: employmentstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.employmentstatusdescriptor (employmentstatusdescriptorid) FROM stdin;
349
351
356
352
355
353
348
350
354
357
\.


--
-- Data for Name: enrollmenttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.enrollmenttypedescriptor (enrollmenttypedescriptorid) FROM stdin;
984
983
985
\.


--
-- Data for Name: entrygradelevelreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrygradelevelreasondescriptor (entrygradelevelreasondescriptorid) FROM stdin;
4
8
9
1
6
12
13
3
5
10
2
7
11
\.


--
-- Data for Name: entrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrytypedescriptor (entrytypedescriptorid) FROM stdin;
2522
2525
2524
2523
2521
\.


--
-- Data for Name: evaluationdelayreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.evaluationdelayreasondescriptor (evaluationdelayreasondescriptorid) FROM stdin;
121
122
123
\.


--
-- Data for Name: evaluationrubricdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.evaluationrubricdimension (evaluationrubricrating, programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, evaluationcriteriondescription, evaluationrubricratingleveldescriptorid, rubricdimensionsortorder, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: eventcircumstancedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eventcircumstancedescriptor (eventcircumstancedescriptorid) FROM stdin;
258
257
255
256
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
\.


--
-- Data for Name: exitwithdrawtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.exitwithdrawtypedescriptor (exitwithdrawtypedescriptorid) FROM stdin;
3063
3064
3066
3065
3067
3068
3069
3070
3071
3072
3073
3074
3076
3075
3077
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.feederschoolassociation (begindate, feederschoolid, schoolid, enddate, feederrelationshipdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: financialcollectiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.financialcollectiondescriptor (financialcollectiondescriptorid) FROM stdin;
3156
3155
3158
3157
3159
\.


--
-- Data for Name: functiondimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.functiondimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: functiondimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.functiondimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: funddimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.funddimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: funddimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.funddimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, enddate, reasonexiteddescriptorid, servedoutsideofregularsession, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociationprogramparticipationstatus (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, participationstatusdescriptorid, statusbegindate, designatedby, statusenddate, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.grade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, currentgradeasofdate, currentgradeindicator, diagnosticstatement, gradeearneddescription, lettergradeearned, numericgradeearned, performancebaseconversiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentry (gradebookentryidentifier, namespace, dateassigned, description, duedate, duetime, gradebookentrytypedescriptorid, gradingperioddescriptorid, gradingperiodname, localcoursecode, maxpoints, schoolid, schoolyear, sectionidentifier, sessionname, sourcesectionidentifier, title, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentrylearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrylearningstandard (gradebookentryidentifier, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrytypedescriptor (gradebookentrytypedescriptorid) FROM stdin;
2771
2770
2772
2769
2773
2775
2774
2776
\.


--
-- Data for Name: gradelearningstandardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradelearningstandardgrade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, learningstandardid, diagnosticstatement, lettergradeearned, numericgradeearned, performancebaseconversiondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: gradeleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradeleveldescriptor (gradeleveldescriptorid) FROM stdin;
318
320
321
319
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
341
340
342
343
3225
3226
3227
3228
3229
3230
3231
3232
3233
\.


--
-- Data for Name: gradepointaveragetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradepointaveragetypedescriptor (gradepointaveragetypedescriptorid) FROM stdin;
1254
1255
\.


--
-- Data for Name: gradetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradetypedescriptor (gradetypedescriptorid) FROM stdin;
3105
3104
3107
3106
3108
3109
3110
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperiod (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear, begindate, enddate, periodsequence, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradingperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperioddescriptor (gradingperioddescriptorid) FROM stdin;
3164
3166
3167
3165
3169
3168
3170
3171
3173
3172
3174
3175
3177
3176
3178
3179
3180
3181
3182
3183
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplan (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, individualplan, totalrequiredcreditconversion, totalrequiredcredits, totalrequiredcredittypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycourse (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname, creditconversion, credits, credittypedescriptorid, whentakengradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycoursecourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycoursecourse (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname, coursecode, courseeducationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycreditcategory (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, creditcategorydescriptorid, creditconversion, credits, credittypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbysubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbysubject (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, academicsubjectdescriptorid, creditconversion, credits, credittypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessment (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentperformancelevel (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, performanceleveldescriptorid, performancelevelindicatorname, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentscore (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplantypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplantypedescriptor (graduationplantypedescriptorid) FROM stdin;
302
300
303
301
304
\.


--
-- Data for Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gunfreeschoolsactreportingstatusdescriptor (gunfreeschoolsactreportingstatusdescriptorid) FROM stdin;
954
955
953
956
\.


--
-- Data for Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprimarynighttimeresidencedescriptor (homelessprimarynighttimeresidencedescriptorid) FROM stdin;
2977
2979
2980
2978
\.


--
-- Data for Name: homelessprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprogramservicedescriptor (homelessprogramservicedescriptorid) FROM stdin;
2735
2734
2736
2737
2738
2740
2739
2741
\.


--
-- Data for Name: ideapartdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.ideapartdescriptor (ideapartdescriptorid) FROM stdin;
220
221
\.


--
-- Data for Name: identificationdocumentusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.identificationdocumentusedescriptor (identificationdocumentusedescriptorid) FROM stdin;
2683
2684
2685
\.


--
-- Data for Name: incidentlocationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.incidentlocationdescriptor (incidentlocationdescriptorid) FROM stdin;
188
190
189
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
\.


--
-- Data for Name: indicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatordescriptor (indicatordescriptorid) FROM stdin;
3336
3337
3338
3339
3340
3341
3342
3343
3344
3345
3346
3347
3348
3349
\.


--
-- Data for Name: indicatorgroupdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorgroupdescriptor (indicatorgroupdescriptorid) FROM stdin;
3390
3391
3392
3393
3394
3395
3396
3397
\.


--
-- Data for Name: indicatorleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorleveldescriptor (indicatorleveldescriptorid) FROM stdin;
3308
3309
3310
3311
3312
\.


--
-- Data for Name: institutiontelephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.institutiontelephonenumbertypedescriptor (institutiontelephonenumbertypedescriptorid) FROM stdin;
1582
1583
1584
1586
1587
1581
1585
\.


--
-- Data for Name: interactivitystyledescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interactivitystyledescriptor (interactivitystyledescriptorid) FROM stdin;
2923
2925
2922
2924
\.


--
-- Data for Name: internetaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccessdescriptor (internetaccessdescriptorid) FROM stdin;
3043
3046
3044
3045
3047
3048
3050
3049
3051
3052
3053
3054
3055
\.


--
-- Data for Name: internetaccesstypeinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccesstypeinresidencedescriptor (internetaccesstypeinresidencedescriptorid) FROM stdin;
2460
2459
2458
2461
2463
2462
2464
2465
2466
\.


--
-- Data for Name: internetperformanceinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetperformanceinresidencedescriptor (internetperformanceinresidencedescriptorid) FROM stdin;
1248
1249
1250
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.intervention (educationorganizationid, interventionidentificationcode, begindate, deliverymethoddescriptorid, enddate, interventionclassdescriptorid, maxdosage, mindosage, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriategradelevel (educationorganizationid, interventionidentificationcode, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriatesex (educationorganizationid, interventionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionclassdescriptor (interventionclassdescriptorid) FROM stdin;
2791
2794
2793
2792
\.


--
-- Data for Name: interventiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventiondiagnosis (educationorganizationid, interventionidentificationcode, diagnosisdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneducationcontent (educationorganizationid, interventionidentificationcode, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneffectivenessratingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneffectivenessratingdescriptor (interventioneffectivenessratingdescriptorid) FROM stdin;
213
214
215
216
217
218
219
\.


--
-- Data for Name: interventioninterventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioninterventionprescription (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionlearningresourcemetadatauri (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionmeetingtime (educationorganizationid, interventionidentificationcode, endtime, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: interventionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionpopulationserved (educationorganizationid, interventionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescription (educationorganizationid, interventionprescriptionidentificationcode, deliverymethoddescriptorid, interventionclassdescriptorid, maxdosage, mindosage, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriategradelevel (educationorganizationid, interventionprescriptionidentificationcode, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriatesex (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptiondiagnosis (educationorganizationid, interventionprescriptionidentificationcode, diagnosisdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptioneducationcontent (educationorganizationid, interventionprescriptionidentificationcode, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionlearningresourcemetadatauri (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionpopulationserved (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionuri (educationorganizationid, interventionprescriptionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstaff (educationorganizationid, interventionidentificationcode, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudy (educationorganizationid, interventionstudyidentificationcode, deliverymethoddescriptorid, interventionclassdescriptorid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, participants, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriategradelevel (educationorganizationid, interventionstudyidentificationcode, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriatesex (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyeducationcontent (educationorganizationid, interventionstudyidentificationcode, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyinterventioneffectiveness (educationorganizationid, interventionstudyidentificationcode, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudylearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudylearningresourcemetadatauri (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudypopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudypopulationserved (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudystateabbreviation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudystateabbreviation (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyuri (educationorganizationid, interventionstudyidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionuri (educationorganizationid, interventionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: languagedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languagedescriptor (languagedescriptorid) FROM stdin;
430
431
429
432
433
434
435
436
437
438
439
440
441
442
443
444
446
445
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
519
518
520
522
521
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
576
575
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
598
599
600
601
602
603
604
605
606
607
608
609
610
612
611
613
614
615
616
617
618
619
620
621
622
623
624
625
626
627
628
629
630
631
632
633
634
635
636
637
638
639
640
641
642
643
644
645
646
647
648
649
650
651
652
653
654
655
658
659
669
671
676
678
681
684
690
694
705
706
710
718
721
727
731
734
737
742
745
748
751
754
766
767
773
784
785
790
796
802
805
808
813
817
819
821
827
828
830
833
836
841
844
849
854
860
862
866
868
870
874
879
882
886
890
892
893
898
899
903
906
911
656
660
661
664
668
670
673
674
677
679
680
683
687
693
696
698
699
703
712
715
722
725
728
736
747
750
753
757
761
763
770
776
777
779
786
791
794
795
798
804
810
811
816
823
826
829
835
837
840
845
847
853
856
861
863
865
871
872
875
878
883
885
894
896
902
905
908
909
912
657
662
667
686
695
701
702
708
713
716
720
723
729
730
732
739
740
741
743
746
749
752
758
759
762
764
769
771
774
778
780
782
788
792
797
800
806
814
818
824
832
838
846
848
851
855
858
859
864
877
881
887
895
901
910
663
665
666
672
675
682
685
688
689
691
692
697
700
704
707
709
711
714
717
719
724
726
733
735
738
744
755
756
760
765
768
772
775
781
783
787
789
793
799
801
803
807
809
812
815
820
822
825
831
834
839
842
843
850
852
857
867
869
873
876
880
884
888
889
891
897
900
904
907
\.


--
-- Data for Name: languageinstructionprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageinstructionprogramservicedescriptor (languageinstructionprogramservicedescriptorid) FROM stdin;
2527
2526
2528
2529
2530
2533
2531
2532
2534
2535
2536
2537
2538
2539
2540
2541
2542
\.


--
-- Data for Name: languageusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageusedescriptor (languageusedescriptorid) FROM stdin;
2512
2509
2513
2514
2510
2515
2511
2516
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandard (learningstandardid, coursetitle, description, learningstandardcategorydescriptorid, learningstandarditemcode, learningstandardscopedescriptorid, namespace, parentlearningstandardid, successcriteria, uri, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardacademicsubject (learningstandardid, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcategorydescriptor (learningstandardcategorydescriptorid) FROM stdin;
2615
2616
2614
\.


--
-- Data for Name: learningstandardcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandard (learningstandardid, begindate, enddate, mandatingeducationorganizationid, publicationdate, publicationstatusdescriptorid, publicationyear, title, uri, version, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandardauthor (learningstandardid, author, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalenceassociation (namespace, sourcelearningstandardid, targetlearningstandardid, effectivedate, learningstandardequivalencestrengthdescription, learningstandardequivalencestrengthdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalencestrengthdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalencestrengthdescriptor (learningstandardequivalencestrengthdescriptorid) FROM stdin;
3161
3163
3160
3162
\.


--
-- Data for Name: learningstandardgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardgradelevel (learningstandardid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardidentificationcode (learningstandardid, contentstandardname, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardscopedescriptor (learningstandardscopedescriptorid) FROM stdin;
2712
2711
2713
2714
2715
2716
\.


--
-- Data for Name: levelofeducationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.levelofeducationdescriptor (levelofeducationdescriptorid) FROM stdin;
3056
3058
3057
3059
3061
3060
3062
\.


--
-- Data for Name: licensestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensestatusdescriptor (licensestatusdescriptorid) FROM stdin;
185
186
187
\.


--
-- Data for Name: licensetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensetypedescriptor (licensetypedescriptorid) FROM stdin;
2682
2686
2687
2688
2689
2690
2691
2693
2692
2694
2695
2696
2697
2698
2699
\.


--
-- Data for Name: limitedenglishproficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.limitedenglishproficiencydescriptor (limitedenglishproficiencydescriptorid) FROM stdin;
2518
2519
2520
2517
\.


--
-- Data for Name: localaccount; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localaccount (accountidentifier, educationorganizationid, fiscalyear, accountname, chartofaccountidentifier, chartofaccounteducationorganizationid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localaccountreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localaccountreportingtag (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid, tagvalue, createdate) FROM stdin;
\.


--
-- Data for Name: localactual; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localactual (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localbudget; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localbudget (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localcontractedstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localcontractedstaff (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localedescriptor (localedescriptorid) FROM stdin;
1131
1138
1141
1133
1135
1140
1134
1136
1139
1132
1137
1142
\.


--
-- Data for Name: localeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagency (localeducationagencyid, charterstatusdescriptorid, educationservicecenterid, localeducationagencycategorydescriptorid, parentlocaleducationagencyid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: localeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyaccountability (localeducationagencyid, schoolyear, gunfreeschoolsactreportingstatusdescriptorid, schoolchoiceimplementstatusdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: localeducationagencycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencycategorydescriptor (localeducationagencycategorydescriptorid) FROM stdin;
362
363
365
364
367
366
368
369
370
371
372
\.


--
-- Data for Name: localeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyfederalfunds (localeducationagencyid, fiscalyear, innovativedollarsspent, innovativedollarsspentstrategicpriorities, innovativeprogramsfundsreceived, schoolimprovementallocation, schoolimprovementreservedfundspercentage, stateassessmentadministrationfunding, supplementaleducationalservicesfundsspent, supplementaleducationalservicesperpupilexpenditure, createdate) FROM stdin;
\.


--
-- Data for Name: localencumbrance; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localencumbrance (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localpayroll; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localpayroll (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.location (classroomidentificationcode, schoolid, maximumnumberofseats, optimalnumberofseats, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.magnetspecialprogramemphasisschooldescriptor (magnetspecialprogramemphasisschooldescriptorid) FROM stdin;
1251
1252
1253
\.


--
-- Data for Name: mediumofinstructiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.mediumofinstructiondescriptor (mediumofinstructiondescriptorid) FROM stdin;
2887
2892
2895
2898
2889
2894
2899
2890
2891
2896
2888
2893
2897
\.


--
-- Data for Name: methodcreditearneddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.methodcreditearneddescriptor (methodcreditearneddescriptorid) FROM stdin;
402
403
404
405
406
407
408
409
\.


--
-- Data for Name: migranteducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.migranteducationprogramservicedescriptor (migranteducationprogramservicedescriptorid) FROM stdin;
1177
1175
1176
1178
1179
1180
1181
\.


--
-- Data for Name: modelentitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.modelentitydescriptor (modelentitydescriptorid) FROM stdin;
\.


--
-- Data for Name: monitoreddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.monitoreddescriptor (monitoreddescriptorid) FROM stdin;
2700
2701
2702
\.


--
-- Data for Name: neglectedordelinquentprogramdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramdescriptor (neglectedordelinquentprogramdescriptorid) FROM stdin;
982
986
987
988
989
990
\.


--
-- Data for Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramservicedescriptor (neglectedordelinquentprogramservicedescriptorid) FROM stdin;
1302
1303
1305
1304
1306
1307
1308
1309
1310
1311
1312
1313
1314
\.


--
-- Data for Name: networkpurposedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.networkpurposedescriptor (networkpurposedescriptorid) FROM stdin;
2875
2874
\.


--
-- Data for Name: objectdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessment (assessmentidentifier, identificationcode, namespace, academicsubjectdescriptorid, description, maxrawscore, nomenclature, parentidentificationcode, percentofassessment, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentassessmentitem (assessmentidentifier, identificationcode, namespace, assessmentitemidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentlearningstandard (assessmentidentifier, identificationcode, namespace, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentperformancelevel (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, maximumscore, minimumscore, performancelevelindicatorname, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentscore (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid, maximumscore, minimumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffposition (educationorganizationid, requisitionnumber, dateposted, datepostingremoved, employmentstatusdescriptorid, positiontitle, postingresultdescriptorid, programassignmentdescriptorid, staffclassificationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: openstaffpositionacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositionacademicsubject (educationorganizationid, requisitionnumber, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffpositioninstructionalgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositioninstructionalgradelevel (educationorganizationid, requisitionnumber, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: operationalstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalstatusdescriptor (operationalstatusdescriptorid) FROM stdin;
936
937
938
939
940
942
943
941
\.


--
-- Data for Name: operationalunitdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalunitdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: operationalunitdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalunitdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: organizationdepartment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.organizationdepartment (organizationdepartmentid, academicsubjectdescriptorid, parenteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: othernametypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.othernametypedescriptor (othernametypedescriptorid) FROM stdin;
2731
2732
2730
2733
\.


--
-- Data for Name: participationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationdescriptor (participationdescriptorid) FROM stdin;
997
998
996
999
\.


--
-- Data for Name: participationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationstatusdescriptor (participationstatusdescriptorid) FROM stdin;
2602
2604
2603
2605
2606
\.


--
-- Data for Name: performancebaseconversiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performancebaseconversiondescriptor (performancebaseconversiondescriptorid) FROM stdin;
2555
2557
2556
2558
2559
2560
2561
\.


--
-- Data for Name: performanceleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performanceleveldescriptor (performanceleveldescriptorid) FROM stdin;
2402
2407
2409
2401
2403
2405
2406
2408
2411
2412
2413
2400
2404
2410
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.person (personid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: personalinformationverificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.personalinformationverificationdescriptor (personalinformationverificationdescriptorid) FROM stdin;
2385
2390
2393
2398
2388
2391
2396
2387
2389
2394
2397
2386
2392
2395
2399
\.


--
-- Data for Name: platformtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.platformtypedescriptor (platformtypedescriptorid) FROM stdin;
3194
3193
\.


--
-- Data for Name: populationserveddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.populationserveddescriptor (populationserveddescriptorid) FROM stdin;
1664
1667
1671
1665
1666
1668
1669
1672
1673
1663
1670
\.


--
-- Data for Name: postingresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postingresultdescriptor (postingresultdescriptorid) FROM stdin;
2500
2501
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryevent (eventdate, postsecondaryeventcategorydescriptorid, studentusi, postsecondaryinstitutionid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: postsecondaryeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryeventcategorydescriptor (postsecondaryeventcategorydescriptorid) FROM stdin;
2591
2593
2592
2594
2595
2596
2597
2598
2599
2600
2601
\.


--
-- Data for Name: postsecondaryinstitution; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitution (postsecondaryinstitutionid, administrativefundingcontroldescriptorid, postsecondaryinstitutionleveldescriptorid) FROM stdin;
\.


--
-- Data for Name: postsecondaryinstitutionleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionleveldescriptor (postsecondaryinstitutionleveldescriptorid) FROM stdin;
2967
2966
2968
2969
2970
2971
2972
2973
2974
2975
2976
\.


--
-- Data for Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionmediumofinstruction (postsecondaryinstitutionid, mediumofinstructiondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: primarylearningdeviceaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceaccessdescriptor (primarylearningdeviceaccessdescriptorid) FROM stdin;
1653
1654
1655
\.


--
-- Data for Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceawayfromschooldescriptor (primarylearningdeviceawayfromschooldescriptorid) FROM stdin;
244
246
247
245
248
249
250
\.


--
-- Data for Name: primarylearningdeviceproviderdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceproviderdescriptor (primarylearningdeviceproviderdescriptorid) FROM stdin;
152
154
153
\.


--
-- Data for Name: proficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.proficiencydescriptor (proficiencydescriptorid) FROM stdin;
423
422
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.program (educationorganizationid, programname, programtypedescriptorid, programid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programassignmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programassignmentdescriptor (programassignmentdescriptorid) FROM stdin;
1675
1677
1676
1674
1678
1679
\.


--
-- Data for Name: programcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristic (educationorganizationid, programname, programtypedescriptorid, programcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristicdescriptor (programcharacteristicdescriptorid) FROM stdin;
\.


--
-- Data for Name: programdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluation (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, evaluationmaxnumericrating, evaluationminnumericrating, programevaluationdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programevaluationelement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationelement (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, elementmaxnumericrating, elementminnumericrating, elementsortorder, programevaluationelementdescription, programevaluationobjectivetitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programevaluationelementratinglevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationelementratinglevel (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid, maxnumericrating, minnumericrating, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationobjective (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, objectivemaxnumericrating, objectiveminnumericrating, objectivesortorder, programevaluationobjectivedescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programevaluationobjectiveratinglevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationobjectiveratinglevel (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid, maxnumericrating, minnumericrating, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationperioddescriptor (programevaluationperioddescriptorid) FROM stdin;
128
132
133
134
135
136
137
138
139
140
141
\.


--
-- Data for Name: programevaluationratinglevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationratinglevel (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid, maxnumericrating, minnumericrating, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programevaluationtypedescriptor (programevaluationtypedescriptorid) FROM stdin;
947
948
950
949
951
952
\.


--
-- Data for Name: programlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningstandard (educationorganizationid, programname, programtypedescriptorid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsor (educationorganizationid, programname, programtypedescriptorid, programsponsordescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsordescriptor (programsponsordescriptorid) FROM stdin;
1037
1040
1039
1042
1047
1036
1043
1045
1038
1041
1044
1046
\.


--
-- Data for Name: programtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programtypedescriptor (programtypedescriptorid) FROM stdin;
1589
1590
1591
1588
1593
1594
1595
1592
1596
1597
1598
1599
1600
1601
1602
1603
1604
1605
1606
1607
1608
1610
1609
1611
1612
1613
1614
1615
1616
1617
1618
1619
1620
1621
1622
1623
1624
1625
1626
1627
1628
1629
1630
1631
1632
1633
1634
1635
1636
1637
1638
1639
1640
1641
1642
1643
1644
1645
1647
1648
1646
3313
3314
3315
3316
\.


--
-- Data for Name: progressdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressdescriptor (progressdescriptorid) FROM stdin;
1656
1657
1658
\.


--
-- Data for Name: progressleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressleveldescriptor (progressleveldescriptorid) FROM stdin;
2718
2719
2717
2720
\.


--
-- Data for Name: projectdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.projectdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: projectdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.projectdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: providercategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providercategorydescriptor (providercategorydescriptorid) FROM stdin;
3078
3079
3083
3084
3088
3087
3091
3093
3094
3097
3098
3081
3082
3085
3090
3095
3080
3086
3089
3092
3096
\.


--
-- Data for Name: providerprofitabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerprofitabilitydescriptor (providerprofitabilitydescriptorid) FROM stdin;
2480
2479
2481
\.


--
-- Data for Name: providerstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerstatusdescriptor (providerstatusdescriptorid) FROM stdin;
1189
1188
1187
\.


--
-- Data for Name: publicationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.publicationstatusdescriptor (publicationstatusdescriptorid) FROM stdin;
1282
1281
1284
1283
1285
\.


--
-- Data for Name: questionformdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.questionformdescriptor (questionformdescriptorid) FROM stdin;
975
974
976
977
978
979
980
981
\.


--
-- Data for Name: racedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.racedescriptor (racedescriptorid) FROM stdin;
1287
1286
1288
1289
1290
1291
1292
\.


--
-- Data for Name: ratingleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.ratingleveldescriptor (ratingleveldescriptorid) FROM stdin;
3184
3186
3185
3187
3188
3189
3190
3191
3192
\.


--
-- Data for Name: reasonexiteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonexiteddescriptor (reasonexiteddescriptorid) FROM stdin;
2489
2494
2497
2499
2488
2491
2498
2490
2493
2496
2487
2492
2495
3263
3264
\.


--
-- Data for Name: reasonnottesteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonnottesteddescriptor (reasonnottesteddescriptorid) FROM stdin;
2831
2834
2833
2832
2835
2836
2837
2838
2839
2840
2841
2842
2843
2844
\.


--
-- Data for Name: recognitiontypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.recognitiontypedescriptor (recognitiontypedescriptorid) FROM stdin;
2448
2447
2450
2451
2455
2456
2449
2453
2446
2452
2454
2457
\.


--
-- Data for Name: relationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.relationdescriptor (relationdescriptorid) FROM stdin;
1701
1702
1705
1706
1707
1708
1709
1710
1711
1712
1713
1714
1715
1716
1717
1718
1719
1720
1721
1722
1723
1724
1725
1726
1727
1728
1729
1730
1731
1732
1733
1734
1735
1736
1737
1738
1739
1740
1742
1741
1743
1744
1745
1746
1747
1748
1749
1750
1751
1752
\.


--
-- Data for Name: repeatidentifierdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.repeatidentifierdescriptor (repeatidentifierdescriptorid) FROM stdin;
1022
1023
1025
1024
1026
1027
1028
1029
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, numberofdaysabsent, numberofdaysinattendance, numberofdaystardy, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: reportcardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgrade (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, begindate, gradetypedescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgradepointaverage (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, gradepointaveragetypedescriptorid, gradepointaveragevalue, iscumulative, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentcompetencyobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: reporterdescriptiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reporterdescriptiondescriptor (reporterdescriptiondescriptorid) FROM stdin;
1680
1681
1682
1683
1684
1685
\.


--
-- Data for Name: reportingtagdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportingtagdescriptor (reportingtagdescriptorid) FROM stdin;
3025
3027
3024
3026
3028
\.


--
-- Data for Name: residencystatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.residencystatusdescriptor (residencystatusdescriptorid) FROM stdin;
23
24
25
22
26
\.


--
-- Data for Name: responseindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responseindicatordescriptor (responseindicatordescriptorid) FROM stdin;
1659
1660
1661
1662
\.


--
-- Data for Name: responsibilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responsibilitydescriptor (responsibilitydescriptorid) FROM stdin;
1315
1316
1318
1317
1320
1319
1321
1322
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restraintevent (restrainteventidentifier, schoolid, studentusi, educationalenvironmentdescriptorid, eventdate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: restrainteventprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventprogram (restrainteventidentifier, schoolid, studentusi, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreason; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreason (restrainteventidentifier, schoolid, studentusi, restrainteventreasondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreasondescriptor (restrainteventreasondescriptorid) FROM stdin;
2868
2869
2870
\.


--
-- Data for Name: resultdatatypetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.resultdatatypetypedescriptor (resultdatatypetypedescriptorid) FROM stdin;
969
970
968
971
972
973
\.


--
-- Data for Name: retestindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.retestindicatordescriptor (retestindicatordescriptorid) FROM stdin;
2758
2760
2761
2759
\.


--
-- Data for Name: school; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.school (schoolid, administrativefundingcontroldescriptorid, charterapprovalagencytypedescriptorid, charterapprovalschoolyear, charterstatusdescriptorid, internetaccessdescriptorid, localeducationagencyid, magnetspecialprogramemphasisschooldescriptorid, schooltypedescriptorid, titleipartaschooldesignationdescriptorid) FROM stdin;
\.


--
-- Data for Name: schoolcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategory (schoolid, schoolcategorydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: schoolcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategorydescriptor (schoolcategorydescriptorid) FROM stdin;
1154
1155
1157
1156
1158
1159
1160
1161
1162
1164
1163
1165
1166
1167
1168
1169
\.


--
-- Data for Name: schoolchoicebasisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolchoicebasisdescriptor (schoolchoicebasisdescriptorid) FROM stdin;
3019
3023
3022
3021
3020
\.


--
-- Data for Name: schoolchoiceimplementstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolchoiceimplementstatusdescriptor (schoolchoiceimplementstatusdescriptorid) FROM stdin;
2588
2587
2590
2589
\.


--
-- Data for Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolfoodserviceprogramservicedescriptor (schoolfoodserviceprogramservicedescriptorid) FROM stdin;
2927
2926
2928
2929
2930
2932
2931
2933
2934
2935
2936
2937
2938
2939
2940
\.


--
-- Data for Name: schoolgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolgradelevel (schoolid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: schooltypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schooltypedescriptor (schooltypedescriptorid) FROM stdin;
2504
2505
2506
2507
2508
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolyeartype (schoolyear, schoolyeardescription, currentschoolyear, createdate, lastmodifieddate, id, changeversion) FROM stdin;
2024	2023-2024	t	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	a41d17c2-0709-4bfe-a969-f77e99da263d	0
1991	1990-1991	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	5c250e89-fe7f-482c-bd1b-9bd01e9ba9c2	0
1992	1991-1992	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	c1b28a85-0f51-4c0b-a8e4-51e060d2edf3	0
1993	1992-1993	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	eb6be522-b562-4c58-b76c-097f452f4d3b	0
1994	1993-1994	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	46431ec0-8e16-429c-92cf-3161625ddc92	0
1995	1994-1995	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	0dcf15b6-5785-46f4-9244-1b5b53e67b18	0
1996	1995-1996	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	67351da7-91f1-4314-b719-8c5fef02ebee	0
1997	1996-1997	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	c60e480b-d741-4294-9d3f-ed9800f1dc9f	0
1998	1997-1998	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	091c57f8-80b5-4be5-9eef-3d31db24671f	0
1999	1998-1999	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	87fee38c-50ca-461b-ac12-919724e3d31a	0
2000	1999-2000	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	61f8a57a-9712-48be-be43-3b874556a73b	0
2001	2000-2001	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	f3f79efd-6d3b-472f-9f33-647498a6d2f6	0
2002	2001-2002	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	b3e4dc72-c869-4f3e-b37a-95eb15a13e16	0
2003	2002-2003	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	ac2824d3-cdf0-4621-8d35-4647bd107689	0
2004	2003-2004	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	67547805-313f-49cd-b51f-315c39e9f8be	0
2005	2004-2005	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	e874330b-5329-43a2-81c1-9b4d70a6242a	0
2006	2005-2006	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	28a7f358-ad78-466e-97f9-6e5056f2c1da	0
2007	2006-2007	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	98e0c33c-40ab-4125-9809-0decc29af575	0
2008	2007-2008	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	48333b3d-6456-4823-95f8-e28701894d5f	0
2009	2008-2009	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	1e892b15-889f-43c5-a310-2fffaa5f059e	0
2010	2009-2010	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	817fa419-9f13-4cc4-8850-2a7f698068ea	0
2011	2010-2011	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	cd363b80-a8ff-4d2c-b1a9-b65a3b6cba32	0
2012	2011-2012	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	0e3b305a-2c30-49c2-94d7-d16ca3346c4d	0
2013	2012-2013	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	5d5f39bd-d274-419a-8b45-22915e8fa7bf	0
2014	2013-2014	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	ddb2bc18-6cfc-4470-b0ce-2dd894adb6ae	0
2015	2014-2015	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	cabab4e2-8d30-4502-8985-12b209783f97	0
2016	2015-2016	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	09e1072d-0440-47b6-8088-80dff263cf81	0
2017	2016-2017	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	23137396-e9d8-4e4a-a9cb-1cf3e21082cc	0
2018	2017-2018	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	44075304-2052-414b-b8a3-d04014fabee5	0
2019	2018-2019	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	de810f3e-3ab5-44f4-8d97-18497cc66627	0
2020	2019-2020	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	d4b9d404-7209-4af8-8e30-a77966fe61ba	0
2021	2020-2021	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	0779f1d0-6c5b-4df7-a6c1-f62ec128e090	0
2022	2021-2022	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	3e796431-d083-4f07-8663-4868c6efaa58	0
2023	2022-2023	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	513d71b9-dc2e-4b60-9b77-f0dd8b516e69	0
2025	2024-2025	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	8f9e763e-0f61-4189-b54d-609b770ca2a0	0
2026	2025-2026	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	c3271354-f623-4df2-8b61-1065d9def617	0
2027	2026-2027	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	19d560f6-ba2d-4263-b66a-4217f0b9bc07	0
2028	2027-2028	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	7dd59d02-b885-468b-9471-878be2fd9c52	0
2029	2028-2029	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	70a1e787-824d-44ca-96f2-49a43e907d55	0
2030	2029-2030	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	73e98238-e955-4441-9acf-c6cd864f63e6	0
2031	2030-2031	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	21465576-6b1c-4e87-a8dc-c577fee808e0	0
2032	2031-2032	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	16cd6d0e-6567-4e94-a466-f34d6813aec3	0
2033	2032-2033	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	531db397-13e8-47ca-ac6f-6f2c47b10962	0
2034	2033-2034	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	91a2b987-a724-47a6-90b2-d1e3b17e1bf4	0
2035	2034-2035	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	57b4b98d-b4a7-40f3-be09-fc9c59f44f50	0
2036	2035-2036	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	98c3fa74-1b5e-4113-8a74-44e1fa7cd3b6	0
2037	2036-2037	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	585ac47d-7ada-4daa-9da6-7a6ecfea6a1b	0
2038	2037-2038	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	e8dc591c-8cc4-4087-9bf8-2f4e0605572f	0
2039	2038-2039	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	07e966a3-27ae-4d7e-a60b-0fb0a0c62565	0
2040	2039-2040	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	13a16cc8-8218-4d4e-ad7b-90434e29456f	0
2041	2040-2041	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	9ddcce12-2111-4dc2-aad5-7f26277cf661	0
2042	2041-2042	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	fb0c52cd-0be4-4a04-8a8c-600ca7997764	0
2043	2042-2043	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	927c1821-66d4-4239-8df0-ecfec70b83dc	0
2044	2043-2044	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	c393a08b-30c9-4376-8865-01ec222641a9	0
2045	2044-2045	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	5c8717ce-1529-4123-a9c4-725d52f07a44	0
2046	2045-2046	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	c7ed25ad-e61d-401e-8329-67f537b33c40	0
2047	2046-2047	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	8fd7b1e5-a8df-42cd-804e-27569e77eb52	0
2048	2047-2048	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	42bbc1a1-5b9b-44e7-b737-df9d49a294e8	0
2049	2048-2049	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	78982e30-589b-44bd-8083-5817327c14f1	0
2050	2049-2050	f	2023-11-08 13:57:10.790505	2023-11-08 13:57:10.790505	e71f2838-c93c-461f-96f9-81b603155980	0
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.section (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, availablecreditconversion, availablecredits, availablecredittypedescriptorid, educationalenvironmentdescriptorid, instructionlanguagedescriptorid, locationclassroomidentificationcode, locationschoolid, mediumofinstructiondescriptorid, officialattendanceperiod, populationserveddescriptorid, sectionname, sectiontypedescriptorid, sequenceofcourse, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionattendancetakenevent (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, eventdate, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristic (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, sectioncharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristicdescriptor (sectioncharacteristicdescriptorid) FROM stdin;
163
164
\.


--
-- Data for Name: sectionclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionclassperiod (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, classperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncourselevelcharacteristic (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, courselevelcharacteristicdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectionofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionofferedgradelevel (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectionprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionprogram (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sectiontypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectiontypedescriptor (sectiontypedescriptorid) FROM stdin;
2607
2608
2609
\.


--
-- Data for Name: separationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationdescriptor (separationdescriptorid) FROM stdin;
124
125
126
127
\.


--
-- Data for Name: separationreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationreasondescriptor (separationreasondescriptorid) FROM stdin;
2876
2877
2878
2879
2881
2880
2882
2883
2884
2885
2886
\.


--
-- Data for Name: servicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.servicedescriptor (servicedescriptorid) FROM stdin;
1259
1260
1262
1261
1264
1263
1265
1266
1267
1268
1269
1270
1271
1272
1273
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.session (schoolid, schoolyear, sessionname, begindate, enddate, termdescriptorid, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sessionacademicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessionacademicweek (schoolid, schoolyear, sessionname, weekidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: sessiongradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessiongradingperiod (schoolid, schoolyear, sessionname, gradingperioddescriptorid, gradingperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: sexdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sexdescriptor (sexdescriptorid) FROM stdin;
346
344
347
345
\.


--
-- Data for Name: sourcedimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcedimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sourcedimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcedimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sourcesystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcesystemdescriptor (sourcesystemdescriptorid) FROM stdin;
240
241
243
242
\.


--
-- Data for Name: specialeducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationprogramservicedescriptor (specialeducationprogramservicedescriptorid) FROM stdin;
2467
2468
2469
2470
2471
2472
2473
2474
2475
2476
2477
2478
\.


--
-- Data for Name: specialeducationsettingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationsettingdescriptor (specialeducationsettingdescriptorid) FROM stdin;
2742
2743
2745
2744
2746
2748
2747
2749
2750
2751
2752
2753
2754
2755
2756
2757
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staff (staffusi, birthdate, citizenshipstatusdescriptorid, firstname, genderidentity, generationcodesuffix, highestcompletedlevelofeducationdescriptorid, highlyqualifiedteacher, hispaniclatinoethnicity, lastsurname, loginid, maidenname, middlename, personaltitleprefix, personid, preferredfirstname, preferredlastsurname, sexdescriptorid, sourcesystemdescriptorid, staffuniqueid, yearsofpriorprofessionalexperience, yearsofpriorteachingexperience, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffabsenceevent (absenceeventcategorydescriptorid, eventdate, staffusi, absenceeventreason, hoursabsent, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddress (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: staffaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddressperiod (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffancestryethnicorigin (staffusi, ancestryethnicorigindescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffclassificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffclassificationdescriptor (staffclassificationdescriptorid) FROM stdin;
1057
1059
1060
1058
1061
1062
1063
1064
1065
1066
1067
1068
1069
1070
1071
1072
1073
1074
1075
1076
1077
1078
1079
1080
1081
1082
1083
1084
1085
1086
1087
1088
1089
1090
1091
1092
1093
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcohortassociation (begindate, cohortidentifier, educationorganizationid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffcredential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcredential (staffusi, credentialidentifier, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociation (incidentidentifier, schoolid, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (incidentidentifier, schoolid, staffusi, disciplineincidentparticipationcodedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationassignmentassociation (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi, credentialidentifier, employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, enddate, fulltimeequivalency, orderofassignment, positiontitle, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociation (contacttitle, educationorganizationid, staffusi, contacttypedescriptorid, electronicmailaddress, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddress (contacttitle, educationorganizationid, staffusi, addresstypedescriptorid, apartmentroomsuitenumber, buildingsitenumber, city, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, postalcode, stateabbreviationdescriptorid, streetnumbername, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddressperiod (contacttitle, educationorganizationid, staffusi, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationtelephone (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationemploymentassociation (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi, annualwage, credentialidentifier, department, enddate, fulltimeequivalency, hourlywage, offerdate, separationdescriptorid, separationreasondescriptorid, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffelectronicmail (staffusi, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationcode (staffusi, staffidentificationsystemdescriptorid, assigningorganizationidentificationcode, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationdocument (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationsystemdescriptor (staffidentificationsystemdescriptorid) FROM stdin;
3120
3125
3131
3134
3123
3127
3129
3133
3122
3124
3128
3132
3121
3126
3130
\.


--
-- Data for Name: staffinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffinternationaladdress (staffusi, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguage (staffusi, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguageuse (staffusi, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleave (begindate, staffleaveeventcategorydescriptorid, staffusi, enddate, reason, substituteassigned, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffleaveeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleaveeventcategorydescriptor (staffleaveeventcategorydescriptorid) FROM stdin;
1006
1005
1007
1004
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
1019
1018
1020
1021
\.


--
-- Data for Name: staffothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffothername (staffusi, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: staffpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffpersonalidentificationdocument (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffprogramassociation (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrace (staffusi, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrecognition (staffusi, recognitiontypedescriptorid, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, evidencestatement, imageurl, issuername, issueroriginurl, recognitionawarddate, recognitionawardexpiresdate, recognitiondescription, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociation (programassignmentdescriptorid, schoolid, staffusi, calendarcode, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationacademicsubject (programassignmentdescriptorid, schoolid, staffusi, academicsubjectdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationgradelevel (programassignmentdescriptorid, schoolid, staffusi, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffsectionassociation (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi, begindate, classroompositiondescriptorid, enddate, highlyqualifiedteacher, percentagecontribution, teacherstudentdatalinkexclusion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: stafftelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftelephone (staffusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: stafftribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftribalaffiliation (staffusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffvisa (staffusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: stateabbreviationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateabbreviationdescriptor (stateabbreviationdescriptorid) FROM stdin;
47
48
50
49
51
52
53
54
55
57
56
58
60
59
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
77
76
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
107
106
108
\.


--
-- Data for Name: stateeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagency (stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyaccountability (stateeducationagencyid, schoolyear, ctegraduationrateinclusion, createdate) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyfederalfunds (stateeducationagencyid, fiscalyear, federalprogramsfundingallocation, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.student (studentusi, birthcity, birthcountrydescriptorid, birthdate, birthinternationalprovince, birthsexdescriptorid, birthstateabbreviationdescriptorid, citizenshipstatusdescriptorid, dateenteredus, firstname, generationcodesuffix, lastsurname, maidenname, middlename, multiplebirthstatus, personaltitleprefix, personid, preferredfirstname, preferredlastsurname, sourcesystemdescriptorid, studentuniqueid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecord (educationorganizationid, schoolyear, studentusi, termdescriptorid, cumulativeattemptedcreditconversion, cumulativeattemptedcredits, cumulativeattemptedcredittypedescriptorid, cumulativeearnedcreditconversion, cumulativeearnedcredits, cumulativeearnedcredittypedescriptorid, projectedgraduationdate, sessionattemptedcreditconversion, sessionattemptedcredits, sessionattemptedcredittypedescriptorid, sessionearnedcreditconversion, sessionearnedcredits, sessionearnedcredittypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordacademichonor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordacademichonor (educationorganizationid, schoolyear, studentusi, termdescriptorid, academichonorcategorydescriptorid, honordescription, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, evidencestatement, honorawarddate, honorawardexpiresdate, imageurl, issuername, issueroriginurl, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordclassranking; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordclassranking (educationorganizationid, schoolyear, studentusi, termdescriptorid, classrank, classrankingdate, percentageranking, totalnumberinclass, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecorddiploma; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecorddiploma (educationorganizationid, schoolyear, studentusi, termdescriptorid, diplomaawarddate, diplomatypedescriptorid, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, ctecompleter, diplomaawardexpiresdate, diplomadescription, diplomaleveldescriptorid, evidencestatement, imageurl, issuername, issueroriginurl, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordgradepointaverage (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradepointaveragetypedescriptorid, gradepointaveragevalue, iscumulative, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordrecognition (educationorganizationid, schoolyear, studentusi, termdescriptorid, recognitiontypedescriptorid, achievementcategorydescriptorid, achievementcategorysystem, achievementtitle, criteria, criteriaurl, evidencestatement, imageurl, issuername, issueroriginurl, recognitionawarddate, recognitionawardexpiresdate, recognitiondescription, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordreportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordreportcard (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, administrationdate, administrationenddate, administrationenvironmentdescriptorid, administrationlanguagedescriptorid, assessedminutes, eventcircumstancedescriptorid, eventdescription, platformtypedescriptorid, reasonnottesteddescriptorid, reportedschoolid, reportedschoolidentifier, retestindicatordescriptorid, schoolyear, serialnumber, whenassessedgradeleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessmentaccommodation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentaccommodation (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, accommodationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmenteducationorganizationassociation (assessmentidentifier, educationorganizationassociationtypedescriptorid, educationorganizationid, namespace, studentassessmentidentifier, studentusi, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentitem (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentitemresultdescriptorid, assessmentresponse, descriptivefeedback, itemnumber, rawscoreresult, responseindicatordescriptorid, timeassessed, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperformancelevel (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperiod (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentperioddescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentscoreresult (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, administrationdate, administrationenddate, assessedminutes, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentperformancelevel (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid, performanceleveldescriptorid, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentscoreresult (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcharacteristicdescriptor (studentcharacteristicdescriptorid) FROM stdin;
382
384
383
385
387
386
388
389
390
391
392
393
394
395
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociation (begindate, cohortidentifier, educationorganizationid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcohortassociationsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociationsection (begindate, cohortidentifier, educationorganizationid, studentusi, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjective (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivegeneralstudentprogramassociation (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivestudentsectionassociation (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: studentcontactassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcontactassociation (contactusi, studentusi, contactpriority, contactrestrictions, emergencycontactstatus, legalguardian, liveswith, primarycontactstatus, relationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, nontraditionalgenderstatus, privatecteprogram, technicalskillsassessmentdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, cteprogramservicedescriptorid, cipcode, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociation (behaviordescriptorid, incidentidentifier, schoolid, studentusi, behaviordetaileddescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (behaviordescriptorid, incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociation (incidentidentifier, schoolid, studentusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociation (educationorganizationid, studentusi, barriertointernetaccessinresidencedescriptorid, genderidentity, hispaniclatinoethnicity, internetaccessinresidence, internetaccesstypeinresidencedescriptorid, internetperformanceinresidencedescriptorid, limitedenglishproficiencydescriptorid, loginid, primarylearningdeviceaccessdescriptorid, primarylearningdeviceawayfromschooldescriptorid, primarylearningdeviceproviderdescriptorid, profilethumbnail, sexdescriptorid, supportermilitaryconnectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddress (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddressperiod (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationancestryethnicorigin (educationorganizationid, studentusi, ancestryethnicorigindescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationcohortyear; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationcohortyear (educationorganizationid, studentusi, cohortyeartypedescriptorid, schoolyear, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisability (educationorganizationid, studentusi, disabilitydescriptorid, disabilitydeterminationsourcetypedescriptorid, disabilitydiagnosis, orderofdisability, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisabilitydesignation (educationorganizationid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationelectronicmail (educationorganizationid, studentusi, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationinternationaladdress (educationorganizationid, studentusi, addresstypedescriptorid, addressline1, addressline2, addressline3, addressline4, begindate, countrydescriptorid, enddate, latitude, longitude, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguage (educationorganizationid, studentusi, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguageuse (educationorganizationid, studentusi, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationrace (educationorganizationid, studentusi, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (educationorganizationid, studentusi, studentcharacteristicdescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteristic (educationorganizationid, studentusi, studentcharacteristicdescriptorid, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentidentifica_c15030 (educationorganizationid, studentusi, assigningorganizationidentificationcode, studentidentificationsystemdescriptorid, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicator (educationorganizationid, studentusi, indicatorname, designatedby, indicator, indicatorgroup, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicatorperiod (educationorganizationid, studentusi, indicatorname, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtelephone (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtribalaffiliation (educationorganizationid, studentusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationresponsibilityassociation (begindate, educationorganizationid, responsibilitydescriptorid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentgradebookentry (gradebookentryidentifier, namespace, studentusi, assignmentlatestatusdescriptorid, competencyleveldescriptorid, datefulfilled, diagnosticstatement, lettergradeearned, numericgradeearned, pointsearned, submissionstatusdescriptorid, timefulfilled, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, awaitingfostercare, homelessprimarynighttimeresidencedescriptorid, homelessunaccompaniedyouth) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociationhomelessprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, homelessprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationdocument (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationsystemdescriptor (studentidentificationsystemdescriptorid) FROM stdin;
2543
2549
2551
2544
2546
2547
2548
2552
2553
2545
2550
2554
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociation (educationorganizationid, interventionidentificationcode, studentusi, cohortidentifier, cohorteducationorganizationid, diagnosticstatement, dosage, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociationinterventioneffectiveness (educationorganizationid, interventionidentificationcode, studentusi, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, interventionduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, dosage, englishlearnerparticipation) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolyear, monitoreddescriptorid, participationdescriptorid, proficiencydescriptorid, progressdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, languageinstructionprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, continuationofservicesreasondescriptorid, eligibilityexpirationdate, lastqualifyingmove, priorityforservices, qualifyingarrivaldate, stateresidencydate, usinitialentry, usinitialschoolentry, usmostrecententry) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, migranteducationprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, elaprogressleveldescriptorid, mathematicsprogressleveldescriptorid, neglectedordelinquentprogramdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, neglectedordelinquentprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentothername (studentusi, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: studentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparticipationcodedescriptor (studentparticipationcodedescriptorid) FROM stdin;
399
398
401
400
\.


--
-- Data for Name: studentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentpersonalidentificationdocument (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) FROM stdin;
\.


--
-- Data for Name: studentprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, programattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramevaluation (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, educationorganizationid, evaluationduration, staffevaluatorstaffusi, summaryevaluationcomment, summaryevaluationnumericrating, summaryevaluationratingleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluationexternalevaluator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramevaluationexternalevaluator (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, externalevaluator, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluationstudentevaluationelement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramevaluationstudentevaluationelement (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, programevaluationelementtitle, evaluationelementnumericrating, evaluationelementratingleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluationstudentevaluationobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramevaluationstudentevaluationobjective (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, programevaluationobjectivetitle, evaluationobjectivenumericrating, evaluationobjectiveratingleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociation (entrydate, schoolid, studentusi, calendarcode, classofschoolyear, educationorganizationid, employedwhileenrolled, enrollmenttypedescriptorid, entrygradeleveldescriptorid, entrygradelevelreasondescriptorid, entrytypedescriptorid, exitwithdrawdate, exitwithdrawtypedescriptorid, fulltimeequivalency, graduationplantypedescriptorid, graduationschoolyear, nextyeargradeleveldescriptorid, nextyearschoolid, primaryschool, repeatgradeindicator, residencystatusdescriptorid, schoolchoice, schoolchoicebasisdescriptorid, schoolchoicetransfer, schoolyear, termcompletionindicator, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationalternativegraduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationalternativegraduationplan (entrydate, schoolid, studentusi, alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationeducationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationeducationplan (entrydate, schoolid, studentusi, educationplandescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolattendanceevent (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi, arrivaltime, attendanceeventreason, departuretime, educationalenvironmentdescriptorid, eventduration, schoolattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, directcertification) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolfoodserviceprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionassociation (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, attemptstatusdescriptorid, enddate, homeroomindicator, repeatidentifierdescriptorid, teacherstudentdatalinkexclusion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionassociationprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionassociationprogram (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, educationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceevent (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, arrivaltime, attendanceeventreason, departuretime, educationalenvironmentdescriptorid, eventduration, sectionattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceeventclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceeventclassperiod (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, classperiodname, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, ideaeligibility, iepbegindate, iependdate, iepreviewdate, lastevaluationdate, medicallyfragile, multiplydisabled, schoolhoursperweek, specialeducationhoursperweek, specialeducationsettingdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisability (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid, disabilitydeterminationsourcetypedescriptorid, disabilitydiagnosis, orderofdisability, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisabilitydesignation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationserviceprovider (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, staffusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid, staffusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogrameligibilityassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogrameligibilityassociation (consenttoevaluationreceiveddate, educationorganizationid, programname, programtypedescriptorid, studentusi, consenttoevaluationdate, eligibilitydelayreasondescriptorid, eligibilitydeterminationdate, eligibilityevaluationdate, eligibilityevaluationtypedescriptorid, evaluationcompleteindicator, evaluationdelaydays, evaluationdelayreasondescriptorid, evaluationlatereason, ideaindicator, ideapartdescriptorid, originaleciservicesdate, transitionconferencedate, transitionnotificationdate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaparticipantdescriptorid) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentvisa (studentusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: submissionstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.submissionstatusdescriptor (submissionstatusdescriptorid) FROM stdin;
287
289
288
290
291
\.


--
-- Data for Name: supportermilitaryconnectiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.supportermilitaryconnectiondescriptor (supportermilitaryconnectiondescriptorid) FROM stdin;
1143
1145
1146
1144
1147
1148
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.survey (namespace, surveyidentifier, educationorganizationid, numberadministered, schoolid, schoolyear, sessionname, surveycategorydescriptorid, surveytitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycategorydescriptor (surveycategorydescriptorid) FROM stdin;
231
232
233
230
234
236
235
237
238
239
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycourseassociation (coursecode, educationorganizationid, namespace, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyleveldescriptor (surveyleveldescriptorid) FROM stdin;
1094
1096
1097
1095
1098
1099
1100
1101
1102
1103
1104
1105
1106
1107
1108
1109
1110
1111
1112
1113
1114
1115
1116
1117
1118
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyprogramassociation (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestion (namespace, questioncode, surveyidentifier, questionformdescriptorid, questiontext, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionmatrix; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionmatrix (namespace, questioncode, surveyidentifier, matrixelement, maxrawscore, minrawscore, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponse (namespace, questioncode, surveyidentifier, surveyresponseidentifier, comment, noresponse, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsechoice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsechoice (namespace, questioncode, surveyidentifier, sortorder, numericvalue, textvalue, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (namespace, questioncode, surveyidentifier, surveyresponseidentifier, matrixelement, maxnumericresponse, minnumericresponse, noresponse, numericresponse, textresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsevalue; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsevalue (namespace, questioncode, surveyidentifier, surveyresponseidentifier, surveyquestionresponsevalueidentifier, numericresponse, textresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponse (namespace, surveyidentifier, surveyresponseidentifier, contactusi, electronicmailaddress, fullname, location, responsedate, responsetime, staffusi, studentusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsesurveylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsesurveylevel (namespace, surveyidentifier, surveyresponseidentifier, surveyleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysection (namespace, surveyidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionassociation (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponse (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, sectionrating, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: teachingcredentialbasisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialbasisdescriptor (teachingcredentialbasisdescriptorid) FROM stdin;
2563
2566
2565
2568
2564
2569
2562
2567
\.


--
-- Data for Name: teachingcredentialdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialdescriptor (teachingcredentialdescriptorid) FROM stdin;
1186
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
\.


--
-- Data for Name: technicalskillsassessmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.technicalskillsassessmentdescriptor (technicalskillsassessmentdescriptorid) FROM stdin;
1256
1257
1258
\.


--
-- Data for Name: telephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.telephonenumbertypedescriptor (telephonenumbertypedescriptorid) FROM stdin;
155
157
156
158
159
161
160
162
\.


--
-- Data for Name: termdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.termdescriptor (termdescriptorid) FROM stdin;
165
166
168
167
169
170
171
173
172
174
175
176
177
178
179
180
\.


--
-- Data for Name: titleipartaparticipantdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaparticipantdescriptor (titleipartaparticipantdescriptorid) FROM stdin;
1150
1151
1152
1149
1153
\.


--
-- Data for Name: titleipartaprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaprogramservicedescriptor (titleipartaprogramservicedescriptorid) FROM stdin;
2618
2617
2619
2620
2621
2622
2623
2624
2625
\.


--
-- Data for Name: titleipartaschooldesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaschooldesignationdescriptor (titleipartaschooldesignationdescriptorid) FROM stdin;
1274
1275
1276
1277
1278
1279
1280
\.


--
-- Data for Name: tribalaffiliationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.tribalaffiliationdescriptor (tribalaffiliationdescriptorid) FROM stdin;
1766
1765
1767
1768
1769
1770
1771
1772
1774
1773
1776
1775
1777
1778
1779
1780
1781
1782
1783
1784
1785
1786
1787
1788
1789
1790
1791
1792
1793
1794
1795
1796
1797
1798
1799
1800
1801
1802
1803
1804
1805
1807
1806
1808
1809
1810
1811
1812
1813
1814
1815
1816
1817
1818
1819
1820
1821
1822
1823
1824
1825
1826
1827
1828
1829
1831
1830
1832
1833
1834
1835
1836
1837
1838
1839
1840
1841
1842
1843
1844
1845
1846
1847
1848
1849
1850
1851
1852
1853
1854
1855
1856
1857
1858
1859
1861
1862
1860
1863
1864
1865
1866
1867
1868
1869
1870
1871
1872
1873
1875
1874
1876
1877
1878
1880
1879
1881
1882
1883
1884
1885
1886
1887
1888
1889
1890
1891
1892
1893
1894
1895
1896
1898
1897
1899
1900
1901
1902
1903
1904
1905
1906
1907
1908
1909
1910
1912
1913
1911
1914
1915
1916
1917
1918
1919
1920
1921
1922
1924
1923
1925
1926
1927
1928
1929
1930
1931
1932
1933
1934
1935
1936
1937
1938
1939
1940
1941
1942
1943
1944
1946
1945
1948
1947
1949
1950
1952
1951
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
1966
1967
1968
1969
1970
1971
1972
1973
1974
1975
1976
1977
1978
1979
1980
1981
1982
1983
1984
1985
1986
1988
1987
1989
1990
1991
1995
1997
2000
2009
2011
2021
2025
2027
2031
2033
2035
2049
2050
2054
2056
2059
2062
2064
2068
2070
2072
2075
2078
2081
2083
2085
2090
2098
2102
2103
2107
2119
2124
2126
2131
2135
2137
2146
2150
2154
2155
2157
2159
2163
2166
2172
2174
2178
2183
2186
2188
2189
2193
2199
2205
2208
2213
2216
2218
2229
2239
2240
2245
2247
2252
2259
2260
2264
2268
2274
2279
2280
2283
2290
2293
2295
2298
2305
2307
2310
2315
2320
2324
2331
2333
2335
2338
2342
2345
2348
2353
2355
2358
2366
2371
2377
2383
1992
1998
2002
2004
2006
2010
2020
2024
2029
2037
2039
2042
2046
2051
2061
2073
2076
2084
2092
2099
2100
2104
2108
2110
2112
2113
2117
2118
2121
2123
2125
2128
2134
2139
2142
2144
2149
2153
2158
2160
2169
2171
2175
2182
2184
2191
2194
2196
2202
2206
2217
2219
2221
2224
2227
2231
2238
2243
2249
2251
2255
2257
2261
2265
2270
2276
2282
2286
2288
2294
2301
2304
2308
2311
2314
2319
2327
2330
2334
2336
2339
2340
2343
2347
2351
2357
2360
2367
2369
2372
2375
2379
2382
2384
1993
1996
2001
2003
2007
2013
2015
2016
2018
2023
2026
2030
2032
2036
2040
2044
2047
2053
2057
2060
2063
2066
2067
2077
2080
2086
2088
2091
2094
2097
2101
2105
2111
2114
2120
2122
2129
2132
2138
2141
2147
2148
2162
2165
2168
2173
2177
2180
2185
2195
2197
2201
2203
2209
2210
2212
2214
2223
2226
2230
2232
2234
2236
2237
2241
2242
2248
2250
2254
2256
2263
2267
2269
2272
2275
2278
2281
2284
2289
2291
2296
2299
2303
2309
2313
2316
2318
2322
2323
2326
2329
2332
2337
2344
2349
2350
2354
2356
2359
2362
2364
2365
2373
2376
2380
1994
1999
2005
2008
2012
2014
2017
2019
2022
2028
2034
2038
2041
2043
2045
2048
2052
2055
2058
2065
2069
2071
2074
2079
2082
2087
2089
2093
2095
2096
2106
2109
2115
2116
2127
2130
2133
2136
2140
2143
2145
2151
2152
2156
2161
2164
2167
2170
2176
2179
2181
2187
2190
2192
2198
2200
2204
2207
2211
2215
2220
2222
2225
2228
2233
2235
2244
2246
2253
2258
2262
2266
2271
2273
2277
2285
2287
2292
2297
2300
2302
2306
2312
2317
2321
2325
2328
2341
2346
2352
2361
2363
2368
2370
2374
2378
2381
\.


--
-- Data for Name: visadescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.visadescriptor (visadescriptorid) FROM stdin;
2824
2825
2826
2827
2828
2829
2830
\.


--
-- Data for Name: weapondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.weapondescriptor (weapondescriptorid) FROM stdin;
2783
2784
2781
2782
2785
2786
2787
2788
2789
2790
\.


--
-- Data for Name: descriptorequivalencegroup; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroup (descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupassignment; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupassignment (descriptorid, descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupgeneralization; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupgeneralization (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: operationalcontext; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontext (operationalcontexturi, displayname, organizationname, createdate, lastmodifieddate, id) FROM stdin;
uri://ed-fi-api-host.org	Default	Ed-Fi	2023-11-08 13:57:10.79428	2023-11-08 13:57:10.79428	b8567a7f-f355-4ffd-bd64-81237103ee98
\.


--
-- Data for Name: operationalcontextdescriptorusage; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontextdescriptorusage (operationalcontexturi, descriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: DeployJournal; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeployJournal" (schemaversionsid, scriptname, applied) FROM stdin;
1	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0010-Schemas.sql	2023-11-08 13:57:08.067544
2	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0011-Extensions.sql	2023-11-08 13:57:08.08157
3	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0020-Tables.sql	2023-11-08 13:57:08.826749
4	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0030-ForeignKeys.sql	2023-11-08 13:57:10.43614
5	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0040-IdColumnUniqueIndexes.sql	2023-11-08 13:57:10.525982
6	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0050-ExtendedProperties.sql	2023-11-08 13:57:10.584738
7	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1002-AuthViews.sql	2023-11-08 13:57:10.599131
8	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1003-CompositesHierarchicalViews.sql	2023-11-08 13:57:10.604574
9	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1020-Interoperability-Extension.sql	2023-11-08 13:57:10.616313
10	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1021-OperationalContextView.sql	2023-11-08 13:57:10.619945
11	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1022-SetVersion.sql	2023-11-08 13:57:10.621942
12	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1030-AddSessionCascadeSupport.sql	2023-11-08 13:57:10.628398
13	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1031-Create-SetSchoolYear-stored-procedure.sql	2023-11-08 13:57:10.629606
14	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1040-MissingSecurityViews.sql	2023-11-08 13:57:10.63189
15	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1100-AddMoreContextToEducationIdentifiersView.sql	2023-11-08 13:57:10.636386
16	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1100-CorrectCommunityOrganizationAuthViews.sql	2023-11-08 13:57:10.638317
17	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1120-RemoveCompositesHierarchicalViews.sql	2023-11-08 13:57:10.640486
18	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1150-UpdatedAuthViewsToPreventDuplicatesFromStaffEdOrgAssignmentsAndEmployments.sql	2023-11-08 13:57:10.645389
19	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1160-UpdateVersionTo510.sql	2023-11-08 13:57:10.646377
20	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1170-UpdatedAuthViewsToRemoveJoin.sql	2023-11-08 13:57:10.648316
21	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1180-Add-OrgDeptId-to-EdOrgIdentifiers.sql	2023-11-08 13:57:10.652889
22	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1190-UpdateVersionTo520.sql	2023-11-08 13:57:10.654086
23	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1200-AuthViewsSupportOrgDeptId.sql	2023-11-08 13:57:10.661059
24	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1290-RemoveAllUnusedAuthorizationViews.sql	2023-11-08 13:57:10.667894
25	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1300-CreateEdOrgToEdOrgTable.sql	2023-11-08 13:57:10.670328
26	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1302-CreateEdOrgToEdOrgTriggers.sql	2023-11-08 13:57:10.681429
27	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1303-AuthViewEducationOrganizationIdToStudentUSI.sql	2023-11-08 13:57:10.683263
28	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1304-AuthViewEducationOrganizationIdToContactUSI.sql	2023-11-08 13:57:10.685078
29	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1305-AuthViewsEducationOrganizationIdToStaffUSI.sql	2023-11-08 13:57:10.686858
30	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1306-AuthViewEducationOrganizationIdToStudentUSIThroughResponsibility.sql	2023-11-08 13:57:10.688271
31	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1320-UpdateVersionTo53.sql	2023-11-08 13:57:10.689174
32	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1340-UpdateVersionTo60.sql	2023-11-08 13:57:10.690062
33	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1370-AddEducationOrganizationIdToEducationOrganizationIdIndex.sql	2023-11-08 13:57:10.691923
34	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1380-UpdateVersionTo61.sql	2023-11-08 13:57:10.692897
35	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1390-UpdateVersionTo70.sql	2023-11-08 13:57:10.693784
36	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1400-Alter-EducationOrganizationId-to-bigint.sql	2023-11-08 13:57:10.702971
37	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1410-Create-indexes-for-EdOrgIds-for-relationship-auth-performance.sql	2023-11-08 13:57:10.766275
38	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1420-UpdateEdFiStandardVersionTo50.sql	2023-11-08 13:57:10.767758
39	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1430-UpdateVersionTo71.sql	2023-11-08 13:57:10.768719
40	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Data.Ods.0020-SchoolYears.sql	2023-11-08 13:57:10.793708
41	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Data.Ods.1010-OperationalContexts.sql	2023-11-08 13:57:10.794786
42	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Data.Ods.1040-Set-Default-SchoolYear.sql	2023-11-08 13:57:10.796475
43	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0010-CreateChangesSchema.sql	2023-11-08 13:57:10.8133
44	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0020-CreateChangeVersionSequence.sql	2023-11-08 13:57:10.814697
45	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0030-AddColumnChangeVersionForTables.sql	2023-11-08 13:57:11.055672
46	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0070-AddIndexChangeVersionForTables.sql	2023-11-08 13:57:11.142122
47	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0110-AddSnapshot-Tables.sql	2023-11-08 13:57:11.145022
48	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0120-AddSnapshotIdColumnUniqueIndexes.sql	2023-11-08 13:57:11.146671
49	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0130-AddSnapshotExtendedProperties.sql	2023-11-08 13:57:11.147721
50	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0200-CreateTrackedChangeTables.sql	2023-11-08 13:57:11.40931
51	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0210-CreateTriggersForChangeVersionAndKeyChanges.sql	2023-11-08 13:57:11.47629
52	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0220-CreateTriggersForDeleteTracking.sql	2023-11-08 13:57:11.660727
53	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.1010-CreateGetMaxChangeVersionFunction.sql	2023-11-08 13:57:11.66323
54	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.1020-AuthViewsIncludingDeletes.sql	2023-11-08 13:57:11.667733
55	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.1030-DropSnapshot-Table.sql	2023-11-08 13:57:11.670017
56	EdFi.Ods.Standard.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.1040-AuthViewStudentResponsibilityIncludingDeletes.sql	2023-11-08 13:57:11.67154
57	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0010-EXTENSION-TPDM-Schemas.sql	2023-11-08 14:22:51.059335
58	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0020-EXTENSION-TPDM-Tables.sql	2023-11-08 14:22:51.186422
59	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0030-EXTENSION-TPDM-ForeignKeys.sql	2023-11-08 14:22:51.44301
60	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0040-EXTENSION-TPDM-IdColumnUniqueIndexes.sql	2023-11-08 14:22:51.457826
61	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.0050-EXTENSION-TPDM-ExtendedProperties.sql	2023-11-08 14:22:51.46972
62	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.1000-EXTENSION-TPDM-Create-indexes-for-EdOrgIds-for-relationship-auth-performance.sql	2023-11-08 14:22:51.48166
63	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0010-CreateChangesSchema.sql	2023-11-08 14:22:51.530211
64	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0020-CreateChangeVersionSequence.sql	2023-11-08 14:22:51.53516
65	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0030-AddColumnChangeVersionForTables.sql	2023-11-08 14:22:51.579048
66	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0070-AddIndexChangeVersionForTables.sql	2023-11-08 14:22:51.595614
67	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0200-CreateTrackedChangeTables.sql	2023-11-08 14:22:51.64695
68	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0210-CreateTriggersForChangeVersionAndKeyChanges.sql	2023-11-08 14:22:51.657963
69	Extensions.TPDM.1.1.0.Standard.5.0.0.Artifacts.PgSql.Structure.Ods.Changes.0220-CreateTriggersForDeleteTracking.sql	2023-11-08 14:22:51.684576
\.


--
-- Data for Name: accreditationstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.accreditationstatusdescriptor (accreditationstatusdescriptorid) FROM stdin;
3409
3410
3411
3412
3413
\.


--
-- Data for Name: aidtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.aidtypedescriptor (aidtypedescriptorid) FROM stdin;
3265
3266
3267
3268
3269
3270
3271
3272
3273
3274
3275
3276
3277
3278
3279
3280
3281
3282
3283
3284
3285
3286
3287
3288
\.


--
-- Data for Name: candidate; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidate (candidateidentifier, birthcity, birthcountrydescriptorid, birthdate, birthinternationalprovince, birthsexdescriptorid, birthstateabbreviationdescriptorid, dateenteredus, displacementstatus, economicdisadvantaged, englishlanguageexamdescriptorid, firstgenerationstudent, firstname, genderdescriptorid, generationcodesuffix, hispaniclatinoethnicity, lastsurname, limitedenglishproficiencydescriptorid, maidenname, middlename, multiplebirthstatus, personaltitleprefix, personid, preferredfirstname, preferredlastsurname, sexdescriptorid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: candidateaddress; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateaddress (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, congressionaldistrict, countyfipscode, donotpublishindicator, latitude, localedescriptorid, longitude, nameofcounty, createdate) FROM stdin;
\.


--
-- Data for Name: candidateaddressperiod; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateaddressperiod (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: candidatedisability; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatedisability (candidateidentifier, disabilitydescriptorid, disabilitydeterminationsourcetypedescriptorid, disabilitydiagnosis, orderofdisability, createdate) FROM stdin;
\.


--
-- Data for Name: candidatedisabilitydesignation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatedisabilitydesignation (candidateidentifier, disabilitydescriptorid, disabilitydesignationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociation (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, enddate, eppprogrampathwaydescriptorid, reasonexiteddescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociationcohortyear; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociationcohortyear (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, cohortyeartypedescriptorid, schoolyear, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4 (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, majorspecialization, enddate, minorspecialization, createdate) FROM stdin;
\.


--
-- Data for Name: candidateelectronicmail; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateelectronicmail (candidateidentifier, electronicmailaddress, electronicmailtypedescriptorid, donotpublishindicator, primaryemailaddressindicator, createdate) FROM stdin;
\.


--
-- Data for Name: candidatelanguage; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatelanguage (candidateidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidatelanguageuse; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatelanguageuse (candidateidentifier, languagedescriptorid, languageusedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidateothername; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidateothername (candidateidentifier, othernametypedescriptorid, firstname, generationcodesuffix, lastsurname, middlename, personaltitleprefix, createdate) FROM stdin;
\.


--
-- Data for Name: candidatepersonalidentificationdocument; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatepersonalidentificationdocument (candidateidentifier, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, documentexpirationdate, documenttitle, issuercountrydescriptorid, issuerdocumentidentificationcode, issuername, createdate) FROM stdin;
\.


--
-- Data for Name: candidaterace; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidaterace (candidateidentifier, racedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: candidatetelephone; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.candidatetelephone (candidateidentifier, telephonenumber, telephonenumbertypedescriptorid, donotpublishindicator, orderofpriority, textmessagecapabilityindicator, createdate) FROM stdin;
\.


--
-- Data for Name: certificationroutedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.certificationroutedescriptor (certificationroutedescriptorid) FROM stdin;
3398
3399
3400
3401
3402
3403
3404
3405
3406
3407
3408
\.


--
-- Data for Name: coteachingstyleobserveddescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.coteachingstyleobserveddescriptor (coteachingstyleobserveddescriptorid) FROM stdin;
3247
3248
3249
3250
3251
3252
3253
\.


--
-- Data for Name: credentialextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialextension (credentialidentifier, stateofissuestateabbreviationdescriptorid, boardcertificationindicator, certificationroutedescriptorid, certificationtitle, credentialstatusdate, credentialstatusdescriptorid, educatorroledescriptorid, personid, sourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialstatusdescriptor (credentialstatusdescriptorid) FROM stdin;
3197
3198
3199
3200
3201
3202
3203
3204
\.


--
-- Data for Name: credentialstudentacademicrecord; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.credentialstudentacademicrecord (credentialidentifier, stateofissuestateabbreviationdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogram; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorpreparationprogram (educationorganizationid, programname, programtypedescriptorid, accreditationstatusdescriptorid, programid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogramgradelevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorpreparationprogramgradelevel (educationorganizationid, programname, programtypedescriptorid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educatorroledescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.educatorroledescriptor (educatorroledescriptorid) FROM stdin;
3289
3290
3291
3292
3293
3294
3295
3296
3297
3298
3299
3300
3301
3302
3303
3304
3305
3306
3307
\.


--
-- Data for Name: englishlanguageexamdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.englishlanguageexamdescriptor (englishlanguageexamdescriptorid) FROM stdin;
3372
3373
3374
3375
\.


--
-- Data for Name: eppprogrampathwaydescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.eppprogrampathwaydescriptor (eppprogrampathwaydescriptorid) FROM stdin;
3385
3386
3387
3388
3389
\.


--
-- Data for Name: evaluation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluation (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationdescription, evaluationtypedescriptorid, interraterreliabilityscore, maxrating, minrating, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelement; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelement (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationtypedescriptorid, maxrating, minrating, sortorder, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementrating (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, areaofrefinement, areaofreinforcement, comments, evaluationelementratingleveldescriptorid, feedback, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationelementratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratinglevel (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelementratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratingleveldescriptor (evaluationelementratingleveldescriptorid) FROM stdin;
3350
3351
3352
3353
3354
3355
3356
3357
3358
\.


--
-- Data for Name: evaluationelementratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationelementratingresult (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjective; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjective (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationobjectivedescription, evaluationtypedescriptorid, maxrating, minrating, sortorder, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiverating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiverating (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, comments, objectiveratingleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiveratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiveratinglevel (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiveratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationobjectiveratingresult (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationperioddescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationperioddescriptor (evaluationperioddescriptorid) FROM stdin;
3234
3235
3236
3237
3238
3239
3240
3241
3242
3243
3244
\.


--
-- Data for Name: evaluationrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationrating (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, evaluationratingleveldescriptorid, evaluationratingstatusdescriptorid, localcoursecode, schoolid, sectionidentifier, sessionname, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: evaluationratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratinglevel (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingleveldescriptor (evaluationratingleveldescriptorid) FROM stdin;
3376
3377
3378
3379
3380
3381
3382
3383
3384
\.


--
-- Data for Name: evaluationratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingresult (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingreviewer; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingreviewer (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, reviewerpersonid, reviewersourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingreviewerreceivedtraining; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingreviewerreceivedtraining (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, interraterreliabilityscore, receivedtrainingdate, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationratingstatusdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationratingstatusdescriptor (evaluationratingstatusdescriptorid) FROM stdin;
3205
3206
3207
3208
3209
3210
\.


--
-- Data for Name: evaluationtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.evaluationtypedescriptor (evaluationtypedescriptorid) FROM stdin;
3211
3212
3213
3214
3215
3216
3217
3218
3219
3220
\.


--
-- Data for Name: financialaid; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.financialaid (aidtypedescriptorid, begindate, studentusi, aidamount, aidconditiondescription, enddate, pellgrantrecipient, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: genderdescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.genderdescriptor (genderdescriptorid) FROM stdin;
3359
3360
3361
3362
\.


--
-- Data for Name: objectiveratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.objectiveratingleveldescriptor (objectiveratingleveldescriptorid) FROM stdin;
3254
3255
3256
3257
3258
3259
3260
3261
3262
\.


--
-- Data for Name: performanceevaluation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluation (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, academicsubjectdescriptorid, performanceevaluationdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationgradelevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationgradelevel (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationrating; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationrating (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, actualdate, actualduration, actualtime, announced, comments, coteachingstyleobserveddescriptorid, performanceevaluationratingleveldescriptorid, scheduledate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratinglevel; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratinglevel (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid, maxrating, minrating, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingleveldescriptor (performanceevaluationratingleveldescriptorid) FROM stdin;
3327
3328
3329
3330
3331
3332
3333
3334
3335
\.


--
-- Data for Name: performanceevaluationratingresult; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingresult (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingreviewer; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingreviewer (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, reviewerpersonid, reviewersourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationratingreviewerreceivedtraining; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationratingreviewerreceivedtraining (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname, interraterreliabilityscore, receivedtrainingdate, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationtypedescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.performanceevaluationtypedescriptor (performanceevaluationtypedescriptorid) FROM stdin;
3317
3318
3319
3320
3321
3322
3323
3324
3325
3326
\.


--
-- Data for Name: rubricdimension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.rubricdimension (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, rubricrating, schoolyear, termdescriptorid, criteriondescription, dimensionorder, rubricratingleveldescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: rubricratingleveldescriptor; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.rubricratingleveldescriptor (rubricratingleveldescriptorid) FROM stdin;
3363
3364
3365
3366
3367
3368
3369
3370
3371
\.


--
-- Data for Name: schoolextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.schoolextension (schoolid, postsecondaryinstitutionid, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponseextension; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveyresponseextension (namespace, surveyidentifier, surveyresponseidentifier, personid, sourcesystemdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsepersontargetassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveyresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsepersontargetassociation; Type: TABLE DATA; Schema: tpdm; Owner: postgres
--

COPY tpdm.surveysectionresponsepersontargetassociation (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.academicweek (oldschoolid, oldweekidentifier, newschoolid, newweekidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.accountabilityrating (oldeducationorganizationid, oldratingtitle, oldschoolyear, neweducationorganizationid, newratingtitle, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessment (oldassessmentidentifier, oldnamespace, newassessmentidentifier, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessmentitem (oldassessmentidentifier, oldidentificationcode, oldnamespace, newassessmentidentifier, newidentificationcode, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessmentscorerangelearningstandard (oldassessmentidentifier, oldnamespace, oldscorerangeid, newassessmentidentifier, newnamespace, newscorerangeid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: balancesheetdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.balancesheetdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.bellschedule (oldbellschedulename, oldschoolid, newbellschedulename, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.calendar (oldcalendarcode, oldschoolid, oldschoolyear, newcalendarcode, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.calendardate (oldcalendarcode, olddate, oldschoolid, oldschoolyear, newcalendarcode, newdate, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: chartofaccount; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.chartofaccount (oldaccountidentifier, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.classperiod (oldclassperiodname, oldschoolid, newclassperiodname, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.cohort (oldcohortidentifier, oldeducationorganizationid, newcohortidentifier, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.communityproviderlicense (oldcommunityproviderid, oldlicenseidentifier, oldlicensingorganization, newcommunityproviderid, newlicenseidentifier, newlicensingorganization, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.competencyobjective (oldeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, neweducationorganizationid, newobjective, newobjectivegradeleveldescriptorid, newobjectivegradeleveldescriptornamespace, newobjectivegradeleveldescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: contact; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.contact (oldcontactusi, oldcontactuniqueid, newcontactusi, newcontactuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.course (oldcoursecode, oldeducationorganizationid, newcoursecode, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.courseoffering (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname, newlocalcoursecode, newschoolid, newschoolyear, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.coursetranscript (oldcourseattemptresultdescriptorid, oldcourseattemptresultdescriptornamespace, oldcourseattemptresultdescriptorcodevalue, oldcoursecode, oldcourseeducationorganizationid, oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, newcourseattemptresultdescriptorid, newcourseattemptresultdescriptornamespace, newcourseattemptresultdescriptorcodevalue, newcoursecode, newcourseeducationorganizationid, neweducationorganizationid, newschoolyear, newstudentusi, newstudentuniqueid, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.credential (oldcredentialidentifier, oldstateofissuestateabbreviationdescriptorid, oldstateofissuestateabbreviationdescriptornamespace, oldstateofissuestateabbreviationdescriptorcodevalue, newcredentialidentifier, newstateofissuestateabbreviationdescriptorid, newstateofissuestateabbreviationdescriptornamespace, newstateofissuestateabbreviationdescriptorcodevalue, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.descriptor (olddescriptorid, oldcodevalue, oldnamespace, newdescriptorid, newcodevalue, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: descriptormapping; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.descriptormapping (oldmappednamespace, oldmappedvalue, oldnamespace, oldvalue, newmappednamespace, newmappedvalue, newnamespace, newvalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.disciplineaction (olddisciplineactionidentifier, olddisciplinedate, oldstudentusi, oldstudentuniqueid, oldresponsibilityschoolid, newdisciplineactionidentifier, newdisciplinedate, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.disciplineincident (oldincidentidentifier, oldschoolid, newincidentidentifier, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationcontent (oldcontentidentifier, newcontentidentifier, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganization (oldeducationorganizationid, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationinterventionprescriptionassociation (oldeducationorganizationid, oldinterventionprescriptioneducationorganizationid, oldinterventionprescriptionidentificationcode, neweducationorganizationid, newinterventionprescriptioneducationorganizationid, newinterventionprescriptionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationnetworkassociation (oldeducationorganizationnetworkid, oldmembereducationorganizationid, neweducationorganizationnetworkid, newmembereducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationpeerassociation (oldeducationorganizationid, oldpeereducationorganizationid, neweducationorganizationid, newpeereducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationrubricdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.evaluationrubricdimension (oldevaluationrubricrating, oldprogrameducationorganizationid, oldprogramevaluationelementtitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newevaluationrubricrating, newprogrameducationorganizationid, newprogramevaluationelementtitle, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.feederschoolassociation (oldbegindate, oldfeederschoolid, oldschoolid, newbegindate, newfeederschoolid, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: functiondimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.functiondimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: funddimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.funddimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.generalstudentprogramassociation (oldbegindate, oldeducationorganizationid, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newbegindate, neweducationorganizationid, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.grade (oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolyear, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newbegindate, newgradetypedescriptorid, newgradetypedescriptornamespace, newgradetypedescriptorcodevalue, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newgradingperiodschoolyear, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.gradebookentry (oldgradebookentryidentifier, oldnamespace, newgradebookentryidentifier, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.gradingperiod (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldschoolid, oldschoolyear, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.graduationplan (oldeducationorganizationid, oldgraduationplantypedescriptorid, oldgraduationplantypedescriptornamespace, oldgraduationplantypedescriptorcodevalue, oldgraduationschoolyear, neweducationorganizationid, newgraduationplantypedescriptorid, newgraduationplantypedescriptornamespace, newgraduationplantypedescriptorcodevalue, newgraduationschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.intervention (oldeducationorganizationid, oldinterventionidentificationcode, neweducationorganizationid, newinterventionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.interventionprescription (oldeducationorganizationid, oldinterventionprescriptionidentificationcode, neweducationorganizationid, newinterventionprescriptionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.interventionstudy (oldeducationorganizationid, oldinterventionstudyidentificationcode, neweducationorganizationid, newinterventionstudyidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningstandard (oldlearningstandardid, newlearningstandardid, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningstandardequivalenceassociation (oldnamespace, oldsourcelearningstandardid, oldtargetlearningstandardid, newnamespace, newsourcelearningstandardid, newtargetlearningstandardid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localaccount; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localaccount (oldaccountidentifier, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localactual; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localactual (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localbudget; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localbudget (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localcontractedstaff; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localcontractedstaff (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localencumbrance; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localencumbrance (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localpayroll; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localpayroll (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.location (oldclassroomidentificationcode, oldschoolid, newclassroomidentificationcode, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: objectdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.objectdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.objectiveassessment (oldassessmentidentifier, oldidentificationcode, oldnamespace, newassessmentidentifier, newidentificationcode, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.openstaffposition (oldeducationorganizationid, oldrequisitionnumber, neweducationorganizationid, newrequisitionnumber, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: operationalunitdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.operationalunitdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.person (oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.postsecondaryevent (oldeventdate, oldpostsecondaryeventcategorydescriptorid, oldpostsecondaryeventcategorydescriptornamespace, oldpostsecondaryeventcategorydescriptorcodevalue, oldstudentusi, oldstudentuniqueid, neweventdate, newpostsecondaryeventcategorydescriptorid, newpostsecondaryeventcategorydescriptornamespace, newpostsecondaryeventcategorydescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.program (oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programevaluation (oldprogrameducationorganizationid, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newprogrameducationorganizationid, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationelement; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programevaluationelement (oldprogrameducationorganizationid, oldprogramevaluationelementtitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newprogrameducationorganizationid, newprogramevaluationelementtitle, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programevaluationobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programevaluationobjective (oldprogrameducationorganizationid, oldprogramevaluationobjectivetitle, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newprogrameducationorganizationid, newprogramevaluationobjectivetitle, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: projectdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.projectdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.reportcard (oldeducationorganizationid, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newgradingperiodschoolid, newgradingperiodschoolyear, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.restraintevent (oldrestrainteventidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newrestrainteventidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.schoolyeartype (oldschoolyear, newschoolyear, id, changeversion, createdate) FROM stdin;
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.section (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.sectionattendancetakenevent (oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, newcalendarcode, newdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.session (oldschoolid, oldschoolyear, oldsessionname, newschoolid, newschoolyear, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: sourcedimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.sourcedimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staff (oldstaffusi, oldstaffuniqueid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffabsenceevent (oldabsenceeventcategorydescriptorid, oldabsenceeventcategorydescriptornamespace, oldabsenceeventcategorydescriptorcodevalue, oldeventdate, oldstaffusi, oldstaffuniqueid, newabsenceeventcategorydescriptorid, newabsenceeventcategorydescriptornamespace, newabsenceeventcategorydescriptorcodevalue, neweventdate, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffcohortassociation (oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid, newbegindate, newcohortidentifier, neweducationorganizationid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffdisciplineincidentassociation (oldincidentidentifier, oldschoolid, oldstaffusi, oldstaffuniqueid, newincidentidentifier, newschoolid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationassignmentassociation (oldbegindate, oldeducationorganizationid, oldstaffclassificationdescriptorid, oldstaffclassificationdescriptornamespace, oldstaffclassificationdescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, neweducationorganizationid, newstaffclassificationdescriptorid, newstaffclassificationdescriptornamespace, newstaffclassificationdescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationcontactassociation (oldcontacttitle, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid, newcontacttitle, neweducationorganizationid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationemploymentassociation (oldeducationorganizationid, oldemploymentstatusdescriptorid, oldemploymentstatusdescriptornamespace, oldemploymentstatusdescriptorcodevalue, oldhiredate, oldstaffusi, oldstaffuniqueid, neweducationorganizationid, newemploymentstatusdescriptorid, newemploymentstatusdescriptornamespace, newemploymentstatusdescriptorcodevalue, newhiredate, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffleave (oldbegindate, oldstaffleaveeventcategorydescriptorid, oldstaffleaveeventcategorydescriptornamespace, oldstaffleaveeventcategorydescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, newstaffleaveeventcategorydescriptorid, newstaffleaveeventcategorydescriptornamespace, newstaffleaveeventcategorydescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffprogramassociation (oldbegindate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffschoolassociation (oldprogramassignmentdescriptorid, oldprogramassignmentdescriptornamespace, oldprogramassignmentdescriptorcodevalue, oldschoolid, oldstaffusi, oldstaffuniqueid, newprogramassignmentdescriptorid, newprogramassignmentdescriptornamespace, newprogramassignmentdescriptorcodevalue, newschoolid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffsectionassociation (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.student (oldstudentusi, oldstudentuniqueid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentacademicrecord (oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newschoolyear, newstudentusi, newstudentuniqueid, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentassessment (oldassessmentidentifier, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid, newassessmentidentifier, newnamespace, newstudentassessmentidentifier, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmenteducationorganizationassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentassessmenteducationorganizationassociation (oldassessmentidentifier, oldeducationorganizationassociationtypedescriptorid, oldeducationorganizationassociationtypedescriptornamespace, oldeducationorganizationassociationtypedescriptorcodevalue, oldeducationorganizationid, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid, newassessmentidentifier, neweducationorganizationassociationtypedescriptorid, neweducationorganizationassociationtypedescriptornamespace, neweducationorganizationassociationtypedescriptorcodevalue, neweducationorganizationid, newnamespace, newstudentassessmentidentifier, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcohortassociation (oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstudentusi, oldstudentuniqueid, newbegindate, newcohortidentifier, neweducationorganizationid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcompetencyobjective (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodname, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldobjectiveeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodname, newgradingperiodschoolid, newgradingperiodschoolyear, newobjectiveeducationorganizationid, newobjective, newobjectivegradeleveldescriptorid, newobjectivegradeleveldescriptornamespace, newobjectivegradeleveldescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcontactassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcontactassociation (oldcontactusi, oldcontactuniqueid, oldstudentusi, oldstudentuniqueid, newcontactusi, newcontactuniqueid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentbehaviorassociation (oldbehaviordescriptorid, oldbehaviordescriptornamespace, oldbehaviordescriptorcodevalue, oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newbehaviordescriptorid, newbehaviordescriptornamespace, newbehaviordescriptorcodevalue, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation (oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studenteducationorganizationassociation (oldeducationorganizationid, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studenteducationorganizationresponsibilityassociation (oldbegindate, oldeducationorganizationid, oldresponsibilitydescriptorid, oldresponsibilitydescriptornamespace, oldresponsibilitydescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newbegindate, neweducationorganizationid, newresponsibilitydescriptorid, newresponsibilitydescriptornamespace, newresponsibilitydescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentgradebookentry (oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid, newgradebookentryidentifier, newnamespace, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentinterventionassociation (oldeducationorganizationid, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newinterventionidentificationcode, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentinterventionattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweducationorganizationid, neweventdate, newinterventionidentificationcode, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentprogramattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweducationorganizationid, neweventdate, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramevaluation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentprogramevaluation (oldevaluationdate, oldprogrameducationorganizationid, oldprogramevaluationperioddescriptorid, oldprogramevaluationperioddescriptornamespace, oldprogramevaluationperioddescriptorcodevalue, oldprogramevaluationtitle, oldprogramevaluationtypedescriptorid, oldprogramevaluationtypedescriptornamespace, oldprogramevaluationtypedescriptorcodevalue, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newevaluationdate, newprogrameducationorganizationid, newprogramevaluationperioddescriptorid, newprogramevaluationperioddescriptornamespace, newprogramevaluationperioddescriptorcodevalue, newprogramevaluationtitle, newprogramevaluationtypedescriptorid, newprogramevaluationtypedescriptornamespace, newprogramevaluationtypedescriptorcodevalue, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentschoolassociation (oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid, newentrydate, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentschoolattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newschoolid, newschoolyear, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentsectionassociation (oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentsectionattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogrameligibilityassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation (oldconsenttoevaluationreceiveddate, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newconsenttoevaluationreceiveddate, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.survey (oldnamespace, oldsurveyidentifier, newnamespace, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveycourseassociation (oldcoursecode, oldeducationorganizationid, oldnamespace, oldsurveyidentifier, newcoursecode, neweducationorganizationid, newnamespace, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyprogramassociation (oldeducationorganizationid, oldnamespace, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldsurveyidentifier, neweducationorganizationid, newnamespace, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyquestion (oldnamespace, oldquestioncode, oldsurveyidentifier, newnamespace, newquestioncode, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyquestionresponse (oldnamespace, oldquestioncode, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newquestioncode, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponse (oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation (oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, neweducationorganizationid, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponsestafftargetassociation (oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newstaffusi, newstaffuniqueid, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysection (oldnamespace, oldsurveyidentifier, oldsurveysectiontitle, newnamespace, newsurveyidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionassociation (oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier, newlocalcoursecode, newnamespace, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponse (oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation (oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, neweducationorganizationid, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponsestafftargetassociation (oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newstaffusi, newstaffuniqueid, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: candidate; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.candidate (oldcandidateidentifier, newcandidateidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: candidateeducatorpreparationprogramassociation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.candidateeducatorpreparationprogramassociation (oldbegindate, oldcandidateidentifier, oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, newbegindate, newcandidateidentifier, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educatorpreparationprogram; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.educatorpreparationprogram (oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluation (oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelement; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationelement (oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationelementtitle, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationelementrating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationelementrating (oldeducationorganizationid, oldevaluationdate, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationdate, newevaluationelementtitle, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjective; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationobjective (oldeducationorganizationid, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationobjectiverating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationobjectiverating (oldeducationorganizationid, oldevaluationdate, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationdate, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: evaluationrating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.evaluationrating (oldeducationorganizationid, oldevaluationdate, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationdate, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: financialaid; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.financialaid (oldaidtypedescriptorid, oldaidtypedescriptornamespace, oldaidtypedescriptorcodevalue, oldbegindate, oldstudentusi, oldstudentuniqueid, newaidtypedescriptorid, newaidtypedescriptornamespace, newaidtypedescriptorcodevalue, newbegindate, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.performanceevaluation (oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: performanceevaluationrating; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.performanceevaluationrating (oldeducationorganizationid, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldpersonid, oldschoolyear, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newpersonid, newschoolyear, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: rubricdimension; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.rubricdimension (oldeducationorganizationid, oldevaluationelementtitle, oldevaluationobjectivetitle, oldevaluationperioddescriptorid, oldevaluationperioddescriptornamespace, oldevaluationperioddescriptorcodevalue, oldevaluationtitle, oldperformanceevaluationtitle, oldperformanceevaluationtypedescriptorid, oldperformanceevaluationtypedescriptornamespace, oldperformanceevaluationtypedescriptorcodevalue, oldrubricrating, oldschoolyear, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newevaluationelementtitle, newevaluationobjectivetitle, newevaluationperioddescriptorid, newevaluationperioddescriptornamespace, newevaluationperioddescriptorcodevalue, newevaluationtitle, newperformanceevaluationtitle, newperformanceevaluationtypedescriptorid, newperformanceevaluationtypedescriptornamespace, newperformanceevaluationtypedescriptorcodevalue, newrubricrating, newschoolyear, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsepersontargetassociation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.surveyresponsepersontargetassociation (oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsepersontargetassociation; Type: TABLE DATA; Schema: tracked_changes_tpdm; Owner: postgres
--

COPY tracked_changes_tpdm.surveysectionresponsepersontargetassociation (oldnamespace, oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Name: changeversionsequence; Type: SEQUENCE SET; Schema: changes; Owner: postgres
--

SELECT pg_catalog.setval('changes.changeversionsequence', 3582, true);


--
-- Name: contact_contactusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.contact_contactusi_seq', 1, false);


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.descriptor_descriptorid_seq', 3413, true);


--
-- Name: staff_staffusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.staff_staffusi_seq', 1, false);


--
-- Name: student_studentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.student_studentusi_seq', 1, false);


--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."DeployJournal_schemaversionsid_seq"', 69, true);


--
-- Name: educationorganizationidtoeducationorganizationid educationorganizationidtoeducationorganizationid_pk; Type: CONSTRAINT; Schema: auth; Owner: postgres
--

ALTER TABLE ONLY auth.educationorganizationidtoeducationorganizationid
    ADD CONSTRAINT educationorganizationidtoeducationorganizationid_pk PRIMARY KEY (sourceeducationorganizationid, targeteducationorganizationid);


--
-- Name: absenceeventcategorydescriptor absenceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT absenceeventcategorydescriptor_pk PRIMARY KEY (absenceeventcategorydescriptorid);


--
-- Name: academichonorcategorydescriptor academichonorcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT academichonorcategorydescriptor_pk PRIMARY KEY (academichonorcategorydescriptorid);


--
-- Name: academicsubjectdescriptor academicsubjectdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT academicsubjectdescriptor_pk PRIMARY KEY (academicsubjectdescriptorid);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (schoolid, weekidentifier);


--
-- Name: accommodationdescriptor accommodationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT accommodationdescriptor_pk PRIMARY KEY (accommodationdescriptorid);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (educationorganizationid, ratingtitle, schoolyear);


--
-- Name: accounttypedescriptor accounttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accounttypedescriptor
    ADD CONSTRAINT accounttypedescriptor_pk PRIMARY KEY (accounttypedescriptorid);


--
-- Name: achievementcategorydescriptor achievementcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT achievementcategorydescriptor_pk PRIMARY KEY (achievementcategorydescriptorid);


--
-- Name: additionalcredittypedescriptor additionalcredittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT additionalcredittypedescriptor_pk PRIMARY KEY (additionalcredittypedescriptorid);


--
-- Name: addresstypedescriptor addresstypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT addresstypedescriptor_pk PRIMARY KEY (addresstypedescriptorid);


--
-- Name: administrationenvironmentdescriptor administrationenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT administrationenvironmentdescriptor_pk PRIMARY KEY (administrationenvironmentdescriptorid);


--
-- Name: administrativefundingcontroldescriptor administrativefundingcontroldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT administrativefundingcontroldescriptor_pk PRIMARY KEY (administrativefundingcontroldescriptorid);


--
-- Name: ancestryethnicorigindescriptor ancestryethnicorigindescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT ancestryethnicorigindescriptor_pk PRIMARY KEY (ancestryethnicorigindescriptorid);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentacademicsubject assessmentacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT assessmentacademicsubject_pk PRIMARY KEY (assessmentidentifier, namespace, academicsubjectdescriptorid);


--
-- Name: assessmentassessedgradelevel assessmentassessedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT assessmentassessedgradelevel_pk PRIMARY KEY (assessmentidentifier, namespace, gradeleveldescriptorid);


--
-- Name: assessmentcategorydescriptor assessmentcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT assessmentcategorydescriptor_pk PRIMARY KEY (assessmentcategorydescriptorid);


--
-- Name: assessmentcontentstandard assessmentcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT assessmentcontentstandard_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentcontentstandardauthor assessmentcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT assessmentcontentstandardauthor_pk PRIMARY KEY (assessmentidentifier, namespace, author);


--
-- Name: assessmentidentificationcode assessmentidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT assessmentidentificationcode_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentidentificationsystemdescriptorid);


--
-- Name: assessmentidentificationsystemdescriptor assessmentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT assessmentidentificationsystemdescriptor_pk PRIMARY KEY (assessmentidentificationsystemdescriptorid);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: assessmentitemcategorydescriptor assessmentitemcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT assessmentitemcategorydescriptor_pk PRIMARY KEY (assessmentitemcategorydescriptorid);


--
-- Name: assessmentitemlearningstandard assessmentitemlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT assessmentitemlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, learningstandardid);


--
-- Name: assessmentitempossibleresponse assessmentitempossibleresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT assessmentitempossibleresponse_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, responsevalue);


--
-- Name: assessmentitemresultdescriptor assessmentitemresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT assessmentitemresultdescriptor_pk PRIMARY KEY (assessmentitemresultdescriptorid);


--
-- Name: assessmentlanguage assessmentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT assessmentlanguage_pk PRIMARY KEY (assessmentidentifier, namespace, languagedescriptorid);


--
-- Name: assessmentperformancelevel assessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT assessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: assessmentperiod assessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT assessmentperiod_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentperioddescriptorid);


--
-- Name: assessmentperioddescriptor assessmentperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT assessmentperioddescriptor_pk PRIMARY KEY (assessmentperioddescriptorid);


--
-- Name: assessmentplatformtype assessmentplatformtype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT assessmentplatformtype_pk PRIMARY KEY (assessmentidentifier, namespace, platformtypedescriptorid);


--
-- Name: assessmentprogram assessmentprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT assessmentprogram_pk PRIMARY KEY (assessmentidentifier, namespace, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor assessmentreportingmethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT assessmentreportingmethoddescriptor_pk PRIMARY KEY (assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore assessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT assessmentscore_pk PRIMARY KEY (assessmentidentifier, namespace, assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (assessmentidentifier, namespace, scorerangeid);


--
-- Name: assessmentscorerangelearningstandardlearningstandard assessmentscorerangelearningstandardlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandardlearningstandard_pk PRIMARY KEY (assessmentidentifier, namespace, scorerangeid, learningstandardid);


--
-- Name: assessmentsection assessmentsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT assessmentsection_pk PRIMARY KEY (assessmentidentifier, namespace, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: assignmentlatestatusdescriptor assignmentlatestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assignmentlatestatusdescriptor
    ADD CONSTRAINT assignmentlatestatusdescriptor_pk PRIMARY KEY (assignmentlatestatusdescriptorid);


--
-- Name: attemptstatusdescriptor attemptstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT attemptstatusdescriptor_pk PRIMARY KEY (attemptstatusdescriptorid);


--
-- Name: attendanceeventcategorydescriptor attendanceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT attendanceeventcategorydescriptor_pk PRIMARY KEY (attendanceeventcategorydescriptorid);


--
-- Name: balancesheetdimension balancesheetdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimension
    ADD CONSTRAINT balancesheetdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: balancesheetdimensionreportingtag balancesheetdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT balancesheetdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: barriertointernetaccessinresidencedescriptor barriertointernetaccessinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT barriertointernetaccessinresidencedescriptor_pk PRIMARY KEY (barriertointernetaccessinresidencedescriptorid);


--
-- Name: behaviordescriptor behaviordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT behaviordescriptor_pk PRIMARY KEY (behaviordescriptorid);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (bellschedulename, schoolid);


--
-- Name: bellscheduleclassperiod bellscheduleclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT bellscheduleclassperiod_pk PRIMARY KEY (bellschedulename, schoolid, classperiodname);


--
-- Name: bellscheduledate bellscheduledate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT bellscheduledate_pk PRIMARY KEY (bellschedulename, schoolid, date);


--
-- Name: bellschedulegradelevel bellschedulegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT bellschedulegradelevel_pk PRIMARY KEY (bellschedulename, schoolid, gradeleveldescriptorid);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (calendarcode, schoolid, schoolyear);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (calendarcode, date, schoolid, schoolyear);


--
-- Name: calendardatecalendarevent calendardatecalendarevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT calendardatecalendarevent_pk PRIMARY KEY (calendarcode, date, schoolid, schoolyear, calendareventdescriptorid);


--
-- Name: calendareventdescriptor calendareventdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT calendareventdescriptor_pk PRIMARY KEY (calendareventdescriptorid);


--
-- Name: calendargradelevel calendargradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT calendargradelevel_pk PRIMARY KEY (calendarcode, schoolid, schoolyear, gradeleveldescriptorid);


--
-- Name: calendartypedescriptor calendartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT calendartypedescriptor_pk PRIMARY KEY (calendartypedescriptorid);


--
-- Name: careerpathwaydescriptor careerpathwaydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT careerpathwaydescriptor_pk PRIMARY KEY (careerpathwaydescriptorid);


--
-- Name: charterapprovalagencytypedescriptor charterapprovalagencytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT charterapprovalagencytypedescriptor_pk PRIMARY KEY (charterapprovalagencytypedescriptorid);


--
-- Name: charterstatusdescriptor charterstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT charterstatusdescriptor_pk PRIMARY KEY (charterstatusdescriptorid);


--
-- Name: chartofaccount chartofaccount_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT chartofaccount_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: chartofaccountreportingtag chartofaccountreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT chartofaccountreportingtag_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid);


--
-- Name: citizenshipstatusdescriptor citizenshipstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT citizenshipstatusdescriptor_pk PRIMARY KEY (citizenshipstatusdescriptorid);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (classperiodname, schoolid);


--
-- Name: classperiodmeetingtime classperiodmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT classperiodmeetingtime_pk PRIMARY KEY (classperiodname, schoolid, endtime, starttime);


--
-- Name: classroompositiondescriptor classroompositiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT classroompositiondescriptor_pk PRIMARY KEY (classroompositiondescriptorid);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (cohortidentifier, educationorganizationid);


--
-- Name: cohortprogram cohortprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT cohortprogram_pk PRIMARY KEY (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: cohortscopedescriptor cohortscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT cohortscopedescriptor_pk PRIMARY KEY (cohortscopedescriptorid);


--
-- Name: cohorttypedescriptor cohorttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT cohorttypedescriptor_pk PRIMARY KEY (cohorttypedescriptorid);


--
-- Name: cohortyeartypedescriptor cohortyeartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT cohortyeartypedescriptor_pk PRIMARY KEY (cohortyeartypedescriptorid);


--
-- Name: communityorganization communityorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT communityorganization_pk PRIMARY KEY (communityorganizationid);


--
-- Name: communityprovider communityprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT communityprovider_pk PRIMARY KEY (communityproviderid);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (communityproviderid, licenseidentifier, licensingorganization);


--
-- Name: competencyleveldescriptor competencyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT competencyleveldescriptor_pk PRIMARY KEY (competencyleveldescriptorid);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: contact contact_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact
    ADD CONSTRAINT contact_pk PRIMARY KEY (contactusi);


--
-- Name: contactaddress contactaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT contactaddress_pk PRIMARY KEY (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: contactaddressperiod contactaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddressperiod
    ADD CONSTRAINT contactaddressperiod_pk PRIMARY KEY (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: contactelectronicmail contactelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactelectronicmail
    ADD CONSTRAINT contactelectronicmail_pk PRIMARY KEY (contactusi, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: contactinternationaladdress contactinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactinternationaladdress
    ADD CONSTRAINT contactinternationaladdress_pk PRIMARY KEY (contactusi, addresstypedescriptorid);


--
-- Name: contactlanguage contactlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguage
    ADD CONSTRAINT contactlanguage_pk PRIMARY KEY (contactusi, languagedescriptorid);


--
-- Name: contactlanguageuse contactlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguageuse
    ADD CONSTRAINT contactlanguageuse_pk PRIMARY KEY (contactusi, languagedescriptorid, languageusedescriptorid);


--
-- Name: contactothername contactothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactothername
    ADD CONSTRAINT contactothername_pk PRIMARY KEY (contactusi, othernametypedescriptorid);


--
-- Name: contactpersonalidentificationdocument contactpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT contactpersonalidentificationdocument_pk PRIMARY KEY (contactusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: contacttelephone contacttelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttelephone
    ADD CONSTRAINT contacttelephone_pk PRIMARY KEY (contactusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: contacttypedescriptor contacttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT contacttypedescriptor_pk PRIMARY KEY (contacttypedescriptorid);


--
-- Name: contentclassdescriptor contentclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT contentclassdescriptor_pk PRIMARY KEY (contentclassdescriptorid);


--
-- Name: continuationofservicesreasondescriptor continuationofservicesreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT continuationofservicesreasondescriptor_pk PRIMARY KEY (continuationofservicesreasondescriptorid);


--
-- Name: costratedescriptor costratedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT costratedescriptor_pk PRIMARY KEY (costratedescriptorid);


--
-- Name: countrydescriptor countrydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT countrydescriptor_pk PRIMARY KEY (countrydescriptorid);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (coursecode, educationorganizationid);


--
-- Name: courseacademicsubject courseacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseacademicsubject
    ADD CONSTRAINT courseacademicsubject_pk PRIMARY KEY (coursecode, educationorganizationid, academicsubjectdescriptorid);


--
-- Name: courseattemptresultdescriptor courseattemptresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT courseattemptresultdescriptor_pk PRIMARY KEY (courseattemptresultdescriptorid);


--
-- Name: coursecompetencylevel coursecompetencylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT coursecompetencylevel_pk PRIMARY KEY (coursecode, educationorganizationid, competencyleveldescriptorid);


--
-- Name: coursedefinedbydescriptor coursedefinedbydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT coursedefinedbydescriptor_pk PRIMARY KEY (coursedefinedbydescriptorid);


--
-- Name: coursegpaapplicabilitydescriptor coursegpaapplicabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT coursegpaapplicabilitydescriptor_pk PRIMARY KEY (coursegpaapplicabilitydescriptorid);


--
-- Name: courseidentificationcode courseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT courseidentificationcode_pk PRIMARY KEY (coursecode, educationorganizationid, courseidentificationsystemdescriptorid);


--
-- Name: courseidentificationsystemdescriptor courseidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT courseidentificationsystemdescriptor_pk PRIMARY KEY (courseidentificationsystemdescriptorid);


--
-- Name: courselearningstandard courselearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT courselearningstandard_pk PRIMARY KEY (coursecode, educationorganizationid, learningstandardid);


--
-- Name: courselevelcharacteristic courselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT courselevelcharacteristic_pk PRIMARY KEY (coursecode, educationorganizationid, courselevelcharacteristicdescriptorid);


--
-- Name: courselevelcharacteristicdescriptor courselevelcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT courselevelcharacteristicdescriptor_pk PRIMARY KEY (courselevelcharacteristicdescriptorid);


--
-- Name: courseofferedgradelevel courseofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT courseofferedgradelevel_pk PRIMARY KEY (coursecode, educationorganizationid, gradeleveldescriptorid);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingcourselevelcharacteristic courseofferingcourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT courseofferingcourselevelcharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname, courselevelcharacteristicdescriptorid);


--
-- Name: courseofferingcurriculumused courseofferingcurriculumused_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT courseofferingcurriculumused_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname, curriculumuseddescriptorid);


--
-- Name: courseofferingofferedgradelevel courseofferingofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT courseofferingofferedgradelevel_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname, gradeleveldescriptorid);


--
-- Name: courserepeatcodedescriptor courserepeatcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT courserepeatcodedescriptor_pk PRIMARY KEY (courserepeatcodedescriptorid);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptacademicsubject coursetranscriptacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT coursetranscriptacademicsubject_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, academicsubjectdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode coursetranscriptalternativecourseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT coursetranscriptalternativecourseidentificationcode_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, courseidentificationsystemdescriptorid);


--
-- Name: coursetranscriptcreditcategory coursetranscriptcreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT coursetranscriptcreditcategory_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, creditcategorydescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits coursetranscriptearnedadditionalcredits_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT coursetranscriptearnedadditionalcredits_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, additionalcredittypedescriptorid);


--
-- Name: coursetranscriptpartialcoursetranscriptawards coursetranscriptpartialcoursetranscriptawards_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT coursetranscriptpartialcoursetranscriptawards_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, awarddate);


--
-- Name: coursetranscriptprogram coursetranscriptprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptprogram
    ADD CONSTRAINT coursetranscriptprogram_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, programname, programtypedescriptorid);


--
-- Name: coursetranscriptsection coursetranscriptsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptsection
    ADD CONSTRAINT coursetranscriptsection_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, localcoursecode, schoolid, sectionidentifier, sessionname);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialacademicsubject credentialacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT credentialacademicsubject_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, academicsubjectdescriptorid);


--
-- Name: credentialendorsement credentialendorsement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT credentialendorsement_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, credentialendorsement);


--
-- Name: credentialfielddescriptor credentialfielddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT credentialfielddescriptor_pk PRIMARY KEY (credentialfielddescriptorid);


--
-- Name: credentialgradelevel credentialgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT credentialgradelevel_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, gradeleveldescriptorid);


--
-- Name: credentialtypedescriptor credentialtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT credentialtypedescriptor_pk PRIMARY KEY (credentialtypedescriptorid);


--
-- Name: creditcategorydescriptor creditcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT creditcategorydescriptor_pk PRIMARY KEY (creditcategorydescriptorid);


--
-- Name: credittypedescriptor credittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT credittypedescriptor_pk PRIMARY KEY (credittypedescriptorid);


--
-- Name: cteprogramservicedescriptor cteprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT cteprogramservicedescriptor_pk PRIMARY KEY (cteprogramservicedescriptorid);


--
-- Name: curriculumuseddescriptor curriculumuseddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT curriculumuseddescriptor_pk PRIMARY KEY (curriculumuseddescriptorid);


--
-- Name: deliverymethoddescriptor deliverymethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT deliverymethoddescriptor_pk PRIMARY KEY (deliverymethoddescriptorid);


--
-- Name: descriptor descriptor_ak; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_ak UNIQUE (namespace, codevalue);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (descriptorid);


--
-- Name: descriptormapping descriptormapping_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormapping
    ADD CONSTRAINT descriptormapping_pk PRIMARY KEY (mappednamespace, mappedvalue, namespace, value);


--
-- Name: descriptormappingmodelentity descriptormappingmodelentity_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT descriptormappingmodelentity_pk PRIMARY KEY (mappednamespace, mappedvalue, namespace, value, modelentitydescriptorid);


--
-- Name: diagnosisdescriptor diagnosisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT diagnosisdescriptor_pk PRIMARY KEY (diagnosisdescriptorid);


--
-- Name: diplomaleveldescriptor diplomaleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT diplomaleveldescriptor_pk PRIMARY KEY (diplomaleveldescriptorid);


--
-- Name: diplomatypedescriptor diplomatypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT diplomatypedescriptor_pk PRIMARY KEY (diplomatypedescriptorid);


--
-- Name: disabilitydescriptor disabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT disabilitydescriptor_pk PRIMARY KEY (disabilitydescriptorid);


--
-- Name: disabilitydesignationdescriptor disabilitydesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT disabilitydesignationdescriptor_pk PRIMARY KEY (disabilitydesignationdescriptorid);


--
-- Name: disabilitydeterminationsourcetypedescriptor disabilitydeterminationsourcetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT disabilitydeterminationsourcetypedescriptor_pk PRIMARY KEY (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: disciplineactiondiscipline disciplineactiondiscipline_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT disciplineactiondiscipline_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, disciplinedescriptorid);


--
-- Name: disciplineactionlengthdifferencereasondescriptor disciplineactionlengthdifferencereasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT disciplineactionlengthdifferencereasondescriptor_pk PRIMARY KEY (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineactionstaff disciplineactionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT disciplineactionstaff_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, staffusi);


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation disciplineactionstudentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT disciplineactionstudentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi, behaviordescriptorid, incidentidentifier, schoolid);


--
-- Name: disciplinedescriptor disciplinedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT disciplinedescriptor_pk PRIMARY KEY (disciplinedescriptorid);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (incidentidentifier, schoolid);


--
-- Name: disciplineincidentbehavior disciplineincidentbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT disciplineincidentbehavior_pk PRIMARY KEY (incidentidentifier, schoolid, behaviordescriptorid);


--
-- Name: disciplineincidentexternalparticipant disciplineincidentexternalparticipant_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT disciplineincidentexternalparticipant_pk PRIMARY KEY (incidentidentifier, schoolid, disciplineincidentparticipationcodedescriptorid, firstname, lastsurname);


--
-- Name: disciplineincidentparticipationcodedescriptor disciplineincidentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT disciplineincidentparticipationcodedescriptor_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid);


--
-- Name: disciplineincidentweapon disciplineincidentweapon_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT disciplineincidentweapon_pk PRIMARY KEY (incidentidentifier, schoolid, weapondescriptorid);


--
-- Name: educationalenvironmentdescriptor educationalenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT educationalenvironmentdescriptor_pk PRIMARY KEY (educationalenvironmentdescriptorid);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (contentidentifier);


--
-- Name: educationcontentappropriategradelevel educationcontentappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT educationcontentappropriategradelevel_pk PRIMARY KEY (contentidentifier, gradeleveldescriptorid);


--
-- Name: educationcontentappropriatesex educationcontentappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT educationcontentappropriatesex_pk PRIMARY KEY (contentidentifier, sexdescriptorid);


--
-- Name: educationcontentauthor educationcontentauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT educationcontentauthor_pk PRIMARY KEY (contentidentifier, author);


--
-- Name: educationcontentderivativesourceeducationcontent educationcontentderivativesourceeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT educationcontentderivativesourceeducationcontent_pk PRIMARY KEY (contentidentifier, derivativesourcecontentidentifier);


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri educationcontentderivativesourcelearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT educationcontentderivativesourcelearningresourcemetadatauri_pk PRIMARY KEY (contentidentifier, derivativesourcelearningresourcemetadatauri);


--
-- Name: educationcontentderivativesourceuri educationcontentderivativesourceuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT educationcontentderivativesourceuri_pk PRIMARY KEY (contentidentifier, derivativesourceuri);


--
-- Name: educationcontentlanguage educationcontentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT educationcontentlanguage_pk PRIMARY KEY (contentidentifier, languagedescriptorid);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (educationorganizationid);


--
-- Name: educationorganizationaddress educationorganizationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT educationorganizationaddress_pk PRIMARY KEY (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: educationorganizationaddressperiod educationorganizationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT educationorganizationaddressperiod_pk PRIMARY KEY (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: educationorganizationassociationtypedescriptor educationorganizationassociationtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationassociationtypedescriptor
    ADD CONSTRAINT educationorganizationassociationtypedescriptor_pk PRIMARY KEY (educationorganizationassociationtypedescriptorid);


--
-- Name: educationorganizationcategory educationorganizationcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT educationorganizationcategory_pk PRIMARY KEY (educationorganizationid, educationorganizationcategorydescriptorid);


--
-- Name: educationorganizationcategorydescriptor educationorganizationcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT educationorganizationcategorydescriptor_pk PRIMARY KEY (educationorganizationcategorydescriptorid);


--
-- Name: educationorganizationidentificationcode educationorganizationidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT educationorganizationidentificationcode_pk PRIMARY KEY (educationorganizationid, educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor educationorganizationidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT educationorganizationidentificationsystemdescriptor_pk PRIMARY KEY (educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationindicator educationorganizationindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT educationorganizationindicator_pk PRIMARY KEY (educationorganizationid, indicatordescriptorid);


--
-- Name: educationorganizationindicatorperiod educationorganizationindicatorperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT educationorganizationindicatorperiod_pk PRIMARY KEY (educationorganizationid, indicatordescriptorid, begindate);


--
-- Name: educationorganizationinstitutiontelephone educationorganizationinstitutiontelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT educationorganizationinstitutiontelephone_pk PRIMARY KEY (educationorganizationid, institutiontelephonenumbertypedescriptorid);


--
-- Name: educationorganizationinternationaladdress educationorganizationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT educationorganizationinternationaladdress_pk PRIMARY KEY (educationorganizationid, addresstypedescriptorid);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: educationorganizationnetwork educationorganizationnetwork_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT educationorganizationnetwork_pk PRIMARY KEY (educationorganizationnetworkid);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (educationorganizationnetworkid, membereducationorganizationid);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (educationorganizationid, peereducationorganizationid);


--
-- Name: educationplandescriptor educationplandescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT educationplandescriptor_pk PRIMARY KEY (educationplandescriptorid);


--
-- Name: educationservicecenter educationservicecenter_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT educationservicecenter_pk PRIMARY KEY (educationservicecenterid);


--
-- Name: electronicmailtypedescriptor electronicmailtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT electronicmailtypedescriptor_pk PRIMARY KEY (electronicmailtypedescriptorid);


--
-- Name: eligibilitydelayreasondescriptor eligibilitydelayreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eligibilitydelayreasondescriptor
    ADD CONSTRAINT eligibilitydelayreasondescriptor_pk PRIMARY KEY (eligibilitydelayreasondescriptorid);


--
-- Name: eligibilityevaluationtypedescriptor eligibilityevaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eligibilityevaluationtypedescriptor
    ADD CONSTRAINT eligibilityevaluationtypedescriptor_pk PRIMARY KEY (eligibilityevaluationtypedescriptorid);


--
-- Name: employmentstatusdescriptor employmentstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT employmentstatusdescriptor_pk PRIMARY KEY (employmentstatusdescriptorid);


--
-- Name: enrollmenttypedescriptor enrollmenttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.enrollmenttypedescriptor
    ADD CONSTRAINT enrollmenttypedescriptor_pk PRIMARY KEY (enrollmenttypedescriptorid);


--
-- Name: entrygradelevelreasondescriptor entrygradelevelreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT entrygradelevelreasondescriptor_pk PRIMARY KEY (entrygradelevelreasondescriptorid);


--
-- Name: entrytypedescriptor entrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT entrytypedescriptor_pk PRIMARY KEY (entrytypedescriptorid);


--
-- Name: evaluationdelayreasondescriptor evaluationdelayreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationdelayreasondescriptor
    ADD CONSTRAINT evaluationdelayreasondescriptor_pk PRIMARY KEY (evaluationdelayreasondescriptorid);


--
-- Name: evaluationrubricdimension evaluationrubricdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationrubricdimension
    ADD CONSTRAINT evaluationrubricdimension_pk PRIMARY KEY (evaluationrubricrating, programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: eventcircumstancedescriptor eventcircumstancedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT eventcircumstancedescriptor_pk PRIMARY KEY (eventcircumstancedescriptorid);


--
-- Name: exitwithdrawtypedescriptor exitwithdrawtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT exitwithdrawtypedescriptor_pk PRIMARY KEY (exitwithdrawtypedescriptorid);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (begindate, feederschoolid, schoolid);


--
-- Name: financialcollectiondescriptor financialcollectiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.financialcollectiondescriptor
    ADD CONSTRAINT financialcollectiondescriptor_pk PRIMARY KEY (financialcollectiondescriptorid);


--
-- Name: functiondimension functiondimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimension
    ADD CONSTRAINT functiondimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: functiondimensionreportingtag functiondimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT functiondimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: funddimension funddimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimension
    ADD CONSTRAINT funddimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: funddimensionreportingtag funddimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT funddimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus generalstudentprogramassociationprogramparticipationstatus_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT generalstudentprogramassociationprogramparticipationstatus_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, participationstatusdescriptorid, statusbegindate);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (gradebookentryidentifier, namespace);


--
-- Name: gradebookentrylearningstandard gradebookentrylearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT gradebookentrylearningstandard_pk PRIMARY KEY (gradebookentryidentifier, namespace, learningstandardid);


--
-- Name: gradebookentrytypedescriptor gradebookentrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT gradebookentrytypedescriptor_pk PRIMARY KEY (gradebookentrytypedescriptorid);


--
-- Name: gradelearningstandardgrade gradelearningstandardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT gradelearningstandardgrade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, learningstandardid);


--
-- Name: gradeleveldescriptor gradeleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT gradeleveldescriptor_pk PRIMARY KEY (gradeleveldescriptorid);


--
-- Name: gradepointaveragetypedescriptor gradepointaveragetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT gradepointaveragetypedescriptor_pk PRIMARY KEY (gradepointaveragetypedescriptorid);


--
-- Name: gradetypedescriptor gradetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT gradetypedescriptor_pk PRIMARY KEY (gradetypedescriptorid);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: gradingperioddescriptor gradingperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT gradingperioddescriptor_pk PRIMARY KEY (gradingperioddescriptorid);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycourse graduationplancreditsbycourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT graduationplancreditsbycourse_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname);


--
-- Name: graduationplancreditsbycoursecourse graduationplancreditsbycoursecourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT graduationplancreditsbycoursecourse_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname, coursecode, courseeducationorganizationid);


--
-- Name: graduationplancreditsbycreditcategory graduationplancreditsbycreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT graduationplancreditsbycreditcategory_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, creditcategorydescriptorid);


--
-- Name: graduationplancreditsbysubject graduationplancreditsbysubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT graduationplancreditsbysubject_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, academicsubjectdescriptorid);


--
-- Name: graduationplanrequiredassessment graduationplanrequiredassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT graduationplanrequiredassessment_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessmentperformancelevel graduationplanrequiredassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT graduationplanrequiredassessmentperformancelevel_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessmentscore graduationplanrequiredassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT graduationplanrequiredassessmentscore_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace, assessmentreportingmethoddescriptorid);


--
-- Name: graduationplantypedescriptor graduationplantypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT graduationplantypedescriptor_pk PRIMARY KEY (graduationplantypedescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor gunfreeschoolsactreportingstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT gunfreeschoolsactreportingstatusdescriptor_pk PRIMARY KEY (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: homelessprimarynighttimeresidencedescriptor homelessprimarynighttimeresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT homelessprimarynighttimeresidencedescriptor_pk PRIMARY KEY (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: homelessprogramservicedescriptor homelessprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT homelessprogramservicedescriptor_pk PRIMARY KEY (homelessprogramservicedescriptorid);


--
-- Name: ideapartdescriptor ideapartdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ideapartdescriptor
    ADD CONSTRAINT ideapartdescriptor_pk PRIMARY KEY (ideapartdescriptorid);


--
-- Name: identificationdocumentusedescriptor identificationdocumentusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT identificationdocumentusedescriptor_pk PRIMARY KEY (identificationdocumentusedescriptorid);


--
-- Name: incidentlocationdescriptor incidentlocationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT incidentlocationdescriptor_pk PRIMARY KEY (incidentlocationdescriptorid);


--
-- Name: indicatordescriptor indicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT indicatordescriptor_pk PRIMARY KEY (indicatordescriptorid);


--
-- Name: indicatorgroupdescriptor indicatorgroupdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT indicatorgroupdescriptor_pk PRIMARY KEY (indicatorgroupdescriptorid);


--
-- Name: indicatorleveldescriptor indicatorleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT indicatorleveldescriptor_pk PRIMARY KEY (indicatorleveldescriptorid);


--
-- Name: institutiontelephonenumbertypedescriptor institutiontelephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT institutiontelephonenumbertypedescriptor_pk PRIMARY KEY (institutiontelephonenumbertypedescriptorid);


--
-- Name: interactivitystyledescriptor interactivitystyledescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT interactivitystyledescriptor_pk PRIMARY KEY (interactivitystyledescriptorid);


--
-- Name: internetaccessdescriptor internetaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT internetaccessdescriptor_pk PRIMARY KEY (internetaccessdescriptorid);


--
-- Name: internetaccesstypeinresidencedescriptor internetaccesstypeinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT internetaccesstypeinresidencedescriptor_pk PRIMARY KEY (internetaccesstypeinresidencedescriptorid);


--
-- Name: internetperformanceinresidencedescriptor internetperformanceinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT internetperformanceinresidencedescriptor_pk PRIMARY KEY (internetperformanceinresidencedescriptorid);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode);


--
-- Name: interventionappropriategradelevel interventionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT interventionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, gradeleveldescriptorid);


--
-- Name: interventionappropriatesex interventionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT interventionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, sexdescriptorid);


--
-- Name: interventionclassdescriptor interventionclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT interventionclassdescriptor_pk PRIMARY KEY (interventionclassdescriptorid);


--
-- Name: interventiondiagnosis interventiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT interventiondiagnosis_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, diagnosisdescriptorid);


--
-- Name: interventioneducationcontent interventioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT interventioneducationcontent_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, contentidentifier);


--
-- Name: interventioneffectivenessratingdescriptor interventioneffectivenessratingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT interventioneffectivenessratingdescriptor_pk PRIMARY KEY (interventioneffectivenessratingdescriptorid);


--
-- Name: interventioninterventionprescription interventioninterventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT interventioninterventionprescription_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionlearningresourcemetadatauri interventionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT interventionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionmeetingtime interventionmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT interventionmeetingtime_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, endtime, starttime);


--
-- Name: interventionpopulationserved interventionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT interventionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionappropriategradelevel interventionprescriptionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT interventionprescriptionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, gradeleveldescriptorid);


--
-- Name: interventionprescriptionappropriatesex interventionprescriptionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT interventionprescriptionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid);


--
-- Name: interventionprescriptiondiagnosis interventionprescriptiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT interventionprescriptiondiagnosis_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, diagnosisdescriptorid);


--
-- Name: interventionprescriptioneducationcontent interventionprescriptioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT interventionprescriptioneducationcontent_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, contentidentifier);


--
-- Name: interventionprescriptionlearningresourcemetadatauri interventionprescriptionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT interventionprescriptionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionprescriptionpopulationserved interventionprescriptionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT interventionprescriptionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescriptionuri interventionprescriptionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT interventionprescriptionuri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, uri);


--
-- Name: interventionstaff interventionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT interventionstaff_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, staffusi);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: interventionstudyappropriategradelevel interventionstudyappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT interventionstudyappropriategradelevel_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, gradeleveldescriptorid);


--
-- Name: interventionstudyappropriatesex interventionstudyappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT interventionstudyappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid);


--
-- Name: interventionstudyeducationcontent interventionstudyeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT interventionstudyeducationcontent_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, contentidentifier);


--
-- Name: interventionstudyinterventioneffectiveness interventionstudyinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT interventionstudyinterventioneffectiveness_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid);


--
-- Name: interventionstudylearningresourcemetadatauri interventionstudylearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT interventionstudylearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionstudypopulationserved interventionstudypopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT interventionstudypopulationserved_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid);


--
-- Name: interventionstudystateabbreviation interventionstudystateabbreviation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT interventionstudystateabbreviation_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid);


--
-- Name: interventionstudyuri interventionstudyuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT interventionstudyuri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, uri);


--
-- Name: interventionuri interventionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT interventionuri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, uri);


--
-- Name: languagedescriptor languagedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT languagedescriptor_pk PRIMARY KEY (languagedescriptorid);


--
-- Name: languageinstructionprogramservicedescriptor languageinstructionprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT languageinstructionprogramservicedescriptor_pk PRIMARY KEY (languageinstructionprogramservicedescriptorid);


--
-- Name: languageusedescriptor languageusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT languageusedescriptor_pk PRIMARY KEY (languageusedescriptorid);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardacademicsubject learningstandardacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT learningstandardacademicsubject_pk PRIMARY KEY (learningstandardid, academicsubjectdescriptorid);


--
-- Name: learningstandardcategorydescriptor learningstandardcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT learningstandardcategorydescriptor_pk PRIMARY KEY (learningstandardcategorydescriptorid);


--
-- Name: learningstandardcontentstandard learningstandardcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT learningstandardcontentstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardcontentstandardauthor learningstandardcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT learningstandardcontentstandardauthor_pk PRIMARY KEY (learningstandardid, author);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (namespace, sourcelearningstandardid, targetlearningstandardid);


--
-- Name: learningstandardequivalencestrengthdescriptor learningstandardequivalencestrengthdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT learningstandardequivalencestrengthdescriptor_pk PRIMARY KEY (learningstandardequivalencestrengthdescriptorid);


--
-- Name: learningstandardgradelevel learningstandardgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT learningstandardgradelevel_pk PRIMARY KEY (learningstandardid, gradeleveldescriptorid);


--
-- Name: learningstandardidentificationcode learningstandardidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT learningstandardidentificationcode_pk PRIMARY KEY (learningstandardid, contentstandardname, identificationcode);


--
-- Name: learningstandardscopedescriptor learningstandardscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT learningstandardscopedescriptor_pk PRIMARY KEY (learningstandardscopedescriptorid);


--
-- Name: levelofeducationdescriptor levelofeducationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT levelofeducationdescriptor_pk PRIMARY KEY (levelofeducationdescriptorid);


--
-- Name: licensestatusdescriptor licensestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT licensestatusdescriptor_pk PRIMARY KEY (licensestatusdescriptorid);


--
-- Name: licensetypedescriptor licensetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT licensetypedescriptor_pk PRIMARY KEY (licensetypedescriptorid);


--
-- Name: limitedenglishproficiencydescriptor limitedenglishproficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT limitedenglishproficiencydescriptor_pk PRIMARY KEY (limitedenglishproficiencydescriptorid);


--
-- Name: localaccount localaccount_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT localaccount_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localaccountreportingtag localaccountreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT localaccountreportingtag_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid);


--
-- Name: localactual localactual_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT localactual_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localbudget localbudget_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT localbudget_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localcontractedstaff localcontractedstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT localcontractedstaff_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: localedescriptor localedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT localedescriptor_pk PRIMARY KEY (localedescriptorid);


--
-- Name: localeducationagency localeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT localeducationagency_pk PRIMARY KEY (localeducationagencyid);


--
-- Name: localeducationagencyaccountability localeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT localeducationagencyaccountability_pk PRIMARY KEY (localeducationagencyid, schoolyear);


--
-- Name: localeducationagencycategorydescriptor localeducationagencycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT localeducationagencycategorydescriptor_pk PRIMARY KEY (localeducationagencycategorydescriptorid);


--
-- Name: localeducationagencyfederalfunds localeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT localeducationagencyfederalfunds_pk PRIMARY KEY (localeducationagencyid, fiscalyear);


--
-- Name: localencumbrance localencumbrance_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT localencumbrance_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localpayroll localpayroll_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT localpayroll_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (classroomidentificationcode, schoolid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor magnetspecialprogramemphasisschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT magnetspecialprogramemphasisschooldescriptor_pk PRIMARY KEY (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: mediumofinstructiondescriptor mediumofinstructiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT mediumofinstructiondescriptor_pk PRIMARY KEY (mediumofinstructiondescriptorid);


--
-- Name: methodcreditearneddescriptor methodcreditearneddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT methodcreditearneddescriptor_pk PRIMARY KEY (methodcreditearneddescriptorid);


--
-- Name: migranteducationprogramservicedescriptor migranteducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT migranteducationprogramservicedescriptor_pk PRIMARY KEY (migranteducationprogramservicedescriptorid);


--
-- Name: modelentitydescriptor modelentitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.modelentitydescriptor
    ADD CONSTRAINT modelentitydescriptor_pk PRIMARY KEY (modelentitydescriptorid);


--
-- Name: monitoreddescriptor monitoreddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT monitoreddescriptor_pk PRIMARY KEY (monitoreddescriptorid);


--
-- Name: neglectedordelinquentprogramdescriptor neglectedordelinquentprogramdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT neglectedordelinquentprogramdescriptor_pk PRIMARY KEY (neglectedordelinquentprogramdescriptorid);


--
-- Name: neglectedordelinquentprogramservicedescriptor neglectedordelinquentprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT neglectedordelinquentprogramservicedescriptor_pk PRIMARY KEY (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: networkpurposedescriptor networkpurposedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT networkpurposedescriptor_pk PRIMARY KEY (networkpurposedescriptorid);


--
-- Name: objectdimension objectdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimension
    ADD CONSTRAINT objectdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: objectdimensionreportingtag objectdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT objectdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem objectiveassessmentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT objectiveassessmentassessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, assessmentitemidentificationcode);


--
-- Name: objectiveassessmentlearningstandard objectiveassessmentlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT objectiveassessmentlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, learningstandardid);


--
-- Name: objectiveassessmentperformancelevel objectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT objectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: objectiveassessmentscore objectiveassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT objectiveassessmentscore_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, assessmentreportingmethoddescriptorid);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (educationorganizationid, requisitionnumber);


--
-- Name: openstaffpositionacademicsubject openstaffpositionacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT openstaffpositionacademicsubject_pk PRIMARY KEY (educationorganizationid, requisitionnumber, academicsubjectdescriptorid);


--
-- Name: openstaffpositioninstructionalgradelevel openstaffpositioninstructionalgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT openstaffpositioninstructionalgradelevel_pk PRIMARY KEY (educationorganizationid, requisitionnumber, gradeleveldescriptorid);


--
-- Name: operationalstatusdescriptor operationalstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT operationalstatusdescriptor_pk PRIMARY KEY (operationalstatusdescriptorid);


--
-- Name: operationalunitdimension operationalunitdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimension
    ADD CONSTRAINT operationalunitdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: operationalunitdimensionreportingtag operationalunitdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT operationalunitdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: organizationdepartment organizationdepartment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT organizationdepartment_pk PRIMARY KEY (organizationdepartmentid);


--
-- Name: othernametypedescriptor othernametypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT othernametypedescriptor_pk PRIMARY KEY (othernametypedescriptorid);


--
-- Name: participationdescriptor participationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT participationdescriptor_pk PRIMARY KEY (participationdescriptorid);


--
-- Name: participationstatusdescriptor participationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT participationstatusdescriptor_pk PRIMARY KEY (participationstatusdescriptorid);


--
-- Name: performancebaseconversiondescriptor performancebaseconversiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT performancebaseconversiondescriptor_pk PRIMARY KEY (performancebaseconversiondescriptorid);


--
-- Name: performanceleveldescriptor performanceleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT performanceleveldescriptor_pk PRIMARY KEY (performanceleveldescriptorid);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (personid, sourcesystemdescriptorid);


--
-- Name: personalinformationverificationdescriptor personalinformationverificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT personalinformationverificationdescriptor_pk PRIMARY KEY (personalinformationverificationdescriptorid);


--
-- Name: platformtypedescriptor platformtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT platformtypedescriptor_pk PRIMARY KEY (platformtypedescriptorid);


--
-- Name: populationserveddescriptor populationserveddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT populationserveddescriptor_pk PRIMARY KEY (populationserveddescriptorid);


--
-- Name: postingresultdescriptor postingresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT postingresultdescriptor_pk PRIMARY KEY (postingresultdescriptorid);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (eventdate, postsecondaryeventcategorydescriptorid, studentusi);


--
-- Name: postsecondaryeventcategorydescriptor postsecondaryeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT postsecondaryeventcategorydescriptor_pk PRIMARY KEY (postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryinstitution postsecondaryinstitution_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT postsecondaryinstitution_pk PRIMARY KEY (postsecondaryinstitutionid);


--
-- Name: postsecondaryinstitutionleveldescriptor postsecondaryinstitutionleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT postsecondaryinstitutionleveldescriptor_pk PRIMARY KEY (postsecondaryinstitutionleveldescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction postsecondaryinstitutionmediumofinstruction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT postsecondaryinstitutionmediumofinstruction_pk PRIMARY KEY (postsecondaryinstitutionid, mediumofinstructiondescriptorid);


--
-- Name: primarylearningdeviceaccessdescriptor primarylearningdeviceaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT primarylearningdeviceaccessdescriptor_pk PRIMARY KEY (primarylearningdeviceaccessdescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor primarylearningdeviceawayfromschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT primarylearningdeviceawayfromschooldescriptor_pk PRIMARY KEY (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: primarylearningdeviceproviderdescriptor primarylearningdeviceproviderdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT primarylearningdeviceproviderdescriptor_pk PRIMARY KEY (primarylearningdeviceproviderdescriptorid);


--
-- Name: proficiencydescriptor proficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT proficiencydescriptor_pk PRIMARY KEY (proficiencydescriptorid);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: programassignmentdescriptor programassignmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT programassignmentdescriptor_pk PRIMARY KEY (programassignmentdescriptorid);


--
-- Name: programcharacteristic programcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT programcharacteristic_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, programcharacteristicdescriptorid);


--
-- Name: programcharacteristicdescriptor programcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT programcharacteristicdescriptor_pk PRIMARY KEY (programcharacteristicdescriptorid);


--
-- Name: programdimension programdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimension
    ADD CONSTRAINT programdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: programdimensionreportingtag programdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT programdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: programevaluation programevaluation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluation
    ADD CONSTRAINT programevaluation_pk PRIMARY KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: programevaluationelement programevaluationelement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelement
    ADD CONSTRAINT programevaluationelement_pk PRIMARY KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: programevaluationelementratinglevel programevaluationelementratinglevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelementratinglevel
    ADD CONSTRAINT programevaluationelementratinglevel_pk PRIMARY KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid);


--
-- Name: programevaluationobjective programevaluationobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjective
    ADD CONSTRAINT programevaluationobjective_pk PRIMARY KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: programevaluationobjectiveratinglevel programevaluationobjectiveratinglevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjectiveratinglevel
    ADD CONSTRAINT programevaluationobjectiveratinglevel_pk PRIMARY KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid);


--
-- Name: programevaluationperioddescriptor programevaluationperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationperioddescriptor
    ADD CONSTRAINT programevaluationperioddescriptor_pk PRIMARY KEY (programevaluationperioddescriptorid);


--
-- Name: programevaluationratinglevel programevaluationratinglevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationratinglevel
    ADD CONSTRAINT programevaluationratinglevel_pk PRIMARY KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, ratingleveldescriptorid);


--
-- Name: programevaluationtypedescriptor programevaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationtypedescriptor
    ADD CONSTRAINT programevaluationtypedescriptor_pk PRIMARY KEY (programevaluationtypedescriptorid);


--
-- Name: programlearningstandard programlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT programlearningstandard_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, learningstandardid);


--
-- Name: programsponsor programsponsor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT programsponsor_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, programsponsordescriptorid);


--
-- Name: programsponsordescriptor programsponsordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT programsponsordescriptor_pk PRIMARY KEY (programsponsordescriptorid);


--
-- Name: programtypedescriptor programtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT programtypedescriptor_pk PRIMARY KEY (programtypedescriptorid);


--
-- Name: progressdescriptor progressdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT progressdescriptor_pk PRIMARY KEY (progressdescriptorid);


--
-- Name: progressleveldescriptor progressleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT progressleveldescriptor_pk PRIMARY KEY (progressleveldescriptorid);


--
-- Name: projectdimension projectdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimension
    ADD CONSTRAINT projectdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: projectdimensionreportingtag projectdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT projectdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: providercategorydescriptor providercategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT providercategorydescriptor_pk PRIMARY KEY (providercategorydescriptorid);


--
-- Name: providerprofitabilitydescriptor providerprofitabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT providerprofitabilitydescriptor_pk PRIMARY KEY (providerprofitabilitydescriptorid);


--
-- Name: providerstatusdescriptor providerstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT providerstatusdescriptor_pk PRIMARY KEY (providerstatusdescriptorid);


--
-- Name: publicationstatusdescriptor publicationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT publicationstatusdescriptor_pk PRIMARY KEY (publicationstatusdescriptorid);


--
-- Name: questionformdescriptor questionformdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT questionformdescriptor_pk PRIMARY KEY (questionformdescriptorid);


--
-- Name: racedescriptor racedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT racedescriptor_pk PRIMARY KEY (racedescriptorid);


--
-- Name: ratingleveldescriptor ratingleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ratingleveldescriptor
    ADD CONSTRAINT ratingleveldescriptor_pk PRIMARY KEY (ratingleveldescriptorid);


--
-- Name: reasonexiteddescriptor reasonexiteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT reasonexiteddescriptor_pk PRIMARY KEY (reasonexiteddescriptorid);


--
-- Name: reasonnottesteddescriptor reasonnottesteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT reasonnottesteddescriptor_pk PRIMARY KEY (reasonnottesteddescriptorid);


--
-- Name: recognitiontypedescriptor recognitiontypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT recognitiontypedescriptor_pk PRIMARY KEY (recognitiontypedescriptorid);


--
-- Name: relationdescriptor relationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT relationdescriptor_pk PRIMARY KEY (relationdescriptorid);


--
-- Name: repeatidentifierdescriptor repeatidentifierdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT repeatidentifierdescriptor_pk PRIMARY KEY (repeatidentifierdescriptorid);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi);


--
-- Name: reportcardgrade reportcardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT reportcardgrade_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, begindate, gradetypedescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: reportcardgradepointaverage reportcardgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT reportcardgradepointaverage_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, gradepointaveragetypedescriptorid);


--
-- Name: reportcardstudentcompetencyobjective reportcardstudentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT reportcardstudentcompetencyobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: reporterdescriptiondescriptor reporterdescriptiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT reporterdescriptiondescriptor_pk PRIMARY KEY (reporterdescriptiondescriptorid);


--
-- Name: reportingtagdescriptor reportingtagdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportingtagdescriptor
    ADD CONSTRAINT reportingtagdescriptor_pk PRIMARY KEY (reportingtagdescriptorid);


--
-- Name: residencystatusdescriptor residencystatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT residencystatusdescriptor_pk PRIMARY KEY (residencystatusdescriptorid);


--
-- Name: responseindicatordescriptor responseindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT responseindicatordescriptor_pk PRIMARY KEY (responseindicatordescriptorid);


--
-- Name: responsibilitydescriptor responsibilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT responsibilitydescriptor_pk PRIMARY KEY (responsibilitydescriptorid);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi);


--
-- Name: restrainteventprogram restrainteventprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT restrainteventprogram_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: restrainteventreason restrainteventreason_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT restrainteventreason_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi, restrainteventreasondescriptorid);


--
-- Name: restrainteventreasondescriptor restrainteventreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT restrainteventreasondescriptor_pk PRIMARY KEY (restrainteventreasondescriptorid);


--
-- Name: resultdatatypetypedescriptor resultdatatypetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT resultdatatypetypedescriptor_pk PRIMARY KEY (resultdatatypetypedescriptorid);


--
-- Name: retestindicatordescriptor retestindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT retestindicatordescriptor_pk PRIMARY KEY (retestindicatordescriptorid);


--
-- Name: school school_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT school_pk PRIMARY KEY (schoolid);


--
-- Name: schoolcategory schoolcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT schoolcategory_pk PRIMARY KEY (schoolid, schoolcategorydescriptorid);


--
-- Name: schoolcategorydescriptor schoolcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT schoolcategorydescriptor_pk PRIMARY KEY (schoolcategorydescriptorid);


--
-- Name: schoolchoicebasisdescriptor schoolchoicebasisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoicebasisdescriptor
    ADD CONSTRAINT schoolchoicebasisdescriptor_pk PRIMARY KEY (schoolchoicebasisdescriptorid);


--
-- Name: schoolchoiceimplementstatusdescriptor schoolchoiceimplementstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT schoolchoiceimplementstatusdescriptor_pk PRIMARY KEY (schoolchoiceimplementstatusdescriptorid);


--
-- Name: schoolfoodserviceprogramservicedescriptor schoolfoodserviceprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT schoolfoodserviceprogramservicedescriptor_pk PRIMARY KEY (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: schoolgradelevel schoolgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT schoolgradelevel_pk PRIMARY KEY (schoolid, gradeleveldescriptorid);


--
-- Name: schooltypedescriptor schooltypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT schooltypedescriptor_pk PRIMARY KEY (schooltypedescriptorid);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (schoolyear);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectioncharacteristic sectioncharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT sectioncharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, sectioncharacteristicdescriptorid);


--
-- Name: sectioncharacteristicdescriptor sectioncharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT sectioncharacteristicdescriptor_pk PRIMARY KEY (sectioncharacteristicdescriptorid);


--
-- Name: sectionclassperiod sectionclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT sectionclassperiod_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, classperiodname);


--
-- Name: sectioncourselevelcharacteristic sectioncourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT sectioncourselevelcharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, courselevelcharacteristicdescriptorid);


--
-- Name: sectionofferedgradelevel sectionofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT sectionofferedgradelevel_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, gradeleveldescriptorid);


--
-- Name: sectionprogram sectionprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT sectionprogram_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: sectiontypedescriptor sectiontypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectiontypedescriptor
    ADD CONSTRAINT sectiontypedescriptor_pk PRIMARY KEY (sectiontypedescriptorid);


--
-- Name: separationdescriptor separationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT separationdescriptor_pk PRIMARY KEY (separationdescriptorid);


--
-- Name: separationreasondescriptor separationreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT separationreasondescriptor_pk PRIMARY KEY (separationreasondescriptorid);


--
-- Name: servicedescriptor servicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT servicedescriptor_pk PRIMARY KEY (servicedescriptorid);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (schoolid, schoolyear, sessionname);


--
-- Name: sessionacademicweek sessionacademicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT sessionacademicweek_pk PRIMARY KEY (schoolid, schoolyear, sessionname, weekidentifier);


--
-- Name: sessiongradingperiod sessiongradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT sessiongradingperiod_pk PRIMARY KEY (schoolid, schoolyear, sessionname, gradingperioddescriptorid, gradingperiodname);


--
-- Name: sexdescriptor sexdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT sexdescriptor_pk PRIMARY KEY (sexdescriptorid);


--
-- Name: sourcedimension sourcedimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimension
    ADD CONSTRAINT sourcedimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: sourcedimensionreportingtag sourcedimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT sourcedimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: sourcesystemdescriptor sourcesystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT sourcesystemdescriptor_pk PRIMARY KEY (sourcesystemdescriptorid);


--
-- Name: specialeducationprogramservicedescriptor specialeducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT specialeducationprogramservicedescriptor_pk PRIMARY KEY (specialeducationprogramservicedescriptorid);


--
-- Name: specialeducationsettingdescriptor specialeducationsettingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT specialeducationsettingdescriptor_pk PRIMARY KEY (specialeducationsettingdescriptorid);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (staffusi);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (absenceeventcategorydescriptorid, eventdate, staffusi);


--
-- Name: staffaddress staffaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT staffaddress_pk PRIMARY KEY (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: staffaddressperiod staffaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT staffaddressperiod_pk PRIMARY KEY (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: staffancestryethnicorigin staffancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT staffancestryethnicorigin_pk PRIMARY KEY (staffusi, ancestryethnicorigindescriptorid);


--
-- Name: staffclassificationdescriptor staffclassificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT staffclassificationdescriptor_pk PRIMARY KEY (staffclassificationdescriptorid);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, staffusi);


--
-- Name: staffcredential staffcredential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT staffcredential_pk PRIMARY KEY (staffusi, credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, staffusi);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be staffdisciplineincidentassociationdisciplineincide_7fa4be_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT staffdisciplineincidentassociationdisciplineincide_7fa4be_pk PRIMARY KEY (incidentidentifier, schoolid, staffusi, disciplineincidentparticipationcodedescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddress staffeducationorganizationcontactassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddress_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod staffeducationorganizationcontactassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddressperiod_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi, begindate);


--
-- Name: staffeducationorganizationcontactassociationtelephone staffeducationorganizationcontactassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT staffeducationorganizationcontactassociationtelephone_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: staffelectronicmail staffelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT staffelectronicmail_pk PRIMARY KEY (staffusi, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: staffidentificationcode staffidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT staffidentificationcode_pk PRIMARY KEY (staffusi, staffidentificationsystemdescriptorid);


--
-- Name: staffidentificationdocument staffidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT staffidentificationdocument_pk PRIMARY KEY (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: staffidentificationsystemdescriptor staffidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT staffidentificationsystemdescriptor_pk PRIMARY KEY (staffidentificationsystemdescriptorid);


--
-- Name: staffinternationaladdress staffinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT staffinternationaladdress_pk PRIMARY KEY (staffusi, addresstypedescriptorid);


--
-- Name: stafflanguage stafflanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT stafflanguage_pk PRIMARY KEY (staffusi, languagedescriptorid);


--
-- Name: stafflanguageuse stafflanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT stafflanguageuse_pk PRIMARY KEY (staffusi, languagedescriptorid, languageusedescriptorid);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (begindate, staffleaveeventcategorydescriptorid, staffusi);


--
-- Name: staffleaveeventcategorydescriptor staffleaveeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT staffleaveeventcategorydescriptor_pk PRIMARY KEY (staffleaveeventcategorydescriptorid);


--
-- Name: staffothername staffothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT staffothername_pk PRIMARY KEY (staffusi, othernametypedescriptorid);


--
-- Name: staffpersonalidentificationdocument staffpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT staffpersonalidentificationdocument_pk PRIMARY KEY (staffusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi);


--
-- Name: staffrace staffrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT staffrace_pk PRIMARY KEY (staffusi, racedescriptorid);


--
-- Name: staffrecognition staffrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT staffrecognition_pk PRIMARY KEY (staffusi, recognitiontypedescriptorid);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffschoolassociationacademicsubject staffschoolassociationacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT staffschoolassociationacademicsubject_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi, academicsubjectdescriptorid);


--
-- Name: staffschoolassociationgradelevel staffschoolassociationgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT staffschoolassociationgradelevel_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi, gradeleveldescriptorid);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi);


--
-- Name: stafftelephone stafftelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT stafftelephone_pk PRIMARY KEY (staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: stafftribalaffiliation stafftribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT stafftribalaffiliation_pk PRIMARY KEY (staffusi, tribalaffiliationdescriptorid);


--
-- Name: staffvisa staffvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT staffvisa_pk PRIMARY KEY (staffusi, visadescriptorid);


--
-- Name: stateabbreviationdescriptor stateabbreviationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT stateabbreviationdescriptor_pk PRIMARY KEY (stateabbreviationdescriptorid);


--
-- Name: stateeducationagency stateeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT stateeducationagency_pk PRIMARY KEY (stateeducationagencyid);


--
-- Name: stateeducationagencyaccountability stateeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT stateeducationagencyaccountability_pk PRIMARY KEY (stateeducationagencyid, schoolyear);


--
-- Name: stateeducationagencyfederalfunds stateeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT stateeducationagencyfederalfunds_pk PRIMARY KEY (stateeducationagencyid, fiscalyear);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (studentusi);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordacademichonor studentacademicrecordacademichonor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT studentacademicrecordacademichonor_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, academichonorcategorydescriptorid, honordescription);


--
-- Name: studentacademicrecordclassranking studentacademicrecordclassranking_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT studentacademicrecordclassranking_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecorddiploma studentacademicrecorddiploma_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT studentacademicrecorddiploma_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, diplomaawarddate, diplomatypedescriptorid);


--
-- Name: studentacademicrecordgradepointaverage studentacademicrecordgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT studentacademicrecordgradepointaverage_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradepointaveragetypedescriptorid);


--
-- Name: studentacademicrecordrecognition studentacademicrecordrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT studentacademicrecordrecognition_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, recognitiontypedescriptorid);


--
-- Name: studentacademicrecordreportcard studentacademicrecordreportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT studentacademicrecordreportcard_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentaccommodation studentassessmentaccommodation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT studentassessmentaccommodation_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, accommodationdescriptorid);


--
-- Name: studentassessmenteducationorganizationassociation studentassessmenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT studentassessmenteducationorganizationassociation_pk PRIMARY KEY (assessmentidentifier, educationorganizationassociationtypedescriptorid, educationorganizationid, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentitem studentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT studentassessmentitem_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode);


--
-- Name: studentassessmentperformancelevel studentassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT studentassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: studentassessmentperiod studentassessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT studentassessmentperiod_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentscoreresult studentassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT studentassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessment studentassessmentstudentobjectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT studentassessmentstudentobjectiveassessment_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel studentassessmentstudentobjectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid, performanceleveldescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult studentassessmentstudentobjectiveassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode, assessmentreportingmethoddescriptorid);


--
-- Name: studentcharacteristicdescriptor studentcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT studentcharacteristicdescriptor_pk PRIMARY KEY (studentcharacteristicdescriptorid);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, studentusi);


--
-- Name: studentcohortassociationsection studentcohortassociationsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT studentcohortassociationsection_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, studentusi, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation studentcompetencyobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentcompetencyobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentcompetencyobjectivestudentsectionassociation studentcompetencyobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT studentcompetencyobjectivestudentsectionassociation_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi, begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: studentcontactassociation studentcontactassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcontactassociation
    ADD CONSTRAINT studentcontactassociation_pk PRIMARY KEY (contactusi, studentusi);


--
-- Name: studentcteprogramassociation studentcteprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT studentcteprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationcteprogramservice studentcteprogramassociationcteprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT studentcteprogramassociationcteprogramservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, cteprogramservicedescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a studentdisciplineincidentnonoffenderassociationdis_4c979a_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociationdis_4c979a_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi, disciplineincidentparticipationcodedescriptorid);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationaddress studenteducationorganizationassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT studenteducationorganizationassociationaddress_pk PRIMARY KEY (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: studenteducationorganizationassociationaddressperiod studenteducationorganizationassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT studenteducationorganizationassociationaddressperiod_pk PRIMARY KEY (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin studenteducationorganizationassociationancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT studenteducationorganizationassociationancestryethnicorigin_pk PRIMARY KEY (educationorganizationid, studentusi, ancestryethnicorigindescriptorid);


--
-- Name: studenteducationorganizationassociationcohortyear studenteducationorganizationassociationcohortyear_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT studenteducationorganizationassociationcohortyear_pk PRIMARY KEY (educationorganizationid, studentusi, cohortyeartypedescriptorid, schoolyear);


--
-- Name: studenteducationorganizationassociationdisability studenteducationorganizationassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT studenteducationorganizationassociationdisability_pk PRIMARY KEY (educationorganizationid, studentusi, disabilitydescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation studenteducationorganizationassociationdisabilitydesignation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT studenteducationorganizationassociationdisabilitydesignation_pk PRIMARY KEY (educationorganizationid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: studenteducationorganizationassociationelectronicmail studenteducationorganizationassociationelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT studenteducationorganizationassociationelectronicmail_pk PRIMARY KEY (educationorganizationid, studentusi, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress studenteducationorganizationassociationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT studenteducationorganizationassociationinternationaladdress_pk PRIMARY KEY (educationorganizationid, studentusi, addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage studenteducationorganizationassociationlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT studenteducationorganizationassociationlanguage_pk PRIMARY KEY (educationorganizationid, studentusi, languagedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguageuse studenteducationorganizationassociationlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT studenteducationorganizationassociationlanguageuse_pk PRIMARY KEY (educationorganizationid, studentusi, languagedescriptorid, languageusedescriptorid);


--
-- Name: studenteducationorganizationassociationrace studenteducationorganizationassociationrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT studenteducationorganizationassociationrace_pk PRIMARY KEY (educationorganizationid, studentusi, racedescriptorid);


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf studenteducationorganizationassociationstudentchar_a18fcf_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT studenteducationorganizationassociationstudentchar_a18fcf_pk PRIMARY KEY (educationorganizationid, studentusi, studentcharacteristicdescriptorid, begindate);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic studenteducationorganizationassociationstudentcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT studenteducationorganizationassociationstudentcharacteristic_pk PRIMARY KEY (educationorganizationid, studentusi, studentcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 studenteducationorganizationassociationstudentiden_c15030_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT studenteducationorganizationassociationstudentiden_c15030_pk PRIMARY KEY (educationorganizationid, studentusi, assigningorganizationidentificationcode, studentidentificationsystemdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod studenteducationorganizationassociationstudentindi_a61b72_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT studenteducationorganizationassociationstudentindi_a61b72_pk PRIMARY KEY (educationorganizationid, studentusi, indicatorname, begindate);


--
-- Name: studenteducationorganizationassociationstudentindicator studenteducationorganizationassociationstudentindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT studenteducationorganizationassociationstudentindicator_pk PRIMARY KEY (educationorganizationid, studentusi, indicatorname);


--
-- Name: studenteducationorganizationassociationtelephone studenteducationorganizationassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT studenteducationorganizationassociationtelephone_pk PRIMARY KEY (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: studenteducationorganizationassociationtribalaffiliation studenteducationorganizationassociationtribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT studenteducationorganizationassociationtribalaffiliation_pk PRIMARY KEY (educationorganizationid, studentusi, tribalaffiliationdescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (begindate, educationorganizationid, responsibilitydescriptorid, studentusi);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (gradebookentryidentifier, namespace, studentusi);


--
-- Name: studenthomelessprogramassociation studenthomelessprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT studenthomelessprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice studenthomelessprogramassociationhomelessprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT studenthomelessprogramassociationhomelessprogramservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, homelessprogramservicedescriptorid);


--
-- Name: studentidentificationdocument studentidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT studentidentificationdocument_pk PRIMARY KEY (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: studentidentificationsystemdescriptor studentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT studentidentificationsystemdescriptor_pk PRIMARY KEY (studentidentificationsystemdescriptorid);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, studentusi);


--
-- Name: studentinterventionassociationinterventioneffectiveness studentinterventionassociationinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT studentinterventionassociationinterventioneffectiveness_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, studentusi, diagnosisdescriptorid, gradeleveldescriptorid, populationserveddescriptorid);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi);


--
-- Name: studentlanguageinstructionprogramassociation studentlanguageinstructionprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT studentlanguageinstructionprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 studentlanguageinstructionprogramassociationenglis_1ac620_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT studentlanguageinstructionprogramassociationenglis_1ac620_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolyear);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 studentlanguageinstructionprogramassociationlangua_268e07_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT studentlanguageinstructionprogramassociationlangua_268e07_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, languageinstructionprogramservicedescriptorid);


--
-- Name: studentmigranteducationprogramassociation studentmigranteducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT studentmigranteducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 studentmigranteducationprogramassociationmigranted_d9dcd7_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT studentmigranteducationprogramassociationmigranted_d9dcd7_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, migranteducationprogramservicedescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation studentneglectedordelinquentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT studentneglectedordelinquentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 studentneglectedordelinquentprogramassociationnegl_520251_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT studentneglectedordelinquentprogramassociationnegl_520251_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, neglectedordelinquentprogramservicedescriptorid);


--
-- Name: studentothername studentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT studentothername_pk PRIMARY KEY (studentusi, othernametypedescriptorid);


--
-- Name: studentparticipationcodedescriptor studentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT studentparticipationcodedescriptor_pk PRIMARY KEY (studentparticipationcodedescriptorid);


--
-- Name: studentpersonalidentificationdocument studentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT studentpersonalidentificationdocument_pk PRIMARY KEY (studentusi, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: studentprogramassociation studentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT studentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramassociationservice studentprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT studentprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, servicedescriptorid);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramevaluation studentprogramevaluation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT studentprogramevaluation_pk PRIMARY KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramevaluationexternalevaluator studentprogramevaluationexternalevaluator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationexternalevaluator
    ADD CONSTRAINT studentprogramevaluationexternalevaluator_pk PRIMARY KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, externalevaluator);


--
-- Name: studentprogramevaluationstudentevaluationelement studentprogramevaluationstudentevaluationelement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationelement
    ADD CONSTRAINT studentprogramevaluationstudentevaluationelement_pk PRIMARY KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, programevaluationelementtitle);


--
-- Name: studentprogramevaluationstudentevaluationobjective studentprogramevaluationstudentevaluationobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationobjective
    ADD CONSTRAINT studentprogramevaluationstudentevaluationobjective_pk PRIMARY KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi, programevaluationobjectivetitle);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (entrydate, schoolid, studentusi);


--
-- Name: studentschoolassociationalternativegraduationplan studentschoolassociationalternativegraduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT studentschoolassociationalternativegraduationplan_pk PRIMARY KEY (entrydate, schoolid, studentusi, alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear);


--
-- Name: studentschoolassociationeducationplan studentschoolassociationeducationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT studentschoolassociationeducationplan_pk PRIMARY KEY (entrydate, schoolid, studentusi, educationplandescriptorid);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociation studentschoolfoodserviceprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT studentschoolfoodserviceprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, schoolfoodserviceprogramservicedescriptorid);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionassociationprogram studentsectionassociationprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociationprogram
    ADD CONSTRAINT studentsectionassociationprogram_pk PRIMARY KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionattendanceeventclassperiod studentsectionattendanceeventclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT studentsectionattendanceeventclassperiod_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, classperiodname);


--
-- Name: studentspecialeducationprogramassociation studentspecialeducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT studentspecialeducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation studentspecialeducationprogramassociationdisabilit_a2fd20_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT studentspecialeducationprogramassociationdisabilit_a2fd20_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability studentspecialeducationprogramassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT studentspecialeducationprogramassociationdisability_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid);


--
-- Name: studentspecialeducationprogramassociationserviceprovider studentspecialeducationprogramassociationserviceprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT studentspecialeducationprogramassociationserviceprovider_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, staffusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 studentspecialeducationprogramassociationspecialed_a51ff9_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_a51ff9_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c studentspecialeducationprogramassociationspecialed_bcba5c_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_bcba5c_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid, staffusi);


--
-- Name: studentspecialeducationprogrameligibilityassociation studentspecialeducationprogrameligibilityassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT studentspecialeducationprogrameligibilityassociation_pk PRIMARY KEY (consenttoevaluationreceiveddate, educationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociation studenttitleipartaprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT studenttitleipartaprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice studenttitleipartaprogramassociationtitleipartapro_8adb29_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT studenttitleipartaprogramassociationtitleipartapro_8adb29_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid);


--
-- Name: studentvisa studentvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT studentvisa_pk PRIMARY KEY (studentusi, visadescriptorid);


--
-- Name: submissionstatusdescriptor submissionstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.submissionstatusdescriptor
    ADD CONSTRAINT submissionstatusdescriptor_pk PRIMARY KEY (submissionstatusdescriptorid);


--
-- Name: supportermilitaryconnectiondescriptor supportermilitaryconnectiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.supportermilitaryconnectiondescriptor
    ADD CONSTRAINT supportermilitaryconnectiondescriptor_pk PRIMARY KEY (supportermilitaryconnectiondescriptorid);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (namespace, surveyidentifier);


--
-- Name: surveycategorydescriptor surveycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT surveycategorydescriptor_pk PRIMARY KEY (surveycategorydescriptorid);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (coursecode, educationorganizationid, namespace, surveyidentifier);


--
-- Name: surveyleveldescriptor surveyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT surveyleveldescriptor_pk PRIMARY KEY (surveyleveldescriptorid);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionmatrix surveyquestionmatrix_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT surveyquestionmatrix_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, matrixelement);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyquestionresponsechoice surveyquestionresponsechoice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT surveyquestionresponsechoice_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, sortorder);


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse surveyquestionresponsesurveyquestionmatrixelementresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT surveyquestionresponsesurveyquestionmatrixelementresponse_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier, matrixelement);


--
-- Name: surveyquestionresponsevalue surveyquestionresponsevalue_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT surveyquestionresponsevalue_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier, surveyquestionresponsevalueidentifier);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsesurveylevel surveyresponsesurveylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT surveyresponsesurveylevel_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier, surveyleveldescriptorid);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: teachingcredentialbasisdescriptor teachingcredentialbasisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT teachingcredentialbasisdescriptor_pk PRIMARY KEY (teachingcredentialbasisdescriptorid);


--
-- Name: teachingcredentialdescriptor teachingcredentialdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT teachingcredentialdescriptor_pk PRIMARY KEY (teachingcredentialdescriptorid);


--
-- Name: technicalskillsassessmentdescriptor technicalskillsassessmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT technicalskillsassessmentdescriptor_pk PRIMARY KEY (technicalskillsassessmentdescriptorid);


--
-- Name: telephonenumbertypedescriptor telephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT telephonenumbertypedescriptor_pk PRIMARY KEY (telephonenumbertypedescriptorid);


--
-- Name: termdescriptor termdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT termdescriptor_pk PRIMARY KEY (termdescriptorid);


--
-- Name: titleipartaparticipantdescriptor titleipartaparticipantdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT titleipartaparticipantdescriptor_pk PRIMARY KEY (titleipartaparticipantdescriptorid);


--
-- Name: titleipartaprogramservicedescriptor titleipartaprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT titleipartaprogramservicedescriptor_pk PRIMARY KEY (titleipartaprogramservicedescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor titleipartaschooldesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT titleipartaschooldesignationdescriptor_pk PRIMARY KEY (titleipartaschooldesignationdescriptorid);


--
-- Name: tribalaffiliationdescriptor tribalaffiliationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT tribalaffiliationdescriptor_pk PRIMARY KEY (tribalaffiliationdescriptorid);


--
-- Name: visadescriptor visadescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT visadescriptor_pk PRIMARY KEY (visadescriptorid);


--
-- Name: weapondescriptor weapondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT weapondescriptor_pk PRIMARY KEY (weapondescriptorid);


--
-- Name: descriptorequivalencegroupassignment pk_descequivgroupassign; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT pk_descequivgroupassign PRIMARY KEY (descriptorid);


--
-- Name: descriptorequivalencegroupgeneralization pk_descequivgroupgeneral; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT pk_descequivgroupgeneral PRIMARY KEY (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroup pk_descriptorequivalencegroup; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroup
    ADD CONSTRAINT pk_descriptorequivalencegroup PRIMARY KEY (descriptorequivalencegroupid);


--
-- Name: operationalcontext pk_operationalcontext; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontext
    ADD CONSTRAINT pk_operationalcontext PRIMARY KEY (operationalcontexturi);


--
-- Name: operationalcontextdescriptorusage pk_operationalcontextdescriptorusage; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT pk_operationalcontextdescriptorusage PRIMARY KEY (operationalcontexturi, descriptorid);


--
-- Name: DeployJournal PK_DeployJournal_Id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal"
    ADD CONSTRAINT "PK_DeployJournal_Id" PRIMARY KEY (schemaversionsid);


--
-- Name: accreditationstatusdescriptor accreditationstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.accreditationstatusdescriptor
    ADD CONSTRAINT accreditationstatusdescriptor_pk PRIMARY KEY (accreditationstatusdescriptorid);


--
-- Name: aidtypedescriptor aidtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.aidtypedescriptor
    ADD CONSTRAINT aidtypedescriptor_pk PRIMARY KEY (aidtypedescriptorid);


--
-- Name: candidate candidate_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT candidate_pk PRIMARY KEY (candidateidentifier);


--
-- Name: candidateaddress candidateaddress_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT candidateaddress_pk PRIMARY KEY (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: candidateaddressperiod candidateaddressperiod_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddressperiod
    ADD CONSTRAINT candidateaddressperiod_pk PRIMARY KEY (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername, begindate);


--
-- Name: candidatedisability candidatedisability_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT candidatedisability_pk PRIMARY KEY (candidateidentifier, disabilitydescriptorid);


--
-- Name: candidatedisabilitydesignation candidatedisabilitydesignation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT candidatedisabilitydesignation_pk PRIMARY KEY (candidateidentifier, disabilitydescriptorid, disabilitydesignationdescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation candidateeducatorpreparationprogramassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT candidateeducatorpreparationprogramassociation_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear candidateeducatorpreparationprogramassociationcohortyear_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT candidateeducatorpreparationprogramassociationcohortyear_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, cohortyeartypedescriptorid, schoolyear);


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4 candidateeducatorpreparationprogramassociationdegr_2501c4_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4
    ADD CONSTRAINT candidateeducatorpreparationprogramassociationdegr_2501c4_pk PRIMARY KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid, majorspecialization);


--
-- Name: candidateelectronicmail candidateelectronicmail_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT candidateelectronicmail_pk PRIMARY KEY (candidateidentifier, electronicmailaddress, electronicmailtypedescriptorid);


--
-- Name: candidatelanguage candidatelanguage_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT candidatelanguage_pk PRIMARY KEY (candidateidentifier, languagedescriptorid);


--
-- Name: candidatelanguageuse candidatelanguageuse_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT candidatelanguageuse_pk PRIMARY KEY (candidateidentifier, languagedescriptorid, languageusedescriptorid);


--
-- Name: candidateothername candidateothername_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT candidateothername_pk PRIMARY KEY (candidateidentifier, othernametypedescriptorid);


--
-- Name: candidatepersonalidentificationdocument candidatepersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT candidatepersonalidentificationdocument_pk PRIMARY KEY (candidateidentifier, identificationdocumentusedescriptorid, personalinformationverificationdescriptorid);


--
-- Name: candidaterace candidaterace_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT candidaterace_pk PRIMARY KEY (candidateidentifier, racedescriptorid);


--
-- Name: candidatetelephone candidatetelephone_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT candidatetelephone_pk PRIMARY KEY (candidateidentifier, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: certificationroutedescriptor certificationroutedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.certificationroutedescriptor
    ADD CONSTRAINT certificationroutedescriptor_pk PRIMARY KEY (certificationroutedescriptorid);


--
-- Name: coteachingstyleobserveddescriptor coteachingstyleobserveddescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.coteachingstyleobserveddescriptor
    ADD CONSTRAINT coteachingstyleobserveddescriptor_pk PRIMARY KEY (coteachingstyleobserveddescriptorid);


--
-- Name: credentialextension credentialextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT credentialextension_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialstatusdescriptor credentialstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstatusdescriptor
    ADD CONSTRAINT credentialstatusdescriptor_pk PRIMARY KEY (credentialstatusdescriptorid);


--
-- Name: credentialstudentacademicrecord credentialstudentacademicrecord_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT credentialstudentacademicrecord_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: educatorpreparationprogram educatorpreparationprogram_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT educatorpreparationprogram_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: educatorpreparationprogramgradelevel educatorpreparationprogramgradelevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT educatorpreparationprogramgradelevel_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, gradeleveldescriptorid);


--
-- Name: educatorroledescriptor educatorroledescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorroledescriptor
    ADD CONSTRAINT educatorroledescriptor_pk PRIMARY KEY (educatorroledescriptorid);


--
-- Name: englishlanguageexamdescriptor englishlanguageexamdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.englishlanguageexamdescriptor
    ADD CONSTRAINT englishlanguageexamdescriptor_pk PRIMARY KEY (englishlanguageexamdescriptorid);


--
-- Name: eppprogrampathwaydescriptor eppprogrampathwaydescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.eppprogrampathwaydescriptor
    ADD CONSTRAINT eppprogrampathwaydescriptor_pk PRIMARY KEY (eppprogrampathwaydescriptorid);


--
-- Name: evaluation evaluation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT evaluation_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelement evaluationelement_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT evaluationelement_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelementrating evaluationelementrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT evaluationelementrating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationelementratinglevel evaluationelementratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT evaluationelementratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: evaluationelementratingleveldescriptor evaluationelementratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingleveldescriptor
    ADD CONSTRAINT evaluationelementratingleveldescriptor_pk PRIMARY KEY (evaluationelementratingleveldescriptorid);


--
-- Name: evaluationelementratingresult evaluationelementratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT evaluationelementratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: evaluationobjective evaluationobjective_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT evaluationobjective_pk PRIMARY KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjectiverating evaluationobjectiverating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT evaluationobjectiverating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationobjectiveratinglevel evaluationobjectiveratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT evaluationobjectiveratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: evaluationobjectiveratingresult evaluationobjectiveratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT evaluationobjectiveratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: evaluationperioddescriptor evaluationperioddescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationperioddescriptor
    ADD CONSTRAINT evaluationperioddescriptor_pk PRIMARY KEY (evaluationperioddescriptorid);


--
-- Name: evaluationrating evaluationrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT evaluationrating_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationratinglevel evaluationratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT evaluationratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: evaluationratingleveldescriptor evaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingleveldescriptor
    ADD CONSTRAINT evaluationratingleveldescriptor_pk PRIMARY KEY (evaluationratingleveldescriptorid);


--
-- Name: evaluationratingresult evaluationratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT evaluationratingresult_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: evaluationratingreviewer evaluationratingreviewer_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT evaluationratingreviewer_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: evaluationratingreviewerreceivedtraining evaluationratingreviewerreceivedtraining_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewerreceivedtraining
    ADD CONSTRAINT evaluationratingreviewerreceivedtraining_pk PRIMARY KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: evaluationratingstatusdescriptor evaluationratingstatusdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingstatusdescriptor
    ADD CONSTRAINT evaluationratingstatusdescriptor_pk PRIMARY KEY (evaluationratingstatusdescriptorid);


--
-- Name: evaluationtypedescriptor evaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationtypedescriptor
    ADD CONSTRAINT evaluationtypedescriptor_pk PRIMARY KEY (evaluationtypedescriptorid);


--
-- Name: financialaid financialaid_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT financialaid_pk PRIMARY KEY (aidtypedescriptorid, begindate, studentusi);


--
-- Name: genderdescriptor genderdescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.genderdescriptor
    ADD CONSTRAINT genderdescriptor_pk PRIMARY KEY (genderdescriptorid);


--
-- Name: objectiveratingleveldescriptor objectiveratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.objectiveratingleveldescriptor
    ADD CONSTRAINT objectiveratingleveldescriptor_pk PRIMARY KEY (objectiveratingleveldescriptorid);


--
-- Name: performanceevaluation performanceevaluation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT performanceevaluation_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationgradelevel performanceevaluationgradelevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT performanceevaluationgradelevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, gradeleveldescriptorid);


--
-- Name: performanceevaluationrating performanceevaluationrating_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT performanceevaluationrating_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: performanceevaluationratinglevel performanceevaluationratinglevel_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT performanceevaluationratinglevel_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid, evaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratingleveldescriptor performanceevaluationratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingleveldescriptor
    ADD CONSTRAINT performanceevaluationratingleveldescriptor_pk PRIMARY KEY (performanceevaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratingresult performanceevaluationratingresult_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT performanceevaluationratingresult_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, rating, ratingresulttitle);


--
-- Name: performanceevaluationratingreviewer performanceevaluationratingreviewer_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT performanceevaluationratingreviewer_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: performanceevaluationratingreviewerreceivedtraining performanceevaluationratingreviewerreceivedtraining_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewerreceivedtraining
    ADD CONSTRAINT performanceevaluationratingreviewerreceivedtraining_pk PRIMARY KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname);


--
-- Name: performanceevaluationtypedescriptor performanceevaluationtypedescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationtypedescriptor
    ADD CONSTRAINT performanceevaluationtypedescriptor_pk PRIMARY KEY (performanceevaluationtypedescriptorid);


--
-- Name: rubricdimension rubricdimension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT rubricdimension_pk PRIMARY KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, rubricrating, schoolyear, termdescriptorid);


--
-- Name: rubricratingleveldescriptor rubricratingleveldescriptor_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricratingleveldescriptor
    ADD CONSTRAINT rubricratingleveldescriptor_pk PRIMARY KEY (rubricratingleveldescriptorid);


--
-- Name: schoolextension schoolextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT schoolextension_pk PRIMARY KEY (schoolid);


--
-- Name: surveyresponseextension surveyresponseextension_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT surveyresponseextension_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsepersontargetassociation surveyresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT surveyresponsepersontargetassociation_pk PRIMARY KEY (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveysectionresponsepersontargetassociation surveysectionresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT surveysectionresponsepersontargetassociation_pk PRIMARY KEY (namespace, personid, sourcesystemdescriptorid, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (changeversion);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (changeversion);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: balancesheetdimension balancesheetdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.balancesheetdimension
    ADD CONSTRAINT balancesheetdimension_pk PRIMARY KEY (changeversion);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (changeversion);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (changeversion);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (changeversion);


--
-- Name: chartofaccount chartofaccount_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.chartofaccount
    ADD CONSTRAINT chartofaccount_pk PRIMARY KEY (changeversion);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (changeversion);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (changeversion);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (changeversion);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: contact contact_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.contact
    ADD CONSTRAINT contact_pk PRIMARY KEY (changeversion);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (changeversion);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (changeversion);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (changeversion);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (changeversion);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (changeversion);


--
-- Name: descriptormapping descriptormapping_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.descriptormapping
    ADD CONSTRAINT descriptormapping_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (changeversion);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationrubricdimension evaluationrubricdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.evaluationrubricdimension
    ADD CONSTRAINT evaluationrubricdimension_pk PRIMARY KEY (changeversion);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: functiondimension functiondimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.functiondimension
    ADD CONSTRAINT functiondimension_pk PRIMARY KEY (changeversion);


--
-- Name: funddimension funddimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.funddimension
    ADD CONSTRAINT funddimension_pk PRIMARY KEY (changeversion);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (changeversion);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (changeversion);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (changeversion);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (changeversion);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (changeversion);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (changeversion);


--
-- Name: localaccount localaccount_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localaccount
    ADD CONSTRAINT localaccount_pk PRIMARY KEY (changeversion);


--
-- Name: localactual localactual_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localactual
    ADD CONSTRAINT localactual_pk PRIMARY KEY (changeversion);


--
-- Name: localbudget localbudget_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localbudget
    ADD CONSTRAINT localbudget_pk PRIMARY KEY (changeversion);


--
-- Name: localcontractedstaff localcontractedstaff_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localcontractedstaff
    ADD CONSTRAINT localcontractedstaff_pk PRIMARY KEY (changeversion);


--
-- Name: localencumbrance localencumbrance_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localencumbrance
    ADD CONSTRAINT localencumbrance_pk PRIMARY KEY (changeversion);


--
-- Name: localpayroll localpayroll_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localpayroll
    ADD CONSTRAINT localpayroll_pk PRIMARY KEY (changeversion);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (changeversion);


--
-- Name: objectdimension objectdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.objectdimension
    ADD CONSTRAINT objectdimension_pk PRIMARY KEY (changeversion);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (changeversion);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (changeversion);


--
-- Name: operationalunitdimension operationalunitdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.operationalunitdimension
    ADD CONSTRAINT operationalunitdimension_pk PRIMARY KEY (changeversion);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (changeversion);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (changeversion);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (changeversion);


--
-- Name: programdimension programdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programdimension
    ADD CONSTRAINT programdimension_pk PRIMARY KEY (changeversion);


--
-- Name: programevaluation programevaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programevaluation
    ADD CONSTRAINT programevaluation_pk PRIMARY KEY (changeversion);


--
-- Name: programevaluationelement programevaluationelement_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programevaluationelement
    ADD CONSTRAINT programevaluationelement_pk PRIMARY KEY (changeversion);


--
-- Name: programevaluationobjective programevaluationobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programevaluationobjective
    ADD CONSTRAINT programevaluationobjective_pk PRIMARY KEY (changeversion);


--
-- Name: projectdimension projectdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.projectdimension
    ADD CONSTRAINT projectdimension_pk PRIMARY KEY (changeversion);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (changeversion);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (changeversion);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (changeversion);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (changeversion);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (changeversion);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (changeversion);


--
-- Name: sourcedimension sourcedimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.sourcedimension
    ADD CONSTRAINT sourcedimension_pk PRIMARY KEY (changeversion);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (changeversion);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (changeversion);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (changeversion);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (changeversion);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (changeversion);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (changeversion);


--
-- Name: studentassessmenteducationorganizationassociation studentassessmenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT studentassessmenteducationorganizationassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: studentcontactassociation studentcontactassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcontactassociation
    ADD CONSTRAINT studentcontactassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentprogramevaluation studentprogramevaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentprogramevaluation
    ADD CONSTRAINT studentprogramevaluation_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentspecialeducationprogrameligibilityassociation studentspecialeducationprogrameligibilityassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT studentspecialeducationprogrameligibilityassociation_pk PRIMARY KEY (changeversion);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (changeversion);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: candidate candidate_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.candidate
    ADD CONSTRAINT candidate_pk PRIMARY KEY (changeversion);


--
-- Name: candidateeducatorpreparationprogramassociation candidateeducatorpreparationprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT candidateeducatorpreparationprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educatorpreparationprogram educatorpreparationprogram_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.educatorpreparationprogram
    ADD CONSTRAINT educatorpreparationprogram_pk PRIMARY KEY (changeversion);


--
-- Name: evaluation evaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluation
    ADD CONSTRAINT evaluation_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationelement evaluationelement_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationelement
    ADD CONSTRAINT evaluationelement_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationelementrating evaluationelementrating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationelementrating
    ADD CONSTRAINT evaluationelementrating_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationobjective evaluationobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationobjective
    ADD CONSTRAINT evaluationobjective_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationobjectiverating evaluationobjectiverating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationobjectiverating
    ADD CONSTRAINT evaluationobjectiverating_pk PRIMARY KEY (changeversion);


--
-- Name: evaluationrating evaluationrating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.evaluationrating
    ADD CONSTRAINT evaluationrating_pk PRIMARY KEY (changeversion);


--
-- Name: financialaid financialaid_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.financialaid
    ADD CONSTRAINT financialaid_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluation performanceevaluation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.performanceevaluation
    ADD CONSTRAINT performanceevaluation_pk PRIMARY KEY (changeversion);


--
-- Name: performanceevaluationrating performanceevaluationrating_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.performanceevaluationrating
    ADD CONSTRAINT performanceevaluationrating_pk PRIMARY KEY (changeversion);


--
-- Name: rubricdimension rubricdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.rubricdimension
    ADD CONSTRAINT rubricdimension_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponsepersontargetassociation surveyresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT surveyresponsepersontargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponsepersontargetassociation surveysectionresponsepersontargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_tpdm; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT surveysectionresponsepersontargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: ix_educationorganizationidtoeducationorganizationid; Type: INDEX; Schema: auth; Owner: postgres
--

CREATE INDEX ix_educationorganizationidtoeducationorganizationid ON auth.educationorganizationidtoeducationorganizationid USING btree (targeteducationorganizationid) INCLUDE (sourceeducationorganizationid);


--
-- Name: contact_ui_contactuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX contact_ui_contactuniqueid ON edfi.contact USING btree (contactuniqueid) INCLUDE (contactusi);


--
-- Name: fk_000683_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000683_financialcollectiondescriptor ON edfi.localbudget USING btree (financialcollectiondescriptorid);


--
-- Name: fk_000683_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000683_localaccount ON edfi.localbudget USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_000ac5_technicalskillsassessmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000ac5_technicalskillsassessmentdescriptor ON edfi.studentcteprogramassociation USING btree (technicalskillsassessmentdescriptorid);


--
-- Name: fk_005337_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_005337_generalstudentprogramassociation ON edfi.studentcompetencyobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_014e05_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_014e05_educationcontent ON edfi.interventionstudyeducationcontent USING btree (contentidentifier);


--
-- Name: fk_01fe80_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_01fe80_school ON edfi.classperiod USING btree (schoolid);


--
-- Name: fk_02ddd8_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_02ddd8_assessmentperioddescriptor ON edfi.studentassessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_0325c5_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_course ON edfi.courseoffering USING btree (coursecode, educationorganizationid);


--
-- Name: fk_0325c5_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_school ON edfi.courseoffering USING btree (schoolid);


--
-- Name: fk_0325c5_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_session ON edfi.courseoffering USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_03f044_surveyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_03f044_surveyleveldescriptor ON edfi.surveyresponsesurveylevel USING btree (surveyleveldescriptorid);


--
-- Name: fk_050c1b_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_050c1b_languageusedescriptor ON edfi.contactlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_0516f9_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_educationorganization ON edfi.generalstudentprogramassociation USING btree (educationorganizationid);


--
-- Name: fk_0516f9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_program ON edfi.generalstudentprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_0516f9_reasonexiteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_reasonexiteddescriptor ON edfi.generalstudentprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: fk_0516f9_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_student ON edfi.generalstudentprogramassociation USING btree (studentusi);


--
-- Name: fk_0628e0_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0628e0_tribalaffiliationdescriptor ON edfi.studenteducationorganizationassociationtribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_07722c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_07722c_gradeleveldescriptor ON edfi.calendargradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0789bb_calendareventdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0789bb_calendareventdescriptor ON edfi.calendardatecalendarevent USING btree (calendareventdescriptorid);


--
-- Name: fk_0855d2_participationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0855d2_participationstatusdescriptor ON edfi.generalstudentprogramassociationprogramparticipationstatus USING btree (participationstatusdescriptorid);


--
-- Name: fk_09668f_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_09668f_schoolyeartype ON edfi.stateeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_0a2145_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0a2145_gradeleveldescriptor ON edfi.educationcontentappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0c6eff_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c6eff_reportingtagdescriptor ON edfi.sourcedimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_0c9651_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0c9651_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_resultdatatypetypedescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0d16f7_disciplineincidentparticipationcodedescriptor ON edfi.disciplineincidentexternalparticipant USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_0ee746_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_addresstypedescriptor ON edfi.educationorganizationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_0ee746_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_countrydescriptor ON edfi.educationorganizationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_0fae05_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_deliverymethoddescriptor ON edfi.intervention USING btree (deliverymethoddescriptorid);


--
-- Name: fk_0fae05_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_educationorganization ON edfi.intervention USING btree (educationorganizationid);


--
-- Name: fk_0fae05_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_interventionclassdescriptor ON edfi.intervention USING btree (interventionclassdescriptorid);


--
-- Name: fk_0fceba_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_assessmentreportingmethoddescriptor ON edfi.studentassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0fceba_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_resultdatatypetypedescriptor ON edfi.studentassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor ON edfi.studentacademicrecord USING btree (cumulativeearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor1 ON edfi.studentacademicrecord USING btree (cumulativeattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor2; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor2 ON edfi.studentacademicrecord USING btree (sessionearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor3; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor3 ON edfi.studentacademicrecord USING btree (sessionattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_educationorganization ON edfi.studentacademicrecord USING btree (educationorganizationid);


--
-- Name: fk_0ff8d6_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_schoolyeartype ON edfi.studentacademicrecord USING btree (schoolyear);


--
-- Name: fk_0ff8d6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_student ON edfi.studentacademicrecord USING btree (studentusi);


--
-- Name: fk_0ff8d6_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_termdescriptor ON edfi.studentacademicrecord USING btree (termdescriptorid);


--
-- Name: fk_1141c9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1141c9_academicsubjectdescriptor ON edfi.credentialacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_11bd42_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_assessmentreportingmethoddescriptor ON edfi.assessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_11bd42_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_performanceleveldescriptor ON edfi.assessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_11bd42_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_resultdatatypetypedescriptor ON edfi.assessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_11f7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school ON edfi.feederschoolassociation USING btree (feederschoolid);


--
-- Name: fk_11f7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school1 ON edfi.feederschoolassociation USING btree (schoolid);


--
-- Name: fk_131e2b_accounttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_accounttypedescriptor ON edfi.chartofaccount USING btree (accounttypedescriptorid);


--
-- Name: fk_131e2b_balancesheetdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_balancesheetdimension ON edfi.chartofaccount USING btree (balancesheetcode, fiscalyear);


--
-- Name: fk_131e2b_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_educationorganization ON edfi.chartofaccount USING btree (educationorganizationid);


--
-- Name: fk_131e2b_functiondimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_functiondimension ON edfi.chartofaccount USING btree (functioncode, fiscalyear);


--
-- Name: fk_131e2b_funddimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_funddimension ON edfi.chartofaccount USING btree (fundcode, fiscalyear);


--
-- Name: fk_131e2b_objectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_objectdimension ON edfi.chartofaccount USING btree (objectcode, fiscalyear);


--
-- Name: fk_131e2b_operationalunitdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_operationalunitdimension ON edfi.chartofaccount USING btree (operationalunitcode, fiscalyear);


--
-- Name: fk_131e2b_programdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_programdimension ON edfi.chartofaccount USING btree (programcode, fiscalyear);


--
-- Name: fk_131e2b_projectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_projectdimension ON edfi.chartofaccount USING btree (projectcode, fiscalyear);


--
-- Name: fk_131e2b_sourcedimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_sourcedimension ON edfi.chartofaccount USING btree (sourcecode, fiscalyear);


--
-- Name: fk_13b924_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_academicsubjectdescriptor ON edfi.organizationdepartment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_13b924_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_educationorganization1 ON edfi.organizationdepartment USING btree (parenteducationorganizationid);


--
-- Name: fk_151580_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_151580_learningstandard ON edfi.assessmentitemlearningstandard USING btree (learningstandardid);


--
-- Name: fk_1587d8_sectioncharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1587d8_sectioncharacteristicdescriptor ON edfi.sectioncharacteristic USING btree (sectioncharacteristicdescriptorid);


--
-- Name: fk_15b619_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_15b619_school ON edfi.location USING btree (schoolid);


--
-- Name: fk_16896e_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_16896e_programcharacteristicdescriptor ON edfi.programcharacteristic USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_170747_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_cohort ON edfi.staffcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_170747_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_staff ON edfi.staffcohortassociation USING btree (staffusi);


--
-- Name: fk_175995_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_175995_gradeleveldescriptor ON edfi.courseofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_17c02a_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard ON edfi.learningstandardequivalenceassociation USING btree (sourcelearningstandardid);


--
-- Name: fk_17c02a_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard1 ON edfi.learningstandardequivalenceassociation USING btree (targetlearningstandardid);


--
-- Name: fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandardequivalencestrengthdescriptor ON edfi.learningstandardequivalenceassociation USING btree (learningstandardequivalencestrengthdescriptorid);


--
-- Name: fk_18889f_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_18889f_courseidentificationsystemdescriptor ON edfi.courseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_19c6d6_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_academicsubjectdescriptor ON edfi.cohort USING btree (academicsubjectdescriptorid);


--
-- Name: fk_19c6d6_cohortscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohortscopedescriptor ON edfi.cohort USING btree (cohortscopedescriptorid);


--
-- Name: fk_19c6d6_cohorttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohorttypedescriptor ON edfi.cohort USING btree (cohorttypedescriptorid);


--
-- Name: fk_19c6d6_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_educationorganization ON edfi.cohort USING btree (educationorganizationid);


--
-- Name: fk_1a4369_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1a4369_assessment ON edfi.graduationplanrequiredassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_1ac620_monitoreddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_monitoreddescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (monitoreddescriptorid);


--
-- Name: fk_1ac620_participationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_participationdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (participationdescriptorid);


--
-- Name: fk_1ac620_proficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_proficiencydescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (proficiencydescriptorid);


--
-- Name: fk_1ac620_progressdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_progressdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (progressdescriptorid);


--
-- Name: fk_1ac620_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_schoolyeartype ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (schoolyear);


--
-- Name: fk_1b7007_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_1b7007_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_performanceleveldescriptor ON edfi.objectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_1b7007_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_resultdatatypetypedescriptor ON edfi.objectiveassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_1b7ccf_programevaluationelement; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7ccf_programevaluationelement ON edfi.evaluationrubricdimension USING btree (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_1b7ccf_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7ccf_ratingleveldescriptor ON edfi.evaluationrubricdimension USING btree (evaluationrubricratingleveldescriptorid);


--
-- Name: fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolchoiceimplementstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (schoolchoiceimplementstatusdescriptorid);


--
-- Name: fk_1ba71e_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolyeartype ON edfi.localeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_1bab8a_cteprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bab8a_cteprogramservicedescriptor ON edfi.studentcteprogramassociationcteprogramservice USING btree (cteprogramservicedescriptorid);


--
-- Name: fk_1bb88c_questionformdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_questionformdescriptor ON edfi.surveyquestion USING btree (questionformdescriptorid);


--
-- Name: fk_1bb88c_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_survey ON edfi.surveyquestion USING btree (namespace, surveyidentifier);


--
-- Name: fk_1bb88c_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_surveysection ON edfi.surveyquestion USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_1c8d3f_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c8d3f_languagedescriptor ON edfi.stafflanguage USING btree (languagedescriptorid);


--
-- Name: fk_1ee70e_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ee70e_learningstandard ON edfi.objectiveassessmentlearningstandard USING btree (learningstandardid);


--
-- Name: fk_2096ce_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_careerpathwaydescriptor ON edfi.course USING btree (careerpathwaydescriptorid);


--
-- Name: fk_2096ce_coursedefinedbydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursedefinedbydescriptor ON edfi.course USING btree (coursedefinedbydescriptorid);


--
-- Name: fk_2096ce_coursegpaapplicabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursegpaapplicabilitydescriptor ON edfi.course USING btree (coursegpaapplicabilitydescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor ON edfi.course USING btree (minimumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor1 ON edfi.course USING btree (maximumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_educationorganization ON edfi.course USING btree (educationorganizationid);


--
-- Name: fk_210b6b_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_210b6b_courselevelcharacteristicdescriptor ON edfi.courseofferingcourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_211bb3_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_educationorganization ON edfi.survey USING btree (educationorganizationid);


--
-- Name: fk_211bb3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_schoolyeartype ON edfi.survey USING btree (schoolyear);


--
-- Name: fk_211bb3_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_session ON edfi.survey USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_211bb3_surveycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_surveycategorydescriptor ON edfi.survey USING btree (surveycategorydescriptorid);


--
-- Name: fk_2189c3_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveyresponse ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_2189c3_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveysection ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_225a51_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_225a51_telephonenumbertypedescriptor ON edfi.contacttelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_226b3d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_226b3d_gradeleveldescriptor ON edfi.bellschedulegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_22ceba_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_22ceba_section ON edfi.assessmentsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_247572_communityorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_communityorganization ON edfi.communityprovider USING btree (communityorganizationid);


--
-- Name: fk_247572_providercategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providercategorydescriptor ON edfi.communityprovider USING btree (providercategorydescriptorid);


--
-- Name: fk_247572_providerprofitabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerprofitabilitydescriptor ON edfi.communityprovider USING btree (providerprofitabilitydescriptorid);


--
-- Name: fk_247572_providerstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerstatusdescriptor ON edfi.communityprovider USING btree (providerstatusdescriptorid);


--
-- Name: fk_24f4bf_programevaluationelement; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_24f4bf_programevaluationelement ON edfi.studentprogramevaluationstudentevaluationelement USING btree (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_24f4bf_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_24f4bf_ratingleveldescriptor ON edfi.studentprogramevaluationstudentevaluationelement USING btree (evaluationelementratingleveldescriptorid);


--
-- Name: fk_252151_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganization ON edfi.educationorganizationnetworkassociation USING btree (membereducationorganizationid);


--
-- Name: fk_252151_educationorganizationnetwork; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganizationnetwork ON edfi.educationorganizationnetworkassociation USING btree (educationorganizationnetworkid);


--
-- Name: fk_25c08c_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_charterstatusdescriptor ON edfi.localeducationagency USING btree (charterstatusdescriptorid);


--
-- Name: fk_25c08c_educationservicecenter; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_educationservicecenter ON edfi.localeducationagency USING btree (educationservicecenterid);


--
-- Name: fk_25c08c_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagency ON edfi.localeducationagency USING btree (parentlocaleducationagencyid);


--
-- Name: fk_25c08c_localeducationagencycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagencycategorydescriptor ON edfi.localeducationagency USING btree (localeducationagencycategorydescriptorid);


--
-- Name: fk_25c08c_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_stateeducationagency ON edfi.localeducationagency USING btree (stateeducationagencyid);


--
-- Name: fk_25cb9c_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_cohort ON edfi.studentinterventionassociation USING btree (cohortidentifier, cohorteducationorganizationid);


--
-- Name: fk_25cb9c_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_intervention ON edfi.studentinterventionassociation USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_25cb9c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_student ON edfi.studentinterventionassociation USING btree (studentusi);


--
-- Name: fk_268e07_languageinstructionprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_268e07_languageinstructionprogramservicedescriptor ON edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 USING btree (languageinstructionprogramservicedescriptorid);


--
-- Name: fk_269e10_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_academicsubjectdescriptor ON edfi.objectiveassessment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_269e10_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_assessment ON edfi.objectiveassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_269e10_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_objectiveassessment ON edfi.objectiveassessment USING btree (assessmentidentifier, parentidentificationcode, namespace);


--
-- Name: fk_277c31_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_277c31_countrydescriptor ON edfi.contactpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_277c31_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_277c31_identificationdocumentusedescriptor ON edfi.contactpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_277c31_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_277c31_personalinformationverificationdescriptor ON edfi.contactpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_27d914_titleipartaparticipantdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_27d914_titleipartaparticipantdescriptor ON edfi.studenttitleipartaprogramassociation USING btree (titleipartaparticipantdescriptorid);


--
-- Name: fk_285d36_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_285d36_academicsubjectdescriptor ON edfi.openstaffpositionacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_2935bf_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_administrativefundingcontroldescriptor ON edfi.postsecondaryinstitution USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_postsecondaryinstitutionleveldescriptor ON edfi.postsecondaryinstitution USING btree (postsecondaryinstitutionleveldescriptorid);


--
-- Name: fk_29e870_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_diagnosisdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_29e870_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_gradeleveldescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_29e870_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_interventioneffectivenessratingdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_29e870_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_populationserveddescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_2a164d_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_citizenshipstatusdescriptor ON edfi.student USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_2a164d_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_countrydescriptor ON edfi.student USING btree (birthcountrydescriptorid);


--
-- Name: fk_2a164d_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_person ON edfi.student USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_2a164d_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_sexdescriptor ON edfi.student USING btree (birthsexdescriptorid);


--
-- Name: fk_2a164d_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_stateabbreviationdescriptor ON edfi.student USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_2a4725_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a4725_languagedescriptor ON edfi.studenteducationorganizationassociationlanguage USING btree (languagedescriptorid);


--
-- Name: fk_2b286a_academichonorcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_academichonorcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (academichonorcategorydescriptorid);


--
-- Name: fk_2b286a_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_achievementcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (achievementcategorydescriptorid);


--
-- Name: fk_2b5c3d_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b5c3d_levelofeducationdescriptor ON edfi.contact USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_2b5c3d_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b5c3d_person ON edfi.contact USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_2b5c3d_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b5c3d_sexdescriptor ON edfi.contact USING btree (sexdescriptorid);


--
-- Name: fk_2c2b13_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c2b13_ancestryethnicorigindescriptor ON edfi.studenteducationorganizationassociationancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c4cdb_studentdisciplineincidentbehaviorassociation ON edfi.disciplineactionstudentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: fk_2c91e8_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_2c91e8_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_resultdatatypetypedescriptor ON edfi.objectiveassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d3c0c_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_educationorganization ON edfi.accountabilityrating USING btree (educationorganizationid);


--
-- Name: fk_2d3c0c_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_schoolyeartype ON edfi.accountabilityrating USING btree (schoolyear);


--
-- Name: fk_2d57be_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_countrydescriptor ON edfi.studentidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_2d57be_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_identificationdocumentusedescriptor ON edfi.studentidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_2d57be_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_personalinformationverificationdescriptor ON edfi.studentidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_2e333a_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2e333a_languageusedescriptor ON edfi.studenteducationorganizationassociationlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_309217_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_309217_program ON edfi.sectionprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_30e866_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_30e866_staff ON edfi.disciplineactionstaff USING btree (staffusi);


--
-- Name: fk_31779a_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_countrydescriptor ON edfi.staffidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_31779a_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_identificationdocumentusedescriptor ON edfi.staffidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_31779a_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_personalinformationverificationdescriptor ON edfi.staffidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_317aeb_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_attendanceeventcategorydescriptor ON edfi.studentprogramattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_317aeb_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationalenvironmentdescriptor ON edfi.studentprogramattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_317aeb_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationorganization ON edfi.studentprogramattendanceevent USING btree (educationorganizationid);


--
-- Name: fk_317aeb_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_program ON edfi.studentprogramattendanceevent USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_317aeb_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_student ON edfi.studentprogramattendanceevent USING btree (studentusi);


--
-- Name: fk_31bbf7_curriculumuseddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31bbf7_curriculumuseddescriptor ON edfi.courseofferingcurriculumused USING btree (curriculumuseddescriptorid);


--
-- Name: fk_32920f_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydeterminationsourcetypedescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_32eddb_chartofaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32eddb_chartofaccount ON edfi.localaccount USING btree (chartofaccountidentifier, chartofaccounteducationorganizationid, fiscalyear);


--
-- Name: fk_32eddb_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32eddb_educationorganization ON edfi.localaccount USING btree (educationorganizationid);


--
-- Name: fk_354642_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_354642_academicsubjectdescriptor ON edfi.coursetranscriptacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_358692_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_358692_addresstypedescriptor ON edfi.contactinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_358692_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_358692_countrydescriptor ON edfi.contactinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_369ddc_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_cohort ON edfi.studentcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_369ddc_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_student ON edfi.studentcohortassociation USING btree (studentusi);


--
-- Name: fk_3734d1_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3734d1_assessmentperioddescriptor ON edfi.assessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_3800be_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_educationalenvironmentdescriptor ON edfi.restraintevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_3800be_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_school ON edfi.restraintevent USING btree (schoolid);


--
-- Name: fk_3800be_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_student ON edfi.restraintevent USING btree (studentusi);


--
-- Name: fk_38677c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_38677c_gradeleveldescriptor ON edfi.learningstandardgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_39073d_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_staff ON edfi.surveysectionresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_39073d_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_surveysectionresponse ON edfi.surveysectionresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_395c07_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyleveldescriptor ON edfi.studentcompetencyobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_395c07_competencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyobjective ON edfi.studentcompetencyobjective USING btree (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: fk_395c07_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_gradingperiod ON edfi.studentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_395c07_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_student ON edfi.studentcompetencyobjective USING btree (studentusi);


--
-- Name: fk_39aa3c_attemptstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_attemptstatusdescriptor ON edfi.studentsectionassociation USING btree (attemptstatusdescriptorid);


--
-- Name: fk_39aa3c_repeatidentifierdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_repeatidentifierdescriptor ON edfi.studentsectionassociation USING btree (repeatidentifierdescriptorid);


--
-- Name: fk_39aa3c_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_section ON edfi.studentsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_39aa3c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_student ON edfi.studentsectionassociation USING btree (studentusi);


--
-- Name: fk_3ab5d4_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3ab5d4_educationcontent ON edfi.interventionprescriptioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3af731_assessmentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3af731_assessmentidentificationsystemdescriptor ON edfi.assessmentidentificationcode USING btree (assessmentidentificationsystemdescriptorid);


--
-- Name: fk_3b06c7_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b06c7_reportingtagdescriptor ON edfi.operationalunitdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_3b2082_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b2082_ratingleveldescriptor ON edfi.programevaluationelementratinglevel USING btree (ratingleveldescriptorid);


--
-- Name: fk_3b5b30_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_academicsubjectdescriptor ON edfi.graduationplancreditsbysubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_3b5b30_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_credittypedescriptor ON edfi.graduationplancreditsbysubject USING btree (credittypedescriptorid);


--
-- Name: fk_3c823d_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c823d_educationcontent ON edfi.interventioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3cc1d4_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_educationorganization ON edfi.openstaffposition USING btree (educationorganizationid);


--
-- Name: fk_3cc1d4_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_employmentstatusdescriptor ON edfi.openstaffposition USING btree (employmentstatusdescriptorid);


--
-- Name: fk_3cc1d4_postingresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_postingresultdescriptor ON edfi.openstaffposition USING btree (postingresultdescriptorid);


--
-- Name: fk_3cc1d4_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_programassignmentdescriptor ON edfi.openstaffposition USING btree (programassignmentdescriptorid);


--
-- Name: fk_3cc1d4_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_staffclassificationdescriptor ON edfi.openstaffposition USING btree (staffclassificationdescriptorid);


--
-- Name: fk_3d5433_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3d5433_gradeleveldescriptor ON edfi.interventionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3db81b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3db81b_gradeleveldescriptor ON edfi.staffschoolassociationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3e04ae_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3e04ae_reportingtagdescriptor ON edfi.programdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_4007e0_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4007e0_electronicmailtypedescriptor ON edfi.contactelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_400d06_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_400d06_academicsubjectdescriptor ON edfi.assessmentacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_42109f_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42109f_languagedescriptor ON edfi.contactlanguage USING btree (languagedescriptorid);


--
-- Name: fk_427110_educationorganizationcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_427110_educationorganizationcategorydescriptor ON edfi.educationorganizationcategory USING btree (educationorganizationcategorydescriptorid);


--
-- Name: fk_42aa64_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_educationorganization ON edfi.studenteducationorganizationresponsibilityassociation USING btree (educationorganizationid);


--
-- Name: fk_42aa64_responsibilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_responsibilitydescriptor ON edfi.studenteducationorganizationresponsibilityassociation USING btree (responsibilitydescriptorid);


--
-- Name: fk_42aa64_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_student ON edfi.studenteducationorganizationresponsibilityassociation USING btree (studentusi);


--
-- Name: fk_43bbe1_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_43bbe1_stateeducationagency ON edfi.educationservicecenter USING btree (stateeducationagencyid);


--
-- Name: fk_44e78d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_credittypedescriptor ON edfi.graduationplancreditsbycourse USING btree (credittypedescriptorid);


--
-- Name: fk_44e78d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_gradeleveldescriptor ON edfi.graduationplancreditsbycourse USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_44f909_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44f909_learningstandard ON edfi.programlearningstandard USING btree (learningstandardid);


--
-- Name: fk_4525e6_operationalstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4525e6_operationalstatusdescriptor ON edfi.educationorganization USING btree (operationalstatusdescriptorid);


--
-- Name: fk_465c76_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_465c76_classperiod ON edfi.sectionclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_466cfa_gradebookentrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradebookentrytypedescriptor ON edfi.gradebookentry USING btree (gradebookentrytypedescriptorid);


--
-- Name: fk_466cfa_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradingperiod ON edfi.gradebookentry USING btree (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: fk_466cfa_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_section ON edfi.gradebookentry USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_46e5c2_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_financialcollectiondescriptor ON edfi.localpayroll USING btree (financialcollectiondescriptorid);


--
-- Name: fk_46e5c2_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_localaccount ON edfi.localpayroll USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_46e5c2_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_staff ON edfi.localpayroll USING btree (staffusi);


--
-- Name: fk_4736c7_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4736c7_gradeleveldescriptor ON edfi.interventionprescriptionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_4925da_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_addresstypedescriptor ON edfi.educationorganizationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_4925da_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_localedescriptor ON edfi.educationorganizationaddress USING btree (localedescriptorid);


--
-- Name: fk_4925da_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_stateabbreviationdescriptor ON edfi.educationorganizationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_4a3f1c_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a3f1c_sexdescriptor ON edfi.interventionprescriptionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a715c_educationorganizationidentificationsystemdescriptor ON edfi.educationorganizationidentificationcode USING btree (educationorganizationidentificationsystemdescriptorid);


--
-- Name: fk_4b1054_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b1054_educationorganization ON edfi.studentprogramevaluation USING btree (educationorganizationid);


--
-- Name: fk_4b1054_programevaluation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b1054_programevaluation ON edfi.studentprogramevaluation USING btree (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_4b1054_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b1054_ratingleveldescriptor ON edfi.studentprogramevaluation USING btree (summaryevaluationratingleveldescriptorid);


--
-- Name: fk_4b1054_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b1054_staff ON edfi.studentprogramevaluation USING btree (staffevaluatorstaffusi);


--
-- Name: fk_4b1054_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b1054_student ON edfi.studentprogramevaluation USING btree (studentusi);


--
-- Name: fk_4b43da_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_disciplineincident ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_4b43da_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_student ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (studentusi);


--
-- Name: fk_4c38bb_programsponsordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c38bb_programsponsordescriptor ON edfi.programsponsor USING btree (programsponsordescriptorid);


--
-- Name: fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c979a_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_4ca65b_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydeterminationsourcetypedescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_4d9b4a_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_financialcollectiondescriptor ON edfi.localcontractedstaff USING btree (financialcollectiondescriptorid);


--
-- Name: fk_4d9b4a_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_localaccount ON edfi.localcontractedstaff USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_4d9b4a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_staff ON edfi.localcontractedstaff USING btree (staffusi);


--
-- Name: fk_4de15a_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4de15a_telephonenumbertypedescriptor ON edfi.stafftelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_4e3afe_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_countrydescriptor ON edfi.staffpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_4e3afe_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_identificationdocumentusedescriptor ON edfi.staffpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_4e3afe_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_personalinformationverificationdescriptor ON edfi.staffpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_4e79b9_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_credential ON edfi.staffeducationorganizationemploymentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_4e79b9_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_educationorganization ON edfi.staffeducationorganizationemploymentassociation USING btree (educationorganizationid);


--
-- Name: fk_4e79b9_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_employmentstatusdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (employmentstatusdescriptorid);


--
-- Name: fk_4e79b9_separationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationdescriptorid);


--
-- Name: fk_4e79b9_separationreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationreasondescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationreasondescriptorid);


--
-- Name: fk_4e79b9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_staff ON edfi.staffeducationorganizationemploymentassociation USING btree (staffusi);


--
-- Name: fk_515cb5_classroompositiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_classroompositiondescriptor ON edfi.staffsectionassociation USING btree (classroompositiondescriptorid);


--
-- Name: fk_515cb5_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_section ON edfi.staffsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_515cb5_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_staff ON edfi.staffsectionassociation USING btree (staffusi);


--
-- Name: fk_520251_neglectedordelinquentprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_520251_neglectedordelinquentprogramservicedescriptor ON edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 USING btree (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: fk_57d145_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_57d145_program ON edfi.coursetranscriptprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_58013b_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_58013b_program ON edfi.assessmentprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_581f0f_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_581f0f_competencyleveldescriptor ON edfi.coursecompetencylevel USING btree (competencyleveldescriptorid);


--
-- Name: fk_582e49_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_582e49_electronicmailtypedescriptor ON edfi.studenteducationorganizationassociationelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_59fcb5_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_59fcb5_program ON edfi.cohortprogram USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_5a18f9_gradingperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_gradingperioddescriptor ON edfi.gradingperiod USING btree (gradingperioddescriptorid);


--
-- Name: fk_5a18f9_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_school ON edfi.gradingperiod USING btree (schoolid);


--
-- Name: fk_5a18f9_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_schoolyeartype ON edfi.gradingperiod USING btree (schoolyear);


--
-- Name: fk_5e049e_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_achievementcategorydescriptor ON edfi.studentacademicrecordrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_5e049e_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_recognitiontypedescriptor ON edfi.studentacademicrecordrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_5e9932_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_educationorganization ON edfi.competencyobjective USING btree (educationorganizationid);


--
-- Name: fk_5e9932_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_gradeleveldescriptor ON edfi.competencyobjective USING btree (objectivegradeleveldescriptorid);


--
-- Name: fk_5ee8fd_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5ee8fd_disabilitydesignationdescriptor ON edfi.studenteducationorganizationassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_6007db_sourcesystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6007db_sourcesystemdescriptor ON edfi.person USING btree (sourcesystemdescriptorid);


--
-- Name: fk_61b087_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_attendanceeventcategorydescriptor ON edfi.studentsectionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_61b087_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_educationalenvironmentdescriptor ON edfi.studentsectionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_61b087_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_section ON edfi.studentsectionattendanceevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_61b087_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_student ON edfi.studentsectionattendanceevent USING btree (studentusi);


--
-- Name: fk_631023_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_attendanceeventcategorydescriptor ON edfi.studentinterventionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_631023_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_educationalenvironmentdescriptor ON edfi.studentinterventionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_631023_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_intervention ON edfi.studentinterventionattendanceevent USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_631023_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_student ON edfi.studentinterventionattendanceevent USING btree (studentusi);


--
-- Name: fk_644654_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_644654_learningstandard ON edfi.courselearningstandard USING btree (learningstandardid);


--
-- Name: fk_64d8a6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d8a6_gradeleveldescriptor ON edfi.schoolgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_6621ee_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6621ee_courseidentificationsystemdescriptor ON edfi.coursetranscriptalternativecourseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_678d65_neglectedordelinquentprogramdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_neglectedordelinquentprogramdescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (neglectedordelinquentprogramdescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (elaprogressleveldescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor1 ON edfi.studentneglectedordelinquentprogramassociation USING btree (mathematicsprogressleveldescriptorid);


--
-- Name: fk_681927_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_citizenshipstatusdescriptor ON edfi.staff USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_681927_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_levelofeducationdescriptor ON edfi.staff USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_681927_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_person ON edfi.staff USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_681927_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_sexdescriptor ON edfi.staff USING btree (sexdescriptorid);


--
-- Name: fk_6959b4_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_school ON edfi.session USING btree (schoolid);


--
-- Name: fk_6959b4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_schoolyeartype ON edfi.session USING btree (schoolyear);


--
-- Name: fk_6959b4_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_termdescriptor ON edfi.session USING btree (termdescriptorid);


--
-- Name: fk_696d9a_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_696d9a_racedescriptor ON edfi.staffrace USING btree (racedescriptorid);


--
-- Name: fk_69cd6f_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69cd6f_servicedescriptor ON edfi.studentprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_69dd58_cohortyeartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_cohortyeartypedescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_69dd58_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_schoolyeartype ON edfi.studenteducationorganizationassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_69dd58_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_termdescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (termdescriptorid);


--
-- Name: fk_6acf2b_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_course ON edfi.coursetranscript USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_6acf2b_courseattemptresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courseattemptresultdescriptor ON edfi.coursetranscript USING btree (courseattemptresultdescriptorid);


--
-- Name: fk_6acf2b_courserepeatcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courserepeatcodedescriptor ON edfi.coursetranscript USING btree (courserepeatcodedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor ON edfi.coursetranscript USING btree (attemptedcredittypedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor1 ON edfi.coursetranscript USING btree (earnedcredittypedescriptorid);


--
-- Name: fk_6acf2b_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_educationorganization ON edfi.coursetranscript USING btree (externaleducationorganizationid);


--
-- Name: fk_6acf2b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_gradeleveldescriptor ON edfi.coursetranscript USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_6acf2b_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_methodcreditearneddescriptor ON edfi.coursetranscript USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_6acf2b_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_staff ON edfi.coursetranscript USING btree (responsibleteacherstaffusi);


--
-- Name: fk_6acf2b_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_studentacademicrecord ON edfi.coursetranscript USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_6cd27e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_addresstypedescriptor ON edfi.staffinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_6cd27e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_countrydescriptor ON edfi.staffinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_6cd2e3_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_administrativefundingcontroldescriptor ON edfi.school USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_6cd2e3_charterapprovalagencytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterapprovalagencytypedescriptor ON edfi.school USING btree (charterapprovalagencytypedescriptorid);


--
-- Name: fk_6cd2e3_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterstatusdescriptor ON edfi.school USING btree (charterstatusdescriptorid);


--
-- Name: fk_6cd2e3_internetaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_internetaccessdescriptor ON edfi.school USING btree (internetaccessdescriptorid);


--
-- Name: fk_6cd2e3_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_localeducationagency ON edfi.school USING btree (localeducationagencyid);


--
-- Name: fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor ON edfi.school USING btree (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: fk_6cd2e3_schooltypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schooltypedescriptor ON edfi.school USING btree (schooltypedescriptorid);


--
-- Name: fk_6cd2e3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schoolyeartype ON edfi.school USING btree (charterapprovalschoolyear);


--
-- Name: fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_titleipartaschooldesignationdescriptor ON edfi.school USING btree (titleipartaschooldesignationdescriptorid);


--
-- Name: fk_6fa51c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6fa51c_staff ON edfi.interventionstaff USING btree (staffusi);


--
-- Name: fk_7062bd_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7062bd_reportingtagdescriptor ON edfi.funddimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_70e978_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70e978_graduationplan ON edfi.studentschoolassociationalternativegraduationplan USING btree (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear);


--
-- Name: fk_70f675_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_educationorganization ON edfi.learningstandardcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_70f675_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_publicationstatusdescriptor ON edfi.learningstandardcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_720058_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_720058_addresstypedescriptor ON edfi.contactaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_720058_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_720058_localedescriptor ON edfi.contactaddress USING btree (localedescriptorid);


--
-- Name: fk_720058_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_720058_stateabbreviationdescriptor ON edfi.contactaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_72eb60_academicweek; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_72eb60_academicweek ON edfi.sessionacademicweek USING btree (schoolid, weekidentifier);


--
-- Name: fk_730be1_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_730be1_educationorganization ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (educationorganizationid);


--
-- Name: fk_730be1_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_730be1_surveysectionresponse ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_735dd8_contacttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_contacttypedescriptor ON edfi.staffeducationorganizationcontactassociation USING btree (contacttypedescriptorid);


--
-- Name: fk_735dd8_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_educationorganization ON edfi.staffeducationorganizationcontactassociation USING btree (educationorganizationid);


--
-- Name: fk_735dd8_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_staff ON edfi.staffeducationorganizationcontactassociation USING btree (staffusi);


--
-- Name: fk_73601f_disciplinedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_73601f_disciplinedescriptor ON edfi.disciplineactiondiscipline USING btree (disciplinedescriptorid);


--
-- Name: fk_742dd2_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_742dd2_telephonenumbertypedescriptor ON edfi.staffeducationorganizationcontactassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_7433b4_modelentitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7433b4_modelentitydescriptor ON edfi.descriptormappingmodelentity USING btree (modelentitydescriptorid);


--
-- Name: fk_7483c6_staffidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7483c6_staffidentificationsystemdescriptor ON edfi.staffidentificationcode USING btree (staffidentificationsystemdescriptorid);


--
-- Name: fk_74e4e5_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization ON edfi.educationorganizationpeerassociation USING btree (educationorganizationid);


--
-- Name: fk_74e4e5_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization1 ON edfi.educationorganizationpeerassociation USING btree (peereducationorganizationid);


--
-- Name: fk_7808ee_assessmentcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_assessmentcategorydescriptor ON edfi.assessment USING btree (assessmentcategorydescriptorid);


--
-- Name: fk_7808ee_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_educationorganization ON edfi.assessment USING btree (educationorganizationid);


--
-- Name: fk_784616_programevaluation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_784616_programevaluation ON edfi.programevaluationelement USING btree (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_784616_programevaluationobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_784616_programevaluationobjective ON edfi.programevaluationelement USING btree (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_789691_schoolcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_789691_schoolcategorydescriptor ON edfi.schoolcategory USING btree (schoolcategorydescriptorid);


--
-- Name: fk_78fd7f_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_attendanceeventcategorydescriptor ON edfi.studentschoolattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_78fd7f_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_educationalenvironmentdescriptor ON edfi.studentschoolattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_78fd7f_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_school ON edfi.studentschoolattendanceevent USING btree (schoolid);


--
-- Name: fk_78fd7f_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_session ON edfi.studentschoolattendanceevent USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_78fd7f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_student ON edfi.studentschoolattendanceevent USING btree (studentusi);


--
-- Name: fk_79895a_institutiontelephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_79895a_institutiontelephonenumbertypedescriptor ON edfi.educationorganizationinstitutiontelephone USING btree (institutiontelephonenumbertypedescriptorid);


--
-- Name: fk_7bbbe7_calendardate; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_calendardate ON edfi.sectionattendancetakenevent USING btree (calendarcode, date, schoolid, schoolyear);


--
-- Name: fk_7bbbe7_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_section ON edfi.sectionattendancetakenevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_7bbbe7_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_staff ON edfi.sectionattendancetakenevent USING btree (staffusi);


--
-- Name: fk_7f600a_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitem ON edfi.studentassessmentitem USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_7f600a_assessmentitemresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitemresultdescriptor ON edfi.studentassessmentitem USING btree (assessmentitemresultdescriptorid);


--
-- Name: fk_7f600a_responseindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_responseindicatordescriptor ON edfi.studentassessmentitem USING btree (responseindicatordescriptorid);


--
-- Name: fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7fa4be_disciplineincidentparticipationcodedescriptor ON edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_80c6c1_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_80c6c1_classperiod ON edfi.studentsectionattendanceeventclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_839e20_gradetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradetypedescriptor ON edfi.grade USING btree (gradetypedescriptorid);


--
-- Name: fk_839e20_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradingperiod ON edfi.grade USING btree (gradingperioddescriptorid, gradingperiodname, schoolid, gradingperiodschoolyear);


--
-- Name: fk_839e20_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_performancebaseconversiondescriptor ON edfi.grade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_839e20_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_studentsectionassociation ON edfi.grade USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_8422f4_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8422f4_reportingtagdescriptor ON edfi.chartofaccountreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_84e5e0_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_84e5e0_reportcard ON edfi.studentacademicrecordreportcard USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi);


--
-- Name: fk_8574ad_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8574ad_gradepointaveragetypedescriptor ON edfi.reportcardgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_857b52_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_calendar ON edfi.studentschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_857b52_enrollmenttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_enrollmenttypedescriptor ON edfi.studentschoolassociation USING btree (enrollmenttypedescriptorid);


--
-- Name: fk_857b52_entrygradelevelreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrygradelevelreasondescriptor ON edfi.studentschoolassociation USING btree (entrygradelevelreasondescriptorid);


--
-- Name: fk_857b52_entrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrytypedescriptor ON edfi.studentschoolassociation USING btree (entrytypedescriptorid);


--
-- Name: fk_857b52_exitwithdrawtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_exitwithdrawtypedescriptor ON edfi.studentschoolassociation USING btree (exitwithdrawtypedescriptorid);


--
-- Name: fk_857b52_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_gradeleveldescriptor ON edfi.studentschoolassociation USING btree (entrygradeleveldescriptorid);


--
-- Name: fk_857b52_gradeleveldescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_gradeleveldescriptor1 ON edfi.studentschoolassociation USING btree (nextyeargradeleveldescriptorid);


--
-- Name: fk_857b52_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_graduationplan ON edfi.studentschoolassociation USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_857b52_residencystatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_residencystatusdescriptor ON edfi.studentschoolassociation USING btree (residencystatusdescriptorid);


--
-- Name: fk_857b52_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_school ON edfi.studentschoolassociation USING btree (schoolid);


--
-- Name: fk_857b52_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_school1 ON edfi.studentschoolassociation USING btree (nextyearschoolid);


--
-- Name: fk_857b52_schoolchoicebasisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolchoicebasisdescriptor ON edfi.studentschoolassociation USING btree (schoolchoicebasisdescriptorid);


--
-- Name: fk_857b52_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype ON edfi.studentschoolassociation USING btree (schoolyear);


--
-- Name: fk_857b52_schoolyeartype1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype1 ON edfi.studentschoolassociation USING btree (classofschoolyear);


--
-- Name: fk_857b52_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_student ON edfi.studentschoolassociation USING btree (studentusi);


--
-- Name: fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85a0eb_schoolfoodserviceprogramservicedescriptor ON edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb USING btree (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: fk_85e741_continuationofservicesreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85e741_continuationofservicesreasondescriptor ON edfi.studentmigranteducationprogramassociation USING btree (continuationofservicesreasondescriptorid);


--
-- Name: fk_876ba3_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_876ba3_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_performanceleveldescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_876ba3_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_87d32b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_87d32b_gradeleveldescriptor ON edfi.interventionstudyappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_893629_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_addresstypedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_893629_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_localedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_893629_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_stateabbreviationdescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_8a9a67_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8a9a67_calendar ON edfi.calendardate USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_8adb29_titleipartaprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8adb29_titleipartaprogramservicedescriptor ON edfi.studenttitleipartaprogramassociationtitleipartaprogramservice USING btree (titleipartaprogramservicedescriptorid);


--
-- Name: fk_8ceb4c_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandard ON edfi.learningstandard USING btree (parentlearningstandardid);


--
-- Name: fk_8ceb4c_learningstandardcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardcategorydescriptor ON edfi.learningstandard USING btree (learningstandardcategorydescriptorid);


--
-- Name: fk_8ceb4c_learningstandardscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardscopedescriptor ON edfi.learningstandard USING btree (learningstandardscopedescriptorid);


--
-- Name: fk_8d3fd8_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d3fd8_gradeleveldescriptor ON edfi.sectionofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_8d455d_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d455d_reportingtagdescriptor ON edfi.functiondimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_8d6383_contact; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_contact ON edfi.surveyresponse USING btree (contactusi);


--
-- Name: fk_8d6383_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_staff ON edfi.surveyresponse USING btree (staffusi);


--
-- Name: fk_8d6383_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_student ON edfi.surveyresponse USING btree (studentusi);


--
-- Name: fk_8d6383_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_survey ON edfi.surveyresponse USING btree (namespace, surveyidentifier);


--
-- Name: fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_barriertointernetaccessinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (barriertointernetaccessinresidencedescriptorid);


--
-- Name: fk_8e1257_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_educationorganization ON edfi.studenteducationorganizationassociation USING btree (educationorganizationid);


--
-- Name: fk_8e1257_internetaccesstypeinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetaccesstypeinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetaccesstypeinresidencedescriptorid);


--
-- Name: fk_8e1257_internetperformanceinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetperformanceinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetperformanceinresidencedescriptorid);


--
-- Name: fk_8e1257_limitedenglishproficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_limitedenglishproficiencydescriptor ON edfi.studenteducationorganizationassociation USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceaccessdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceaccessdescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceawayfromschooldescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceproviderdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceproviderdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceproviderdescriptorid);


--
-- Name: fk_8e1257_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_sexdescriptor ON edfi.studenteducationorganizationassociation USING btree (sexdescriptorid);


--
-- Name: fk_8e1257_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_student ON edfi.studenteducationorganizationassociation USING btree (studentusi);


--
-- Name: fk_8e1257_supportermilitaryconnectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_supportermilitaryconnectiondescriptor ON edfi.studenteducationorganizationassociation USING btree (supportermilitaryconnectiondescriptorid);


--
-- Name: fk_8e9d64_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e9d64_stateabbreviationdescriptor ON edfi.interventionstudystateabbreviation USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_90920d_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_educationorganization ON edfi.program USING btree (educationorganizationid);


--
-- Name: fk_90920d_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_programtypedescriptor ON edfi.program USING btree (programtypedescriptorid);


--
-- Name: fk_91b095_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_91b095_othernametypedescriptor ON edfi.contactothername USING btree (othernametypedescriptorid);


--
-- Name: fk_92f7f8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_learningstandard ON edfi.gradelearningstandardgrade USING btree (learningstandardid);


--
-- Name: fk_92f7f8_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_performancebaseconversiondescriptor ON edfi.gradelearningstandardgrade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_98cd8a_educationcontent1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_98cd8a_educationcontent1 ON edfi.educationcontentderivativesourceeducationcontent USING btree (derivativesourcecontentidentifier);


--
-- Name: fk_990204_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_990204_program ON edfi.studentsectionassociationprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_9960a9_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9960a9_learningstandard ON edfi.assessmentscorerangelearningstandardlearningstandard USING btree (learningstandardid);


--
-- Name: fk_9965a5_contentclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_contentclassdescriptor ON edfi.educationcontent USING btree (contentclassdescriptorid);


--
-- Name: fk_9965a5_costratedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_costratedescriptor ON edfi.educationcontent USING btree (costratedescriptorid);


--
-- Name: fk_9965a5_interactivitystyledescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_interactivitystyledescriptor ON edfi.educationcontent USING btree (interactivitystyledescriptorid);


--
-- Name: fk_9965a5_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_learningstandard ON edfi.educationcontent USING btree (learningstandardid);


--
-- Name: fk_9b6ed1_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9b6ed1_sexdescriptor ON edfi.educationcontentappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_9bbaf5_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bbaf5_school ON edfi.bellschedule USING btree (schoolid);


--
-- Name: fk_9bd9d6_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bd9d6_mediumofinstructiondescriptor ON edfi.postsecondaryinstitutionmediumofinstruction USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_9e377d_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e377d_classperiod ON edfi.bellscheduleclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_9e6edd_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e6edd_diagnosisdescriptor ON edfi.interventionprescriptiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_9f1246_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_course ON edfi.surveycourseassociation USING btree (coursecode, educationorganizationid);


--
-- Name: fk_9f1246_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_survey ON edfi.surveycourseassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_a20588_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, namespace);


--
-- Name: fk_a20588_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessmentreportingmethoddescriptor ON edfi.assessmentscorerangelearningstandard USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_a20588_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_objectiveassessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_a2d4a8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2d4a8_telephonenumbertypedescriptor ON edfi.studenteducationorganizationassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_a2fd20_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2fd20_disabilitydesignationdescriptor ON edfi.studentspecialeducationprogramassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_a3387e_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3387e_platformtypedescriptor ON edfi.assessmentplatformtype USING btree (platformtypedescriptorid);


--
-- Name: fk_a3f725_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_achievementcategorydescriptor ON edfi.studentacademicrecorddiploma USING btree (achievementcategorydescriptorid);


--
-- Name: fk_a3f725_diplomaleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomaleveldescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomaleveldescriptorid);


--
-- Name: fk_a3f725_diplomatypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomatypedescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomatypedescriptorid);


--
-- Name: fk_a4a6ae_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a4a6ae_ancestryethnicorigindescriptor ON edfi.staffancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a50f80_homelessprimarynighttimeresidencedescriptor ON edfi.studenthomelessprogramassociation USING btree (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: fk_a51ff9_specialeducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a51ff9_specialeducationprogramservicedescriptor ON edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 USING btree (specialeducationprogramservicedescriptorid);


--
-- Name: fk_a53c6c_programevaluation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a53c6c_programevaluation ON edfi.programevaluationobjective USING btree (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_a545e5_weapondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a545e5_weapondescriptor ON edfi.disciplineincidentweapon USING btree (weapondescriptorid);


--
-- Name: fk_a6a1f0_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a6a1f0_racedescriptor ON edfi.studenteducationorganizationassociationrace USING btree (racedescriptorid);


--
-- Name: fk_a741a8_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_countrydescriptor ON edfi.studentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_a741a8_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_identificationdocumentusedescriptor ON edfi.studentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_a741a8_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_personalinformationverificationdescriptor ON edfi.studentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a82b93_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_addresstypedescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_a82b93_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_countrydescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_a8bc47_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a8bc47_sexdescriptor ON edfi.interventionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_a97956_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a97956_school ON edfi.academicweek USING btree (schoolid);


--
-- Name: fk_a984df_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a984df_populationserveddescriptor ON edfi.interventionprescriptionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_a9c0d9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_program ON edfi.staffprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_a9c0d9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_staff ON edfi.staffprogramassociation USING btree (staffusi);


--
-- Name: fk_aa5751_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aa5751_visadescriptor ON edfi.studentvisa USING btree (visadescriptorid);


--
-- Name: fk_aaa07e_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaa07e_gradeleveldescriptor ON edfi.courseofferingofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_aaade9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaade9_academicsubjectdescriptor ON edfi.learningstandardacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_ab7096_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ab7096_creditcategorydescriptor ON edfi.coursetranscriptcreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ae53d1_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae53d1_othernametypedescriptor ON edfi.studentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae6a21_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_af7be7_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af7be7_gradepointaveragetypedescriptor ON edfi.studentacademicrecordgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_af86db_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_disciplineincident ON edfi.staffdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_af86db_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_staff ON edfi.staffdisciplineincidentassociation USING btree (staffusi);


--
-- Name: fk_afb8b8_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_educationorganization ON edfi.studentassessmenteducationorganizationassociation USING btree (educationorganizationid);


--
-- Name: fk_afb8b8_educationorganizationassociationtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_educationorganizationassociationtypedescriptor ON edfi.studentassessmenteducationorganizationassociation USING btree (educationorganizationassociationtypedescriptorid);


--
-- Name: fk_afb8b8_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_schoolyeartype ON edfi.studentassessmenteducationorganizationassociation USING btree (schoolyear);


--
-- Name: fk_afb8b8_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_studentassessment ON edfi.studentassessmenteducationorganizationassociation USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_b0cb9e_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b0cb9e_othernametypedescriptor ON edfi.staffothername USING btree (othernametypedescriptorid);


--
-- Name: fk_b13bbd_absenceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_absenceeventcategorydescriptor ON edfi.staffabsenceevent USING btree (absenceeventcategorydescriptorid);


--
-- Name: fk_b13bbd_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_staff ON edfi.staffabsenceevent USING btree (staffusi);


--
-- Name: fk_b1c42b_credentialfielddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialfielddescriptor ON edfi.credential USING btree (credentialfielddescriptorid);


--
-- Name: fk_b1c42b_credentialtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialtypedescriptor ON edfi.credential USING btree (credentialtypedescriptorid);


--
-- Name: fk_b1c42b_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_stateabbreviationdescriptor ON edfi.credential USING btree (stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialbasisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialbasisdescriptor ON edfi.credential USING btree (teachingcredentialbasisdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialdescriptor ON edfi.credential USING btree (teachingcredentialdescriptorid);


--
-- Name: fk_b1c52f_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c52f_objectiveassessment ON edfi.studentassessmentstudentobjectiveassessment USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_b2bd0a_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2bd0a_educationorganization ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (educationorganizationid);


--
-- Name: fk_b2bd0a_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2bd0a_surveyresponse ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_b2e25d_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2e25d_diagnosisdescriptor ON edfi.interventiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_b31a96_homelessprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b31a96_homelessprogramservicedescriptor ON edfi.studenthomelessprogramassociationhomelessprogramservice USING btree (homelessprogramservicedescriptorid);


--
-- Name: fk_b50e36_additionalcredittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b50e36_additionalcredittypedescriptor ON edfi.coursetranscriptearnedadditionalcredits USING btree (additionalcredittypedescriptorid);


--
-- Name: fk_b527e7_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b527e7_languageusedescriptor ON edfi.stafflanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_b5314a_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b5314a_reportingtagdescriptor ON edfi.projectdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_b6310e_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b6310e_financialcollectiondescriptor ON edfi.localactual USING btree (financialcollectiondescriptorid);


--
-- Name: fk_b6310e_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b6310e_localaccount ON edfi.localactual USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_b865d7_studentcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b865d7_studentcharacteristicdescriptor ON edfi.studenteducationorganizationassociationstudentcharacteristic USING btree (studentcharacteristicdescriptorid);


--
-- Name: fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryeventcategorydescriptor ON edfi.postsecondaryevent USING btree (postsecondaryeventcategorydescriptorid);


--
-- Name: fk_b8b6d7_postsecondaryinstitution; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryinstitution ON edfi.postsecondaryevent USING btree (postsecondaryinstitutionid);


--
-- Name: fk_b8b6d7_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_student ON edfi.postsecondaryevent USING btree (studentusi);


--
-- Name: fk_b9be24_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_credential ON edfi.staffeducationorganizationassignmentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b9be24_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_educationorganization ON edfi.staffeducationorganizationassignmentassociation USING btree (educationorganizationid);


--
-- Name: fk_b9be24_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staff ON edfi.staffeducationorganizationassignmentassociation USING btree (staffusi);


--
-- Name: fk_b9be24_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffclassificationdescriptor ON edfi.staffeducationorganizationassignmentassociation USING btree (staffclassificationdescriptorid);


--
-- Name: fk_b9be24_staffeducationorganizationemploymentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffeducationorganizationemploymentassociation ON edfi.staffeducationorganizationassignmentassociation USING btree (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi);


--
-- Name: fk_bcba5c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcba5c_staff ON edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c USING btree (staffusi);


--
-- Name: fk_bcbd82_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcbd82_reportingtagdescriptor ON edfi.balancesheetdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_bd89c0_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_educationorganization ON edfi.assessmentcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_bd89c0_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_publicationstatusdescriptor ON edfi.assessmentcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_be1ea4_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_credittypedescriptor ON edfi.graduationplan USING btree (totalrequiredcredittypedescriptorid);


--
-- Name: fk_be1ea4_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_educationorganization ON edfi.graduationplan USING btree (educationorganizationid);


--
-- Name: fk_be1ea4_graduationplantypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_graduationplantypedescriptor ON edfi.graduationplan USING btree (graduationplantypedescriptorid);


--
-- Name: fk_be1ea4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_schoolyeartype ON edfi.graduationplan USING btree (graduationschoolyear);


--
-- Name: fk_c0e4a3_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_addresstypedescriptor ON edfi.staffaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_c0e4a3_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_localedescriptor ON edfi.staffaddress USING btree (localedescriptorid);


--
-- Name: fk_c0e4a3_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_stateabbreviationdescriptor ON edfi.staffaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_c15030_studentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c15030_studentidentificationsystemdescriptor ON edfi.studenteducationorganizationassociationstudentidentifica_c15030 USING btree (studentidentificationsystemdescriptorid);


--
-- Name: fk_c16804_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_section ON edfi.surveysectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c16804_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_survey ON edfi.surveysectionassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_c16d6c_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16d6c_studentcompetencyobjective ON edfi.reportcardstudentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_c2bd3c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_assessmentreportingmethoddescriptor ON edfi.studentassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_c2bd3c_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_performanceleveldescriptor ON edfi.studentassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_c2efaa_assignmentlatestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_assignmentlatestatusdescriptor ON edfi.studentgradebookentry USING btree (assignmentlatestatusdescriptorid);


--
-- Name: fk_c2efaa_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_competencyleveldescriptor ON edfi.studentgradebookentry USING btree (competencyleveldescriptorid);


--
-- Name: fk_c2efaa_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_gradebookentry ON edfi.studentgradebookentry USING btree (gradebookentryidentifier, namespace);


--
-- Name: fk_c2efaa_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_student ON edfi.studentgradebookentry USING btree (studentusi);


--
-- Name: fk_c2efaa_submissionstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_submissionstatusdescriptor ON edfi.studentgradebookentry USING btree (submissionstatusdescriptorid);


--
-- Name: fk_c38935_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c38935_reportingtagdescriptor ON edfi.localaccountreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_c45364_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c45364_populationserveddescriptor ON edfi.interventionstudypopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_c4b3e0_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c4b3e0_gradingperiod ON edfi.sessiongradingperiod USING btree (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: fk_c60190_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_achievementcategorydescriptor ON edfi.staffrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_c60190_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_recognitiontypedescriptor ON edfi.staffrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_c7b5a8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7b5a8_learningstandard ON edfi.gradebookentrylearningstandard USING btree (learningstandardid);


--
-- Name: fk_c7e725_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7e725_courselevelcharacteristicdescriptor ON edfi.courselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_cabdcb_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cabdcb_behaviordescriptor ON edfi.disciplineincidentbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_cbeb99_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cbeb99_populationserveddescriptor ON edfi.interventionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_cd2ae9_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cd2ae9_section ON edfi.coursetranscriptsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_ce2080_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_calendar ON edfi.staffschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_ce2080_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_programassignmentdescriptor ON edfi.staffschoolassociation USING btree (programassignmentdescriptorid);


--
-- Name: fk_ce2080_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_school ON edfi.staffschoolassociation USING btree (schoolid);


--
-- Name: fk_ce2080_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_schoolyeartype ON edfi.staffschoolassociation USING btree (schoolyear);


--
-- Name: fk_ce2080_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_staff ON edfi.staffschoolassociation USING btree (staffusi);


--
-- Name: fk_d2362d_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2362d_section ON edfi.studentcohortassociationsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_d3d793_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d3d793_program ON edfi.restrainteventprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_d53ee9_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d53ee9_sexdescriptor ON edfi.interventionstudyappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_d5d0a3_calendartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_calendartypedescriptor ON edfi.calendar USING btree (calendartypedescriptorid);


--
-- Name: fk_d5d0a3_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_school ON edfi.calendar USING btree (schoolid);


--
-- Name: fk_d5d0a3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_schoolyeartype ON edfi.calendar USING btree (schoolyear);


--
-- Name: fk_d678fa_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d678fa_languagedescriptor ON edfi.educationcontentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d891fb_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d891fb_academicsubjectdescriptor ON edfi.staffschoolassociationacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_d90abb_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d90abb_languagedescriptor ON edfi.assessmentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d92986_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_deliverymethoddescriptor ON edfi.interventionstudy USING btree (deliverymethoddescriptorid);


--
-- Name: fk_d92986_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_educationorganization ON edfi.interventionstudy USING btree (educationorganizationid);


--
-- Name: fk_d92986_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionclassdescriptor ON edfi.interventionstudy USING btree (interventionclassdescriptorid);


--
-- Name: fk_d92986_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionprescription ON edfi.interventionstudy USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_d93663_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d93663_electronicmailtypedescriptor ON edfi.staffelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_d98560_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d98560_assessmentitem ON edfi.objectiveassessmentassessmentitem USING btree (assessmentidentifier, assessmentitemidentificationcode, namespace);


--
-- Name: fk_d9a90e_programevaluationobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9a90e_programevaluationobjective ON edfi.studentprogramevaluationstudentevaluationobjective USING btree (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: fk_d9a90e_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9a90e_ratingleveldescriptor ON edfi.studentprogramevaluationstudentevaluationobjective USING btree (evaluationobjectiveratingleveldescriptorid);


--
-- Name: fk_d9dcd7_migranteducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9dcd7_migranteducationprogramservicedescriptor ON edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 USING btree (migranteducationprogramservicedescriptorid);


--
-- Name: fk_dafcc7_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dafcc7_course ON edfi.graduationplancreditsbycoursecourse USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_db9e7c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_db9e7c_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dc3dcf_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessment ON edfi.assessmentitem USING btree (assessmentidentifier, namespace);


--
-- Name: fk_dc3dcf_assessmentitemcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessmentitemcategorydescriptor ON edfi.assessmentitem USING btree (assessmentitemcategorydescriptorid);


--
-- Name: fk_dde098_indicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatordescriptor ON edfi.educationorganizationindicator USING btree (indicatordescriptorid);


--
-- Name: fk_dde098_indicatorgroupdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorgroupdescriptor ON edfi.educationorganizationindicator USING btree (indicatorgroupdescriptorid);


--
-- Name: fk_dde098_indicatorleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorleveldescriptor ON edfi.educationorganizationindicator USING btree (indicatorleveldescriptorid);


--
-- Name: fk_ddfc9b_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_creditcategorydescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ddfc9b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_credittypedescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (credittypedescriptorid);


--
-- Name: fk_de959d_accommodationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_de959d_accommodationdescriptor ON edfi.studentassessmentaccommodation USING btree (accommodationdescriptorid);


--
-- Name: fk_debd4f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staff ON edfi.staffleave USING btree (staffusi);


--
-- Name: fk_debd4f_staffleaveeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staffleaveeventcategorydescriptor ON edfi.staffleave USING btree (staffleaveeventcategorydescriptorid);


--
-- Name: fk_df7331_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_assessmentreportingmethoddescriptor ON edfi.assessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_df7331_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_resultdatatypetypedescriptor ON edfi.assessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dfca5d_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_courseoffering ON edfi.section USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_dfca5d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_credittypedescriptor ON edfi.section USING btree (availablecredittypedescriptorid);


--
-- Name: fk_dfca5d_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_educationalenvironmentdescriptor ON edfi.section USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_dfca5d_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_languagedescriptor ON edfi.section USING btree (instructionlanguagedescriptorid);


--
-- Name: fk_dfca5d_location; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_location ON edfi.section USING btree (locationclassroomidentificationcode, locationschoolid);


--
-- Name: fk_dfca5d_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_mediumofinstructiondescriptor ON edfi.section USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_dfca5d_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_populationserveddescriptor ON edfi.section USING btree (populationserveddescriptorid);


--
-- Name: fk_dfca5d_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_school ON edfi.section USING btree (locationschoolid);


--
-- Name: fk_dfca5d_sectiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_sectiontypedescriptor ON edfi.section USING btree (sectiontypedescriptorid);


--
-- Name: fk_e19c72_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e19c72_gradeleveldescriptor ON edfi.openstaffpositioninstructionalgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e232ae_restrainteventreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e232ae_restrainteventreasondescriptor ON edfi.restrainteventreason USING btree (restrainteventreasondescriptorid);


--
-- Name: fk_e27213_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e27213_visadescriptor ON edfi.staffvisa USING btree (visadescriptorid);


--
-- Name: fk_e2733e_contact; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e2733e_contact ON edfi.studentcontactassociation USING btree (contactusi);


--
-- Name: fk_e2733e_relationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e2733e_relationdescriptor ON edfi.studentcontactassociation USING btree (relationdescriptorid);


--
-- Name: fk_e2733e_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e2733e_student ON edfi.studentcontactassociation USING btree (studentusi);


--
-- Name: fk_e3e5a4_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_program ON edfi.surveyprogramassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_e3e5a4_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_survey ON edfi.surveyprogramassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_e45c0b_incidentlocationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_incidentlocationdescriptor ON edfi.disciplineincident USING btree (incidentlocationdescriptorid);


--
-- Name: fk_e45c0b_reporterdescriptiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_reporterdescriptiondescriptor ON edfi.disciplineincident USING btree (reporterdescriptiondescriptorid);


--
-- Name: fk_e45c0b_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_school ON edfi.disciplineincident USING btree (schoolid);


--
-- Name: fk_e5572a_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e5572a_survey ON edfi.surveysection USING btree (namespace, surveyidentifier);


--
-- Name: fk_e670ae_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_educationorganization ON edfi.educationorganizationinterventionprescriptionassociation USING btree (educationorganizationid);


--
-- Name: fk_e670ae_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_interventionprescription ON edfi.educationorganizationinterventionprescriptionassociation USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e71055_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e71055_ratingleveldescriptor ON edfi.programevaluationratinglevel USING btree (ratingleveldescriptorid);


--
-- Name: fk_e77b10_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e77b10_tribalaffiliationdescriptor ON edfi.stafftribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_e79fe2_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e79fe2_interventionprescription ON edfi.interventioninterventionprescription USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e811ad_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e811ad_methodcreditearneddescriptor ON edfi.coursetranscriptpartialcoursetranscriptawards USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_e83625_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e83625_gradeleveldescriptor ON edfi.assessmentassessedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e88dea_networkpurposedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e88dea_networkpurposedescriptor ON edfi.educationorganizationnetwork USING btree (networkpurposedescriptorid);


--
-- Name: fk_e93bc3_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_deliverymethoddescriptor ON edfi.interventionprescription USING btree (deliverymethoddescriptorid);


--
-- Name: fk_e93bc3_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_educationorganization ON edfi.interventionprescription USING btree (educationorganizationid);


--
-- Name: fk_e93bc3_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_interventionclassdescriptor ON edfi.interventionprescription USING btree (interventionclassdescriptorid);


--
-- Name: fk_ea526f_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ea526f_financialcollectiondescriptor ON edfi.localencumbrance USING btree (financialcollectiondescriptorid);


--
-- Name: fk_ea526f_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ea526f_localaccount ON edfi.localencumbrance USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_ec1992_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_educationorganization ON edfi.reportcard USING btree (educationorganizationid);


--
-- Name: fk_ec1992_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_gradingperiod ON edfi.reportcard USING btree (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_ec1992_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_student ON edfi.reportcard USING btree (studentusi);


--
-- Name: fk_eddd02_surveyquestion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyquestion ON edfi.surveyquestionresponse USING btree (namespace, questioncode, surveyidentifier);


--
-- Name: fk_eddd02_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyresponse ON edfi.surveyquestionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_ee3b2a_administrationenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_administrationenvironmentdescriptor ON edfi.studentassessment USING btree (administrationenvironmentdescriptorid);


--
-- Name: fk_ee3b2a_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_assessment ON edfi.studentassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_ee3b2a_eventcircumstancedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_eventcircumstancedescriptor ON edfi.studentassessment USING btree (eventcircumstancedescriptorid);


--
-- Name: fk_ee3b2a_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_gradeleveldescriptor ON edfi.studentassessment USING btree (whenassessedgradeleveldescriptorid);


--
-- Name: fk_ee3b2a_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_languagedescriptor ON edfi.studentassessment USING btree (administrationlanguagedescriptorid);


--
-- Name: fk_ee3b2a_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_platformtypedescriptor ON edfi.studentassessment USING btree (platformtypedescriptorid);


--
-- Name: fk_ee3b2a_reasonnottesteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_reasonnottesteddescriptor ON edfi.studentassessment USING btree (reasonnottesteddescriptorid);


--
-- Name: fk_ee3b2a_retestindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_retestindicatordescriptor ON edfi.studentassessment USING btree (retestindicatordescriptorid);


--
-- Name: fk_ee3b2a_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_school ON edfi.studentassessment USING btree (reportedschoolid);


--
-- Name: fk_ee3b2a_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_schoolyeartype ON edfi.studentassessment USING btree (schoolyear);


--
-- Name: fk_ee3b2a_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_student ON edfi.studentassessment USING btree (studentusi);


--
-- Name: fk_ee5caf_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee5caf_academicsubjectdescriptor ON edfi.courseacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_ee68ed_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee68ed_studentsectionassociation ON edfi.studentcompetencyobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_disciplineactionlengthdifferencereasondescriptor ON edfi.disciplineaction USING btree (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: fk_eec7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school ON edfi.disciplineaction USING btree (assignmentschoolid);


--
-- Name: fk_eec7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school1 ON edfi.disciplineaction USING btree (responsibilityschoolid);


--
-- Name: fk_eec7b6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_student ON edfi.disciplineaction USING btree (studentusi);


--
-- Name: fk_ef90b6_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_diagnosisdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_ef90b6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_gradeleveldescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_ef90b6_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_interventioneffectivenessratingdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_ef90b6_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_populationserveddescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_f05a16_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f05a16_gradeleveldescriptor ON edfi.credentialgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_f092ff_communityprovider; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_communityprovider ON edfi.communityproviderlicense USING btree (communityproviderid);


--
-- Name: fk_f092ff_licensestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensestatusdescriptor ON edfi.communityproviderlicense USING btree (licensestatusdescriptorid);


--
-- Name: fk_f092ff_licensetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensetypedescriptor ON edfi.communityproviderlicense USING btree (licensetypedescriptorid);


--
-- Name: fk_f203d3_grade; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f203d3_grade ON edfi.reportcardgrade USING btree (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_f221cc_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f221cc_courselevelcharacteristicdescriptor ON edfi.sectioncourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_f32347_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_f32347_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_performanceleveldescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_f3917b_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3917b_credential ON edfi.staffcredential USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_f3a20e_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3a20e_program ON edfi.programevaluation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_f3a20e_programevaluationperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3a20e_programevaluationperioddescriptor ON edfi.programevaluation USING btree (programevaluationperioddescriptorid);


--
-- Name: fk_f3a20e_programevaluationtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3a20e_programevaluationtypedescriptor ON edfi.programevaluation USING btree (programevaluationtypedescriptorid);


--
-- Name: fk_f4934f_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_behaviordescriptor ON edfi.studentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid);


--
-- Name: fk_f4934f_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_disciplineincident ON edfi.studentdisciplineincidentbehaviorassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_f4934f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_student ON edfi.studentdisciplineincidentbehaviorassociation USING btree (studentusi);


--
-- Name: fk_f5b9f6_educationplandescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5b9f6_educationplandescriptor ON edfi.studentschoolassociationeducationplan USING btree (educationplandescriptorid);


--
-- Name: fk_f86fd9_specialeducationsettingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f86fd9_specialeducationsettingdescriptor ON edfi.studentspecialeducationprogramassociation USING btree (specialeducationsettingdescriptorid);


--
-- Name: fk_f9457e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_staff ON edfi.surveyresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_f9457e_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_surveyresponse ON edfi.surveyresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_f9e163_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_addresstypedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_f9e163_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_localedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_f9e163_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_stateabbreviationdescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_fcb699_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_educationorganization ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (educationorganizationid);


--
-- Name: fk_fcb699_eligibilitydelayreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_eligibilitydelayreasondescriptor ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (eligibilitydelayreasondescriptorid);


--
-- Name: fk_fcb699_eligibilityevaluationtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_eligibilityevaluationtypedescriptor ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (eligibilityevaluationtypedescriptorid);


--
-- Name: fk_fcb699_evaluationdelayreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_evaluationdelayreasondescriptor ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (evaluationdelayreasondescriptorid);


--
-- Name: fk_fcb699_ideapartdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_ideapartdescriptor ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (ideapartdescriptorid);


--
-- Name: fk_fcb699_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_program ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_fcb699_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fcb699_student ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (studentusi);


--
-- Name: fk_fda3b7_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fda3b7_reportingtagdescriptor ON edfi.objectdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_fece89_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fece89_staff ON edfi.studentspecialeducationprogramassociationserviceprovider USING btree (staffusi);


--
-- Name: fk_ffb8a9_ratingleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ffb8a9_ratingleveldescriptor ON edfi.programevaluationobjectiveratinglevel USING btree (ratingleveldescriptorid);


--
-- Name: ix_01dad5_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_01dad5_schoolid ON edfi.studentschoolattendanceevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_03208d_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_03208d_educationorganizationid ON edfi.surveycourseassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_04d46a_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_04d46a_educationorganizationid ON edfi.localaccount USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_08ab12_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_08ab12_educationorganizationid ON edfi.localbudget USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_092f4b_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_092f4b_schoolid ON edfi.grade USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_0bc73a_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_0bc73a_educationorganizationid ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_17aee7_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_17aee7_educationorganizationid ON edfi.courseoffering USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_17aee7_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_17aee7_schoolid ON edfi.courseoffering USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_192f9e_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_192f9e_educationorganizationid ON edfi.interventionprescription USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_1ce720_postsecondaryinstitutionid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_1ce720_postsecondaryinstitutionid ON edfi.postsecondaryevent USING btree (postsecondaryinstitutionid) INCLUDE (id);


--
-- Name: ix_213515_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_213515_schoolid ON edfi.academicweek USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_22c6b9_communityproviderid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_22c6b9_communityproviderid ON edfi.communityproviderlicense USING btree (communityproviderid) INCLUDE (id);


--
-- Name: ix_25e878_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_25e878_educationorganizationid ON edfi.studenteducationorganizationresponsibilityassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_26f4ee_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_26f4ee_educationorganizationid ON edfi.studentacademicrecord USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_28a80e_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_28a80e_educationorganizationid ON edfi.chartofaccount USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_2af48f_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_2af48f_schoolid ON edfi.section USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_2e670f_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_2e670f_educationorganizationid ON edfi.staffeducationorganizationemploymentassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_2f3ae3_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_2f3ae3_educationorganizationid ON edfi.localpayroll USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_465d77_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_465d77_schoolid ON edfi.sectionattendancetakenevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_4b9008_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_4b9008_educationorganizationid ON edfi.interventionstudy USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_522afe_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_522afe_educationorganizationid ON edfi.studentschoolassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_522afe_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_522afe_schoolid ON edfi.studentschoolassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_5479f1_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_5479f1_educationorganizationid ON edfi.educationorganizationpeerassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_561349_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_561349_educationorganizationid ON edfi.competencyobjective USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_56f34e_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_56f34e_educationorganizationid ON edfi.localencumbrance USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_61d6cb_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_61d6cb_schoolid ON edfi.calendar USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_658783_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_658783_educationorganizationid ON edfi.coursetranscript USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_66e879_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_66e879_educationorganizationid ON edfi.staffeducationorganizationcontactassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_69f571_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_69f571_schoolid ON edfi.studentsectionattendanceevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_6b0a3d_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_6b0a3d_schoolid ON edfi.surveysectionassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_6d6974_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_6d6974_educationorganizationid ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_7368ad_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_7368ad_educationorganizationid ON edfi.localactual USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_74aaa9_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_74aaa9_schoolid ON edfi.gradingperiod USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_75e4b0_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_75e4b0_educationorganizationid ON edfi.educationorganizationinterventionprescriptionassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_770ec5_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_770ec5_schoolid ON edfi.session USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_7b2b52_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_7b2b52_schoolid ON edfi.gradebookentry USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_7e881a_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_7e881a_educationorganizationid ON edfi.openstaffposition USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_8e3960_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_8e3960_schoolid ON edfi.studentdisciplineincidentbehaviorassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_8ea9ae_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_8ea9ae_educationorganizationid ON edfi.program USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_8eca97_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_8eca97_schoolid ON edfi.studentsectionassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_8fffcd_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_8fffcd_schoolid ON edfi.calendardate USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_94b692_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_94b692_educationorganizationid ON edfi.educationorganization USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_95901b_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_95901b_schoolid ON edfi.location USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_9a62df_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_9a62df_educationorganizationid ON edfi.studentcohortassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_a0029c_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_a0029c_educationorganizationid ON edfi.intervention USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_a1e739_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_a1e739_schoolid ON edfi.restraintevent USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_a20216_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_a20216_educationorganizationid ON edfi.studentinterventionattendanceevent USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_a9acfd_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_a9acfd_educationorganizationid ON edfi.studentassessmenteducationorganizationassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_aa4eba_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_aa4eba_schoolid ON edfi.feederschoolassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_ac2b4c_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_ac2b4c_schoolid ON edfi.staffschoolassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_b128ae_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_b128ae_schoolid ON edfi.classperiod USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_b22b59_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_b22b59_educationorganizationid ON edfi.generalstudentprogramassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_b32e40_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_b32e40_educationorganizationid ON edfi.survey USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_b32e40_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_b32e40_schoolid ON edfi.survey USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_b792af_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_b792af_schoolid ON edfi.disciplineincident USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_bb42a4_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_bb42a4_educationorganizationid ON edfi.accountabilityrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_bbd75f_educationorganizationnetworkid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_bbd75f_educationorganizationnetworkid ON edfi.educationorganizationnetworkassociation USING btree (educationorganizationnetworkid) INCLUDE (id);


--
-- Name: ix_c22e2b_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_c22e2b_educationorganizationid ON edfi.localcontractedstaff USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_c98801_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_c98801_educationorganizationid ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_ca8287_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_ca8287_educationorganizationid ON edfi.cohort USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_d21448_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_d21448_educationorganizationid ON edfi.surveyprogramassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_d4dae8_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_d4dae8_educationorganizationid ON edfi.staffcohortassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_dbd48a_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_dbd48a_educationorganizationid ON edfi.studentinterventionassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_de3455_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_de3455_schoolid ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_df1563_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_df1563_educationorganizationid ON edfi.reportcard USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_e037f0_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_e037f0_educationorganizationid ON edfi.graduationplan USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_e3dca4_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_e3dca4_schoolid ON edfi.staffsectionassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_e4ff68_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_e4ff68_educationorganizationid ON edfi.course USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_eab8a0_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_eab8a0_schoolid ON edfi.staffdisciplineincidentassociation USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_ecbd4b_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_ecbd4b_educationorganizationid ON edfi.studentprogramattendanceevent USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_f1d0ae_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_f1d0ae_educationorganizationid ON edfi.assessment USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_fb19cb_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_fb19cb_educationorganizationid ON edfi.staffeducationorganizationassignmentassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_fc9054_educationorganizationid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_fc9054_educationorganizationid ON edfi.studenteducationorganizationassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_ff37d5_schoolid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ix_ff37d5_schoolid ON edfi.bellschedule USING btree (schoolid) INCLUDE (id);


--
-- Name: staff_ui_staffuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX staff_ui_staffuniqueid ON edfi.staff USING btree (staffuniqueid) INCLUDE (staffusi);


--
-- Name: student_ui_studentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX student_ui_studentuniqueid ON edfi.student USING btree (studentuniqueid) INCLUDE (studentusi);


--
-- Name: ux_000683_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_000683_changeversion ON edfi.localbudget USING btree (changeversion);


--
-- Name: ux_000683_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_000683_id ON edfi.localbudget USING btree (id);


--
-- Name: ux_01fe80_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_01fe80_changeversion ON edfi.classperiod USING btree (changeversion);


--
-- Name: ux_01fe80_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_01fe80_id ON edfi.classperiod USING btree (id);


--
-- Name: ux_0325c5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0325c5_changeversion ON edfi.courseoffering USING btree (changeversion);


--
-- Name: ux_0325c5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0325c5_id ON edfi.courseoffering USING btree (id);


--
-- Name: ux_0516f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0516f9_changeversion ON edfi.generalstudentprogramassociation USING btree (changeversion);


--
-- Name: ux_0516f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0516f9_id ON edfi.generalstudentprogramassociation USING btree (id);


--
-- Name: ux_0fae05_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0fae05_changeversion ON edfi.intervention USING btree (changeversion);


--
-- Name: ux_0fae05_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0fae05_id ON edfi.intervention USING btree (id);


--
-- Name: ux_0ff8d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0ff8d6_changeversion ON edfi.studentacademicrecord USING btree (changeversion);


--
-- Name: ux_0ff8d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0ff8d6_id ON edfi.studentacademicrecord USING btree (id);


--
-- Name: ux_11f7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_11f7b6_changeversion ON edfi.feederschoolassociation USING btree (changeversion);


--
-- Name: ux_11f7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_11f7b6_id ON edfi.feederschoolassociation USING btree (id);


--
-- Name: ux_131e2b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_131e2b_changeversion ON edfi.chartofaccount USING btree (changeversion);


--
-- Name: ux_131e2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_131e2b_id ON edfi.chartofaccount USING btree (id);


--
-- Name: ux_15b619_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_15b619_changeversion ON edfi.location USING btree (changeversion);


--
-- Name: ux_15b619_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_15b619_id ON edfi.location USING btree (id);


--
-- Name: ux_170747_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_170747_changeversion ON edfi.staffcohortassociation USING btree (changeversion);


--
-- Name: ux_170747_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_170747_id ON edfi.staffcohortassociation USING btree (id);


--
-- Name: ux_17c02a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_17c02a_changeversion ON edfi.learningstandardequivalenceassociation USING btree (changeversion);


--
-- Name: ux_17c02a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_17c02a_id ON edfi.learningstandardequivalenceassociation USING btree (id);


--
-- Name: ux_19c6d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_19c6d6_changeversion ON edfi.cohort USING btree (changeversion);


--
-- Name: ux_19c6d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_19c6d6_id ON edfi.cohort USING btree (id);


--
-- Name: ux_1b7ccf_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_1b7ccf_changeversion ON edfi.evaluationrubricdimension USING btree (changeversion);


--
-- Name: ux_1b7ccf_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_1b7ccf_id ON edfi.evaluationrubricdimension USING btree (id);


--
-- Name: ux_1bb88c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_1bb88c_changeversion ON edfi.surveyquestion USING btree (changeversion);


--
-- Name: ux_1bb88c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_1bb88c_id ON edfi.surveyquestion USING btree (id);


--
-- Name: ux_2096ce_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2096ce_changeversion ON edfi.course USING btree (changeversion);


--
-- Name: ux_2096ce_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2096ce_id ON edfi.course USING btree (id);


--
-- Name: ux_211bb3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_211bb3_changeversion ON edfi.survey USING btree (changeversion);


--
-- Name: ux_211bb3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_211bb3_id ON edfi.survey USING btree (id);


--
-- Name: ux_2189c3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2189c3_changeversion ON edfi.surveysectionresponse USING btree (changeversion);


--
-- Name: ux_2189c3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2189c3_id ON edfi.surveysectionresponse USING btree (id);


--
-- Name: ux_219915_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_219915_changeversion ON edfi.descriptor USING btree (changeversion);


--
-- Name: ux_219915_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_219915_id ON edfi.descriptor USING btree (id);


--
-- Name: ux_252151_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_252151_changeversion ON edfi.educationorganizationnetworkassociation USING btree (changeversion);


--
-- Name: ux_252151_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_252151_id ON edfi.educationorganizationnetworkassociation USING btree (id);


--
-- Name: ux_25cb9c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_25cb9c_changeversion ON edfi.studentinterventionassociation USING btree (changeversion);


--
-- Name: ux_25cb9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_25cb9c_id ON edfi.studentinterventionassociation USING btree (id);


--
-- Name: ux_269e10_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_269e10_changeversion ON edfi.objectiveassessment USING btree (changeversion);


--
-- Name: ux_269e10_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_269e10_id ON edfi.objectiveassessment USING btree (id);


--
-- Name: ux_28b7c4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_28b7c4_changeversion ON edfi.operationalunitdimension USING btree (changeversion);


--
-- Name: ux_28b7c4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_28b7c4_id ON edfi.operationalunitdimension USING btree (id);


--
-- Name: ux_2a164d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2a164d_changeversion ON edfi.student USING btree (changeversion);


--
-- Name: ux_2a164d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2a164d_id ON edfi.student USING btree (id);


--
-- Name: ux_2b5c3d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2b5c3d_changeversion ON edfi.contact USING btree (changeversion);


--
-- Name: ux_2b5c3d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2b5c3d_id ON edfi.contact USING btree (id);


--
-- Name: ux_2d3c0c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2d3c0c_changeversion ON edfi.accountabilityrating USING btree (changeversion);


--
-- Name: ux_2d3c0c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2d3c0c_id ON edfi.accountabilityrating USING btree (id);


--
-- Name: ux_317aeb_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_317aeb_changeversion ON edfi.studentprogramattendanceevent USING btree (changeversion);


--
-- Name: ux_317aeb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_317aeb_id ON edfi.studentprogramattendanceevent USING btree (id);


--
-- Name: ux_32eddb_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_32eddb_changeversion ON edfi.localaccount USING btree (changeversion);


--
-- Name: ux_32eddb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_32eddb_id ON edfi.localaccount USING btree (id);


--
-- Name: ux_369ddc_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_369ddc_changeversion ON edfi.studentcohortassociation USING btree (changeversion);


--
-- Name: ux_369ddc_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_369ddc_id ON edfi.studentcohortassociation USING btree (id);


--
-- Name: ux_3800be_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3800be_changeversion ON edfi.restraintevent USING btree (changeversion);


--
-- Name: ux_3800be_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3800be_id ON edfi.restraintevent USING btree (id);


--
-- Name: ux_39073d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39073d_changeversion ON edfi.surveysectionresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_39073d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39073d_id ON edfi.surveysectionresponsestafftargetassociation USING btree (id);


--
-- Name: ux_395c07_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_395c07_changeversion ON edfi.studentcompetencyobjective USING btree (changeversion);


--
-- Name: ux_395c07_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_395c07_id ON edfi.studentcompetencyobjective USING btree (id);


--
-- Name: ux_39aa3c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39aa3c_changeversion ON edfi.studentsectionassociation USING btree (changeversion);


--
-- Name: ux_39aa3c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39aa3c_id ON edfi.studentsectionassociation USING btree (id);


--
-- Name: ux_3cc1d4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3cc1d4_changeversion ON edfi.openstaffposition USING btree (changeversion);


--
-- Name: ux_3cc1d4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3cc1d4_id ON edfi.openstaffposition USING btree (id);


--
-- Name: ux_4100ee_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4100ee_changeversion ON edfi.objectdimension USING btree (changeversion);


--
-- Name: ux_4100ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4100ee_id ON edfi.objectdimension USING btree (id);


--
-- Name: ux_42aa64_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_42aa64_changeversion ON edfi.studenteducationorganizationresponsibilityassociation USING btree (changeversion);


--
-- Name: ux_42aa64_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_42aa64_id ON edfi.studenteducationorganizationresponsibilityassociation USING btree (id);


--
-- Name: ux_4525e6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4525e6_changeversion ON edfi.educationorganization USING btree (changeversion);


--
-- Name: ux_4525e6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4525e6_id ON edfi.educationorganization USING btree (id);


--
-- Name: ux_464d7a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_464d7a_changeversion ON edfi.schoolyeartype USING btree (changeversion);


--
-- Name: ux_464d7a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_464d7a_id ON edfi.schoolyeartype USING btree (id);


--
-- Name: ux_466cfa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_466cfa_changeversion ON edfi.gradebookentry USING btree (changeversion);


--
-- Name: ux_466cfa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_466cfa_id ON edfi.gradebookentry USING btree (id);


--
-- Name: ux_46e5c2_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_46e5c2_changeversion ON edfi.localpayroll USING btree (changeversion);


--
-- Name: ux_46e5c2_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_46e5c2_id ON edfi.localpayroll USING btree (id);


--
-- Name: ux_4b1054_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4b1054_changeversion ON edfi.studentprogramevaluation USING btree (changeversion);


--
-- Name: ux_4b1054_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4b1054_id ON edfi.studentprogramevaluation USING btree (id);


--
-- Name: ux_4b43da_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4b43da_changeversion ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (changeversion);


--
-- Name: ux_4b43da_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4b43da_id ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (id);


--
-- Name: ux_4d9b4a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4d9b4a_changeversion ON edfi.localcontractedstaff USING btree (changeversion);


--
-- Name: ux_4d9b4a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4d9b4a_id ON edfi.localcontractedstaff USING btree (id);


--
-- Name: ux_4e79b9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4e79b9_changeversion ON edfi.staffeducationorganizationemploymentassociation USING btree (changeversion);


--
-- Name: ux_4e79b9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4e79b9_id ON edfi.staffeducationorganizationemploymentassociation USING btree (id);


--
-- Name: ux_515cb5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_515cb5_changeversion ON edfi.staffsectionassociation USING btree (changeversion);


--
-- Name: ux_515cb5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_515cb5_id ON edfi.staffsectionassociation USING btree (id);


--
-- Name: ux_5a18f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5a18f9_changeversion ON edfi.gradingperiod USING btree (changeversion);


--
-- Name: ux_5a18f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5a18f9_id ON edfi.gradingperiod USING btree (id);


--
-- Name: ux_5e9932_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5e9932_changeversion ON edfi.competencyobjective USING btree (changeversion);


--
-- Name: ux_5e9932_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5e9932_id ON edfi.competencyobjective USING btree (id);


--
-- Name: ux_6007db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6007db_changeversion ON edfi.person USING btree (changeversion);


--
-- Name: ux_6007db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6007db_id ON edfi.person USING btree (id);


--
-- Name: ux_61b087_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_61b087_changeversion ON edfi.studentsectionattendanceevent USING btree (changeversion);


--
-- Name: ux_61b087_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_61b087_id ON edfi.studentsectionattendanceevent USING btree (id);


--
-- Name: ux_631023_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_631023_changeversion ON edfi.studentinterventionattendanceevent USING btree (changeversion);


--
-- Name: ux_631023_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_631023_id ON edfi.studentinterventionattendanceevent USING btree (id);


--
-- Name: ux_681927_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_681927_changeversion ON edfi.staff USING btree (changeversion);


--
-- Name: ux_681927_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_681927_id ON edfi.staff USING btree (id);


--
-- Name: ux_6959b4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6959b4_changeversion ON edfi.session USING btree (changeversion);


--
-- Name: ux_6959b4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6959b4_id ON edfi.session USING btree (id);


--
-- Name: ux_6acf2b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6acf2b_changeversion ON edfi.coursetranscript USING btree (changeversion);


--
-- Name: ux_6acf2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6acf2b_id ON edfi.coursetranscript USING btree (id);


--
-- Name: ux_730be1_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_730be1_changeversion ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_730be1_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_730be1_id ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_735dd8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_735dd8_changeversion ON edfi.staffeducationorganizationcontactassociation USING btree (changeversion);


--
-- Name: ux_735dd8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_735dd8_id ON edfi.staffeducationorganizationcontactassociation USING btree (id);


--
-- Name: ux_74e4e5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_74e4e5_changeversion ON edfi.educationorganizationpeerassociation USING btree (changeversion);


--
-- Name: ux_74e4e5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_74e4e5_id ON edfi.educationorganizationpeerassociation USING btree (id);


--
-- Name: ux_7808ee_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7808ee_changeversion ON edfi.assessment USING btree (changeversion);


--
-- Name: ux_7808ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7808ee_id ON edfi.assessment USING btree (id);


--
-- Name: ux_784616_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_784616_changeversion ON edfi.programevaluationelement USING btree (changeversion);


--
-- Name: ux_784616_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_784616_id ON edfi.programevaluationelement USING btree (id);


--
-- Name: ux_78fd7f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_78fd7f_changeversion ON edfi.studentschoolattendanceevent USING btree (changeversion);


--
-- Name: ux_78fd7f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_78fd7f_id ON edfi.studentschoolattendanceevent USING btree (id);


--
-- Name: ux_7bbbe7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7bbbe7_changeversion ON edfi.sectionattendancetakenevent USING btree (changeversion);


--
-- Name: ux_7bbbe7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7bbbe7_id ON edfi.sectionattendancetakenevent USING btree (id);


--
-- Name: ux_839e20_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_839e20_changeversion ON edfi.grade USING btree (changeversion);


--
-- Name: ux_839e20_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_839e20_id ON edfi.grade USING btree (id);


--
-- Name: ux_857b52_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_857b52_changeversion ON edfi.studentschoolassociation USING btree (changeversion);


--
-- Name: ux_857b52_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_857b52_id ON edfi.studentschoolassociation USING btree (id);


--
-- Name: ux_8a9a67_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8a9a67_changeversion ON edfi.calendardate USING btree (changeversion);


--
-- Name: ux_8a9a67_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8a9a67_id ON edfi.calendardate USING btree (id);


--
-- Name: ux_8ceb4c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8ceb4c_changeversion ON edfi.learningstandard USING btree (changeversion);


--
-- Name: ux_8ceb4c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8ceb4c_id ON edfi.learningstandard USING btree (id);


--
-- Name: ux_8d6383_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8d6383_changeversion ON edfi.surveyresponse USING btree (changeversion);


--
-- Name: ux_8d6383_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8d6383_id ON edfi.surveyresponse USING btree (id);


--
-- Name: ux_8e1257_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8e1257_changeversion ON edfi.studenteducationorganizationassociation USING btree (changeversion);


--
-- Name: ux_8e1257_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8e1257_id ON edfi.studenteducationorganizationassociation USING btree (id);


--
-- Name: ux_90920d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_90920d_changeversion ON edfi.program USING btree (changeversion);


--
-- Name: ux_90920d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_90920d_id ON edfi.program USING btree (id);


--
-- Name: ux_937af8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_937af8_changeversion ON edfi.funddimension USING btree (changeversion);


--
-- Name: ux_937af8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_937af8_id ON edfi.funddimension USING btree (id);


--
-- Name: ux_9965a5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9965a5_changeversion ON edfi.educationcontent USING btree (changeversion);


--
-- Name: ux_9965a5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9965a5_id ON edfi.educationcontent USING btree (id);


--
-- Name: ux_9bbaf5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9bbaf5_changeversion ON edfi.bellschedule USING btree (changeversion);


--
-- Name: ux_9bbaf5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9bbaf5_id ON edfi.bellschedule USING btree (id);


--
-- Name: ux_9f1246_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9f1246_changeversion ON edfi.surveycourseassociation USING btree (changeversion);


--
-- Name: ux_9f1246_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9f1246_id ON edfi.surveycourseassociation USING btree (id);


--
-- Name: ux_a20588_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a20588_changeversion ON edfi.assessmentscorerangelearningstandard USING btree (changeversion);


--
-- Name: ux_a20588_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a20588_id ON edfi.assessmentscorerangelearningstandard USING btree (id);


--
-- Name: ux_a53c6c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a53c6c_changeversion ON edfi.programevaluationobjective USING btree (changeversion);


--
-- Name: ux_a53c6c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a53c6c_id ON edfi.programevaluationobjective USING btree (id);


--
-- Name: ux_a97956_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a97956_changeversion ON edfi.academicweek USING btree (changeversion);


--
-- Name: ux_a97956_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a97956_id ON edfi.academicweek USING btree (id);


--
-- Name: ux_a9a613_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a9a613_changeversion ON edfi.programdimension USING btree (changeversion);


--
-- Name: ux_a9a613_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9a613_id ON edfi.programdimension USING btree (id);


--
-- Name: ux_a9c0d9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a9c0d9_changeversion ON edfi.staffprogramassociation USING btree (changeversion);


--
-- Name: ux_a9c0d9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9c0d9_id ON edfi.staffprogramassociation USING btree (id);


--
-- Name: ux_af86db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_af86db_changeversion ON edfi.staffdisciplineincidentassociation USING btree (changeversion);


--
-- Name: ux_af86db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_af86db_id ON edfi.staffdisciplineincidentassociation USING btree (id);


--
-- Name: ux_afb8b8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_afb8b8_changeversion ON edfi.studentassessmenteducationorganizationassociation USING btree (changeversion);


--
-- Name: ux_afb8b8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_afb8b8_id ON edfi.studentassessmenteducationorganizationassociation USING btree (id);


--
-- Name: ux_b13bbd_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b13bbd_changeversion ON edfi.staffabsenceevent USING btree (changeversion);


--
-- Name: ux_b13bbd_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b13bbd_id ON edfi.staffabsenceevent USING btree (id);


--
-- Name: ux_b1c42b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b1c42b_changeversion ON edfi.credential USING btree (changeversion);


--
-- Name: ux_b1c42b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b1c42b_id ON edfi.credential USING btree (id);


--
-- Name: ux_b2bd0a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b2bd0a_changeversion ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_b2bd0a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b2bd0a_id ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_b6310e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b6310e_changeversion ON edfi.localactual USING btree (changeversion);


--
-- Name: ux_b6310e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b6310e_id ON edfi.localactual USING btree (id);


--
-- Name: ux_b8b6d7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b8b6d7_changeversion ON edfi.postsecondaryevent USING btree (changeversion);


--
-- Name: ux_b8b6d7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b8b6d7_id ON edfi.postsecondaryevent USING btree (id);


--
-- Name: ux_b9be24_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b9be24_changeversion ON edfi.staffeducationorganizationassignmentassociation USING btree (changeversion);


--
-- Name: ux_b9be24_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b9be24_id ON edfi.staffeducationorganizationassignmentassociation USING btree (id);


--
-- Name: ux_be1ea4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_be1ea4_changeversion ON edfi.graduationplan USING btree (changeversion);


--
-- Name: ux_be1ea4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_be1ea4_id ON edfi.graduationplan USING btree (id);


--
-- Name: ux_c16804_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c16804_changeversion ON edfi.surveysectionassociation USING btree (changeversion);


--
-- Name: ux_c16804_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c16804_id ON edfi.surveysectionassociation USING btree (id);


--
-- Name: ux_c2efaa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c2efaa_changeversion ON edfi.studentgradebookentry USING btree (changeversion);


--
-- Name: ux_c2efaa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c2efaa_id ON edfi.studentgradebookentry USING btree (id);


--
-- Name: ux_c4d12e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c4d12e_changeversion ON edfi.functiondimension USING btree (changeversion);


--
-- Name: ux_c4d12e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c4d12e_id ON edfi.functiondimension USING btree (id);


--
-- Name: ux_ce2080_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ce2080_changeversion ON edfi.staffschoolassociation USING btree (changeversion);


--
-- Name: ux_ce2080_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ce2080_id ON edfi.staffschoolassociation USING btree (id);


--
-- Name: ux_d16e19_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d16e19_changeversion ON edfi.projectdimension USING btree (changeversion);


--
-- Name: ux_d16e19_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d16e19_id ON edfi.projectdimension USING btree (id);


--
-- Name: ux_d5d0a3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d5d0a3_changeversion ON edfi.calendar USING btree (changeversion);


--
-- Name: ux_d5d0a3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d5d0a3_id ON edfi.calendar USING btree (id);


--
-- Name: ux_d92986_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d92986_changeversion ON edfi.interventionstudy USING btree (changeversion);


--
-- Name: ux_d92986_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d92986_id ON edfi.interventionstudy USING btree (id);


--
-- Name: ux_dc3dcf_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dc3dcf_changeversion ON edfi.assessmentitem USING btree (changeversion);


--
-- Name: ux_dc3dcf_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dc3dcf_id ON edfi.assessmentitem USING btree (id);


--
-- Name: ux_debd4f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_debd4f_changeversion ON edfi.staffleave USING btree (changeversion);


--
-- Name: ux_debd4f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_debd4f_id ON edfi.staffleave USING btree (id);


--
-- Name: ux_descriptor_uri; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_descriptor_uri ON edfi.descriptor USING btree (uri) INCLUDE (descriptorid, discriminator);


--
-- Name: ux_dfca5d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dfca5d_changeversion ON edfi.section USING btree (changeversion);


--
-- Name: ux_dfca5d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dfca5d_id ON edfi.section USING btree (id);


--
-- Name: ux_e2733e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e2733e_changeversion ON edfi.studentcontactassociation USING btree (changeversion);


--
-- Name: ux_e2733e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e2733e_id ON edfi.studentcontactassociation USING btree (id);


--
-- Name: ux_e3e5a4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e3e5a4_changeversion ON edfi.surveyprogramassociation USING btree (changeversion);


--
-- Name: ux_e3e5a4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e3e5a4_id ON edfi.surveyprogramassociation USING btree (id);


--
-- Name: ux_e45c0b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e45c0b_changeversion ON edfi.disciplineincident USING btree (changeversion);


--
-- Name: ux_e45c0b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e45c0b_id ON edfi.disciplineincident USING btree (id);


--
-- Name: ux_e52c9c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e52c9c_changeversion ON edfi.balancesheetdimension USING btree (changeversion);


--
-- Name: ux_e52c9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e52c9c_id ON edfi.balancesheetdimension USING btree (id);


--
-- Name: ux_e5572a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e5572a_changeversion ON edfi.surveysection USING btree (changeversion);


--
-- Name: ux_e5572a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e5572a_id ON edfi.surveysection USING btree (id);


--
-- Name: ux_e670ae_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e670ae_changeversion ON edfi.educationorganizationinterventionprescriptionassociation USING btree (changeversion);


--
-- Name: ux_e670ae_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e670ae_id ON edfi.educationorganizationinterventionprescriptionassociation USING btree (id);


--
-- Name: ux_e91a4d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e91a4d_changeversion ON edfi.sourcedimension USING btree (changeversion);


--
-- Name: ux_e91a4d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e91a4d_id ON edfi.sourcedimension USING btree (id);


--
-- Name: ux_e93bc3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e93bc3_changeversion ON edfi.interventionprescription USING btree (changeversion);


--
-- Name: ux_e93bc3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e93bc3_id ON edfi.interventionprescription USING btree (id);


--
-- Name: ux_ea526f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ea526f_changeversion ON edfi.localencumbrance USING btree (changeversion);


--
-- Name: ux_ea526f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ea526f_id ON edfi.localencumbrance USING btree (id);


--
-- Name: ux_ec1992_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ec1992_changeversion ON edfi.reportcard USING btree (changeversion);


--
-- Name: ux_ec1992_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ec1992_id ON edfi.reportcard USING btree (id);


--
-- Name: ux_eddd02_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eddd02_changeversion ON edfi.surveyquestionresponse USING btree (changeversion);


--
-- Name: ux_eddd02_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eddd02_id ON edfi.surveyquestionresponse USING btree (id);


--
-- Name: ux_ee3b2a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ee3b2a_changeversion ON edfi.studentassessment USING btree (changeversion);


--
-- Name: ux_ee3b2a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee3b2a_id ON edfi.studentassessment USING btree (id);


--
-- Name: ux_ee9047_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ee9047_changeversion ON edfi.descriptormapping USING btree (changeversion);


--
-- Name: ux_ee9047_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee9047_id ON edfi.descriptormapping USING btree (id);


--
-- Name: ux_eec7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eec7b6_changeversion ON edfi.disciplineaction USING btree (changeversion);


--
-- Name: ux_eec7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eec7b6_id ON edfi.disciplineaction USING btree (id);


--
-- Name: ux_f092ff_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f092ff_changeversion ON edfi.communityproviderlicense USING btree (changeversion);


--
-- Name: ux_f092ff_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f092ff_id ON edfi.communityproviderlicense USING btree (id);


--
-- Name: ux_f3a20e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f3a20e_changeversion ON edfi.programevaluation USING btree (changeversion);


--
-- Name: ux_f3a20e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f3a20e_id ON edfi.programevaluation USING btree (id);


--
-- Name: ux_f4934f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f4934f_changeversion ON edfi.studentdisciplineincidentbehaviorassociation USING btree (changeversion);


--
-- Name: ux_f4934f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f4934f_id ON edfi.studentdisciplineincidentbehaviorassociation USING btree (id);


--
-- Name: ux_f9457e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f9457e_changeversion ON edfi.surveyresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_f9457e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f9457e_id ON edfi.surveyresponsestafftargetassociation USING btree (id);


--
-- Name: ux_fcb699_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_fcb699_changeversion ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (changeversion);


--
-- Name: ux_fcb699_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_fcb699_id ON edfi.studentspecialeducationprogrameligibilityassociation USING btree (id);


--
-- Name: fk_09c531_telephonenumbertypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_09c531_telephonenumbertypedescriptor ON tpdm.candidatetelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_15d685_academicsubjectdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_academicsubjectdescriptor ON tpdm.performanceevaluation USING btree (academicsubjectdescriptorid);


--
-- Name: fk_15d685_educationorganization; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_educationorganization ON tpdm.performanceevaluation USING btree (educationorganizationid);


--
-- Name: fk_15d685_evaluationperioddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_evaluationperioddescriptor ON tpdm.performanceevaluation USING btree (evaluationperioddescriptorid);


--
-- Name: fk_15d685_performanceevaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_performanceevaluationtypedescriptor ON tpdm.performanceevaluation USING btree (performanceevaluationtypedescriptorid);


--
-- Name: fk_15d685_schoolyeartype; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_schoolyeartype ON tpdm.performanceevaluation USING btree (schoolyear);


--
-- Name: fk_15d685_termdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_15d685_termdescriptor ON tpdm.performanceevaluation USING btree (termdescriptorid);


--
-- Name: fk_160329_addresstypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_addresstypedescriptor ON tpdm.candidateaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_160329_localedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_localedescriptor ON tpdm.candidateaddress USING btree (localedescriptorid);


--
-- Name: fk_160329_stateabbreviationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_160329_stateabbreviationdescriptor ON tpdm.candidateaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_163e44_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_163e44_evaluationtypedescriptor ON tpdm.evaluation USING btree (evaluationtypedescriptorid);


--
-- Name: fk_163e44_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_163e44_performanceevaluation ON tpdm.evaluation USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_195935_accreditationstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_accreditationstatusdescriptor ON tpdm.educatorpreparationprogram USING btree (accreditationstatusdescriptorid);


--
-- Name: fk_195935_educationorganization; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_educationorganization ON tpdm.educatorpreparationprogram USING btree (educationorganizationid);


--
-- Name: fk_195935_programtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_195935_programtypedescriptor ON tpdm.educatorpreparationprogram USING btree (programtypedescriptorid);


--
-- Name: fk_1d984c_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_1d984c_evaluationratingleveldescriptor ON tpdm.evaluationobjectiveratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_2199be_postsecondaryinstitution; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2199be_postsecondaryinstitution ON tpdm.schoolextension USING btree (postsecondaryinstitutionid);


--
-- Name: fk_236ee4_disabilitydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_236ee4_disabilitydescriptor ON tpdm.candidatedisability USING btree (disabilitydescriptorid);


--
-- Name: fk_236ee4_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_236ee4_disabilitydeterminationsourcetypedescriptor ON tpdm.candidatedisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_268283_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_268283_resultdatatypetypedescriptor ON tpdm.evaluationratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d29eb_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_2d29eb_person ON tpdm.evaluationratingreviewer USING btree (reviewerpersonid, reviewersourcesystemdescriptorid);


--
-- Name: fk_3f00b1_languageusedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_3f00b1_languageusedescriptor ON tpdm.candidatelanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_4479ea_evaluationelement; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationelement ON tpdm.evaluationelementrating USING btree (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_4479ea_evaluationelementratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationelementratingleveldescriptor ON tpdm.evaluationelementrating USING btree (evaluationelementratingleveldescriptorid);


--
-- Name: fk_4479ea_evaluationobjectiverating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4479ea_evaluationobjectiverating ON tpdm.evaluationelementrating USING btree (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_4521bb_othernametypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_4521bb_othernametypedescriptor ON tpdm.candidateothername USING btree (othernametypedescriptorid);


--
-- Name: fk_477526_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_477526_person ON tpdm.performanceevaluationratingreviewer USING btree (reviewerpersonid, reviewersourcesystemdescriptorid);


--
-- Name: fk_520027_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_520027_person ON tpdm.surveyresponsepersontargetassociation USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_520027_surveyresponse; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_520027_surveyresponse ON tpdm.surveyresponsepersontargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_5b9d31_gradeleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_5b9d31_gradeleveldescriptor ON tpdm.performanceevaluationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_620d03_cohortyeartypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_cohortyeartypedescriptor ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_620d03_schoolyeartype; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_schoolyeartype ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_620d03_termdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_620d03_termdescriptor ON tpdm.candidateeducatorpreparationprogramassociationcohortyear USING btree (termdescriptorid);


--
-- Name: fk_643c81_evaluationelement; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_643c81_evaluationelement ON tpdm.rubricdimension USING btree (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_643c81_rubricratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_643c81_rubricratingleveldescriptor ON tpdm.rubricdimension USING btree (rubricratingleveldescriptorid);


--
-- Name: fk_6aa942_racedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6aa942_racedescriptor ON tpdm.candidaterace USING btree (racedescriptorid);


--
-- Name: fk_6edb1d_disabilitydesignationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6edb1d_disabilitydesignationdescriptor ON tpdm.candidatedisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_6fae52_certificationroutedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_certificationroutedescriptor ON tpdm.credentialextension USING btree (certificationroutedescriptorid);


--
-- Name: fk_6fae52_credentialstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_credentialstatusdescriptor ON tpdm.credentialextension USING btree (credentialstatusdescriptorid);


--
-- Name: fk_6fae52_educatorroledescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_educatorroledescriptor ON tpdm.credentialextension USING btree (educatorroledescriptorid);


--
-- Name: fk_6fae52_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_6fae52_person ON tpdm.credentialextension USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_7052f8_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7052f8_evaluationratingleveldescriptor ON tpdm.evaluationratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_73e151_studentacademicrecord; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_73e151_studentacademicrecord ON tpdm.credentialstudentacademicrecord USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_759abe_coteachingstyleobserveddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_coteachingstyleobserveddescriptor ON tpdm.performanceevaluationrating USING btree (coteachingstyleobserveddescriptorid);


--
-- Name: fk_759abe_performanceevaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_performanceevaluation ON tpdm.performanceevaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_759abe_performanceevaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_performanceevaluationratingleveldescriptor ON tpdm.performanceevaluationrating USING btree (performanceevaluationratingleveldescriptorid);


--
-- Name: fk_759abe_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_759abe_person ON tpdm.performanceevaluationrating USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_7ae19d_evaluationobjective; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_evaluationobjective ON tpdm.evaluationobjectiverating USING btree (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_7ae19d_evaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_evaluationrating ON tpdm.evaluationobjectiverating USING btree (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_7ae19d_objectiveratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_7ae19d_objectiveratingleveldescriptor ON tpdm.evaluationobjectiverating USING btree (objectiveratingleveldescriptorid);


--
-- Name: fk_863fa4_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_863fa4_resultdatatypetypedescriptor ON tpdm.performanceevaluationratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_90ed3d_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_90ed3d_evaluationratingleveldescriptor ON tpdm.performanceevaluationratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_93a227_countrydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_countrydescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_93a227_identificationdocumentusedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_identificationdocumentusedescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_93a227_personalinformationverificationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_93a227_personalinformationverificationdescriptor ON tpdm.candidatepersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a465f2_aidtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_a465f2_aidtypedescriptor ON tpdm.financialaid USING btree (aidtypedescriptorid);


--
-- Name: fk_a465f2_student; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_a465f2_student ON tpdm.financialaid USING btree (studentusi);


--
-- Name: fk_afbeb2_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_afbeb2_evaluationratingleveldescriptor ON tpdm.evaluationelementratinglevel USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_b2452d_countrydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_countrydescriptor ON tpdm.candidate USING btree (birthcountrydescriptorid);


--
-- Name: fk_b2452d_englishlanguageexamdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_englishlanguageexamdescriptor ON tpdm.candidate USING btree (englishlanguageexamdescriptorid);


--
-- Name: fk_b2452d_genderdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_genderdescriptor ON tpdm.candidate USING btree (genderdescriptorid);


--
-- Name: fk_b2452d_limitedenglishproficiencydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_limitedenglishproficiencydescriptor ON tpdm.candidate USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_b2452d_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_person ON tpdm.candidate USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_b2452d_sexdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_sexdescriptor ON tpdm.candidate USING btree (sexdescriptorid);


--
-- Name: fk_b2452d_sexdescriptor1; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_sexdescriptor1 ON tpdm.candidate USING btree (birthsexdescriptorid);


--
-- Name: fk_b2452d_stateabbreviationdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_b2452d_stateabbreviationdescriptor ON tpdm.candidate USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_beeccb_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_beeccb_resultdatatypetypedescriptor ON tpdm.evaluationobjectiveratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_bfaa20_evaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluation ON tpdm.evaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_bfaa20_evaluationratingleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluationratingleveldescriptor ON tpdm.evaluationrating USING btree (evaluationratingleveldescriptorid);


--
-- Name: fk_bfaa20_evaluationratingstatusdescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_evaluationratingstatusdescriptor ON tpdm.evaluationrating USING btree (evaluationratingstatusdescriptorid);


--
-- Name: fk_bfaa20_performanceevaluationrating; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_performanceevaluationrating ON tpdm.evaluationrating USING btree (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: fk_bfaa20_section; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_bfaa20_section ON tpdm.evaluationrating USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c5124f_electronicmailtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5124f_electronicmailtypedescriptor ON tpdm.candidateelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_c5877a_resultdatatypetypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_c5877a_resultdatatypetypedescriptor ON tpdm.evaluationelementratingresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_d3a222_gradeleveldescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d3a222_gradeleveldescriptor ON tpdm.educatorpreparationprogramgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_d4565d_evaluation; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d4565d_evaluation ON tpdm.evaluationobjective USING btree (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_d4565d_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_d4565d_evaluationtypedescriptor ON tpdm.evaluationobjective USING btree (evaluationtypedescriptorid);


--
-- Name: fk_e21e4b_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e21e4b_person ON tpdm.surveysectionresponsepersontargetassociation USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_e21e4b_surveysectionresponse; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e21e4b_surveysectionresponse ON tpdm.surveysectionresponsepersontargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_e5239b_languagedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e5239b_languagedescriptor ON tpdm.candidatelanguage USING btree (languagedescriptorid);


--
-- Name: fk_e53186_evaluationobjective; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e53186_evaluationobjective ON tpdm.evaluationelement USING btree (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: fk_e53186_evaluationtypedescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_e53186_evaluationtypedescriptor ON tpdm.evaluationelement USING btree (evaluationtypedescriptorid);


--
-- Name: fk_fa906d_person; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fa906d_person ON tpdm.surveyresponseextension USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_fc61b2_candidate; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_candidate ON tpdm.candidateeducatorpreparationprogramassociation USING btree (candidateidentifier);


--
-- Name: fk_fc61b2_educatorpreparationprogram; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_educatorpreparationprogram ON tpdm.candidateeducatorpreparationprogramassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_fc61b2_eppprogrampathwaydescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_eppprogrampathwaydescriptor ON tpdm.candidateeducatorpreparationprogramassociation USING btree (eppprogrampathwaydescriptorid);


--
-- Name: fk_fc61b2_reasonexiteddescriptor; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX fk_fc61b2_reasonexiteddescriptor ON tpdm.candidateeducatorpreparationprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: ix_45a18e_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_45a18e_educationorganizationid ON tpdm.evaluationobjectiverating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_4945b9_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_4945b9_educationorganizationid ON tpdm.evaluationobjective USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_4d3d3e_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_4d3d3e_educationorganizationid ON tpdm.performanceevaluation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_5ae528_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_5ae528_educationorganizationid ON tpdm.evaluationrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_5ae528_schoolid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_5ae528_schoolid ON tpdm.evaluationrating USING btree (schoolid) INCLUDE (id);


--
-- Name: ix_5cd1ce_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_5cd1ce_educationorganizationid ON tpdm.evaluation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_9b6225_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_9b6225_educationorganizationid ON tpdm.rubricdimension USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_abfec9_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_abfec9_educationorganizationid ON tpdm.evaluationelement USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_daf78c_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_daf78c_educationorganizationid ON tpdm.candidateeducatorpreparationprogramassociation USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_dd8fc5_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_dd8fc5_educationorganizationid ON tpdm.evaluationelementrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_ea3e25_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_ea3e25_educationorganizationid ON tpdm.performanceevaluationrating USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ix_edd2a6_educationorganizationid; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ix_edd2a6_educationorganizationid ON tpdm.educatorpreparationprogram USING btree (educationorganizationid) INCLUDE (id);


--
-- Name: ux_15d685_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_15d685_changeversion ON tpdm.performanceevaluation USING btree (changeversion);


--
-- Name: ux_15d685_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_15d685_id ON tpdm.performanceevaluation USING btree (id);


--
-- Name: ux_163e44_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_163e44_changeversion ON tpdm.evaluation USING btree (changeversion);


--
-- Name: ux_163e44_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_163e44_id ON tpdm.evaluation USING btree (id);


--
-- Name: ux_195935_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_195935_changeversion ON tpdm.educatorpreparationprogram USING btree (changeversion);


--
-- Name: ux_195935_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_195935_id ON tpdm.educatorpreparationprogram USING btree (id);


--
-- Name: ux_4479ea_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_4479ea_changeversion ON tpdm.evaluationelementrating USING btree (changeversion);


--
-- Name: ux_4479ea_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_4479ea_id ON tpdm.evaluationelementrating USING btree (id);


--
-- Name: ux_520027_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_520027_changeversion ON tpdm.surveyresponsepersontargetassociation USING btree (changeversion);


--
-- Name: ux_520027_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_520027_id ON tpdm.surveyresponsepersontargetassociation USING btree (id);


--
-- Name: ux_643c81_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_643c81_changeversion ON tpdm.rubricdimension USING btree (changeversion);


--
-- Name: ux_643c81_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_643c81_id ON tpdm.rubricdimension USING btree (id);


--
-- Name: ux_759abe_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_759abe_changeversion ON tpdm.performanceevaluationrating USING btree (changeversion);


--
-- Name: ux_759abe_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_759abe_id ON tpdm.performanceevaluationrating USING btree (id);


--
-- Name: ux_7ae19d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_7ae19d_changeversion ON tpdm.evaluationobjectiverating USING btree (changeversion);


--
-- Name: ux_7ae19d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_7ae19d_id ON tpdm.evaluationobjectiverating USING btree (id);


--
-- Name: ux_a465f2_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_a465f2_changeversion ON tpdm.financialaid USING btree (changeversion);


--
-- Name: ux_a465f2_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_a465f2_id ON tpdm.financialaid USING btree (id);


--
-- Name: ux_b2452d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_b2452d_changeversion ON tpdm.candidate USING btree (changeversion);


--
-- Name: ux_b2452d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_b2452d_id ON tpdm.candidate USING btree (id);


--
-- Name: ux_bfaa20_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_bfaa20_changeversion ON tpdm.evaluationrating USING btree (changeversion);


--
-- Name: ux_bfaa20_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_bfaa20_id ON tpdm.evaluationrating USING btree (id);


--
-- Name: ux_d4565d_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_d4565d_changeversion ON tpdm.evaluationobjective USING btree (changeversion);


--
-- Name: ux_d4565d_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_d4565d_id ON tpdm.evaluationobjective USING btree (id);


--
-- Name: ux_e21e4b_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_e21e4b_changeversion ON tpdm.surveysectionresponsepersontargetassociation USING btree (changeversion);


--
-- Name: ux_e21e4b_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_e21e4b_id ON tpdm.surveysectionresponsepersontargetassociation USING btree (id);


--
-- Name: ux_e53186_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_e53186_changeversion ON tpdm.evaluationelement USING btree (changeversion);


--
-- Name: ux_e53186_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_e53186_id ON tpdm.evaluationelement USING btree (id);


--
-- Name: ux_fc61b2_changeversion; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE INDEX ux_fc61b2_changeversion ON tpdm.candidateeducatorpreparationprogramassociation USING btree (changeversion);


--
-- Name: ux_fc61b2_id; Type: INDEX; Schema: tpdm; Owner: postgres
--

CREATE UNIQUE INDEX ux_fc61b2_id ON tpdm.candidateeducatorpreparationprogramassociation USING btree (id);


--
-- Name: communityorganization deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityorganization FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityorganization_tr_delete();


--
-- Name: communityprovider deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_delete();


--
-- Name: educationorganizationnetwork deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete();


--
-- Name: educationservicecenter deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_delete();


--
-- Name: localeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_delete();


--
-- Name: organizationdepartment deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_delete();


--
-- Name: postsecondaryinstitution deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete();


--
-- Name: school deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_delete();


--
-- Name: stateeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.stateeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_stateeducationagency_tr_delete();


--
-- Name: classperiod handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF classperiodname, schoolid ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classperiod_keychg();


--
-- Name: contact handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF contactuniqueid ON edfi.contact FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contact_keychg();


--
-- Name: courseoffering handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sessionname ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseoffering_keychg();


--
-- Name: grade handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.grade FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.grade_keychg();


--
-- Name: gradebookentry handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF gradebookentryidentifier, namespace ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentry_keychg();


--
-- Name: location handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF classroomidentificationcode, schoolid ON edfi.location FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.location_keychg();


--
-- Name: section handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname ON edfi.section FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.section_keychg();


--
-- Name: sectionattendancetakenevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg();


--
-- Name: session handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF schoolid, schoolyear, sessionname ON edfi.session FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.session_keychg();


--
-- Name: staff handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF staffuniqueid ON edfi.staff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staff_keychg();


--
-- Name: staffsectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffsectionassociation_keychg();


--
-- Name: student handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF studentuniqueid ON edfi.student FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.student_keychg();


--
-- Name: studentgradebookentry handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF gradebookentryidentifier, namespace, studentusi ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentgradebookentry_keychg();


--
-- Name: studentschoolassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF entrydate, schoolid, studentusi ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolassociation_keychg();


--
-- Name: studentschoolattendanceevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg();


--
-- Name: studentsectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionassociation_keychg();


--
-- Name: studentsectionattendanceevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg();


--
-- Name: surveysectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionassociation_keychg();


--
-- Name: communityorganization insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityorganization FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityorganization_tr_insert();


--
-- Name: communityprovider insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_insert();


--
-- Name: educationorganizationnetwork insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert();


--
-- Name: educationservicecenter insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_insert();


--
-- Name: localeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_insert();


--
-- Name: organizationdepartment insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_insert();


--
-- Name: postsecondaryinstitution insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert();


--
-- Name: school insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_insert();


--
-- Name: stateeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.stateeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_stateeducationagency_tr_insert();


--
-- Name: absenceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.absenceeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted();


--
-- Name: academichonorcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academichonorcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted();


--
-- Name: academicsubjectdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicsubjectdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted();


--
-- Name: academicweek trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicweek FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academicweek_deleted();


--
-- Name: accommodationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accommodationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted();


--
-- Name: accountabilityrating trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accountabilityrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accountabilityrating_deleted();


--
-- Name: accounttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accounttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted();


--
-- Name: achievementcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.achievementcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted();


--
-- Name: additionalcredittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.additionalcredittypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted();


--
-- Name: addresstypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.addresstypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted();


--
-- Name: administrationenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrationenvironmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted();


--
-- Name: administrativefundingcontroldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrativefundingcontroldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted();


--
-- Name: ancestryethnicorigindescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.ancestryethnicorigindescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted();


--
-- Name: assessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessment_deleted();


--
-- Name: assessmentcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted();


--
-- Name: assessmentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted();


--
-- Name: assessmentitem trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitem FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitem_deleted();


--
-- Name: assessmentitemcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted();


--
-- Name: assessmentitemresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted();


--
-- Name: assessmentperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted();


--
-- Name: assessmentreportingmethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentreportingmethoddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted();


--
-- Name: assessmentscorerangelearningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted();


--
-- Name: assignmentlatestatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assignmentlatestatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted();


--
-- Name: attemptstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attemptstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted();


--
-- Name: attendanceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attendanceeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted();


--
-- Name: balancesheetdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.balancesheetdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.balancesheetdimension_deleted();


--
-- Name: barriertointernetaccessinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.barriertointernetaccessinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted();


--
-- Name: behaviordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.behaviordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.behaviordescriptor_deleted();


--
-- Name: bellschedule trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.bellschedule FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.bellschedule_deleted();


--
-- Name: calendar trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendar FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendar_deleted();


--
-- Name: calendardate trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendardate FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendardate_deleted();


--
-- Name: calendareventdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendareventdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted();


--
-- Name: calendartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendartypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted();


--
-- Name: careerpathwaydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.careerpathwaydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted();


--
-- Name: charterapprovalagencytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterapprovalagencytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted();


--
-- Name: charterstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted();


--
-- Name: chartofaccount trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.chartofaccount FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.chartofaccount_deleted();


--
-- Name: citizenshipstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.citizenshipstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted();


--
-- Name: classperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classperiod_deleted();


--
-- Name: classroompositiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classroompositiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted();


--
-- Name: cohort trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohort FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohort_deleted();


--
-- Name: cohortscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortscopedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted();


--
-- Name: cohorttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohorttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted();


--
-- Name: cohortyeartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortyeartypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted();


--
-- Name: communityproviderlicense trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.communityproviderlicense_deleted();


--
-- Name: competencyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted();


--
-- Name: competencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.competencyobjective_deleted();


--
-- Name: contact trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contact FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contact_deleted();


--
-- Name: contacttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contacttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted();


--
-- Name: contentclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contentclassdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted();


--
-- Name: continuationofservicesreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.continuationofservicesreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted();


--
-- Name: costratedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.costratedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.costratedescriptor_deleted();


--
-- Name: countrydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.countrydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.countrydescriptor_deleted();


--
-- Name: course trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.course FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.course_deleted();


--
-- Name: courseattemptresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseattemptresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted();


--
-- Name: coursedefinedbydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursedefinedbydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted();


--
-- Name: coursegpaapplicabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursegpaapplicabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted();


--
-- Name: courseidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted();


--
-- Name: courselevelcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courselevelcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted();


--
-- Name: courseoffering trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseoffering_deleted();


--
-- Name: courserepeatcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courserepeatcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted();


--
-- Name: coursetranscript trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursetranscript FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursetranscript_deleted();


--
-- Name: credential trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credential FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credential_deleted();


--
-- Name: credentialfielddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialfielddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted();


--
-- Name: credentialtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted();


--
-- Name: creditcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.creditcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted();


--
-- Name: credittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credittypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credittypedescriptor_deleted();


--
-- Name: cteprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cteprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted();


--
-- Name: curriculumuseddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.curriculumuseddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted();


--
-- Name: deliverymethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.deliverymethoddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted();


--
-- Name: descriptormapping trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.descriptormapping FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.descriptormapping_deleted();


--
-- Name: diagnosisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diagnosisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted();


--
-- Name: diplomaleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomaleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted();


--
-- Name: diplomatypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomatypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted();


--
-- Name: disabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted();


--
-- Name: disabilitydesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydesignationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted();


--
-- Name: disabilitydeterminationsourcetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydeterminationsourcetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted();


--
-- Name: disciplineaction trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineaction FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineaction_deleted();


--
-- Name: disciplineactionlengthdifferencereasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineactionlengthdifferencereasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted();


--
-- Name: disciplinedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplinedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted();


--
-- Name: disciplineincident trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincident FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineincident_deleted();


--
-- Name: disciplineincidentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincidentparticipationcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted();


--
-- Name: educationalenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationalenvironmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted();


--
-- Name: educationcontent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationcontent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationcontent_deleted();


--
-- Name: educationorganization trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganization FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganization_deleted();


--
-- Name: educationorganizationassociationtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationassociationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted();


--
-- Name: educationorganizationcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted();


--
-- Name: educationorganizationidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted();


--
-- Name: educationorganizationinterventionprescriptionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted();


--
-- Name: educationorganizationnetworkassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted();


--
-- Name: educationorganizationpeerassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted();


--
-- Name: educationplandescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationplandescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationplandescriptor_deleted();


--
-- Name: electronicmailtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.electronicmailtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted();


--
-- Name: eligibilitydelayreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.eligibilitydelayreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.eligibilitydelayreasondescriptor_deleted();


--
-- Name: eligibilityevaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.eligibilityevaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.eligibilityevaluationtypedescriptor_deleted();


--
-- Name: employmentstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.employmentstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted();


--
-- Name: enrollmenttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.enrollmenttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.enrollmenttypedescriptor_deleted();


--
-- Name: entrygradelevelreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrygradelevelreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted();


--
-- Name: entrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted();


--
-- Name: evaluationdelayreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.evaluationdelayreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.evaluationdelayreasondescriptor_deleted();


--
-- Name: evaluationrubricdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.evaluationrubricdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.evaluationrubricdimension_deleted();


--
-- Name: eventcircumstancedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.eventcircumstancedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted();


--
-- Name: exitwithdrawtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.exitwithdrawtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted();


--
-- Name: feederschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.feederschoolassociation_deleted();


--
-- Name: financialcollectiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.financialcollectiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted();


--
-- Name: functiondimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.functiondimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.functiondimension_deleted();


--
-- Name: funddimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.funddimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.funddimension_deleted();


--
-- Name: generalstudentprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted();


--
-- Name: grade trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.grade FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.grade_deleted();


--
-- Name: gradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentry_deleted();


--
-- Name: gradebookentrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentrytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted();


--
-- Name: gradeleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradeleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted();


--
-- Name: gradepointaveragetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradepointaveragetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted();


--
-- Name: gradetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted();


--
-- Name: gradingperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradingperiod_deleted();


--
-- Name: gradingperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted();


--
-- Name: graduationplan trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplan FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.graduationplan_deleted();


--
-- Name: graduationplantypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplantypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted();


--
-- Name: gunfreeschoolsactreportingstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gunfreeschoolsactreportingstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted();


--
-- Name: homelessprimarynighttimeresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprimarynighttimeresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted();


--
-- Name: homelessprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted();


--
-- Name: ideapartdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.ideapartdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.ideapartdescriptor_deleted();


--
-- Name: identificationdocumentusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.identificationdocumentusedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted();


--
-- Name: incidentlocationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.incidentlocationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted();


--
-- Name: indicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatordescriptor_deleted();


--
-- Name: indicatorgroupdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorgroupdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted();


--
-- Name: indicatorleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted();


--
-- Name: institutiontelephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.institutiontelephonenumbertypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted();


--
-- Name: interactivitystyledescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interactivitystyledescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted();


--
-- Name: internetaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccessdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted();


--
-- Name: internetaccesstypeinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccesstypeinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted();


--
-- Name: internetperformanceinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetperformanceinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted();


--
-- Name: intervention trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.intervention FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.intervention_deleted();


--
-- Name: interventionclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionclassdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted();


--
-- Name: interventioneffectivenessratingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventioneffectivenessratingdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted();


--
-- Name: interventionprescription trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionprescription FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionprescription_deleted();


--
-- Name: interventionstudy trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionstudy FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionstudy_deleted();


--
-- Name: languagedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languagedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languagedescriptor_deleted();


--
-- Name: languageinstructionprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageinstructionprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted();


--
-- Name: languageusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageusedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languageusedescriptor_deleted();


--
-- Name: learningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandard_deleted();


--
-- Name: learningstandardcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted();


--
-- Name: learningstandardequivalenceassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted();


--
-- Name: learningstandardequivalencestrengthdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalencestrengthdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted();


--
-- Name: learningstandardscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardscopedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted();


--
-- Name: levelofeducationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.levelofeducationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted();


--
-- Name: licensestatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensestatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted();


--
-- Name: licensetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted();


--
-- Name: limitedenglishproficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.limitedenglishproficiencydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted();


--
-- Name: localaccount trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localaccount FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localaccount_deleted();


--
-- Name: localactual trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localactual FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localactual_deleted();


--
-- Name: localbudget trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localbudget FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localbudget_deleted();


--
-- Name: localcontractedstaff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localcontractedstaff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localcontractedstaff_deleted();


--
-- Name: localedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localedescriptor_deleted();


--
-- Name: localeducationagencycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localeducationagencycategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted();


--
-- Name: localencumbrance trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localencumbrance FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localencumbrance_deleted();


--
-- Name: localpayroll trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localpayroll FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localpayroll_deleted();


--
-- Name: location trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.location FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.location_deleted();


--
-- Name: magnetspecialprogramemphasisschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.magnetspecialprogramemphasisschooldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted();


--
-- Name: mediumofinstructiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.mediumofinstructiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted();


--
-- Name: methodcreditearneddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.methodcreditearneddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted();


--
-- Name: migranteducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.migranteducationprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted();


--
-- Name: modelentitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.modelentitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted();


--
-- Name: monitoreddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.monitoreddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted();


--
-- Name: neglectedordelinquentprogramdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted();


--
-- Name: neglectedordelinquentprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted();


--
-- Name: networkpurposedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.networkpurposedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted();


--
-- Name: objectdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.objectdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.objectdimension_deleted();


--
-- Name: objectiveassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.objectiveassessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.objectiveassessment_deleted();


--
-- Name: openstaffposition trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.openstaffposition FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.openstaffposition_deleted();


--
-- Name: operationalstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.operationalstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted();


--
-- Name: operationalunitdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.operationalunitdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.operationalunitdimension_deleted();


--
-- Name: othernametypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.othernametypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted();


--
-- Name: participationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.participationdescriptor_deleted();


--
-- Name: participationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted();


--
-- Name: performancebaseconversiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performancebaseconversiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted();


--
-- Name: performanceleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performanceleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted();


--
-- Name: person trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.person FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.person_deleted();


--
-- Name: personalinformationverificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.personalinformationverificationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted();


--
-- Name: platformtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.platformtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted();


--
-- Name: populationserveddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.populationserveddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted();


--
-- Name: postingresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postingresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted();


--
-- Name: postsecondaryevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryevent_deleted();


--
-- Name: postsecondaryeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted();


--
-- Name: postsecondaryinstitutionleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryinstitutionleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted();


--
-- Name: primarylearningdeviceaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceaccessdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted();


--
-- Name: primarylearningdeviceawayfromschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceawayfromschooldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted();


--
-- Name: primarylearningdeviceproviderdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceproviderdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted();


--
-- Name: proficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.proficiencydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted();


--
-- Name: program trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.program FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.program_deleted();


--
-- Name: programassignmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programassignmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted();


--
-- Name: programcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted();


--
-- Name: programdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programdimension_deleted();


--
-- Name: programevaluation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluation_deleted();


--
-- Name: programevaluationelement trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluationelement FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluationelement_deleted();


--
-- Name: programevaluationobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluationobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluationobjective_deleted();


--
-- Name: programevaluationperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluationperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluationperioddescriptor_deleted();


--
-- Name: programevaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programevaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programevaluationtypedescriptor_deleted();


--
-- Name: programsponsordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programsponsordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted();


--
-- Name: programtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programtypedescriptor_deleted();


--
-- Name: progressdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.progressdescriptor_deleted();


--
-- Name: progressleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted();


--
-- Name: projectdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.projectdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.projectdimension_deleted();


--
-- Name: providercategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providercategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted();


--
-- Name: providerprofitabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerprofitabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted();


--
-- Name: providerstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted();


--
-- Name: publicationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.publicationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted();


--
-- Name: questionformdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.questionformdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.questionformdescriptor_deleted();


--
-- Name: racedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.racedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.racedescriptor_deleted();


--
-- Name: ratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.ratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.ratingleveldescriptor_deleted();


--
-- Name: reasonexiteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonexiteddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted();


--
-- Name: reasonnottesteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonnottesteddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted();


--
-- Name: recognitiontypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.recognitiontypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted();


--
-- Name: relationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.relationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.relationdescriptor_deleted();


--
-- Name: repeatidentifierdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.repeatidentifierdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted();


--
-- Name: reportcard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reportcard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reportcard_deleted();


--
-- Name: reporterdescriptiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reporterdescriptiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted();


--
-- Name: reportingtagdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reportingtagdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted();


--
-- Name: residencystatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.residencystatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted();


--
-- Name: responseindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responseindicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted();


--
-- Name: responsibilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responsibilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted();


--
-- Name: restraintevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restraintevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.restraintevent_deleted();


--
-- Name: restrainteventreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restrainteventreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted();


--
-- Name: resultdatatypetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.resultdatatypetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted();


--
-- Name: retestindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.retestindicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted();


--
-- Name: schoolcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted();


--
-- Name: schoolchoicebasisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolchoicebasisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolchoicebasisdescriptor_deleted();


--
-- Name: schoolchoiceimplementstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolchoiceimplementstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted();


--
-- Name: schoolfoodserviceprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolfoodserviceprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted();


--
-- Name: schooltypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schooltypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted();


--
-- Name: schoolyeartype trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolyeartype FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolyeartype_deleted();


--
-- Name: section trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.section FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.section_deleted();


--
-- Name: sectionattendancetakenevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted();


--
-- Name: sectioncharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectioncharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted();


--
-- Name: sectiontypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectiontypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectiontypedescriptor_deleted();


--
-- Name: separationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.separationdescriptor_deleted();


--
-- Name: separationreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted();


--
-- Name: servicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.servicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.servicedescriptor_deleted();


--
-- Name: session trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.session FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.session_deleted();


--
-- Name: sexdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sexdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sexdescriptor_deleted();


--
-- Name: sourcedimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sourcedimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sourcedimension_deleted();


--
-- Name: sourcesystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sourcesystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted();


--
-- Name: specialeducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted();


--
-- Name: specialeducationsettingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationsettingdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted();


--
-- Name: staff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staff_deleted();


--
-- Name: staffabsenceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffabsenceevent_deleted();


--
-- Name: staffclassificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffclassificationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted();


--
-- Name: staffcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffcohortassociation_deleted();


--
-- Name: staffdisciplineincidentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted();


--
-- Name: staffeducationorganizationassignmentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted();


--
-- Name: staffeducationorganizationcontactassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted();


--
-- Name: staffeducationorganizationemploymentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted();


--
-- Name: staffidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted();


--
-- Name: staffleave trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleave FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffleave_deleted();


--
-- Name: staffleaveeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleaveeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted();


--
-- Name: staffprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffprogramassociation_deleted();


--
-- Name: staffschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffschoolassociation_deleted();


--
-- Name: staffsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffsectionassociation_deleted();


--
-- Name: stateabbreviationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.stateabbreviationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted();


--
-- Name: student trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.student FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.student_deleted();


--
-- Name: studentacademicrecord trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentacademicrecord_deleted();


--
-- Name: studentassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentassessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentassessment_deleted();


--
-- Name: studentassessmenteducationorganizationassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentassessmenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted();


--
-- Name: studentcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted();


--
-- Name: studentcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcohortassociation_deleted();


--
-- Name: studentcompetencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted();


--
-- Name: studentcontactassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcontactassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcontactassociation_deleted();


--
-- Name: studentdisciplineincidentbehaviorassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted();


--
-- Name: studentdisciplineincidentnonoffenderassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted();


--
-- Name: studenteducationorganizationassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted();


--
-- Name: studenteducationorganizationresponsibilityassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted();


--
-- Name: studentgradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentgradebookentry_deleted();


--
-- Name: studentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted();


--
-- Name: studentinterventionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted();


--
-- Name: studentinterventionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted();


--
-- Name: studentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentparticipationcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted();


--
-- Name: studentprogramattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted();


--
-- Name: studentprogramevaluation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentprogramevaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentprogramevaluation_deleted();


--
-- Name: studentschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolassociation_deleted();


--
-- Name: studentschoolattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted();


--
-- Name: studentsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionassociation_deleted();


--
-- Name: studentsectionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted();


--
-- Name: studentspecialeducationprogrameligibilityassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentspecialeducationprogrameligibilityassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentspecialeducationprogrameligibilityassociation_deleted();


--
-- Name: submissionstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.submissionstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted();


--
-- Name: supportermilitaryconnectiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.supportermilitaryconnectiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.supportermilitaryconnectiondescriptor_deleted();


--
-- Name: survey trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.survey FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.survey_deleted();


--
-- Name: surveycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted();


--
-- Name: surveycourseassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveycourseassociation_deleted();


--
-- Name: surveyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted();


--
-- Name: surveyprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted();


--
-- Name: surveyquestion trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestion FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyquestion_deleted();


--
-- Name: surveyquestionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted();


--
-- Name: surveyresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponse_deleted();


--
-- Name: surveyresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted();


--
-- Name: surveyresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted();


--
-- Name: surveysection trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysection FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysection_deleted();


--
-- Name: surveysectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionassociation_deleted();


--
-- Name: surveysectionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponse_deleted();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted();


--
-- Name: surveysectionresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted();


--
-- Name: teachingcredentialbasisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialbasisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted();


--
-- Name: teachingcredentialdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted();


--
-- Name: technicalskillsassessmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.technicalskillsassessmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted();


--
-- Name: telephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.telephonenumbertypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted();


--
-- Name: termdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.termdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.termdescriptor_deleted();


--
-- Name: titleipartaparticipantdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaparticipantdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted();


--
-- Name: titleipartaprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted();


--
-- Name: titleipartaschooldesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaschooldesignationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted();


--
-- Name: tribalaffiliationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.tribalaffiliationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted();


--
-- Name: visadescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.visadescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.visadescriptor_deleted();


--
-- Name: weapondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.weapondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.weapondescriptor_deleted();


--
-- Name: communityprovider updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_update();


--
-- Name: educationservicecenter updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_update();


--
-- Name: localeducationagency updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_update();


--
-- Name: organizationdepartment updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_update();


--
-- Name: school updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_update();


--
-- Name: academicweek updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.academicweek FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: accountabilityrating updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.accountabilityrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessmentitem updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentitem FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessmentscorerangelearningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: balancesheetdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.balancesheetdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: bellschedule updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.bellschedule FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: calendar updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendar FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: calendardate updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendardate FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: chartofaccount updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.chartofaccount FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: classperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: cohort updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.cohort FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: communityproviderlicense updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: competencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.competencyobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: contact updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.contact FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: course updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.course FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: courseoffering updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: coursetranscript updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.coursetranscript FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: credential updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.credential FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: descriptor updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.descriptor FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: descriptormapping updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.descriptormapping FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: disciplineaction updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineaction FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: disciplineincident updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineincident FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationcontent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationcontent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganization updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganization FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationinterventionprescriptionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationnetworkassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationpeerassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationrubricdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.evaluationrubricdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: feederschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: functiondimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.functiondimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: funddimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.funddimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: generalstudentprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: grade updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.grade FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: gradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: gradingperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradingperiod FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: graduationplan updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.graduationplan FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: intervention updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.intervention FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: interventionprescription updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionprescription FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: interventionstudy updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionstudy FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningstandardequivalenceassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localaccount updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localaccount FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localactual updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localactual FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localbudget updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localbudget FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localcontractedstaff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localcontractedstaff FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localencumbrance updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localencumbrance FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localpayroll updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localpayroll FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: location updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.location FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: objectdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.objectdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: objectiveassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.objectiveassessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: openstaffposition updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.openstaffposition FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: operationalunitdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.operationalunitdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: person updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.person FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: postsecondaryevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: program updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.program FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programevaluation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programevaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programevaluationelement updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programevaluationelement FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programevaluationobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programevaluationobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: projectdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.projectdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: reportcard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.reportcard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: restraintevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.restraintevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: schoolyeartype updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.schoolyeartype FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: section updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.section FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: sectionattendancetakenevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: session updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.session FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: sourcedimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.sourcedimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staff FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffabsenceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffdisciplineincidentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationassignmentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationcontactassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationemploymentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffleave updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffleave FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: student updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.student FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentacademicrecord updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentassessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentassessmenteducationorganizationassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentassessmenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcompetencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcontactassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcontactassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentbehaviorassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentnonoffenderassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studenteducationorganizationassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studenteducationorganizationresponsibilityassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentgradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentinterventionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentinterventionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentprogramattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentprogramevaluation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentprogramevaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentschoolattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentsectionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentspecialeducationprogrameligibilityassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentspecialeducationprogrameligibilityassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: survey updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.survey FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveycourseassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyquestion updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestion FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyquestionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysection updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysection FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: accreditationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.accreditationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.accreditationstatusdescriptor_deleted();


--
-- Name: aidtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.aidtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.aidtypedescriptor_deleted();


--
-- Name: candidate trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.candidate FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.candidate_deleted();


--
-- Name: candidateeducatorpreparationprogramassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.candidateeducatorpreparationprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.candidateeducatorpreparationprogramassociation_deleted();


--
-- Name: certificationroutedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.certificationroutedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.certificationroutedescriptor_deleted();


--
-- Name: coteachingstyleobserveddescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.coteachingstyleobserveddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.coteachingstyleobserveddescriptor_deleted();


--
-- Name: credentialstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.credentialstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.credentialstatusdescriptor_deleted();


--
-- Name: educatorpreparationprogram trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.educatorpreparationprogram FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.educatorpreparationprogram_deleted();


--
-- Name: educatorroledescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.educatorroledescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.educatorroledescriptor_deleted();


--
-- Name: englishlanguageexamdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.englishlanguageexamdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.englishlanguageexamdescriptor_deleted();


--
-- Name: eppprogrampathwaydescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.eppprogrampathwaydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.eppprogrampathwaydescriptor_deleted();


--
-- Name: evaluation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluation_deleted();


--
-- Name: evaluationelement trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelement FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationelement_deleted();


--
-- Name: evaluationelementrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelementrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationelementrating_deleted();


--
-- Name: evaluationelementratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationelementratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationelementratingleveldescriptor_deleted();


--
-- Name: evaluationobjective trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationobjective_deleted();


--
-- Name: evaluationobjectiverating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationobjectiverating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationobjectiverating_deleted();


--
-- Name: evaluationperioddescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationperioddescriptor_deleted();


--
-- Name: evaluationrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationrating_deleted();


--
-- Name: evaluationratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationratingleveldescriptor_deleted();


--
-- Name: evaluationratingstatusdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationratingstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationratingstatusdescriptor_deleted();


--
-- Name: evaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.evaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.evaluationtypedescriptor_deleted();


--
-- Name: financialaid trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.financialaid FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.financialaid_deleted();


--
-- Name: genderdescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.genderdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.genderdescriptor_deleted();


--
-- Name: objectiveratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.objectiveratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.objectiveratingleveldescriptor_deleted();


--
-- Name: performanceevaluation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluation_deleted();


--
-- Name: performanceevaluationrating trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluationrating_deleted();


--
-- Name: performanceevaluationratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluationratingleveldescriptor_deleted();


--
-- Name: performanceevaluationtypedescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.performanceevaluationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.performanceevaluationtypedescriptor_deleted();


--
-- Name: rubricdimension trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.rubricdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.rubricdimension_deleted();


--
-- Name: rubricratingleveldescriptor trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.rubricratingleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.rubricratingleveldescriptor_deleted();


--
-- Name: surveyresponsepersontargetassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.surveyresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.surveyresponsepersontargetassociation_deleted();


--
-- Name: surveysectionresponsepersontargetassociation trackdeletes; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON tpdm.surveysectionresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_tpdm.surveysectionresponsepersontargetassociation_deleted();


--
-- Name: candidate updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.candidate FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: candidateeducatorpreparationprogramassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.candidateeducatorpreparationprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educatorpreparationprogram updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.educatorpreparationprogram FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationelement updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationelement FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationelementrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationelementrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationobjective updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationobjectiverating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationobjectiverating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: evaluationrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.evaluationrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: financialaid updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.financialaid FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: performanceevaluation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.performanceevaluation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: performanceevaluationrating updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.performanceevaluationrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: rubricdimension updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.rubricdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponsepersontargetassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.surveyresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponsepersontargetassociation updatechangeversion; Type: TRIGGER; Schema: tpdm; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON tpdm.surveysectionresponsepersontargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localbudget fk_000683_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT fk_000683_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localbudget fk_000683_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT fk_000683_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: courselevelcharacteristicdescriptor fk_000820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT fk_000820_descriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_technicalskillsassessmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_technicalskillsassessmentdescriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.technicalskillsassessmentdescriptor(technicalskillsassessmentdescriptorid);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: specialeducationsettingdescriptor fk_010235_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT fk_010235_descriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyeducationcontent fk_014e05_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionstudyeducationcontent fk_014e05_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: classperiod fk_01fe80_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT fk_01fe80_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentassessmentperiod fk_02ddd8_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT fk_02ddd8_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: studentassessmentperiod fk_02ddd8_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT fk_02ddd8_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: courseoffering fk_0325c5_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: courseoffering fk_0325c5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: courseoffering fk_0325c5_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyleveldescriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.surveyleveldescriptor(surveyleveldescriptorid);


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceuri fk_047c7a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT fk_047c7a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse fk_048797_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT fk_048797_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: studentprogramevaluationexternalevaluator fk_04c7ce_studentprogramevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationexternalevaluator
    ADD CONSTRAINT fk_04c7ce_studentprogramevaluation FOREIGN KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramevaluation(evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: contactlanguageuse fk_050c1b_contactlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguageuse
    ADD CONSTRAINT fk_050c1b_contactlanguage FOREIGN KEY (contactusi, languagedescriptorid) REFERENCES edfi.contactlanguage(contactusi, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: contactlanguageuse fk_050c1b_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguageuse
    ADD CONSTRAINT fk_050c1b_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: generalstudentprogramassociation fk_0516f9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: indicatorleveldescriptor fk_05d3f9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT fk_05d3f9_descriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: calendargradelevel fk_07722c_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendargradelevel fk_07722c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: calendardatecalendarevent fk_0789bb_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendardatecalendarevent fk_0789bb_calendareventdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendareventdescriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.calendareventdescriptor(calendareventdescriptorid);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_participationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_participationstatusdescriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.participationstatusdescriptor(participationstatusdescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor fk_086864_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT fk_086864_descriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateeducationagencyaccountability fk_09668f_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: stateeducationagencyaccountability fk_09668f_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: responsibilitydescriptor fk_0b056e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT fk_0b056e_descriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramdescriptor fk_0b3390_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT fk_0b3390_descriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramservicedescriptor fk_0bfc01_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT fk_0bfc01_descriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sourcedimensionreportingtag fk_0c6eff_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT fk_0c6eff_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: sourcedimensionreportingtag fk_0c6eff_sourcedimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT fk_0c6eff_sourcedimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.sourcedimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: exitwithdrawtypedescriptor fk_0e8b13_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT fk_0e8b13_descriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinternationaladdress fk_0ee746_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: interactivitystyledescriptor fk_0f0ab7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT fk_0f0ab7_descriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationalenvironmentdescriptor fk_0f941f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT fk_0f941f_descriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: intervention fk_0fae05_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: intervention fk_0fae05_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: intervention fk_0fae05_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor FOREIGN KEY (cumulativeearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor1 FOREIGN KEY (cumulativeattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor2; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor2 FOREIGN KEY (sessionearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor3; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor3 FOREIGN KEY (sessionattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentacademicrecord fk_0ff8d6_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentacademicrecord fk_0ff8d6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentacademicrecord fk_0ff8d6_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: continuationofservicesreasondescriptor fk_10230d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT fk_10230d_descriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: postingresultdescriptor fk_105b75_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT fk_105b75_descriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialacademicsubject fk_1141c9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: credentialacademicsubject fk_1141c9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: teachingcredentialbasisdescriptor fk_11e850_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT fk_11e850_descriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: feederschoolassociation fk_11f7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school FOREIGN KEY (feederschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: feederschoolassociation fk_11f7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school1 FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: chartofaccount fk_131e2b_accounttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_accounttypedescriptor FOREIGN KEY (accounttypedescriptorid) REFERENCES edfi.accounttypedescriptor(accounttypedescriptorid);


--
-- Name: chartofaccount fk_131e2b_balancesheetdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_balancesheetdimension FOREIGN KEY (balancesheetcode, fiscalyear) REFERENCES edfi.balancesheetdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: chartofaccount fk_131e2b_functiondimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_functiondimension FOREIGN KEY (functioncode, fiscalyear) REFERENCES edfi.functiondimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_funddimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_funddimension FOREIGN KEY (fundcode, fiscalyear) REFERENCES edfi.funddimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_objectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_objectdimension FOREIGN KEY (objectcode, fiscalyear) REFERENCES edfi.objectdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_operationalunitdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_operationalunitdimension FOREIGN KEY (operationalunitcode, fiscalyear) REFERENCES edfi.operationalunitdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_programdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_programdimension FOREIGN KEY (programcode, fiscalyear) REFERENCES edfi.programdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_projectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_projectdimension FOREIGN KEY (projectcode, fiscalyear) REFERENCES edfi.projectdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_sourcedimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_sourcedimension FOREIGN KEY (sourcecode, fiscalyear) REFERENCES edfi.sourcedimension(code, fiscalyear);


--
-- Name: organizationdepartment fk_13b924_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: organizationdepartment fk_13b924_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization FOREIGN KEY (organizationdepartmentid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: organizationdepartment fk_13b924_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization1 FOREIGN KEY (parenteducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: contentclassdescriptor fk_14a617_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT fk_14a617_descriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: proficiencydescriptor fk_14d0fd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT fk_14d0fd_descriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristic fk_1587d8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sectioncharacteristic fk_1587d8_sectioncharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_sectioncharacteristicdescriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.sectioncharacteristicdescriptor(sectioncharacteristicdescriptorid);


--
-- Name: licensetypedescriptor fk_159a96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT fk_159a96_descriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: location fk_15b619_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT fk_15b619_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: electronicmailtypedescriptor fk_15fde6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT fk_15fde6_descriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardequivalencestrengthdescriptor fk_166f6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT fk_166f6a_descriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: programtypedescriptor fk_16eb9d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT fk_16eb9d_descriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcohortassociation fk_170747_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: staffcohortassociation fk_170747_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: courseofferedgradelevel fk_175995_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseofferedgradelevel fk_175995_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: sectiontypedescriptor fk_17bb6e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectiontypedescriptor
    ADD CONSTRAINT fk_17bb6e_descriptor FOREIGN KEY (sectiontypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard FOREIGN KEY (sourcelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard1 FOREIGN KEY (targetlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandardequivalencestrengthdescriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.learningstandardequivalencestrengthdescriptor(learningstandardequivalencestrengthdescriptorid);


--
-- Name: interventionclassdescriptor fk_183bc5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT fk_183bc5_descriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: attendanceeventcategorydescriptor fk_19349d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT fk_19349d_descriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: monitoreddescriptor fk_19374b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT fk_19374b_descriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohort fk_19c6d6_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: cohort fk_19c6d6_cohortscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohortscopedescriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.cohortscopedescriptor(cohortscopedescriptorid);


--
-- Name: cohort fk_19c6d6_cohorttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohorttypedescriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.cohorttypedescriptor(cohorttypedescriptorid);


--
-- Name: cohort fk_19c6d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplanrequiredassessment fk_1a4369_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessment fk_1a4369_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_monitoreddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_monitoreddescriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.monitoreddescriptor(monitoreddescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_participationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_participationdescriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.participationdescriptor(participationdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_proficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_proficiencydescriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.proficiencydescriptor(proficiencydescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_progressdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_progressdescriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.progressdescriptor(progressdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationrubricdimension fk_1b7ccf_programevaluationelement; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationrubricdimension
    ADD CONSTRAINT fk_1b7ccf_programevaluationelement FOREIGN KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationelement(programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: evaluationrubricdimension fk_1b7ccf_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationrubricdimension
    ADD CONSTRAINT fk_1b7ccf_ratingleveldescriptor FOREIGN KEY (evaluationrubricratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.gunfreeschoolsactreportingstatusdescriptor(gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolchoiceimplementstatusdescriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.schoolchoiceimplementstatusdescriptor(schoolchoiceimplementstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_cteprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_cteprogramservicedescriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.cteprogramservicedescriptor(cteprogramservicedescriptorid);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: surveyquestion fk_1bb88c_questionformdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_questionformdescriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.questionformdescriptor(questionformdescriptorid);


--
-- Name: surveyquestion fk_1bb88c_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: surveyquestion fk_1bb88c_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: surveyquestionresponsechoice fk_1c624b_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT fk_1c624b_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: stafflanguage fk_1c8d3f_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: stafflanguage fk_1c8d3f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: tribalaffiliationdescriptor fk_1cb85d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT fk_1cb85d_descriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: titleipartaparticipantdescriptor fk_1d0172_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT fk_1d0172_descriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohortyeartypedescriptor fk_1d837f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT fk_1d837f_descriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudylearningresourcemetadatauri fk_1dcb14_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT fk_1dcb14_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: addresstypedescriptor fk_1edaa3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT fk_1edaa3_descriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: gradingperioddescriptor fk_1f0f64_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT fk_1f0f64_descriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: course fk_2096ce_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: course fk_2096ce_coursedefinedbydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursedefinedbydescriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.coursedefinedbydescriptor(coursedefinedbydescriptorid);


--
-- Name: course fk_2096ce_coursegpaapplicabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursegpaapplicabilitydescriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.coursegpaapplicabilitydescriptor(coursegpaapplicabilitydescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor FOREIGN KEY (minimumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor1 FOREIGN KEY (maximumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcategorydescriptor fk_20e875_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT fk_20e875_descriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: behaviordescriptor fk_20feca_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT fk_20feca_descriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: survey fk_211bb3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: survey fk_211bb3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: survey fk_211bb3_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: survey fk_211bb3_surveycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_surveycategorydescriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.surveycategorydescriptor(surveycategorydescriptorid);


--
-- Name: surveysectionresponse fk_2189c3_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveysectionresponse fk_2189c3_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: assessmentcontentstandardauthor fk_21acd5_assessmentcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT fk_21acd5_assessmentcontentstandard FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessmentcontentstandard(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: contacttelephone fk_225a51_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttelephone
    ADD CONSTRAINT fk_225a51_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contacttelephone fk_225a51_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttelephone
    ADD CONSTRAINT fk_225a51_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: bellschedulegradelevel fk_226b3d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: assessmentsection fk_22ceba_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentsection fk_22ceba_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: communityprovider fk_247572_communityorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_communityorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.communityorganization(communityorganizationid);


--
-- Name: communityprovider fk_247572_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_educationorganization FOREIGN KEY (communityproviderid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_providercategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providercategorydescriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.providercategorydescriptor(providercategorydescriptorid);


--
-- Name: communityprovider fk_247572_providerprofitabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerprofitabilitydescriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.providerprofitabilitydescriptor(providerprofitabilitydescriptorid);


--
-- Name: communityprovider fk_247572_providerstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerstatusdescriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.providerstatusdescriptor(providerstatusdescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationelement fk_24f4bf_programevaluationelement; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationelement
    ADD CONSTRAINT fk_24f4bf_programevaluationelement FOREIGN KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationelement(programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationelement fk_24f4bf_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationelement
    ADD CONSTRAINT fk_24f4bf_ratingleveldescriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationelement fk_24f4bf_studentprogramevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationelement
    ADD CONSTRAINT fk_24f4bf_studentprogramevaluation FOREIGN KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramevaluation(evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganization FOREIGN KEY (membereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganizationnetwork; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganizationnetwork FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganizationnetwork(educationorganizationnetworkid);


--
-- Name: internetperformanceinresidencedescriptor fk_256049_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT fk_256049_descriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: localeducationagency fk_25c08c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationorganization FOREIGN KEY (localeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_educationservicecenter; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationservicecenter FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationservicecenter(educationservicecenterid);


--
-- Name: localeducationagency fk_25c08c_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagency FOREIGN KEY (parentlocaleducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: localeducationagency fk_25c08c_localeducationagencycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagencycategorydescriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.localeducationagencycategorydescriptor(localeducationagencycategorydescriptorid);


--
-- Name: localeducationagency fk_25c08c_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: studentinterventionassociation fk_25cb9c_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_cohort FOREIGN KEY (cohortidentifier, cohorteducationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentinterventionassociation fk_25cb9c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionassociation fk_25cb9c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_languageinstructionprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_languageinstructionprogramservicedescriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.languageinstructionprogramservicedescriptor(languageinstructionprogramservicedescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessment fk_269e10_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: objectiveassessment fk_269e10_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: objectiveassessment fk_269e10_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_objectiveassessment FOREIGN KEY (assessmentidentifier, parentidentificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: contactpersonalidentificationdocument fk_277c31_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT fk_277c31_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactpersonalidentificationdocument fk_277c31_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT fk_277c31_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: contactpersonalidentificationdocument fk_277c31_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT fk_277c31_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: contactpersonalidentificationdocument fk_277c31_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactpersonalidentificationdocument
    ADD CONSTRAINT fk_277c31_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studenttitleipartaprogramassociation fk_27d914_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociation fk_27d914_titleipartaparticipantdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_titleipartaparticipantdescriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.titleipartaparticipantdescriptor(titleipartaparticipantdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: postsecondaryinstitution fk_2935bf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_educationorganization FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_postsecondaryinstitutionleveldescriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.postsecondaryinstitutionleveldescriptor(postsecondaryinstitutionleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_studentinterventionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_studentinterventionassociation FOREIGN KEY (educationorganizationid, interventionidentificationcode, studentusi) REFERENCES edfi.studentinterventionassociation(educationorganizationid, interventionidentificationcode, studentusi) ON DELETE CASCADE;


--
-- Name: student fk_2a164d_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: student fk_2a164d_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: student fk_2a164d_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: student fk_2a164d_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_sexdescriptor FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: student fk_2a164d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecordacademichonor fk_2b286a_academichonorcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_academichonorcategorydescriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.academichonorcategorydescriptor(academichonorcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: contact fk_2b5c3d_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact
    ADD CONSTRAINT fk_2b5c3d_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: contact fk_2b5c3d_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact
    ADD CONSTRAINT fk_2b5c3d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: contact fk_2b5c3d_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contact
    ADD CONSTRAINT fk_2b5c3d_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: reasonnottesteddescriptor fk_2ba6d0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT fk_2ba6d0_descriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: objectiveassessmentscore fk_2c91e8_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentscore fk_2c91e8_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentscore fk_2c91e8_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: accountabilityrating fk_2d3c0c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: accountabilityrating fk_2d3c0c_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentidentificationdocument fk_2d57be_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: licensestatusdescriptor fk_2db9cf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT fk_2db9cf_descriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_studenteducationorganizationassociationlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_studenteducationorganizationassociationlanguage FOREIGN KEY (educationorganizationid, studentusi, languagedescriptorid) REFERENCES edfi.studenteducationorganizationassociationlanguage(educationorganizationid, studentusi, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: creditcategorydescriptor fk_2e3556_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT fk_2e3556_descriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolcategorydescriptor fk_2e8c40_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT fk_2e8c40_descriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseattemptresultdescriptor fk_306d96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT fk_306d96_descriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionprogram fk_309217_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: sectionprogram fk_309217_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffidentificationdocument fk_31779a_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studentprogramattendanceevent fk_317aeb_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentprogramattendanceevent fk_317aeb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: courseofferingcurriculumused fk_31bbf7_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_31bbf7_curriculumuseddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_curriculumuseddescriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.curriculumuseddescriptor(curriculumuseddescriptorid);


--
-- Name: administrationenvironmentdescriptor fk_328563_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT fk_328563_descriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: localaccount fk_32eddb_chartofaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT fk_32eddb_chartofaccount FOREIGN KEY (chartofaccountidentifier, chartofaccounteducationorganizationid, fiscalyear) REFERENCES edfi.chartofaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localaccount fk_32eddb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT fk_32eddb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: stateeducationagency fk_340d5d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT fk_340d5d_educationorganization FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: coursetranscriptacademicsubject fk_354642_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: coursetranscriptacademicsubject fk_354642_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: contactinternationaladdress fk_358692_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactinternationaladdress
    ADD CONSTRAINT fk_358692_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: contactinternationaladdress fk_358692_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactinternationaladdress
    ADD CONSTRAINT fk_358692_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactinternationaladdress fk_358692_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactinternationaladdress
    ADD CONSTRAINT fk_358692_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentcharacteristicdescriptor fk_359668_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT fk_359668_descriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionuri fk_35afab_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT fk_35afab_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentcohortassociation fk_369ddc_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentcohortassociation fk_369ddc_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: cohortscopedescriptor fk_36f154_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT fk_36f154_descriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: restraintevent fk_3800be_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: restraintevent fk_3800be_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: restraintevent fk_3800be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: learningstandardgradelevel fk_38677c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardgradelevel fk_38677c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: accommodationdescriptor fk_395139_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT fk_395139_descriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjective fk_395c07_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_competencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyobjective FOREIGN KEY (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid) REFERENCES edfi.competencyobjective(educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: studentcompetencyobjective fk_395c07_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentsectionassociation fk_39aa3c_attemptstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_attemptstatusdescriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.attemptstatusdescriptor(attemptstatusdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_repeatidentifierdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_repeatidentifierdescriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.repeatidentifierdescriptor(repeatidentifierdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionassociation fk_39aa3c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: administrativefundingcontroldescriptor fk_3a5d1f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT fk_3a5d1f_descriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: eventcircumstancedescriptor fk_3a704d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT fk_3a704d_descriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessmentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessmentidentificationsystemdescriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.assessmentidentificationsystemdescriptor(assessmentidentificationsystemdescriptorid);


--
-- Name: operationalunitdimensionreportingtag fk_3b06c7_operationalunitdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT fk_3b06c7_operationalunitdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.operationalunitdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: operationalunitdimensionreportingtag fk_3b06c7_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT fk_3b06c7_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: programevaluationelementratinglevel fk_3b2082_programevaluationelement; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelementratinglevel
    ADD CONSTRAINT fk_3b2082_programevaluationelement FOREIGN KEY (programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationelement(programeducationorganizationid, programevaluationelementtitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programevaluationelementratinglevel fk_3b2082_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelementratinglevel
    ADD CONSTRAINT fk_3b2082_ratingleveldescriptor FOREIGN KEY (ratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: stateeducationagencyfederalfunds fk_3c7e00_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT fk_3c7e00_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: interventioneducationcontent fk_3c823d_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventioneducationcontent fk_3c823d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: gradeleveldescriptor fk_3c9538_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT fk_3c9538_descriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: openstaffposition fk_3cc1d4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: openstaffposition fk_3cc1d4_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_postingresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_postingresultdescriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.postingresultdescriptor(postingresultdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: staffschoolassociationgradelevel fk_3db81b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: staffschoolassociationgradelevel fk_3db81b_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitutionleveldescriptor fk_3dd32d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT fk_3dd32d_descriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programdimensionreportingtag fk_3e04ae_programdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT fk_3e04ae_programdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.programdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: programdimensionreportingtag fk_3e04ae_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT fk_3e04ae_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: contactelectronicmail fk_4007e0_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactelectronicmail
    ADD CONSTRAINT fk_4007e0_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactelectronicmail fk_4007e0_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactelectronicmail
    ADD CONSTRAINT fk_4007e0_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: weapondescriptor fk_402831_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT fk_402831_descriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprimarynighttimeresidencedescriptor fk_41a2b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT fk_41a2b1_descriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: contactlanguage fk_42109f_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguage
    ADD CONSTRAINT fk_42109f_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactlanguage fk_42109f_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactlanguage
    ADD CONSTRAINT fk_42109f_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri fk_421bfa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT fk_421bfa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganizationcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganizationcategorydescriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.educationorganizationcategorydescriptor(educationorganizationcategorydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_responsibilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_responsibilitydescriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.responsibilitydescriptor(responsibilitydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: classperiodmeetingtime fk_435263_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT fk_435263_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: questionformdescriptor fk_43a820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT fk_43a820_descriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_educationorganization FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: eligibilityevaluationtypedescriptor fk_445555_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eligibilityevaluationtypedescriptor
    ADD CONSTRAINT fk_445555_descriptor FOREIGN KEY (eligibilityevaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: languageusedescriptor fk_44c593_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT fk_44c593_descriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycourse fk_44e78d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: programlearningstandard fk_44f909_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: programlearningstandard fk_44f909_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educationorganization fk_4525e6_operationalstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT fk_4525e6_operationalstatusdescriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.operationalstatusdescriptor(operationalstatusdescriptorid);


--
-- Name: gradebookentrytypedescriptor fk_45eb00_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT fk_45eb00_descriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentry fk_466cfa_gradebookentrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradebookentrytypedescriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.gradebookentrytypedescriptor(gradebookentrytypedescriptorid);


--
-- Name: gradebookentry fk_466cfa_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: gradebookentry fk_466cfa_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: localpayroll fk_46e5c2_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localpayroll fk_46e5c2_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localpayroll fk_46e5c2_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: contacttypedescriptor fk_47719b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT fk_47719b_descriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemresultdescriptor fk_47b16e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT fk_47b16e_descriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplantypedescriptor fk_4874e0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT fk_4874e0_descriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: entrytypedescriptor fk_497112_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT fk_497112_descriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganizationidentificationsystemdescriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.educationorganizationidentificationsystemdescriptor(educationorganizationidentificationsystemdescriptorid);


--
-- Name: interventionprescriptionuri fk_4acf8e_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT fk_4acf8e_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentprogramevaluation fk_4b1054_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentprogramevaluation fk_4b1054_programevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_programevaluation FOREIGN KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluation(programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: studentprogramevaluation fk_4b1054_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_ratingleveldescriptor FOREIGN KEY (summaryevaluationratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: studentprogramevaluation fk_4b1054_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_staff FOREIGN KEY (staffevaluatorstaffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentprogramevaluation fk_4b1054_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluation
    ADD CONSTRAINT fk_4b1054_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: visadescriptor fk_4b609a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT fk_4b609a_descriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: teachingcredentialdescriptor fk_4bb8c5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT fk_4bb8c5_descriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_programsponsordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_programsponsordescriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.programsponsordescriptor(programsponsordescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_studentdisciplineincidentnonoffenderassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_studentdisciplineincidentnonoffenderassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentnonoffenderassociation(incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: citizenshipstatusdescriptor fk_4c97e8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT fk_4c97e8_descriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandardauthor fk_4c9e40_learningstandardcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT fk_4c9e40_learningstandardcontentstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandardcontentstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: migranteducationprogramservicedescriptor fk_4cc191_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT fk_4cc191_descriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localcontractedstaff fk_4d9b4a_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localcontractedstaff fk_4d9b4a_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localcontractedstaff fk_4d9b4a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: stafftelephone fk_4de15a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftelephone fk_4de15a_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: surveycategorydescriptor fk_4e55bd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT fk_4e55bd_descriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationdescriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.separationdescriptor(separationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationreasondescriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.separationreasondescriptor(separationreasondescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: relationdescriptor fk_4e9305_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT fk_4e9305_descriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialfielddescriptor fk_4eab15_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT fk_4eab15_descriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performancebaseconversiondescriptor fk_4fc529_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT fk_4fc529_descriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_classroompositiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_classroompositiondescriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.classroompositiondescriptor(classroompositiondescriptorid);


--
-- Name: staffsectionassociation fk_515cb5_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: assignmentlatestatusdescriptor fk_518b3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assignmentlatestatusdescriptor
    ADD CONSTRAINT fk_518b3c_descriptor FOREIGN KEY (assignmentlatestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_neglectedordelinquentprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_neglectedordelinquentprogramservicedescriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.neglectedordelinquentprogramservicedescriptor(neglectedordelinquentprogramservicedescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_studentneglectedordelinquentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_studentneglectedordelinquentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentneglectedordelinquentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: platformtypedescriptor fk_56ac99_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT fk_56ac99_descriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprogramservicedescriptor fk_56c464_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT fk_56c464_descriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptprogram fk_57d145_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptprogram
    ADD CONSTRAINT fk_57d145_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptprogram fk_57d145_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptprogram
    ADD CONSTRAINT fk_57d145_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: credentialendorsement fk_57f7d2_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT fk_57f7d2_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: cohortprogram fk_59fcb5_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid) ON DELETE CASCADE;


--
-- Name: cohortprogram fk_59fcb5_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: gradingperiod fk_5a18f9_gradingperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_gradingperioddescriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.gradingperioddescriptor(gradingperioddescriptorid);


--
-- Name: gradingperiod fk_5a18f9_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: gradingperiod fk_5a18f9_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: localeducationagencyfederalfunds fk_5a8c0e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT fk_5a8c0e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: credentialtypedescriptor fk_5a9f1d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT fk_5a9f1d_descriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: employmentstatusdescriptor fk_5ccb7e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT fk_5ccb7e_descriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: supportermilitaryconnectiondescriptor fk_5d0e44_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.supportermilitaryconnectiondescriptor
    ADD CONSTRAINT fk_5d0e44_descriptor FOREIGN KEY (supportermilitaryconnectiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: attemptstatusdescriptor fk_5d730c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT fk_5d730c_descriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordrecognition fk_5e049e_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: competencyobjective fk_5e9932_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: competencyobjective fk_5e9932_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_gradeleveldescriptor FOREIGN KEY (objectivegradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor fk_5ee08d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT fk_5ee08d_descriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_studenteducationorganizationassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_studenteducationorganizationassociationdisability FOREIGN KEY (educationorganizationid, studentusi, disabilitydescriptorid) REFERENCES edfi.studenteducationorganizationassociationdisability(educationorganizationid, studentusi, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: participationstatusdescriptor fk_5f0467_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT fk_5f0467_descriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: person fk_6007db_sourcesystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT fk_6007db_sourcesystemdescriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.sourcesystemdescriptor(sourcesystemdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceevent fk_61b087_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reporterdescriptiondescriptor fk_62c0d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT fk_62c0d2_descriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentinterventionattendanceevent fk_631023_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionattendanceevent fk_631023_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: providerstatusdescriptor fk_6328c9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT fk_6328c9_descriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: communityorganization fk_636fcf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT fk_636fcf_educationorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: surveyquestionmatrix fk_64d76d_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT fk_64d76d_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: schoolgradelevel fk_64d8a6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: schoolgradelevel fk_64d8a6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: populationserveddescriptor fk_66f4dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT fk_66f4dc_descriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplinedescriptor fk_673b0a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT fk_673b0a_descriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_neglectedordelinquentprogramdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_neglectedordelinquentprogramdescriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.neglectedordelinquentprogramdescriptor(neglectedordelinquentprogramdescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor FOREIGN KEY (elaprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor1 FOREIGN KEY (mathematicsprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: staff fk_681927_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: staff fk_681927_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: staff fk_681927_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: staff fk_681927_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: postsecondaryeventcategorydescriptor fk_6829e4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT fk_6829e4_descriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsordescriptor fk_68566b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT fk_68566b_descriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: session fk_6959b4_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: session fk_6959b4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: session fk_6959b4_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: staffrace fk_696d9a_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: staffrace fk_696d9a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: assessmentitempossibleresponse fk_699b02_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT fk_699b02_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentprogramassociationservice fk_69cd6f_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentprogramassociationservice fk_69cd6f_studentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_studentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_courseattemptresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courseattemptresultdescriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.courseattemptresultdescriptor(courseattemptresultdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_courserepeatcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courserepeatcodedescriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.courserepeatcodedescriptor(courserepeatcodedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor FOREIGN KEY (attemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor1 FOREIGN KEY (earnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_educationorganization FOREIGN KEY (externaleducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: coursetranscript fk_6acf2b_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: coursetranscript fk_6acf2b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_staff FOREIGN KEY (responsibleteacherstaffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: coursetranscript fk_6acf2b_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: contactaddressperiod fk_6b884f_contactaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddressperiod
    ADD CONSTRAINT fk_6b884f_contactaddress FOREIGN KEY (contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.contactaddress(contactusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: staffclassificationdescriptor fk_6ca180_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT fk_6ca180_descriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffinternationaladdress fk_6cd27e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: school fk_6cd2e3_charterapprovalagencytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterapprovalagencytypedescriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.charterapprovalagencytypedescriptor(charterapprovalagencytypedescriptorid);


--
-- Name: school fk_6cd2e3_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: school fk_6cd2e3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_educationorganization FOREIGN KEY (schoolid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_internetaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_internetaccessdescriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.internetaccessdescriptor(internetaccessdescriptorid);


--
-- Name: school fk_6cd2e3_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: school fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.magnetspecialprogramemphasisschooldescriptor(magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: school fk_6cd2e3_schooltypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schooltypedescriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.schooltypedescriptor(schooltypedescriptorid);


--
-- Name: school fk_6cd2e3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schoolyeartype FOREIGN KEY (charterapprovalschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: school fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_titleipartaschooldesignationdescriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.titleipartaschooldesignationdescriptor(titleipartaschooldesignationdescriptorid);


--
-- Name: financialcollectiondescriptor fk_6dc716_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.financialcollectiondescriptor
    ADD CONSTRAINT fk_6dc716_descriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellscheduledate fk_6e1291_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT fk_6e1291_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: countrydescriptor fk_6e4222_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT fk_6e4222_descriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateabbreviationdescriptor fk_6ee971_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT fk_6ee971_descriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: funddimensionreportingtag fk_7062bd_funddimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT fk_7062bd_funddimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.funddimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: funddimensionreportingtag fk_7062bd_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT fk_7062bd_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_graduationplan FOREIGN KEY (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningstandardcontentstandard fk_70f675_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: contactaddress fk_720058_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT fk_720058_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: contactaddress fk_720058_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT fk_720058_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactaddress fk_720058_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT fk_720058_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: contactaddress fk_720058_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactaddress
    ADD CONSTRAINT fk_720058_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studentprogramassociation fk_729018_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT fk_729018_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sessionacademicweek fk_72eb60_academicweek; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_academicweek FOREIGN KEY (schoolid, weekidentifier) REFERENCES edfi.academicweek(schoolid, weekidentifier);


--
-- Name: sessionacademicweek fk_72eb60_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_contacttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_contacttypedescriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.contacttypedescriptor(contacttypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: disciplineactiondiscipline fk_73601f_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactiondiscipline fk_73601f_disciplinedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplinedescriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.disciplinedescriptor(disciplinedescriptorid);


--
-- Name: entrygradelevelreasondescriptor fk_737b8e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT fk_737b8e_descriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: descriptormappingmodelentity fk_7433b4_descriptormapping; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT fk_7433b4_descriptormapping FOREIGN KEY (mappednamespace, mappedvalue, namespace, value) REFERENCES edfi.descriptormapping(mappednamespace, mappedvalue, namespace, value) ON DELETE CASCADE;


--
-- Name: descriptormappingmodelentity fk_7433b4_modelentitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT fk_7433b4_modelentitydescriptor FOREIGN KEY (modelentitydescriptorid) REFERENCES edfi.modelentitydescriptor(modelentitydescriptorid);


--
-- Name: staffidentificationcode fk_7483c6_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffidentificationcode fk_7483c6_staffidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staffidentificationsystemdescriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.staffidentificationsystemdescriptor(staffidentificationsystemdescriptorid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization1 FOREIGN KEY (peereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: careerpathwaydescriptor fk_768c51_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT fk_768c51_descriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategorydescriptor fk_7791ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT fk_7791ef_descriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessment fk_7808ee_assessmentcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_assessmentcategorydescriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.assessmentcategorydescriptor(assessmentcategorydescriptorid);


--
-- Name: assessment fk_7808ee_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: programevaluationelement fk_784616_programevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelement
    ADD CONSTRAINT fk_784616_programevaluation FOREIGN KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluation(programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: programevaluationelement fk_784616_programevaluationobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationelement
    ADD CONSTRAINT fk_784616_programevaluationobjective FOREIGN KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationobjective(programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: schoolcategory fk_789691_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: schoolcategory fk_789691_schoolcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_schoolcategorydescriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.schoolcategorydescriptor(schoolcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: studentschoolattendanceevent fk_78fd7f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reasonexiteddescriptor fk_790724_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT fk_790724_descriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_institutiontelephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_institutiontelephonenumbertypedescriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.institutiontelephonenumbertypedescriptor(institutiontelephonenumbertypedescriptorid);


--
-- Name: mediumofinstructiondescriptor fk_7a8947_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT fk_7a8947_descriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear);


--
-- Name: sectionattendancetakenevent fk_7bbbe7_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: progressleveldescriptor fk_7bf630_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT fk_7bf630_descriptor FOREIGN KEY (progressleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providerprofitabilitydescriptor fk_7c3adc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT fk_7c3adc_descriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterstatusdescriptor fk_7c48cd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT fk_7c48cd_descriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperioddescriptor fk_7e11fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT fk_7e11fe_descriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentitem fk_7f600a_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentitem fk_7f600a_assessmentitemresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitemresultdescriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.assessmentitemresultdescriptor(assessmentitemresultdescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_responseindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_responseindicatordescriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.responseindicatordescriptor(responseindicatordescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_staffdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_staffdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, staffusi) REFERENCES edfi.staffdisciplineincidentassociation(incidentidentifier, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: internetaccesstypeinresidencedescriptor fk_8007d5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT fk_8007d5_descriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_studentsectionattendanceevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_studentsectionattendanceevent FOREIGN KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionattendanceevent(attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: learningstandardcategorydescriptor fk_814fc1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT fk_814fc1_descriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordclassranking fk_8299aa_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT fk_8299aa_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolfoodserviceprogramassociation fk_82e1e5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT fk_82e1e5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: grade fk_839e20_gradetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradetypedescriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.gradetypedescriptor(gradetypedescriptorid);


--
-- Name: grade fk_839e20_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, schoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: grade fk_839e20_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: grade fk_839e20_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: chartofaccountreportingtag fk_8422f4_chartofaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT fk_8422f4_chartofaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.chartofaccount(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: chartofaccountreportingtag fk_8422f4_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT fk_8422f4_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: diagnosisdescriptor fk_843d48_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT fk_843d48_descriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicatorperiod fk_8486ae_educationorganizationindicator; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT fk_8486ae_educationorganizationindicator FOREIGN KEY (educationorganizationid, indicatordescriptorid) REFERENCES edfi.educationorganizationindicator(educationorganizationid, indicatordescriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordreportcard fk_84e5e0_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi);


--
-- Name: studentacademicrecordreportcard fk_84e5e0_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reportcardgradepointaverage fk_8574ad_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: reportcardgradepointaverage fk_8574ad_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: studentschoolassociation fk_857b52_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studentschoolassociation fk_857b52_enrollmenttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_enrollmenttypedescriptor FOREIGN KEY (enrollmenttypedescriptorid) REFERENCES edfi.enrollmenttypedescriptor(enrollmenttypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_entrygradelevelreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrygradelevelreasondescriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.entrygradelevelreasondescriptor(entrygradelevelreasondescriptorid);


--
-- Name: studentschoolassociation fk_857b52_entrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrytypedescriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.entrytypedescriptor(entrytypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_exitwithdrawtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_exitwithdrawtypedescriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.exitwithdrawtypedescriptor(exitwithdrawtypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_gradeleveldescriptor FOREIGN KEY (entrygradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentschoolassociation fk_857b52_gradeleveldescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_gradeleveldescriptor1 FOREIGN KEY (nextyeargradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentschoolassociation fk_857b52_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociation fk_857b52_residencystatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_residencystatusdescriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.residencystatusdescriptor(residencystatusdescriptorid);


--
-- Name: studentschoolassociation fk_857b52_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolassociation fk_857b52_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_school1 FOREIGN KEY (nextyearschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolassociation fk_857b52_schoolchoicebasisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolchoicebasisdescriptor FOREIGN KEY (schoolchoicebasisdescriptorid) REFERENCES edfi.schoolchoicebasisdescriptor(schoolchoicebasisdescriptorid);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype1 FOREIGN KEY (classofschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_schoolfoodserviceprogramservicedescriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.schoolfoodserviceprogramservicedescriptor(schoolfoodserviceprogramservicedescriptorid);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_studentschoolfoodserviceprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_studentschoolfoodserviceprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentschoolfoodserviceprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: deliverymethoddescriptor fk_85b4c1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT fk_85b4c1_descriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociation fk_85e741_continuationofservicesreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_continuationofservicesreasondescriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.continuationofservicesreasondescriptor(continuationofservicesreasondescriptorid);


--
-- Name: studentmigranteducationprogramassociation fk_85e741_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: languagedescriptor fk_8625fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT fk_8625fa_descriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_graduationplanrequiredassessment FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) REFERENCES edfi.graduationplanrequiredassessment(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: modelentitydescriptor fk_88479e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.modelentitydescriptor
    ADD CONSTRAINT fk_88479e_descriptor FOREIGN KEY (modelentitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: calendardate fk_8a9a67_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT fk_8a9a67_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_titleipartaprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_titleipartaprogramservicedescriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.titleipartaprogramservicedescriptor(titleipartaprogramservicedescriptorid);


--
-- Name: disabilitydesignationdescriptor fk_8b9171_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT fk_8b9171_descriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandard fk_8ceb4c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandard FOREIGN KEY (parentlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardcategorydescriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.learningstandardcategorydescriptor(learningstandardcategorydescriptorid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardscopedescriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.learningstandardscopedescriptor(learningstandardscopedescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: functiondimensionreportingtag fk_8d455d_functiondimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT fk_8d455d_functiondimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.functiondimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: functiondimensionreportingtag fk_8d455d_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT fk_8d455d_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: surveyresponse fk_8d6383_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi);


--
-- Name: surveyresponse fk_8d6383_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponse fk_8d6383_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyresponse fk_8d6383_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: localeducationagencycategorydescriptor fk_8db9a2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT fk_8db9a2_descriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociation fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_barriertointernetaccessinresidencedescriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.barriertointernetaccessinresidencedescriptor(barriertointernetaccessinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetaccesstypeinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetaccesstypeinresidencedescriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.internetaccesstypeinresidencedescriptor(internetaccesstypeinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetperformanceinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetperformanceinresidencedescriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.internetperformanceinresidencedescriptor(internetperformanceinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceaccessdescriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.primarylearningdeviceaccessdescriptor(primarylearningdeviceaccessdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceawayfromschooldescriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.primarylearningdeviceawayfromschooldescriptor(primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceproviderdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceproviderdescriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.primarylearningdeviceproviderdescriptor(primarylearningdeviceproviderdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studenteducationorganizationassociation fk_8e1257_supportermilitaryconnectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_supportermilitaryconnectiondescriptor FOREIGN KEY (supportermilitaryconnectiondescriptorid) REFERENCES edfi.supportermilitaryconnectiondescriptor(supportermilitaryconnectiondescriptorid);


--
-- Name: ideapartdescriptor fk_8e5a99_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ideapartdescriptor
    ADD CONSTRAINT fk_8e5a99_descriptor FOREIGN KEY (ideapartdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: submissionstatusdescriptor fk_8e9244_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.submissionstatusdescriptor
    ADD CONSTRAINT fk_8e9244_descriptor FOREIGN KEY (submissionstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: accounttypedescriptor fk_8f249f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accounttypedescriptor
    ADD CONSTRAINT fk_8f249f_descriptor FOREIGN KEY (accounttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolchoiceimplementstatusdescriptor fk_8f4ff8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT fk_8f4ff8_descriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programassignmentdescriptor fk_8f5a42_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT fk_8f5a42_descriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyuri fk_9046e7_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT fk_9046e7_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: program fk_90920d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: program fk_90920d_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: contactothername fk_91b095_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactothername
    ADD CONSTRAINT fk_91b095_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi) ON DELETE CASCADE;


--
-- Name: contactothername fk_91b095_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contactothername
    ADD CONSTRAINT fk_91b095_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: learningstandardidentificationcode fk_92327a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT fk_92327a_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: disciplineincidentparticipationcodedescriptor fk_923786_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT fk_923786_descriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociation fk_92de5d_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT fk_92de5d_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: technicalskillsassessmentdescriptor fk_92e2f1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT fk_92e2f1_descriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: gradelearningstandardgrade fk_92f7f8_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor fk_935362_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT fk_935362_descriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradepointaveragetypedescriptor fk_95d02c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT fk_95d02c_descriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffleaveeventcategorydescriptor fk_963eb5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT fk_963eb5_descriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationaddressperiod fk_9739a2_studenteducationorganizationassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT fk_9739a2_studenteducationorganizationassociationaddress FOREIGN KEY (educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.studenteducationorganizationassociationaddress(educationorganizationid, studentusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: resultdatatypetypedescriptor fk_9809bc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT fk_9809bc_descriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent1 FOREIGN KEY (derivativesourcecontentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: studentsectionassociationprogram fk_990204_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociationprogram
    ADD CONSTRAINT fk_990204_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentsectionassociationprogram fk_990204_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociationprogram
    ADD CONSTRAINT fk_990204_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_assessmentscorerangelearningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_assessmentscorerangelearningstandard FOREIGN KEY (assessmentidentifier, namespace, scorerangeid) REFERENCES edfi.assessmentscorerangelearningstandard(assessmentidentifier, namespace, scorerangeid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: educationcontent fk_9965a5_contentclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_contentclassdescriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.contentclassdescriptor(contentclassdescriptorid);


--
-- Name: educationcontent fk_9965a5_costratedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_costratedescriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.costratedescriptor(costratedescriptorid);


--
-- Name: educationcontent fk_9965a5_interactivitystyledescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_interactivitystyledescriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.interactivitystyledescriptor(interactivitystyledescriptorid);


--
-- Name: educationcontent fk_9965a5_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristicdescriptor fk_9aae24_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT fk_9aae24_descriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterapprovalagencytypedescriptor fk_9af5be_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT fk_9af5be_descriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: academichonorcategorydescriptor fk_9b946b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT fk_9b946b_descriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellschedule fk_9bbaf5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT fk_9bbaf5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: publicationstatusdescriptor fk_9e73cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT fk_9e73cb_descriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveycourseassociation fk_9f1246_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: surveycourseassociation fk_9f1246_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: programevaluationperioddescriptor fk_9f3c51_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationperioddescriptor
    ADD CONSTRAINT fk_9f3c51_descriptor FOREIGN KEY (programevaluationperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disabilitydeterminationsourcetypedescriptor fk_a07cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT fk_a07cb4_descriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf fk_a18fcf_studenteducationorganizationassociationstudentcharact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT fk_a18fcf_studenteducationorganizationassociationstudentcharact FOREIGN KEY (educationorganizationid, studentusi, studentcharacteristicdescriptorid) REFERENCES edfi.studenteducationorganizationassociationstudentcharacteristic(educationorganizationid, studentusi, studentcharacteristicdescriptorid) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceproviderdescriptor fk_a1f277_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT fk_a1f277_descriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: ancestryethnicorigindescriptor fk_a21217_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT fk_a21217_descriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentidentificationsystemdescriptor fk_a28cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a28cb4_descriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_studentspecialeducationprogramassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_studentspecialeducationprogramassociationdisability FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid) REFERENCES edfi.studentspecialeducationprogramassociationdisability(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomaleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomaleveldescriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.diplomaleveldescriptor(diplomaleveldescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomatypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomatypedescriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.diplomatypedescriptor(diplomatypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentidentificationsystemdescriptor fk_a47976_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a47976_descriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffancestryethnicorigin fk_a4a6ae_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: staffancestryethnicorigin fk_a4a6ae_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_homelessprimarynighttimeresidencedescriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.homelessprimarynighttimeresidencedescriptor(homelessprimarynighttimeresidencedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_specialeducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_specialeducationprogramservicedescriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.specialeducationprogramservicedescriptor(specialeducationprogramservicedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: programevaluationobjective fk_a53c6c_programevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjective
    ADD CONSTRAINT fk_a53c6c_programevaluation FOREIGN KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluation(programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: disciplineincidentweapon fk_a545e5_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_weapondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_weapondescriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.weapondescriptor(weapondescriptorid);


--
-- Name: performanceleveldescriptor fk_a54ec7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT fk_a54ec7_descriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemcategorydescriptor fk_a5f1ee_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT fk_a5f1ee_descriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod fk_a61b72_studenteducationorganizationassociationstudentindicat; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT fk_a61b72_studenteducationorganizationassociationstudentindicat FOREIGN KEY (educationorganizationid, studentusi, indicatorname) REFERENCES edfi.studenteducationorganizationassociationstudentindicator(educationorganizationid, studentusi, indicatorname) ON DELETE CASCADE;


--
-- Name: titleipartaprogramservicedescriptor fk_a62aa8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT fk_a62aa8_descriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cteprogramservicedescriptor fk_a631b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT fk_a631b1_descriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionmeetingtime fk_a64540_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT fk_a64540_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentpersonalidentificationdocument fk_a741a8_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: coursedefinedbydescriptor fk_a75b16_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT fk_a75b16_descriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: racedescriptor fk_a902cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT fk_a902cb_descriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: academicweek fk_a97956_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT fk_a97956_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: interventionprescriptionpopulationserved fk_a984df_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionpopulationserved fk_a984df_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentparticipationcodedescriptor fk_aa25ae_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT fk_aa25ae_descriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: separationreasondescriptor fk_ac0f04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT fk_ac0f04_descriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providercategorydescriptor fk_add5c4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT fk_add5c4_descriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentothername fk_ae53d1_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: studentothername fk_ae53d1_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: calendartypedescriptor fk_aed500_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT fk_aed500_descriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohorttypedescriptor fk_af0263_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT fk_af0263_descriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: retestindicatordescriptor fk_af156c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT fk_af156c_descriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardscopedescriptor fk_af50dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT fk_af50dc_descriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociation fk_af86db_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: staffdisciplineincidentassociation fk_af86db_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_educationorganizationassociationtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_educationorganizationassociationtypedescriptor FOREIGN KEY (educationorganizationassociationtypedescriptorid) REFERENCES edfi.educationorganizationassociationtypedescriptor(educationorganizationassociationtypedescriptorid);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod fk_afd39a_staffeducationorganizationcontactassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT fk_afd39a_staffeducationorganizationcontactassociationaddress FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociationaddress(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: servicedescriptor fk_aff2dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT fk_aff2dc_descriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffothername fk_b0cb9e_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: staffothername fk_b0cb9e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: costratedescriptor fk_b1268b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT fk_b1268b_descriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffabsenceevent fk_b13bbd_absenceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_absenceeventcategorydescriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.absenceeventcategorydescriptor(absenceeventcategorydescriptorid);


--
-- Name: staffabsenceevent fk_b13bbd_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: reportingtagdescriptor fk_b173f4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportingtagdescriptor
    ADD CONSTRAINT fk_b173f4_descriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credential fk_b1c42b_credentialfielddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialfielddescriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.credentialfielddescriptor(credentialfielddescriptorid);


--
-- Name: credential fk_b1c42b_credentialtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialtypedescriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.credentialtypedescriptor(credentialtypedescriptorid);


--
-- Name: credential fk_b1c42b_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_stateabbreviationdescriptor FOREIGN KEY (stateofissuestateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialbasisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialbasisdescriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.teachingcredentialbasisdescriptor(teachingcredentialbasisdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialdescriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.teachingcredentialdescriptor(teachingcredentialdescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: interventiondiagnosis fk_b2e25d_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventiondiagnosis fk_b2e25d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_homelessprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_homelessprogramservicedescriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.homelessprogramservicedescriptor(homelessprogramservicedescriptorid);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_studenthomelessprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_studenthomelessprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenthomelessprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: telephonenumbertypedescriptor fk_b46168_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT fk_b46168_descriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_additionalcredittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_additionalcredittypedescriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.additionalcredittypedescriptor(additionalcredittypedescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: stafflanguageuse fk_b527e7_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: stafflanguageuse fk_b527e7_stafflanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_stafflanguage FOREIGN KEY (staffusi, languagedescriptorid) REFERENCES edfi.stafflanguage(staffusi, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: projectdimensionreportingtag fk_b5314a_projectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT fk_b5314a_projectdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.projectdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: projectdimensionreportingtag fk_b5314a_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT fk_b5314a_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: recognitiontypedescriptor fk_b549ed_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT fk_b549ed_descriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localactual fk_b6310e_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT fk_b6310e_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localactual fk_b6310e_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT fk_b6310e_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: staffaddressperiod fk_b7f969_staffaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT fk_b7f969_staffaddress FOREIGN KEY (staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.staffaddress(staffusi, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: competencyleveldescriptor fk_b82261_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT fk_b82261_descriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studentcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studentcharacteristicdescriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.studentcharacteristicdescriptor(studentcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryeventcategorydescriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.postsecondaryeventcategorydescriptor(postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: postsecondaryevent fk_b8b6d7_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffeducationorganizationemploymentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffeducationorganizationemploymentassociation FOREIGN KEY (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi) REFERENCES edfi.staffeducationorganizationemploymentassociation(educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: methodcreditearneddescriptor fk_ba36b2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT fk_ba36b2_descriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristicdescriptor fk_ba9204_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT fk_ba9204_descriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationplandescriptor fk_bb10e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT fk_bb10e3_descriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courserepeatcodedescriptor fk_bc4d3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT fk_bc4d3c_descriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_studentspecialeducationprogramassociationspecialeduca; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_studentspecialeducationprogramassociationspecialeduca FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid) REFERENCES edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, specialeducationprogramservicedescriptorid) ON DELETE CASCADE;


--
-- Name: balancesheetdimensionreportingtag fk_bcbd82_balancesheetdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT fk_bcbd82_balancesheetdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.balancesheetdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: balancesheetdimensionreportingtag fk_bcbd82_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT fk_bcbd82_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: surveyleveldescriptor fk_bce725_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT fk_bce725_descriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcontentstandard fk_bd89c0_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: eligibilitydelayreasondescriptor fk_be0937_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eligibilitydelayreasondescriptor
    ADD CONSTRAINT fk_be0937_descriptor FOREIGN KEY (eligibilitydelayreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplan fk_be1ea4_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_credittypedescriptor FOREIGN KEY (totalrequiredcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplan fk_be1ea4_graduationplantypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_graduationplantypedescriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.graduationplantypedescriptor(graduationplantypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_schoolyeartype FOREIGN KEY (graduationschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: responseindicatordescriptor fk_be38ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT fk_be38ef_descriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localedescriptor fk_be5f41_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT fk_be5f41_descriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: identificationdocumentusedescriptor fk_c023c0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT fk_c023c0_descriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventioneffectivenessratingdescriptor fk_c0c58a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT fk_c0c58a_descriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffaddress fk_c0e4a3_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffaddress fk_c0e4a3_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studentidentificationsystemdescriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.studentidentificationsystemdescriptor(studentidentificationsystemdescriptorid);


--
-- Name: surveysectionassociation fk_c16804_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: surveysectionassociation fk_c16804_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi);


--
-- Name: specialeducationprogramservicedescriptor fk_c2348e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT fk_c2348e_descriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: classroompositiondescriptor fk_c2dd12_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT fk_c2dd12_descriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_assignmentlatestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_assignmentlatestatusdescriptor FOREIGN KEY (assignmentlatestatusdescriptorid) REFERENCES edfi.assignmentlatestatusdescriptor(assignmentlatestatusdescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_gradebookentry FOREIGN KEY (gradebookentryidentifier, namespace) REFERENCES edfi.gradebookentry(gradebookentryidentifier, namespace) ON UPDATE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentgradebookentry fk_c2efaa_submissionstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_submissionstatusdescriptor FOREIGN KEY (submissionstatusdescriptorid) REFERENCES edfi.submissionstatusdescriptor(submissionstatusdescriptorid);


--
-- Name: localaccountreportingtag fk_c38935_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT fk_c38935_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: localaccountreportingtag fk_c38935_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT fk_c38935_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: interventionstudypopulationserved fk_c45364_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudypopulationserved fk_c45364_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: sessiongradingperiod fk_c4b3e0_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: sessiongradingperiod fk_c4b3e0_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: coursegpaapplicabilitydescriptor fk_c55ecc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT fk_c55ecc_descriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffrecognition fk_c60190_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: staffrecognition fk_c60190_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: staffrecognition fk_c60190_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: residencystatusdescriptor fk_c62170_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT fk_c62170_descriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: achievementcategorydescriptor fk_c71291_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT fk_c71291_descriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_gradebookentry FOREIGN KEY (gradebookentryidentifier, namespace) REFERENCES edfi.gradebookentry(gradebookentryidentifier, namespace) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: interventionlearningresourcemetadatauri fk_c7db20_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT fk_c7db20_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: gradetypedescriptor fk_c8a182_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT fk_c8a182_descriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: limitedenglishproficiencydescriptor fk_c8bcfe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT fk_c8bcfe_descriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: internetaccessdescriptor fk_ca0f71_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT fk_ca0f71_descriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicator fk_ca697a_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT fk_ca697a_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentbehavior fk_cabdcb_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: disciplineincidentbehavior fk_cabdcb_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: staffidentificationsystemdescriptor fk_cb401c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT fk_cb401c_descriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor fk_cbfd5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT fk_cbfd5d_descriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceaccessdescriptor fk_cbfe5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT fk_cbfe5d_descriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: barriertointernetaccessinresidencedescriptor fk_cce75a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT fk_cce75a_descriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolchoicebasisdescriptor fk_ccfb43_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoicebasisdescriptor
    ADD CONSTRAINT fk_ccfb43_descriptor FOREIGN KEY (schoolchoicebasisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptsection fk_cd2ae9_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptsection
    ADD CONSTRAINT fk_cd2ae9_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptsection fk_cd2ae9_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptsection
    ADD CONSTRAINT fk_cd2ae9_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: separationdescriptor fk_cd3406_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT fk_cd3406_descriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociation fk_ce2080_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: staffschoolassociation fk_ce2080_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: staffschoolassociation fk_ce2080_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: operationalstatusdescriptor fk_ce3682_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT fk_ce3682_descriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: curriculumuseddescriptor fk_cec9f6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT fk_cec9f6_descriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: networkpurposedescriptor fk_cf38e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT fk_cf38e3_descriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseoffering fk_courseoffering_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_courseoffering_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_courseofferingcourselevelcharacteristic_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_courseofferingcourselevelcharacteristic_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_courseofferingcurriculumused_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_courseofferingcurriculumused_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_courseofferingofferedgradelevel_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_courseofferingofferedgradelevel_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveyquestionresponsevalue fk_d047f5_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT fk_d047f5_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: progressdescriptor fk_d0b3fc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT fk_d0b3fc_descriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_studentcohortassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_studentcohortassociation FOREIGN KEY (begindate, cohortidentifier, educationorganizationid, studentusi) REFERENCES edfi.studentcohortassociation(begindate, cohortidentifier, educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: incidentlocationdescriptor fk_d24f76_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT fk_d24f76_descriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: institutiontelephonenumbertypedescriptor fk_d35038_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT fk_d35038_descriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: enrollmenttypedescriptor fk_d3c777_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.enrollmenttypedescriptor
    ADD CONSTRAINT fk_d3c777_descriptor FOREIGN KEY (enrollmenttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventprogram fk_d3d793_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: restrainteventprogram fk_d3d793_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationaddressperiod fk_d44be7_educationorganizationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT fk_d44be7_educationorganizationaddress FOREIGN KEY (educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.educationorganizationaddress(educationorganizationid, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: diplomaleveldescriptor fk_d5a798_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT fk_d5a798_descriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: calendar fk_d5d0a3_calendartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_calendartypedescriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.calendartypedescriptor(calendartypedescriptorid);


--
-- Name: calendar fk_d5d0a3_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: calendar fk_d5d0a3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: restrainteventreasondescriptor fk_d6141f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT fk_d6141f_descriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor fk_d738d4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT fk_d738d4_descriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: repeatidentifierdescriptor fk_d881e7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT fk_d881e7_descriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: interventionstudy fk_d92986_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionstudy fk_d92986_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionstudy fk_d92986_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: interventionstudy fk_d92986_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: staffelectronicmail fk_d93663_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: staffelectronicmail fk_d93663_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentassessmentitem fk_d98560_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_assessmentitem FOREIGN KEY (assessmentidentifier, assessmentitemidentificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem fk_d98560_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentprogramevaluationstudentevaluationobjective fk_d9a90e_programevaluationobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationobjective
    ADD CONSTRAINT fk_d9a90e_programevaluationobjective FOREIGN KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationobjective(programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationobjective fk_d9a90e_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationobjective
    ADD CONSTRAINT fk_d9a90e_ratingleveldescriptor FOREIGN KEY (evaluationobjectiveratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: studentprogramevaluationstudentevaluationobjective fk_d9a90e_studentprogramevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramevaluationstudentevaluationobjective
    ADD CONSTRAINT fk_d9a90e_studentprogramevaluation FOREIGN KEY (evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramevaluation(evaluationdate, programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_migranteducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_migranteducationprogramservicedescriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.migranteducationprogramservicedescriptor(migranteducationprogramservicedescriptorid);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_studentmigranteducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_studentmigranteducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentmigranteducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationassociationtypedescriptor fk_d9f485_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationassociationtypedescriptor
    ADD CONSTRAINT fk_d9f485_descriptor FOREIGN KEY (educationorganizationassociationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolfoodserviceprogramservicedescriptor fk_da19fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT fk_da19fa_descriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_graduationplancreditsbycourse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_graduationplancreditsbycourse FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname) REFERENCES edfi.graduationplancreditsbycourse(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, coursesetname) ON DELETE CASCADE;


--
-- Name: evaluationdelayreasondescriptor fk_db2c46_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.evaluationdelayreasondescriptor
    ADD CONSTRAINT fk_db2c46_descriptor FOREIGN KEY (evaluationdelayreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_graduationplanrequiredassessment FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) REFERENCES edfi.graduationplanrequiredassessment(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor fk_dbee26_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT fk_dbee26_descriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitem fk_dc3dcf_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentitem fk_dc3dcf_assessmentitemcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessmentitemcategorydescriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.assessmentitemcategorydescriptor(assessmentitemcategorydescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicator fk_dde098_indicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatordescriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.indicatordescriptor(indicatordescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorgroupdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorgroupdescriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.indicatorgroupdescriptor(indicatorgroupdescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorleveldescriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.indicatorleveldescriptor(indicatorleveldescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentassessmentaccommodation fk_de959d_accommodationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_accommodationdescriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.accommodationdescriptor(accommodationdescriptorid);


--
-- Name: studentassessmentaccommodation fk_de959d_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffleave fk_debd4f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffleave fk_debd4f_staffleaveeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staffleaveeventcategorydescriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.staffleaveeventcategorydescriptor(staffleaveeventcategorydescriptorid);


--
-- Name: assessmentscore fk_df7331_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentscore fk_df7331_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore fk_df7331_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: section fk_dfca5d_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_credittypedescriptor FOREIGN KEY (availablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: section fk_dfca5d_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: section fk_dfca5d_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_languagedescriptor FOREIGN KEY (instructionlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: section fk_dfca5d_location; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_location FOREIGN KEY (locationclassroomidentificationcode, locationschoolid) REFERENCES edfi.location(classroomidentificationcode, schoolid) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: section fk_dfca5d_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: section fk_dfca5d_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_school FOREIGN KEY (locationschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: section fk_dfca5d_sectiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_sectiontypedescriptor FOREIGN KEY (sectiontypedescriptorid) REFERENCES edfi.sectiontypedescriptor(sectiontypedescriptorid);


--
-- Name: additionalcredittypedescriptor fk_e069dd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT fk_e069dd_descriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: indicatorgroupdescriptor fk_e0f6fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT fk_e0f6fe_descriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionlearningresourcemetadatauri fk_e12298_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT fk_e12298_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: disciplineactionlengthdifferencereasondescriptor fk_e1a229_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT fk_e1a229_descriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restrainteventreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restrainteventreasondescriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.restrainteventreasondescriptor(restrainteventreasondescriptorid);


--
-- Name: staffvisa fk_e27213_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffvisa fk_e27213_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: studentcontactassociation fk_e2733e_contact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcontactassociation
    ADD CONSTRAINT fk_e2733e_contact FOREIGN KEY (contactusi) REFERENCES edfi.contact(contactusi);


--
-- Name: studentcontactassociation fk_e2733e_relationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcontactassociation
    ADD CONSTRAINT fk_e2733e_relationdescriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.relationdescriptor(relationdescriptorid);


--
-- Name: studentcontactassociation fk_e2733e_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcontactassociation
    ADD CONSTRAINT fk_e2733e_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: credittypedescriptor fk_e31da0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT fk_e31da0_descriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: personalinformationverificationdescriptor fk_e35818_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT fk_e35818_descriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: levelofeducationdescriptor fk_e37e5f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT fk_e37e5f_descriptor FOREIGN KEY (levelofeducationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: languageinstructionprogramservicedescriptor fk_e3a7b7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT fk_e3a7b7_descriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyprogramassociation fk_e3e5a4_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: surveyprogramassociation fk_e3e5a4_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: disciplineincident fk_e45c0b_incidentlocationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_incidentlocationdescriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.incidentlocationdescriptor(incidentlocationdescriptorid);


--
-- Name: disciplineincident fk_e45c0b_reporterdescriptiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_reporterdescriptiondescriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.reporterdescriptiondescriptor(reporterdescriptiondescriptorid);


--
-- Name: disciplineincident fk_e45c0b_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: academicsubjectdescriptor fk_e4b042_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT fk_e4b042_descriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationsystemdescriptor fk_e4ce6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT fk_e4ce6a_descriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveysection fk_e5572a_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT fk_e5572a_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: ratingleveldescriptor fk_e67dd1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ratingleveldescriptor
    ADD CONSTRAINT fk_e67dd1_descriptor FOREIGN KEY (ratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programevaluationratinglevel fk_e71055_programevaluation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationratinglevel
    ADD CONSTRAINT fk_e71055_programevaluation FOREIGN KEY (programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluation(programeducationorganizationid, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programevaluationratinglevel fk_e71055_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationratinglevel
    ADD CONSTRAINT fk_e71055_ratingleveldescriptor FOREIGN KEY (ratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: stafftribalaffiliation fk_e77b10_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftribalaffiliation fk_e77b10_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: interventioninterventionprescription fk_e79fe2_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventioninterventionprescription fk_e79fe2_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: assessmentassessedgradelevel fk_e83625_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentassessedgradelevel fk_e83625_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: educationorganizationnetwork fk_e88dea_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_educationorganization FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationnetwork fk_e88dea_networkpurposedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_networkpurposedescriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.networkpurposedescriptor(networkpurposedescriptorid);


--
-- Name: interventionprescription fk_e93bc3_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionprescription fk_e93bc3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionprescription fk_e93bc3_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: participationdescriptor fk_e94f88_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT fk_e94f88_descriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: diplomatypedescriptor fk_e9ffa4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT fk_e9ffa4_descriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localencumbrance fk_ea526f_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT fk_ea526f_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localencumbrance fk_ea526f_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT fk_ea526f_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: sexdescriptor fk_eb9b06_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT fk_eb9b06_descriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: absenceeventcategorydescriptor fk_ec167f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT fk_ec167f_descriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcard fk_ec1992_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: reportcard fk_ec1992_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, gradingperiodname, schoolid, schoolyear);


--
-- Name: reportcard fk_ec1992_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyquestionresponse fk_eddd02_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionresponse fk_eddd02_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: indicatordescriptor fk_ee0bbf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT fk_ee0bbf_descriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessment fk_ee3b2a_administrationenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_administrationenvironmentdescriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.administrationenvironmentdescriptor(administrationenvironmentdescriptorid);


--
-- Name: studentassessment fk_ee3b2a_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: studentassessment fk_ee3b2a_eventcircumstancedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_eventcircumstancedescriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.eventcircumstancedescriptor(eventcircumstancedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_gradeleveldescriptor FOREIGN KEY (whenassessedgradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentassessment fk_ee3b2a_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_languagedescriptor FOREIGN KEY (administrationlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_reasonnottesteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_reasonnottesteddescriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.reasonnottesteddescriptor(reasonnottesteddescriptorid);


--
-- Name: studentassessment fk_ee3b2a_retestindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_retestindicatordescriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.retestindicatordescriptor(retestindicatordescriptorid);


--
-- Name: studentassessment fk_ee3b2a_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_school FOREIGN KEY (reportedschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentassessment fk_ee3b2a_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessment fk_ee3b2a_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: courseacademicsubject fk_ee5caf_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseacademicsubject
    ADD CONSTRAINT fk_ee5caf_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: courseacademicsubject fk_ee5caf_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseacademicsubject
    ADD CONSTRAINT fk_ee5caf_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: disciplineaction fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_disciplineactionlengthdifferencereasondescriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.disciplineactionlengthdifferencereasondescriptor(disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineaction fk_eec7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school FOREIGN KEY (assignmentschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school1 FOREIGN KEY (responsibilityschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: schooltypedescriptor fk_ef0964_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT fk_ef0964_descriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: othernametypedescriptor fk_f020d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT fk_f020d2_descriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_communityprovider; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_communityprovider FOREIGN KEY (communityproviderid) REFERENCES edfi.communityprovider(communityproviderid);


--
-- Name: communityproviderlicense fk_f092ff_licensestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensestatusdescriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.licensestatusdescriptor(licensestatusdescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_licensetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensetypedescriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.licensetypedescriptor(licensetypedescriptorid);


--
-- Name: reportcardgrade fk_f203d3_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolyear, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: reportcardgrade fk_f203d3_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodname, gradingperiodschoolid, gradingperiodschoolyear, studentusi) ON DELETE CASCADE;


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi, identificationcode) ON DELETE CASCADE;


--
-- Name: termdescriptor fk_f36b04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT fk_f36b04_descriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcredential fk_f3917b_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffcredential fk_f3917b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: programevaluation fk_f3a20e_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluation
    ADD CONSTRAINT fk_f3a20e_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: programevaluation fk_f3a20e_programevaluationperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluation
    ADD CONSTRAINT fk_f3a20e_programevaluationperioddescriptor FOREIGN KEY (programevaluationperioddescriptorid) REFERENCES edfi.programevaluationperioddescriptor(programevaluationperioddescriptorid);


--
-- Name: programevaluation fk_f3a20e_programevaluationtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluation
    ADD CONSTRAINT fk_f3a20e_programevaluationtypedescriptor FOREIGN KEY (programevaluationtypedescriptorid) REFERENCES edfi.programevaluationtypedescriptor(programevaluationtypedescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: calendareventdescriptor fk_f598e5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT fk_f598e5_descriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_educationplandescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_educationplandescriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.educationplandescriptor(educationplandescriptorid);


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: educationcontentauthor fk_f605af_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT fk_f605af_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: sourcesystemdescriptor fk_f71783_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT fk_f71783_descriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disabilitydescriptor fk_f7280b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT fk_f7280b_descriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_specialeducationsettingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_specialeducationsettingdescriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.specialeducationsettingdescriptor(specialeducationsettingdescriptorid);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: programevaluationtypedescriptor fk_fb3d63_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationtypedescriptor
    ADD CONSTRAINT fk_fb3d63_descriptor FOREIGN KEY (programevaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_eligibilitydelayreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_eligibilitydelayreasondescriptor FOREIGN KEY (eligibilitydelayreasondescriptorid) REFERENCES edfi.eligibilitydelayreasondescriptor(eligibilitydelayreasondescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_eligibilityevaluationtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_eligibilityevaluationtypedescriptor FOREIGN KEY (eligibilityevaluationtypedescriptorid) REFERENCES edfi.eligibilityevaluationtypedescriptor(eligibilityevaluationtypedescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_evaluationdelayreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_evaluationdelayreasondescriptor FOREIGN KEY (evaluationdelayreasondescriptorid) REFERENCES edfi.evaluationdelayreasondescriptor(evaluationdelayreasondescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_ideapartdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_ideapartdescriptor FOREIGN KEY (ideapartdescriptorid) REFERENCES edfi.ideapartdescriptor(ideapartdescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentspecialeducationprogrameligibilityassociation fk_fcb699_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogrameligibilityassociation
    ADD CONSTRAINT fk_fcb699_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: objectdimensionreportingtag fk_fda3b7_objectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT fk_fda3b7_objectdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.objectdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: objectdimensionreportingtag fk_fda3b7_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT fk_fda3b7_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: programevaluationobjectiveratinglevel fk_ffb8a9_programevaluationobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjectiveratinglevel
    ADD CONSTRAINT fk_ffb8a9_programevaluationobjective FOREIGN KEY (programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) REFERENCES edfi.programevaluationobjective(programeducationorganizationid, programevaluationobjectivetitle, programevaluationperioddescriptorid, programevaluationtitle, programevaluationtypedescriptorid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programevaluationobjectiveratinglevel fk_ffb8a9_ratingleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programevaluationobjectiveratinglevel
    ADD CONSTRAINT fk_ffb8a9_ratingleveldescriptor FOREIGN KEY (ratingleveldescriptorid) REFERENCES edfi.ratingleveldescriptor(ratingleveldescriptorid);


--
-- Name: section fk_section_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_section_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: sessionacademicweek fk_sessionacademicweek_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_sessionacademicweek_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sessiongradingperiod fk_sessiongradingperiod_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_sessiongradingperiod_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentschoolattendanceevent fk_studentschoolattendanceevent_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_studentschoolattendanceevent_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroupgeneral; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroupgeneral FOREIGN KEY (generalizationdescriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_operationalcontext; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_operationalcontext FOREIGN KEY (operationalcontexturi) REFERENCES interop.operationalcontext(operationalcontexturi);


--
-- Name: candidatetelephone fk_09c531_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT fk_09c531_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatetelephone fk_09c531_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatetelephone
    ADD CONSTRAINT fk_09c531_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: performanceevaluation fk_15d685_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: performanceevaluation fk_15d685_educationorganization; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: performanceevaluation fk_15d685_evaluationperioddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_evaluationperioddescriptor FOREIGN KEY (evaluationperioddescriptorid) REFERENCES tpdm.evaluationperioddescriptor(evaluationperioddescriptorid);


--
-- Name: performanceevaluation fk_15d685_performanceevaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_performanceevaluationtypedescriptor FOREIGN KEY (performanceevaluationtypedescriptorid) REFERENCES tpdm.performanceevaluationtypedescriptor(performanceevaluationtypedescriptorid);


--
-- Name: performanceevaluation fk_15d685_schoolyeartype; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: performanceevaluation fk_15d685_termdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluation
    ADD CONSTRAINT fk_15d685_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: candidateaddress fk_160329_addresstypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: candidateaddress fk_160329_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateaddress fk_160329_localedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: candidateaddress fk_160329_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddress
    ADD CONSTRAINT fk_160329_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: evaluation fk_163e44_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT fk_163e44_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: evaluation fk_163e44_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluation
    ADD CONSTRAINT fk_163e44_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: candidateaddressperiod fk_17e793_candidateaddress; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateaddressperiod
    ADD CONSTRAINT fk_17e793_candidateaddress FOREIGN KEY (candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES tpdm.candidateaddress(candidateidentifier, addresstypedescriptorid, city, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogram fk_195935_accreditationstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_accreditationstatusdescriptor FOREIGN KEY (accreditationstatusdescriptorid) REFERENCES tpdm.accreditationstatusdescriptor(accreditationstatusdescriptorid);


--
-- Name: educatorpreparationprogram fk_195935_educationorganization; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educatorpreparationprogram fk_195935_programtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogram
    ADD CONSTRAINT fk_195935_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: evaluationobjectiveratinglevel fk_1d984c_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT fk_1d984c_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratinglevel fk_1d984c_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratinglevel
    ADD CONSTRAINT fk_1d984c_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: schoolextension fk_2199be_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT fk_2199be_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: schoolextension fk_2199be_school; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.schoolextension
    ADD CONSTRAINT fk_2199be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: candidatedisability fk_236ee4_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatedisability fk_236ee4_disabilitydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: candidatedisability fk_236ee4_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisability
    ADD CONSTRAINT fk_236ee4_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationdegreespec_2501c4 fk_2501c4_candidateeducatorpreparationprogramassociation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationdegreespec_2501c4
    ADD CONSTRAINT fk_2501c4_candidateeducatorpreparationprogramassociation FOREIGN KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.candidateeducatorpreparationprogramassociation(begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingresult fk_268283_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT fk_268283_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingresult fk_268283_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingresult
    ADD CONSTRAINT fk_268283_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: performanceevaluationtypedescriptor fk_2ba831_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationtypedescriptor
    ADD CONSTRAINT fk_2ba831_descriptor FOREIGN KEY (performanceevaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewer fk_2d29eb_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT fk_2d29eb_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewer fk_2d29eb_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewer
    ADD CONSTRAINT fk_2d29eb_person FOREIGN KEY (reviewerpersonid, reviewersourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: candidatelanguageuse fk_3f00b1_candidatelanguage; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT fk_3f00b1_candidatelanguage FOREIGN KEY (candidateidentifier, languagedescriptorid) REFERENCES tpdm.candidatelanguage(candidateidentifier, languagedescriptorid) ON DELETE CASCADE;


--
-- Name: candidatelanguageuse fk_3f00b1_languageusedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguageuse
    ADD CONSTRAINT fk_3f00b1_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: certificationroutedescriptor fk_40b601_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.certificationroutedescriptor
    ADD CONSTRAINT fk_40b601_descriptor FOREIGN KEY (certificationroutedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementrating fk_4479ea_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelementrating fk_4479ea_evaluationelementratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationelementratingleveldescriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES tpdm.evaluationelementratingleveldescriptor(evaluationelementratingleveldescriptorid);


--
-- Name: evaluationelementrating fk_4479ea_evaluationobjectiverating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementrating
    ADD CONSTRAINT fk_4479ea_evaluationobjectiverating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationobjectiverating(educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: candidateothername fk_4521bb_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT fk_4521bb_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateothername fk_4521bb_othernametypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateothername
    ADD CONSTRAINT fk_4521bb_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: performanceevaluationratingreviewer fk_477526_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT fk_477526_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingreviewer fk_477526_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewer
    ADD CONSTRAINT fk_477526_person FOREIGN KEY (reviewerpersonid, reviewersourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: evaluationratingstatusdescriptor fk_4b53ea_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingstatusdescriptor
    ADD CONSTRAINT fk_4b53ea_descriptor FOREIGN KEY (evaluationratingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyresponsepersontargetassociation fk_520027_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT fk_520027_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveyresponsepersontargetassociation fk_520027_surveyresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponsepersontargetassociation
    ADD CONSTRAINT fk_520027_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: genderdescriptor fk_554e4f_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.genderdescriptor
    ADD CONSTRAINT fk_554e4f_descriptor FOREIGN KEY (genderdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationgradelevel fk_5b9d31_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT fk_5b9d31_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: performanceevaluationgradelevel fk_5b9d31_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationgradelevel
    ADD CONSTRAINT fk_5b9d31_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingleveldescriptor fk_5fb2ad_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingleveldescriptor
    ADD CONSTRAINT fk_5fb2ad_descriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratingreviewerreceivedtraining fk_608112_evaluationratingreviewer; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratingreviewerreceivedtraining
    ADD CONSTRAINT fk_608112_evaluationratingreviewer FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) REFERENCES tpdm.evaluationratingreviewer(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_candidateeducatorpreparationprogramassociation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_candidateeducatorpreparationprogramassociation FOREIGN KEY (begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.candidateeducatorpreparationprogramassociation(begindate, candidateidentifier, educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_schoolyeartype; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: candidateeducatorpreparationprogramassociationcohortyear fk_620d03_termdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociationcohortyear
    ADD CONSTRAINT fk_620d03_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: rubricdimension fk_643c81_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT fk_643c81_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: rubricdimension fk_643c81_rubricratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricdimension
    ADD CONSTRAINT fk_643c81_rubricratingleveldescriptor FOREIGN KEY (rubricratingleveldescriptorid) REFERENCES tpdm.rubricratingleveldescriptor(rubricratingleveldescriptorid);


--
-- Name: evaluationtypedescriptor fk_67cd19_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationtypedescriptor
    ADD CONSTRAINT fk_67cd19_descriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: accreditationstatusdescriptor fk_69de81_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.accreditationstatusdescriptor
    ADD CONSTRAINT fk_69de81_descriptor FOREIGN KEY (accreditationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: candidaterace fk_6aa942_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT fk_6aa942_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidaterace fk_6aa942_racedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidaterace
    ADD CONSTRAINT fk_6aa942_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: performanceevaluationratingreviewerreceivedtraining fk_6e6517_performanceevaluationratingreviewer; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingreviewerreceivedtraining
    ADD CONSTRAINT fk_6e6517_performanceevaluationratingreviewer FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) REFERENCES tpdm.performanceevaluationratingreviewer(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid, firstname, lastsurname) ON DELETE CASCADE;


--
-- Name: candidatedisabilitydesignation fk_6edb1d_candidatedisability; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT fk_6edb1d_candidatedisability FOREIGN KEY (candidateidentifier, disabilitydescriptorid) REFERENCES tpdm.candidatedisability(candidateidentifier, disabilitydescriptorid) ON DELETE CASCADE;


--
-- Name: candidatedisabilitydesignation fk_6edb1d_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatedisabilitydesignation
    ADD CONSTRAINT fk_6edb1d_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: credentialextension fk_6fae52_certificationroutedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_certificationroutedescriptor FOREIGN KEY (certificationroutedescriptorid) REFERENCES tpdm.certificationroutedescriptor(certificationroutedescriptorid);


--
-- Name: credentialextension fk_6fae52_credential; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialextension fk_6fae52_credentialstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_credentialstatusdescriptor FOREIGN KEY (credentialstatusdescriptorid) REFERENCES tpdm.credentialstatusdescriptor(credentialstatusdescriptorid);


--
-- Name: credentialextension fk_6fae52_educatorroledescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_educatorroledescriptor FOREIGN KEY (educatorroledescriptorid) REFERENCES tpdm.educatorroledescriptor(educatorroledescriptorid);


--
-- Name: credentialextension fk_6fae52_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialextension
    ADD CONSTRAINT fk_6fae52_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: evaluationratinglevel fk_7052f8_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT fk_7052f8_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationratinglevel fk_7052f8_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationratinglevel
    ADD CONSTRAINT fk_7052f8_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: credentialstudentacademicrecord fk_73e151_credential; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT fk_73e151_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialstudentacademicrecord fk_73e151_studentacademicrecord; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstudentacademicrecord
    ADD CONSTRAINT fk_73e151_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_coteachingstyleobserveddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_coteachingstyleobserveddescriptor FOREIGN KEY (coteachingstyleobserveddescriptorid) REFERENCES tpdm.coteachingstyleobserveddescriptor(coteachingstyleobserveddescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_performanceevaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_performanceevaluationratingleveldescriptor FOREIGN KEY (performanceevaluationratingleveldescriptorid) REFERENCES tpdm.performanceevaluationratingleveldescriptor(performanceevaluationratingleveldescriptorid);


--
-- Name: performanceevaluationrating fk_759abe_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationrating
    ADD CONSTRAINT fk_759abe_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: englishlanguageexamdescriptor fk_76d6e8_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.englishlanguageexamdescriptor
    ADD CONSTRAINT fk_76d6e8_descriptor FOREIGN KEY (englishlanguageexamdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiverating fk_7ae19d_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjectiverating fk_7ae19d_evaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_evaluationrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationrating(educationorganizationid, evaluationdate, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationobjectiverating fk_7ae19d_objectiveratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiverating
    ADD CONSTRAINT fk_7ae19d_objectiveratingleveldescriptor FOREIGN KEY (objectiveratingleveldescriptorid) REFERENCES tpdm.objectiveratingleveldescriptor(objectiveratingleveldescriptorid);


--
-- Name: evaluationperioddescriptor fk_83ff2a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationperioddescriptor
    ADD CONSTRAINT fk_83ff2a_descriptor FOREIGN KEY (evaluationperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingresult fk_863fa4_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT fk_863fa4_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratingresult fk_863fa4_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingresult
    ADD CONSTRAINT fk_863fa4_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationelementratingleveldescriptor fk_86df6c_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingleveldescriptor
    ADD CONSTRAINT fk_86df6c_descriptor FOREIGN KEY (evaluationelementratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performanceevaluationratinglevel fk_90ed3d_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT fk_90ed3d_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: performanceevaluationratinglevel fk_90ed3d_performanceevaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratinglevel
    ADD CONSTRAINT fk_90ed3d_performanceevaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.performanceevaluation(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialstatusdescriptor fk_91080a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.credentialstatusdescriptor
    ADD CONSTRAINT fk_91080a_descriptor FOREIGN KEY (credentialstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coteachingstyleobserveddescriptor fk_932c9a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.coteachingstyleobserveddescriptor
    ADD CONSTRAINT fk_932c9a_descriptor FOREIGN KEY (coteachingstyleobserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: candidatepersonalidentificationdocument fk_93a227_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatepersonalidentificationdocument fk_93a227_countrydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: candidatepersonalidentificationdocument fk_93a227_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: candidatepersonalidentificationdocument fk_93a227_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatepersonalidentificationdocument
    ADD CONSTRAINT fk_93a227_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: financialaid fk_a465f2_aidtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT fk_a465f2_aidtypedescriptor FOREIGN KEY (aidtypedescriptorid) REFERENCES tpdm.aidtypedescriptor(aidtypedescriptorid);


--
-- Name: financialaid fk_a465f2_student; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.financialaid
    ADD CONSTRAINT fk_a465f2_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: evaluationelementratinglevel fk_afbeb2_evaluationelement; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT fk_afbeb2_evaluationelement FOREIGN KEY (educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationelement(educationorganizationid, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementratinglevel fk_afbeb2_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratinglevel
    ADD CONSTRAINT fk_afbeb2_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: candidate fk_b2452d_countrydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: candidate fk_b2452d_englishlanguageexamdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_englishlanguageexamdescriptor FOREIGN KEY (englishlanguageexamdescriptorid) REFERENCES tpdm.englishlanguageexamdescriptor(englishlanguageexamdescriptorid);


--
-- Name: candidate fk_b2452d_genderdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_genderdescriptor FOREIGN KEY (genderdescriptorid) REFERENCES tpdm.genderdescriptor(genderdescriptorid);


--
-- Name: candidate fk_b2452d_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: candidate fk_b2452d_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: candidate fk_b2452d_sexdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: candidate fk_b2452d_sexdescriptor1; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_sexdescriptor1 FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: candidate fk_b2452d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidate
    ADD CONSTRAINT fk_b2452d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: educatorroledescriptor fk_bc8b94_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorroledescriptor
    ADD CONSTRAINT fk_bc8b94_descriptor FOREIGN KEY (educatorroledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratingresult fk_beeccb_evaluationobjectiverating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT fk_beeccb_evaluationobjectiverating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationobjectiverating(educationorganizationid, evaluationdate, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationobjectiveratingresult fk_beeccb_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjectiveratingresult
    ADD CONSTRAINT fk_beeccb_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluationratingleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluationratingleveldescriptor FOREIGN KEY (evaluationratingleveldescriptorid) REFERENCES tpdm.evaluationratingleveldescriptor(evaluationratingleveldescriptorid);


--
-- Name: evaluationrating fk_bfaa20_evaluationratingstatusdescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_evaluationratingstatusdescriptor FOREIGN KEY (evaluationratingstatusdescriptorid) REFERENCES tpdm.evaluationratingstatusdescriptor(evaluationratingstatusdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_performanceevaluationrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_performanceevaluationrating FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.performanceevaluationrating(educationorganizationid, evaluationperioddescriptorid, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid);


--
-- Name: evaluationrating fk_bfaa20_section; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationrating
    ADD CONSTRAINT fk_bfaa20_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: candidateelectronicmail fk_c5124f_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT fk_c5124f_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidateelectronicmail fk_c5124f_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateelectronicmail
    ADD CONSTRAINT fk_c5124f_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: evaluationelementratingresult fk_c5877a_evaluationelementrating; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT fk_c5877a_evaluationelementrating FOREIGN KEY (educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) REFERENCES tpdm.evaluationelementrating(educationorganizationid, evaluationdate, evaluationelementtitle, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, personid, schoolyear, sourcesystemdescriptorid, termdescriptorid) ON DELETE CASCADE;


--
-- Name: evaluationelementratingresult fk_c5877a_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelementratingresult
    ADD CONSTRAINT fk_c5877a_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: eppprogrampathwaydescriptor fk_cde665_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.eppprogrampathwaydescriptor
    ADD CONSTRAINT fk_cde665_descriptor FOREIGN KEY (eppprogrampathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogramgradelevel fk_d3a222_educatorpreparationprogram; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT fk_d3a222_educatorpreparationprogram FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.educatorpreparationprogram(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educatorpreparationprogramgradelevel fk_d3a222_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.educatorpreparationprogramgradelevel
    ADD CONSTRAINT fk_d3a222_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: evaluationobjective fk_d4565d_evaluation; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT fk_d4565d_evaluation FOREIGN KEY (educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluation(educationorganizationid, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationobjective fk_d4565d_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationobjective
    ADD CONSTRAINT fk_d4565d_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: objectiveratingleveldescriptor fk_d49b1f_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.objectiveratingleveldescriptor
    ADD CONSTRAINT fk_d49b1f_descriptor FOREIGN KEY (objectiveratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: aidtypedescriptor fk_d6106a_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.aidtypedescriptor
    ADD CONSTRAINT fk_d6106a_descriptor FOREIGN KEY (aidtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveysectionresponsepersontargetassociation fk_e21e4b_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT fk_e21e4b_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveysectionresponsepersontargetassociation fk_e21e4b_surveysectionresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveysectionresponsepersontargetassociation
    ADD CONSTRAINT fk_e21e4b_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: candidatelanguage fk_e5239b_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT fk_e5239b_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier) ON DELETE CASCADE;


--
-- Name: candidatelanguage fk_e5239b_languagedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidatelanguage
    ADD CONSTRAINT fk_e5239b_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: evaluationelement fk_e53186_evaluationobjective; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT fk_e53186_evaluationobjective FOREIGN KEY (educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid) REFERENCES tpdm.evaluationobjective(educationorganizationid, evaluationobjectivetitle, evaluationperioddescriptorid, evaluationtitle, performanceevaluationtitle, performanceevaluationtypedescriptorid, schoolyear, termdescriptorid);


--
-- Name: evaluationelement fk_e53186_evaluationtypedescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.evaluationelement
    ADD CONSTRAINT fk_e53186_evaluationtypedescriptor FOREIGN KEY (evaluationtypedescriptorid) REFERENCES tpdm.evaluationtypedescriptor(evaluationtypedescriptorid);


--
-- Name: performanceevaluationratingleveldescriptor fk_ed7e01_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.performanceevaluationratingleveldescriptor
    ADD CONSTRAINT fk_ed7e01_descriptor FOREIGN KEY (performanceevaluationratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: rubricratingleveldescriptor fk_f24609_descriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.rubricratingleveldescriptor
    ADD CONSTRAINT fk_f24609_descriptor FOREIGN KEY (rubricratingleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyresponseextension fk_fa906d_person; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT fk_fa906d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: surveyresponseextension fk_fa906d_surveyresponse; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.surveyresponseextension
    ADD CONSTRAINT fk_fa906d_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_candidate; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_candidate FOREIGN KEY (candidateidentifier) REFERENCES tpdm.candidate(candidateidentifier);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_educatorpreparationprogram; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_educatorpreparationprogram FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES tpdm.educatorpreparationprogram(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_eppprogrampathwaydescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_eppprogrampathwaydescriptor FOREIGN KEY (eppprogrampathwaydescriptorid) REFERENCES tpdm.eppprogrampathwaydescriptor(eppprogrampathwaydescriptorid);


--
-- Name: candidateeducatorpreparationprogramassociation fk_fc61b2_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: tpdm; Owner: postgres
--

ALTER TABLE ONLY tpdm.candidateeducatorpreparationprogramassociation
    ADD CONSTRAINT fk_fc61b2_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- PostgreSQL database dump complete
--

