--
-- PostgreSQL database dump
--

-- Dumped from database version 13.9
-- Dumped by pg_dump version 13.7

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: auth; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA auth;


ALTER SCHEMA auth OWNER TO postgres;

--
-- Name: changes; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA changes;


ALTER SCHEMA changes OWNER TO postgres;

--
-- Name: edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA edfi;


ALTER SCHEMA edfi OWNER TO postgres;

--
-- Name: interop; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA interop;


ALTER SCHEMA interop OWNER TO postgres;

--
-- Name: tracked_changes_edfi; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA tracked_changes_edfi;


ALTER SCHEMA tracked_changes_edfi OWNER TO postgres;

--
-- Name: util; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA util;


ALTER SCHEMA util OWNER TO postgres;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


--
-- Name: getmaxchangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.getmaxchangeversion() RETURNS bigint
    LANGUAGE plpgsql
    AS $$
DECLARE
	result bigint;
BEGIN
    SELECT last_value FROM changes.ChangeVersionSequence INTO result;
    RETURN result;
END
$$;


ALTER FUNCTION changes.getmaxchangeversion() OWNER TO postgres;

--
-- Name: updatechangeversion(); Type: FUNCTION; Schema: changes; Owner: postgres
--

CREATE FUNCTION changes.updatechangeversion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    new.ChangeVersion := nextval('changes.ChangeVersionSequence');
    RETURN new;
END;
$$;


ALTER FUNCTION changes.updatechangeversion() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityorganizationid
            AND targeteducationorganizationid = OLD.communityorganizationid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityorganization_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityorganization_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityorganizationid AS SourceEducationOrganizationId, 
            NEW.communityorganizationid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityorganization_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid 
                    AND OLD.communityorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.communityproviderid
            ) as targets
        WHERE sources.communityproviderid = targets.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.communityproviderid
            AND targeteducationorganizationid = OLD.communityproviderid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_delete() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.communityproviderid AS SourceEducationOrganizationId, 
            NEW.communityproviderid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the communityorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.communityproviderid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid  
                AND NEW.communityorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.communityproviderid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.communityproviderid
        ) as targets
    WHERE sources.communityproviderid = targets.communityproviderid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_insert() OWNER TO postgres;

--
-- Name: edfi_communityprovider_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_communityprovider_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.communityorganizationid  
                    AND OLD.communityorganizationid IS NOT NULL 
                    AND (NEW.communityorganizationid IS NULL OR OLD.communityorganizationid <> NEW.communityorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the communityorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.communityproviderid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.communityproviderid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.communityproviderid = d2.communityproviderid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the communityorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.communityorganizationid
                AND ((OLD.communityorganizationid IS NULL AND NEW.communityorganizationid IS NOT NULL)
                OR OLD.communityorganizationid <> NEW.communityorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the communityprovider (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.communityproviderid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_communityprovider_tr_update() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationorganizationnetworkid
            AND targeteducationorganizationid = OLD.educationorganizationnetworkid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationorganizationnetwork_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationorganizationnetworkid AS SourceEducationOrganizationId, 
            NEW.educationorganizationnetworkid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.educationservicecenterid
            ) as targets
        WHERE sources.educationservicecenterid = targets.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.educationservicecenterid
            AND targeteducationorganizationid = OLD.educationservicecenterid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_delete() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.educationservicecenterid AS SourceEducationOrganizationId, 
            NEW.educationservicecenterid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.educationservicecenterid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.educationservicecenterid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.educationservicecenterid
        ) as targets
    WHERE sources.educationservicecenterid = targets.educationservicecenterid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_insert() OWNER TO postgres;

--
-- Name: edfi_educationservicecenter_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_educationservicecenter_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.educationservicecenterid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.educationservicecenterid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.educationservicecenterid = d2.educationservicecenterid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the educationservicecenter (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.educationservicecenterid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_educationservicecenter_tr_update() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid 
                    AND OLD.parentlocaleducationagencyid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid 
                    AND OLD.educationservicecenterid IS NOT NULL

            UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid 
                    AND OLD.stateeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.localeducationagencyid
            ) as targets
        WHERE sources.localeducationagencyid = targets.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.localeducationagencyid
            AND targeteducationorganizationid = OLD.localeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.localeducationagencyid AS SourceEducationOrganizationId, 
            NEW.localeducationagencyid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parentlocaleducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid  
                AND NEW.parentlocaleducationagencyid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the educationservicecenterid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid  
                AND NEW.educationservicecenterid IS NOT NULL

                        UNION

        -- Find ancestors that need to have tuples inserted due to assignment of the stateeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.localeducationagencyid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid  
                AND NEW.stateeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.localeducationagencyid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.localeducationagencyid
        ) as targets
    WHERE sources.localeducationagencyid = targets.localeducationagencyid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: edfi_localeducationagency_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_localeducationagency_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parentlocaleducationagencyid  
                    AND OLD.parentlocaleducationagencyid IS NOT NULL 
                    AND (NEW.parentlocaleducationagencyid IS NULL OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.educationservicecenterid  
                    AND OLD.educationservicecenterid IS NOT NULL 
                    AND (NEW.educationservicecenterid IS NULL OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

                UNION

            -- Find ancestors to be deleted by clearing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.stateeducationagencyid  
                    AND OLD.stateeducationagencyid IS NOT NULL 
                    AND (NEW.stateeducationagencyid IS NULL OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parentlocaleducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the educationservicecenterid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid 
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the stateeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.localeducationagencyid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.localeducationagencyid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.localeducationagencyid = d2.localeducationagencyid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parentlocaleducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parentlocaleducationagencyid
                AND ((OLD.parentlocaleducationagencyid IS NULL AND NEW.parentlocaleducationagencyid IS NOT NULL)
                OR OLD.parentlocaleducationagencyid <> NEW.parentlocaleducationagencyid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the educationservicecenterid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.educationservicecenterid
                AND ((OLD.educationservicecenterid IS NULL AND NEW.educationservicecenterid IS NOT NULL)
                OR OLD.educationservicecenterid <> NEW.educationservicecenterid)

            UNION

            -- Find ancestors to be inserted by initializing or changing the stateeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.stateeducationagencyid
                AND ((OLD.stateeducationagencyid IS NULL AND NEW.stateeducationagencyid IS NOT NULL)
                OR OLD.stateeducationagencyid <> NEW.stateeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the localeducationagency (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.localeducationagencyid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_localeducationagency_tr_update() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid 
                    AND OLD.parenteducationorganizationid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.organizationdepartmentid
            ) as targets
        WHERE sources.organizationdepartmentid = targets.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.organizationdepartmentid
            AND targeteducationorganizationid = OLD.organizationdepartmentid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_delete() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.organizationdepartmentid AS SourceEducationOrganizationId, 
            NEW.organizationdepartmentid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the parenteducationorganizationid
        SELECT  tuples.SourceEducationOrganizationId, NEW.organizationdepartmentid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid  
                AND NEW.parenteducationorganizationid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.organizationdepartmentid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.organizationdepartmentid
        ) as targets
    WHERE sources.organizationdepartmentid = targets.organizationdepartmentid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_insert() OWNER TO postgres;

--
-- Name: edfi_organizationdepartment_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_organizationdepartment_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid, new.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.parenteducationorganizationid  
                    AND OLD.parenteducationorganizationid IS NOT NULL 
                    AND (NEW.parenteducationorganizationid IS NULL OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the parenteducationorganizationid 
            SELECT  tuples.sourceeducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.organizationdepartmentid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.organizationdepartmentid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.organizationdepartmentid = d2.organizationdepartmentid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the parenteducationorganizationid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.parenteducationorganizationid
                AND ((OLD.parenteducationorganizationid IS NULL AND NEW.parenteducationorganizationid IS NOT NULL)
                OR OLD.parenteducationorganizationid <> NEW.parenteducationorganizationid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the organizationdepartment (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.organizationdepartmentid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_organizationdepartment_tr_update() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.postsecondaryinstitutionid
            AND targeteducationorganizationid = OLD.postsecondaryinstitutionid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete() OWNER TO postgres;

--
-- Name: edfi_postsecondaryinstitution_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.postsecondaryinstitutionid AS SourceEducationOrganizationId, 
            NEW.postsecondaryinstitutionid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove affected tuples
    WITH cj AS (
        SELECT sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
            -- Determine the source ancestors affected by this change
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid 
                    AND OLD.localeducationagencyid IS NOT NULL
            ) AS sources
        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT tuples.targeteducationorganizationid, OLD.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = OLD.schoolid
            ) as targets
        WHERE sources.schoolid = targets.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;

    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.schoolid
            AND targeteducationorganizationid = OLD.schoolid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_delete() OWNER TO postgres;

--
-- Name: edfi_school_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.schoolid AS SourceEducationOrganizationId, 
            NEW.schoolid AS targeteducationorganizationid;

    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT sources.SourceEducationOrganizationId, targets.targeteducationorganizationid
    FROM (
        -- Find ancestors that need to have tuples inserted due to assignment of the localeducationagencyid
        SELECT  tuples.SourceEducationOrganizationId, NEW.schoolid
        FROM    auth.educationorganizationidtoeducationorganizationid tuples
        WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid  
                AND NEW.localeducationagencyid IS NOT NULL
        ) AS sources
    CROSS JOIN
        -- Get all the existing targets/descendants (to be cross joined with all the affected ancestor sources)
        (
            SELECT  NEW.schoolid, tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.SourceEducationOrganizationId = NEW.schoolid
        ) as targets
    WHERE sources.schoolid = targets.schoolid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_insert() OWNER TO postgres;

--
-- Name: edfi_school_tr_update(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_school_tr_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Remove all tuples impacted by the clearing or changing of the parent education organizations
    WITH cj AS (
        SELECT d1.sourceeducationorganizationid, d2.targeteducationorganizationid
        FROM (
            -- Find ancestors to be deleted by clearing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid, new.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = OLD.localeducationagencyid  
                    AND OLD.localeducationagencyid IS NOT NULL 
                    AND (NEW.localeducationagencyid IS NULL OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
                
                EXCEPT
                
            -- Find ancestors that should remain due to new value for the localeducationagencyid 
            SELECT  tuples.sourceeducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid 
            ) AS d1

        CROSS JOIN
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            (SELECT	tuples.targeteducationorganizationid, NEW.schoolid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   NEW.schoolid = tuples.sourceeducationorganizationid
            ) as d2
        WHERE d1.schoolid = d2.schoolid
    )
    DELETE FROM auth.educationorganizationidtoeducationorganizationid AS tbd USING cj
    WHERE tbd.sourceeducationorganizationid = cj.sourceeducationorganizationid
        AND tbd.targeteducationorganizationid = cj.targeteducationorganizationid;
    
    -- Add new tuples resulting from the changes/initializations of parent Education Organization ids
    WITH source(sourceeducationorganizationid, targeteducationorganizationid) AS (
        SELECT  sources.sourceeducationorganizationid, targets.targeteducationorganizationid
        FROM (
        -- Determine the source ancestors affected by this change
            -- Find ancestors to be inserted by initializing or changing the localeducationagencyid
            SELECT  tuples.sourceeducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.targeteducationorganizationid = NEW.localeducationagencyid
                AND ((OLD.localeducationagencyid IS NULL AND NEW.localeducationagencyid IS NOT NULL)
                OR OLD.localeducationagencyid <> NEW.localeducationagencyid)
        ) as sources
        CROSS JOIN (
            -- Get all the descendants of the school (to be cross joined with all the affected ancestor sources)
            SELECT  tuples.targeteducationorganizationid
            FROM    auth.educationorganizationidtoeducationorganizationid tuples
            WHERE   tuples.sourceeducationorganizationid = NEW.schoolid
        ) AS targets
    )
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(sourceeducationorganizationid, targeteducationorganizationid)
    SELECT source.sourceeducationorganizationid, source.targeteducationorganizationid
    FROM source
    ON CONFLICT DO NOTHING;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_school_tr_update() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_delete(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_delete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Delete self-referencing tuple
    DELETE
    FROM    auth.educationorganizationidtoeducationorganizationid
    WHERE   sourceeducationorganizationid = OLD.stateeducationagencyid
            AND targeteducationorganizationid = OLD.stateeducationagencyid;

    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_delete() OWNER TO postgres;

--
-- Name: edfi_stateeducationagency_tr_insert(); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.edfi_stateeducationagency_tr_insert() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Add new tuple for current record
    INSERT INTO auth.educationorganizationidtoeducationorganizationid(SourceEducationOrganizationId, targeteducationorganizationid)
    SELECT  NEW.stateeducationagencyid AS SourceEducationOrganizationId, 
            NEW.stateeducationagencyid AS targeteducationorganizationid;

    
    RETURN NULL;
END;
$$;


ALTER FUNCTION edfi.edfi_stateeducationagency_tr_insert() OWNER TO postgres;

--
-- Name: setcurrentschoolyear(integer); Type: FUNCTION; Schema: edfi; Owner: postgres
--

CREATE FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) RETURNS void
    LANGUAGE plpgsql
    AS $_$
DECLARE
    rowCount integer;
    newSchoolYear ALIAS FOR $1;
BEGIN
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'true'
    WHERE SchoolYear = newSchoolYear;
    
    GET DIAGNOSTICS rowCount = ROW_COUNT;
    
    IF rowCount = 0 THEN
        RAISE EXCEPTION 'Specified school year does not exist.' USING ERRCODE = '50000';
    END IF;
    
    UPDATE edfi.SchoolYearType
    SET CurrentSchoolYear = 'false'
    WHERE SchoolYear <> newSchoolYear;
END;
$_$;


ALTER FUNCTION edfi.setcurrentschoolyear(newschoolyear integer) OWNER TO postgres;

--
-- Name: absenceeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AbsenceEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AbsenceEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AbsenceEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: academichonorcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AcademicHonorCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AcademicHonorCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AcademicHonorCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: academicsubjectdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AcademicSubjectDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AcademicSubjectDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AcademicSubjectDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted() OWNER TO postgres;

--
-- Name: academicweek_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.academicweek_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.academicweek(
        oldschoolid, oldweekidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.schoolid, OLD.weekidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.academicweek_deleted() OWNER TO postgres;

--
-- Name: accommodationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccommodationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AccommodationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccommodationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted() OWNER TO postgres;

--
-- Name: accountabilityrating_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accountabilityrating_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.accountabilityrating(
        oldeducationorganizationid, oldratingtitle, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.ratingtitle, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accountabilityrating_deleted() OWNER TO postgres;

--
-- Name: accounttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AccountTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AccountTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AccountTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: achievementcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AchievementCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AchievementCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AchievementCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: additionalcredittypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdditionalCreditTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdditionalCreditTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdditionalCreditTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted() OWNER TO postgres;

--
-- Name: addresstypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AddressTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AddressTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AddressTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted() OWNER TO postgres;

--
-- Name: administrationenvironmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdministrationEnvironmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdministrationEnvironmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdministrationEnvironmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: administrativefundingcontroldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AdministrativeFundingControlDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AdministrativeFundingControlDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AdministrativeFundingControlDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted() OWNER TO postgres;

--
-- Name: ancestryethnicorigindescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AncestryEthnicOriginDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AncestryEthnicOriginDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AncestryEthnicOriginDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted() OWNER TO postgres;

--
-- Name: assessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessment(
        oldassessmentidentifier, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessment_deleted() OWNER TO postgres;

--
-- Name: assessmentcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentitem_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitem_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessmentitem(
        oldassessmentidentifier, oldidentificationcode, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.identificationcode, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitem_deleted() OWNER TO postgres;

--
-- Name: assessmentitemcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentItemCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentItemCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentItemCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentitemresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentItemResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentItemResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentItemResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentreportingmethoddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssessmentReportingMethodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssessmentReportingMethodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssessmentReportingMethodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted() OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.assessmentscorerangelearningstandard(
        oldassessmentidentifier, oldnamespace, oldscorerangeid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, OLD.scorerangeid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted() OWNER TO postgres;

--
-- Name: assignmentlatestatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AssignmentLateStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AssignmentLateStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AssignmentLateStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: attemptstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AttemptStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AttemptStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AttemptStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: attendanceeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.AttendanceEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.AttendanceEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.AttendanceEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: balancesheetdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.balancesheetdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.balancesheetdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.balancesheetdimension_deleted() OWNER TO postgres;

--
-- Name: barriertointernetaccessinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.BarrierToInternetAccessInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.BarrierToInternetAccessInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.BarrierToInternetAccessInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: behaviordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.behaviordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.BehaviorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.BehaviorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.BehaviorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.behaviordescriptor_deleted() OWNER TO postgres;

--
-- Name: bellschedule_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.bellschedule_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.bellschedule(
        oldbellschedulename, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.bellschedulename, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.bellschedule_deleted() OWNER TO postgres;

--
-- Name: calendar_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendar_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.calendar(
        oldcalendarcode, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendar_deleted() OWNER TO postgres;

--
-- Name: calendardate_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendardate_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.calendardate(
        oldcalendarcode, olddate, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.date, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendardate_deleted() OWNER TO postgres;

--
-- Name: calendareventdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CalendarEventDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CalendarEventDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CalendarEventDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted() OWNER TO postgres;

--
-- Name: calendartypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CalendarTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CalendarTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CalendarTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted() OWNER TO postgres;

--
-- Name: careerpathwaydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CareerPathwayDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CareerPathwayDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CareerPathwayDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted() OWNER TO postgres;

--
-- Name: charterapprovalagencytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CharterApprovalAgencyTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CharterApprovalAgencyTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CharterApprovalAgencyTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: charterstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CharterStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CharterStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CharterStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: chartofaccount_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.chartofaccount_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.chartofaccount(
        oldaccountidentifier, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.chartofaccount_deleted() OWNER TO postgres;

--
-- Name: citizenshipstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CitizenshipStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CitizenshipStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CitizenshipStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: classperiod_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classperiod_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.classperiod(
        oldclassperiodname, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.classperiodname, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classperiod_deleted() OWNER TO postgres;

--
-- Name: classperiod_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classperiod_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.classperiod(
        oldclassperiodname, oldschoolid, 
        newclassperiodname, newschoolid, 
        id, changeversion)
    VALUES (
        old.classperiodname, old.schoolid, 
        new.classperiodname, new.schoolid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classperiod_keychg() OWNER TO postgres;

--
-- Name: classroompositiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ClassroomPositionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ClassroomPositionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ClassroomPositionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted() OWNER TO postgres;

--
-- Name: cohort_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohort_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.cohort(
        oldcohortidentifier, oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.cohortidentifier, OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohort_deleted() OWNER TO postgres;

--
-- Name: cohortscopedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortScopeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortScopeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortScopeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted() OWNER TO postgres;

--
-- Name: cohorttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: cohortyeartypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CohortYearTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CohortYearTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CohortYearTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted() OWNER TO postgres;

--
-- Name: communityproviderlicense_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.communityproviderlicense_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.communityproviderlicense(
        oldcommunityproviderid, oldlicenseidentifier, oldlicensingorganization,
        id, discriminator, changeversion)
    VALUES (
        OLD.communityproviderid, OLD.licenseidentifier, OLD.licensingorganization, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.communityproviderlicense_deleted() OWNER TO postgres;

--
-- Name: competencyleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CompetencyLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CompetencyLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CompetencyLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: competencyobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.competencyobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.objectivegradeleveldescriptorid;

    INSERT INTO tracked_changes_edfi.competencyobjective(
        oldeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.objective, OLD.objectivegradeleveldescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.competencyobjective_deleted() OWNER TO postgres;

--
-- Name: contacttypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContactTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContactTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContactTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted() OWNER TO postgres;

--
-- Name: contentclassdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContentClassDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContentClassDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContentClassDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted() OWNER TO postgres;

--
-- Name: continuationofservicesreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ContinuationOfServicesReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ContinuationOfServicesReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ContinuationOfServicesReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: costratedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.costratedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CostRateDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CostRateDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CostRateDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.costratedescriptor_deleted() OWNER TO postgres;

--
-- Name: countrydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.countrydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CountryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CountryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CountryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.countrydescriptor_deleted() OWNER TO postgres;

--
-- Name: course_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.course_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.course(
        oldcoursecode, oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.coursecode, OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.course_deleted() OWNER TO postgres;

--
-- Name: courseattemptresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseAttemptResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseAttemptResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseAttemptResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: coursedefinedbydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseDefinedByDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseDefinedByDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseDefinedByDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted() OWNER TO postgres;

--
-- Name: coursegpaapplicabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseGPAApplicabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseGPAApplicabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseGPAApplicabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: courseidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: courselevelcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseLevelCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseLevelCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseLevelCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: courseoffering_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseoffering_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.courseoffering(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseoffering_deleted() OWNER TO postgres;

--
-- Name: courseoffering_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courseoffering_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.courseoffering(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname, 
        newlocalcoursecode, newschoolid, newschoolyear, newsessionname, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sessionname, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courseoffering_keychg() OWNER TO postgres;

--
-- Name: courserepeatcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CourseRepeatCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CourseRepeatCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CourseRepeatCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: coursetranscript_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.coursetranscript_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    dj2 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.courseattemptresultdescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    SELECT INTO dj2 * FROM edfi.descriptor j2 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_edfi.coursetranscript(
        oldcourseattemptresultdescriptorid, oldcourseattemptresultdescriptornamespace, oldcourseattemptresultdescriptorcodevalue, oldcoursecode, oldcourseeducationorganizationid, oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.courseattemptresultdescriptorid, dj0.namespace, dj0.codevalue, OLD.coursecode, OLD.courseeducationorganizationid, OLD.educationorganizationid, OLD.schoolyear, OLD.studentusi, dj1.studentuniqueid, OLD.termdescriptorid, dj2.namespace, dj2.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.coursetranscript_deleted() OWNER TO postgres;

--
-- Name: credential_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credential_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.stateofissuestateabbreviationdescriptorid;

    INSERT INTO tracked_changes_edfi.credential(
        oldcredentialidentifier, oldstateofissuestateabbreviationdescriptorid, oldstateofissuestateabbreviationdescriptornamespace, oldstateofissuestateabbreviationdescriptorcodevalue,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.credentialidentifier, OLD.stateofissuestateabbreviationdescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credential_deleted() OWNER TO postgres;

--
-- Name: credentialfielddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialFieldDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CredentialFieldDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialFieldDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted() OWNER TO postgres;

--
-- Name: credentialtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CredentialTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CredentialTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CredentialTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: creditcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CreditCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CreditCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CreditCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: credittypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.credittypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CreditTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CreditTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CreditTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.credittypedescriptor_deleted() OWNER TO postgres;

--
-- Name: cteprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CTEProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CTEProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CTEProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: curriculumuseddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.CurriculumUsedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.CurriculumUsedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.CurriculumUsedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted() OWNER TO postgres;

--
-- Name: deliverymethoddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DeliveryMethodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DeliveryMethodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DeliveryMethodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted() OWNER TO postgres;

--
-- Name: descriptormapping_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.descriptormapping_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptormapping(
        oldmappednamespace, oldmappedvalue, oldnamespace, oldvalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.mappednamespace, OLD.mappedvalue, OLD.namespace, OLD.value, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.descriptormapping_deleted() OWNER TO postgres;

--
-- Name: diagnosisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiagnosisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiagnosisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiagnosisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted() OWNER TO postgres;

--
-- Name: diplomaleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiplomaLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiplomaLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiplomaLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: diplomatypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DiplomaTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DiplomaTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DiplomaTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydesignationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDesignationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDesignationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDesignationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted() OWNER TO postgres;

--
-- Name: disabilitydeterminationsourcetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisabilityDeterminationSourceTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisabilityDeterminationSourceTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisabilityDeterminationSourceTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplineaction_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineaction_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.disciplineaction(
        olddisciplineactionidentifier, olddisciplinedate, oldstudentusi, oldstudentuniqueid, oldresponsibilityschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.disciplineactionidentifier, OLD.disciplinedate, OLD.studentusi, dj0.studentuniqueid, OLD.responsibilityschoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineaction_deleted() OWNER TO postgres;

--
-- Name: disciplineactionlengthdifferencereasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineActionLengthDifferenceReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineActionLengthDifferenceReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineActionLengthDifferenceReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplinedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted() OWNER TO postgres;

--
-- Name: disciplineincident_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineincident_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.disciplineincident(
        oldincidentidentifier, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineincident_deleted() OWNER TO postgres;

--
-- Name: disciplineincidentparticipationcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.DisciplineIncidentParticipationCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.DisciplineIncidentParticipationCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.DisciplineIncidentParticipationCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: educationalenvironmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationalEnvironmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationalEnvironmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationalEnvironmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: educationcontent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationcontent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationcontent(
        oldcontentidentifier,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.contentidentifier, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationcontent_deleted() OWNER TO postgres;

--
-- Name: educationorganization_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganization_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganization(
        oldeducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganization_deleted() OWNER TO postgres;

--
-- Name: educationorganizationassociationtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationAssociationTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationAssociationTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationAssociationTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationOrganizationIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationOrganizationIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationOrganizationIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescriptionass_e670ae_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationinterventionprescriptionassociation(
        oldeducationorganizationid, oldinterventionprescriptioneducationorganizationid, oldinterventionprescriptionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionprescriptioneducationorganizationid, OLD.interventionprescriptionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted() OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationnetworkassociation(
        oldeducationorganizationnetworkid, oldmembereducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationnetworkid, OLD.membereducationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted() OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.educationorganizationpeerassociation(
        oldeducationorganizationid, oldpeereducationorganizationid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.peereducationorganizationid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted() OWNER TO postgres;

--
-- Name: educationplandescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.educationplandescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EducationPlanDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EducationPlanDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EducationPlanDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.educationplandescriptor_deleted() OWNER TO postgres;

--
-- Name: electronicmailtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ElectronicMailTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ElectronicMailTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ElectronicMailTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: employmentstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EmploymentStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EmploymentStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EmploymentStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: entrygradelevelreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EntryGradeLevelReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EntryGradeLevelReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EntryGradeLevelReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: entrytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EntryTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EntryTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EntryTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: eventcircumstancedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.EventCircumstanceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.EventCircumstanceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.EventCircumstanceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted() OWNER TO postgres;

--
-- Name: exitwithdrawtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ExitWithdrawTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ExitWithdrawTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ExitWithdrawTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: feederschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.feederschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.feederschoolassociation(
        oldbegindate, oldfeederschoolid, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.feederschoolid, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.feederschoolassociation_deleted() OWNER TO postgres;

--
-- Name: financialcollectiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.FinancialCollectionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.FinancialCollectionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.FinancialCollectionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted() OWNER TO postgres;

--
-- Name: functiondimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.functiondimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.functiondimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.functiondimension_deleted() OWNER TO postgres;

--
-- Name: funddimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.funddimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.funddimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.funddimension_deleted() OWNER TO postgres;

--
-- Name: generalstudentprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.generalstudentprogramassociation(
        oldbegindate, oldeducationorganizationid, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted() OWNER TO postgres;

--
-- Name: grade_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.grade_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradetypedescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.grade(
        oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodschoolyear, oldgradingperiodsequence, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.gradetypedescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperioddescriptorid, dj1.namespace, dj1.codevalue, OLD.gradingperiodschoolyear, OLD.gradingperiodsequence, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.grade_deleted() OWNER TO postgres;

--
-- Name: grade_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.grade_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    ij1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
    ij2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradetypedescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.gradetypedescriptorid;
    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.gradingperioddescriptorid;
    SELECT INTO ij1 * FROM edfi.descriptor j1 WHERE descriptorid = new.gradingperioddescriptorid;
    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;
    SELECT INTO ij2 * FROM edfi.student j2 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.grade(
        oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodschoolyear, oldgradingperiodsequence, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newbegindate, newgradetypedescriptorid, newgradetypedescriptornamespace, newgradetypedescriptorcodevalue, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodschoolyear, newgradingperiodsequence, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.begindate, old.gradetypedescriptorid, dj0.namespace, dj0.codevalue, old.gradingperioddescriptorid, dj1.namespace, dj1.codevalue, old.gradingperiodschoolyear, old.gradingperiodsequence, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj2.studentuniqueid, 
        new.begindate, new.gradetypedescriptorid, ij0.namespace, ij0.codevalue, new.gradingperioddescriptorid, ij1.namespace, ij1.codevalue, new.gradingperiodschoolyear, new.gradingperiodsequence, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij2.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.grade_keychg() OWNER TO postgres;

--
-- Name: gradebookentry_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentry_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.gradebookentry(
        oldgradebookentryidentifier, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradebookentryidentifier, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentry_deleted() OWNER TO postgres;

--
-- Name: gradebookentry_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentry_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.gradebookentry(
        oldgradebookentryidentifier, oldnamespace, 
        newgradebookentryidentifier, newnamespace, 
        id, changeversion)
    VALUES (
        old.gradebookentryidentifier, old.namespace, 
        new.gradebookentryidentifier, new.namespace, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentry_keychg() OWNER TO postgres;

--
-- Name: gradebookentrytypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradebookEntryTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradebookEntryTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradebookEntryTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradeleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradeLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradeLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradeLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: gradepointaveragetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradePointAverageTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradePointAverageTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradePointAverageTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradeTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradeTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradeTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gradingperiod_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradingperiod_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    INSERT INTO tracked_changes_edfi.gradingperiod(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldperiodsequence, oldschoolid, oldschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.periodsequence, OLD.schoolid, OLD.schoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradingperiod_deleted() OWNER TO postgres;

--
-- Name: gradingperioddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GradingPeriodDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GradingPeriodDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GradingPeriodDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted() OWNER TO postgres;

--
-- Name: graduationplan_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.graduationplan_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.graduationplantypedescriptorid;

    INSERT INTO tracked_changes_edfi.graduationplan(
        oldeducationorganizationid, oldgraduationplantypedescriptorid, oldgraduationplantypedescriptornamespace, oldgraduationplantypedescriptorcodevalue, oldgraduationschoolyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.graduationplantypedescriptorid, dj0.namespace, dj0.codevalue, OLD.graduationschoolyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.graduationplan_deleted() OWNER TO postgres;

--
-- Name: graduationplantypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GraduationPlanTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GraduationPlanTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GraduationPlanTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted() OWNER TO postgres;

--
-- Name: gunfreeschoolsactreportingstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.GunFreeSchoolsActReportingStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.GunFreeSchoolsActReportingStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.GunFreeSchoolsActReportingStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: homelessprimarynighttimeresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.HomelessPrimaryNighttimeResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.HomelessPrimaryNighttimeResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.HomelessPrimaryNighttimeResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: homelessprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.HomelessProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.HomelessProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.HomelessProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: identificationdocumentusedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IdentificationDocumentUseDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IdentificationDocumentUseDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IdentificationDocumentUseDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted() OWNER TO postgres;

--
-- Name: incidentlocationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IncidentLocationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IncidentLocationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IncidentLocationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatorgroupdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorGroupDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorGroupDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorGroupDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted() OWNER TO postgres;

--
-- Name: indicatorleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.IndicatorLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.IndicatorLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.IndicatorLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: institutiontelephonenumbertypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InstitutionTelephoneNumberTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InstitutionTelephoneNumberTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InstitutionTelephoneNumberTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted() OWNER TO postgres;

--
-- Name: interactivitystyledescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InteractivityStyleDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InteractivityStyleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InteractivityStyleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted() OWNER TO postgres;

--
-- Name: internetaccessdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetAccessDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetAccessDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetAccessDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted() OWNER TO postgres;

--
-- Name: internetaccesstypeinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetAccessTypeInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetAccessTypeInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetAccessTypeInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: internetperformanceinresidencedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InternetPerformanceInResidenceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InternetPerformanceInResidenceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InternetPerformanceInResidenceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted() OWNER TO postgres;

--
-- Name: intervention_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.intervention_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.intervention(
        oldeducationorganizationid, oldinterventionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.intervention_deleted() OWNER TO postgres;

--
-- Name: interventionclassdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InterventionClassDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InterventionClassDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InterventionClassDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted() OWNER TO postgres;

--
-- Name: interventioneffectivenessratingdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.InterventionEffectivenessRatingDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.InterventionEffectivenessRatingDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.InterventionEffectivenessRatingDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted() OWNER TO postgres;

--
-- Name: interventionprescription_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionprescription_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.interventionprescription(
        oldeducationorganizationid, oldinterventionprescriptionidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionprescriptionidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionprescription_deleted() OWNER TO postgres;

--
-- Name: interventionstudy_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.interventionstudy_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.interventionstudy(
        oldeducationorganizationid, oldinterventionstudyidentificationcode,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionstudyidentificationcode, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.interventionstudy_deleted() OWNER TO postgres;

--
-- Name: languagedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languagedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languagedescriptor_deleted() OWNER TO postgres;

--
-- Name: languageinstructionprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageInstructionProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageInstructionProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageInstructionProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: languageusedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.languageusedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LanguageUseDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LanguageUseDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LanguageUseDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.languageusedescriptor_deleted() OWNER TO postgres;

--
-- Name: learningobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningobjective(
        oldlearningobjectiveid, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.learningobjectiveid, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningobjective_deleted() OWNER TO postgres;

--
-- Name: learningstandard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningstandard(
        oldlearningstandardid,
        id, oldnamespace, discriminator, changeversion)
    VALUES (
        OLD.learningstandardid, 
        OLD.id, OLD.namespace, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandard_deleted() OWNER TO postgres;

--
-- Name: learningstandardcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.learningstandardequivalenceassociation(
        oldnamespace, oldsourcelearningstandardid, oldtargetlearningstandardid,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.sourcelearningstandardid, OLD.targetlearningstandardid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted() OWNER TO postgres;

--
-- Name: learningstandardequivalencestrengthdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardEquivalenceStrengthDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardEquivalenceStrengthDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardEquivalenceStrengthDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted() OWNER TO postgres;

--
-- Name: learningstandardscopedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LearningStandardScopeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LearningStandardScopeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LearningStandardScopeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted() OWNER TO postgres;

--
-- Name: levelofeducationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LevelOfEducationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LevelOfEducationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LevelOfEducationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted() OWNER TO postgres;

--
-- Name: licensestatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LicenseStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LicenseStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LicenseStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: licensetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LicenseTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LicenseTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LicenseTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: limitedenglishproficiencydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LimitedEnglishProficiencyDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LimitedEnglishProficiencyDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LimitedEnglishProficiencyDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted() OWNER TO postgres;

--
-- Name: localaccount_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localaccount_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localaccount(
        oldaccountidentifier, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localaccount_deleted() OWNER TO postgres;

--
-- Name: localactual_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localactual_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localactual(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localactual_deleted() OWNER TO postgres;

--
-- Name: localbudget_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localbudget_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localbudget(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localbudget_deleted() OWNER TO postgres;

--
-- Name: localcontractedstaff_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localcontractedstaff_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.localcontractedstaff(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localcontractedstaff_deleted() OWNER TO postgres;

--
-- Name: localedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LocaleDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LocaleDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LocaleDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localedescriptor_deleted() OWNER TO postgres;

--
-- Name: localeducationagencycategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.LocalEducationAgencyCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.LocalEducationAgencyCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.LocalEducationAgencyCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: localencumbrance_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localencumbrance_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.localencumbrance(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localencumbrance_deleted() OWNER TO postgres;

--
-- Name: localpayroll_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.localpayroll_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.localpayroll(
        oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.accountidentifier, OLD.asofdate, OLD.educationorganizationid, OLD.fiscalyear, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.localpayroll_deleted() OWNER TO postgres;

--
-- Name: location_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.location_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.location(
        oldclassroomidentificationcode, oldschoolid,
        id, discriminator, changeversion)
    VALUES (
        OLD.classroomidentificationcode, OLD.schoolid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.location_deleted() OWNER TO postgres;

--
-- Name: location_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.location_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.location(
        oldclassroomidentificationcode, oldschoolid, 
        newclassroomidentificationcode, newschoolid, 
        id, changeversion)
    VALUES (
        old.classroomidentificationcode, old.schoolid, 
        new.classroomidentificationcode, new.schoolid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.location_keychg() OWNER TO postgres;

--
-- Name: magnetspecialprogramemphasisschooldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MagnetSpecialProgramEmphasisSchoolDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MagnetSpecialProgramEmphasisSchoolDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MagnetSpecialProgramEmphasisSchoolDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted() OWNER TO postgres;

--
-- Name: mediumofinstructiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MediumOfInstructionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MediumOfInstructionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MediumOfInstructionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted() OWNER TO postgres;

--
-- Name: methodcreditearneddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MethodCreditEarnedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MethodCreditEarnedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MethodCreditEarnedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted() OWNER TO postgres;

--
-- Name: migranteducationprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MigrantEducationProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MigrantEducationProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MigrantEducationProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: modelentitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ModelEntityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ModelEntityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ModelEntityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted() OWNER TO postgres;

--
-- Name: monitoreddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.MonitoredDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.MonitoredDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.MonitoredDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NeglectedOrDelinquentProgramDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NeglectedOrDelinquentProgramDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NeglectedOrDelinquentProgramDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted() OWNER TO postgres;

--
-- Name: neglectedordelinquentprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NeglectedOrDelinquentProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NeglectedOrDelinquentProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NeglectedOrDelinquentProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: networkpurposedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.NetworkPurposeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.NetworkPurposeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.NetworkPurposeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted() OWNER TO postgres;

--
-- Name: objectdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.objectdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.objectdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.objectdimension_deleted() OWNER TO postgres;

--
-- Name: objectiveassessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.objectiveassessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.objectiveassessment(
        oldassessmentidentifier, oldidentificationcode, oldnamespace,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.identificationcode, OLD.namespace, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.objectiveassessment_deleted() OWNER TO postgres;

--
-- Name: oldethnicitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.oldethnicitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OldEthnicityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OldEthnicityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OldEthnicityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.oldethnicitydescriptor_deleted() OWNER TO postgres;

--
-- Name: openstaffposition_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.openstaffposition_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.openstaffposition(
        oldeducationorganizationid, oldrequisitionnumber,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.requisitionnumber, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.openstaffposition_deleted() OWNER TO postgres;

--
-- Name: operationalstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OperationalStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OperationalStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OperationalStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: operationalunitdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.operationalunitdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.operationalunitdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.operationalunitdimension_deleted() OWNER TO postgres;

--
-- Name: othernametypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.OtherNameTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.OtherNameTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.OtherNameTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted() OWNER TO postgres;

--
-- Name: parent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.parent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.parent(
        oldparentusi, oldparentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.parentusi, OLD.parentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.parent_deleted() OWNER TO postgres;

--
-- Name: parent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.parent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.parent(
        oldparentusi, oldparentuniqueid, 
        newparentusi, newparentuniqueid, 
        id, changeversion)
    VALUES (
        old.parentusi, old.parentuniqueid, 
        new.parentusi, new.parentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.parent_keychg() OWNER TO postgres;

--
-- Name: participationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.participationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ParticipationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ParticipationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ParticipationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.participationdescriptor_deleted() OWNER TO postgres;

--
-- Name: participationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ParticipationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ParticipationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ParticipationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: performancebaseconversiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceBaseConversionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PerformanceBaseConversionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceBaseConversionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted() OWNER TO postgres;

--
-- Name: performanceleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PerformanceLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PerformanceLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PerformanceLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: person_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.person_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.sourcesystemdescriptorid;

    INSERT INTO tracked_changes_edfi.person(
        oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.personid, OLD.sourcesystemdescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.person_deleted() OWNER TO postgres;

--
-- Name: personalinformationverificationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PersonalInformationVerificationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PersonalInformationVerificationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PersonalInformationVerificationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted() OWNER TO postgres;

--
-- Name: platformtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PlatformTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PlatformTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PlatformTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: populationserveddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PopulationServedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PopulationServedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PopulationServedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted() OWNER TO postgres;

--
-- Name: postingresultdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostingResultDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostingResultDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostingResultDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted() OWNER TO postgres;

--
-- Name: postsecondaryevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.postsecondaryeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.postsecondaryevent(
        oldeventdate, oldpostsecondaryeventcategorydescriptorid, oldpostsecondaryeventcategorydescriptornamespace, oldpostsecondaryeventcategorydescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.eventdate, OLD.postsecondaryeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryevent_deleted() OWNER TO postgres;

--
-- Name: postsecondaryeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostSecondaryEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostSecondaryEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostSecondaryEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: postsecondaryinstitutionleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PostSecondaryInstitutionLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PostSecondaryInstitutionLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PostSecondaryInstitutionLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceaccessdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceAccessDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceAccessDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceAccessDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceawayfromschooldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceAwayFromSchoolDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceAwayFromSchoolDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceAwayFromSchoolDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted() OWNER TO postgres;

--
-- Name: primarylearningdeviceproviderdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PrimaryLearningDeviceProviderDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PrimaryLearningDeviceProviderDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PrimaryLearningDeviceProviderDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted() OWNER TO postgres;

--
-- Name: proficiencydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProficiencyDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProficiencyDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProficiencyDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted() OWNER TO postgres;

--
-- Name: program_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.program_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.program(
        oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.program_deleted() OWNER TO postgres;

--
-- Name: programassignmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramAssignmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramAssignmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramAssignmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: programcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: programdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.programdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programdimension_deleted() OWNER TO postgres;

--
-- Name: programsponsordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramSponsorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramSponsorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramSponsorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted() OWNER TO postgres;

--
-- Name: programtypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.programtypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgramTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgramTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgramTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.programtypedescriptor_deleted() OWNER TO postgres;

--
-- Name: progressdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.progressdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgressDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgressDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgressDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.progressdescriptor_deleted() OWNER TO postgres;

--
-- Name: progressleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProgressLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProgressLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProgressLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: projectdimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.projectdimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.projectdimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.projectdimension_deleted() OWNER TO postgres;

--
-- Name: providercategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: providerprofitabilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderProfitabilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderProfitabilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderProfitabilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: providerstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ProviderStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ProviderStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ProviderStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: publicationstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.PublicationStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.PublicationStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.PublicationStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: questionformdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.questionformdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.QuestionFormDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.QuestionFormDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.QuestionFormDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.questionformdescriptor_deleted() OWNER TO postgres;

--
-- Name: racedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.racedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RaceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RaceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RaceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.racedescriptor_deleted() OWNER TO postgres;

--
-- Name: reasonexiteddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReasonExitedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReasonExitedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReasonExitedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted() OWNER TO postgres;

--
-- Name: reasonnottesteddescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReasonNotTestedDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReasonNotTestedDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReasonNotTestedDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted() OWNER TO postgres;

--
-- Name: recognitiontypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RecognitionTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RecognitionTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RecognitionTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted() OWNER TO postgres;

--
-- Name: relationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.relationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RelationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RelationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RelationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.relationdescriptor_deleted() OWNER TO postgres;

--
-- Name: repeatidentifierdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RepeatIdentifierDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RepeatIdentifierDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RepeatIdentifierDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted() OWNER TO postgres;

--
-- Name: reportcard_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reportcard_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.reportcard(
        oldeducationorganizationid, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldgradingperiodsequence, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.gradingperiodsequence, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reportcard_deleted() OWNER TO postgres;

--
-- Name: reporterdescriptiondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReporterDescriptionDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReporterDescriptionDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReporterDescriptionDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted() OWNER TO postgres;

--
-- Name: reportingtagdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ReportingTagDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ReportingTagDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ReportingTagDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted() OWNER TO postgres;

--
-- Name: residencystatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResidencyStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResidencyStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResidencyStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: responseindicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResponseIndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResponseIndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResponseIndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: responsibilitydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResponsibilityDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResponsibilityDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResponsibilityDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted() OWNER TO postgres;

--
-- Name: restraintevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.restraintevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.restraintevent(
        oldrestrainteventidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.restrainteventidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.restraintevent_deleted() OWNER TO postgres;

--
-- Name: restrainteventreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RestraintEventReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RestraintEventReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RestraintEventReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: resultdatatypetypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ResultDatatypeTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ResultDatatypeTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ResultDatatypeTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted() OWNER TO postgres;

--
-- Name: retestindicatordescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.RetestIndicatorDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.RetestIndicatorDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.RetestIndicatorDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolchoiceimplementstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolChoiceImplementStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolChoiceImplementStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolChoiceImplementStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolfoodserviceprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolFoodServiceProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolFoodServiceProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolFoodServiceProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: schooltypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SchoolTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SchoolTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SchoolTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted() OWNER TO postgres;

--
-- Name: schoolyeartype_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.schoolyeartype_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.schoolyeartype(
        oldschoolyear,
        id, changeversion)
    VALUES (
        OLD.schoolyear, 
        OLD.id, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.schoolyeartype_deleted() OWNER TO postgres;

--
-- Name: section_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.section_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.section(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.section_deleted() OWNER TO postgres;

--
-- Name: section_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.section_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.section(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, 
        newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.section_keychg() OWNER TO postgres;

--
-- Name: sectionattendancetakenevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.sectionattendancetakenevent(
        oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.calendarcode, OLD.date, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted() OWNER TO postgres;

--
-- Name: sectionattendancetakenevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.sectionattendancetakenevent(
        oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, 
        newcalendarcode, newdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, 
        id, changeversion)
    VALUES (
        old.calendarcode, old.date, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, 
        new.calendarcode, new.date, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg() OWNER TO postgres;

--
-- Name: sectioncharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SectionCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SectionCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SectionCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: separationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.separationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SeparationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SeparationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SeparationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.separationdescriptor_deleted() OWNER TO postgres;

--
-- Name: separationreasondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SeparationReasonDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SeparationReasonDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SeparationReasonDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted() OWNER TO postgres;

--
-- Name: servicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.servicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.ServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.ServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.ServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.servicedescriptor_deleted() OWNER TO postgres;

--
-- Name: session_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.session_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.session(
        oldschoolid, oldschoolyear, oldsessionname,
        id, discriminator, changeversion)
    VALUES (
        OLD.schoolid, OLD.schoolyear, OLD.sessionname, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.session_deleted() OWNER TO postgres;

--
-- Name: session_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.session_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.session(
        oldschoolid, oldschoolyear, oldsessionname, 
        newschoolid, newschoolyear, newsessionname, 
        id, changeversion)
    VALUES (
        old.schoolid, old.schoolyear, old.sessionname, 
        new.schoolid, new.schoolyear, new.sessionname, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.session_keychg() OWNER TO postgres;

--
-- Name: sexdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sexdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SexDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SexDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SexDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sexdescriptor_deleted() OWNER TO postgres;

--
-- Name: sourcedimension_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sourcedimension_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.sourcedimension(
        oldcode, oldfiscalyear,
        id, discriminator, changeversion)
    VALUES (
        OLD.code, OLD.fiscalyear, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sourcedimension_deleted() OWNER TO postgres;

--
-- Name: sourcesystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SourceSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SourceSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SourceSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: specialeducationprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SpecialEducationProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SpecialEducationProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SpecialEducationProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: specialeducationsettingdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SpecialEducationSettingDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SpecialEducationSettingDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SpecialEducationSettingDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted() OWNER TO postgres;

--
-- Name: staff_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staff_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.staff(
        oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.staffusi, OLD.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staff_deleted() OWNER TO postgres;

--
-- Name: staff_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staff_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.staff(
        oldstaffusi, oldstaffuniqueid, 
        newstaffusi, newstaffuniqueid, 
        id, changeversion)
    VALUES (
        old.staffusi, old.staffuniqueid, 
        new.staffusi, new.staffuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staff_keychg() OWNER TO postgres;

--
-- Name: staffabsenceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffabsenceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.absenceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffabsenceevent(
        oldabsenceeventcategorydescriptorid, oldabsenceeventcategorydescriptornamespace, oldabsenceeventcategorydescriptorcodevalue, oldeventdate, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.absenceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffabsenceevent_deleted() OWNER TO postgres;

--
-- Name: staffclassificationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffClassificationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffClassificationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffClassificationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted() OWNER TO postgres;

--
-- Name: staffcohortassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffcohortassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffcohortassociation(
        oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.cohortidentifier, OLD.educationorganizationid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffcohortassociation_deleted() OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffdisciplineincidentassociation(
        oldincidentidentifier, oldschoolid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.staffclassificationdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationassignmentassociation(
        oldbegindate, oldeducationorganizationid, oldstaffclassificationdescriptorid, oldstaffclassificationdescriptornamespace, oldstaffclassificationdescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.staffclassificationdescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationcontactassociation(
        oldcontacttitle, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.contacttitle, OLD.educationorganizationid, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted() OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.employmentstatusdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffeducationorganizationemploymentassociation(
        oldeducationorganizationid, oldemploymentstatusdescriptorid, oldemploymentstatusdescriptornamespace, oldemploymentstatusdescriptorcodevalue, oldhiredate, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.employmentstatusdescriptorid, dj0.namespace, dj0.codevalue, OLD.hiredate, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted() OWNER TO postgres;

--
-- Name: staffidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: staffleave_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffleave_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.staffleaveeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffleave(
        oldbegindate, oldstaffleaveeventcategorydescriptorid, oldstaffleaveeventcategorydescriptornamespace, oldstaffleaveeventcategorydescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.staffleaveeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffleave_deleted() OWNER TO postgres;

--
-- Name: staffleaveeventcategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StaffLeaveEventCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StaffLeaveEventCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StaffLeaveEventCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: staffprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffprogramassociation(
        oldbegindate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffprogramassociation_deleted() OWNER TO postgres;

--
-- Name: staffschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programassignmentdescriptorid;

    SELECT INTO dj1 * FROM edfi.staff j1 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffschoolassociation(
        oldprogramassignmentdescriptorid, oldprogramassignmentdescriptornamespace, oldprogramassignmentdescriptorcodevalue, oldschoolid, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.programassignmentdescriptorid, dj0.namespace, dj0.codevalue, OLD.schoolid, OLD.staffusi, dj1.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffschoolassociation_deleted() OWNER TO postgres;

--
-- Name: staffsectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffsectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.staffsectionassociation(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.staffusi, dj0.staffuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffsectionassociation_deleted() OWNER TO postgres;

--
-- Name: staffsectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.staffsectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
    ij0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;
    SELECT INTO ij0 * FROM edfi.staff j0 WHERE staffusi = new.staffusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.staffsectionassociation(
        oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid, 
        newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstaffusi, newstaffuniqueid, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.staffusi, dj0.staffuniqueid, 
        new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.staffusi, ij0.staffuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.staffsectionassociation_keychg() OWNER TO postgres;

--
-- Name: stateabbreviationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StateAbbreviationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StateAbbreviationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StateAbbreviationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted() OWNER TO postgres;

--
-- Name: student_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.student_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.student(
        oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.studentusi, OLD.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.student_deleted() OWNER TO postgres;

--
-- Name: student_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.student_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.student(
        oldstudentusi, oldstudentuniqueid, 
        newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.studentusi, old.studentuniqueid, 
        new.studentusi, new.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.student_keychg() OWNER TO postgres;

--
-- Name: studentacademicrecord_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentacademicrecord_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.termdescriptorid;

    INSERT INTO tracked_changes_edfi.studentacademicrecord(
        oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.schoolyear, OLD.studentusi, dj0.studentuniqueid, OLD.termdescriptorid, dj1.namespace, dj1.codevalue, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentacademicrecord_deleted() OWNER TO postgres;

--
-- Name: studentassessment_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentassessment_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentassessment(
        oldassessmentidentifier, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.namespace, OLD.studentassessmentidentifier, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentassessment_deleted() OWNER TO postgres;

--
-- Name: studentassessmenteducationorganizationassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.educationorganizationassociationtypedescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentassessmenteducationorganizationassociation(
        oldassessmentidentifier, oldeducationorganizationassociationtypedescriptorid, oldeducationorganizationassociationtypedescriptornamespace, oldeducationorganizationassociationtypedescriptorcodevalue, oldeducationorganizationid, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.assessmentidentifier, OLD.educationorganizationassociationtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.namespace, OLD.studentassessmentidentifier, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted() OWNER TO postgres;

--
-- Name: studentcharacteristicdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentCharacteristicDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentCharacteristicDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentCharacteristicDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted() OWNER TO postgres;

--
-- Name: studentcohortassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcohortassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcohortassociation(
        oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.cohortidentifier, OLD.educationorganizationid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcohortassociation_deleted() OWNER TO postgres;

--
-- Name: studentcompetencyobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.objectivegradeleveldescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentcompetencyobjective(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldgradingperiodsequence, oldobjective, oldobjectiveeducationorganizationid, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.gradingperiodsequence, OLD.objective, OLD.objectiveeducationorganizationid, OLD.objectivegradeleveldescriptorid, dj1.namespace, dj1.codevalue, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentassociation(
        oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentassociation_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.behaviordescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentbehaviorassociation(
        oldbehaviordescriptorid, oldbehaviordescriptornamespace, oldbehaviordescriptorcodevalue, oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.behaviordescriptorid, dj0.namespace, dj0.codevalue, OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted() OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation(
        oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.incidentidentifier, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted() OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studenteducationorganizationassociation(
        oldeducationorganizationid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted() OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.responsibilitydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studenteducationorganizationresponsibilityassociation(
        oldbegindate, oldeducationorganizationid, oldresponsibilitydescriptorid, oldresponsibilitydescriptornamespace, oldresponsibilitydescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.educationorganizationid, OLD.responsibilitydescriptorid, dj0.namespace, dj0.codevalue, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted() OWNER TO postgres;

--
-- Name: studentgradebookentry_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentgradebookentry_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentgradebookentry(
        oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradebookentryidentifier, OLD.namespace, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentgradebookentry_deleted() OWNER TO postgres;

--
-- Name: studentgradebookentry_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentgradebookentry_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentgradebookentry(
        oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid, 
        newgradebookentryidentifier, newnamespace, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.gradebookentryidentifier, old.namespace, old.studentusi, dj0.studentuniqueid, 
        new.gradebookentryidentifier, new.namespace, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentgradebookentry_keychg() OWNER TO postgres;

--
-- Name: studentidentificationsystemdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentIdentificationSystemDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentIdentificationSystemDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentIdentificationSystemDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted() OWNER TO postgres;

--
-- Name: studentinterventionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentinterventionassociation(
        oldeducationorganizationid, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.interventionidentificationcode, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted() OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentinterventionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.eventdate, OLD.interventionidentificationcode, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentlearningobjective_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentlearningobjective_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.gradingperioddescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentlearningobjective(
        oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldgradingperiodsequence, oldlearningobjectiveid, oldnamespace, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.gradingperioddescriptorid, dj0.namespace, dj0.codevalue, OLD.gradingperiodschoolid, OLD.gradingperiodschoolyear, OLD.gradingperiodsequence, OLD.learningobjectiveid, OLD.namespace, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentlearningobjective_deleted() OWNER TO postgres;

--
-- Name: studentparentassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentparentassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.parent%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.parent j0 WHERE parentusi = old.parentusi;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentparentassociation(
        oldparentusi, oldparentuniqueid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.parentusi, dj0.parentuniqueid, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentparentassociation_deleted() OWNER TO postgres;

--
-- Name: studentparticipationcodedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.StudentParticipationCodeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.StudentParticipationCodeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.StudentParticipationCodeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted() OWNER TO postgres;

--
-- Name: studentprogramattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.descriptor%ROWTYPE;
    dj2 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.descriptor j1 WHERE descriptorid = old.programtypedescriptorid;

    SELECT INTO dj2 * FROM edfi.student j2 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentprogramattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.educationorganizationid, OLD.eventdate, OLD.programeducationorganizationid, OLD.programname, OLD.programtypedescriptorid, dj1.namespace, dj1.codevalue, OLD.studentusi, dj2.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentschoolassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentschoolassociation(
        oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.entrydate, OLD.schoolid, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolassociation_deleted() OWNER TO postgres;

--
-- Name: studentschoolassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentschoolassociation(
        oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid, 
        newentrydate, newschoolid, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.entrydate, old.schoolid, old.studentusi, dj0.studentuniqueid, 
        new.entrydate, new.schoolid, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolassociation_keychg() OWNER TO postgres;

--
-- Name: studentschoolattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentschoolattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.schoolid, OLD.schoolyear, OLD.sessionname, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentschoolattendanceevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    ij1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.attendanceeventcategorydescriptorid;
    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;
    SELECT INTO ij1 * FROM edfi.student j1 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentschoolattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newschoolid, newschoolyear, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, old.eventdate, old.schoolid, old.schoolyear, old.sessionname, old.studentusi, dj1.studentuniqueid, 
        new.attendanceeventcategorydescriptorid, ij0.namespace, ij0.codevalue, new.eventdate, new.schoolid, new.schoolyear, new.sessionname, new.studentusi, ij1.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg() OWNER TO postgres;

--
-- Name: studentsectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.begindate, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj0.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionassociation_deleted() OWNER TO postgres;

--
-- Name: studentsectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.student%ROWTYPE;
    ij0 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.student j0 WHERE studentusi = old.studentusi;
    SELECT INTO ij0 * FROM edfi.student j0 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentsectionassociation(
        oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.begindate, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj0.studentuniqueid, 
        new.begindate, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij0.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionassociation_keychg() OWNER TO postgres;

--
-- Name: studentsectionattendanceevent_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;

    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;

    INSERT INTO tracked_changes_edfi.studentsectionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid,
        id, discriminator, changeversion)
    VALUES (
        OLD.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, OLD.eventdate, OLD.localcoursecode, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.studentusi, dj1.studentuniqueid, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted() OWNER TO postgres;

--
-- Name: studentsectionattendanceevent_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
    ij0 edfi.descriptor%ROWTYPE;
    dj1 edfi.student%ROWTYPE;
    ij1 edfi.student%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.attendanceeventcategorydescriptorid;
    SELECT INTO ij0 * FROM edfi.descriptor j0 WHERE descriptorid = new.attendanceeventcategorydescriptorid;
    SELECT INTO dj1 * FROM edfi.student j1 WHERE studentusi = old.studentusi;
    SELECT INTO ij1 * FROM edfi.student j1 WHERE studentusi = new.studentusi;

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.studentsectionattendanceevent(
        oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, 
        newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, 
        id, changeversion)
    VALUES (
        old.attendanceeventcategorydescriptorid, dj0.namespace, dj0.codevalue, old.eventdate, old.localcoursecode, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.studentusi, dj1.studentuniqueid, 
        new.attendanceeventcategorydescriptorid, ij0.namespace, ij0.codevalue, new.eventdate, new.localcoursecode, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.studentusi, ij1.studentuniqueid, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg() OWNER TO postgres;

--
-- Name: submissionstatusdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SubmissionStatusDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SubmissionStatusDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SubmissionStatusDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted() OWNER TO postgres;

--
-- Name: survey_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.survey_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.survey(
        oldnamespace, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.survey_deleted() OWNER TO postgres;

--
-- Name: surveycategorydescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SurveyCategoryDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SurveyCategoryDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SurveyCategoryDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted() OWNER TO postgres;

--
-- Name: surveycourseassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveycourseassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveycourseassociation(
        oldcoursecode, oldeducationorganizationid, oldnamespace, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.coursecode, OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveycourseassociation_deleted() OWNER TO postgres;

--
-- Name: surveyleveldescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.SurveyLevelDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.SurveyLevelDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.SurveyLevelDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted() OWNER TO postgres;

--
-- Name: surveyprogramassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.descriptor%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.descriptor j0 WHERE descriptorid = old.programtypedescriptorid;

    INSERT INTO tracked_changes_edfi.surveyprogramassociation(
        oldeducationorganizationid, oldnamespace, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.programname, OLD.programtypedescriptorid, dj0.namespace, dj0.codevalue, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted() OWNER TO postgres;

--
-- Name: surveyquestion_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyquestion_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyquestion(
        oldnamespace, oldquestioncode, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.questioncode, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyquestion_deleted() OWNER TO postgres;

--
-- Name: surveyquestionresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyquestionresponse(
        oldnamespace, oldquestioncode, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.questioncode, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted() OWNER TO postgres;

--
-- Name: surveyresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyresponse(
        oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponse_deleted() OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation(
        oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.surveyresponsestafftargetassociation(
        oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.staffusi, dj0.staffuniqueid, OLD.surveyidentifier, OLD.surveyresponseidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted() OWNER TO postgres;

--
-- Name: surveysection_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysection_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysection(
        oldnamespace, oldsurveyidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysection_deleted() OWNER TO postgres;

--
-- Name: surveysectionassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionassociation(
        oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier,
        id, discriminator, changeversion)
    VALUES (
        OLD.localcoursecode, OLD.namespace, OLD.schoolid, OLD.schoolyear, OLD.sectionidentifier, OLD.sessionname, OLD.surveyidentifier, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionassociation_deleted() OWNER TO postgres;

--
-- Name: surveysectionassociation_keychg(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionassociation_keychg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN

    -- Handle key changes
    INSERT INTO tracked_changes_edfi.surveysectionassociation(
        oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier, 
        newlocalcoursecode, newnamespace, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newsurveyidentifier, 
        id, changeversion)
    VALUES (
        old.localcoursecode, old.namespace, old.schoolid, old.schoolyear, old.sectionidentifier, old.sessionname, old.surveyidentifier, 
        new.localcoursecode, new.namespace, new.schoolid, new.schoolyear, new.sectionidentifier, new.sessionname, new.surveyidentifier, 
        old.id, (nextval('changes.changeversionsequence')));

    RETURN null;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionassociation_keychg() OWNER TO postgres;

--
-- Name: surveysectionresponse_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponse_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionresponse(
        oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponse_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtarget_730be1_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation(
        oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.educationorganizationid, OLD.namespace, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted() OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dj0 edfi.staff%ROWTYPE;
BEGIN
    SELECT INTO dj0 * FROM edfi.staff j0 WHERE staffusi = old.staffusi;

    INSERT INTO tracked_changes_edfi.surveysectionresponsestafftargetassociation(
        oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle,
        id, discriminator, changeversion)
    VALUES (
        OLD.namespace, OLD.staffusi, dj0.staffuniqueid, OLD.surveyidentifier, OLD.surveyresponseidentifier, OLD.surveysectiontitle, 
        OLD.id, OLD.discriminator, nextval('changes.changeversionsequence'));

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted() OWNER TO postgres;

--
-- Name: teachingcredentialbasisdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TeachingCredentialBasisDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TeachingCredentialBasisDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TeachingCredentialBasisDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted() OWNER TO postgres;

--
-- Name: teachingcredentialdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TeachingCredentialDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TeachingCredentialDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TeachingCredentialDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted() OWNER TO postgres;

--
-- Name: technicalskillsassessmentdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TechnicalSkillsAssessmentDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TechnicalSkillsAssessmentDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TechnicalSkillsAssessmentDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted() OWNER TO postgres;

--
-- Name: telephonenumbertypedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TelephoneNumberTypeDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TelephoneNumberTypeDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TelephoneNumberTypeDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted() OWNER TO postgres;

--
-- Name: termdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.termdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TermDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TermDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TermDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.termdescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaparticipantdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartAParticipantDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartAParticipantDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartAParticipantDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaprogramservicedescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartAProgramServiceDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartAProgramServiceDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartAProgramServiceDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted() OWNER TO postgres;

--
-- Name: titleipartaschooldesignationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TitleIPartASchoolDesignationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TitleIPartASchoolDesignationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TitleIPartASchoolDesignationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted() OWNER TO postgres;

--
-- Name: tribalaffiliationdescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.TribalAffiliationDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.TribalAffiliationDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.TribalAffiliationDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted() OWNER TO postgres;

--
-- Name: visadescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.visadescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.VisaDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.VisaDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.VisaDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.visadescriptor_deleted() OWNER TO postgres;

--
-- Name: weapondescriptor_deleted(); Type: FUNCTION; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE FUNCTION tracked_changes_edfi.weapondescriptor_deleted() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    INSERT INTO tracked_changes_edfi.descriptor(olddescriptorid, oldcodevalue, oldnamespace, id, discriminator, changeversion)
    SELECT OLD.WeaponDescriptorId, b.codevalue, b.namespace, b.id, 'edfi.WeaponDescriptor', nextval('changes.ChangeVersionSequence')
    FROM edfi.descriptor b WHERE old.WeaponDescriptorId = b.descriptorid ;

    RETURN NULL;
END;
$$;


ALTER FUNCTION tracked_changes_edfi.weapondescriptor_deleted() OWNER TO postgres;

--
-- Name: getedfiodsversion(); Type: FUNCTION; Schema: util; Owner: postgres
--

CREATE FUNCTION util.getedfiodsversion() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
BEGIN	
   RETURN '6.1';
END;
$$;


ALTER FUNCTION util.getedfiodsversion() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: educationorganizationidtoeducationorganizationid; Type: TABLE; Schema: auth; Owner: postgres
--

CREATE TABLE auth.educationorganizationidtoeducationorganizationid (
    sourceeducationorganizationid integer NOT NULL,
    targeteducationorganizationid integer NOT NULL
);


ALTER TABLE auth.educationorganizationidtoeducationorganizationid OWNER TO postgres;

--
-- Name: changeversionsequence; Type: SEQUENCE; Schema: changes; Owner: postgres
--

CREATE SEQUENCE changes.changeversionsequence
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE changes.changeversionsequence OWNER TO postgres;

--
-- Name: studentparentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparentassociation (
    parentusi integer NOT NULL,
    studentusi integer NOT NULL,
    relationdescriptorid integer,
    primarycontactstatus boolean,
    liveswith boolean,
    emergencycontactstatus boolean,
    contactpriority integer,
    contactrestrictions character varying(250),
    legalguardian boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentparentassociation OWNER TO postgres;

--
-- Name: TABLE studentparentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparentassociation IS 'This association relates students to their parents, guardians, or caretakers.';


--
-- Name: COLUMN studentparentassociation.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN studentparentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentparentassociation.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.relationdescriptorid IS 'The nature of an individual''s relationship to a student, primarily used to capture family relationships.';


--
-- Name: COLUMN studentparentassociation.primarycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.primarycontactstatus IS 'Indicator of whether the person is a primary parental contact for the student.';


--
-- Name: COLUMN studentparentassociation.liveswith; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.liveswith IS 'Indicator of whether the student lives with the associated parent.';


--
-- Name: COLUMN studentparentassociation.emergencycontactstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.emergencycontactstatus IS 'Indicator of whether the person is a designated emergency contact for the student.';


--
-- Name: COLUMN studentparentassociation.contactpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.contactpriority IS 'The numeric order of the preferred sequence or priority of contact.';


--
-- Name: COLUMN studentparentassociation.contactrestrictions; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.contactrestrictions IS 'Restrictions for student and/or teacher contact with the individual (e.g., the student may not be picked up by the individual).';


--
-- Name: COLUMN studentparentassociation.legalguardian; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparentassociation.legalguardian IS 'Indicator of whether the person is a legal guardian for the student.';


--
-- Name: studentschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociation (
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryschool boolean,
    entrygradeleveldescriptorid integer NOT NULL,
    entrygradelevelreasondescriptorid integer,
    entrytypedescriptorid integer,
    repeatgradeindicator boolean,
    classofschoolyear smallint,
    schoolchoicetransfer boolean,
    exitwithdrawdate date,
    exitwithdrawtypedescriptorid integer,
    residencystatusdescriptorid integer,
    graduationplantypedescriptorid integer,
    educationorganizationid integer,
    graduationschoolyear smallint,
    employedwhileenrolled boolean,
    calendarcode character varying(60),
    schoolyear smallint,
    fulltimeequivalency numeric(5,4),
    termcompletionindicator boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociation IS 'This association represents the school in which a student is enrolled. The semantics of enrollment may differ slightly by state. Non-enrollment relationships between a student and an education organization may be described using the StudentEducationOrganizationAssociation.';


--
-- Name: COLUMN studentschoolassociation.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolassociation.primaryschool; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.primaryschool IS 'Indicates if a given enrollment record should be considered the primary record for a student.';


--
-- Name: COLUMN studentschoolassociation.entrygradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradeleveldescriptorid IS 'The grade level or primary instructional level at which a student enters and receives services in a school or an educational institution during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrygradelevelreasondescriptorid IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN studentschoolassociation.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.entrytypedescriptorid IS 'The process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN studentschoolassociation.repeatgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.repeatgradeindicator IS 'An indicator of whether the student is enrolling to repeat a grade level, either by failure or an agreement to hold the student back.';


--
-- Name: COLUMN studentschoolassociation.classofschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.classofschoolyear IS 'Projected high school graduation year.';


--
-- Name: COLUMN studentschoolassociation.schoolchoicetransfer; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolchoicetransfer IS 'An indication of whether students transferred in or out of the school did so during the school year under the provisions for public school choice in accordance with Title I, Part A, Section 1116.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawdate IS 'The recorded exit or withdraw date for the student.';


--
-- Name: COLUMN studentschoolassociation.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.exitwithdrawtypedescriptorid IS 'The circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN studentschoolassociation.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.residencystatusdescriptorid IS 'An indication of the location of a persons legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN studentschoolassociation.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN studentschoolassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociation.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN studentschoolassociation.employedwhileenrolled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.employedwhileenrolled IS 'An individual who is a paid employee or works in his or her own business, profession, or farm and at the same time is enrolled in secondary, postsecondary, or adult education.';


--
-- Name: COLUMN studentschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN studentschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.schoolyear IS 'The school year associated with the student''s enrollment.';


--
-- Name: COLUMN studentschoolassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.fulltimeequivalency IS 'The full-time equivalent ratio for the student’s assignment to a school for services or instruction. For example, a full-time student would have an FTE value of 1 while a half-time student would have an FTE value of 0.5.';


--
-- Name: COLUMN studentschoolassociation.termcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociation.termcompletionindicator IS 'Idicates whether or not a student completed the most recent school term.';


--
-- Name: educationorganizationidtoparentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtoparentusi AS
 SELECT edorgs.sourceeducationorganizationid,
    spa.parentusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
     JOIN edfi.studentparentassociation spa ON ((ssa.studentusi = spa.studentusi)))
  GROUP BY edorgs.sourceeducationorganizationid, spa.parentusi;


ALTER TABLE auth.educationorganizationidtoparentusi OWNER TO postgres;

--
-- Name: studentparentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentparentassociation (
    oldparentusi integer NOT NULL,
    oldparentuniqueid character varying(32) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newparentusi integer,
    newparentuniqueid character varying(32),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentparentassociation OWNER TO postgres;

--
-- Name: studentschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentschoolassociation (
    oldentrydate date NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newentrydate date,
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentschoolassociation OWNER TO postgres;

--
-- Name: educationorganizationidtoparentusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtoparentusiincludingdeletes AS
 SELECT educationorganizationidtoparentusi.sourceeducationorganizationid,
    educationorganizationidtoparentusi.parentusi
   FROM auth.educationorganizationidtoparentusi
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa_tc.oldparentusi AS parentusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
     JOIN tracked_changes_edfi.studentparentassociation spa_tc ON ((ssa.studentusi = spa_tc.oldstudentusi)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa.parentusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)))
     JOIN edfi.studentparentassociation spa ON ((ssa_tc.oldstudentusi = spa.studentusi)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    spa_tc.oldparentusi AS parentusi
   FROM ((auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)))
     JOIN tracked_changes_edfi.studentparentassociation spa_tc ON ((ssa_tc.oldstudentusi = spa_tc.oldstudentusi)));


ALTER TABLE auth.educationorganizationidtoparentusiincludingdeletes OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationassignmentassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    positiontitle character varying(100),
    enddate date,
    orderofassignment integer,
    employmenteducationorganizationid integer,
    employmentstatusdescriptorid integer,
    employmenthiredate date,
    credentialidentifier character varying(60),
    stateofissuestateabbreviationdescriptorid integer,
    fulltimeequivalency numeric(5,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationassignmentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationassignmentassociation IS 'This association indicates the education organization to which a staff member provides services.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.begindate IS 'Month, day, and year of the start or effective date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.enddate IS 'Month, day, and year of the end or termination date of a staff member''s employment, contract, or relationship with the education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.orderofassignment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.orderofassignment IS 'Describes whether the assignment is this the staff member''s primary assignment, secondary assignment, etc.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.employmenthiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.employmenthiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN staffeducationorganizationassignmentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationassignmentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationemploymentassociation (
    educationorganizationid integer NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    hiredate date NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    separationdescriptorid integer,
    separationreasondescriptorid integer,
    department character varying(60),
    fulltimeequivalency numeric(5,4),
    offerdate date,
    hourlywage money,
    credentialidentifier character varying(60),
    stateofissuestateabbreviationdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationemploymentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationemploymentassociation IS 'This association indicates the education organization an employee, contractor, volunteer, or other service provider is formally associated with typically indicated by which organization the staff member has a services contract with or receives compensation from.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.employmentstatusdescriptorid IS 'Reflects the type of employment or contract.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hiredate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hiredate IS 'The month, day, and year on which an individual was hired for a position.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.enddate IS 'The month, day, and year on which a contract between an individual and a governing authority ends or is terminated under the provisions of the contract (or the date on which the agreement is made invalid).';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationdescriptorid IS 'Type of employment separation.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.separationreasondescriptorid IS 'Reason for terminating the employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.department; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.department IS 'The department or suborganization the employee/contractor is associated with in the education organization.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.fulltimeequivalency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.fulltimeequivalency IS 'The ratio between the hours of work expected in a position and the hours of work normally expected in a full-time position in the same setting.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.offerdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.offerdate IS 'Date at which the staff member was made an official offer for this employment.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.hourlywage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.hourlywage IS 'Hourly wage associated with the employment position being reported.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationemploymentassociation.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: educationorganizationidtostaffusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusi AS
 SELECT edorgs.sourceeducationorganizationid,
    seo_assign.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationassignmentassociation seo_assign ON ((edorgs.targeteducationorganizationid = seo_assign.educationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    seo_empl.staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.staffeducationorganizationemploymentassociation seo_empl ON ((edorgs.targeteducationorganizationid = seo_empl.educationorganizationid)));


ALTER TABLE auth.educationorganizationidtostaffusi OWNER TO postgres;

--
-- Name: staffeducationorganizationassignmentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationassignmentassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldstaffclassificationdescriptorid integer NOT NULL,
    oldstaffclassificationdescriptornamespace character varying(255) NOT NULL,
    oldstaffclassificationdescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid integer,
    newstaffclassificationdescriptorid integer,
    newstaffclassificationdescriptornamespace character varying(255),
    newstaffclassificationdescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationassignmentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationemploymentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationemploymentassociation (
    oldeducationorganizationid integer NOT NULL,
    oldemploymentstatusdescriptorid integer NOT NULL,
    oldemploymentstatusdescriptornamespace character varying(255) NOT NULL,
    oldemploymentstatusdescriptorcodevalue character varying(50) NOT NULL,
    oldhiredate date NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    neweducationorganizationid integer,
    newemploymentstatusdescriptorid integer,
    newemploymentstatusdescriptornamespace character varying(255),
    newemploymentstatusdescriptorcodevalue character varying(50),
    newhiredate date,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationemploymentassociation OWNER TO postgres;

--
-- Name: educationorganizationidtostaffusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostaffusiincludingdeletes AS
 SELECT edorgtostaff.sourceeducationorganizationid,
    edorgtostaff.staffusi
   FROM auth.educationorganizationidtostaffusi edorgtostaff
UNION
 SELECT edorgs.sourceeducationorganizationid,
    emp_tc.oldstaffusi AS staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.staffeducationorganizationemploymentassociation emp_tc ON ((edorgs.targeteducationorganizationid = emp_tc.oldeducationorganizationid)))
UNION
 SELECT edorgs.sourceeducationorganizationid,
    assgn_tc.oldstaffusi AS staffusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.staffeducationorganizationassignmentassociation assgn_tc ON ((edorgs.targeteducationorganizationid = assgn_tc.oldeducationorganizationid)));


ALTER TABLE auth.educationorganizationidtostaffusiincludingdeletes OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusi; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusi AS
 SELECT edorgs.sourceeducationorganizationid,
    ssa.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studentschoolassociation ssa ON ((edorgs.targeteducationorganizationid = ssa.schoolid)))
  GROUP BY edorgs.sourceeducationorganizationid, ssa.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusi OWNER TO postgres;

--
-- Name: educationorganizationidtostudentusiincludingdeletes; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusiincludingdeletes AS
 SELECT educationorganizationidtostudentusi.sourceeducationorganizationid,
    educationorganizationidtostudentusi.studentusi
   FROM auth.educationorganizationidtostudentusi
UNION
 SELECT edorgs.sourceeducationorganizationid,
    ssa_tc.oldstudentusi AS studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN tracked_changes_edfi.studentschoolassociation ssa_tc ON ((edorgs.targeteducationorganizationid = ssa_tc.oldschoolid)));


ALTER TABLE auth.educationorganizationidtostudentusiincludingdeletes OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationresponsibilityassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    responsibilitydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationresponsibilityassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationresponsibilityassociation IS 'This association indicates a relationship between a student and an education organization other than an enrollment relationship, and generally indicating some kind of responsibility of the education organization for the student. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.begindate IS 'Month, day, and year of the start date of an education organization''s responsibility for a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.responsibilitydescriptorid IS 'Indications of an education organization''s responsibility for a student, such as accountability, attendance, funding, etc.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationresponsibilityassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationresponsibilityassociation.enddate IS 'Month, day, and year of the end date of an education organization''s responsibility for a student.';


--
-- Name: educationorganizationidtostudentusithroughresponsibility; Type: VIEW; Schema: auth; Owner: postgres
--

CREATE VIEW auth.educationorganizationidtostudentusithroughresponsibility AS
 SELECT edorgs.sourceeducationorganizationid,
    seora.studentusi
   FROM (auth.educationorganizationidtoeducationorganizationid edorgs
     JOIN edfi.studenteducationorganizationresponsibilityassociation seora ON ((edorgs.targeteducationorganizationid = seora.educationorganizationid)))
  GROUP BY edorgs.sourceeducationorganizationid, seora.studentusi;


ALTER TABLE auth.educationorganizationidtostudentusithroughresponsibility OWNER TO postgres;

--
-- Name: snapshot; Type: TABLE; Schema: changes; Owner: postgres
--

CREATE TABLE changes.snapshot (
    snapshotidentifier character varying(32) NOT NULL,
    snapshotdatetime timestamp without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE changes.snapshot OWNER TO postgres;

--
-- Name: TABLE snapshot; Type: COMMENT; Schema: changes; Owner: postgres
--

COMMENT ON TABLE changes.snapshot IS 'Contains information about a snapshot used to create isolation from ongoing changes for API client synchronization.';


--
-- Name: COLUMN snapshot.snapshotidentifier; Type: COMMENT; Schema: changes; Owner: postgres
--

COMMENT ON COLUMN changes.snapshot.snapshotidentifier IS 'The unique identifier of the snapshot.';


--
-- Name: COLUMN snapshot.snapshotdatetime; Type: COMMENT; Schema: changes; Owner: postgres
--

COMMENT ON COLUMN changes.snapshot.snapshotdatetime IS 'The date and time that the snapshot was initiated.';


--
-- Name: absenceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.absenceeventcategorydescriptor (
    absenceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.absenceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE absenceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.absenceeventcategorydescriptor IS 'This descriptor describes the type of absence';


--
-- Name: COLUMN absenceeventcategorydescriptor.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.absenceeventcategorydescriptor.absenceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academichonorcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academichonorcategorydescriptor (
    academichonorcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.academichonorcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE academichonorcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academichonorcategorydescriptor IS 'A designation of the type of academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN academichonorcategorydescriptor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academichonorcategorydescriptor.academichonorcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicsubjectdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicsubjectdescriptor (
    academicsubjectdescriptorid integer NOT NULL
);


ALTER TABLE edfi.academicsubjectdescriptor OWNER TO postgres;

--
-- Name: TABLE academicsubjectdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicsubjectdescriptor IS 'This descriptor holds the description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language).';


--
-- Name: COLUMN academicsubjectdescriptor.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicsubjectdescriptor.academicsubjectdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: academicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.academicweek (
    schoolid integer NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.academicweek OWNER TO postgres;

--
-- Name: TABLE academicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.academicweek IS 'This entity represents the academic weeks for a school year, optionally captured to support analyses.';


--
-- Name: COLUMN academicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN academicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: COLUMN academicweek.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.begindate IS 'The start date for the academic week.';


--
-- Name: COLUMN academicweek.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.enddate IS 'The end date for the academic week.';


--
-- Name: COLUMN academicweek.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.academicweek.totalinstructionaldays IS 'The total instructional days during the academic week.';


--
-- Name: accommodationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accommodationdescriptor (
    accommodationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.accommodationdescriptor OWNER TO postgres;

--
-- Name: TABLE accommodationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accommodationdescriptor IS 'This descriptor defines variations used in how an assessment is presented or taken.';


--
-- Name: COLUMN accommodationdescriptor.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accommodationdescriptor.accommodationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: accountabilityrating; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accountabilityrating (
    educationorganizationid integer NOT NULL,
    ratingtitle character varying(60) NOT NULL,
    schoolyear smallint NOT NULL,
    rating character varying(35) NOT NULL,
    ratingdate date,
    ratingorganization character varying(35),
    ratingprogram character varying(30),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.accountabilityrating OWNER TO postgres;

--
-- Name: TABLE accountabilityrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accountabilityrating IS 'An accountability rating for a school or district.';


--
-- Name: COLUMN accountabilityrating.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN accountabilityrating.ratingtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingtitle IS 'The title of the rating.';


--
-- Name: COLUMN accountabilityrating.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.schoolyear IS 'The school year for which the accountability rating is assessed.';


--
-- Name: COLUMN accountabilityrating.rating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.rating IS 'An accountability rating level, designation, or assessment.';


--
-- Name: COLUMN accountabilityrating.ratingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingdate IS 'The date the rating was awarded.';


--
-- Name: COLUMN accountabilityrating.ratingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingorganization IS 'The organization that assessed the rating.';


--
-- Name: COLUMN accountabilityrating.ratingprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accountabilityrating.ratingprogram IS 'The program associated with the accountability rating (e.g., NCLB, AEIS).';


--
-- Name: accounttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.accounttypedescriptor (
    accounttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.accounttypedescriptor OWNER TO postgres;

--
-- Name: TABLE accounttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.accounttypedescriptor IS 'The type of account used in accounting such as revenue, expenditure, or balance sheet.';


--
-- Name: COLUMN accounttypedescriptor.accounttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.accounttypedescriptor.accounttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: achievementcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.achievementcategorydescriptor (
    achievementcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.achievementcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE achievementcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.achievementcategorydescriptor IS 'This descriptor defines the category of achievement attributed to the learner.';


--
-- Name: COLUMN achievementcategorydescriptor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.achievementcategorydescriptor.achievementcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: additionalcredittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.additionalcredittypedescriptor (
    additionalcredittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.additionalcredittypedescriptor OWNER TO postgres;

--
-- Name: TABLE additionalcredittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.additionalcredittypedescriptor IS 'The type of additional credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN additionalcredittypedescriptor.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.additionalcredittypedescriptor.additionalcredittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: addresstypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.addresstypedescriptor (
    addresstypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.addresstypedescriptor OWNER TO postgres;

--
-- Name: TABLE addresstypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.addresstypedescriptor IS 'The type of address listed for an individual or organization.';


--
-- Name: COLUMN addresstypedescriptor.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.addresstypedescriptor.addresstypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrationenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrationenvironmentdescriptor (
    administrationenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrationenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE administrationenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrationenvironmentdescriptor IS 'The environment in which the test was administered.';


--
-- Name: COLUMN administrationenvironmentdescriptor.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrationenvironmentdescriptor.administrationenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: administrativefundingcontroldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.administrativefundingcontroldescriptor (
    administrativefundingcontroldescriptorid integer NOT NULL
);


ALTER TABLE edfi.administrativefundingcontroldescriptor OWNER TO postgres;

--
-- Name: TABLE administrativefundingcontroldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.administrativefundingcontroldescriptor IS 'This descriptor holds the type of education institution as classified by its funding source (e.g., public or private).';


--
-- Name: COLUMN administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.administrativefundingcontroldescriptor.administrativefundingcontroldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: ancestryethnicorigindescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.ancestryethnicorigindescriptor (
    ancestryethnicorigindescriptorid integer NOT NULL
);


ALTER TABLE edfi.ancestryethnicorigindescriptor OWNER TO postgres;

--
-- Name: TABLE ancestryethnicorigindescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.ancestryethnicorigindescriptor IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.ancestryethnicorigindescriptor.ancestryethnicorigindescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmenttitle character varying(255) NOT NULL,
    assessmentcategorydescriptorid integer,
    assessmentform character varying(60),
    assessmentversion integer,
    revisiondate date,
    maxrawscore numeric(15,5),
    nomenclature character varying(100),
    assessmentfamily character varying(60),
    educationorganizationid integer,
    adaptiveassessment boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessment OWNER TO postgres;

--
-- Name: TABLE assessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessment IS 'This entity represents a tool, instrument, process, or exhibition composed of a systematic sampling of behavior for measuring a student''s competence, knowledge, skills, or behavior. An assessment can be used to measure differences in individuals or groups and changes in performance from one occasion to the next.';


--
-- Name: COLUMN assessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessment.assessmenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmenttitle IS 'The title or name of the assessment.';


--
-- Name: COLUMN assessment.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentcategorydescriptorid IS 'The category of an assessment based on format and content.';


--
-- Name: COLUMN assessment.assessmentform; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentform IS 'Identifies the form of the assessment, for example a regular versus makeup form, multiple choice versus constructed response, etc.';


--
-- Name: COLUMN assessment.assessmentversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentversion IS 'The version identifier for the assessment.';


--
-- Name: COLUMN assessment.revisiondate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.revisiondate IS 'The month, day, and year that the conceptual design for the assessment was most recently revised substantially.';


--
-- Name: COLUMN assessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.nomenclature IS 'Reflects the specific nomenclature used for assessment.';


--
-- Name: COLUMN assessment.assessmentfamily; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.assessmentfamily IS 'The assessment family this assessment is a member of.';


--
-- Name: COLUMN assessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessment.adaptiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessment.adaptiveassessment IS 'Indicates that the assessment is adaptive.';


--
-- Name: assessmentacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentacademicsubject OWNER TO postgres;

--
-- Name: TABLE assessmentacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentacademicsubject IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentacademicsubject.namespace IS 'Namespace for the assessment.';


--
-- Name: assessmentassessedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentassessedgradelevel (
    assessmentidentifier character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentassessedgradelevel OWNER TO postgres;

--
-- Name: TABLE assessmentassessedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentassessedgradelevel IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: COLUMN assessmentassessedgradelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentassessedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.gradeleveldescriptorid IS 'The grade level(s) for which an assessment is designed. The semantics of null is assumed to mean that the assessment is not associated with any grade level.';


--
-- Name: COLUMN assessmentassessedgradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentassessedgradelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: assessmentcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcategorydescriptor (
    assessmentcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcategorydescriptor IS 'This descriptor holds the category of an assessment based on format and content.';


--
-- Name: COLUMN assessmentcategorydescriptor.assessmentcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcategorydescriptor.assessmentcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    title character varying(75) NOT NULL,
    version character varying(50),
    uri character varying(255),
    publicationdate date,
    publicationyear smallint,
    publicationstatusdescriptorid integer,
    mandatingeducationorganizationid integer,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandard OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandard IS 'An indication as to whether an assessment conforms to a standard (e.g., local standard, statewide standard, regional standard, association standard).';


--
-- Name: COLUMN assessmentcontentstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN assessmentcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: COLUMN assessmentcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN assessmentcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN assessmentcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN assessmentcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN assessmentcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: assessmentcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentcontentstandardauthor (
    assessmentidentifier character varying(60) NOT NULL,
    author character varying(100) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE assessmentcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN assessmentcontentstandardauthor.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN assessmentcontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentcontentstandardauthor.namespace IS 'Namespace for the assessment.';


--
-- Name: assessmentidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationcode (
    assessmentidentificationsystemdescriptorid integer NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentidentificationcode OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentidentificationcode.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to an assessment by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the assessment identification code.';


--
-- Name: assessmentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentidentificationsystemdescriptor (
    assessmentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentidentificationsystemdescriptor IS 'This descriptor holds a coding scheme that is used for identification and record-keeping purposes by schools, social services or other agencies to refer to an assessment.';


--
-- Name: COLUMN assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentidentificationsystemdescriptor.assessmentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    assessmentitemcategorydescriptorid integer,
    maxrawscore numeric(15,5),
    itemtext character varying(1024),
    expectedtimeassessed character varying(30),
    nomenclature character varying(100),
    assessmentitemuri character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentitem OWNER TO postgres;

--
-- Name: TABLE assessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitem IS 'This entity represents one of many single measures that make up an assessment.';


--
-- Name: COLUMN assessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitem.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemcategorydescriptorid IS 'Category or type of the assessment item.';


--
-- Name: COLUMN assessmentitem.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN assessmentitem.itemtext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.itemtext IS 'The text of the item.';


--
-- Name: COLUMN assessmentitem.expectedtimeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.expectedtimeassessed IS 'The duration of time allotted for the assessment item.';


--
-- Name: COLUMN assessmentitem.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.nomenclature IS 'Reflects the specific nomenclature used for assessment item.';


--
-- Name: COLUMN assessmentitem.assessmentitemuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitem.assessmentitemuri IS 'The URI (typical a URL) pointing to the entry in an assessment item bank, which describes this content item.';


--
-- Name: assessmentitemcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemcategorydescriptor (
    assessmentitemcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemcategorydescriptor IS 'Category or type of the assessment item.';


--
-- Name: COLUMN assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemcategorydescriptor.assessmentitemcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentitemlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitemlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentitemlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemlearningstandard IS 'Learning standard tested by this item.';


--
-- Name: COLUMN assessmentitemlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitemlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitemlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN assessmentitemlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: assessmentitempossibleresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitempossibleresponse (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    responsevalue character varying(60) NOT NULL,
    responsedescription character varying(1024),
    correctresponse boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentitempossibleresponse OWNER TO postgres;

--
-- Name: TABLE assessmentitempossibleresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitempossibleresponse IS 'A possible response to an assessment item.';


--
-- Name: COLUMN assessmentitempossibleresponse.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN assessmentitempossibleresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentitempossibleresponse.responsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsevalue IS 'The response value, often an option number or code value (e.g., 1, 2, A, B, true, false).';


--
-- Name: COLUMN assessmentitempossibleresponse.responsedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.responsedescription IS 'Additional text provided to define the response value.';


--
-- Name: COLUMN assessmentitempossibleresponse.correctresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitempossibleresponse.correctresponse IS 'Indicates the response is correct.';


--
-- Name: assessmentitemresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentitemresultdescriptor (
    assessmentitemresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentitemresultdescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentitemresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentitemresultdescriptor IS 'The analyzed result of a student''s response to an assessment item.. For example:
    Correct
    Incorrect
    Met standard
    ...';


--
-- Name: COLUMN assessmentitemresultdescriptor.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentitemresultdescriptor.assessmentitemresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentlanguage (
    assessmentidentifier character varying(60) NOT NULL,
    languagedescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentlanguage OWNER TO postgres;

--
-- Name: TABLE assessmentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentlanguage IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: COLUMN assessmentlanguage.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.languagedescriptorid IS 'An indication of the languages in which the assessment is designed.';


--
-- Name: COLUMN assessmentlanguage.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentlanguage.namespace IS 'Namespace for the assessment.';


--
-- Name: assessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE assessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN assessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN assessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN assessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: assessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentperiod OWNER TO postgres;

--
-- Name: TABLE assessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN assessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN assessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: assessmentperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentperioddescriptor (
    assessmentperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentperioddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentperioddescriptor IS 'This descriptor holds the period of time window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN assessmentperioddescriptor.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentperioddescriptor.assessmentperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentplatformtype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentplatformtype (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    platformtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentplatformtype OWNER TO postgres;

--
-- Name: TABLE assessmentplatformtype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentplatformtype IS 'The platforms with which the assessment may be delivered.';


--
-- Name: COLUMN assessmentplatformtype.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentplatformtype.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentplatformtype.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentplatformtype.platformtypedescriptorid IS 'The platforms with which the assessment may be delivered.';


--
-- Name: assessmentprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentprogram (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentprogram OWNER TO postgres;

--
-- Name: TABLE assessmentprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentprogram IS 'The programs associated with the assessment.';


--
-- Name: COLUMN assessmentprogram.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN assessmentprogram.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN assessmentprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: assessmentreportingmethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentreportingmethoddescriptor (
    assessmentreportingmethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.assessmentreportingmethoddescriptor OWNER TO postgres;

--
-- Name: TABLE assessmentreportingmethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentreportingmethoddescriptor IS 'This descriptor defines the method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or a numerical grade.';


--
-- Name: COLUMN assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentreportingmethoddescriptor.assessmentreportingmethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: assessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscore OWNER TO postgres;

--
-- Name: TABLE assessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscore IS 'Definition of the scores to be expected from this assessment.';


--
-- Name: COLUMN assessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN assessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN assessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer,
    minimumscore character varying(35) NOT NULL,
    maximumscore character varying(35) NOT NULL,
    identificationcode character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandard IS 'Score ranges of an assessment associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.assessmentreportingmethoddescriptorid IS 'The assessment reporting method defined (e.g., scale score, RIT scale score) associated with the referenced learning standard(s).';


--
-- Name: COLUMN assessmentscorerangelearningstandard.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.minimumscore IS 'The minimum score in the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.maximumscore IS 'The maximum score in the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentscorerangelearningstandardlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    scorerangeid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentscorerangelearningstandardlearningstandard OWNER TO postgres;

--
-- Name: TABLE assessmentscorerangelearningstandardlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentscorerangelearningstandardlearningstandard IS 'Learning standard associated with the score range.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentscorerangelearningstandardlearningstandard.scorerangeid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentscorerangelearningstandardlearningstandard.scorerangeid IS 'A unique number or alphanumeric code assigned to the score range associated with one or more learning standards.';


--
-- Name: assessmentsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assessmentsection (
    assessmentidentifier character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.assessmentsection OWNER TO postgres;

--
-- Name: TABLE assessmentsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assessmentsection IS 'The Section(s) to which the assessment is associated.';


--
-- Name: COLUMN assessmentsection.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN assessmentsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN assessmentsection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN assessmentsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN assessmentsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN assessmentsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN assessmentsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assessmentsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: assignmentlatestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.assignmentlatestatusdescriptor (
    assignmentlatestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.assignmentlatestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE assignmentlatestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.assignmentlatestatusdescriptor IS 'Status of whether the assignment was submitted after the due date and/or marked as late.';


--
-- Name: COLUMN assignmentlatestatusdescriptor.assignmentlatestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.assignmentlatestatusdescriptor.assignmentlatestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attemptstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attemptstatusdescriptor (
    attemptstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.attemptstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE attemptstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attemptstatusdescriptor IS 'This descriptor describes a student''s completion status for a section.';


--
-- Name: COLUMN attemptstatusdescriptor.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attemptstatusdescriptor.attemptstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: attendanceeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.attendanceeventcategorydescriptor (
    attendanceeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.attendanceeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE attendanceeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.attendanceeventcategorydescriptor IS 'This descriptor holds the category of the attendance event (e.g., tardy). The map to known enumeration values is required.';


--
-- Name: COLUMN attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.attendanceeventcategorydescriptor.attendanceeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: balancesheetdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.balancesheetdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.balancesheetdimension OWNER TO postgres;

--
-- Name: TABLE balancesheetdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.balancesheetdimension IS 'The NCES balance sheet accounting dimension, used to track financial transactions for each fund. These financial statements only report assets, deferred outflows of resources, liabilities, deferred inflows of resources, and equity accounts. The statements are considered snapshots of how these accounts stand as of a certain point in time.';


--
-- Name: COLUMN balancesheetdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.code IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN balancesheetdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.fiscalyear IS 'The fiscal year for which the account balance sheet dimension is valid.';


--
-- Name: COLUMN balancesheetdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimension.codename IS 'A description of the account balance sheet dimension.';


--
-- Name: balancesheetdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.balancesheetdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.balancesheetdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE balancesheetdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.balancesheetdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.code IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account balance sheet dimension is valid.';


--
-- Name: COLUMN balancesheetdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.balancesheetdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: barriertointernetaccessinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.barriertointernetaccessinresidencedescriptor (
    barriertointernetaccessinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.barriertointernetaccessinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE barriertointernetaccessinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.barriertointernetaccessinresidencedescriptor IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.barriertointernetaccessinresidencedescriptor.barriertointernetaccessinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: behaviordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.behaviordescriptor (
    behaviordescriptorid integer NOT NULL
);


ALTER TABLE edfi.behaviordescriptor OWNER TO postgres;

--
-- Name: TABLE behaviordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.behaviordescriptor IS 'This descriptor holds the categories of behavior describing a discipline incident.';


--
-- Name: COLUMN behaviordescriptor.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.behaviordescriptor.behaviordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: bellschedule; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedule (
    bellschedulename character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    alternatedayname character varying(20),
    starttime time without time zone,
    endtime time without time zone,
    totalinstructionaltime integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.bellschedule OWNER TO postgres;

--
-- Name: TABLE bellschedule; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedule IS 'This entity represents the schedule of class period meeting times.';


--
-- Name: COLUMN bellschedule.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellschedule.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN bellschedule.alternatedayname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.alternatedayname IS 'An alternate name for the day (e.g., Red, Blue).';


--
-- Name: COLUMN bellschedule.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.starttime IS 'An indication of the time of day the bell schedule begins.';


--
-- Name: COLUMN bellschedule.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.endtime IS 'An indication of the time of day the bell schedule ends.';


--
-- Name: COLUMN bellschedule.totalinstructionaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedule.totalinstructionaltime IS 'The total instructional time in minutes per day for the bell schedule.';


--
-- Name: bellscheduleclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduleclassperiod (
    bellschedulename character varying(60) NOT NULL,
    classperiodname character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduleclassperiod OWNER TO postgres;

--
-- Name: TABLE bellscheduleclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduleclassperiod IS 'The class periods that compose this bell schedule.';


--
-- Name: COLUMN bellscheduleclassperiod.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellscheduleclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN bellscheduleclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduleclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: bellscheduledate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellscheduledate (
    bellschedulename character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellscheduledate OWNER TO postgres;

--
-- Name: TABLE bellscheduledate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellscheduledate IS 'The dates for which the bell schedule applies.';


--
-- Name: COLUMN bellscheduledate.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellscheduledate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.date IS 'The dates for which the bell schedule applies.';


--
-- Name: COLUMN bellscheduledate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellscheduledate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: bellschedulegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.bellschedulegradelevel (
    bellschedulename character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.bellschedulegradelevel OWNER TO postgres;

--
-- Name: TABLE bellschedulegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.bellschedulegradelevel IS 'The grade levels the particular bell schedule applies to.';


--
-- Name: COLUMN bellschedulegradelevel.bellschedulename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.bellschedulename IS 'Name or title of the bell schedule.';


--
-- Name: COLUMN bellschedulegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.gradeleveldescriptorid IS 'The grade levels the particular bell schedule applies to.';


--
-- Name: COLUMN bellschedulegradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.bellschedulegradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: calendar; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendar (
    calendarcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    calendartypedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendar OWNER TO postgres;

--
-- Name: TABLE calendar; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendar IS 'A set of dates associated with an organization.';


--
-- Name: COLUMN calendar.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendar.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendar.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: COLUMN calendar.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendar.calendartypedescriptorid IS 'Indicates the type of calendar.';


--
-- Name: calendardate; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardate (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.calendardate OWNER TO postgres;

--
-- Name: TABLE calendardate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardate IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardate.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendardate.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN calendardate.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardate.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardate.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: calendardatecalendarevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendardatecalendarevent (
    calendarcode character varying(60) NOT NULL,
    calendareventdescriptorid integer NOT NULL,
    date date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendardatecalendarevent OWNER TO postgres;

--
-- Name: TABLE calendardatecalendarevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendardatecalendarevent IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardatecalendarevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendardatecalendarevent.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.calendareventdescriptorid IS 'The type of scheduled or unscheduled event for the day.';


--
-- Name: COLUMN calendardatecalendarevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN calendardatecalendarevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendardatecalendarevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendardatecalendarevent.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: calendareventdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendareventdescriptor (
    calendareventdescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendareventdescriptor OWNER TO postgres;

--
-- Name: TABLE calendareventdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendareventdescriptor IS 'This descriptor holds the types of scheduled or unscheduled event for the day (e.g., Instructional day, Teacher only day, Holiday, Make-up day, Weather day, Student late arrival/early dismissal day).';


--
-- Name: COLUMN calendareventdescriptor.calendareventdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendareventdescriptor.calendareventdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: calendargradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendargradelevel (
    calendarcode character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.calendargradelevel OWNER TO postgres;

--
-- Name: TABLE calendargradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendargradelevel IS 'Indicates the grade level associated with the calendar.';


--
-- Name: COLUMN calendargradelevel.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN calendargradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.gradeleveldescriptorid IS 'Indicates the grade level associated with the calendar.';


--
-- Name: COLUMN calendargradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN calendargradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendargradelevel.schoolyear IS 'The identifier for the school year associated with the calendar.';


--
-- Name: calendartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.calendartypedescriptor (
    calendartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.calendartypedescriptor OWNER TO postgres;

--
-- Name: TABLE calendartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.calendartypedescriptor IS 'This descriptor defines the calendar types.';


--
-- Name: COLUMN calendartypedescriptor.calendartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.calendartypedescriptor.calendartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: careerpathwaydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.careerpathwaydescriptor (
    careerpathwaydescriptorid integer NOT NULL
);


ALTER TABLE edfi.careerpathwaydescriptor OWNER TO postgres;

--
-- Name: TABLE careerpathwaydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.careerpathwaydescriptor IS 'The career cluster or pathway representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN careerpathwaydescriptor.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.careerpathwaydescriptor.careerpathwaydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterapprovalagencytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterapprovalagencytypedescriptor (
    charterapprovalagencytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterapprovalagencytypedescriptor OWNER TO postgres;

--
-- Name: TABLE charterapprovalagencytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterapprovalagencytypedescriptor IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterapprovalagencytypedescriptor.charterapprovalagencytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: charterstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.charterstatusdescriptor (
    charterstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.charterstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE charterstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.charterstatusdescriptor IS 'The category of charter school. For example: School Charter, Open Enrollment Charter.';


--
-- Name: COLUMN charterstatusdescriptor.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.charterstatusdescriptor.charterstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: chartofaccount; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.chartofaccount (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    accounttypedescriptorid integer NOT NULL,
    accountname character varying(100),
    balancesheetcode character varying(16),
    functioncode character varying(16),
    fundcode character varying(16),
    objectcode character varying(16),
    operationalunitcode character varying(16),
    programcode character varying(16),
    projectcode character varying(16),
    sourcecode character varying(16),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.chartofaccount OWNER TO postgres;

--
-- Name: TABLE chartofaccount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.chartofaccount IS 'A valid combination of account dimensions under which financials are reported. This financial entity represents a funding source combined with its purpose and type of transaction. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN chartofaccount.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN chartofaccount.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN chartofaccount.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.fiscalyear IS 'The fiscal year for the account';


--
-- Name: COLUMN chartofaccount.accounttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accounttypedescriptorid IS 'The type of account used in accounting such as revenue, expenditure, or balance sheet.';


--
-- Name: COLUMN chartofaccount.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.accountname IS 'A descriptive name for the account.';


--
-- Name: COLUMN chartofaccount.balancesheetcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.balancesheetcode IS 'The code representation of the account balance sheet dimension.';


--
-- Name: COLUMN chartofaccount.functioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.functioncode IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN chartofaccount.fundcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.fundcode IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN chartofaccount.objectcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.objectcode IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN chartofaccount.operationalunitcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.operationalunitcode IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN chartofaccount.programcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.programcode IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN chartofaccount.projectcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.projectcode IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN chartofaccount.sourcecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccount.sourcecode IS 'The code representation of the account source dimension.';


--
-- Name: chartofaccountreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.chartofaccountreportingtag (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    tagvalue character varying(100),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.chartofaccountreportingtag OWNER TO postgres;

--
-- Name: TABLE chartofaccountreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.chartofaccountreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN chartofaccountreportingtag.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.accountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN chartofaccountreportingtag.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN chartofaccountreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.fiscalyear IS 'The fiscal year for the account';


--
-- Name: COLUMN chartofaccountreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.reportingtagdescriptorid IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN chartofaccountreportingtag.tagvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.chartofaccountreportingtag.tagvalue IS 'The value associated with the reporting tag.';


--
-- Name: citizenshipstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.citizenshipstatusdescriptor (
    citizenshipstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.citizenshipstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE citizenshipstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.citizenshipstatusdescriptor IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN citizenshipstatusdescriptor.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.citizenshipstatusdescriptor.citizenshipstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: classperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiod (
    classperiodname character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    officialattendanceperiod boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.classperiod OWNER TO postgres;

--
-- Name: TABLE classperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiod IS 'This entity represents the designation of a regularly scheduled series of class meetings at designated times and days of the week.';


--
-- Name: COLUMN classperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiod.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiod.officialattendanceperiod IS 'Indicator of whether this class period is used for official daily attendance. Alternatively, official daily attendance may be tied to a section.';


--
-- Name: classperiodmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classperiodmeetingtime (
    classperiodname character varying(60) NOT NULL,
    endtime time without time zone NOT NULL,
    schoolid integer NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.classperiodmeetingtime OWNER TO postgres;

--
-- Name: TABLE classperiodmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classperiodmeetingtime IS 'The meeting time(s) for a class period.';


--
-- Name: COLUMN classperiodmeetingtime.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN classperiodmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN classperiodmeetingtime.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN classperiodmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classperiodmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: classroompositiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.classroompositiondescriptor (
    classroompositiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.classroompositiondescriptor OWNER TO postgres;

--
-- Name: TABLE classroompositiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.classroompositiondescriptor IS 'This descriptor defines the type of position the staff member holds in a specific class/section.';


--
-- Name: COLUMN classroompositiondescriptor.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.classroompositiondescriptor.classroompositiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohort; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohort (
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    cohortdescription character varying(1024),
    cohorttypedescriptorid integer NOT NULL,
    cohortscopedescriptorid integer,
    academicsubjectdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.cohort OWNER TO postgres;

--
-- Name: TABLE cohort; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohort IS 'This entity represents any type of list of designated students for tracking, analysis, or intervention.';


--
-- Name: COLUMN cohort.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN cohort.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohort.cohortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortdescription IS 'The description of the cohort and its purpose.';


--
-- Name: COLUMN cohort.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohorttypedescriptorid IS 'The type of cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: COLUMN cohort.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.cohortscopedescriptorid IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohort.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohort.academicsubjectdescriptorid IS 'The academic subject associated with an academic intervention.';


--
-- Name: cohortprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortprogram (
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.cohortprogram OWNER TO postgres;

--
-- Name: TABLE cohortprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortprogram IS 'The (optional) program associated with this cohort (e.g., special education).';


--
-- Name: COLUMN cohortprogram.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN cohortprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN cohortprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN cohortprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: cohortscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortscopedescriptor (
    cohortscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortscopedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortscopedescriptor IS 'The scope of cohort (e.g., school, district, classroom).';


--
-- Name: COLUMN cohortscopedescriptor.cohortscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortscopedescriptor.cohortscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohorttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohorttypedescriptor (
    cohorttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohorttypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohorttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohorttypedescriptor IS 'The type of the cohort (e.g., academic intervention, classroom breakout).';


--
-- Name: COLUMN cohorttypedescriptor.cohorttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohorttypedescriptor.cohorttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cohortyeartypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cohortyeartypedescriptor (
    cohortyeartypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cohortyeartypedescriptor OWNER TO postgres;

--
-- Name: TABLE cohortyeartypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cohortyeartypedescriptor IS 'The enumeration items for the set of cohort years.';


--
-- Name: COLUMN cohortyeartypedescriptor.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cohortyeartypedescriptor.cohortyeartypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: communityorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityorganization (
    communityorganizationid integer NOT NULL
);


ALTER TABLE edfi.communityorganization OWNER TO postgres;

--
-- Name: TABLE communityorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityorganization IS 'This entity represents an administrative unit at the state level which exists primarily to operate local community providers.';


--
-- Name: COLUMN communityorganization.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityorganization.communityorganizationid IS 'The identifier assigned to a community organization.';


--
-- Name: communityprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityprovider (
    communityproviderid integer NOT NULL,
    communityorganizationid integer,
    providerprofitabilitydescriptorid integer,
    providerstatusdescriptorid integer NOT NULL,
    providercategorydescriptorid integer NOT NULL,
    schoolindicator boolean,
    licenseexemptindicator boolean
);


ALTER TABLE edfi.communityprovider OWNER TO postgres;

--
-- Name: TABLE communityprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityprovider IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN communityprovider.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityproviderid IS 'The identifier assigned to a community provider.';


--
-- Name: COLUMN communityprovider.communityorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.communityorganizationid IS 'The identifier assigned to a community organization.';


--
-- Name: COLUMN communityprovider.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerprofitabilitydescriptorid IS 'Indicates the profitability status of the provider.';


--
-- Name: COLUMN communityprovider.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providerstatusdescriptorid IS 'Indicates the status of the provider.';


--
-- Name: COLUMN communityprovider.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.providercategorydescriptorid IS 'Indicates the category of the provider.';


--
-- Name: COLUMN communityprovider.schoolindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.schoolindicator IS 'An indication of whether the community provider is a school.';


--
-- Name: COLUMN communityprovider.licenseexemptindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityprovider.licenseexemptindicator IS 'An indication of whether the provider is exempt from having a license.';


--
-- Name: communityproviderlicense; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.communityproviderlicense (
    communityproviderid integer NOT NULL,
    licenseidentifier character varying(20) NOT NULL,
    licensingorganization character varying(75) NOT NULL,
    licenseeffectivedate date NOT NULL,
    licenseexpirationdate date,
    licenseissuedate date,
    licensestatusdescriptorid integer,
    licensetypedescriptorid integer NOT NULL,
    authorizedfacilitycapacity integer,
    oldestageauthorizedtoserve integer,
    youngestageauthorizedtoserve integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: TABLE communityproviderlicense; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.communityproviderlicense IS 'The legal document held by the community provider that authorizes the holder to perform certain functions and or services.';


--
-- Name: COLUMN communityproviderlicense.communityproviderid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.communityproviderid IS 'The identifier assigned to a community provider.';


--
-- Name: COLUMN communityproviderlicense.licenseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseidentifier IS 'The unique identifier issued by the licensing organization.';


--
-- Name: COLUMN communityproviderlicense.licensingorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensingorganization IS 'The organization issuing the license.';


--
-- Name: COLUMN communityproviderlicense.licenseeffectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseeffectivedate IS 'The month, day, and year on which a license is active or becomes effective.';


--
-- Name: COLUMN communityproviderlicense.licenseexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseexpirationdate IS 'The month, day, and year on which a license will expire.';


--
-- Name: COLUMN communityproviderlicense.licenseissuedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licenseissuedate IS 'The month, day, and year on which an active license was issued.';


--
-- Name: COLUMN communityproviderlicense.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensestatusdescriptorid IS 'An indication of the status of the license.';


--
-- Name: COLUMN communityproviderlicense.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.licensetypedescriptorid IS 'An indication of the category of the license.';


--
-- Name: COLUMN communityproviderlicense.authorizedfacilitycapacity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.authorizedfacilitycapacity IS 'The maximum number that can be contained or accommodated which a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.oldestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.oldestageauthorizedtoserve IS 'The oldest age of children a provider is authorized or licensed to serve.';


--
-- Name: COLUMN communityproviderlicense.youngestageauthorizedtoserve; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.communityproviderlicense.youngestageauthorizedtoserve IS 'The youngest age of children a provider is authorized or licensed to serve.';


--
-- Name: competencyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyleveldescriptor (
    competencyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.competencyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE competencyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyleveldescriptor IS 'This descriptor defines various levels for assessed competencies.';


--
-- Name: COLUMN competencyleveldescriptor.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyleveldescriptor.competencyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: competencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.competencyobjective (
    educationorganizationid integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    competencyobjectiveid character varying(60),
    description character varying(1024),
    successcriteria character varying(150),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.competencyobjective OWNER TO postgres;

--
-- Name: TABLE competencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.competencyobjective IS 'This entity holds additional competencies for student achievement that are not associated with specific learning objectives (e.g., paying attention in class).';


--
-- Name: COLUMN competencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN competencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN competencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN competencyobjective.competencyobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.competencyobjectiveid IS 'The Identifier for the competency objective.';


--
-- Name: COLUMN competencyobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.description IS 'The description of the student competency objective.';


--
-- Name: COLUMN competencyobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.competencyobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a competency objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the competency objective.';


--
-- Name: contacttypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contacttypedescriptor (
    contacttypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.contacttypedescriptor OWNER TO postgres;

--
-- Name: TABLE contacttypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contacttypedescriptor IS 'This descriptor defines the set of contact types.';


--
-- Name: COLUMN contacttypedescriptor.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contacttypedescriptor.contacttypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: contentclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.contentclassdescriptor (
    contentclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.contentclassdescriptor OWNER TO postgres;

--
-- Name: TABLE contentclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.contentclassdescriptor IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN contentclassdescriptor.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.contentclassdescriptor.contentclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: continuationofservicesreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.continuationofservicesreasondescriptor (
    continuationofservicesreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.continuationofservicesreasondescriptor OWNER TO postgres;

--
-- Name: TABLE continuationofservicesreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.continuationofservicesreasondescriptor IS 'In the Migrant Education program, a provision allows continuation of services after a child is no longer considered migratory for certain reasons. This descriptor holds the reasons prescribed in the statute. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.continuationofservicesreasondescriptor.continuationofservicesreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: costratedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.costratedescriptor (
    costratedescriptorid integer NOT NULL
);


ALTER TABLE edfi.costratedescriptor OWNER TO postgres;

--
-- Name: TABLE costratedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.costratedescriptor IS 'The rate by which a cost applies (e.g. $1 per student).';


--
-- Name: COLUMN costratedescriptor.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.costratedescriptor.costratedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: countrydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.countrydescriptor (
    countrydescriptorid integer NOT NULL
);


ALTER TABLE edfi.countrydescriptor OWNER TO postgres;

--
-- Name: TABLE countrydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.countrydescriptor IS 'This descriptor defines the name and code of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN countrydescriptor.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.countrydescriptor.countrydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: course; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.course (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    coursetitle character varying(60) NOT NULL,
    numberofparts integer NOT NULL,
    academicsubjectdescriptorid integer,
    coursedescription character varying(1024),
    timerequiredforcompletion integer,
    datecourseadopted date,
    highschoolcourserequirement boolean,
    coursegpaapplicabilitydescriptorid integer,
    coursedefinedbydescriptorid integer,
    minimumavailablecredits numeric(9,3),
    minimumavailablecredittypedescriptorid integer,
    minimumavailablecreditconversion numeric(9,2),
    maximumavailablecredits numeric(9,3),
    maximumavailablecredittypedescriptorid integer,
    maximumavailablecreditconversion numeric(9,2),
    careerpathwaydescriptorid integer,
    maxcompletionsforcredit integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.course OWNER TO postgres;

--
-- Name: TABLE course; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.course IS 'This educational entity represents the organization of subject matter and related learning experiences provided for the instruction of students on a regular or systematic basis.';


--
-- Name: COLUMN course.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN course.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN course.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, and language arts).';


--
-- Name: COLUMN course.numberofparts; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.numberofparts IS 'The number of parts identified for a course.';


--
-- Name: COLUMN course.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.academicsubjectdescriptorid IS 'The intended major subject area of the course.';


--
-- Name: COLUMN course.coursedescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedescription IS 'A description of the content standards and goals covered in the course. Reference may be made to state or national content standards.';


--
-- Name: COLUMN course.timerequiredforcompletion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.timerequiredforcompletion IS 'The actual or estimated number of clock minutes required for class completion. This number is especially important for career and technical education classes and may represent (in minutes) the clock hour requirement of the class.';


--
-- Name: COLUMN course.datecourseadopted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.datecourseadopted IS 'Date the course was adopted by the education agency.';


--
-- Name: COLUMN course.highschoolcourserequirement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.highschoolcourserequirement IS 'An indication that this course may satisfy high school graduation requirements in the course''s subject area.';


--
-- Name: COLUMN course.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursegpaapplicabilitydescriptorid IS 'An indicator of whether or not the course being described is included in the computation of the student''s grade point average, and if so, if it is weighted differently from regular courses.';


--
-- Name: COLUMN course.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.coursedefinedbydescriptorid IS 'Specifies whether the course was defined by the SEA, LEA, School, or national organization.';


--
-- Name: COLUMN course.minimumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.minimumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.minimumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.maximumavailablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.maximumavailablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN course.maximumavailablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maximumavailablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN course.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.careerpathwaydescriptorid IS 'Indicates the career cluster or pathway the course is associated with as part of a CTE curriculum.';


--
-- Name: COLUMN course.maxcompletionsforcredit; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.course.maxcompletionsforcredit IS 'Designates how many times the course may be taken with credit received by the student.';


--
-- Name: courseattemptresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseattemptresultdescriptor (
    courseattemptresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseattemptresultdescriptor OWNER TO postgres;

--
-- Name: TABLE courseattemptresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseattemptresultdescriptor IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN courseattemptresultdescriptor.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseattemptresultdescriptor.courseattemptresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursecompetencylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursecompetencylevel (
    competencyleveldescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursecompetencylevel OWNER TO postgres;

--
-- Name: TABLE coursecompetencylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursecompetencylevel IS 'The competency levels defined to rate the student for the course.';


--
-- Name: COLUMN coursecompetencylevel.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.competencyleveldescriptorid IS 'The competency levels defined to rate the student for the course.';


--
-- Name: COLUMN coursecompetencylevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursecompetencylevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursecompetencylevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: coursedefinedbydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursedefinedbydescriptor (
    coursedefinedbydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursedefinedbydescriptor OWNER TO postgres;

--
-- Name: TABLE coursedefinedbydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursedefinedbydescriptor IS 'Specifies whether the course was defined by the state education agency, local education agency, school, or national organization.';


--
-- Name: COLUMN coursedefinedbydescriptor.coursedefinedbydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursedefinedbydescriptor.coursedefinedbydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursegpaapplicabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursegpaapplicabilitydescriptor (
    coursegpaapplicabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.coursegpaapplicabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE coursegpaapplicabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursegpaapplicabilitydescriptor IS 'An indicator of whether or not this course being described is included in the computation of the student''s Grade Point Average, and if so, if it is weighted differently than regular courses.';


--
-- Name: COLUMN coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursegpaapplicabilitydescriptor.coursegpaapplicabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationcode (
    coursecode character varying(60) NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseidentificationcode OWNER TO postgres;

--
-- Name: TABLE courseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationcode IS 'The code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: COLUMN courseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN courseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: courseidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseidentificationsystemdescriptor (
    courseidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courseidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE courseidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseidentificationsystemdescriptor IS 'This descriptor defines a standard code that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseidentificationsystemdescriptor.courseidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courselearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningobjective (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningobjective OWNER TO postgres;

--
-- Name: TABLE courselearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningobjective IS 'Learning objectives to be mastered in the course.';


--
-- Name: COLUMN courselearningobjective.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN courselearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: courselearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselearningstandard (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselearningstandard OWNER TO postgres;

--
-- Name: TABLE courselearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselearningstandard IS 'Learning standard(s) to be taught by the course.';


--
-- Name: COLUMN courselearningstandard.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courselearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: courselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristic (
    coursecode character varying(60) NOT NULL,
    courselevelcharacteristicdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristic IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: COLUMN courselevelcharacteristic.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course is associated (e.g., AP, IB, Dual Credit, CTE).';


--
-- Name: COLUMN courselevelcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: courselevelcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courselevelcharacteristicdescriptor (
    courselevelcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.courselevelcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE courselevelcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courselevelcharacteristicdescriptor IS 'The item for indication of the nature and difficulty of instruction: Remedial, Basic, Honors, Ap, IB, Dual Credit, CTE. etc.';


--
-- Name: COLUMN courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courselevelcharacteristicdescriptor.courselevelcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: courseofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferedgradelevel (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferedgradelevel IS 'The grade levels in which the course is offered.';


--
-- Name: COLUMN courseofferedgradelevel.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseofferedgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN courseofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered.';


--
-- Name: courseoffering; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseoffering (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    localcoursetitle character varying(60),
    instructionaltimeplanned integer,
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.courseoffering OWNER TO postgres;

--
-- Name: TABLE courseoffering; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseoffering IS 'This entity represents an entry in the course catalog of available courses offered by the school during a session.';


--
-- Name: COLUMN courseoffering.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseoffering.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseoffering.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseoffering.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN courseoffering.localcoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.localcoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the course title.';


--
-- Name: COLUMN courseoffering.instructionaltimeplanned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.instructionaltimeplanned IS 'The planned total number of clock minutes of instruction for this course offering. Generally, this should be at least as many minutes as is required for completion by the related state- or district-defined course.';


--
-- Name: COLUMN courseoffering.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN courseoffering.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseoffering.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: courseofferingcourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcourselevelcharacteristic (
    courselevelcharacteristicdescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE courseofferingcourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcourselevelcharacteristic IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the course offering is associated (e.g., AP, IB, Dual Credit, CTE). This collection should only be populated if it differs from the course level characteristics identified at the course level.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: courseofferingcurriculumused; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingcurriculumused (
    curriculumuseddescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingcurriculumused OWNER TO postgres;

--
-- Name: TABLE courseofferingcurriculumused; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingcurriculumused IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN courseofferingcurriculumused.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.curriculumuseddescriptorid IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN courseofferingcurriculumused.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingcurriculumused.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingcurriculumused.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingcurriculumused.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: courseofferingofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courseofferingofferedgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.courseofferingofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE courseofferingofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courseofferingofferedgradelevel IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.';


--
-- Name: COLUMN courseofferingofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the course is offered. This collection should only be populated if it differs from the offered grade levels identified at the course level.';


--
-- Name: COLUMN courseofferingofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN courseofferingofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN courseofferingofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courseofferingofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: courserepeatcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.courserepeatcodedescriptor (
    courserepeatcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.courserepeatcodedescriptor OWNER TO postgres;

--
-- Name: TABLE courserepeatcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.courserepeatcodedescriptor IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN courserepeatcodedescriptor.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.courserepeatcodedescriptor.courserepeatcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: coursetranscript; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscript (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    attemptedcredits numeric(9,3),
    attemptedcredittypedescriptorid integer,
    attemptedcreditconversion numeric(9,2),
    earnedcredits numeric(9,3) NOT NULL,
    earnedcredittypedescriptorid integer,
    earnedcreditconversion numeric(9,2),
    whentakengradeleveldescriptorid integer,
    methodcreditearneddescriptorid integer,
    finallettergradeearned character varying(20),
    finalnumericgradeearned numeric(9,2),
    courserepeatcodedescriptorid integer,
    coursetitle character varying(60),
    alternativecoursetitle character varying(60),
    alternativecoursecode character varying(60),
    externaleducationorganizationid integer,
    externaleducationorganizationnameofinstitution character varying(75),
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.coursetranscript OWNER TO postgres;

--
-- Name: TABLE coursetranscript; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscript IS 'This entity is the final record of a student''s performance in their courses at the end of a semester or school year.';


--
-- Name: COLUMN coursetranscript.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscript.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscript.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscript.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscript.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscript.attemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.attemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.attemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.attemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.earnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscript.earnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.earnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN coursetranscript.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.whentakengradeleveldescriptorid IS 'Student''s grade level at time of course.';


--
-- Name: COLUMN coursetranscript.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.methodcreditearneddescriptorid IS 'The method the credits were earned.';


--
-- Name: COLUMN coursetranscript.finallettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finallettergradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.finalnumericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.finalnumericgradeearned IS 'The final indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN coursetranscript.courserepeatcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.courserepeatcodedescriptorid IS 'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.';


--
-- Name: COLUMN coursetranscript.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursetitle IS 'The descriptive name given to a course of study offered in a school or other institution or organization. In departmentalized classes at the elementary, secondary, and postsecondary levels (and for staff development activities), this refers to the name by which a course is identified (e.g., American History, English III). For elementary and other non-departmentalized classes, it refers to any portion of the instruction for which a grade or report is assigned (e.g., reading, composition, spelling, language arts).';


--
-- Name: COLUMN coursetranscript.alternativecoursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursetitle IS 'The descriptive name given to a course of study offered in the school, if different from the CourseTitle.';


--
-- Name: COLUMN coursetranscript.alternativecoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.alternativecoursecode IS 'The local code assigned by the school that identifies the course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscript.externaleducationorganizationnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.externaleducationorganizationnameofinstitution IS 'Name of the external institution where the student completed the course; to be used only when the reference external education organization is not available.';


--
-- Name: COLUMN coursetranscript.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.assigningorganizationidentificationcode IS 'The organization code or name assigning the course identification code.';


--
-- Name: COLUMN coursetranscript.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscript.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: coursetranscriptacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptacademicsubject OWNER TO postgres;

--
-- Name: TABLE coursetranscriptacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptacademicsubject IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.academicsubjectdescriptorid IS 'The subject area for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptacademicsubject.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptacademicsubject.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptacademicsubject.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptacademicsubject.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptacademicsubject.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptalternativecourseidentificationcode (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    courseidentificationsystemdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    coursecatalogurl character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptalternativecourseidentificationcode OWNER TO postgres;

--
-- Name: TABLE coursetranscriptalternativecourseidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptalternativecourseidentificationcode IS 'The code that identifies the course, course offering, the code from an external educational organization, or other alternate course code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.courseidentificationsystemdescriptorid IS 'A system that is used to identify the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a course by a school, school system, state, or other agency or entity. For multi-part course codes, concatenate the parts separated by a "/". For example, consider the following SCED code-    subject = 20 Math    course = 272 Geometry    level = G General    credits = 1.00   course sequence 1 of 1- would be entered as 20/272/G/1.00/1 of 1.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the Identification Code.';


--
-- Name: COLUMN coursetranscriptalternativecourseidentificationcode.coursecatalogurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptalternativecourseidentificationcode.coursecatalogurl IS 'The URL for the course catalog that defines the course identification code.';


--
-- Name: coursetranscriptcreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptcreditcategory (
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    creditcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptcreditcategory OWNER TO postgres;

--
-- Name: TABLE coursetranscriptcreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptcreditcategory IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptcreditcategory.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN coursetranscriptcreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptcreditcategory.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptcreditcategory.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptcreditcategory.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptcreditcategory.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: coursetranscriptearnedadditionalcredits; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptearnedadditionalcredits (
    additionalcredittypedescriptorid integer NOT NULL,
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    credits numeric(9,3) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptearnedadditionalcredits OWNER TO postgres;

--
-- Name: TABLE coursetranscriptearnedadditionalcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptearnedadditionalcredits IS 'The number of additional credits a student attempted and could earn for successfully completing a given course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.additionalcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptearnedadditionalcredits.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptearnedadditionalcredits.credits IS 'The value of credits or units of value awarded for the completion of a course';


--
-- Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.coursetranscriptpartialcoursetranscriptawards (
    awarddate date NOT NULL,
    courseattemptresultdescriptorid integer NOT NULL,
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    earnedcredits numeric(9,3) NOT NULL,
    methodcreditearneddescriptorid integer,
    lettergradeearned character varying(20),
    numericgradeearned character varying(20),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.coursetranscriptpartialcoursetranscriptawards OWNER TO postgres;

--
-- Name: TABLE coursetranscriptpartialcoursetranscriptawards; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.coursetranscriptpartialcoursetranscriptawards IS 'A collection of partial credits and/or grades a student earned against the course over the session, used when awards of credit are incremental.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.awarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.awarddate IS 'The date the partial credits and/or grades were awarded or earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseattemptresultdescriptorid IS 'The result from the student''s attempt to take the course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.earnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.earnedcredits IS 'The number of credits a student earned for completing a given course.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.methodcreditearneddescriptorid IS 'The method the credits were earned.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.lettergradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: COLUMN coursetranscriptpartialcoursetranscriptawards.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.coursetranscriptpartialcoursetranscriptawards.numericgradeearned IS 'The indicator of student performance as submitted by the instructor.';


--
-- Name: credential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credential (
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    effectivedate date,
    expirationdate date,
    credentialfielddescriptorid integer,
    issuancedate date NOT NULL,
    credentialtypedescriptorid integer NOT NULL,
    teachingcredentialdescriptorid integer,
    teachingcredentialbasisdescriptorid integer,
    namespace character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.credential OWNER TO postgres;

--
-- Name: TABLE credential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN credential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: COLUMN credential.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.effectivedate IS 'The year, month and day on which an active credential held by an individual was issued.';


--
-- Name: COLUMN credential.expirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.expirationdate IS 'The month, day, and year on which an active credential held by an individual will expire.';


--
-- Name: COLUMN credential.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialfielddescriptorid IS 'The field of certification for the certificate (e.g., Mathematics, Music).';


--
-- Name: COLUMN credential.issuancedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.issuancedate IS 'The month, day, and year on which an active credential was issued to an individual.';


--
-- Name: COLUMN credential.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.credentialtypedescriptorid IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credential.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialdescriptorid IS 'An indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN credential.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.teachingcredentialbasisdescriptorid IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN credential.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credential.namespace IS 'Namespace for the credential.';


--
-- Name: credentialacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialacademicsubject OWNER TO postgres;

--
-- Name: TABLE credentialacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialacademicsubject IS 'The academic subjects to which the credential pertains.';


--
-- Name: COLUMN credentialacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.academicsubjectdescriptorid IS 'The academic subjects to which the credential pertains.';


--
-- Name: COLUMN credentialacademicsubject.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialacademicsubject.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialacademicsubject.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: credentialendorsement; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialendorsement (
    credentialendorsement character varying(255) NOT NULL,
    credentialidentifier character varying(60) NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialendorsement OWNER TO postgres;

--
-- Name: TABLE credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: COLUMN credentialendorsement.credentialendorsement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialendorsement IS 'Endorsements are attachments to teaching certificates and indicate areas of specialization.';


--
-- Name: COLUMN credentialendorsement.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialendorsement.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialendorsement.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: credentialfielddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialfielddescriptor (
    credentialfielddescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialfielddescriptor OWNER TO postgres;

--
-- Name: TABLE credentialfielddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialfielddescriptor IS 'This descriptor defines the fields of certification that the state education agency offers to teachers.';


--
-- Name: COLUMN credentialfielddescriptor.credentialfielddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialfielddescriptor.credentialfielddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credentialgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialgradelevel (
    credentialidentifier character varying(60) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.credentialgradelevel OWNER TO postgres;

--
-- Name: TABLE credentialgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialgradelevel IS 'The grade level(s) certified for teaching.';


--
-- Name: COLUMN credentialgradelevel.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN credentialgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.gradeleveldescriptorid IS 'The grade level(s) certified for teaching.';


--
-- Name: COLUMN credentialgradelevel.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialgradelevel.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: credentialtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credentialtypedescriptor (
    credentialtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credentialtypedescriptor OWNER TO postgres;

--
-- Name: TABLE credentialtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credentialtypedescriptor IS 'An indication of the category of credential an individual holds.';


--
-- Name: COLUMN credentialtypedescriptor.credentialtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credentialtypedescriptor.credentialtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: creditcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.creditcategorydescriptor (
    creditcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.creditcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE creditcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.creditcategorydescriptor IS 'A categorization for the course transcript credits.';


--
-- Name: COLUMN creditcategorydescriptor.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.creditcategorydescriptor.creditcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: credittypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.credittypedescriptor (
    credittypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.credittypedescriptor OWNER TO postgres;

--
-- Name: TABLE credittypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.credittypedescriptor IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN credittypedescriptor.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.credittypedescriptor.credittypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: cteprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.cteprogramservicedescriptor (
    cteprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.cteprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE cteprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.cteprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a CTE program.';


--
-- Name: COLUMN cteprogramservicedescriptor.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.cteprogramservicedescriptor.cteprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: curriculumuseddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.curriculumuseddescriptor (
    curriculumuseddescriptorid integer NOT NULL
);


ALTER TABLE edfi.curriculumuseddescriptor OWNER TO postgres;

--
-- Name: TABLE curriculumuseddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.curriculumuseddescriptor IS 'The type of curriculum used in an early learning classroom or group.';


--
-- Name: COLUMN curriculumuseddescriptor.curriculumuseddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.curriculumuseddescriptor.curriculumuseddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: deliverymethoddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.deliverymethoddescriptor (
    deliverymethoddescriptorid integer NOT NULL
);


ALTER TABLE edfi.deliverymethoddescriptor OWNER TO postgres;

--
-- Name: TABLE deliverymethoddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.deliverymethoddescriptor IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN deliverymethoddescriptor.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.deliverymethoddescriptor.deliverymethoddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptor (
    descriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    codevalue character varying(50) NOT NULL,
    shortdescription character varying(75) NOT NULL,
    description character varying(1024),
    priordescriptorid integer,
    effectivebegindate date,
    effectiveenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.descriptor OWNER TO postgres;

--
-- Name: TABLE descriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptor IS 'This is the base entity for the descriptor pattern.';


--
-- Name: COLUMN descriptor.descriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.descriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.namespace IS 'A globally unique namespace that identifies this descriptor set. Author is strongly encouraged to use the Universal Resource Identifier (http, ftp, file, etc.) for the source of the descriptor definition. Best practice is for this source to be the descriptor file itself, so that it can be machine-readable and be fetched in real-time, if necessary.';


--
-- Name: COLUMN descriptor.codevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.codevalue IS 'A code or abbreviation that is used to refer to the descriptor.';


--
-- Name: COLUMN descriptor.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.shortdescription IS 'A shortened description for the descriptor.';


--
-- Name: COLUMN descriptor.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.description IS 'The description of the descriptor.';


--
-- Name: COLUMN descriptor.priordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.priordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: COLUMN descriptor.effectivebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectivebegindate IS 'The beginning date of the period when the descriptor is in effect. If omitted, the default is immediate effectiveness.';


--
-- Name: COLUMN descriptor.effectiveenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptor.effectiveenddate IS 'The end date of the period when the descriptor is in effect.';


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.descriptor_descriptorid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.descriptor_descriptorid_seq OWNER TO postgres;

--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.descriptor_descriptorid_seq OWNED BY edfi.descriptor.descriptorid;


--
-- Name: descriptormapping; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptormapping (
    mappednamespace character varying(255) NOT NULL,
    mappedvalue character varying(50) NOT NULL,
    namespace character varying(255) NOT NULL,
    value character varying(50) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.descriptormapping OWNER TO postgres;

--
-- Name: TABLE descriptormapping; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptormapping IS 'A mapping of a descriptor value in one namespace to a descriptor value in another namespace. This can be used to exchange known contextual mappings of enumeration values.';


--
-- Name: COLUMN descriptormapping.mappednamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.mappednamespace IS 'The namespace of the descriptor value to which the from descriptor value is mapped to.';


--
-- Name: COLUMN descriptormapping.mappedvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.mappedvalue IS 'The descriptor value to which the from descriptor value is being mapped to.';


--
-- Name: COLUMN descriptormapping.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.namespace IS 'The namespace of the descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormapping.value; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormapping.value IS 'The descriptor value that is being mapped to another value.';


--
-- Name: descriptormappingmodelentity; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.descriptormappingmodelentity (
    mappednamespace character varying(255) NOT NULL,
    mappedvalue character varying(50) NOT NULL,
    modelentitydescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    value character varying(50) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.descriptormappingmodelentity OWNER TO postgres;

--
-- Name: TABLE descriptormappingmodelentity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.descriptormappingmodelentity IS 'The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.';


--
-- Name: COLUMN descriptormappingmodelentity.mappednamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.mappednamespace IS 'The namespace of the descriptor value to which the from descriptor value is mapped to.';


--
-- Name: COLUMN descriptormappingmodelentity.mappedvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.mappedvalue IS 'The descriptor value to which the from descriptor value is being mapped to.';


--
-- Name: COLUMN descriptormappingmodelentity.modelentitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.modelentitydescriptorid IS 'The resources for which the descriptor mapping applies. If empty, the mapping is assumed to be applicable to all resources in which the descriptor appears.';


--
-- Name: COLUMN descriptormappingmodelentity.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.namespace IS 'The namespace of the descriptor value that is being mapped to another value.';


--
-- Name: COLUMN descriptormappingmodelentity.value; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.descriptormappingmodelentity.value IS 'The descriptor value that is being mapped to another value.';


--
-- Name: diagnosisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diagnosisdescriptor (
    diagnosisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.diagnosisdescriptor OWNER TO postgres;

--
-- Name: TABLE diagnosisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diagnosisdescriptor IS 'This descriptor defines diagnoses that interventions are intended to target.';


--
-- Name: COLUMN diagnosisdescriptor.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diagnosisdescriptor.diagnosisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomaleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomaleveldescriptor (
    diplomaleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomaleveldescriptor OWNER TO postgres;

--
-- Name: TABLE diplomaleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomaleveldescriptor IS 'The level of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomaleveldescriptor.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomaleveldescriptor.diplomaleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: diplomatypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.diplomatypedescriptor (
    diplomatypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.diplomatypedescriptor OWNER TO postgres;

--
-- Name: TABLE diplomatypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.diplomatypedescriptor IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN diplomatypedescriptor.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.diplomatypedescriptor.diplomatypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydescriptor (
    disabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydescriptor IS 'This descriptor defines a student''s impairment.';


--
-- Name: COLUMN disabilitydescriptor.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydescriptor.disabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydesignationdescriptor (
    disabilitydesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydesignationdescriptor IS 'The type of disability designation (e.g., IDEA, Section 504).';


--
-- Name: COLUMN disabilitydesignationdescriptor.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydesignationdescriptor.disabilitydesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disabilitydeterminationsourcetypedescriptor (
    disabilitydeterminationsourcetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disabilitydeterminationsourcetypedescriptor OWNER TO postgres;

--
-- Name: TABLE disabilitydeterminationsourcetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disabilitydeterminationsourcetypedescriptor IS 'The source that provided the disability determination.';


--
-- Name: COLUMN disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disabilitydeterminationsourcetypedescriptor.disabilitydeterminationsourcetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineaction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineaction (
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    studentusi integer NOT NULL,
    disciplineactionlength numeric(5,2),
    actualdisciplineactionlength numeric(5,2),
    disciplineactionlengthdifferencereasondescriptorid integer,
    relatedtozerotolerancepolicy boolean,
    responsibilityschoolid integer NOT NULL,
    assignmentschoolid integer,
    receivededucationservicesduringexpulsion boolean,
    iepplacementmeetingindicator boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineaction OWNER TO postgres;

--
-- Name: TABLE disciplineaction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineaction IS 'This event entity represents actions taken by an education organization after a disruptive event that is recorded as a discipline incident.';


--
-- Name: COLUMN disciplineaction.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineaction.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineaction.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN disciplineaction.disciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlength IS 'The length of time in school days for the discipline action (e.g. removal, detention), if applicable.';


--
-- Name: COLUMN disciplineaction.actualdisciplineactionlength; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.actualdisciplineactionlength IS 'Indicates the actual length in school days of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.disciplineactionlengthdifferencereasondescriptorid IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineaction.relatedtozerotolerancepolicy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.relatedtozerotolerancepolicy IS 'An indication of whether or not this disciplinary action taken against a student was imposed as a consequence of state or local zero tolerance policies.';


--
-- Name: COLUMN disciplineaction.responsibilityschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.responsibilityschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineaction.assignmentschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.assignmentschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineaction.receivededucationservicesduringexpulsion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.receivededucationservicesduringexpulsion IS 'An indication of whether the student received educational services when removed from the regular school program for disciplinary reasons.';


--
-- Name: COLUMN disciplineaction.iepplacementmeetingindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineaction.iepplacementmeetingindicator IS 'An indication as to whether an offense and/or disciplinary action resulted in a meeting of a student''s Individualized Education Program (IEP) team to determine appropriate placement.';


--
-- Name: disciplineactiondiscipline; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactiondiscipline (
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    disciplinedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactiondiscipline OWNER TO postgres;

--
-- Name: TABLE disciplineactiondiscipline; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactiondiscipline IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactiondiscipline.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.disciplinedescriptorid IS 'Type of action, such as removal from the classroom, used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplineactiondiscipline.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactiondiscipline.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionlengthdifferencereasondescriptor (
    disciplineactionlengthdifferencereasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineactionlengthdifferencereasondescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineactionlengthdifferencereasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionlengthdifferencereasondescriptor IS 'Indicates the reason for the difference, if any, between the official and actual lengths of a student''s disciplinary assignment.';


--
-- Name: COLUMN disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionlengthdifferencereasondescriptor.disciplineactionlengthdifferencereasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineactionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstaff (
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    staffusi integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstaff OWNER TO postgres;

--
-- Name: TABLE disciplineactionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstaff IS 'The staff responsible for enforcing the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN disciplineactionstaff.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstaff.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplineactionstudentdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstudentdisciplineincidentassociation (
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstudentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE disciplineactionstudentdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstudentdisciplineincidentassociation IS 'Reference to the discipline incident associated with the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (
    behaviordescriptorid integer NOT NULL,
    disciplineactionidentifier character varying(32) NOT NULL,
    disciplinedate date NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE disciplineactionstudentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineactionstudentdisciplineincidentbehaviorassociation IS 'A reference to the behavior(s) by the student that led or contributed to this specific action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplineactionidentifier IS 'Identifier assigned by the education organization to the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.disciplinedate IS 'The date of the discipline action.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineactionstudentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: disciplinedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplinedescriptor (
    disciplinedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplinedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplinedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplinedescriptor IS 'This descriptor defines the type of action or removal from the classroom used to discipline the student involved as a perpetrator in a discipline incident.';


--
-- Name: COLUMN disciplinedescriptor.disciplinedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplinedescriptor.disciplinedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincident; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincident (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    incidentdate date NOT NULL,
    incidenttime time without time zone,
    incidentlocationdescriptorid integer,
    incidentdescription character varying(1024),
    reporterdescriptiondescriptorid integer,
    reportername character varying(75),
    reportedtolawenforcement boolean,
    casenumber character varying(20),
    incidentcost money,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.disciplineincident OWNER TO postgres;

--
-- Name: TABLE disciplineincident; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincident IS 'This event entity represents an occurrence of an infraction ranging from a minor behavioral problem that disrupts the orderly functioning of a school or classroom (such as tardiness) to a criminal act that results in the involvement of a law enforcement official (such as robbery). A single event (e.g., a fight) is one incident regardless of how many perpetrators or victims are involved. Discipline incidents are events classified as warranting discipline action.';


--
-- Name: COLUMN disciplineincident.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincident.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincident.incidentdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdate IS 'The month, day, and year on which the discipline incident occurred.';


--
-- Name: COLUMN disciplineincident.incidenttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidenttime IS 'An indication of the time of day the incident took place.';


--
-- Name: COLUMN disciplineincident.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentlocationdescriptorid IS 'Identifies where the discipline incident occurred and whether or not it occurred on school.';


--
-- Name: COLUMN disciplineincident.incidentdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentdescription IS 'The description for an incident.';


--
-- Name: COLUMN disciplineincident.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reporterdescriptiondescriptorid IS 'Information on the type of individual who reported the discipline incident. When known and/or if useful, use a more specific option code (e.g., "Counselor" rather than "Professional Staff").';


--
-- Name: COLUMN disciplineincident.reportername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportername IS 'Identifies the reporter of the discipline incident by name.';


--
-- Name: COLUMN disciplineincident.reportedtolawenforcement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.reportedtolawenforcement IS 'Indicator of whether the incident was reported to law enforcement.';


--
-- Name: COLUMN disciplineincident.casenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.casenumber IS 'The case number assigned to the DisciplineIncident by law enforcement or other organization.';


--
-- Name: COLUMN disciplineincident.incidentcost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.incidentcost IS 'The value of any quantifiable monetary loss directly resulting from the discipline incident. Examples include the value of repairs necessitated by vandalism of a school facility, or the value of personnel resources used for repairs or consumed by the incident.';


--
-- Name: COLUMN disciplineincident.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincident.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: disciplineincidentbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentbehavior (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentbehavior OWNER TO postgres;

--
-- Name: TABLE disciplineincidentbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN disciplineincidentbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: disciplineincidentexternalparticipant; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentexternalparticipant (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    firstname character varying(75) NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    lastsurname character varying(75) NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentexternalparticipant OWNER TO postgres;

--
-- Name: TABLE disciplineincidentexternalparticipant; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentexternalparticipant IS 'Information on an individual involved in the discipline incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of an individual in the discipline incident.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN disciplineincidentexternalparticipant.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentexternalparticipant.schoolid IS 'The identifier assigned to a school.';


--
-- Name: disciplineincidentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentparticipationcodedescriptor (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.disciplineincidentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE disciplineincidentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentparticipationcodedescriptor IS 'The role or type of participation of a person in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentparticipationcodedescriptor.disciplineincidentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: disciplineincidentweapon; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.disciplineincidentweapon (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    weapondescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.disciplineincidentweapon OWNER TO postgres;

--
-- Name: TABLE disciplineincidentweapon; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.disciplineincidentweapon IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: COLUMN disciplineincidentweapon.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN disciplineincidentweapon.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN disciplineincidentweapon.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.disciplineincidentweapon.weapondescriptorid IS 'Identifies the type of weapon used during an incident. The Federal Gun-Free Schools Act requires states to report the number of students expelled for bringing firearms to school by type of firearm.';


--
-- Name: educationalenvironmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationalenvironmentdescriptor (
    educationalenvironmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationalenvironmentdescriptor OWNER TO postgres;

--
-- Name: TABLE educationalenvironmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationalenvironmentdescriptor IS 'The setting in which a child receives education and related services.';


--
-- Name: COLUMN educationalenvironmentdescriptor.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationalenvironmentdescriptor.educationalenvironmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontent (
    contentidentifier character varying(225) NOT NULL,
    learningresourcemetadatauri character varying(255),
    shortdescription character varying(75),
    description character varying(1024),
    additionalauthorsindicator boolean,
    publisher character varying(50),
    timerequired character varying(30),
    interactivitystyledescriptorid integer,
    contentclassdescriptorid integer,
    userightsurl character varying(255),
    publicationdate date,
    publicationyear smallint,
    version character varying(10),
    learningstandardid character varying(60),
    cost money,
    costratedescriptorid integer,
    namespace character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontent IS 'This entity represents materials for students or teachers that can be used for teaching, learning, research, and more. Education content includes full courses, course materials, modules, intervention descriptions, textbooks, streaming videos, tests, software, and any other tools, materials, or techniques used to support access to knowledge.';


--
-- Name: COLUMN educationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontent.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontent.shortdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.shortdescription IS 'A short description or name of the entity.';


--
-- Name: COLUMN educationcontent.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.description IS 'An extended written representation of the education content.';


--
-- Name: COLUMN educationcontent.additionalauthorsindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.additionalauthorsindicator IS 'Indicates whether there are additional un-named authors. In a research report, this is often marked by the abbreviation "et al".';


--
-- Name: COLUMN educationcontent.publisher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publisher IS 'The organization credited with publishing the resource.';


--
-- Name: COLUMN educationcontent.timerequired; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.timerequired IS 'Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience.';


--
-- Name: COLUMN educationcontent.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.interactivitystyledescriptorid IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN educationcontent.contentclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.contentclassdescriptorid IS 'The predominate type or kind characterizing the learning resource.';


--
-- Name: COLUMN educationcontent.userightsurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.userightsurl IS 'The URL where the owner specifies permissions for using the resource.';


--
-- Name: COLUMN educationcontent.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN educationcontent.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN educationcontent.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.version IS 'The version identifier for the content.';


--
-- Name: COLUMN educationcontent.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN educationcontent.cost; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.cost IS 'An amount that has to be paid or spent to buy or obtain the education content.';


--
-- Name: COLUMN educationcontent.costratedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.costratedescriptorid IS 'The rate by which the cost applies.';


--
-- Name: COLUMN educationcontent.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontent.namespace IS 'Namespace for the education content.';


--
-- Name: educationcontentappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriategradelevel (
    contentidentifier character varying(225) NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriategradelevel IS 'Grade levels for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriategradelevel.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentappropriatesex (
    contentidentifier character varying(225) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentappropriatesex OWNER TO postgres;

--
-- Name: TABLE educationcontentappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentappropriatesex IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: COLUMN educationcontentappropriatesex.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentappropriatesex.sexdescriptorid IS 'Sexes for which this education content is applicable. If omitted, considered generally applicable.';


--
-- Name: educationcontentauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentauthor (
    author character varying(100) NOT NULL,
    contentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentauthor OWNER TO postgres;

--
-- Name: TABLE educationcontentauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentauthor IS 'The individual credited with the creation of the resource.';


--
-- Name: COLUMN educationcontentauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.author IS 'The individual credited with the creation of the resource.';


--
-- Name: COLUMN educationcontentauthor.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentauthor.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: educationcontentderivativesourceeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceeducationcontent (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcecontentidentifier character varying(225) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceeducationcontent OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceeducationcontent.derivativesourcecontentidentifier IS 'A unique identifier for the education content.';


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourcelearningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourcelearningresourcemetadatauri.derivativesourcelearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: educationcontentderivativesourceuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentderivativesourceuri (
    contentidentifier character varying(225) NOT NULL,
    derivativesourceuri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentderivativesourceuri OWNER TO postgres;

--
-- Name: TABLE educationcontentderivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentderivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN educationcontentderivativesourceuri.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentderivativesourceuri.derivativesourceuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentderivativesourceuri.derivativesourceuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: educationcontentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationcontentlanguage (
    contentidentifier character varying(225) NOT NULL,
    languagedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationcontentlanguage OWNER TO postgres;

--
-- Name: TABLE educationcontentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationcontentlanguage IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: COLUMN educationcontentlanguage.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN educationcontentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationcontentlanguage.languagedescriptorid IS 'An indication of the languages in which the Education Content is designed.';


--
-- Name: educationorganization; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganization (
    educationorganizationid integer NOT NULL,
    nameofinstitution character varying(75) NOT NULL,
    shortnameofinstitution character varying(75),
    website character varying(255),
    operationalstatusdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganization OWNER TO postgres;

--
-- Name: TABLE educationorganization; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganization IS 'This entity represents any public or private institution, organization, or agency that provides instructional or support services to students or staff at any level.';


--
-- Name: COLUMN educationorganization.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganization.nameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.nameofinstitution IS 'The full, legally accepted name of the institution.';


--
-- Name: COLUMN educationorganization.shortnameofinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.shortnameofinstitution IS 'A short name for the institution.';


--
-- Name: COLUMN educationorganization.website; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.website IS 'The public web site address (URL) for the education organization.';


--
-- Name: COLUMN educationorganization.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganization.operationalstatusdescriptorid IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: educationorganizationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddress OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddress IS 'The set of elements that describes an address for the education entity, including the street address, city, state, ZIP code, and ZIP code + 4.';


--
-- Name: COLUMN educationorganizationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN educationorganizationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN educationorganizationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN educationorganizationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN educationorganizationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN educationorganizationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN educationorganizationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: educationorganizationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationaddressperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN educationorganizationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN educationorganizationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN educationorganizationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationassociationtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationassociationtypedescriptor (
    educationorganizationassociationtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationassociationtypedescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationassociationtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationassociationtypedescriptor IS 'The type of education organization association being represented.';


--
-- Name: COLUMN educationorganizationassociationtypedescriptor.educationorganizationassociationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationassociationtypedescriptor.educationorganizationassociationtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategory (
    educationorganizationcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationcategory OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategory IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationcategorydescriptorid IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: educationorganizationcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationcategorydescriptor (
    educationorganizationcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationcategorydescriptor IS 'The classification of the education agency within the geographic boundaries of a state according to the level of administrative and operational control granted by the state.';


--
-- Name: COLUMN educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationcategorydescriptor.educationorganizationcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationcode (
    educationorganizationid integer NOT NULL,
    educationorganizationidentificationsystemdescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationcode OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationcode IS 'A unique number or alphanumeric code assigned to an education organization by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.educationorganizationidentificationsystemdescriptorid IS 'The school system, state, or agency assigning the identification code.';


--
-- Name: COLUMN educationorganizationidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationcode.identificationcode IS 'A unique number or alphanumeric code that is assigned to an education organization by a school, school system, state, or other agency or entity.';


--
-- Name: educationorganizationidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationidentificationsystemdescriptor (
    educationorganizationidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE educationorganizationidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes by education organizations.';


--
-- Name: COLUMN educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationidentificationsystemdescriptor.educationorganizationidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationorganizationindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicator (
    educationorganizationid integer NOT NULL,
    indicatordescriptorid integer NOT NULL,
    designatedby character varying(60),
    indicatorvalue character varying(60),
    indicatorleveldescriptorid integer,
    indicatorgroupdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicator OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicator IS 'An indicator or metric of an education organization.';


--
-- Name: COLUMN educationorganizationindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicator.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.designatedby IS 'The person, organization, or department that defined the metric.';


--
-- Name: COLUMN educationorganizationindicator.indicatorvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorvalue IS 'The value of the indicator or metric. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN educationorganizationindicator.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorleveldescriptorid IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN educationorganizationindicator.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicator.indicatorgroupdescriptorid IS 'The name for a group of indicators.';


--
-- Name: educationorganizationindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationindicatorperiod (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    indicatordescriptorid integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationindicatorperiod OWNER TO postgres;

--
-- Name: TABLE educationorganizationindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationindicatorperiod IS 'The time period or as-of date for the indicator.';


--
-- Name: COLUMN educationorganizationindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN educationorganizationindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationindicatorperiod.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.indicatordescriptorid IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN educationorganizationindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: educationorganizationinstitutiontelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinstitutiontelephone (
    educationorganizationid integer NOT NULL,
    institutiontelephonenumbertypedescriptorid integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinstitutiontelephone OWNER TO postgres;

--
-- Name: TABLE educationorganizationinstitutiontelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinstitutiontelephone IS 'The 10-digit telephone number, including the area code, for the education entity.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.institutiontelephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN educationorganizationinstitutiontelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinstitutiontelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: educationorganizationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.educationorganizationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE educationorganizationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinternationaladdress IS 'The set of elements that describes the international physical location of the education entity.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN educationorganizationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN educationorganizationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN educationorganizationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationinterventionprescriptionassociation (
    educationorganizationid integer NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationinterventionprescriptionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationinterventionprescriptionassociation IS 'This association indicates interventions made available by an education organization. Often, a district-level education organization purchases a set of intervention prescriptions and makes them available to its schools for use on demand.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.begindate IS 'The begin date of the period during which the intervention prescription is available.';


--
-- Name: COLUMN educationorganizationinterventionprescriptionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationinterventionprescriptionassociation.enddate IS 'The end date of the period during which the intervention prescription is available.';


--
-- Name: educationorganizationnetwork; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetwork (
    educationorganizationnetworkid integer NOT NULL,
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationorganizationnetwork OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetwork; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetwork IS 'This entity is a self-organized membership network of peer-level education organizations intended to provide shared services or collective procurement.';


--
-- Name: COLUMN educationorganizationnetwork.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetwork.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetwork.networkpurposedescriptorid IS 'The purpose(s) of the network (e.g., shared services, collective procurement).';


--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationnetworkassociation (
    educationorganizationnetworkid integer NOT NULL,
    membereducationorganizationid integer NOT NULL,
    begindate date,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationnetworkassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationnetworkassociation IS 'Properties of the association between the education organization and its network(s).';


--
-- Name: COLUMN educationorganizationnetworkassociation.educationorganizationnetworkid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.educationorganizationnetworkid IS 'The identifier assigned to a network of education organizations.';


--
-- Name: COLUMN educationorganizationnetworkassociation.membereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.membereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationnetworkassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.begindate IS 'The date on which the education organization joined this network.';


--
-- Name: COLUMN educationorganizationnetworkassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationnetworkassociation.enddate IS 'The date on which the education organization left this network.';


--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationorganizationpeerassociation (
    educationorganizationid integer NOT NULL,
    peereducationorganizationid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: TABLE educationorganizationpeerassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationorganizationpeerassociation IS 'The association from an education organization to its peers.';


--
-- Name: COLUMN educationorganizationpeerassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN educationorganizationpeerassociation.peereducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationorganizationpeerassociation.peereducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: educationplandescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationplandescriptor (
    educationplandescriptorid integer NOT NULL
);


ALTER TABLE edfi.educationplandescriptor OWNER TO postgres;

--
-- Name: TABLE educationplandescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationplandescriptor IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN educationplandescriptor.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationplandescriptor.educationplandescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: educationservicecenter; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.educationservicecenter (
    educationservicecenterid integer NOT NULL,
    stateeducationagencyid integer
);


ALTER TABLE edfi.educationservicecenter OWNER TO postgres;

--
-- Name: TABLE educationservicecenter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.educationservicecenter IS 'This entity represents a regional, multi-services public agency authorized by state law to develop, manage and provide services, programs, or other support options (e.g., construction, food services, and technology services) to LEAs.';


--
-- Name: COLUMN educationservicecenter.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN educationservicecenter.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.educationservicecenter.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: electronicmailtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.electronicmailtypedescriptor (
    electronicmailtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.electronicmailtypedescriptor OWNER TO postgres;

--
-- Name: TABLE electronicmailtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.electronicmailtypedescriptor IS 'The type of email listed for an individual or organization.';


--
-- Name: COLUMN electronicmailtypedescriptor.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.electronicmailtypedescriptor.electronicmailtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: employmentstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.employmentstatusdescriptor (
    employmentstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.employmentstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE employmentstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.employmentstatusdescriptor IS 'This descriptor defines the type of employment or contract.';


--
-- Name: COLUMN employmentstatusdescriptor.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.employmentstatusdescriptor.employmentstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrygradelevelreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrygradelevelreasondescriptor (
    entrygradelevelreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrygradelevelreasondescriptor OWNER TO postgres;

--
-- Name: TABLE entrygradelevelreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrygradelevelreasondescriptor IS 'The primary reason as to why a staff member determined that a student should be promoted or not (or be demoted) at the end of a given school term.';


--
-- Name: COLUMN entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrygradelevelreasondescriptor.entrygradelevelreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: entrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.entrytypedescriptor (
    entrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.entrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE entrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.entrytypedescriptor IS 'This descriptor defines the process by which a student enters a school during a given academic session.';


--
-- Name: COLUMN entrytypedescriptor.entrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.entrytypedescriptor.entrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: eventcircumstancedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.eventcircumstancedescriptor (
    eventcircumstancedescriptorid integer NOT NULL
);


ALTER TABLE edfi.eventcircumstancedescriptor OWNER TO postgres;

--
-- Name: TABLE eventcircumstancedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.eventcircumstancedescriptor IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN eventcircumstancedescriptor.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.eventcircumstancedescriptor.eventcircumstancedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: exitwithdrawtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.exitwithdrawtypedescriptor (
    exitwithdrawtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.exitwithdrawtypedescriptor OWNER TO postgres;

--
-- Name: TABLE exitwithdrawtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.exitwithdrawtypedescriptor IS 'This descriptor defines the circumstances under which the student exited from membership in an educational institution.';


--
-- Name: COLUMN exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.exitwithdrawtypedescriptor.exitwithdrawtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: feederschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.feederschoolassociation (
    begindate date NOT NULL,
    feederschoolid integer NOT NULL,
    schoolid integer NOT NULL,
    enddate date,
    feederrelationshipdescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: TABLE feederschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.feederschoolassociation IS 'The association from feeder school to the receiving school.';


--
-- Name: COLUMN feederschoolassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.begindate IS 'The month, day, and year of the first day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN feederschoolassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.enddate IS 'The month, day, and year of the last day of the feeder school association.';


--
-- Name: COLUMN feederschoolassociation.feederrelationshipdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.feederschoolassociation.feederrelationshipdescription IS 'Describes the relationship from the feeder school to the receiving school, for example by program emphasis, such as special education, language immersion, science, or performing art.';


--
-- Name: financialcollectiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.financialcollectiondescriptor (
    financialcollectiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.financialcollectiondescriptor OWNER TO postgres;

--
-- Name: TABLE financialcollectiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.financialcollectiondescriptor IS 'The accounting period or grouping for which financial information is collected.';


--
-- Name: COLUMN financialcollectiondescriptor.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.financialcollectiondescriptor.financialcollectiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: functiondimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.functiondimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.functiondimension OWNER TO postgres;

--
-- Name: TABLE functiondimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.functiondimension IS 'The NCES function accounting dimension representing an expenditure. The function describes the activity for which a service or material object is acquired. The functions of a school district are generally classified into five broad areas, including instruction, support services, operation of non-instructional services, facilities acquisition and construction, and debt service.';


--
-- Name: COLUMN functiondimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.code IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN functiondimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.fiscalyear IS 'The fiscal year for which the account function dimension is valid.';


--
-- Name: COLUMN functiondimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimension.codename IS 'A description of the account function dimension.';


--
-- Name: functiondimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.functiondimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.functiondimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE functiondimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.functiondimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN functiondimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.code IS 'The code representation of the account function dimension.';


--
-- Name: COLUMN functiondimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.fiscalyear IS 'The fiscal year for which the account function dimension is valid.';


--
-- Name: COLUMN functiondimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.functiondimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: funddimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.funddimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.funddimension OWNER TO postgres;

--
-- Name: TABLE funddimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.funddimension IS 'The NCES fund accounting dimension. A fund is a fiscal and accounting entity with a self-balancing set of accounts recording cash and other financial resources, together with all related liabilities and residual equities or balances, and changes therein, which are segregated for the purpose of carrying on specific activities or attaining certain objectives in accordance with special regulations, restrictions, or limitations.';


--
-- Name: COLUMN funddimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.code IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN funddimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.fiscalyear IS 'The fiscal year for which the account fund dimension is valid.';


--
-- Name: COLUMN funddimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimension.codename IS 'A description of the account fund dimension.';


--
-- Name: funddimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.funddimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.funddimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE funddimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.funddimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN funddimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.code IS 'The code representation of the account fund dimension.';


--
-- Name: COLUMN funddimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.fiscalyear IS 'The fiscal year for which the account fund dimension is valid.';


--
-- Name: COLUMN funddimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.funddimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    reasonexiteddescriptorid integer,
    servedoutsideofregularsession boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociation IS 'This association base class represents the basic relationship between students and programs.';


--
-- Name: COLUMN generalstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.enddate IS 'The month, day, and year on which the student exited the program or stopped receiving services.';


--
-- Name: COLUMN generalstudentprogramassociation.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.reasonexiteddescriptorid IS 'The reason the student left the program within a school or district.';


--
-- Name: COLUMN generalstudentprogramassociation.servedoutsideofregularsession; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociation.servedoutsideofregularsession IS 'Indicates whether the student received services during the summer session or between sessions.';


--
-- Name: generalstudentprogramassociationparticipationstatus; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociationparticipationstatus (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    participationstatusdescriptorid integer NOT NULL,
    statusbegindate date,
    statusenddate date,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociationparticipationstatus OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociationparticipationstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociationparticipationstatus IS 'The status of the student''s program participation.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.participationstatusdescriptorid IS 'The student''s program participation status.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.statusbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.statusbegindate IS 'The date the student''s program participation status began.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.statusenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.statusenddate IS 'The date the student''s program participation status ended.';


--
-- Name: COLUMN generalstudentprogramassociationparticipationstatus.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationparticipationstatus.designatedby IS 'The person, organization, or department that designated the participation status.';


--
-- Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.generalstudentprogramassociationprogramparticipationstatus (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    participationstatusdescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    statusbegindate date NOT NULL,
    studentusi integer NOT NULL,
    statusenddate date,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.generalstudentprogramassociationprogramparticipationstatus OWNER TO postgres;

--
-- Name: TABLE generalstudentprogramassociationprogramparticipationstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.generalstudentprogramassociationprogramparticipationstatus IS 'The status of the student''s program participation.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.participationstatusdescriptorid IS 'The student''s program participation status.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusbegindate IS 'The date the student''s program participation status began.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.statusenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.statusenddate IS 'The date the student''s program participation status ended.';


--
-- Name: COLUMN generalstudentprogramassociationprogramparticipationstatus.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.generalstudentprogramassociationprogramparticipationstatus.designatedby IS 'The person, organization, or department that designated the participation status.';


--
-- Name: grade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.grade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    diagnosticstatement character varying(1024),
    performancebaseconversiondescriptorid integer,
    currentgradeindicator boolean,
    currentgradeasofdate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.grade OWNER TO postgres;

--
-- Name: TABLE grade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.grade IS 'This educational entity represents an overall score or assessment tied to a course over a period of time (i.e., the grading period). Student grades are usually a compilation of marks and other scores.';


--
-- Name: COLUMN grade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN grade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN grade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN grade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN grade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN grade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN grade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN grade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN grade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN grade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN grade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN grade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN grade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN grade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.performancebaseconversiondescriptorid IS 'A conversion of the level to a standard set of performance levels.';


--
-- Name: COLUMN grade.currentgradeindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.currentgradeindicator IS 'An indicator that the posted grade is an interim grade for the grading period and not the final grade.';


--
-- Name: COLUMN grade.currentgradeasofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.grade.currentgradeasofdate IS 'As-Of date for a grade posted as the current grade.';


--
-- Name: gradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentry (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    sourcesectionidentifier character varying(255) NOT NULL,
    sectionidentifier character varying(255),
    localcoursecode character varying(60),
    sessionname character varying(60),
    schoolid integer,
    dateassigned date NOT NULL,
    title character varying(100) NOT NULL,
    description character varying(1024),
    duedate date,
    duetime time without time zone,
    gradebookentrytypedescriptorid integer,
    maxpoints numeric(9,2),
    gradingperioddescriptorid integer,
    periodsequence integer,
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradebookentry OWNER TO postgres;

--
-- Name: TABLE gradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentry IS 'This entity represents an assignment, homework, or classroom assessment to be recorded in a gradebook.';


--
-- Name: COLUMN gradebookentry.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN gradebookentry.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN gradebookentry.sourcesectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sourcesectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradebookentry.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradebookentry.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN gradebookentry.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradebookentry.dateassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.dateassigned IS 'The date the assignment, homework, or assessment was assigned or executed.';


--
-- Name: COLUMN gradebookentry.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.title IS 'The name or title of the activity to be recorded in the gradebook entry.';


--
-- Name: COLUMN gradebookentry.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.description IS 'A description of the assignment, homework, or classroom assessment.';


--
-- Name: COLUMN gradebookentry.duedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duedate IS 'The date the assignment, homework, or assessment is due.';


--
-- Name: COLUMN gradebookentry.duetime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.duetime IS 'The time the assignment, homework, or assessment is due.';


--
-- Name: COLUMN gradebookentry.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradebookentrytypedescriptorid IS 'The type of the gradebook entry.';


--
-- Name: COLUMN gradebookentry.maxpoints; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.maxpoints IS 'The maximum number of points  that can be earned for the submission.';


--
-- Name: COLUMN gradebookentry.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradebookentry.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradebookentry.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentry.schoolyear IS 'The identifier for the school year.';


--
-- Name: gradebookentrylearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrylearningstandard (
    gradebookentryidentifier character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradebookentrylearningstandard OWNER TO postgres;

--
-- Name: TABLE gradebookentrylearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrylearningstandard IS 'LearningStandard(s) associated with the gradebook entry.';


--
-- Name: COLUMN gradebookentrylearningstandard.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN gradebookentrylearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradebookentrylearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrylearningstandard.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: gradebookentrytypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradebookentrytypedescriptor (
    gradebookentrytypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradebookentrytypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradebookentrytypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradebookentrytypedescriptor IS 'The type of the gradebook entry; for example, homework, assignment, quiz, unit test, oral presentation, etc.';


--
-- Name: COLUMN gradebookentrytypedescriptor.gradebookentrytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradebookentrytypedescriptor.gradebookentrytypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradelearningstandardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradelearningstandardgrade (
    begindate date NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    diagnosticstatement character varying(1024),
    performancebaseconversiondescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.gradelearningstandardgrade OWNER TO postgres;

--
-- Name: TABLE gradelearningstandardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradelearningstandardgrade IS 'A collection of learning standards associated with the grade.';


--
-- Name: COLUMN gradelearningstandardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN gradelearningstandardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradelearningstandardgrade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradelearningstandardgrade.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN gradelearningstandardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradelearningstandardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN gradelearningstandardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN gradelearningstandardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN gradelearningstandardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN gradelearningstandardgrade.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.lettergradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.numericgradeearned IS 'A final or interim (grading period) indicator of student performance for a learning standard as submitted by the instructor.';


--
-- Name: COLUMN gradelearningstandardgrade.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN gradelearningstandardgrade.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradelearningstandardgrade.performancebaseconversiondescriptorid IS 'A performance level that describes the student proficiency.';


--
-- Name: gradeleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradeleveldescriptor (
    gradeleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradeleveldescriptor OWNER TO postgres;

--
-- Name: TABLE gradeleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradeleveldescriptor IS 'This descriptor defines the set of grade levels. The map to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradeleveldescriptor.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradeleveldescriptor.gradeleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradepointaveragetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradepointaveragetypedescriptor (
    gradepointaveragetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradepointaveragetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradepointaveragetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradepointaveragetypedescriptor IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradepointaveragetypedescriptor.gradepointaveragetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradetypedescriptor (
    gradetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradetypedescriptor OWNER TO postgres;

--
-- Name: TABLE gradetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradetypedescriptor IS 'The type of grade in a report card or transcript (e.g., Final, Exam, Grading Period).';


--
-- Name: COLUMN gradetypedescriptor.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradetypedescriptor.gradetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    periodsequence integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.gradingperiod OWNER TO postgres;

--
-- Name: TABLE gradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperiod IS 'This entity represents the time span for which grades are reported.';


--
-- Name: COLUMN gradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN gradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN gradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN gradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.schoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN gradingperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.begindate IS 'Month, day, and year of the first day of the grading period.';


--
-- Name: COLUMN gradingperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.enddate IS 'Month, day, and year of the last day of the grading period.';


--
-- Name: COLUMN gradingperiod.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperiod.totalinstructionaldays IS 'Total days available for educational instruction during the grading period.';


--
-- Name: gradingperioddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gradingperioddescriptor (
    gradingperioddescriptorid integer NOT NULL
);


ALTER TABLE edfi.gradingperioddescriptor OWNER TO postgres;

--
-- Name: TABLE gradingperioddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gradingperioddescriptor IS 'This descriptor defines the name of the period for which grades are reported. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN gradingperioddescriptor.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gradingperioddescriptor.gradingperioddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: graduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplan (
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    individualplan boolean,
    totalrequiredcredits numeric(9,3) NOT NULL,
    totalrequiredcredittypedescriptorid integer,
    totalrequiredcreditconversion numeric(9,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.graduationplan OWNER TO postgres;

--
-- Name: TABLE graduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplan IS 'This entity is a plan outlining the required credits, credits by subject, credits by course, and other criteria required for graduation. A graduation plan may be one or more standard plans defined by an education organization and/or individual plans for some or all students.';


--
-- Name: COLUMN graduationplan.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplan.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplan.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplan.individualplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.individualplan IS 'An indicator of whether the graduation plan is tailored for an individual.';


--
-- Name: COLUMN graduationplan.totalrequiredcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplan.totalrequiredcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplan.totalrequiredcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplan.totalrequiredcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: graduationplancreditsbycourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycourse (
    coursesetname character varying(120) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    creditconversion numeric(9,2),
    whentakengradeleveldescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycourse IS 'The total credits required for graduation by taking a specific course, or by taking one or more from a set of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycourse.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycourse.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN graduationplancreditsbycourse.whentakengradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycourse.whentakengradeleveldescriptorid IS 'The grade level when the student is planned to take the course.';


--
-- Name: graduationplancreditsbycoursecourse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycoursecourse (
    coursecode character varying(60) NOT NULL,
    courseeducationorganizationid integer NOT NULL,
    coursesetname character varying(120) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycoursecourse OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycoursecourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycoursecourse IS 'The course reference that identifies the organization of subject matter and related learning experiences provided for the instruction of students.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.courseeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.courseeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.coursesetname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.coursesetname IS 'Identifying name given to a collection of courses.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycoursecourse.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycoursecourse.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: graduationplancreditsbycreditcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbycreditcategory (
    creditcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    creditconversion numeric(9,2),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbycreditcategory OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbycreditcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbycreditcategory IS 'The total credits required for graduation based on the credit category.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditcategorydescriptorid IS 'A categorization for the course transcript credits awarded in the course transcript.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbycreditcategory.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbycreditcategory.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: graduationplancreditsbysubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplancreditsbysubject (
    academicsubjectdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    credits numeric(9,3) NOT NULL,
    credittypedescriptorid integer,
    creditconversion numeric(9,2),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplancreditsbysubject OWNER TO postgres;

--
-- Name: TABLE graduationplancreditsbysubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplancreditsbysubject IS 'The total credits required in subject to graduate. Only those courses identified as a high school course requirement are eligible to meet subject credit requirements.';


--
-- Name: COLUMN graduationplancreditsbysubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.academicsubjectdescriptorid IS 'The intended major subject area of the graduation requirement.';


--
-- Name: COLUMN graduationplancreditsbysubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplancreditsbysubject.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplancreditsbysubject.credits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbysubject.credittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.credittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN graduationplancreditsbysubject.creditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplancreditsbysubject.creditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: graduationplanrequiredassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessment (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessment OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessment IS 'The assessments and associated required score and performance level needed to satisfy graduation requirements.';


--
-- Name: COLUMN graduationplanrequiredassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessment.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessment.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentperformancelevel IS 'Performance level required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN graduationplanrequiredassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: graduationplanrequiredassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplanrequiredassessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    graduationplantypedescriptorid integer NOT NULL,
    graduationschoolyear smallint NOT NULL,
    namespace character varying(255) NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.graduationplanrequiredassessmentscore OWNER TO postgres;

--
-- Name: TABLE graduationplanrequiredassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplanrequiredassessmentscore IS 'Score required to be met or exceeded.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.graduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.graduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplanrequiredassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: graduationplantypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.graduationplantypedescriptor (
    graduationplantypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.graduationplantypedescriptor OWNER TO postgres;

--
-- Name: TABLE graduationplantypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.graduationplantypedescriptor IS 'This descriptor defines the set of graduation plan types.';


--
-- Name: COLUMN graduationplantypedescriptor.graduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.graduationplantypedescriptor.graduationplantypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.gunfreeschoolsactreportingstatusdescriptor (
    gunfreeschoolsactreportingstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.gunfreeschoolsactreportingstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE gunfreeschoolsactreportingstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.gunfreeschoolsactreportingstatusdescriptor IS 'An indication of whether the school or local education agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.gunfreeschoolsactreportingstatusdescriptor.gunfreeschoolsactreportingstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprimarynighttimeresidencedescriptor (
    homelessprimarynighttimeresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprimarynighttimeresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprimarynighttimeresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprimarynighttimeresidencedescriptor IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprimarynighttimeresidencedescriptor.homelessprimarynighttimeresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: homelessprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.homelessprogramservicedescriptor (
    homelessprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.homelessprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE homelessprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.homelessprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a homeless program.';


--
-- Name: COLUMN homelessprogramservicedescriptor.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.homelessprogramservicedescriptor.homelessprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: identificationdocumentusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.identificationdocumentusedescriptor (
    identificationdocumentusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.identificationdocumentusedescriptor OWNER TO postgres;

--
-- Name: TABLE identificationdocumentusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.identificationdocumentusedescriptor IS 'Identifies the type of use given to an identification document.';


--
-- Name: COLUMN identificationdocumentusedescriptor.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.identificationdocumentusedescriptor.identificationdocumentusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: incidentlocationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.incidentlocationdescriptor (
    incidentlocationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.incidentlocationdescriptor OWNER TO postgres;

--
-- Name: TABLE incidentlocationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.incidentlocationdescriptor IS 'Identifies where the incident occurred and whether or not it occurred on school property.';


--
-- Name: COLUMN incidentlocationdescriptor.incidentlocationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.incidentlocationdescriptor.incidentlocationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatordescriptor (
    indicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatordescriptor OWNER TO postgres;

--
-- Name: TABLE indicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatordescriptor IS 'The name or code for the indicator or metric.';


--
-- Name: COLUMN indicatordescriptor.indicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatordescriptor.indicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorgroupdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorgroupdescriptor (
    indicatorgroupdescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorgroupdescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorgroupdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorgroupdescriptor IS 'The name for a group of indicators.';


--
-- Name: COLUMN indicatorgroupdescriptor.indicatorgroupdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorgroupdescriptor.indicatorgroupdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: indicatorleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.indicatorleveldescriptor (
    indicatorleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.indicatorleveldescriptor OWNER TO postgres;

--
-- Name: TABLE indicatorleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.indicatorleveldescriptor IS 'The value of the indicator or metric, as a value from a controlled vocabulary. The semantics of an empty value is "not submitted."';


--
-- Name: COLUMN indicatorleveldescriptor.indicatorleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.indicatorleveldescriptor.indicatorleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: institutiontelephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.institutiontelephonenumbertypedescriptor (
    institutiontelephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.institutiontelephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE institutiontelephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.institutiontelephonenumbertypedescriptor IS 'The type of communication number listed for an organization.';


--
-- Name: COLUMN institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.institutiontelephonenumbertypedescriptor.institutiontelephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interactivitystyledescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interactivitystyledescriptor (
    interactivitystyledescriptorid integer NOT NULL
);


ALTER TABLE edfi.interactivitystyledescriptor OWNER TO postgres;

--
-- Name: TABLE interactivitystyledescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interactivitystyledescriptor IS 'The predominate mode of learning supported by the learning resource. Acceptable values are active, expositive, or mixed.';


--
-- Name: COLUMN interactivitystyledescriptor.interactivitystyledescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interactivitystyledescriptor.interactivitystyledescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccessdescriptor (
    internetaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccessdescriptor IS 'The type of Internet access available.';


--
-- Name: COLUMN internetaccessdescriptor.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccessdescriptor.internetaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetaccesstypeinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetaccesstypeinresidencedescriptor (
    internetaccesstypeinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetaccesstypeinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetaccesstypeinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetaccesstypeinresidencedescriptor IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetaccesstypeinresidencedescriptor.internetaccesstypeinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: internetperformanceinresidencedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.internetperformanceinresidencedescriptor (
    internetperformanceinresidencedescriptorid integer NOT NULL
);


ALTER TABLE edfi.internetperformanceinresidencedescriptor OWNER TO postgres;

--
-- Name: TABLE internetperformanceinresidencedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.internetperformanceinresidencedescriptor IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: COLUMN internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.internetperformanceinresidencedescriptor.internetperformanceinresidencedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: intervention; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.intervention (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    begindate date NOT NULL,
    enddate date,
    mindosage integer,
    maxdosage integer,
    namespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.intervention OWNER TO postgres;

--
-- Name: TABLE intervention; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.intervention IS 'An implementation of an instructional approach focusing on the specific techniques and materials used to teach a given subject.';


--
-- Name: COLUMN intervention.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN intervention.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN intervention.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN intervention.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.deliverymethoddescriptorid IS 'The way in which an intervention was implemented.';


--
-- Name: COLUMN intervention.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.begindate IS 'The start date for the intervention implementation.';


--
-- Name: COLUMN intervention.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.enddate IS 'The end date for the intervention implementation.';


--
-- Name: COLUMN intervention.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.mindosage IS 'The minimum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.maxdosage IS 'The maximum duration of time in minutes that may be assigned for the intervention.';


--
-- Name: COLUMN intervention.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.intervention.namespace IS 'Namespace for the intervention.';


--
-- Name: interventionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriategradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriategradelevel IS 'Grade levels for the intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriategradelevel.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriategradelevel.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: interventionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionappropriatesex IS 'Sexes for the intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionappropriatesex.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionappropriatesex.sexdescriptorid IS 'Sexes for the intervention. If omitted, considered generally applicable.';


--
-- Name: interventionclassdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionclassdescriptor (
    interventionclassdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventionclassdescriptor OWNER TO postgres;

--
-- Name: TABLE interventionclassdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionclassdescriptor IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionclassdescriptor.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionclassdescriptor.interventionclassdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventiondiagnosis (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventiondiagnosis IS 'Targeted purpose of the intervention.';


--
-- Name: COLUMN interventiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the intervention.';


--
-- Name: COLUMN interventiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventiondiagnosis.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventiondiagnosis.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: interventioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneducationcontent (
    contentidentifier character varying(225) NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN interventioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioneducationcontent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneducationcontent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: interventioneffectivenessratingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioneffectivenessratingdescriptor (
    interventioneffectivenessratingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.interventioneffectivenessratingdescriptor OWNER TO postgres;

--
-- Name: TABLE interventioneffectivenessratingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioneffectivenessratingdescriptor IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Rating Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: COLUMN interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioneffectivenessratingdescriptor.interventioneffectivenessratingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: interventioninterventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventioninterventionprescription (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventioninterventionprescription OWNER TO postgres;

--
-- Name: TABLE interventioninterventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventioninterventionprescription IS 'The reference to the intervention prescription being followed in this intervention implementation.';


--
-- Name: COLUMN interventioninterventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventioninterventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventioninterventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionlearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionmeetingtime; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionmeetingtime (
    educationorganizationid integer NOT NULL,
    endtime time without time zone NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    starttime time without time zone NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionmeetingtime OWNER TO postgres;

--
-- Name: TABLE interventionmeetingtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionmeetingtime IS 'The times at which this intervention is scheduled to meet.';


--
-- Name: COLUMN interventionmeetingtime.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionmeetingtime.endtime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.endtime IS 'An indication of the time of day the meeting time ends.';


--
-- Name: COLUMN interventionmeetingtime.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionmeetingtime.starttime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionmeetingtime.starttime IS 'An indication of the time of day the meeting time begins.';


--
-- Name: interventionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionpopulationserved (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionpopulationserved IS 'A subset of students that are the focus of the intervention.';


--
-- Name: COLUMN interventionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionpopulationserved.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention.';


--
-- Name: interventionprescription; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescription (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    mindosage integer,
    maxdosage integer,
    namespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionprescription OWNER TO postgres;

--
-- Name: TABLE interventionprescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescription IS 'This entity represents a formal prescription of an instructional approach focusing on the specific techniques and materials used to teach a given subject. This can be prescribed by academic research, an interventions vendor, or another entity.';


--
-- Name: COLUMN interventionprescription.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescription.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescription.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: COLUMN interventionprescription.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionprescription.mindosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.mindosage IS 'The minimum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.maxdosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.maxdosage IS 'The maximum duration of time in minutes that is recommended for the intervention.';


--
-- Name: COLUMN interventionprescription.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescription.namespace IS 'Namespace for the intervention.';


--
-- Name: interventionprescriptionappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriategradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriategradelevel IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.gradeleveldescriptorid IS 'Grade levels for the prescribed intervention. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriategradelevel.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionprescriptionappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionappropriatesex IS 'Sexes for the intervention prescription. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionappropriatesex.sexdescriptorid IS 'Sexes for the intervention prescription. If omitted, considered generally applicable.';


--
-- Name: interventionprescriptiondiagnosis; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptiondiagnosis (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptiondiagnosis OWNER TO postgres;

--
-- Name: TABLE interventionprescriptiondiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptiondiagnosis IS 'Targeted purpose of the intervention prescription.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.diagnosisdescriptorid IS 'Targeted purpose of the intervention prescription.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptiondiagnosis.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptiondiagnosis.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionprescriptioneducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptioneducationcontent (
    contentidentifier character varying(225) NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptioneducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionprescriptioneducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptioneducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptioneducationcontent.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptioneducationcontent.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionlearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionlearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionlearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionlearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionlearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionprescriptionpopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionpopulationserved (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionpopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionpopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionpopulationserved IS 'A subset of students that are the focus of the intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionpopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionpopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention prescription.';


--
-- Name: interventionprescriptionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionprescriptionuri (
    educationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionprescriptionuri OWNER TO postgres;

--
-- Name: TABLE interventionprescriptionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionprescriptionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionprescriptionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionprescriptionuri.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionprescriptionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionprescriptionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstaff (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstaff OWNER TO postgres;

--
-- Name: TABLE interventionstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstaff IS 'Relates the staff member associated with the Intervention.';


--
-- Name: COLUMN interventionstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstaff.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: interventionstudy; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudy (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    interventionprescriptioneducationorganizationid integer NOT NULL,
    interventionprescriptionidentificationcode character varying(60) NOT NULL,
    participants integer NOT NULL,
    deliverymethoddescriptorid integer NOT NULL,
    interventionclassdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.interventionstudy OWNER TO postgres;

--
-- Name: TABLE interventionstudy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudy IS 'An experimental or quasi-experimental study of an intervention technique.';


--
-- Name: COLUMN interventionstudy.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudy.interventionprescriptioneducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptioneducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudy.interventionprescriptionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionprescriptionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention prescription.';


--
-- Name: COLUMN interventionstudy.participants; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.participants IS 'The number of participants observed in the study.';


--
-- Name: COLUMN interventionstudy.deliverymethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.deliverymethoddescriptorid IS 'The way in which an intervention was implemented: individual, small group, whole class, or whole school.';


--
-- Name: COLUMN interventionstudy.interventionclassdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudy.interventionclassdescriptorid IS 'The way in which an intervention is used: curriculum, supplement, or practice.';


--
-- Name: interventionstudyappropriategradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriategradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriategradelevel OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriategradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriategradelevel IS 'Grade levels participating in this study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.gradeleveldescriptorid IS 'Grade levels participating in this study.';


--
-- Name: COLUMN interventionstudyappropriategradelevel.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriategradelevel.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: interventionstudyappropriatesex; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyappropriatesex (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    sexdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyappropriatesex OWNER TO postgres;

--
-- Name: TABLE interventionstudyappropriatesex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyappropriatesex IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: COLUMN interventionstudyappropriatesex.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyappropriatesex.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyappropriatesex.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyappropriatesex.sexdescriptorid IS 'Sexes participating in this study. If omitted, considered generally applicable.';


--
-- Name: interventionstudyeducationcontent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyeducationcontent (
    contentidentifier character varying(225) NOT NULL,
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyeducationcontent OWNER TO postgres;

--
-- Name: TABLE interventionstudyeducationcontent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyeducationcontent IS 'Relates the education content source to the education content.';


--
-- Name: COLUMN interventionstudyeducationcontent.contentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.contentidentifier IS 'A unique identifier for the education content.';


--
-- Name: COLUMN interventionstudyeducationcontent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyeducationcontent.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyeducationcontent.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: interventionstudyinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyinterventioneffectiveness (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE interventionstudyinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyinterventioneffectiveness IS 'Measurement of the effectiveness of the intervention study per diagnosis.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: interventionstudylearningresourcemetadatauri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudylearningresourcemetadatauri (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    learningresourcemetadatauri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudylearningresourcemetadatauri OWNER TO postgres;

--
-- Name: TABLE interventionstudylearningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudylearningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudylearningresourcemetadatauri.learningresourcemetadatauri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudylearningresourcemetadatauri.learningresourcemetadatauri IS 'The URI (typical a URL) pointing to the metadata entry in a LRMI metadata repository, which describes this content item.';


--
-- Name: interventionstudypopulationserved; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudypopulationserved (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudypopulationserved OWNER TO postgres;

--
-- Name: TABLE interventionstudypopulationserved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudypopulationserved IS 'A subset of students that are the focus of the intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudypopulationserved.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudypopulationserved.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudypopulationserved.populationserveddescriptorid IS 'A subset of students that are the focus of the intervention study.';


--
-- Name: interventionstudystateabbreviation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudystateabbreviation (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudystateabbreviation OWNER TO postgres;

--
-- Name: TABLE interventionstudystateabbreviation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudystateabbreviation IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: COLUMN interventionstudystateabbreviation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudystateabbreviation.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudystateabbreviation.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudystateabbreviation.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area, the school system of which the participants of the study are considered to be a part.';


--
-- Name: interventionstudyuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionstudyuri (
    educationorganizationid integer NOT NULL,
    interventionstudyidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionstudyuri OWNER TO postgres;

--
-- Name: TABLE interventionstudyuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionstudyuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionstudyuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionstudyuri.interventionstudyidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.interventionstudyidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention study.';


--
-- Name: COLUMN interventionstudyuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionstudyuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: interventionuri; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.interventionuri (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    uri character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.interventionuri OWNER TO postgres;

--
-- Name: TABLE interventionuri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.interventionuri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: COLUMN interventionuri.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN interventionuri.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN interventionuri.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.interventionuri.uri IS 'The URI (typical a URL) pointing to an education content item.';


--
-- Name: languagedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languagedescriptor (
    languagedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languagedescriptor OWNER TO postgres;

--
-- Name: TABLE languagedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languagedescriptor IS 'This descriptor defines the language(s) that are spoken or written. It is strongly recommended that entries use only ISO 639-2 language codes: for CodeValue, use the 3 character code; for ShortDescription and Description use the full language name.';


--
-- Name: COLUMN languagedescriptor.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languagedescriptor.languagedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageinstructionprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageinstructionprogramservicedescriptor (
    languageinstructionprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageinstructionprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE languageinstructionprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageinstructionprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a language instruction program.';


--
-- Name: COLUMN languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageinstructionprogramservicedescriptor.languageinstructionprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: languageusedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.languageusedescriptor (
    languageusedescriptorid integer NOT NULL
);


ALTER TABLE edfi.languageusedescriptor OWNER TO postgres;

--
-- Name: TABLE languageusedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.languageusedescriptor IS 'The category denoting how a language is used.';


--
-- Name: COLUMN languageusedescriptor.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.languageusedescriptor.languageusedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjective (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    objective character varying(60) NOT NULL,
    description character varying(1024),
    nomenclature character varying(100),
    successcriteria character varying(150),
    parentlearningobjectiveid character varying(60),
    parentnamespace character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningobjective OWNER TO postgres;

--
-- Name: TABLE learningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjective IS 'This entity represents identified LearningObjectives for courses in specific grades.';


--
-- Name: COLUMN learningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN learningobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.objective IS 'The designated title of the learning objective.';


--
-- Name: COLUMN learningobjective.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.description IS 'The description of the learning objective.';


--
-- Name: COLUMN learningobjective.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.nomenclature IS 'Reflects the specific nomenclature used for the learning objective.';


--
-- Name: COLUMN learningobjective.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning objective. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning objective.';


--
-- Name: COLUMN learningobjective.parentlearningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.parentlearningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjective.parentnamespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjective.parentnamespace IS 'Namespace for the learning objective.';


--
-- Name: learningobjectiveacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectiveacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectiveacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningobjectiveacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectiveacademicsubject IS 'The description of the content or subject area of an assessment.';


--
-- Name: COLUMN learningobjectiveacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.academicsubjectdescriptorid IS 'The description of the content or subject area of an assessment.';


--
-- Name: COLUMN learningobjectiveacademicsubject.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectiveacademicsubject.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectiveacademicsubject.namespace IS 'Namespace for the learning objective.';


--
-- Name: learningobjectivecontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivecontentstandard (
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    title character varying(75) NOT NULL,
    version character varying(50),
    uri character varying(255),
    publicationdate date,
    publicationyear smallint,
    publicationstatusdescriptorid integer,
    mandatingeducationorganizationid integer,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivecontentstandard OWNER TO postgres;

--
-- Name: TABLE learningobjectivecontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivecontentstandard IS 'A reference to the type of content standard (e.g., state, national)';


--
-- Name: COLUMN learningobjectivecontentstandard.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivecontentstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN learningobjectivecontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningobjectivecontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.version IS 'The version identifier for the content.';


--
-- Name: COLUMN learningobjectivecontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningobjectivecontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningobjectivecontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningobjectivecontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningobjectivecontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: learningobjectivecontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivecontentstandardauthor (
    author character varying(100) NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivecontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningobjectivecontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivecontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivecontentstandardauthor.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivecontentstandardauthor.namespace IS 'Namespace for the learning objective.';


--
-- Name: learningobjectivegradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivegradelevel (
    gradeleveldescriptorid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivegradelevel OWNER TO postgres;

--
-- Name: TABLE learningobjectivegradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivegradelevel IS 'The grade level for which the learning objective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.';


--
-- Name: COLUMN learningobjectivegradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.gradeleveldescriptorid IS 'The grade level for which the learning objective is targeted. The semantics of null is assumed to mean that the learning objective is not associated with any grade level.';


--
-- Name: COLUMN learningobjectivegradelevel.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivegradelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivegradelevel.namespace IS 'Namespace for the learning objective.';


--
-- Name: learningobjectivelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningobjectivelearningstandard (
    learningobjectiveid character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningobjectivelearningstandard OWNER TO postgres;

--
-- Name: TABLE learningobjectivelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningobjectivelearningstandard IS 'Learning standard(s) included in this objective.';


--
-- Name: COLUMN learningobjectivelearningstandard.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivelearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningobjectivelearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningobjectivelearningstandard.namespace IS 'Namespace for the learning objective.';


--
-- Name: learningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandard (
    learningstandardid character varying(60) NOT NULL,
    description character varying(1024) NOT NULL,
    learningstandarditemcode character varying(60),
    uri character varying(255),
    coursetitle character varying(60),
    successcriteria character varying(150),
    parentlearningstandardid character varying(60),
    namespace character varying(255) NOT NULL,
    learningstandardcategorydescriptorid integer,
    learningstandardscopedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandard IS 'A statement that describes a specific competency or academic standard.';


--
-- Name: COLUMN learningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.description IS 'The text of the statement. The textual content that either describes a specific competency such as "Apply the Pythagorean Theorem to determine unknown side lengths in right triangles in real-world and mathematical problems in two and three dimensions." or describes a less granular group of competencies within the taxonomy of the standards document, e.g. "Understand and apply the Pythagorean Theorem," or "Geometry".';


--
-- Name: COLUMN learningstandard.learningstandarditemcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandarditemcode IS 'A code designated by the promulgating body to identify the statement, e.g. 1.N.3 (usually not globally unique).';


--
-- Name: COLUMN learningstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.uri IS 'An unambiguous reference to the statement using a network-resolvable URI.';


--
-- Name: COLUMN learningstandard.coursetitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.coursetitle IS 'The official course title with which this learning standard is associated.';


--
-- Name: COLUMN learningstandard.successcriteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.successcriteria IS 'One or more statements that describes the criteria used by teachers and students to check for attainment of a learning standard. This criteria gives clear indications as to the degree to which learning is moving through the Zone or Proximal Development toward independent achievement of the learning standard.';


--
-- Name: COLUMN learningstandard.parentlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.parentlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.namespace IS 'The namespace of the organization or entity who governs the standard. It is recommended the namespaces observe a URI format and begin with a domain name under the governing organization or entity control.';


--
-- Name: COLUMN learningstandard.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardcategorydescriptorid IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandard.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandard.learningstandardscopedescriptorid IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: learningstandardacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardacademicsubject OWNER TO postgres;

--
-- Name: TABLE learningstandardacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardacademicsubject IS 'Subject area for the learning standard.';


--
-- Name: COLUMN learningstandardacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.academicsubjectdescriptorid IS 'Subject area for the learning standard.';


--
-- Name: COLUMN learningstandardacademicsubject.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardacademicsubject.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcategorydescriptor (
    learningstandardcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcategorydescriptor IS 'An additional classification of the type of a specific learning standard.';


--
-- Name: COLUMN learningstandardcategorydescriptor.learningstandardcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcategorydescriptor.learningstandardcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardcontentstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandard (
    learningstandardid character varying(60) NOT NULL,
    title character varying(75) NOT NULL,
    version character varying(50),
    uri character varying(255),
    publicationdate date,
    publicationyear smallint,
    publicationstatusdescriptorid integer,
    mandatingeducationorganizationid integer,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandard IS 'The content standard from which the learning standard was derived.';


--
-- Name: COLUMN learningstandardcontentstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardcontentstandard.title; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.title IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardcontentstandard.version; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.version IS 'The version identifier for the content.';


--
-- Name: COLUMN learningstandardcontentstandard.uri; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.uri IS 'An unambiguous reference to the standards using a network-resolvable URI.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationdate IS 'The date on which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationyear IS 'The year at which this content was first published.';


--
-- Name: COLUMN learningstandardcontentstandard.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.publicationstatusdescriptorid IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN learningstandardcontentstandard.mandatingeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.mandatingeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN learningstandardcontentstandard.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.begindate IS 'The beginning of the period during which this learning standard document is intended for use.';


--
-- Name: COLUMN learningstandardcontentstandard.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandard.enddate IS 'The end of the period during which this learning standard document is intended for use.';


--
-- Name: learningstandardcontentstandardauthor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardcontentstandardauthor (
    author character varying(100) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardcontentstandardauthor OWNER TO postgres;

--
-- Name: TABLE learningstandardcontentstandardauthor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardcontentstandardauthor IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningstandardcontentstandardauthor.author; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.author IS 'The person or organization chiefly responsible for the intellectual content of the standard.';


--
-- Name: COLUMN learningstandardcontentstandardauthor.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardcontentstandardauthor.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalenceassociation (
    namespace character varying(255) NOT NULL,
    sourcelearningstandardid character varying(60) NOT NULL,
    targetlearningstandardid character varying(60) NOT NULL,
    effectivedate date,
    learningstandardequivalencestrengthdescriptorid integer,
    learningstandardequivalencestrengthdescription character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalenceassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalenceassociation IS 'Indicates a directional association of equivalence from a source to a target learning standard.';


--
-- Name: COLUMN learningstandardequivalenceassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.namespace IS 'The namespace of the organization that has created and owns the association.';


--
-- Name: COLUMN learningstandardequivalenceassociation.sourcelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.sourcelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.targetlearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.targetlearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardequivalenceassociation.effectivedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.effectivedate IS 'The date that the association is considered to be applicable or effective.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescriptorid IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: COLUMN learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalenceassociation.learningstandardequivalencestrengthdescription IS 'Captures supplemental information on the relationship. Recommended for use only when the match is partial.';


--
-- Name: learningstandardequivalencestrengthdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardequivalencestrengthdescriptor (
    learningstandardequivalencestrengthdescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardequivalencestrengthdescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardequivalencestrengthdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardequivalencestrengthdescriptor IS 'A measure that indicates the strength or quality of the equivalence relationship.';


--
-- Name: COLUMN learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardequivalencestrengthdescriptor.learningstandardequivalencestrengthdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: learningstandardgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardgradelevel OWNER TO postgres;

--
-- Name: TABLE learningstandardgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardgradelevel IS 'The grade levels for the specific learning standard.';


--
-- Name: COLUMN learningstandardgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.gradeleveldescriptorid IS 'The grade levels for the specific learning standard.';


--
-- Name: COLUMN learningstandardgradelevel.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardgradelevel.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardidentificationcode (
    contentstandardname character varying(65) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardidentificationcode OWNER TO postgres;

--
-- Name: TABLE learningstandardidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardidentificationcode IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a learning standard.';


--
-- Name: COLUMN learningstandardidentificationcode.contentstandardname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.contentstandardname IS 'The name of the content standard, for example Common Core.';


--
-- Name: COLUMN learningstandardidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a Learning Standard.';


--
-- Name: COLUMN learningstandardidentificationcode.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardidentificationcode.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardprerequisitelearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardprerequisitelearningstandard (
    learningstandardid character varying(60) NOT NULL,
    prerequisitelearningstandardid character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.learningstandardprerequisitelearningstandard OWNER TO postgres;

--
-- Name: TABLE learningstandardprerequisitelearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardprerequisitelearningstandard IS 'The unique identifier of a prerequisite learning standard item, a competency needed prior to learning this one. (Some items may have no prerequisites others may have one or more prerequisites. This should only be used to represent the immediate predecessors in a competency-based pathway, i.e. not prerequisites of prerequisites).';


--
-- Name: COLUMN learningstandardprerequisitelearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardprerequisitelearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN learningstandardprerequisitelearningstandard.prerequisitelearningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardprerequisitelearningstandard.prerequisitelearningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: learningstandardscopedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.learningstandardscopedescriptor (
    learningstandardscopedescriptorid integer NOT NULL
);


ALTER TABLE edfi.learningstandardscopedescriptor OWNER TO postgres;

--
-- Name: TABLE learningstandardscopedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.learningstandardscopedescriptor IS 'Signals the scope of usage the standard. Does not necessarily relate the standard to the governing body.';


--
-- Name: COLUMN learningstandardscopedescriptor.learningstandardscopedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.learningstandardscopedescriptor.learningstandardscopedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: levelofeducationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.levelofeducationdescriptor (
    levelofeducationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.levelofeducationdescriptor OWNER TO postgres;

--
-- Name: TABLE levelofeducationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.levelofeducationdescriptor IS 'This descriptor defines the different levels of education achievable.';


--
-- Name: COLUMN levelofeducationdescriptor.levelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.levelofeducationdescriptor.levelofeducationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensestatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensestatusdescriptor (
    licensestatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensestatusdescriptor OWNER TO postgres;

--
-- Name: TABLE licensestatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensestatusdescriptor IS 'This descriptor defines the license statuses.';


--
-- Name: COLUMN licensestatusdescriptor.licensestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensestatusdescriptor.licensestatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: licensetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.licensetypedescriptor (
    licensetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.licensetypedescriptor OWNER TO postgres;

--
-- Name: TABLE licensetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.licensetypedescriptor IS 'This descriptor defines the type of a license.';


--
-- Name: COLUMN licensetypedescriptor.licensetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.licensetypedescriptor.licensetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: limitedenglishproficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.limitedenglishproficiencydescriptor (
    limitedenglishproficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.limitedenglishproficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE limitedenglishproficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.limitedenglishproficiencydescriptor IS 'This descriptor defines the indications that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient. The mapping of descriptor values to known Ed-Fi enumeration values is required.';


--
-- Name: COLUMN limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.limitedenglishproficiencydescriptor.limitedenglishproficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localaccount; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localaccount (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    accountname character varying(100),
    chartofaccountidentifier character varying(50) NOT NULL,
    chartofaccounteducationorganizationid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localaccount OWNER TO postgres;

--
-- Name: TABLE localaccount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localaccount IS 'The set of account codes defined by an education organization for a fiscal year. It provides a formal record of the debits and credits relating to the specific account.';


--
-- Name: COLUMN localaccount.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localaccount.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localaccount.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localaccount.accountname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.accountname IS 'A descriptive name for the account.';


--
-- Name: COLUMN localaccount.chartofaccountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.chartofaccountidentifier IS 'SEA populated code value for the valid combination of account dimensions under which financials are reported.';


--
-- Name: COLUMN localaccount.chartofaccounteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccount.chartofaccounteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: localaccountreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localaccountreportingtag (
    accountidentifier character varying(50) NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    tagvalue character varying(100),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localaccountreportingtag OWNER TO postgres;

--
-- Name: TABLE localaccountreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localaccountreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN localaccountreportingtag.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localaccountreportingtag.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localaccountreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localaccountreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.reportingtagdescriptorid IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN localaccountreportingtag.tagvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localaccountreportingtag.tagvalue IS 'The value associated with the reporting tag.';


--
-- Name: localactual; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localactual (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localactual OWNER TO postgres;

--
-- Name: TABLE localactual; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localactual IS 'The set of local education agency or charter management organization expense or revenue amounts.';


--
-- Name: COLUMN localactual.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localactual.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localactual.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localactual.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localactual.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localactual.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localactual.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localbudget; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localbudget (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localbudget OWNER TO postgres;

--
-- Name: TABLE localbudget; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localbudget IS 'The set of local education agency or charter management organization budget amounts.';


--
-- Name: COLUMN localbudget.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localbudget.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localbudget.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localbudget.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localbudget.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localbudget.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localbudget.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localcontractedstaff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localcontractedstaff (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localcontractedstaff OWNER TO postgres;

--
-- Name: TABLE localcontractedstaff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localcontractedstaff IS 'The set of local education agency or charter management organization contracted staff amounts.';


--
-- Name: COLUMN localcontractedstaff.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localcontractedstaff.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localcontractedstaff.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localcontractedstaff.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localcontractedstaff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN localcontractedstaff.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localcontractedstaff.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localcontractedstaff.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localedescriptor (
    localedescriptorid integer NOT NULL
);


ALTER TABLE edfi.localedescriptor OWNER TO postgres;

--
-- Name: TABLE localedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localedescriptor IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: COLUMN localedescriptor.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localedescriptor.localedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagency (
    localeducationagencyid integer NOT NULL,
    localeducationagencycategorydescriptorid integer NOT NULL,
    charterstatusdescriptorid integer,
    parentlocaleducationagencyid integer,
    educationservicecenterid integer,
    stateeducationagencyid integer
);


ALTER TABLE edfi.localeducationagency OWNER TO postgres;

--
-- Name: TABLE localeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagency IS 'This entity represents an administrative unit at the local level which exists primarily to operate schools or to contract for educational services. It includes school districts, charter schools, charter management organizations, or other local administrative organizations.';


--
-- Name: COLUMN localeducationagency.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.localeducationagencycategorydescriptorid IS 'The category of local education agency/district.';


--
-- Name: COLUMN localeducationagency.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN localeducationagency.parentlocaleducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.parentlocaleducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagency.educationservicecenterid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.educationservicecenterid IS 'The identifier assigned to an education service center.';


--
-- Name: COLUMN localeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: localeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyaccountability (
    localeducationagencyid integer NOT NULL,
    schoolyear smallint NOT NULL,
    gunfreeschoolsactreportingstatusdescriptorid integer,
    schoolchoiceimplementstatusdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE localeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for local education agencies.';


--
-- Name: COLUMN localeducationagencyaccountability.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.gunfreeschoolsactreportingstatusdescriptorid IS 'An indication of whether the school or Local Education Agency (LEA) submitted a Gun-Free Schools Act (GFSA) of 1994 report to the state, as defined by Title 18, Section 921.';


--
-- Name: COLUMN localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyaccountability.schoolchoiceimplementstatusdescriptorid IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: localeducationagencycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencycategorydescriptor (
    localeducationagencycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.localeducationagencycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE localeducationagencycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencycategorydescriptor IS 'The category of local education agency/district. For example: Independent or Charter.';


--
-- Name: COLUMN localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencycategorydescriptor.localeducationagencycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: localeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localeducationagencyfederalfunds (
    fiscalyear integer NOT NULL,
    localeducationagencyid integer NOT NULL,
    innovativedollarsspent money,
    innovativedollarsspentstrategicpriorities money,
    innovativeprogramsfundsreceived money,
    schoolimprovementallocation money,
    schoolimprovementreservedfundspercentage numeric(5,4),
    supplementaleducationalservicesfundsspent money,
    supplementaleducationalservicesperpupilexpenditure money,
    stateassessmentadministrationfunding numeric(5,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.localeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE localeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN localeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN localeducationagencyfederalfunds.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspent IS 'The total Title V, Part A funds expended by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativedollarsspentstrategicpriorities IS 'The total amount of Title V, Part A funds expended by LEAs for the four strategic priorities.';


--
-- Name: COLUMN localeducationagencyfederalfunds.innovativeprogramsfundsreceived; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.innovativeprogramsfundsreceived IS 'The total Title V, Part A funds received by LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementallocation IS 'The amount of Section 1003(a) and 1003(g) allocations to LEAs.';


--
-- Name: COLUMN localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.schoolimprovementreservedfundspercentage IS 'An indication of the percentage of the Title I, Part A allocation that the SEA reserved in accordance with Section 1003(a) of ESEA and 200.100(a) of ED''s regulations governing the reservation of funds for school improvement under Section 1003(a) of ESEA.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesfundsspent IS 'The dollar amount spent on supplemental educational services during the school year under Title I, Part A, Section 1116 of ESEA as amended.';


--
-- Name: COLUMN localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.supplementaleducationalservicesperpupilexpenditure IS 'The maximum dollar amount that may be spent per child for expenditures related to supplemental educational services under Title I of the ESEA.';


--
-- Name: COLUMN localeducationagencyfederalfunds.stateassessmentadministrationfunding; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localeducationagencyfederalfunds.stateassessmentadministrationfunding IS 'The percentage of funds used to administer assessments required by Section 1111(b) or to carry out other activities described in Section 6111 and other activities related to ensuring that the state''s schools and LEAs are held accountable for results.';


--
-- Name: localencumbrance; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localencumbrance (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localencumbrance OWNER TO postgres;

--
-- Name: TABLE localencumbrance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localencumbrance IS 'The set of local education agency or charter management organization encumbrance amounts.';


--
-- Name: COLUMN localencumbrance.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localencumbrance.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localencumbrance.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localencumbrance.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localencumbrance.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localencumbrance.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localencumbrance.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: localpayroll; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.localpayroll (
    accountidentifier character varying(50) NOT NULL,
    asofdate date NOT NULL,
    educationorganizationid integer NOT NULL,
    fiscalyear integer NOT NULL,
    staffusi integer NOT NULL,
    amount money NOT NULL,
    financialcollectiondescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.localpayroll OWNER TO postgres;

--
-- Name: TABLE localpayroll; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.localpayroll IS 'The set of local education agency or charter management organization payroll amounts.';


--
-- Name: COLUMN localpayroll.accountidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.accountidentifier IS 'Code value for the valid combination of account dimensions by LEA under which financials are reported. ';


--
-- Name: COLUMN localpayroll.asofdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.asofdate IS 'The date of the reported amount for the account.';


--
-- Name: COLUMN localpayroll.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN localpayroll.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.fiscalyear IS 'The fiscal year for the account.';


--
-- Name: COLUMN localpayroll.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN localpayroll.amount; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.amount IS 'Current balance for the account.';


--
-- Name: COLUMN localpayroll.financialcollectiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.localpayroll.financialcollectiondescriptorid IS 'The accounting period or grouping for which the amount is collected.';


--
-- Name: location; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.location (
    classroomidentificationcode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    maximumnumberofseats integer,
    optimalnumberofseats integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.location OWNER TO postgres;

--
-- Name: TABLE location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.location IS 'This entity represents the physical space where students gather for a particular class/section. The location may be an indoor or outdoor area designated for the purpose of meeting the educational needs of students.';


--
-- Name: COLUMN location.classroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.classroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN location.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN location.maximumnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.maximumnumberofseats IS 'The most number of seats the class can maintain.';


--
-- Name: COLUMN location.optimalnumberofseats; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.location.optimalnumberofseats IS 'The number of seats that is most favorable to the class.';


--
-- Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.magnetspecialprogramemphasisschooldescriptor (
    magnetspecialprogramemphasisschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.magnetspecialprogramemphasisschooldescriptor OWNER TO postgres;

--
-- Name: TABLE magnetspecialprogramemphasisschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.magnetspecialprogramemphasisschooldescriptor IS 'A school that has been designed to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing or eliminating racial isolation; and/or to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.magnetspecialprogramemphasisschooldescriptor.magnetspecialprogramemphasisschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: mediumofinstructiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.mediumofinstructiondescriptor (
    mediumofinstructiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.mediumofinstructiondescriptor OWNER TO postgres;

--
-- Name: TABLE mediumofinstructiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.mediumofinstructiondescriptor IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN mediumofinstructiondescriptor.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.mediumofinstructiondescriptor.mediumofinstructiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: methodcreditearneddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.methodcreditearneddescriptor (
    methodcreditearneddescriptorid integer NOT NULL
);


ALTER TABLE edfi.methodcreditearneddescriptor OWNER TO postgres;

--
-- Name: TABLE methodcreditearneddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.methodcreditearneddescriptor IS 'The method the credits were earned, for example:  Classroom, Examination, Transfer.';


--
-- Name: COLUMN methodcreditearneddescriptor.methodcreditearneddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.methodcreditearneddescriptor.methodcreditearneddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: migranteducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.migranteducationprogramservicedescriptor (
    migranteducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.migranteducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE migranteducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.migranteducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a migrant education program.';


--
-- Name: COLUMN migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.migranteducationprogramservicedescriptor.migranteducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: modelentitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.modelentitydescriptor (
    modelentitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.modelentitydescriptor OWNER TO postgres;

--
-- Name: TABLE modelentitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.modelentitydescriptor IS 'The class of a domain entity in the Ed-Fi data model.';


--
-- Name: COLUMN modelentitydescriptor.modelentitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.modelentitydescriptor.modelentitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: monitoreddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.monitoreddescriptor (
    monitoreddescriptorid integer NOT NULL
);


ALTER TABLE edfi.monitoreddescriptor OWNER TO postgres;

--
-- Name: TABLE monitoreddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.monitoreddescriptor IS 'This descriptor defines monitorization statuses for students who are no longer receiving language instruction program services.';


--
-- Name: COLUMN monitoreddescriptor.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.monitoreddescriptor.monitoreddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramdescriptor (
    neglectedordelinquentprogramdescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramdescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramdescriptor IS 'This descriptor defines the type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: COLUMN neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramdescriptor.neglectedordelinquentprogramdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.neglectedordelinquentprogramservicedescriptor (
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.neglectedordelinquentprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE neglectedordelinquentprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.neglectedordelinquentprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a neglected or delinquent program.';


--
-- Name: COLUMN neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.neglectedordelinquentprogramservicedescriptor.neglectedordelinquentprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: networkpurposedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.networkpurposedescriptor (
    networkpurposedescriptorid integer NOT NULL
);


ALTER TABLE edfi.networkpurposedescriptor OWNER TO postgres;

--
-- Name: TABLE networkpurposedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.networkpurposedescriptor IS 'The purpose(s) of the network, e.g. shared services, collective procurement, etc.';


--
-- Name: COLUMN networkpurposedescriptor.networkpurposedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.networkpurposedescriptor.networkpurposedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: objectdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.objectdimension OWNER TO postgres;

--
-- Name: TABLE objectdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectdimension IS 'The NCES object accounting dimension representing an expenditure. Per the NCES definition, this classification is used to describe the service or commodity obtained as the result of a specific expenditure, such as salaries, benefits, tuition reimbursement, and so forth.';


--
-- Name: COLUMN objectdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.code IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN objectdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.fiscalyear IS 'The fiscal year for which the account object dimension is valid.';


--
-- Name: COLUMN objectdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimension.codename IS 'A description of the account object dimension.';


--
-- Name: objectdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE objectdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN objectdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.code IS 'The code representation of the account object dimension.';


--
-- Name: COLUMN objectdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account object dimension is valid.';


--
-- Name: COLUMN objectdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: objectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    maxrawscore numeric(15,5),
    percentofassessment numeric(5,4),
    nomenclature character varying(100),
    description character varying(1024),
    parentidentificationcode character varying(60),
    academicsubjectdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.objectiveassessment OWNER TO postgres;

--
-- Name: TABLE objectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessment IS 'This entity represents subtests that assess specific learning objectives.';


--
-- Name: COLUMN objectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessment.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.maxrawscore IS 'The maximum raw score achievable across all assessment items that are correct and scored at the maximum.';


--
-- Name: COLUMN objectiveassessment.percentofassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.percentofassessment IS 'The percentage of the assessment that tests this objective.';


--
-- Name: COLUMN objectiveassessment.nomenclature; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.nomenclature IS 'Reflects the specific nomenclature used for this level of objective assessment.';


--
-- Name: COLUMN objectiveassessment.description; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.description IS 'The description of the objective assessment (e.g., vocabulary, measurement, or geometry).';


--
-- Name: COLUMN objectiveassessment.parentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.parentidentificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessment.academicsubjectdescriptorid IS 'The subject area of the objective assessment.';


--
-- Name: objectiveassessmentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentitemidentificationcode character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentassessmentitem OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentassessmentitem IS 'References individual test items, if appropriate.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.assessmentitemidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.assessmentitemidentificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentassessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: objectiveassessmentlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentlearningstandard (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentlearningstandard OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentlearningstandard IS 'Learning standard tested by this objective assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN objectiveassessmentlearningstandard.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentlearningstandard.namespace IS 'Namespace for the assessment.';


--
-- Name: objectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentperformancelevel IS 'Definition of the performance levels and the associated cut scores. Three styles are supported: 1. Specification of performance level by minimum and maximum score, 2. Specification of performance level by cut score, using only minimum score, 3. Specification of performance level without any mapping to scores';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement of all students. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performanceleveldescriptorid IS 'The performance level(s) defined for the assessment.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.minimumscore IS 'The minimum score required to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.maximumscore IS 'The maximum score to make the indicated level of performance.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN objectiveassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: objectiveassessmentscore; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.objectiveassessmentscore (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    minimumscore character varying(35),
    maximumscore character varying(35),
    resultdatatypetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.objectiveassessmentscore OWNER TO postgres;

--
-- Name: TABLE objectiveassessmentscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.objectiveassessmentscore IS 'Definition of the scores to be expected from this objective assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN objectiveassessmentscore.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN objectiveassessmentscore.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN objectiveassessmentscore.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.minimumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.minimumscore IS 'The minimum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.maximumscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.maximumscore IS 'The maximum score possible on the assessment.';


--
-- Name: COLUMN objectiveassessmentscore.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.objectiveassessmentscore.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: oldethnicitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.oldethnicitydescriptor (
    oldethnicitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.oldethnicitydescriptor OWNER TO postgres;

--
-- Name: TABLE oldethnicitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.oldethnicitydescriptor IS 'Previous definition of Ethnicity combining Hispanic/Latino and Race.';


--
-- Name: COLUMN oldethnicitydescriptor.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.oldethnicitydescriptor.oldethnicitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: openstaffposition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffposition (
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    employmentstatusdescriptorid integer NOT NULL,
    staffclassificationdescriptorid integer NOT NULL,
    positiontitle character varying(100),
    programassignmentdescriptorid integer,
    dateposted date NOT NULL,
    datepostingremoved date,
    postingresultdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.openstaffposition OWNER TO postgres;

--
-- Name: TABLE openstaffposition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffposition IS 'This entity represents an open staff position that the education organization is seeking to fill.';


--
-- Name: COLUMN openstaffposition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffposition.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: COLUMN openstaffposition.employmentstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.employmentstatusdescriptorid IS 'Reflects the type of employment or contract desired for the position.';


--
-- Name: COLUMN openstaffposition.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.staffclassificationdescriptorid IS 'The titles of employment, official status, or rank of education staff.';


--
-- Name: COLUMN openstaffposition.positiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.positiontitle IS 'The descriptive name of an individual''s position.';


--
-- Name: COLUMN openstaffposition.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.programassignmentdescriptorid IS 'The name of the program for which the open staff position will be assigned.';


--
-- Name: COLUMN openstaffposition.dateposted; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.dateposted IS 'Date the open staff position was posted.';


--
-- Name: COLUMN openstaffposition.datepostingremoved; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.datepostingremoved IS 'The date the posting was removed or filled.';


--
-- Name: COLUMN openstaffposition.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffposition.postingresultdescriptorid IS 'Indication of whether the OpenStaffPosition was filled or retired without filling.';


--
-- Name: openstaffpositionacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositionacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositionacademicsubject OWNER TO postgres;

--
-- Name: TABLE openstaffpositionacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositionacademicsubject IS 'The teaching field required for the open staff position.';


--
-- Name: COLUMN openstaffpositionacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.academicsubjectdescriptorid IS 'The teaching field required for the open staff position.';


--
-- Name: COLUMN openstaffpositionacademicsubject.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositionacademicsubject.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositionacademicsubject.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: openstaffpositioninstructionalgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.openstaffpositioninstructionalgradelevel (
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    requisitionnumber character varying(20) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.openstaffpositioninstructionalgradelevel OWNER TO postgres;

--
-- Name: TABLE openstaffpositioninstructionalgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.openstaffpositioninstructionalgradelevel IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.gradeleveldescriptorid IS 'The set of grade levels for which the position''s assignment is responsible.';


--
-- Name: COLUMN openstaffpositioninstructionalgradelevel.requisitionnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.openstaffpositioninstructionalgradelevel.requisitionnumber IS 'The number or identifier assigned to an open staff position, typically a requisition number assigned by Human Resources.';


--
-- Name: operationalstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalstatusdescriptor (
    operationalstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.operationalstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE operationalstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalstatusdescriptor IS 'The current operational status of the education organization (e.g., active, inactive).';


--
-- Name: COLUMN operationalstatusdescriptor.operationalstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalstatusdescriptor.operationalstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: operationalunitdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalunitdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.operationalunitdimension OWNER TO postgres;

--
-- Name: TABLE operationalunitdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalunitdimension IS 'The NCES operational unit accounting dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.';


--
-- Name: COLUMN operationalunitdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.code IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN operationalunitdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.fiscalyear IS 'The fiscal year for which the account operational unit dimension is valid.';


--
-- Name: COLUMN operationalunitdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimension.codename IS 'A description of the account operational unit dimension.';


--
-- Name: operationalunitdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.operationalunitdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.operationalunitdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE operationalunitdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.operationalunitdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.code IS 'The code representation of the account operational unit dimension.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account operational unit dimension is valid.';


--
-- Name: COLUMN operationalunitdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.operationalunitdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: organizationdepartment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.organizationdepartment (
    organizationdepartmentid integer NOT NULL,
    academicsubjectdescriptorid integer,
    parenteducationorganizationid integer
);


ALTER TABLE edfi.organizationdepartment OWNER TO postgres;

--
-- Name: TABLE organizationdepartment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.organizationdepartment IS 'An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.';


--
-- Name: COLUMN organizationdepartment.organizationdepartmentid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.organizationdepartmentid IS 'The unique identification code for the organization department.';


--
-- Name: COLUMN organizationdepartment.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.academicsubjectdescriptorid IS 'The intended major subject area of the department.';


--
-- Name: COLUMN organizationdepartment.parenteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.organizationdepartment.parenteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: othernametypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.othernametypedescriptor (
    othernametypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.othernametypedescriptor OWNER TO postgres;

--
-- Name: TABLE othernametypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.othernametypedescriptor IS 'The types of alternate names for a person.';


--
-- Name: COLUMN othernametypedescriptor.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.othernametypedescriptor.othernametypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: parent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parent (
    parentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    sexdescriptorid integer,
    loginid character varying(60),
    personid character varying(32),
    sourcesystemdescriptorid integer,
    highestcompletedlevelofeducationdescriptorid integer,
    parentuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.parent OWNER TO postgres;

--
-- Name: TABLE parent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parent IS 'This entity represents a parent or guardian of a student, such as mother, father, or caretaker.';


--
-- Name: COLUMN parent.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parent.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN parent.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN parent.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN parent.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN parent.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN parent.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN parent.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.sexdescriptorid IS 'A person''s gender.';


--
-- Name: COLUMN parent.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN parent.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN parent.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN parent.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN parent.parentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parent.parentuniqueid IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: parent_parentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.parent_parentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.parent_parentusi_seq OWNER TO postgres;

--
-- Name: parent_parentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.parent_parentusi_seq OWNED BY edfi.parent.parentusi;


--
-- Name: parentaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    parentusi integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentaddress OWNER TO postgres;

--
-- Name: TABLE parentaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentaddress IS 'Parent''s address, if different from the student address.';


--
-- Name: COLUMN parentaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN parentaddress.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN parentaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN parentaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN parentaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN parentaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN parentaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN parentaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN parentaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN parentaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN parentaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN parentaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN parentaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: parentaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    parentusi integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentaddressperiod OWNER TO postgres;

--
-- Name: TABLE parentaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN parentaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN parentaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN parentaddressperiod.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN parentaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN parentaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN parentaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: parentelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentelectronicmail (
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentelectronicmail OWNER TO postgres;

--
-- Name: TABLE parentelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN parentelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN parentelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN parentelectronicmail.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN parentelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: parentinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentinternationaladdress OWNER TO postgres;

--
-- Name: TABLE parentinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN parentinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN parentinternationaladdress.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN parentinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN parentinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN parentinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN parentinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN parentinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN parentinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: parentlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentlanguage (
    languagedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentlanguage OWNER TO postgres;

--
-- Name: TABLE parentlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN parentlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN parentlanguage.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguage.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: parentlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentlanguageuse (
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentlanguageuse OWNER TO postgres;

--
-- Name: TABLE parentlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN parentlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN parentlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN parentlanguageuse.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentlanguageuse.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: parentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentothername (
    othernametypedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentothername OWNER TO postgres;

--
-- Name: TABLE parentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN parentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN parentothername.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN parentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN parentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN parentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN parentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: parentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parentpersonalidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    parentusi integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE parentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN parentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN parentpersonalidentificationdocument.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN parentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN parentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN parentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: parenttelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.parenttelephone (
    parentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.parenttelephone OWNER TO postgres;

--
-- Name: TABLE parenttelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.parenttelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN parenttelephone.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN parenttelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN parenttelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN parenttelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN parenttelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN parenttelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.parenttelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: participationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationdescriptor (
    participationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationdescriptor OWNER TO postgres;

--
-- Name: TABLE participationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationdescriptor IS 'This descriptor defines participation in a yearly English language assessment.';


--
-- Name: COLUMN participationdescriptor.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationdescriptor.participationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: participationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.participationstatusdescriptor (
    participationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.participationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE participationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.participationstatusdescriptor IS 'The student''s program participation status.';


--
-- Name: COLUMN participationstatusdescriptor.participationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.participationstatusdescriptor.participationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performancebaseconversiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performancebaseconversiondescriptor (
    performancebaseconversiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.performancebaseconversiondescriptor OWNER TO postgres;

--
-- Name: TABLE performancebaseconversiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performancebaseconversiondescriptor IS 'Defines standard levels of competency or performance that can be used for dashboard visualizations: advanced, proficient, basic, and below basic.';


--
-- Name: COLUMN performancebaseconversiondescriptor.performancebaseconversiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performancebaseconversiondescriptor.performancebaseconversiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: performanceleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.performanceleveldescriptor (
    performanceleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.performanceleveldescriptor OWNER TO postgres;

--
-- Name: TABLE performanceleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.performanceleveldescriptor IS 'This descriptor defines various levels or thresholds for performance on the assessment.';


--
-- Name: COLUMN performanceleveldescriptor.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.performanceleveldescriptor.performanceleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: person; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.person (
    personid character varying(32) NOT NULL,
    sourcesystemdescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.person OWNER TO postgres;

--
-- Name: TABLE person; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.person IS 'This entity represents a human being.';


--
-- Name: COLUMN person.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN person.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.person.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: personalinformationverificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.personalinformationverificationdescriptor (
    personalinformationverificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.personalinformationverificationdescriptor OWNER TO postgres;

--
-- Name: TABLE personalinformationverificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.personalinformationverificationdescriptor IS 'The evidence presented to verify one''s personal identity; for example: driver''s license, passport, birth certificate, etc.';


--
-- Name: COLUMN personalinformationverificationdescriptor.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.personalinformationverificationdescriptor.personalinformationverificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: platformtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.platformtypedescriptor (
    platformtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.platformtypedescriptor OWNER TO postgres;

--
-- Name: TABLE platformtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.platformtypedescriptor IS 'The platforms with which an assessment may be delivered.';


--
-- Name: COLUMN platformtypedescriptor.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.platformtypedescriptor.platformtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: populationserveddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.populationserveddescriptor (
    populationserveddescriptorid integer NOT NULL
);


ALTER TABLE edfi.populationserveddescriptor OWNER TO postgres;

--
-- Name: TABLE populationserveddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.populationserveddescriptor IS 'The type of students the Section is offered and tailored to.';


--
-- Name: COLUMN populationserveddescriptor.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.populationserveddescriptor.populationserveddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postingresultdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postingresultdescriptor (
    postingresultdescriptorid integer NOT NULL
);


ALTER TABLE edfi.postingresultdescriptor OWNER TO postgres;

--
-- Name: TABLE postingresultdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postingresultdescriptor IS 'Indication of whether the position was filled or retired without filling.';


--
-- Name: COLUMN postingresultdescriptor.postingresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postingresultdescriptor.postingresultdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryevent (
    eventdate date NOT NULL,
    postsecondaryeventcategorydescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    postsecondaryinstitutionid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: TABLE postsecondaryevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryevent IS 'This entity captures significant postsecondary events during a student''s high school tenure (e.g., FAFSA application or college application, acceptance, and enrollment) or during a student''s enrollment at a post-secondary institution.';


--
-- Name: COLUMN postsecondaryevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.eventdate IS 'The date the event occurred or was recorded.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryeventcategorydescriptorid IS 'The post secondary event that is logged.';


--
-- Name: COLUMN postsecondaryevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN postsecondaryevent.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryevent.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: postsecondaryeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryeventcategorydescriptor (
    postsecondaryeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryeventcategorydescriptor IS 'A code describing the type of post-secondary event (e.g., college application or acceptance).';


--
-- Name: COLUMN postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryeventcategorydescriptor.postsecondaryeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitution; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitution (
    postsecondaryinstitutionid integer NOT NULL,
    postsecondaryinstitutionleveldescriptorid integer,
    administrativefundingcontroldescriptorid integer
);


ALTER TABLE edfi.postsecondaryinstitution OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitution IS 'An organization that provides educational programs for individuals who have completed or otherwise left educational programs in secondary school(s).';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: COLUMN postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.postsecondaryinstitutionleveldescriptorid IS 'A classification of whether a post secondary institution''s highest level of offering is a program of 4-years or higher (4 year), 2-but-less-than 4-years (2 year), or less than 2-years.';


--
-- Name: COLUMN postsecondaryinstitution.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitution.administrativefundingcontroldescriptorid IS 'A classification of whether a postsecondary institution is operated by publicly elected or appointed officials (public control) or by privately elected or appointed officials and derives its major source of funds from private sources (private control).';


--
-- Name: postsecondaryinstitutionleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionleveldescriptor (
    postsecondaryinstitutionleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionleveldescriptor OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionleveldescriptor IS 'A classification of a postsecondary institution''s highest level of offering. Default values are based on the Carnegie Classifications.';


--
-- Name: COLUMN postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionleveldescriptor.postsecondaryinstitutionleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.postsecondaryinstitutionmediumofinstruction (
    mediumofinstructiondescriptorid integer NOT NULL,
    postsecondaryinstitutionid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.postsecondaryinstitutionmediumofinstruction OWNER TO postgres;

--
-- Name: TABLE postsecondaryinstitutionmediumofinstruction; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.postsecondaryinstitutionmediumofinstruction IS 'The categories in which an institution serves the students.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.mediumofinstructiondescriptorid IS 'The categories in which an institution serves the students.';


--
-- Name: COLUMN postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.postsecondaryinstitutionmediumofinstruction.postsecondaryinstitutionid IS 'The ID of the post secondary institution.';


--
-- Name: primarylearningdeviceaccessdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceaccessdescriptor (
    primarylearningdeviceaccessdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceaccessdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceaccessdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceaccessdescriptor IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceaccessdescriptor.primarylearningdeviceaccessdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceawayfromschooldescriptor (
    primarylearningdeviceawayfromschooldescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceawayfromschooldescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceawayfromschooldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceawayfromschooldescriptor IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceawayfromschooldescriptor.primarylearningdeviceawayfromschooldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: primarylearningdeviceproviderdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.primarylearningdeviceproviderdescriptor (
    primarylearningdeviceproviderdescriptorid integer NOT NULL
);


ALTER TABLE edfi.primarylearningdeviceproviderdescriptor OWNER TO postgres;

--
-- Name: TABLE primarylearningdeviceproviderdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.primarylearningdeviceproviderdescriptor IS 'The provider of the primary learning device.';


--
-- Name: COLUMN primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.primarylearningdeviceproviderdescriptor.primarylearningdeviceproviderdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: proficiencydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.proficiencydescriptor (
    proficiencydescriptorid integer NOT NULL
);


ALTER TABLE edfi.proficiencydescriptor OWNER TO postgres;

--
-- Name: TABLE proficiencydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.proficiencydescriptor IS 'This descriptor defines proficiency levels for a yearly English language assessment.';


--
-- Name: COLUMN proficiencydescriptor.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.proficiencydescriptor.proficiencydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: program; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.program (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    programid character varying(20),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.program OWNER TO postgres;

--
-- Name: TABLE program; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.program IS 'This entity represents any program designed to work in conjunction with, or as a supplement to, the main academic program. Programs may provide instruction, training, services, or benefits through federal, state, or local agencies. Programs may also include organized extracurricular activities for students.';


--
-- Name: COLUMN program.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN program.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN program.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN program.programid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.program.programid IS 'A unique number or alphanumeric code assigned to a program by a school, school system, a state, or other agency or entity.';


--
-- Name: programassignmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programassignmentdescriptor (
    programassignmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programassignmentdescriptor OWNER TO postgres;

--
-- Name: TABLE programassignmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programassignmentdescriptor IS 'This descriptor defines the name of the education program for which a teacher is assigned to a school.';


--
-- Name: COLUMN programassignmentdescriptor.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programassignmentdescriptor.programassignmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristic (
    educationorganizationid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programcharacteristic OWNER TO postgres;

--
-- Name: TABLE programcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristic IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programcharacteristic.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programcharacteristicdescriptorid IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristic.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programcharacteristic.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristic.programtypedescriptorid IS 'The type of program.';


--
-- Name: programcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programcharacteristicdescriptor (
    programcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.programcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE programcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programcharacteristicdescriptor IS 'This descriptor defines important characteristics of the Program, such as categories or particular indications.';


--
-- Name: COLUMN programcharacteristicdescriptor.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programcharacteristicdescriptor.programcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.programdimension OWNER TO postgres;

--
-- Name: TABLE programdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programdimension IS 'The NCES program accounting dimension. A program is defined by the NCES as a plan of activities and procedures designed to accomplish a predetermined objective or set of objectives. These are often categorized into broad program areas such as regular education, special education, vocational education, other PK-12 instructional, nonpublic school, adult and continuing education, community and junior college education, community services, and co-curricular or extracurricular activities.';


--
-- Name: COLUMN programdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.code IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN programdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.fiscalyear IS 'The fiscal year for which the account program dimension is valid.';


--
-- Name: COLUMN programdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimension.codename IS 'A description of the account program dimension.';


--
-- Name: programdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE programdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN programdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.code IS 'The code representation of the account program dimension.';


--
-- Name: COLUMN programdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account program dimension is valid.';


--
-- Name: COLUMN programdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: programlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningobjective (
    educationorganizationid integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningobjective OWNER TO postgres;

--
-- Name: TABLE programlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningobjective IS 'References the learning objective(s) with which the program is associated.';


--
-- Name: COLUMN programlearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN programlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN programlearningobjective.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningobjective.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningobjective.programtypedescriptorid IS 'The type of program.';


--
-- Name: programlearningstandard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programlearningstandard (
    educationorganizationid integer NOT NULL,
    learningstandardid character varying(60) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programlearningstandard OWNER TO postgres;

--
-- Name: TABLE programlearningstandard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programlearningstandard IS 'Learning standard followed by this program.';


--
-- Name: COLUMN programlearningstandard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programlearningstandard.learningstandardid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.learningstandardid IS 'The identifier for the specific learning standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN programlearningstandard.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programlearningstandard.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programlearningstandard.programtypedescriptorid IS 'The type of program.';


--
-- Name: programservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programservice (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programservice OWNER TO postgres;

--
-- Name: TABLE programservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programservice IS 'Defines the services this program provides to students.';


--
-- Name: COLUMN programservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN programservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programservice.servicedescriptorid IS 'Defines the services this program provides to students.';


--
-- Name: programsponsor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsor (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programsponsordescriptorid integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.programsponsor OWNER TO postgres;

--
-- Name: TABLE programsponsor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: COLUMN programsponsor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN programsponsor.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programsponsor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programsponsordescriptorid IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity, or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Organization).';


--
-- Name: COLUMN programsponsor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsor.programtypedescriptorid IS 'The type of program.';


--
-- Name: programsponsordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programsponsordescriptor (
    programsponsordescriptorid integer NOT NULL
);


ALTER TABLE edfi.programsponsordescriptor OWNER TO postgres;

--
-- Name: TABLE programsponsordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programsponsordescriptor IS 'Ultimate and intermediate providers of funds for a particular educational or service program or activity or for an individual''s participation in the program or activity (e.g., Federal, State, ESC, District, School, Private Org).';


--
-- Name: COLUMN programsponsordescriptor.programsponsordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programsponsordescriptor.programsponsordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: programtypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.programtypedescriptor (
    programtypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.programtypedescriptor OWNER TO postgres;

--
-- Name: TABLE programtypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.programtypedescriptor IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN programtypedescriptor.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.programtypedescriptor.programtypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressdescriptor (
    progressdescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressdescriptor OWNER TO postgres;

--
-- Name: TABLE progressdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressdescriptor IS 'This descriptor defines yearly progress or growth from last year''s assessment.';


--
-- Name: COLUMN progressdescriptor.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressdescriptor.progressdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: progressleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.progressleveldescriptor (
    progressleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.progressleveldescriptor OWNER TO postgres;

--
-- Name: TABLE progressleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.progressleveldescriptor IS 'This descriptor defines progress measured from pre- to post-test.';


--
-- Name: COLUMN progressleveldescriptor.progressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.progressleveldescriptor.progressleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: projectdimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.projectdimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.projectdimension OWNER TO postgres;

--
-- Name: TABLE projectdimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.projectdimension IS 'The NCES project accounting dimension. The project dimension reporting code permits school districts to accumulate expenditures to meet a variety of specialized reporting requirements at the local, state, and federal levels.';


--
-- Name: COLUMN projectdimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.code IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN projectdimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.fiscalyear IS 'The fiscal year for which the account project dimension is valid.';


--
-- Name: COLUMN projectdimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimension.codename IS 'A description of the account project dimension.';


--
-- Name: projectdimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.projectdimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.projectdimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE projectdimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.projectdimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN projectdimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.code IS 'The code representation of the account project dimension.';


--
-- Name: COLUMN projectdimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.fiscalyear IS 'The fiscal year for which the account project dimension is valid.';


--
-- Name: COLUMN projectdimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.projectdimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: providercategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providercategorydescriptor (
    providercategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providercategorydescriptor OWNER TO postgres;

--
-- Name: TABLE providercategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providercategorydescriptor IS 'This descriptor holds the category of the provider.';


--
-- Name: COLUMN providercategorydescriptor.providercategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providercategorydescriptor.providercategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerprofitabilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerprofitabilitydescriptor (
    providerprofitabilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerprofitabilitydescriptor OWNER TO postgres;

--
-- Name: TABLE providerprofitabilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerprofitabilitydescriptor IS 'This descriptor indicates the profitability status of the provider.';


--
-- Name: COLUMN providerprofitabilitydescriptor.providerprofitabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerprofitabilitydescriptor.providerprofitabilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: providerstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.providerstatusdescriptor (
    providerstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.providerstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE providerstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.providerstatusdescriptor IS 'This descriptor defines the status of the provider.';


--
-- Name: COLUMN providerstatusdescriptor.providerstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.providerstatusdescriptor.providerstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: publicationstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.publicationstatusdescriptor (
    publicationstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.publicationstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE publicationstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.publicationstatusdescriptor IS 'The publication status of the document (i.e., Adopted, Draft, Published, Deprecated, Unknown).';


--
-- Name: COLUMN publicationstatusdescriptor.publicationstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.publicationstatusdescriptor.publicationstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: questionformdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.questionformdescriptor (
    questionformdescriptorid integer NOT NULL
);


ALTER TABLE edfi.questionformdescriptor OWNER TO postgres;

--
-- Name: TABLE questionformdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.questionformdescriptor IS 'The form or type of question.';


--
-- Name: COLUMN questionformdescriptor.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.questionformdescriptor.questionformdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: racedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.racedescriptor (
    racedescriptorid integer NOT NULL
);


ALTER TABLE edfi.racedescriptor OWNER TO postgres;

--
-- Name: TABLE racedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.racedescriptor IS 'The enumeration items defining the racial categories which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies.';


--
-- Name: COLUMN racedescriptor.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.racedescriptor.racedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonexiteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonexiteddescriptor (
    reasonexiteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonexiteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonexiteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonexiteddescriptor IS 'This descriptor defines the reason a student exited a program.';


--
-- Name: COLUMN reasonexiteddescriptor.reasonexiteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonexiteddescriptor.reasonexiteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reasonnottesteddescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reasonnottesteddescriptor (
    reasonnottesteddescriptorid integer NOT NULL
);


ALTER TABLE edfi.reasonnottesteddescriptor OWNER TO postgres;

--
-- Name: TABLE reasonnottesteddescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reasonnottesteddescriptor IS 'The primary reason student is not tested.';


--
-- Name: COLUMN reasonnottesteddescriptor.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reasonnottesteddescriptor.reasonnottesteddescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: recognitiontypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.recognitiontypedescriptor (
    recognitiontypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.recognitiontypedescriptor OWNER TO postgres;

--
-- Name: TABLE recognitiontypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.recognitiontypedescriptor IS 'The nature of recognition given to the student for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN recognitiontypedescriptor.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.recognitiontypedescriptor.recognitiontypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: relationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.relationdescriptor (
    relationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.relationdescriptor OWNER TO postgres;

--
-- Name: TABLE relationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.relationdescriptor IS 'The nature of an individual''s relationship to a student.';


--
-- Name: COLUMN relationdescriptor.relationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.relationdescriptor.relationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: repeatidentifierdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.repeatidentifierdescriptor (
    repeatidentifierdescriptorid integer NOT NULL
);


ALTER TABLE edfi.repeatidentifierdescriptor OWNER TO postgres;

--
-- Name: TABLE repeatidentifierdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.repeatidentifierdescriptor IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN repeatidentifierdescriptor.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.repeatidentifierdescriptor.repeatidentifierdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcard (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    studentusi integer NOT NULL,
    gpagivengradingperiod numeric(18,4),
    gpacumulative numeric(18,4),
    numberofdaysabsent numeric(18,4),
    numberofdaysinattendance numeric(18,4),
    numberofdaystardy integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.reportcard OWNER TO postgres;

--
-- Name: TABLE reportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcard IS 'This educational entity represents the collection of student grades for courses taken during a grading period.';


--
-- Name: COLUMN reportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcard.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcard.gpagivengradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gpagivengradingperiod IS 'A measure of average performance in all courses taken by an individual for the current grading period.';


--
-- Name: COLUMN reportcard.gpacumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.gpacumulative IS 'A measure of cumulative average performance in all courses taken by an individual from the beginning of the school year through the current grading period.';


--
-- Name: COLUMN reportcard.numberofdaysabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysabsent IS 'The number of days an individual is absent when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaysinattendance; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaysinattendance IS 'The number of days an individual is present when school is in session during a given reporting period.';


--
-- Name: COLUMN reportcard.numberofdaystardy; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcard.numberofdaystardy IS 'The number of days an individual is tardy during a given reporting period.';


--
-- Name: reportcardgrade; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgrade (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    gradetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgrade OWNER TO postgres;

--
-- Name: TABLE reportcardgrade; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgrade IS 'Grades for the classes attended by the student for this grading period.';


--
-- Name: COLUMN reportcardgrade.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN reportcardgrade.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgrade.gradetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradetypedescriptorid IS 'The type of grade reported (e.g., exam, final, grading period).';


--
-- Name: COLUMN reportcardgrade.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgrade.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardgrade.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN reportcardgrade.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgrade.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN reportcardgrade.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN reportcardgrade.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN reportcardgrade.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgrade.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: reportcardgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardgradepointaverage (
    educationorganizationid integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    studentusi integer NOT NULL,
    iscumulative boolean,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardgradepointaverage OWNER TO postgres;

--
-- Name: TABLE reportcardgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardgradepointaverage IS 'A measure of average performance for courses taken by an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardgradepointaverage.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN reportcardgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN reportcardgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN reportcardgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: reportcardstudentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentcompetencyobjective (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentcompetencyobjective IS 'The student competency evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN reportcardstudentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: reportcardstudentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportcardstudentlearningobjective (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.reportcardstudentlearningobjective OWNER TO postgres;

--
-- Name: TABLE reportcardstudentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportcardstudentlearningobjective IS 'The student learning objective evaluations associated for this grading period.';


--
-- Name: COLUMN reportcardstudentlearningobjective.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN reportcardstudentlearningobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN reportcardstudentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN reportcardstudentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN reportcardstudentlearningobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportcardstudentlearningobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: reporterdescriptiondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reporterdescriptiondescriptor (
    reporterdescriptiondescriptorid integer NOT NULL
);


ALTER TABLE edfi.reporterdescriptiondescriptor OWNER TO postgres;

--
-- Name: TABLE reporterdescriptiondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reporterdescriptiondescriptor IS 'This descriptor defines the type of individual who reported an incident.';


--
-- Name: COLUMN reporterdescriptiondescriptor.reporterdescriptiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reporterdescriptiondescriptor.reporterdescriptiondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: reportingtagdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.reportingtagdescriptor (
    reportingtagdescriptorid integer NOT NULL
);


ALTER TABLE edfi.reportingtagdescriptor OWNER TO postgres;

--
-- Name: TABLE reportingtagdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.reportingtagdescriptor IS 'A descriptor used at the dimension and/or chart of account levels to demote specific state needs for reporting.';


--
-- Name: COLUMN reportingtagdescriptor.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.reportingtagdescriptor.reportingtagdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: residencystatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.residencystatusdescriptor (
    residencystatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.residencystatusdescriptor OWNER TO postgres;

--
-- Name: TABLE residencystatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.residencystatusdescriptor IS 'This descriptor defines indications of the location of a person''s legal residence relative to (within or outside of) the boundaries of the public school attended and its administrative unit.';


--
-- Name: COLUMN residencystatusdescriptor.residencystatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.residencystatusdescriptor.residencystatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responseindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responseindicatordescriptor (
    responseindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.responseindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE responseindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responseindicatordescriptor IS 'Indicator of the response.';


--
-- Name: COLUMN responseindicatordescriptor.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responseindicatordescriptor.responseindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: responsibilitydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.responsibilitydescriptor (
    responsibilitydescriptorid integer NOT NULL
);


ALTER TABLE edfi.responsibilitydescriptor OWNER TO postgres;

--
-- Name: TABLE responsibilitydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.responsibilitydescriptor IS 'This descriptor defines types of responsibility an education organization may have for a student (e.g., accountability, attendance, funding).';


--
-- Name: COLUMN responsibilitydescriptor.responsibilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.responsibilitydescriptor.responsibilitydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: restraintevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restraintevent (
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    eventdate date NOT NULL,
    educationalenvironmentdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.restraintevent OWNER TO postgres;

--
-- Name: TABLE restraintevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restraintevent IS 'This event entity represents the instances where a special education student was physically or mechanically restrained due to imminent serious physical harm to themselves or others, imminent serious property destruction or a combination of both imminent serious physical harm to themselves or others and imminent serious property destruction.';


--
-- Name: COLUMN restraintevent.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restraintevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restraintevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN restraintevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.eventdate IS 'Month, day, and year of the restraint event.';


--
-- Name: COLUMN restraintevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restraintevent.educationalenvironmentdescriptorid IS 'The setting where the RestraintEvent was exercised.';


--
-- Name: restrainteventprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventprogram (
    educationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    restrainteventidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventprogram OWNER TO postgres;

--
-- Name: TABLE restrainteventprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventprogram IS 'The special education program associated with the restraint event.';


--
-- Name: COLUMN restrainteventprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN restrainteventprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN restrainteventprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN restrainteventprogram.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: restrainteventreason; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreason (
    restrainteventidentifier character varying(20) NOT NULL,
    restrainteventreasondescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.restrainteventreason OWNER TO postgres;

--
-- Name: TABLE restrainteventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreason IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: COLUMN restrainteventreason.restrainteventidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventidentifier IS 'A unique number or alphanumeric code assigned to a restraint event by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN restrainteventreason.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.restrainteventreasondescriptorid IS 'A categorization of the circumstances or reason for the RestraintEvent.';


--
-- Name: COLUMN restrainteventreason.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN restrainteventreason.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreason.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: restrainteventreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.restrainteventreasondescriptor (
    restrainteventreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.restrainteventreasondescriptor OWNER TO postgres;

--
-- Name: TABLE restrainteventreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.restrainteventreasondescriptor IS 'The items of categorization of the circumstances or reason for the restraint.';


--
-- Name: COLUMN restrainteventreasondescriptor.restrainteventreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.restrainteventreasondescriptor.restrainteventreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: resultdatatypetypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.resultdatatypetypedescriptor (
    resultdatatypetypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.resultdatatypetypedescriptor OWNER TO postgres;

--
-- Name: TABLE resultdatatypetypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.resultdatatypetypedescriptor IS 'The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN resultdatatypetypedescriptor.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.resultdatatypetypedescriptor.resultdatatypetypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: retestindicatordescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.retestindicatordescriptor (
    retestindicatordescriptorid integer NOT NULL
);


ALTER TABLE edfi.retestindicatordescriptor OWNER TO postgres;

--
-- Name: TABLE retestindicatordescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.retestindicatordescriptor IS 'Indicator if the test was retaken.';


--
-- Name: COLUMN retestindicatordescriptor.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.retestindicatordescriptor.retestindicatordescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: school; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.school (
    schoolid integer NOT NULL,
    schooltypedescriptorid integer,
    charterstatusdescriptorid integer,
    titleipartaschooldesignationdescriptorid integer,
    magnetspecialprogramemphasisschooldescriptorid integer,
    administrativefundingcontroldescriptorid integer,
    internetaccessdescriptorid integer,
    localeducationagencyid integer,
    charterapprovalagencytypedescriptorid integer,
    charterapprovalschoolyear smallint
);


ALTER TABLE edfi.school OWNER TO postgres;

--
-- Name: TABLE school; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.school IS 'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.';


--
-- Name: COLUMN school.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN school.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.schooltypedescriptorid IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN school.charterstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterstatusdescriptorid IS 'A school or agency providing free public elementary or secondary education to eligible students under a specific charter granted by the state legislature or other appropriate authority and designated by such authority to be a charter school.';


--
-- Name: COLUMN school.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.titleipartaschooldesignationdescriptorid IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: COLUMN school.magnetspecialprogramemphasisschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.magnetspecialprogramemphasisschooldescriptorid IS 'A school that has been designed: 1) to attract students of different racial/ethnic backgrounds for the purpose of reducing, preventing, or eliminating racial isolation; and/or 2) to provide an academic or social focus on a particular theme (e.g., science/math, performing arts, gifted/talented, or foreign language).';


--
-- Name: COLUMN school.administrativefundingcontroldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.administrativefundingcontroldescriptorid IS 'The type of education institution as classified by its funding source, for example public or private.';


--
-- Name: COLUMN school.internetaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.internetaccessdescriptorid IS 'The type of Internet access available.';


--
-- Name: COLUMN school.localeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.localeducationagencyid IS 'The identifier assigned to a local education agency.';


--
-- Name: COLUMN school.charterapprovalagencytypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalagencytypedescriptorid IS 'The type of agency that approved the establishment or continuation of a charter school.';


--
-- Name: COLUMN school.charterapprovalschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.school.charterapprovalschoolyear IS 'The school year in which a charter school was initially approved.';


--
-- Name: schoolcategory; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategory (
    schoolcategorydescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolcategory OWNER TO postgres;

--
-- Name: TABLE schoolcategory; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategory IS 'The one or more categories of school.';


--
-- Name: COLUMN schoolcategory.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolcategorydescriptorid IS 'The one or more categories of school.';


--
-- Name: COLUMN schoolcategory.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategory.schoolid IS 'The identifier assigned to a school.';


--
-- Name: schoolcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolcategorydescriptor (
    schoolcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE schoolcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolcategorydescriptor IS 'The category of school. For example: High School, Middle School, Elementary School.';


--
-- Name: COLUMN schoolcategorydescriptor.schoolcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolcategorydescriptor.schoolcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolchoiceimplementstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolchoiceimplementstatusdescriptor (
    schoolchoiceimplementstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolchoiceimplementstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE schoolchoiceimplementstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolchoiceimplementstatusdescriptor IS 'An indication of whether the LEA was able to implement the provisions for public school choice under Title I, Part A, Section 1116 of ESEA, as amended.';


--
-- Name: COLUMN schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolchoiceimplementstatusdescriptor.schoolchoiceimplementstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolfoodserviceprogramservicedescriptor (
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schoolfoodserviceprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE schoolfoodserviceprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolfoodserviceprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a school food service program.';


--
-- Name: COLUMN schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolfoodserviceprogramservicedescriptor.schoolfoodserviceprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.schoolgradelevel OWNER TO postgres;

--
-- Name: TABLE schoolgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolgradelevel IS 'The grade levels served at the school.';


--
-- Name: COLUMN schoolgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.gradeleveldescriptorid IS 'The grade levels served at the school.';


--
-- Name: COLUMN schoolgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: schooltypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schooltypedescriptor (
    schooltypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.schooltypedescriptor OWNER TO postgres;

--
-- Name: TABLE schooltypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schooltypedescriptor IS 'The type of education institution as classified by its primary focus.';


--
-- Name: COLUMN schooltypedescriptor.schooltypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schooltypedescriptor.schooltypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: schoolyeartype; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.schoolyeartype (
    schoolyear smallint NOT NULL,
    schoolyeardescription character varying(50) NOT NULL,
    currentschoolyear boolean NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.schoolyeartype OWNER TO postgres;

--
-- Name: TABLE schoolyeartype; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.schoolyeartype IS 'Identifier for a school year.';


--
-- Name: COLUMN schoolyeartype.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyear IS 'Key for School Year';


--
-- Name: COLUMN schoolyeartype.schoolyeardescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.schoolyeardescription IS 'The description for the SchoolYear type.';


--
-- Name: COLUMN schoolyeartype.currentschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.schoolyeartype.currentschoolyear IS 'The code for the current school year.';


--
-- Name: section; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.section (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    sequenceofcourse integer,
    educationalenvironmentdescriptorid integer,
    mediumofinstructiondescriptorid integer,
    populationserveddescriptorid integer,
    availablecredits numeric(9,3),
    availablecredittypedescriptorid integer,
    availablecreditconversion numeric(9,2),
    instructionlanguagedescriptorid integer,
    locationschoolid integer,
    locationclassroomidentificationcode character varying(60),
    officialattendanceperiod boolean,
    sectionname character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.section OWNER TO postgres;

--
-- Name: TABLE section; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.section IS 'This entity represents a setting in which organized instruction of course content is provided, in-person or otherwise, to one or more students for a given period of time. A course offering may be offered to more than one section.';


--
-- Name: COLUMN section.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN section.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN section.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN section.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN section.sequenceofcourse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sequenceofcourse IS 'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.';


--
-- Name: COLUMN section.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.educationalenvironmentdescriptorid IS 'The setting in which a student receives education and related services.';


--
-- Name: COLUMN section.mediumofinstructiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.mediumofinstructiondescriptorid IS 'The media through which teachers provide instruction to students and students and teachers communicate about instructional matters.';


--
-- Name: COLUMN section.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.populationserveddescriptorid IS 'The type of students the section is offered and tailored to.';


--
-- Name: COLUMN section.availablecredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.availablecredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN section.availablecreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.availablecreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN section.instructionlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.instructionlanguagedescriptorid IS 'The primary language of instruction. If omitted, English is assumed.';


--
-- Name: COLUMN section.locationschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN section.locationclassroomidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.locationclassroomidentificationcode IS 'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN section.officialattendanceperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.officialattendanceperiod IS 'Indicator of whether this section is used for official daily attendance. Alternatively, official daily attendance may be tied to a class period.';


--
-- Name: COLUMN section.sectionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.section.sectionname IS 'A locally-defined name for the section, generally created to make the section more recognizable in informal contexts and generally distinct from the section identifier.';


--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionattendancetakenevent (
    calendarcode character varying(60) NOT NULL,
    date date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    eventdate date NOT NULL,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: TABLE sectionattendancetakenevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionattendancetakenevent IS 'Captures attendance taken event for given section.';


--
-- Name: COLUMN sectionattendancetakenevent.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN sectionattendancetakenevent.date; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.date IS 'The month, day, and year of the calendar event.';


--
-- Name: COLUMN sectionattendancetakenevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionattendancetakenevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionattendancetakenevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionattendancetakenevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sectionattendancetakenevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.eventdate IS 'The date the section attendance taken event was submitted, which could be a different date than the instructional day.';


--
-- Name: COLUMN sectionattendancetakenevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionattendancetakenevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: sectioncharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristic (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectioncharacteristicdescriptorid integer NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristic IS 'Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.';


--
-- Name: COLUMN sectioncharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncharacteristic.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectioncharacteristicdescriptorid IS 'Reflects important characteristics of the section, such as whether or not attendance is taken and the section is graded.';


--
-- Name: COLUMN sectioncharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: sectioncharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncharacteristicdescriptor (
    sectioncharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sectioncharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE sectioncharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncharacteristicdescriptor IS 'This descriptor defines characteristics of a Section, such as whether attendance is taken and the Section is graded.';


--
-- Name: COLUMN sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncharacteristicdescriptor.sectioncharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sectionclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionclassperiod (
    classperiodname character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionclassperiod OWNER TO postgres;

--
-- Name: TABLE sectionclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionclassperiod IS 'The class period during which the section meets.';


--
-- Name: COLUMN sectionclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN sectionclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionclassperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: sectioncourselevelcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectioncourselevelcharacteristic (
    courselevelcharacteristicdescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectioncourselevelcharacteristic OWNER TO postgres;

--
-- Name: TABLE sectioncourselevelcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectioncourselevelcharacteristic IS 'The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.courselevelcharacteristicdescriptorid IS 'The type of specific program or designation with which the section is associated. This collection should only be populated if it differs from the course level characteristics identified at the course offering level.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectioncourselevelcharacteristic.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectioncourselevelcharacteristic.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: sectionofferedgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionofferedgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionofferedgradelevel OWNER TO postgres;

--
-- Name: TABLE sectionofferedgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionofferedgradelevel IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.';


--
-- Name: COLUMN sectionofferedgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.gradeleveldescriptorid IS 'The grade levels in which the section is offered. This collection should only be populated if it differs from the Offered Grade Levels identified at the course offering level.';


--
-- Name: COLUMN sectionofferedgradelevel.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionofferedgradelevel.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionofferedgradelevel.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionofferedgradelevel.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionofferedgradelevel.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: sectionprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sectionprogram (
    educationorganizationid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sectionprogram OWNER TO postgres;

--
-- Name: TABLE sectionprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sectionprogram IS 'Optional reference to program to which the section is associated.';


--
-- Name: COLUMN sectionprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN sectionprogram.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN sectionprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN sectionprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN sectionprogram.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sectionprogram.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sectionprogram.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN sectionprogram.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sectionprogram.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: separationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationdescriptor (
    separationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationdescriptor OWNER TO postgres;

--
-- Name: TABLE separationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationdescriptor IS 'Type of employment separation; for example:  Voluntary separation, Involuntary separation, Mutual agreement. Other, etc.';


--
-- Name: COLUMN separationdescriptor.separationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationdescriptor.separationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: separationreasondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.separationreasondescriptor (
    separationreasondescriptorid integer NOT NULL
);


ALTER TABLE edfi.separationreasondescriptor OWNER TO postgres;

--
-- Name: TABLE separationreasondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.separationreasondescriptor IS 'This descriptor defines the reasons for terminating the employment.';


--
-- Name: COLUMN separationreasondescriptor.separationreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.separationreasondescriptor.separationreasondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: servicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.servicedescriptor (
    servicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.servicedescriptor OWNER TO postgres;

--
-- Name: TABLE servicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.servicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a program.';


--
-- Name: COLUMN servicedescriptor.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.servicedescriptor.servicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: session; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.session (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    begindate date NOT NULL,
    enddate date NOT NULL,
    termdescriptorid integer NOT NULL,
    totalinstructionaldays integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.session OWNER TO postgres;

--
-- Name: TABLE session; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.session IS 'A term in the school year, generally a unit of time into which courses are scheduled, instruction occurs and by which credits are awarded. Sessions may be interrupted by vacations or other events.';


--
-- Name: COLUMN session.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN session.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN session.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN session.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.begindate IS 'Month, day, and year of the first day of the session.';


--
-- Name: COLUMN session.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.enddate IS 'Month, day and year of the last day of the session.';


--
-- Name: COLUMN session.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.termdescriptorid IS 'An descriptor value indicating the term.';


--
-- Name: COLUMN session.totalinstructionaldays; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.session.totalinstructionaldays IS 'The total number of instructional days in the school calendar.';


--
-- Name: sessionacademicweek; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessionacademicweek (
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    weekidentifier character varying(80) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessionacademicweek OWNER TO postgres;

--
-- Name: TABLE sessionacademicweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessionacademicweek IS 'The academic weeks associated with the school year.';


--
-- Name: COLUMN sessionacademicweek.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessionacademicweek.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessionacademicweek.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN sessionacademicweek.weekidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessionacademicweek.weekidentifier IS 'The school label for the week.';


--
-- Name: sessiongradingperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sessiongradingperiod (
    gradingperioddescriptorid integer NOT NULL,
    periodsequence integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sessiongradingperiod OWNER TO postgres;

--
-- Name: TABLE sessiongradingperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sessiongradingperiod IS 'Grading periods associated with the session.';


--
-- Name: COLUMN sessiongradingperiod.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN sessiongradingperiod.periodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.periodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN sessiongradingperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN sessiongradingperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN sessiongradingperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sessiongradingperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: sexdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sexdescriptor (
    sexdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sexdescriptor OWNER TO postgres;

--
-- Name: TABLE sexdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sexdescriptor IS 'A person''s gender.';


--
-- Name: COLUMN sexdescriptor.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sexdescriptor.sexdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: sourcedimension; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcedimension (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    codename character varying(100),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.sourcedimension OWNER TO postgres;

--
-- Name: TABLE sourcedimension; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcedimension IS 'The NCES source dimension. This dimension is used to segregate costs by school and operational unit such as physical location, department, or other method.';


--
-- Name: COLUMN sourcedimension.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.code IS 'The code representation of the account source dimension.';


--
-- Name: COLUMN sourcedimension.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.fiscalyear IS 'The fiscal year for which the account source dimension is valid.';


--
-- Name: COLUMN sourcedimension.codename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimension.codename IS 'A description of the account source dimension.';


--
-- Name: sourcedimensionreportingtag; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcedimensionreportingtag (
    code character varying(16) NOT NULL,
    fiscalyear integer NOT NULL,
    reportingtagdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.sourcedimensionreportingtag OWNER TO postgres;

--
-- Name: TABLE sourcedimensionreportingtag; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcedimensionreportingtag IS 'Optional tag for accountability reporting.';


--
-- Name: COLUMN sourcedimensionreportingtag.code; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.code IS 'The code representation of the account source dimension.';


--
-- Name: COLUMN sourcedimensionreportingtag.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.fiscalyear IS 'The fiscal year for which the account source dimension is valid.';


--
-- Name: COLUMN sourcedimensionreportingtag.reportingtagdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcedimensionreportingtag.reportingtagdescriptorid IS 'Optional tag for accountability reporting.';


--
-- Name: sourcesystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.sourcesystemdescriptor (
    sourcesystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.sourcesystemdescriptor OWNER TO postgres;

--
-- Name: TABLE sourcesystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.sourcesystemdescriptor IS 'This descriptor defines the originating record source system.';


--
-- Name: COLUMN sourcesystemdescriptor.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.sourcesystemdescriptor.sourcesystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationprogramservicedescriptor (
    specialeducationprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a special education program.';


--
-- Name: COLUMN specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationprogramservicedescriptor.specialeducationprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: specialeducationsettingdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.specialeducationsettingdescriptor (
    specialeducationsettingdescriptorid integer NOT NULL
);


ALTER TABLE edfi.specialeducationsettingdescriptor OWNER TO postgres;

--
-- Name: TABLE specialeducationsettingdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.specialeducationsettingdescriptor IS 'This descriptor defines the major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: COLUMN specialeducationsettingdescriptor.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.specialeducationsettingdescriptor.specialeducationsettingdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staff; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staff (
    staffusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    sexdescriptorid integer,
    birthdate date,
    hispaniclatinoethnicity boolean,
    oldethnicitydescriptorid integer,
    citizenshipstatusdescriptorid integer,
    highestcompletedlevelofeducationdescriptorid integer,
    yearsofpriorprofessionalexperience numeric(5,2),
    yearsofpriorteachingexperience numeric(5,2),
    loginid character varying(60),
    highlyqualifiedteacher boolean,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    staffuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staff OWNER TO postgres;

--
-- Name: TABLE staff; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staff IS 'This entity represents an individual who performs specified activities for any public or private education institution or agency that provides instructional and/or support services to students or staff at the early childhood level through high school completion.';


--
-- Name: COLUMN staff.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staff.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN staff.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staff.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staff.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staff.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN staff.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN staff.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sexdescriptorid IS 'A person''s gender.';


--
-- Name: COLUMN staff.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN staff.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN staff.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.oldethnicitydescriptorid IS 'Previous definition of ethnicity combining Hispanic/Latino and race:
        1 - American Indian or Alaskan Native
        2 - Asian or Pacific Islander
        3 - Black, not of Hispanic origin
        4 - Hispanic
        5 - White, not of Hispanic origin.';


--
-- Name: COLUMN staff.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN staff.highestcompletedlevelofeducationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highestcompletedlevelofeducationdescriptorid IS 'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).';


--
-- Name: COLUMN staff.yearsofpriorprofessionalexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorprofessionalexperience IS 'The total number of years that an individual has previously held a similar professional position in one or more education institutions prior to the current school year.';


--
-- Name: COLUMN staff.yearsofpriorteachingexperience; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.yearsofpriorteachingexperience IS 'The total number of years that an individual has previously held a teaching position in one or more education institutions prior to the current school year.';


--
-- Name: COLUMN staff.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN staff.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.';


--
-- Name: COLUMN staff.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN staff.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN staff.staffuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staff.staffuniqueid IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staff_staffusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.staff_staffusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.staff_staffusi_seq OWNER TO postgres;

--
-- Name: staff_staffusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.staff_staffusi_seq OWNED BY edfi.staff.staffusi;


--
-- Name: staffabsenceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffabsenceevent (
    absenceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    staffusi integer NOT NULL,
    absenceeventreason character varying(40),
    hoursabsent numeric(18,2),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: TABLE staffabsenceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffabsenceevent IS 'This event entity represents the recording of the dates of staff absence.';


--
-- Name: COLUMN staffabsenceevent.absenceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventcategorydescriptorid IS 'The code describing the type of absence.';


--
-- Name: COLUMN staffabsenceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.eventdate IS 'Date for this leave event.';


--
-- Name: COLUMN staffabsenceevent.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffabsenceevent.absenceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.absenceeventreason IS 'Expanded reason for the staff absence.';


--
-- Name: COLUMN staffabsenceevent.hoursabsent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffabsenceevent.hoursabsent IS 'The hours the staff was absent, if not the entire working day.';


--
-- Name: staffaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    staffusi integer NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddress OWNER TO postgres;

--
-- Name: TABLE staffaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN staffaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN staffaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: staffaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    postalcode character varying(17) NOT NULL,
    staffusi integer NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffancestryethnicorigin (
    ancestryethnicorigindescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE staffancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN staffancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN staffancestryethnicorigin.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffancestryethnicorigin.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffclassificationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffclassificationdescriptor (
    staffclassificationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffclassificationdescriptor OWNER TO postgres;

--
-- Name: TABLE staffclassificationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffclassificationdescriptor IS 'This descriptor defines an individual''s title of employment, official status or rank.';


--
-- Name: COLUMN staffclassificationdescriptor.staffclassificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffclassificationdescriptor.staffclassificationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: TABLE staffcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcohortassociation IS 'This association indicates the staff associated with a cohort of students.';


--
-- Name: COLUMN staffcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.begindate IS 'Start date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN staffcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffcohortassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.enddate IS 'End date for the association of staff to this cohort.';


--
-- Name: COLUMN staffcohortassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcohortassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the cohort per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffcredential; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffcredential (
    credentialidentifier character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    stateofissuestateabbreviationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffcredential OWNER TO postgres;

--
-- Name: TABLE staffcredential; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffcredential IS 'The legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN staffcredential.credentialidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.credentialidentifier IS 'Identifier or serial number assigned to the credential.';


--
-- Name: COLUMN staffcredential.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffcredential.stateofissuestateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffcredential.stateofissuestateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.';


--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociation IS 'This association indicates those staff who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be OWNER TO postgres;

--
-- Name: TABLE staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociation (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    contacttypedescriptorid integer,
    electronicmailaddress character varying(128) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociation IS 'This association provides the contact information of the staff associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.contacttypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.contacttypedescriptorid IS 'Indicates the type for the contact information.';


--
-- Name: COLUMN staffeducationorganizationcontactassociation.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociation.electronicmailaddress IS 'The email for the contact associated with the education organization.';


--
-- Name: staffeducationorganizationcontactassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddress (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    city character varying(30) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    addresstypedescriptorid integer NOT NULL,
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddress OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddress IS 'The optional address for the contact associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationaddressperiod (
    begindate date NOT NULL,
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffeducationorganizationcontactassociationtelephone (
    contacttitle character varying(75) NOT NULL,
    educationorganizationid integer NOT NULL,
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffeducationorganizationcontactassociationtelephone OWNER TO postgres;

--
-- Name: TABLE staffeducationorganizationcontactassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffeducationorganizationcontactassociationtelephone IS 'The optional telephone for the contact associated with the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.contacttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.contacttitle IS 'The title of the contact in the context of the education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN staffeducationorganizationcontactassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffeducationorganizationcontactassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: staffelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffelectronicmail (
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffelectronicmail OWNER TO postgres;

--
-- Name: TABLE staffelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN staffelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN staffelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN staffelectronicmail.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN staffelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: staffidentificationcode; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationcode (
    staffidentificationsystemdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    assigningorganizationidentificationcode character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationcode OWNER TO postgres;

--
-- Name: TABLE staffidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN staffidentificationcode.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a staff member.';


--
-- Name: COLUMN staffidentificationcode.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationcode.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.identificationcode IS 'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN staffidentificationcode.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationcode.assigningorganizationidentificationcode IS 'The organization code or name assigning the staff Identification Code.';


--
-- Name: staffidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN staffidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN staffidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: staffidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffidentificationsystemdescriptor (
    staffidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE staffidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the staff.';


--
-- Name: COLUMN staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffidentificationsystemdescriptor.staffidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffinternationaladdress OWNER TO postgres;

--
-- Name: TABLE staffinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN staffinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN staffinternationaladdress.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN staffinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN staffinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN staffinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN staffinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN staffinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN staffinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: stafflanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguage (
    languagedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguage OWNER TO postgres;

--
-- Name: TABLE stafflanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-2 language codes.';


--
-- Name: COLUMN stafflanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN stafflanguage.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguage.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: stafflanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafflanguageuse (
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafflanguageuse OWNER TO postgres;

--
-- Name: TABLE stafflanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafflanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN stafflanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN stafflanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN stafflanguageuse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafflanguageuse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffleave; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleave (
    begindate date NOT NULL,
    staffleaveeventcategorydescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    reason character varying(40),
    substituteassigned boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffleave OWNER TO postgres;

--
-- Name: TABLE staffleave; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleave IS 'This entity represents the recording of the dates of staff leave (e.g., sick leave, personal time, vacation).';


--
-- Name: COLUMN staffleave.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.begindate IS 'The begin date of the staff leave.';


--
-- Name: COLUMN staffleave.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffleaveeventcategorydescriptorid IS 'The code describing the type of leave taken.';


--
-- Name: COLUMN staffleave.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffleave.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.enddate IS 'The end date of the staff leave.';


--
-- Name: COLUMN staffleave.reason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.reason IS 'Expanded reason for the staff leave.';


--
-- Name: COLUMN staffleave.substituteassigned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleave.substituteassigned IS 'Indicator of whether a substitute was assigned during the period of staff leave.';


--
-- Name: staffleaveeventcategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffleaveeventcategorydescriptor (
    staffleaveeventcategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.staffleaveeventcategorydescriptor OWNER TO postgres;

--
-- Name: TABLE staffleaveeventcategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffleaveeventcategorydescriptor IS 'A code describing the type of the leave event.';


--
-- Name: COLUMN staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffleaveeventcategorydescriptor.staffleaveeventcategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: staffothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffothername (
    othernametypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffothername OWNER TO postgres;

--
-- Name: TABLE staffothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN staffothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN staffothername.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN staffothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN staffothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN staffothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN staffothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: staffpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffpersonalidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE staffpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN staffpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN staffpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN staffpersonalidentificationdocument.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN staffpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN staffpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: staffprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffprogramassociation (
    begindate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    enddate date,
    studentrecordaccess boolean,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: TABLE staffprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffprogramassociation IS 'This association indicates the staff associated with a program.';


--
-- Name: COLUMN staffprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.begindate IS 'Start date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN staffprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN staffprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN staffprogramassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffprogramassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.enddate IS 'End date for the association of staff to this program.';


--
-- Name: COLUMN staffprogramassociation.studentrecordaccess; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffprogramassociation.studentrecordaccess IS 'Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.';


--
-- Name: staffrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrace (
    racedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrace OWNER TO postgres;

--
-- Name: TABLE staffrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN staffrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN staffrace.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrace.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffrecognition (
    recognitiontypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    recognitiondescription character varying(80),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffrecognition OWNER TO postgres;

--
-- Name: TABLE staffrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffrecognition IS 'Recognitions given to the staff for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN staffrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN staffrecognition.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN staffrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN staffrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN staffrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN staffrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN staffrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN staffrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN staffrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN staffrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN staffrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitiondescription IS 'A description of the type of recognition earned by or awarded to the individual.';


--
-- Name: COLUMN staffrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN staffrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffrecognition.recognitionawardexpiresdate IS 'Date on which the recognition expires.';


--
-- Name: staffschoolassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociation (
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    calendarcode character varying(60),
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: TABLE staffschoolassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociation IS 'This association indicates the school(s) to which a staff member provides instructional services.';


--
-- Name: COLUMN staffschoolassociation.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffschoolassociation.calendarcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.calendarcode IS 'The identifier for the calendar.';


--
-- Name: COLUMN staffschoolassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociation.schoolyear IS 'Identifier for a school year.';


--
-- Name: staffschoolassociationacademicsubject; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationacademicsubject (
    academicsubjectdescriptorid integer NOT NULL,
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationacademicsubject OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationacademicsubject; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationacademicsubject IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.academicsubjectdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.academicsubjectdescriptorid IS 'The academic subjects the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationacademicsubject.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationacademicsubject.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffschoolassociationgradelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffschoolassociationgradelevel (
    gradeleveldescriptorid integer NOT NULL,
    programassignmentdescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    staffusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffschoolassociationgradelevel OWNER TO postgres;

--
-- Name: TABLE staffschoolassociationgradelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffschoolassociationgradelevel IS 'The grade levels the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationgradelevel.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.gradeleveldescriptorid IS 'The grade levels the individual is eligible to teach.';


--
-- Name: COLUMN staffschoolassociationgradelevel.programassignmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.programassignmentdescriptorid IS 'The name of the program for which the individual is assigned.';


--
-- Name: COLUMN staffschoolassociationgradelevel.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffschoolassociationgradelevel.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffschoolassociationgradelevel.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: staffsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffsectionassociation (
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    staffusi integer NOT NULL,
    classroompositiondescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    highlyqualifiedteacher boolean,
    teacherstudentdatalinkexclusion boolean,
    percentagecontribution numeric(5,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: TABLE staffsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffsectionassociation IS 'This association indicates the class sections to which a staff member is assigned.';


--
-- Name: COLUMN staffsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN staffsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN staffsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN staffsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN staffsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN staffsectionassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffsectionassociation.classroompositiondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.classroompositiondescriptorid IS 'The type of position the staff member holds in the specific class/section.';


--
-- Name: COLUMN staffsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.begindate IS 'Month, day, and year of a teacher''s assignment to the section. If blank, defaults to the first day of the first grading period for the section.';


--
-- Name: COLUMN staffsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.enddate IS 'Month, day, and year of the last day of a staff member''s assignment to the section.';


--
-- Name: COLUMN staffsectionassociation.highlyqualifiedteacher; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.highlyqualifiedteacher IS 'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for this section being taught.';


--
-- Name: COLUMN staffsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the entire section is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: COLUMN staffsectionassociation.percentagecontribution; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffsectionassociation.percentagecontribution IS 'Indicates the percentage of the total scheduled course time, academic standards, and/or learning activities delivered in this section by this staff member. A teacher of record designation may be based solely or partially on this contribution percentage.';


--
-- Name: stafftelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftelephone (
    staffusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftelephone OWNER TO postgres;

--
-- Name: TABLE stafftelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN stafftelephone.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN stafftelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN stafftelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN stafftelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN stafftelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: stafftribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stafftribalaffiliation (
    staffusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stafftribalaffiliation OWNER TO postgres;

--
-- Name: TABLE stafftribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stafftribalaffiliation IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: COLUMN stafftribalaffiliation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN stafftribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stafftribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the staff member is affiliated.';


--
-- Name: staffvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.staffvisa (
    staffusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.staffvisa OWNER TO postgres;

--
-- Name: TABLE staffvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.staffvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN staffvisa.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN staffvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.staffvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: stateabbreviationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateabbreviationdescriptor (
    stateabbreviationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.stateabbreviationdescriptor OWNER TO postgres;

--
-- Name: TABLE stateabbreviationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateabbreviationdescriptor IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN stateabbreviationdescriptor.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateabbreviationdescriptor.stateabbreviationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: stateeducationagency; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagency (
    stateeducationagencyid integer NOT NULL
);


ALTER TABLE edfi.stateeducationagency OWNER TO postgres;

--
-- Name: TABLE stateeducationagency; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagency IS 'This entity represents the agency of the state charged with the primary responsibility for coordinating and supervising public instruction, including the setting of standards for elementary and secondary instructional programs.';


--
-- Name: COLUMN stateeducationagency.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagency.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: stateeducationagencyaccountability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyaccountability (
    schoolyear smallint NOT NULL,
    stateeducationagencyid integer NOT NULL,
    ctegraduationrateinclusion boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyaccountability OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyaccountability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyaccountability IS 'This entity maintains information about federal reporting and accountability for state education agencies.';


--
-- Name: COLUMN stateeducationagencyaccountability.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.schoolyear IS 'The school year for which the accountability is reported.';


--
-- Name: COLUMN stateeducationagencyaccountability.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyaccountability.ctegraduationrateinclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyaccountability.ctegraduationrateinclusion IS 'An indication of whether CTE concentrators are included in the state''s computation of its graduation rate.';


--
-- Name: stateeducationagencyfederalfunds; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.stateeducationagencyfederalfunds (
    fiscalyear integer NOT NULL,
    stateeducationagencyid integer NOT NULL,
    federalprogramsfundingallocation money,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.stateeducationagencyfederalfunds OWNER TO postgres;

--
-- Name: TABLE stateeducationagencyfederalfunds; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.stateeducationagencyfederalfunds IS 'Contains the information about the reception and use of federal funds for reporting purposes.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.fiscalyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.fiscalyear IS 'The fiscal year for which the federal funds are received.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.stateeducationagencyid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.stateeducationagencyid IS 'The identifier assigned to a state education agency.';


--
-- Name: COLUMN stateeducationagencyfederalfunds.federalprogramsfundingallocation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.stateeducationagencyfederalfunds.federalprogramsfundingallocation IS 'The amount of federal dollars distributed to Local Education Agencies (LEAs), retained by the State Education Agency (SEA) for program administration or other approved state-level activities (including unallocated, transferred to another state agency, or distributed to entities other than LEAs).';


--
-- Name: student; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.student (
    studentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    maidenname character varying(75),
    birthdate date NOT NULL,
    birthcity character varying(30),
    birthstateabbreviationdescriptorid integer,
    birthinternationalprovince character varying(150),
    birthcountrydescriptorid integer,
    dateenteredus date,
    multiplebirthstatus boolean,
    birthsexdescriptorid integer,
    citizenshipstatusdescriptorid integer,
    personid character varying(32),
    sourcesystemdescriptorid integer,
    studentuniqueid character varying(32) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.student OWNER TO postgres;

--
-- Name: TABLE student; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.student IS 'This entity represents an individual for whom instruction, services, and/or care are provided in an early childhood, elementary, or secondary educational program under the jurisdiction of a school, education agency or other institution or program. A student is a person who has been enrolled in a school or other educational institution.';


--
-- Name: COLUMN student.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN student.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN student.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN student.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN student.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN student.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: COLUMN student.maidenname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.maidenname IS 'The individual''s maiden name.';


--
-- Name: COLUMN student.birthdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthdate IS 'The month, day, and year on which an individual was born.';


--
-- Name: COLUMN student.birthcity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcity IS 'The city the student was born in.';


--
-- Name: COLUMN student.birthstateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthstateabbreviationdescriptorid IS 'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which an individual was born.';


--
-- Name: COLUMN student.birthinternationalprovince; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthinternationalprovince IS 'For students born outside of the U.S., the Province or jurisdiction in which an individual is born.';


--
-- Name: COLUMN student.birthcountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthcountrydescriptorid IS 'The country in which an individual is born. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN student.dateenteredus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.dateenteredus IS 'For students born outside of the U.S., the date the student entered the U.S.';


--
-- Name: COLUMN student.multiplebirthstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.multiplebirthstatus IS 'Indicator of whether the student was born with other siblings (i.e., twins, triplets, etc.)';


--
-- Name: COLUMN student.birthsexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.birthsexdescriptorid IS 'A person''s gender at birth.';


--
-- Name: COLUMN student.citizenshipstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.citizenshipstatusdescriptorid IS 'An indicator of whether or not the person is a U.S. citizen.';


--
-- Name: COLUMN student.personid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.personid IS 'A unique alphanumeric code assigned to a person.';


--
-- Name: COLUMN student.sourcesystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.sourcesystemdescriptorid IS 'This descriptor defines the originating record source system for the person.';


--
-- Name: COLUMN student.studentuniqueid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.student.studentuniqueid IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: student_studentusi_seq; Type: SEQUENCE; Schema: edfi; Owner: postgres
--

CREATE SEQUENCE edfi.student_studentusi_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE edfi.student_studentusi_seq OWNER TO postgres;

--
-- Name: student_studentusi_seq; Type: SEQUENCE OWNED BY; Schema: edfi; Owner: postgres
--

ALTER SEQUENCE edfi.student_studentusi_seq OWNED BY edfi.student.studentusi;


--
-- Name: studentacademicrecord; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecord (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    cumulativeearnedcredits numeric(9,3),
    cumulativeearnedcredittypedescriptorid integer,
    cumulativeearnedcreditconversion numeric(9,2),
    cumulativeattemptedcredits numeric(9,3),
    cumulativeattemptedcredittypedescriptorid integer,
    cumulativeattemptedcreditconversion numeric(9,2),
    cumulativegradepointsearned numeric(18,4),
    cumulativegradepointaverage numeric(18,4),
    gradevaluequalifier character varying(80),
    projectedgraduationdate date,
    sessionearnedcredits numeric(9,3),
    sessionearnedcredittypedescriptorid integer,
    sessionearnedcreditconversion numeric(9,2),
    sessionattemptedcredits numeric(9,3),
    sessionattemptedcredittypedescriptorid integer,
    sessionattemptedcreditconversion numeric(9,2),
    sessiongradepointsearned numeric(18,4),
    sessiongradepointaverage numeric(18,4),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: TABLE studentacademicrecord; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecord IS 'This educational entity represents the cumulative record of academic achievement for a student.';


--
-- Name: COLUMN studentacademicrecord.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecord.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecord.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecord.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.cumulativeattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativeattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.cumulativegradepointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativegradepointsearned IS 'The cumulative number of grade points an individual earns by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.';


--
-- Name: COLUMN studentacademicrecord.cumulativegradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.cumulativegradepointaverage IS 'A measure of average performance in all courses taken by an individual during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.';


--
-- Name: COLUMN studentacademicrecord.gradevaluequalifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.gradevaluequalifier IS 'The scale of equivalents, if applicable, for grades awarded as indicators of performance in schoolwork. For example, numerical equivalents for letter grades used in determining a student''s grade point average (A=4, B=3, C=2, D=1 in a four-point system) or letter equivalents for percentage grades (90-100%=A, 80-90%=B, etc.).';


--
-- Name: COLUMN studentacademicrecord.projectedgraduationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.projectedgraduationdate IS 'The month and year the student is projected to graduate.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionearnedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionearnedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredits; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredits IS 'The value of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcredittypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcredittypedescriptorid IS 'The type of credits or units of value awarded for the completion of a course.';


--
-- Name: COLUMN studentacademicrecord.sessionattemptedcreditconversion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessionattemptedcreditconversion IS 'Conversion factor that when multiplied by the number of credits is equivalent to Carnegie units.';


--
-- Name: COLUMN studentacademicrecord.sessiongradepointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessiongradepointsearned IS 'The number of grade points an individual earned for this session.';


--
-- Name: COLUMN studentacademicrecord.sessiongradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecord.sessiongradepointaverage IS 'The grade point average for an individual computed as the grade points earned during the session divided by the number of credits attempted.';


--
-- Name: studentacademicrecordacademichonor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordacademichonor (
    academichonorcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    honordescription character varying(80) NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    honorawarddate date,
    honorawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordacademichonor OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordacademichonor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordacademichonor IS 'Academic distinctions earned by or awarded to the student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.academichonorcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.academichonorcategorydescriptorid IS 'A designation of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honordescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honordescription IS 'A description of the type of academic distinctions earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordacademichonor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordacademichonor.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawarddate IS 'The date the honor was awarded.';


--
-- Name: COLUMN studentacademicrecordacademichonor.honorawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordacademichonor.honorawardexpiresdate IS 'Date on which the honor expires.';


--
-- Name: studentacademicrecordclassranking; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordclassranking (
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    classrank integer NOT NULL,
    totalnumberinclass integer NOT NULL,
    percentageranking integer,
    classrankingdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordclassranking OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordclassranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordclassranking IS 'The academic rank information of a student in relation to his or her graduating class.';


--
-- Name: COLUMN studentacademicrecordclassranking.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordclassranking.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordclassranking.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordclassranking.classrank; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrank IS 'The academic rank of a student in relation to his or her graduating class (e.g., 1st, 2nd, 3rd).';


--
-- Name: COLUMN studentacademicrecordclassranking.totalnumberinclass; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.totalnumberinclass IS 'The total number of students in the student''s graduating class.';


--
-- Name: COLUMN studentacademicrecordclassranking.percentageranking; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.percentageranking IS 'The academic percentage rank of a student in relation to his or her graduating class (e.g., 95%, 80%, 50%).';


--
-- Name: COLUMN studentacademicrecordclassranking.classrankingdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordclassranking.classrankingdate IS 'Date class ranking was determined.';


--
-- Name: studentacademicrecorddiploma; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecorddiploma (
    diplomaawarddate date NOT NULL,
    diplomatypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    diplomaleveldescriptorid integer,
    ctecompleter boolean,
    diplomadescription character varying(80),
    diplomaawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecorddiploma OWNER TO postgres;

--
-- Name: TABLE studentacademicrecorddiploma; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecorddiploma IS 'Diploma(s) earned by the student.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawarddate IS 'The month, day, and year on which the student met  graduation requirements and was awarded a diploma.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomatypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomatypedescriptorid IS 'The type of diploma/credential that is awarded to a student in recognition of his/her completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecorddiploma.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecorddiploma.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecorddiploma.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecorddiploma.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecorddiploma.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaleveldescriptorid IS 'The level of diploma/credential that is awarded to a student in recognition of completion of the curricular requirements.';


--
-- Name: COLUMN studentacademicrecorddiploma.ctecompleter; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.ctecompleter IS 'Indicated a student who reached a state-defined threshold of vocational education and who attained a high school diploma or its recognized state equivalent or GED.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomadescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomadescription IS 'The description of the diploma given to the student for accomplishments.';


--
-- Name: COLUMN studentacademicrecorddiploma.diplomaawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecorddiploma.diplomaawardexpiresdate IS 'Date on which the diploma expires.';


--
-- Name: studentacademicrecordgradepointaverage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordgradepointaverage (
    educationorganizationid integer NOT NULL,
    gradepointaveragetypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    iscumulative boolean,
    gradepointaveragevalue numeric(18,4) NOT NULL,
    maxgradepointaveragevalue numeric(18,4),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordgradepointaverage OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordgradepointaverage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordgradepointaverage IS 'The grade point average for an individual computed as the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragetypedescriptorid IS 'The system used for calculating the grade point average for an individual.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.iscumulative; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.iscumulative IS 'Indicator of whether or not the Grade Point Average value is cumulative.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.gradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.gradepointaveragevalue IS 'The value of the grade points earned divided by the number of credits attempted.';


--
-- Name: COLUMN studentacademicrecordgradepointaverage.maxgradepointaveragevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordgradepointaverage.maxgradepointaveragevalue IS 'The maximum value for the grade point average.';


--
-- Name: studentacademicrecordrecognition; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordrecognition (
    educationorganizationid integer NOT NULL,
    recognitiontypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    achievementtitle character varying(60),
    achievementcategorydescriptorid integer,
    achievementcategorysystem character varying(60),
    issuername character varying(150),
    issueroriginurl character varying(255),
    criteria character varying(150),
    criteriaurl character varying(255),
    evidencestatement character varying(150),
    imageurl character varying(255),
    recognitiondescription character varying(80),
    recognitionawarddate date,
    recognitionawardexpiresdate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordrecognition OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordrecognition; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordrecognition IS 'Recognitions given to the student for accomplishments in a co-curricular or extracurricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiontypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiontypedescriptorid IS 'The nature of recognition given to the individual for accomplishments in a co-curricular, or extra-curricular activity.';


--
-- Name: COLUMN studentacademicrecordrecognition.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordrecognition.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementtitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementtitle IS 'The title assigned to the achievement.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorydescriptorid IS 'The category of achievement attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.achievementcategorysystem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.achievementcategorysystem IS 'The system that defines the categories by which an achievement is attributed to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issuername IS 'The name of the agent, entity, or institution issuing the element.';


--
-- Name: COLUMN studentacademicrecordrecognition.issueroriginurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.issueroriginurl IS 'The Uniform Resource Locator (URL) from which the award was issued.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteria; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteria IS 'The criteria for competency-based completion of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.criteriaurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.criteriaurl IS 'The Uniform Resource Locator (URL) for the unique address of a web page describing the competency-based completion criteria for the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.evidencestatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.evidencestatement IS 'A statement or reference describing the evidence that the individual met the criteria for attainment of the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.imageurl; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.imageurl IS 'The Uniform Resource Locator (URL) for the unique address of an image representing an award or badge associated with the achievement/award.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitiondescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitiondescription IS 'A description of the type of recognition earned by or awarded to the individual.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawarddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawarddate IS 'The date the recognition was awarded or earned.';


--
-- Name: COLUMN studentacademicrecordrecognition.recognitionawardexpiresdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordrecognition.recognitionawardexpiresdate IS 'Date on which the recognition expires.';


--
-- Name: studentacademicrecordreportcard; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentacademicrecordreportcard (
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentacademicrecordreportcard OWNER TO postgres;

--
-- Name: TABLE studentacademicrecordreportcard; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentacademicrecordreportcard IS 'Report cards for the student.';


--
-- Name: COLUMN studentacademicrecordreportcard.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentacademicrecordreportcard.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentacademicrecordreportcard.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentacademicrecordreportcard.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentacademicrecordreportcard.termdescriptorid IS 'The term for the session during the school year.';


--
-- Name: studentassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessment (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    administrationdate timestamp without time zone,
    administrationenddate timestamp without time zone,
    serialnumber character varying(60),
    administrationlanguagedescriptorid integer,
    administrationenvironmentdescriptorid integer,
    retestindicatordescriptorid integer,
    reasonnottesteddescriptorid integer,
    whenassessedgradeleveldescriptorid integer,
    eventcircumstancedescriptorid integer,
    eventdescription character varying(1024),
    schoolyear smallint,
    platformtypedescriptorid integer,
    assessedminutes integer,
    reportedschoolid integer,
    reportedschoolidentifier character varying(60),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentassessment OWNER TO postgres;

--
-- Name: TABLE studentassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessment IS 'This entity represents the analysis or scoring of a student''s response on an assessment. The analysis results in a value that represents a student''s performance on a set of items on a test.';


--
-- Name: COLUMN studentassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: COLUMN studentassessment.serialnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.serialnumber IS 'The unique number for the assessment form or answer document.';


--
-- Name: COLUMN studentassessment.administrationlanguagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationlanguagedescriptorid IS 'The language in which an assessment is written and/or administered.';


--
-- Name: COLUMN studentassessment.administrationenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.administrationenvironmentdescriptorid IS 'The environment in which the test was administered.';


--
-- Name: COLUMN studentassessment.retestindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.retestindicatordescriptorid IS 'Indicator if the test was a retake.';


--
-- Name: COLUMN studentassessment.reasonnottesteddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reasonnottesteddescriptorid IS 'The primary reason student is not tested.';


--
-- Name: COLUMN studentassessment.whenassessedgradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.whenassessedgradeleveldescriptorid IS 'The grade level of a student when assessed.';


--
-- Name: COLUMN studentassessment.eventcircumstancedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventcircumstancedescriptorid IS 'An unusual event occurred during the administration of the assessment. This could include fire alarm, student became ill, etc.';


--
-- Name: COLUMN studentassessment.eventdescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.eventdescription IS 'Describes special events that occur before during or after the assessment session that may impact use of results.';


--
-- Name: COLUMN studentassessment.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.schoolyear IS 'The school year for which the assessment was administered to a student. Among other uses, handles cases in which a student takes a prior-year exam in a subsequent school year during an exam re-test.';


--
-- Name: COLUMN studentassessment.platformtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.platformtypedescriptorid IS 'The platform with which the assessment was delivered to the student during the assessment session.';


--
-- Name: COLUMN studentassessment.assessedminutes; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.assessedminutes IS 'Reported time student was assessed in minutes.';


--
-- Name: COLUMN studentassessment.reportedschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reportedschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentassessment.reportedschoolidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessment.reportedschoolidentifier IS 'A reported school identifier for the school the enrollment at the time of the assessment used when the assigned SchoolId is not known by the assessment vendor.';


--
-- Name: studentassessmentaccommodation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentaccommodation (
    accommodationdescriptorid integer NOT NULL,
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentaccommodation OWNER TO postgres;

--
-- Name: TABLE studentassessmentaccommodation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentaccommodation IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.';


--
-- Name: COLUMN studentassessmentaccommodation.accommodationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.accommodationdescriptorid IS 'The specific type of special variation used in how an examination is presented, how it is administered, or how the test taker is allowed to respond. This generally refers to changes that do not substantially alter what the examination measures. The proper use of accommodations does not substantially change academic level or performance criteria.';


--
-- Name: COLUMN studentassessmentaccommodation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentaccommodation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentaccommodation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentaccommodation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentassessmenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmenteducationorganizationassociation (
    assessmentidentifier character varying(60) NOT NULL,
    educationorganizationassociationtypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    schoolyear smallint,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentassessmenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studentassessmenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmenteducationorganizationassociation IS 'The association of individual StudentAssessments with EducationOrganizations indicating administration, enrollment, or attribution.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.educationorganizationassociationtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.educationorganizationassociationtypedescriptorid IS 'The type of association being represented.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmenteducationorganizationassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmenteducationorganizationassociation.schoolyear IS 'The school year associated with the association..';


--
-- Name: studentassessmentitem; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentitem (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentresponse character varying(255),
    descriptivefeedback character varying(1024),
    responseindicatordescriptorid integer,
    assessmentitemresultdescriptorid integer NOT NULL,
    rawscoreresult numeric(15,5),
    timeassessed character varying(30),
    itemnumber integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentitem OWNER TO postgres;

--
-- Name: TABLE studentassessmentitem; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentitem IS 'The student''s response to an assessment item and the item-level scores such as correct, incorrect, or met standard.';


--
-- Name: COLUMN studentassessmentitem.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentitem.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.identificationcode IS 'A unique number or alphanumeric code assigned to a space, room, site, building, individual, organization, program, or institution by a school, school system, state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentitem.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentitem.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentitem.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentitem.assessmentresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentresponse IS 'A student''s response to a stimulus on a test.';


--
-- Name: COLUMN studentassessmentitem.descriptivefeedback; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.descriptivefeedback IS 'The formative descriptive feedback that was given to a student in response to the results from a scored/evaluated assessment item.';


--
-- Name: COLUMN studentassessmentitem.responseindicatordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.responseindicatordescriptorid IS 'Indicator of the response.';


--
-- Name: COLUMN studentassessmentitem.assessmentitemresultdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.assessmentitemresultdescriptorid IS 'The analyzed result of a student''s response to an assessment item.';


--
-- Name: COLUMN studentassessmentitem.rawscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.rawscoreresult IS 'A meaningful raw score of the performance of a student on an assessment item.';


--
-- Name: COLUMN studentassessmentitem.timeassessed; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.timeassessed IS 'The overall time a student actually spent during the assessment item.';


--
-- Name: COLUMN studentassessmentitem.itemnumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentitem.itemnumber IS 'The test question number for this student''s test item.';


--
-- Name: studentassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperformancelevel IS 'The performance level(s) achieved for the student assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: studentassessmentperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentperiod (
    assessmentidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessmentperioddescriptorid integer NOT NULL,
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentperiod OWNER TO postgres;

--
-- Name: TABLE studentassessmentperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentperiod IS 'The period or window in which an assessment is supposed to be administered.';


--
-- Name: COLUMN studentassessmentperiod.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentperiod.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentperiod.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentperiod.assessmentperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.assessmentperioddescriptorid IS 'The period of time in which an assessment is supposed to be administered (e.g., Beginning of Year, Middle of Year, End of Year).';


--
-- Name: COLUMN studentassessmentperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.begindate IS 'The first date the assessment is to be administered.';


--
-- Name: COLUMN studentassessmentperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentperiod.enddate IS 'The last date the assessment is to be administered.';


--
-- Name: studentassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentassessmentstudentobjectiveassessment; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessment (
    assessmentidentifier character varying(60) NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    assessedminutes integer,
    administrationdate timestamp without time zone,
    administrationenddate timestamp without time zone,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessment OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessment IS 'The student''s score and/or performance levels earned for an objective assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.assessedminutes; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.assessedminutes IS 'Reported time student was assessed in minutes.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.administrationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.administrationdate IS 'The date and time an assessment was completed by the student. The use of ISO-8601 formats with a timezone designator (UTC or time offset) is recommended in order to prevent ambiguity due to time zones.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessment.administrationenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessment.administrationenddate IS 'The date and time an assessment administration ended.';


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    performanceleveldescriptorid integer NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    performancelevelindicatorname character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentperformancelevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentperformancelevel IS 'The performance level(s) achieved for the objective assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.assessmentreportingmethoddescriptorid IS 'The method that the instructor of the class uses to report the performance and achievement. It may be a qualitative method such as individualized teacher comments or a quantitative method such as a letter or numerical grade. In some cases, more than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performanceleveldescriptorid IS 'A specification of which performance level value describes the student proficiency.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelindicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentperformancelevel.performancelevelindicatorname IS 'The name of the indicator being measured for a collection of performance level values.';


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult (
    assessmentidentifier character varying(60) NOT NULL,
    assessmentreportingmethoddescriptorid integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentassessmentidentifier character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    result character varying(35) NOT NULL,
    resultdatatypetypedescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult OWNER TO postgres;

--
-- Name: TABLE studentassessmentstudentobjectiveassessmentscoreresult; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentassessmentstudentobjectiveassessmentscoreresult IS 'A meaningful score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.assessmentreportingmethoddescriptorid IS 'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.identificationcode IS 'A unique number or alphanumeric code assigned to an objective assessment by a school, school system, a state, or other agency or entity.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.namespace IS 'Namespace for the assessment.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentassessmentidentifier IS 'A unique number or alphanumeric code assigned to an assessment administered to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.result; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.result IS 'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: COLUMN studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentassessmentstudentobjectiveassessmentscoreresult.resultdatatypetypedescriptorid IS 'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.';


--
-- Name: studentcharacteristicdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcharacteristicdescriptor (
    studentcharacteristicdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentcharacteristicdescriptor OWNER TO postgres;

--
-- Name: TABLE studentcharacteristicdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcharacteristicdescriptor IS 'This descriptor captures important characteristics of the student''s environment or situation. Generally used for non-program-based student characteristics.';


--
-- Name: COLUMN studentcharacteristicdescriptor.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcharacteristicdescriptor.studentcharacteristicdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentcohortassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociation (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: TABLE studentcohortassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociation IS 'This association represents the cohort(s) for which a student is designated.';


--
-- Name: COLUMN studentcohortassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.begindate IS 'The month, day, and year on which the student was first identified as part of the cohort.';


--
-- Name: COLUMN studentcohortassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentcohortassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcohortassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociation.enddate IS 'The month, day, and year on which the student was removed as part of the cohort.';


--
-- Name: studentcohortassociationsection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcohortassociationsection (
    begindate date NOT NULL,
    cohortidentifier character varying(20) NOT NULL,
    educationorganizationid integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcohortassociationsection OWNER TO postgres;

--
-- Name: TABLE studentcohortassociationsection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcohortassociationsection IS 'The cohort representing the subdivision of students within one or more sections. For example, a group of students may be given additional instruction and tracked as a cohort.';


--
-- Name: COLUMN studentcohortassociationsection.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.begindate IS 'The month, day, and year on which the student was first identified as part of the cohort.';


--
-- Name: COLUMN studentcohortassociationsection.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentcohortassociationsection.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcohortassociationsection.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcohortassociationsection.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcohortassociationsection.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcohortassociationsection.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcohortassociationsection.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentcohortassociationsection.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcohortassociationsection.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjective.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjective.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcompetencyobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced competency objective.';


--
-- Name: COLUMN studentcompetencyobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivegeneralstudentprogramassociation IS 'Relates the student and program associated with the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcompetencyobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcompetencyobjectivestudentsectionassociation (
    begindate date NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    objective character varying(60) NOT NULL,
    objectiveeducationorganizationid integer NOT NULL,
    objectivegradeleveldescriptorid integer NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcompetencyobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentcompetencyobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcompetencyobjectivestudentsectionassociation IS 'Relates the student and section associated with the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objective IS 'The designated title of the competency objective.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectiveeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.objectivegradeleveldescriptorid IS 'The grade level for which the competency objective is targeted.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentcompetencyobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcompetencyobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentcteprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    nontraditionalgenderstatus boolean,
    privatecteprogram boolean,
    technicalskillsassessmentdescriptorid integer
);


ALTER TABLE edfi.studentcteprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociation IS 'This association represents the career and technical education (CTE) program that a student participates in. The association is an extension of the StudentProgramAssociation particular for CTE programs.';


--
-- Name: COLUMN studentcteprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociation.nontraditionalgenderstatus; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.nontraditionalgenderstatus IS 'Indicator that student is from a gender group that comprises less than 25% of the individuals employed in an occupation or field of work.';


--
-- Name: COLUMN studentcteprogramassociation.privatecteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.privatecteprogram IS 'Indicator that student participated in career and technical education at private agencies or institutions that are reported by the state for purposes of the Elementary and Secondary Education Act (ESEA). Students in private institutions which do not receive Perkins funding are reported only in the state file.';


--
-- Name: COLUMN studentcteprogramassociation.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociation.technicalskillsassessmentdescriptorid IS 'Results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: studentcteprogramassociationcteprogram; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogram (
    begindate date NOT NULL,
    careerpathwaydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    cipcode character varying(120),
    primarycteprogramindicator boolean,
    cteprogramcompletionindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogram OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogram; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogram IS 'The career cluster representing the career path of the Vocational/Career Tech concentrator.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.careerpathwaydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.careerpathwaydescriptorid IS 'A sequence of courses within an area of interest that is a student''s educational road map to a chosen career.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.cipcode IS 'Number and description of the CIP code associated with the student''s CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.primarycteprogramindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.primarycteprogramindicator IS 'A boolean indicator of whether this CTE program is the student''s primary CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogram.cteprogramcompletionindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogram.cteprogramcompletionindicator IS 'A boolean indicator of whether the student has completed the CTE program.';


--
-- Name: studentcteprogramassociationcteprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationcteprogramservice (
    begindate date NOT NULL,
    cteprogramservicedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    cipcode character varying(120),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationcteprogramservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationcteprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationcteprogramservice IS 'Indicates the service(s) being provided to the student by the CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cteprogramservicedescriptorid IS 'Indicates the service being provided to the student by the CTE program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationcteprogramservice.cipcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationcteprogramservice.cipcode IS 'Number and description of the CIP code associated with the student''s CTE program.';


--
-- Name: studentcteprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentcteprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentcteprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentcteprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentcteprogramassociationservice IS 'Indicates the service(s) being provided to the student by the program.';


--
-- Name: COLUMN studentcteprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentcteprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentcteprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentcteprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentcteprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.servicedescriptorid IS 'Indicates the service being provided to the student by the program.';


--
-- Name: COLUMN studentcteprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentcteprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentcteprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentcteprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentcteprogramassociationservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentdisciplineincidentassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    studentparticipationcodedescriptorid integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentassociation IS 'This association indicates those students who were victims, perpetrators, witnesses, and reporters for a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentassociation.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociation.studentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: studentdisciplineincidentassociationbehavior; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentassociationbehavior (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentassociationbehavior OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentassociationbehavior; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentassociationbehavior IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.behaviordescriptorid IS 'Describes behavior by category and provides a detailed description.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentassociationbehavior.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentassociationbehavior.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociation (
    behaviordescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    behaviordetaileddescription character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociation IS 'This association describes the behavior of students involved in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociation.behaviordetaileddescription; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociation.behaviordetaileddescription IS 'Specifies a more granular level of detail of a behavior involved in the incident.';


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (
    behaviordescriptorid integer NOT NULL,
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.behaviordescriptorid IS 'Describes behavior by category.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociation (
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociation IS 'This association indicates those students who were involved and not perpetrators for a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (
    disciplineincidentparticipationcodedescriptorid integer NOT NULL,
    incidentidentifier character varying(20) NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a OWNER TO postgres;

--
-- Name: TABLE studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.disciplineincidentparticipationcodedescriptorid IS 'The role or type of participation of a student in a discipline incident.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.incidentidentifier IS 'A locally assigned unique identifier (within the school or school district) to identify each specific DisciplineIncident or occurrence. The same identifier should be used to document the entire discipline incident even if it included multiple offenses and multiple offenders.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    sexdescriptorid integer NOT NULL,
    profilethumbnail character varying(255),
    hispaniclatinoethnicity boolean,
    oldethnicitydescriptorid integer,
    limitedenglishproficiencydescriptorid integer,
    loginid character varying(60),
    primarylearningdeviceawayfromschooldescriptorid integer,
    primarylearningdeviceaccessdescriptorid integer,
    primarylearningdeviceproviderdescriptorid integer,
    internetaccessinresidence boolean,
    barriertointernetaccessinresidencedescriptorid integer,
    internetaccesstypeinresidencedescriptorid integer,
    internetperformanceinresidencedescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociation IS 'This association represents student information as reported in the context of the student''s relationship to the education organization. Enrollment relationship semantics are covered by StudentSchoolAssociation.';


--
-- Name: COLUMN studenteducationorganizationassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociation.sexdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.sexdescriptorid IS 'The student''s gender as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociation.profilethumbnail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.profilethumbnail IS 'Locator reference for the student photo. The specification for that reference is left to local definition.';


--
-- Name: COLUMN studenteducationorganizationassociation.hispaniclatinoethnicity; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.hispaniclatinoethnicity IS 'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race, as last reported to the education organization. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."';


--
-- Name: COLUMN studenteducationorganizationassociation.oldethnicitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.oldethnicitydescriptorid IS 'Previous definition of ethnicity combining Hispanic/Latino and race:
        1 - American Indian or Alaskan Native
        2 - Asian or Pacific Islander
        3 - Black, not of Hispanic origin
        4 - Hispanic
        5 - White, not of Hispanic origin.';


--
-- Name: COLUMN studenteducationorganizationassociation.limitedenglishproficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.limitedenglishproficiencydescriptorid IS 'An indication that the student has been identified as limited English proficient by the Language Proficiency Assessment Committee (LPAC), or English proficient.';


--
-- Name: COLUMN studenteducationorganizationassociation.loginid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.loginid IS 'The login ID for the user; used for security access control interface.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceawayfromschooldescriptorid IS 'The type of device the student uses most often to complete learning activities away from school.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceaccessdescriptorid IS 'An indication of whether the primary learning device is shared or not shared with another individual.';


--
-- Name: COLUMN studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.primarylearningdeviceproviderdescriptorid IS 'The provider of the primary learning device.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccessinresidence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccessinresidence IS 'An indication of whether the student is able to access the internet in their primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.barriertointernetaccessinresidencedescriptorid IS 'An indication of the barrier to having internet access in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetaccesstypeinresidencedescriptorid IS 'The primary type of internet service used in the student’s primary place of residence.';


--
-- Name: COLUMN studenteducationorganizationassociation.internetperformanceinresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociation.internetperformanceinresidencedescriptorid IS 'An indication of whether the student can complete the full range of learning activities, including video streaming and assignment upload, without interruptions caused by poor internet performance in their primary place of residence.';


--
-- Name: studenteducationorganizationassociationaddress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddress (
    addresstypedescriptorid integer NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    studentusi integer NOT NULL,
    apartmentroomsuitenumber character varying(50),
    buildingsitenumber character varying(20),
    nameofcounty character varying(30),
    countyfipscode character varying(5),
    latitude character varying(20),
    longitude character varying(20),
    donotpublishindicator boolean,
    congressionaldistrict character varying(30),
    localedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddress IS 'The set of elements that describes an address, including the street address, city, state, and ZIP code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.apartmentroomsuitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.apartmentroomsuitenumber IS 'The apartment, room, or suite number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.buildingsitenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.buildingsitenumber IS 'The number of the building on the site, if more than one building shares the same address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.nameofcounty; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.nameofcounty IS 'The name of the county, parish, borough, or comparable unit (within a state) in
                      ''which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.countyfipscode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.countyfipscode IS 'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.donotpublishindicator IS 'An indication that the address should not be published.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.congressionaldistrict; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.congressionaldistrict IS 'The congressional district in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddress.localedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddress.localedescriptorid IS 'A general geographic indicator that categorizes U.S. territory (e.g., City, Suburban).';


--
-- Name: studenteducationorganizationassociationaddressperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationaddressperiod (
    addresstypedescriptorid integer NOT NULL,
    begindate date NOT NULL,
    city character varying(30) NOT NULL,
    educationorganizationid integer NOT NULL,
    postalcode character varying(17) NOT NULL,
    stateabbreviationdescriptorid integer NOT NULL,
    streetnumbername character varying(150) NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationaddressperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationaddressperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationaddressperiod IS 'The time periods for which the address is valid. For physical addresses, the periods in which the person lived at that address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.addresstypedescriptorid IS 'The type of address listed for an individual or organization.    For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.city; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.city IS 'The name of the city in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.postalcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.postalcode IS 'The five or nine digit zip code or overseas postal code portion of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.stateabbreviationdescriptorid IS 'The abbreviation for the state (within the United States) or outlying area in which an address is located.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.streetnumbername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.streetnumbername IS 'The street number and street name or post office box number of an address.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationaddressperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationaddressperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationancestryethnicorigin (
    ancestryethnicorigindescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationancestryethnicorigin OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationancestryethnicorigin; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationancestryethnicorigin IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.ancestryethnicorigindescriptorid IS 'The original peoples or cultures with which the individual identifies.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationancestryethnicorigin.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationancestryethnicorigin.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationcohortyear; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationcohortyear (
    cohortyeartypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    termdescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationcohortyear OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationcohortyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationcohortyear IS 'The type and year of a cohort (e.g., 9th grade) the student belongs to as determined by the year that student entered a specific grade.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.cohortyeartypedescriptorid IS 'The type of cohort year (9th grade, graduation).';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.schoolyear IS 'The school year associated with the cohort; for example, the intended school year of graduation.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationcohortyear.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationcohortyear.termdescriptorid IS 'The term associated with the cohort year; for example, the intended term of graduation.';


--
-- Name: studenteducationorganizationassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisability (
    disabilitydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    disabilitydeterminationsourcetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisability OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as determined by evaluation(s) conducted by the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: COLUMN studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationdisabilitydesignation (
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationelectronicmail; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationelectronicmail (
    educationorganizationid integer NOT NULL,
    electronicmailaddress character varying(128) NOT NULL,
    electronicmailtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryemailaddressindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationelectronicmail OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationelectronicmail; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationelectronicmail IS 'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailaddress IS 'The electronic mail (e-mail) address listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.electronicmailtypedescriptorid IS 'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.primaryemailaddressindicator IS 'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationelectronicmail.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationelectronicmail.donotpublishindicator IS 'An indication that the electronic email address should not be published.';


--
-- Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationinternationaladdress (
    addresstypedescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    addressline1 character varying(150) NOT NULL,
    addressline2 character varying(150),
    addressline3 character varying(150),
    addressline4 character varying(150),
    countrydescriptorid integer NOT NULL,
    latitude character varying(20),
    longitude character varying(20),
    begindate date,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationinternationaladdress OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationinternationaladdress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationinternationaladdress IS 'The set of elements that describes an international address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addresstypedescriptorid IS 'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline1; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline1 IS 'The first line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline2; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline2 IS 'The second line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline3; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline3 IS 'The third line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.addressline4; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.addressline4 IS 'The fourth line of the address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.countrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.countrydescriptorid IS 'The name of the country. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.latitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.latitude IS 'The geographic latitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.longitude; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.longitude IS 'The geographic longitude of the physical address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.begindate IS 'The first date the address is valid. For physical addresses, the date the individual moved to that address.';


--
-- Name: COLUMN studenteducationorganizationassociationinternationaladdress.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationinternationaladdress.enddate IS 'The last date the address is valid. For physical addresses, the date the individual moved from that address.';


--
-- Name: studenteducationorganizationassociationlanguage; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguage (
    educationorganizationid integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguage OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguage IS 'The language(s) the individual uses to communicate. It is strongly recommended that entries use only ISO 639-3 language codes.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguage.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguage.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationlanguageuse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationlanguageuse (
    educationorganizationid integer NOT NULL,
    languagedescriptorid integer NOT NULL,
    languageusedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationlanguageuse OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationlanguageuse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationlanguageuse IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languagedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languagedescriptorid IS 'A specification of which written or spoken communication is being used.';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.languageusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.languageusedescriptorid IS 'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).';


--
-- Name: COLUMN studenteducationorganizationassociationlanguageuse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationlanguageuse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 (
    educationorganizationid integer NOT NULL,
    programcharacteristicdescriptorid integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationprogramparticipat_810575; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationprogramparticipat_810575 IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.programcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.programcharacteristicdescriptorid IS 'Reflects important characteristics of the program, such as categories or particular indications.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipat_810575.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipat_810575.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationprogramparticipation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationprogramparticipation (
    educationorganizationid integer NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    begindate date,
    enddate date,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationprogramparticipation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationprogramparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationprogramparticipation IS 'Key programs the student is participating in or receives services from.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.begindate IS 'The date the student was associated with the program or service.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.enddate IS 'The date the program participation ended.';


--
-- Name: COLUMN studenteducationorganizationassociationprogramparticipation.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationprogramparticipation.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: studenteducationorganizationassociationrace; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationrace (
    educationorganizationid integer NOT NULL,
    racedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationrace OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationrace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationrace IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.racedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.racedescriptorid IS 'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies as last reported to the education organization. The data model allows for multiple entries so that each individual can specify all appropriate races.';


--
-- Name: COLUMN studenteducationorganizationassociationrace.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationrace.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf IS 'The time periods for which characteristic was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentcharacteristicdescriptorid IS 'The characteristic designated for the student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentcharacteristic (
    educationorganizationid integer NOT NULL,
    studentcharacteristicdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentcharacteristic OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentcharacteristic; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentcharacteristic IS 'Reflects important characteristics of a student. If a student has a characteristic present, that characteristic is considered true or active for that student. If a characteristic is not present, no assumption is made as to the applicability of the characteristic, but local policy may dictate otherwise.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentcharacteristicdescriptorid IS 'The characteristic designated for the student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentcharacteristic.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentcharacteristic.designatedby IS 'The person, organization, or department that designated the characteristic.';


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 (
    assigningorganizationidentificationcode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    studentidentificationsystemdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    identificationcode character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentidentifica_c15030; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentidentifica_c15030 IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.assigningorganizationidentificationcode IS 'The organization code or name assigning the StudentIdentificationCode.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentidentificationsystemdescriptorid IS 'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentidentifica_c15030.identificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentidentifica_c15030.identificationcode IS 'A unique number or alphanumeric code assigned to a student by a school, school system, a state, or other agency or entity.';


--
-- Name: studenteducationorganizationassociationstudentindicator; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicator (
    educationorganizationid integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    studentusi integer NOT NULL,
    indicatorgroup character varying(200),
    indicator character varying(60) NOT NULL,
    designatedby character varying(60),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicator OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicator IS 'An indicator or metric computed for the student (e.g., at risk).';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicatorgroup; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicatorgroup IS 'The name for a group of indicators.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.indicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.indicator IS 'The value of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicator.designatedby; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicator.designatedby IS 'The person, organization, or department that designated the program association.';


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    indicatorname character varying(200) NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationstudentindicatorperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationstudentindicatorperiod IS 'The time periods for which the indicator was effective.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.begindate IS 'The month, day, and year for the start of the period.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.indicatorname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.indicatorname IS 'The name of the indicator or metric.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationstudentindicatorperiod.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationstudentindicatorperiod.enddate IS 'The month, day, and year for the end of the period.';


--
-- Name: studenteducationorganizationassociationtelephone; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtelephone (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    telephonenumber character varying(24) NOT NULL,
    telephonenumbertypedescriptorid integer NOT NULL,
    orderofpriority integer,
    textmessagecapabilityindicator boolean,
    donotpublishindicator boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtelephone OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtelephone; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtelephone IS 'The 10-digit telephone number, including the area code, for the person.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumber; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumber IS 'The telephone number including the area code, and extension, if applicable.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.telephonenumbertypedescriptorid IS 'The type of communication number listed for an individual or organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.orderofpriority; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.orderofpriority IS 'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.textmessagecapabilityindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.textmessagecapabilityindicator IS 'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.';


--
-- Name: COLUMN studenteducationorganizationassociationtelephone.donotpublishindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtelephone.donotpublishindicator IS 'An indication that the telephone number should not be published.';


--
-- Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenteducationorganizationassociationtribalaffiliation (
    educationorganizationid integer NOT NULL,
    studentusi integer NOT NULL,
    tribalaffiliationdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenteducationorganizationassociationtribalaffiliation OWNER TO postgres;

--
-- Name: TABLE studenteducationorganizationassociationtribalaffiliation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenteducationorganizationassociationtribalaffiliation IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenteducationorganizationassociationtribalaffiliation.tribalaffiliationdescriptorid IS 'An American Indian tribe with which the student is affiliated as last reported to the education organization.';


--
-- Name: studentgradebookentry; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentgradebookentry (
    gradebookentryidentifier character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer,
    datefulfilled date,
    timefulfilled time without time zone,
    diagnosticstatement character varying(1024),
    pointsearned numeric(9,2),
    lettergradeearned character varying(20),
    numericgradeearned numeric(9,2),
    submissionstatusdescriptorid integer,
    assignmentlatestatusdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: TABLE studentgradebookentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentgradebookentry IS 'This entity holds a student''s grade or competency level for a gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.gradebookentryidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.gradebookentryidentifier IS 'A unique number or alphanumeric code assigned to a gradebook entry by the source system.';


--
-- Name: COLUMN studentgradebookentry.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.namespace IS 'Namespace URI for the source of the gradebook entry.';


--
-- Name: COLUMN studentgradebookentry.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentgradebookentry.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced learning objective.';


--
-- Name: COLUMN studentgradebookentry.datefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.datefulfilled IS 'The date an assignment was turned in or the date of an assessment.';


--
-- Name: COLUMN studentgradebookentry.timefulfilled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.timefulfilled IS 'The time an assignment was turned in on the date fulfilled.';


--
-- Name: COLUMN studentgradebookentry.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: COLUMN studentgradebookentry.pointsearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.pointsearned IS 'The points earned for the submission. With extra credit, the points earned may exceed the max points.';


--
-- Name: COLUMN studentgradebookentry.lettergradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.lettergradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.numericgradeearned; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.numericgradeearned IS 'A final or interim (grading period) indicator of student performance in a class as submitted by the instructor.';


--
-- Name: COLUMN studentgradebookentry.submissionstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.submissionstatusdescriptorid IS 'The status of the student''s submission.';


--
-- Name: COLUMN studentgradebookentry.assignmentlatestatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentgradebookentry.assignmentlatestatusdescriptorid IS 'Status of whether the assignment was submitted after the due date and/or marked as.';


--
-- Name: studenthomelessprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    homelessprimarynighttimeresidencedescriptorid integer,
    awaitingfostercare boolean,
    homelessunaccompaniedyouth boolean
);


ALTER TABLE edfi.studenthomelessprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociation IS 'This association represents the McKinney-Vento Homeless Program program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studenthomelessprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessprimarynighttimeresidencedescriptorid IS 'The primary nighttime residence of the student at the time the student is identified as homeless.';


--
-- Name: COLUMN studenthomelessprogramassociation.awaitingfostercare; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.awaitingfostercare IS 'State defined definition for awaiting foster care.';


--
-- Name: COLUMN studenthomelessprogramassociation.homelessunaccompaniedyouth; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociation.homelessunaccompaniedyouth IS 'A homeless unaccompanied youth is a youth who is not in the physical custody of a parent or guardian and who fits the McKinney-Vento definition of homeless. Students must be both unaccompanied and homeless to be included as an unaccompanied homeless youth.';


--
-- Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenthomelessprogramassociationhomelessprogramservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    homelessprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenthomelessprogramassociationhomelessprogramservice OWNER TO postgres;

--
-- Name: TABLE studenthomelessprogramassociationhomelessprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenthomelessprogramassociationhomelessprogramservice IS 'Indicates the service(s) being provided to the student by the homeless program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.homelessprogramservicedescriptorid IS 'Indicates the service being provided to the student by the homeless program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studenthomelessprogramassociationhomelessprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenthomelessprogramassociationhomelessprogramservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationdocument IS 'Describe the documentation of citizenship.';


--
-- Name: COLUMN studentidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN studentidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: studentidentificationsystemdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentidentificationsystemdescriptor (
    studentidentificationsystemdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentidentificationsystemdescriptor OWNER TO postgres;

--
-- Name: TABLE studentidentificationsystemdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentidentificationsystemdescriptor IS 'This descriptor defines the originating record system and code that is used for record-keeping purposes of the student.';


--
-- Name: COLUMN studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentidentificationsystemdescriptor.studentidentificationsystemdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentinterventionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociation (
    educationorganizationid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    cohortidentifier character varying(20),
    cohorteducationorganizationid integer,
    diagnosticstatement character varying(1024),
    dosage integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociation IS 'This association indicates the students participating in an intervention.';


--
-- Name: COLUMN studentinterventionassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociation.cohortidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohortidentifier IS 'The name or ID for the cohort.';


--
-- Name: COLUMN studentinterventionassociation.cohorteducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.cohorteducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociation.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.diagnosticstatement IS 'A statement provided by the assigner that provides information regarding why the student was assigned to this intervention.';


--
-- Name: COLUMN studentinterventionassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the intervention.';


--
-- Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionassociationinterventioneffectiveness (
    diagnosisdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    gradeleveldescriptorid integer NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    populationserveddescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    improvementindex integer,
    interventioneffectivenessratingdescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentinterventionassociationinterventioneffectiveness OWNER TO postgres;

--
-- Name: TABLE studentinterventionassociationinterventioneffectiveness; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionassociationinterventioneffectiveness IS 'A measure of the effects of an intervention in each outcome domain. The rating of effectiveness takes into account four factors: the quality of the research on the intervention, the statistical significance of the research findings, the size of the differences between participants in the intervention and comparison groups and the consistency in results.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.diagnosisdescriptorid IS 'Targeted purpose of the intervention (e.g., attendance issue, dropout risk) for which the effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.gradeleveldescriptorid IS 'Grade level for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.populationserveddescriptorid IS 'Population for which effectiveness is measured.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.improvementindex; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.improvementindex IS 'Along a percentile distribution of students, the improvement index represents the change in an average student''s percentile rank that is considered to be due to the intervention.';


--
-- Name: COLUMN studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionassociationinterventioneffectiveness.interventioneffectivenessratingdescriptorid IS 'An intervention demonstrates effectiveness if the research has shown that the program caused an improvement in outcomes. Values: positive effects, potentially positive effects, mixed effects, potentially negative effects, negative effects, and no discernible effects.';


--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentinterventionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    interventionidentificationcode character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    interventionduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentinterventionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentinterventionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for an intervention service.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionidentificationcode IS 'A unique number or alphanumeric code assigned to an intervention.';


--
-- Name: COLUMN studentinterventionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentinterventionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentinterventionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentinterventionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentinterventionattendanceevent.interventionduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentinterventionattendanceevent.interventionduration IS 'The duration in minutes in which the student participated in the intervention during this instance.';


--
-- Name: studentlanguageinstructionprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    englishlearnerparticipation boolean,
    dosage integer
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociation IS 'This association represents the Title III Language Instruction for Limited English Proficient and Immigrant Students program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.englishlearnerparticipation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.englishlearnerparticipation IS 'An indication that an English learner student is served by an English language instruction educational program supported with Title III of ESEA funds.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociation.dosage; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociation.dosage IS 'The duration of time in minutes for which the student was assigned to participate in the program.';


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolyear smallint NOT NULL,
    studentusi integer NOT NULL,
    participationdescriptorid integer,
    proficiencydescriptorid integer,
    progressdescriptorid integer,
    monitoreddescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 IS 'Results of yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.schoolyear IS 'The school year for which the assessment was administered.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.participationdescriptorid IS 'Field indicating the participation in the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.proficiencydescriptorid IS 'The proficiency level for the yearly English language assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.progressdescriptorid IS 'The yearly progress or growth from last year''s assessment.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620.monitoreddescriptorid IS 'Student is monitored on content achievement who are no longer receiving services.';


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    languageinstructionprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 OWNER TO postgres;

--
-- Name: TABLE studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 IS 'Indicates the service(s) being provided to the student by the language instruction program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.languageinstructionprogramservicedescriptorid IS 'Indicates the service being provided to the student by the language instruction program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentlearningobjective; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjective (
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    studentusi integer NOT NULL,
    competencyleveldescriptorid integer NOT NULL,
    diagnosticstatement character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentlearningobjective OWNER TO postgres;

--
-- Name: TABLE studentlearningobjective; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjective IS 'This entity represents the competency assessed or evaluated for the student against a specific learning objective.';


--
-- Name: COLUMN studentlearningobjective.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjective.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjective.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjective.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN studentlearningobjective.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentlearningobjective.competencyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.competencyleveldescriptorid IS 'The competency level assessed for the student for the referenced learning objective.';


--
-- Name: COLUMN studentlearningobjective.diagnosticstatement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjective.diagnosticstatement IS 'A statement provided by the teacher that provides information in addition to the grade or assessment score.';


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentlearningobjectivegeneralstudentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjectivegeneralstudentprogramassociation IS 'Relates the Student and Program associated with the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentlearningobjectivegeneralstudentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivegeneralstudentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentlearningobjectivestudentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentlearningobjectivestudentsectionassociation (
    begindate date NOT NULL,
    gradingperioddescriptorid integer NOT NULL,
    gradingperiodschoolid integer NOT NULL,
    gradingperiodschoolyear smallint NOT NULL,
    gradingperiodsequence integer NOT NULL,
    learningobjectiveid character varying(60) NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentlearningobjectivestudentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentlearningobjectivestudentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentlearningobjectivestudentsectionassociation IS 'Relates the Student and Section associated with the LearningObjective.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperioddescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperioddescriptorid IS 'The name of the period for which grades are reported.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodschoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodschoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodschoolyear IS 'The identifier for the grading period school year.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.gradingperiodsequence; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.gradingperiodsequence IS 'The sequential order of this period relative to other periods.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.learningobjectiveid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.learningobjectiveid IS 'The identifier for the specific learning objective in the context of a standard (e.g., 111.15.3.1.A).';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.namespace IS 'Namespace for the learning objective.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentlearningobjectivestudentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentlearningobjectivestudentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentmigranteducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    priorityforservices boolean NOT NULL,
    lastqualifyingmove date NOT NULL,
    continuationofservicesreasondescriptorid integer,
    usinitialentry date,
    usmostrecententry date,
    usinitialschoolentry date,
    qualifyingarrivaldate date,
    stateresidencydate date,
    eligibilityexpirationdate date
);


ALTER TABLE edfi.studentmigranteducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociation IS 'This association represents the migrant education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation with added elements particular to migrant education programs.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.priorityforservices; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.priorityforservices IS 'Report migratory children who are classified as having "priority for services" because they are failing, or most at risk of failing to meet the state''s challenging state academic content standards and challenging state student academic achievement standards, and their education has been interrupted during the regular school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.lastqualifyingmove; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.lastqualifyingmove IS 'Date the last qualifying move occurred; used to compute MEP status.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.continuationofservicesreasondescriptorid IS 'The "continuation of services" provision found in Section 1304(e) of the statute provides that (1) a child who ceases to be a migratory child during a school term shall be eligible for services until the end of such term; (2) a child who is no longer a migratory child may continue to receive services for one additional school year, but only if comparable services are not available through other programs; and (3) secondary school students who were eligible for services in secondary school may continue to be served through credit accrual programs until graduation. Only students who received services at any time during their 36 month eligibility period may continue to receive services (not necessarily the same service).';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialentry IS 'The month, day, and year on which the student first entered the U.S.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usmostrecententry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usmostrecententry IS 'The month, day, and year of the student''s most recent entry into the U.S.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.usinitialschoolentry; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.usinitialschoolentry IS 'The month, day, and year on which the student first entered a U.S. school.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.qualifyingarrivaldate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.qualifyingarrivaldate IS 'The qualifying arrival date (QAD) is the date the child joins the worker who has already moved, or the date when the worker joins the child who has already moved. The QAD is the date that the child''s eligibility for the MEP begins. The QAD is not affected by subsequent non-qualifying moves.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.stateresidencydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.stateresidencydate IS 'The verified state residency for the student.';


--
-- Name: COLUMN studentmigranteducationprogramassociation.eligibilityexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociation.eligibilityexpirationdate IS 'The eligibility expiration date is used to determine end of eligibility and to account for a child''s eligibility expiring earlier than 36 months from the child''s QAD. A child''s eligibility would end earlier than 36 months from the child''s QAD, if the child is no longer entitled to a free public education (e.g., graduated with a high school diploma, obtained a high school equivalency diploma (HSED), or for other reasons as determined by states'' requirements), or if the child passes away.';


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    migranteducationprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 OWNER TO postgres;

--
-- Name: TABLE studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 IS 'Indicates the service(s) being provided to the student by the migrant education program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.migranteducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the migrant education program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentneglectedordelinquentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    neglectedordelinquentprogramdescriptorid integer,
    elaprogressleveldescriptorid integer,
    mathematicsprogressleveldescriptorid integer
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociation IS 'This association represents the Title I Part D Neglected or Delinquent program(s) that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.neglectedordelinquentprogramdescriptorid IS 'The type of program under ESEA Title I, Part D, Subpart 1 (state programs) or Subpart 2 (LEA).';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.elaprogressleveldescriptorid IS 'The progress measured from pre- to post- test for ELA.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociation.mathematicsprogressleveldescriptorid IS 'The progress measured from pre- to post-test for Mathematics.';


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    neglectedordelinquentprogramservicedescriptorid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 OWNER TO postgres;

--
-- Name: TABLE studentneglectedordelinquentprogramassociationneglectedo_520251; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 IS 'Indicates the service(s) being provided to the student by the neglected or delinquent program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.neglectedordelinquentprogramservicedescriptorid IS 'Indicates the service being provided to the student by the neglected or delinquent program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentneglectedordelinquentprogramassociationneglectedo_520251.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentothername; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentothername (
    othernametypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    personaltitleprefix character varying(30),
    firstname character varying(75) NOT NULL,
    middlename character varying(75),
    lastsurname character varying(75) NOT NULL,
    generationcodesuffix character varying(10),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentothername OWNER TO postgres;

--
-- Name: TABLE studentothername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentothername IS 'Other names (e.g., alias, nickname, previous legal name) associated with a person.';


--
-- Name: COLUMN studentothername.othernametypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.othernametypedescriptorid IS 'The types of alternate names for an individual.';


--
-- Name: COLUMN studentothername.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentothername.personaltitleprefix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.personaltitleprefix IS 'A prefix used to denote the title, degree, position, or seniority of the individual.';


--
-- Name: COLUMN studentothername.firstname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.firstname IS 'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.';


--
-- Name: COLUMN studentothername.middlename; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.middlename IS 'A secondary name given to an individual at birth, baptism, or during another naming ceremony.';


--
-- Name: COLUMN studentothername.lastsurname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.lastsurname IS 'The name borne in common by members of a family.';


--
-- Name: COLUMN studentothername.generationcodesuffix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentothername.generationcodesuffix IS 'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).';


--
-- Name: studentparticipationcodedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentparticipationcodedescriptor (
    studentparticipationcodedescriptorid integer NOT NULL
);


ALTER TABLE edfi.studentparticipationcodedescriptor OWNER TO postgres;

--
-- Name: TABLE studentparticipationcodedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentparticipationcodedescriptor IS 'The role or type of participation of a student in a discipline incident; for example: Victim, Perpetrator, Witness, Reporter.';


--
-- Name: COLUMN studentparticipationcodedescriptor.studentparticipationcodedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentparticipationcodedescriptor.studentparticipationcodedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: studentpersonalidentificationdocument; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentpersonalidentificationdocument (
    identificationdocumentusedescriptorid integer NOT NULL,
    personalinformationverificationdescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    documenttitle character varying(60),
    documentexpirationdate date,
    issuerdocumentidentificationcode character varying(60),
    issuername character varying(150),
    issuercountrydescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentpersonalidentificationdocument OWNER TO postgres;

--
-- Name: TABLE studentpersonalidentificationdocument; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentpersonalidentificationdocument IS 'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.';


--
-- Name: COLUMN studentpersonalidentificationdocument.identificationdocumentusedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.identificationdocumentusedescriptorid IS 'The primary function of the document used for establishing identity.';


--
-- Name: COLUMN studentpersonalidentificationdocument.personalinformationverificationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.personalinformationverificationdescriptorid IS 'The category of the document relative to its purpose.';


--
-- Name: COLUMN studentpersonalidentificationdocument.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documenttitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documenttitle IS 'The title of the document given by the issuer.';


--
-- Name: COLUMN studentpersonalidentificationdocument.documentexpirationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.documentexpirationdate IS 'The day when the document  expires, if null then never expires.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuerdocumentidentificationcode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuerdocumentidentificationcode IS 'The unique identifier on the issuer''s identification system.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuername; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuername IS 'Name of the entity or institution that issued the document.';


--
-- Name: COLUMN studentpersonalidentificationdocument.issuercountrydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentpersonalidentificationdocument.issuercountrydescriptorid IS 'Country of origin of the document. It is strongly recommended that entries use only ISO 3166 2-letter country codes.';


--
-- Name: studentprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL
);


ALTER TABLE edfi.studentprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociation IS 'This association represents the program(s) that a student participates in or is served by.';


--
-- Name: COLUMN studentprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studentprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramassociationservice IS 'Indicates the service(s) being provided to the student by the program.';


--
-- Name: COLUMN studentprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicedescriptorid IS 'Indicates the service being provided to the student by the program.';


--
-- Name: COLUMN studentprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramassociationservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentprogramattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    eventdate date NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    programattendanceduration integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentprogramattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentprogramattendanceevent IS 'This event entity represents the recording of whether a student is in attendance to receive or participate in program services.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentprogramattendanceevent.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentprogramattendanceevent.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentprogramattendanceevent.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentprogramattendanceevent.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentprogramattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentprogramattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentprogramattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentprogramattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentprogramattendanceevent.programattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentprogramattendanceevent.programattendanceduration IS 'The duration in minutes of the program attendance event.';


--
-- Name: studentschoolassociationalternativegraduationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationalternativegraduationplan (
    alternativeeducationorganizationid integer NOT NULL,
    alternativegraduationplantypedescriptorid integer NOT NULL,
    alternativegraduationschoolyear smallint NOT NULL,
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationalternativegraduationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationalternativegraduationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationalternativegraduationplan IS 'The secondary graduation plan or plans associated with the student enrolled in the school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativeeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationplantypedescriptorid IS 'The type of academic plan the student is following for graduation.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.alternativegraduationschoolyear IS 'The school year the student is expected to graduate.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationalternativegraduationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationalternativegraduationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentschoolassociationeducationplan; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolassociationeducationplan (
    educationplandescriptorid integer NOT NULL,
    entrydate date NOT NULL,
    schoolid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolassociationeducationplan OWNER TO postgres;

--
-- Name: TABLE studentschoolassociationeducationplan; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolassociationeducationplan IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN studentschoolassociationeducationplan.educationplandescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.educationplandescriptorid IS 'The type of education plan(s) the student is following, if appropriate.';


--
-- Name: COLUMN studentschoolassociationeducationplan.entrydate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.entrydate IS 'The month, day, and year on which an individual enters and begins to receive instructional services in a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolassociationeducationplan.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolassociationeducationplan.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    schoolattendanceduration integer,
    arrivaltime time without time zone,
    departuretime time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentschoolattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a school day.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentschoolattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentschoolattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentschoolattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentschoolattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentschoolattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentschoolattendanceevent.schoolattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.schoolattendanceduration IS 'The duration in minutes of the school attendance event.';


--
-- Name: COLUMN studentschoolattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentschoolattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: studentschoolfoodserviceprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    directcertification boolean
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociation IS 'This association represents the school food services program(s), such as the Free or Reduced Lunch program, that a student participates in or from which the student receives services.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociation.directcertification; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociation.directcertification IS 'Indicates that the student''s National School Lunch Program (NSLP) eligibility has been determined through direct certification.';


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    schoolfoodserviceprogramservicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb OWNER TO postgres;

--
-- Name: TABLE studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb IS 'Indicates the service(s) being provided to the student by the school food service program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.schoolfoodserviceprogramservicedescriptorid IS 'Indicates the service being provided to the student by the school food service program.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentsectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionassociation (
    begindate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    enddate date,
    homeroomindicator boolean,
    repeatidentifierdescriptorid integer,
    teacherstudentdatalinkexclusion boolean,
    attemptstatusdescriptorid integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: TABLE studentsectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionassociation IS 'This association indicates the course sections to which a student is assigned.';


--
-- Name: COLUMN studentsectionassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.begindate IS 'Month, day, and year of the student''s entry or assignment to the section.';


--
-- Name: COLUMN studentsectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionassociation.enddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.enddate IS 'Month, day, and year of the withdrawal or exit of the student from the section.';


--
-- Name: COLUMN studentsectionassociation.homeroomindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.homeroomindicator IS 'Indicates the section is the student''s homeroom. Homeroom period may the convention for taking daily attendance.';


--
-- Name: COLUMN studentsectionassociation.repeatidentifierdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.repeatidentifierdescriptorid IS 'An indication as to whether a student has previously taken a given course.';


--
-- Name: COLUMN studentsectionassociation.teacherstudentdatalinkexclusion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.teacherstudentdatalinkexclusion IS 'Indicates that the student-section combination is excluded from calculation of value-added or growth attribution calculations used for a particular teacher evaluation.';


--
-- Name: COLUMN studentsectionassociation.attemptstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionassociation.attemptstatusdescriptorid IS 'An indication of the student''s completion status for the section.';


--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceevent (
    attendanceeventcategorydescriptorid integer NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    attendanceeventreason character varying(255),
    educationalenvironmentdescriptorid integer,
    eventduration numeric(3,2),
    sectionattendanceduration integer,
    arrivaltime time without time zone,
    departuretime time without time zone,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceevent; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceevent IS 'This event entity represents the recording of whether a student is in attendance for a section.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceevent.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceevent.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceevent.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceevent.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionattendanceevent.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentsectionattendanceevent.attendanceeventreason; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.attendanceeventreason IS 'The reported reason for a student''s absence.';


--
-- Name: COLUMN studentsectionattendanceevent.educationalenvironmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.educationalenvironmentdescriptorid IS 'The setting in which a child receives education and related services. This attribute is only used if it differs from the EducationalEnvironment of the Section. This is only used in the AttendanceEvent if different from the associated Section.';


--
-- Name: COLUMN studentsectionattendanceevent.eventduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.eventduration IS 'The amount of time for the event as recognized by the school: 1 day = 1, 1/2 day = 0.5, 1/3 day = 0.33.';


--
-- Name: COLUMN studentsectionattendanceevent.sectionattendanceduration; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.sectionattendanceduration IS 'The duration in minutes of the section attendance event.';


--
-- Name: COLUMN studentsectionattendanceevent.arrivaltime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.arrivaltime IS 'The time of day the student arrived for the attendance event in ISO 8601 format.';


--
-- Name: COLUMN studentsectionattendanceevent.departuretime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceevent.departuretime IS 'The time of day the student departed for the attendance event in ISO 8601 format.';


--
-- Name: studentsectionattendanceeventclassperiod; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentsectionattendanceeventclassperiod (
    attendanceeventcategorydescriptorid integer NOT NULL,
    classperiodname character varying(60) NOT NULL,
    eventdate date NOT NULL,
    localcoursecode character varying(60) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentsectionattendanceeventclassperiod OWNER TO postgres;

--
-- Name: TABLE studentsectionattendanceeventclassperiod; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentsectionattendanceeventclassperiod IS 'The class period(s) to which the section attendance event applies.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.attendanceeventcategorydescriptorid IS 'A code describing the attendance event, for example:
        Present
        Unexcused absence
        Excused absence
        Tardy.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.classperiodname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.classperiodname IS 'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.eventdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.eventdate IS 'Date for this attendance event.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN studentsectionattendanceeventclassperiod.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentsectionattendanceeventclassperiod.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentspecialeducationprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    ideaeligibility boolean,
    specialeducationsettingdescriptorid integer,
    specialeducationhoursperweek numeric(5,2),
    schoolhoursperweek numeric(5,2),
    multiplydisabled boolean,
    medicallyfragile boolean,
    lastevaluationdate date,
    iepreviewdate date,
    iepbegindate date,
    iependdate date
);


ALTER TABLE edfi.studentspecialeducationprogramassociation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociation IS 'This association represents the special education program(s) that a student participates in or receives services from. The association is an extension of the StudentProgramAssociation particular for special education programs.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.ideaeligibility; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.ideaeligibility IS 'Indicator of the eligibility of the student to receive special education services according to the Individuals with Disabilities Education Act (IDEA).';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationsettingdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationsettingdescriptorid IS 'The major instructional setting (more than 50 percent of a student''s special education program).';


--
-- Name: COLUMN studentspecialeducationprogramassociation.specialeducationhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.specialeducationhoursperweek IS 'The number of hours per week for special education instruction and therapy.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.schoolhoursperweek; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.schoolhoursperweek IS 'Indicate the total number of hours of instructional time per week for the school that the student attends.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.multiplydisabled; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.multiplydisabled IS 'Indicates whether the student receiving special education and related services has been designated as multiply disabled by the admission, review, and dismissal committee as aligned with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.medicallyfragile; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.medicallyfragile IS 'Indicates whether the student receiving special education and related services is: 1) in the age range of birth to 22 years, and 2) has a serious, ongoing illness or a chronic condition that has lasted or is anticipated to last at least 12 or more months or has required at least one month of hospitalization, and that requires daily, ongoing medical treatments and monitoring by appropriately trained personnel which may include parents or other family members, and 3) requires the routine use of medical device or of assistive technology to compensate for the loss of usefulness of a body function needed to participate in activities of daily living, and 4) lives with ongoing threat to his or her continued well-being. Aligns with federal requirements.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.lastevaluationdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.lastevaluationdate IS 'The date of the last special education evaluation.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepreviewdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepreviewdate IS 'The date of the last IEP review.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iepbegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iepbegindate IS 'The effective date of the most recent IEP.';


--
-- Name: COLUMN studentspecialeducationprogramassociation.iependdate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociation.iependdate IS 'The end date of the most recent IEP.';


--
-- Name: studentspecialeducationprogramassociationdisability; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisability (
    begindate date NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    disabilitydiagnosis character varying(80),
    orderofdisability integer,
    disabilitydeterminationsourcetypedescriptorid integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisability OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisability IS 'The disability condition(s) that best describes an individual''s impairment, as related to special education services received.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydiagnosis; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydiagnosis IS 'A description of the disability diagnosis.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.orderofdisability; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.orderofdisability IS 'The order by severity of individual''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisability.disabilitydeterminationsourcetypedescriptorid IS 'The source that provided the disability determination.';


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation (
    begindate date NOT NULL,
    disabilitydescriptorid integer NOT NULL,
    disabilitydesignationdescriptorid integer NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationdisabilitydesignation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationdisabilitydesignation IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydescriptorid IS 'A disability category that describes a individual''s impairment.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.disabilitydesignationdescriptorid IS 'Whether the disability is IDEA, Section 504, or other disability designation.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationdisabilitydesignation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationdisabilitydesignation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationserviceprovider (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    studentusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationserviceprovider OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationserviceprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationserviceprovider IS 'The staff providing special education services to the student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationserviceprovider.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationserviceprovider.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 IS 'Indicates the service(s) being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    specialeducationprogramservicedescriptorid integer NOT NULL,
    staffusi integer NOT NULL,
    studentusi integer NOT NULL,
    primaryprovider boolean,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c OWNER TO postgres;

--
-- Name: TABLE studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c IS 'The staff providing the service to the student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.specialeducationprogramservicedescriptorid IS 'Indicates the service being provided to the student by the special education program.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c.primaryprovider IS 'Primary ServiceProvider.';


--
-- Name: studenttitleipartaprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociation (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociation OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociation IS 'This association represents the Title I Part A program(s) that a student participates in or from which the student receives services. The association is an extension of the StudentProgramAssociation particular for Title I Part A programs.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociation.titleipartaparticipantdescriptorid IS 'An indication of the type of Title I program, if any, in which the student is participating and by which the student is served.';


--
-- Name: studenttitleipartaprogramassociationservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    servicedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationservice IS 'Indicates the service(s) being provided to the student by the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.servicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.servicedescriptorid IS 'Indicates the service being provided to the student by the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.servicebegindate IS 'First date the student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationservice.serviceenddate IS 'Last date the student was in this option for the current school year.';


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (
    begindate date NOT NULL,
    educationorganizationid integer NOT NULL,
    programeducationorganizationid integer NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    studentusi integer NOT NULL,
    titleipartaprogramservicedescriptorid integer NOT NULL,
    primaryindicator boolean,
    servicebegindate date,
    serviceenddate date,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice OWNER TO postgres;

--
-- Name: TABLE studenttitleipartaprogramassociationtitleipartaprogramservice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studenttitleipartaprogramassociationtitleipartaprogramservice IS 'Indicates the service(s) being provided to the student by the Title I Part A program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.begindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.begindate IS 'The earliest date the student is involved with the program. Typically, this is the date the student becomes eligible for the program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programeducationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.titleipartaprogramservicedescriptorid IS 'Indicates the service being provided to the student by the Title I Part A Program.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.primaryindicator IS 'True if service is a primary service.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.servicebegindate IS 'First date the Student was in this option for the current school year.';


--
-- Name: COLUMN studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studenttitleipartaprogramassociationtitleipartaprogramservice.serviceenddate IS 'Last date the Student was in this option for the current school year.';


--
-- Name: studentvisa; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.studentvisa (
    studentusi integer NOT NULL,
    visadescriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.studentvisa OWNER TO postgres;

--
-- Name: TABLE studentvisa; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.studentvisa IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: COLUMN studentvisa.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN studentvisa.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.studentvisa.visadescriptorid IS 'An indicator of a non-US citizen''s Visa type.';


--
-- Name: submissionstatusdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.submissionstatusdescriptor (
    submissionstatusdescriptorid integer NOT NULL
);


ALTER TABLE edfi.submissionstatusdescriptor OWNER TO postgres;

--
-- Name: TABLE submissionstatusdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.submissionstatusdescriptor IS 'The status of the student''s submission.';


--
-- Name: COLUMN submissionstatusdescriptor.submissionstatusdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.submissionstatusdescriptor.submissionstatusdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: survey; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.survey (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    educationorganizationid integer,
    surveytitle character varying(255) NOT NULL,
    sessionname character varying(60),
    schoolyear smallint NOT NULL,
    schoolid integer,
    surveycategorydescriptorid integer,
    numberadministered integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.survey OWNER TO postgres;

--
-- Name: TABLE survey; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.survey IS 'A survey to identified or anonymous respondents.';


--
-- Name: COLUMN survey.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN survey.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN survey.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN survey.surveytitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveytitle IS 'The title of the survey.';


--
-- Name: COLUMN survey.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN survey.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolyear IS 'The school year associated with the survey.';


--
-- Name: COLUMN survey.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN survey.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.surveycategorydescriptorid IS 'The category or type of survey.';


--
-- Name: COLUMN survey.numberadministered; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.survey.numberadministered IS 'Number of persons to whom this survey was administered.';


--
-- Name: surveycategorydescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycategorydescriptor (
    surveycategorydescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveycategorydescriptor OWNER TO postgres;

--
-- Name: TABLE surveycategorydescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycategorydescriptor IS 'The descriptor holds the category or type of survey.';


--
-- Name: COLUMN surveycategorydescriptor.surveycategorydescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycategorydescriptor.surveycategorydescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveycourseassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveycourseassociation (
    coursecode character varying(60) NOT NULL,
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: TABLE surveycourseassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveycourseassociation IS 'The course associated with the survey.';


--
-- Name: COLUMN surveycourseassociation.coursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.coursecode IS 'A unique alphanumeric code assigned to a course.';


--
-- Name: COLUMN surveycourseassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveycourseassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveycourseassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveycourseassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyleveldescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyleveldescriptor (
    surveyleveldescriptorid integer NOT NULL
);


ALTER TABLE edfi.surveyleveldescriptor OWNER TO postgres;

--
-- Name: TABLE surveyleveldescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyleveldescriptor IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyleveldescriptor.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyleveldescriptor.surveyleveldescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: surveyprogramassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyprogramassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    programname character varying(60) NOT NULL,
    programtypedescriptorid integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: TABLE surveyprogramassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyprogramassociation IS 'The program associated with the survey.';


--
-- Name: COLUMN surveyprogramassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyprogramassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyprogramassociation.programname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programname IS 'The formal name of the program of instruction, training, services, or benefits available through federal, state, or local agencies.';


--
-- Name: COLUMN surveyprogramassociation.programtypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.programtypedescriptorid IS 'The type of program.';


--
-- Name: COLUMN surveyprogramassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyprogramassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveyquestion; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestion (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    questionformdescriptorid integer NOT NULL,
    questiontext character varying(1024) NOT NULL,
    surveysectiontitle character varying(255),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestion OWNER TO postgres;

--
-- Name: TABLE surveyquestion; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestion IS 'The questions for the survey.';


--
-- Name: COLUMN surveyquestion.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestion.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestion.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestion.questionformdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questionformdescriptorid IS 'The form or type of question.';


--
-- Name: COLUMN surveyquestion.questiontext; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.questiontext IS 'The text of the question.';


--
-- Name: COLUMN surveyquestion.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestion.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveyquestionmatrix; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionmatrix (
    matrixelement character varying(255) NOT NULL,
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    minrawscore integer,
    maxrawscore integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionmatrix OWNER TO postgres;

--
-- Name: TABLE surveyquestionmatrix; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionmatrix IS 'Information about the matrix element in the survey.';


--
-- Name: COLUMN surveyquestionmatrix.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionmatrix.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionmatrix.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionmatrix.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionmatrix.minrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.minrawscore IS 'The minimum score possible on a survey.';


--
-- Name: COLUMN surveyquestionmatrix.maxrawscore; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionmatrix.maxrawscore IS 'The maximum score possible on a survey.';


--
-- Name: surveyquestionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponse (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    noresponse boolean,
    comment character varying(1024),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponse IS 'The response to a survey question.';


--
-- Name: COLUMN surveyquestionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: COLUMN surveyquestionresponse.comment; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponse.comment IS 'Additional information provided by the responder about the question in the survey.';


--
-- Name: surveyquestionresponsechoice; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsechoice (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    sortorder integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    numericvalue integer,
    textvalue character varying(255),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsechoice OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsechoice; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsechoice IS 'The optional list of possible responses to a survey question.';


--
-- Name: COLUMN surveyquestionresponsechoice.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsechoice.sortorder; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.sortorder IS 'Sort order of this ResponseChoice within the complete list of choices attached to a SurveyQuestion. If sort order doesn''t apply, the value of NumericValue or a unique, possibly sequential numeric value.';


--
-- Name: COLUMN surveyquestionresponsechoice.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsechoice.numericvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.numericvalue IS 'A valid numeric response. If paired with a TextValue, the numeric equivalent of the TextValue.';


--
-- Name: COLUMN surveyquestionresponsechoice.textvalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsechoice.textvalue IS 'A valid text response. If paired with a NumericValue, the text equivalent of the NumericValue.';


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (
    matrixelement character varying(255) NOT NULL,
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    numericresponse integer,
    textresponse character varying(2048),
    noresponse boolean,
    minnumericresponse integer,
    maxnumericresponse integer,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsesurveyquestionmatrixelementresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsesurveyquestionmatrixelementresponse IS 'For matrix questions, the response for each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.matrixelement IS 'For matrix questions, the text identifying each row of the matrix.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.numericresponse IS 'The numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.textresponse IS 'The text response(s) for the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.noresponse IS 'Indicates there was no response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.minnumericresponse IS 'The minimum score response to the question.';


--
-- Name: COLUMN surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsesurveyquestionmatrixelementresponse.maxnumericresponse IS 'The maximum score response to the question.';


--
-- Name: surveyquestionresponsevalue; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyquestionresponsevalue (
    namespace character varying(255) NOT NULL,
    questioncode character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyquestionresponsevalueidentifier integer NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    numericresponse integer,
    textresponse character varying(2048),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyquestionresponsevalue OWNER TO postgres;

--
-- Name: TABLE surveyquestionresponsevalue; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyquestionresponsevalue IS 'For free-form, single- or multiple-selection questions, one or more responses.';


--
-- Name: COLUMN surveyquestionresponsevalue.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.questioncode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.questioncode IS 'The identifying code for the question, unique for the survey.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyquestionresponsevalueidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyquestionresponsevalueidentifier IS 'Primary key for the response value; a unique, usually sequential numeric value for a collection of responses, or potentially the value of NumericResponse for a single response.';


--
-- Name: COLUMN surveyquestionresponsevalue.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyquestionresponsevalue.numericresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.numericresponse IS 'A numeric response to the question.';


--
-- Name: COLUMN surveyquestionresponsevalue.textresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyquestionresponsevalue.textresponse IS 'A text response to the question.';


--
-- Name: surveyresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    responsedate date NOT NULL,
    responsetime integer,
    electronicmailaddress character varying(128),
    fullname character varying(80),
    location character varying(75),
    studentusi integer,
    parentusi integer,
    staffusi integer,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponse OWNER TO postgres;

--
-- Name: TABLE surveyresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponse IS 'Responses to a Survey for named or anonymous persons.';


--
-- Name: COLUMN surveyresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveyresponse.responsedate; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsedate IS 'Date of the survey response.';


--
-- Name: COLUMN surveyresponse.responsetime; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.responsetime IS 'The amount of time (in seconds) it took for the respondent to complete the survey.';


--
-- Name: COLUMN surveyresponse.electronicmailaddress; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.electronicmailaddress IS 'Email address of the respondent.';


--
-- Name: COLUMN surveyresponse.fullname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.fullname IS 'Full name of the respondent.';


--
-- Name: COLUMN surveyresponse.location; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.location IS 'Location of the respondent, often a city, district, or school.';


--
-- Name: COLUMN surveyresponse.studentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.studentusi IS 'A unique alphanumeric code assigned to a student.';


--
-- Name: COLUMN surveyresponse.parentusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.parentusi IS 'A unique alphanumeric code assigned to a parent.';


--
-- Name: COLUMN surveyresponse.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponse.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponseeducationorganizationtargetassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponseeducationorganizationtargetassociation IS 'This association provides information about the survey being taken and the education organization the survey is about.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveyresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsestafftargetassociation IS 'The association provides information about the survey being taken and who the survey is about.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveyresponsesurveylevel; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveyresponsesurveylevel (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyleveldescriptorid integer NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE edfi.surveyresponsesurveylevel OWNER TO postgres;

--
-- Name: TABLE surveyresponsesurveylevel; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveyresponsesurveylevel IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyresponsesurveylevel.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyleveldescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyleveldescriptorid IS 'Provides information about the respondents of a survey and how they can be grouped together.';


--
-- Name: COLUMN surveyresponsesurveylevel.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveyresponsesurveylevel.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: surveysection; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysection (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysection OWNER TO postgres;

--
-- Name: TABLE surveysection; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysection IS 'The section of questions for the survey.';


--
-- Name: COLUMN surveysection.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysection.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysection.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysection.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionassociation (
    localcoursecode character varying(60) NOT NULL,
    namespace character varying(255) NOT NULL,
    schoolid integer NOT NULL,
    schoolyear smallint NOT NULL,
    sectionidentifier character varying(255) NOT NULL,
    sessionname character varying(60) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionassociation IS 'The section associated with the survey.';


--
-- Name: COLUMN surveysectionassociation.localcoursecode; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.localcoursecode IS 'The local code assigned by the School that identifies the course offering provided for the instruction of students.';


--
-- Name: COLUMN surveysectionassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionassociation.schoolid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolid IS 'The identifier assigned to a school.';


--
-- Name: COLUMN surveysectionassociation.schoolyear; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.schoolyear IS 'The identifier for the school year.';


--
-- Name: COLUMN surveysectionassociation.sectionidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sectionidentifier IS 'The local identifier assigned to a section.';


--
-- Name: COLUMN surveysectionassociation.sessionname; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.sessionname IS 'The identifier for the calendar for the academic session.';


--
-- Name: COLUMN surveysectionassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: surveysectionresponse; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponse (
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    sectionrating numeric(9,3),
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: TABLE surveysectionresponse; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponse IS 'Optional information about the responses provided for a section of a survey.';


--
-- Name: COLUMN surveysectionresponse.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponse.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponse.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponse.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: COLUMN surveysectionresponse.sectionrating; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponse.sectionrating IS 'Numeric rating computed from the survey responses for the section.';


--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponseeducationorganizationtargetassociation (
    educationorganizationid integer NOT NULL,
    namespace character varying(255) NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponseeducationorganizationtargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponseeducationorganizationtargetassociation IS 'This association provides information about the survey section and the education organization the survey section is about.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.educationorganizationid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.educationorganizationid IS 'The identifier assigned to an education organization.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponseeducationorganizationtargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.surveysectionresponsestafftargetassociation (
    namespace character varying(255) NOT NULL,
    staffusi integer NOT NULL,
    surveyidentifier character varying(60) NOT NULL,
    surveyresponseidentifier character varying(60) NOT NULL,
    surveysectiontitle character varying(255) NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL,
    changeversion bigint DEFAULT nextval('changes.changeversionsequence'::regclass) NOT NULL
);


ALTER TABLE edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: TABLE surveysectionresponsestafftargetassociation; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.surveysectionresponsestafftargetassociation IS 'This association provides information about the survey section and the staff the survey section is about.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.namespace; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.namespace IS 'Namespace for the survey.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.staffusi; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.staffusi IS 'A unique alphanumeric code assigned to a staff.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyidentifier IS 'The unique survey identifier from the survey tool.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveyresponseidentifier; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveyresponseidentifier IS 'The identifier of the survey typically from the survey application.';


--
-- Name: COLUMN surveysectionresponsestafftargetassociation.surveysectiontitle; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.surveysectionresponsestafftargetassociation.surveysectiontitle IS 'The title or label for the survey section.';


--
-- Name: teachingcredentialbasisdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialbasisdescriptor (
    teachingcredentialbasisdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialbasisdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialbasisdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialbasisdescriptor IS 'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.';


--
-- Name: COLUMN teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialbasisdescriptor.teachingcredentialbasisdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: teachingcredentialdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.teachingcredentialdescriptor (
    teachingcredentialdescriptorid integer NOT NULL
);


ALTER TABLE edfi.teachingcredentialdescriptor OWNER TO postgres;

--
-- Name: TABLE teachingcredentialdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.teachingcredentialdescriptor IS 'This descriptor defines an indication of the category of a legal document giving authorization to perform teaching assignment services.';


--
-- Name: COLUMN teachingcredentialdescriptor.teachingcredentialdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.teachingcredentialdescriptor.teachingcredentialdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: technicalskillsassessmentdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.technicalskillsassessmentdescriptor (
    technicalskillsassessmentdescriptorid integer NOT NULL
);


ALTER TABLE edfi.technicalskillsassessmentdescriptor OWNER TO postgres;

--
-- Name: TABLE technicalskillsassessmentdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.technicalskillsassessmentdescriptor IS 'This descriptor defines the results of technical skills assessment aligned with industry recognized standards.';


--
-- Name: COLUMN technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.technicalskillsassessmentdescriptor.technicalskillsassessmentdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: telephonenumbertypedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.telephonenumbertypedescriptor (
    telephonenumbertypedescriptorid integer NOT NULL
);


ALTER TABLE edfi.telephonenumbertypedescriptor OWNER TO postgres;

--
-- Name: TABLE telephonenumbertypedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.telephonenumbertypedescriptor IS 'The type of communication number listed for an individual.';


--
-- Name: COLUMN telephonenumbertypedescriptor.telephonenumbertypedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.telephonenumbertypedescriptor.telephonenumbertypedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: termdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.termdescriptor (
    termdescriptorid integer NOT NULL
);


ALTER TABLE edfi.termdescriptor OWNER TO postgres;

--
-- Name: TABLE termdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.termdescriptor IS 'This descriptor defines the term of a session during the school year (e.g., Semester).';


--
-- Name: COLUMN termdescriptor.termdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.termdescriptor.termdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaparticipantdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaparticipantdescriptor (
    titleipartaparticipantdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaparticipantdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaparticipantdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaparticipantdescriptor IS 'An indication of the type of Title I program, if any, in which the student is participating and served.';


--
-- Name: COLUMN titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaparticipantdescriptor.titleipartaparticipantdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaprogramservicedescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaprogramservicedescriptor (
    titleipartaprogramservicedescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaprogramservicedescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaprogramservicedescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaprogramservicedescriptor IS 'This descriptor defines the services provided by an education organization to populations of students associated with a Title I Part A program.';


--
-- Name: COLUMN titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaprogramservicedescriptor.titleipartaprogramservicedescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: titleipartaschooldesignationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.titleipartaschooldesignationdescriptor (
    titleipartaschooldesignationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.titleipartaschooldesignationdescriptor OWNER TO postgres;

--
-- Name: TABLE titleipartaschooldesignationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.titleipartaschooldesignationdescriptor IS 'Denotes the Title I Part A designation for the school.';


--
-- Name: COLUMN titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.titleipartaschooldesignationdescriptor.titleipartaschooldesignationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: tribalaffiliationdescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.tribalaffiliationdescriptor (
    tribalaffiliationdescriptorid integer NOT NULL
);


ALTER TABLE edfi.tribalaffiliationdescriptor OWNER TO postgres;

--
-- Name: TABLE tribalaffiliationdescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.tribalaffiliationdescriptor IS 'An American Indian tribe with which an individual is affiliated.';


--
-- Name: COLUMN tribalaffiliationdescriptor.tribalaffiliationdescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.tribalaffiliationdescriptor.tribalaffiliationdescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: visadescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.visadescriptor (
    visadescriptorid integer NOT NULL
);


ALTER TABLE edfi.visadescriptor OWNER TO postgres;

--
-- Name: TABLE visadescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.visadescriptor IS 'An indicator of a non-U.S. citizen''s Visa type.';


--
-- Name: COLUMN visadescriptor.visadescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.visadescriptor.visadescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: weapondescriptor; Type: TABLE; Schema: edfi; Owner: postgres
--

CREATE TABLE edfi.weapondescriptor (
    weapondescriptorid integer NOT NULL
);


ALTER TABLE edfi.weapondescriptor OWNER TO postgres;

--
-- Name: TABLE weapondescriptor; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON TABLE edfi.weapondescriptor IS 'This descriptor defines the types of weapon used during an incident.';


--
-- Name: COLUMN weapondescriptor.weapondescriptorid; Type: COMMENT; Schema: edfi; Owner: postgres
--

COMMENT ON COLUMN edfi.weapondescriptor.weapondescriptorid IS 'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.';


--
-- Name: descriptorequivalencegroup; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroup (
    descriptorequivalencegroupid uuid DEFAULT gen_random_uuid() NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroup OWNER TO postgres;

--
-- Name: descriptorequivalencegroupassignment; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupassignment (
    descriptorid integer NOT NULL,
    descriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupassignment OWNER TO postgres;

--
-- Name: descriptorequivalencegroupgeneralization; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.descriptorequivalencegroupgeneralization (
    descriptorequivalencegroupid uuid NOT NULL,
    generalizationdescriptorequivalencegroupid uuid NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.descriptorequivalencegroupgeneralization OWNER TO postgres;

--
-- Name: operationalcontext; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontext (
    operationalcontexturi character varying(255) NOT NULL,
    displayname character varying(100) NOT NULL,
    organizationname character varying(50),
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    lastmodifieddate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT gen_random_uuid() NOT NULL
);


ALTER TABLE interop.operationalcontext OWNER TO postgres;

--
-- Name: operationalcontextdescriptorusage; Type: TABLE; Schema: interop; Owner: postgres
--

CREATE TABLE interop.operationalcontextdescriptorusage (
    operationalcontexturi character varying(255) NOT NULL,
    descriptorid integer NOT NULL,
    createdate timestamp without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE interop.operationalcontextdescriptorusage OWNER TO postgres;

--
-- Name: operationalcontextsupport; Type: VIEW; Schema: interop; Owner: postgres
--

CREATE VIEW interop.operationalcontextsupport AS
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup deg ON ((sdega.descriptorequivalencegroupid = deg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((deg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((td.namespace)::text || '#'::text) || (td.codevalue)::text) AS targetdescriptoruri,
    1 AS isgeneralized
   FROM (((((((edfi.descriptor sd
     JOIN interop.descriptorequivalencegroupassignment sdega ON ((sd.descriptorid = sdega.descriptorid)))
     JOIN interop.descriptorequivalencegroup sdeg ON ((sdega.descriptorequivalencegroupid = sdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupgeneralization degg ON ((sdeg.descriptorequivalencegroupid = degg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroup tdeg ON ((degg.generalizationdescriptorequivalencegroupid = tdeg.descriptorequivalencegroupid)))
     JOIN interop.descriptorequivalencegroupassignment tdega ON ((tdeg.descriptorequivalencegroupid = tdega.descriptorequivalencegroupid)))
     JOIN edfi.descriptor td ON ((tdega.descriptorid = td.descriptorid)))
     JOIN interop.operationalcontextdescriptorusage tocd ON ((td.descriptorid = tocd.descriptorid)))
UNION
 SELECT (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS sourcedescriptoruri,
    tocd.operationalcontexturi AS targetoperationalcontexturi,
    (((sd.namespace)::text || '#'::text) || (sd.codevalue)::text) AS targetdescriptoruri,
    0 AS isgeneralized
   FROM (edfi.descriptor sd
     JOIN interop.operationalcontextdescriptorusage tocd ON ((sd.descriptorid = tocd.descriptorid)));


ALTER TABLE interop.operationalcontextsupport OWNER TO postgres;

--
-- Name: DeployJournal; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."DeployJournal" (
    schemaversionsid integer NOT NULL,
    scriptname character varying(255) NOT NULL,
    applied timestamp without time zone NOT NULL
);


ALTER TABLE public."DeployJournal" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public."DeployJournal_schemaversionsid_seq"
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."DeployJournal_schemaversionsid_seq" OWNER TO postgres;

--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public."DeployJournal_schemaversionsid_seq" OWNED BY public."DeployJournal".schemaversionsid;


--
-- Name: academicweek; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.academicweek (
    oldschoolid integer NOT NULL,
    oldweekidentifier character varying(80) NOT NULL,
    newschoolid integer,
    newweekidentifier character varying(80),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.academicweek OWNER TO postgres;

--
-- Name: accountabilityrating; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.accountabilityrating (
    oldeducationorganizationid integer NOT NULL,
    oldratingtitle character varying(60) NOT NULL,
    oldschoolyear smallint NOT NULL,
    neweducationorganizationid integer,
    newratingtitle character varying(60),
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.accountabilityrating OWNER TO postgres;

--
-- Name: assessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessment OWNER TO postgres;

--
-- Name: assessmentitem; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessmentitem (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldidentificationcode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newidentificationcode character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessmentitem OWNER TO postgres;

--
-- Name: assessmentscorerangelearningstandard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.assessmentscorerangelearningstandard (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldscorerangeid character varying(60) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    newscorerangeid character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.assessmentscorerangelearningstandard OWNER TO postgres;

--
-- Name: balancesheetdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.balancesheetdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.balancesheetdimension OWNER TO postgres;

--
-- Name: bellschedule; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.bellschedule (
    oldbellschedulename character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    newbellschedulename character varying(60),
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.bellschedule OWNER TO postgres;

--
-- Name: calendar; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.calendar (
    oldcalendarcode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    newcalendarcode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.calendar OWNER TO postgres;

--
-- Name: calendardate; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.calendardate (
    oldcalendarcode character varying(60) NOT NULL,
    olddate date NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    newcalendarcode character varying(60),
    newdate date,
    newschoolid integer,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.calendardate OWNER TO postgres;

--
-- Name: chartofaccount; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.chartofaccount (
    oldaccountidentifier character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.chartofaccount OWNER TO postgres;

--
-- Name: classperiod; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.classperiod (
    oldclassperiodname character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    newclassperiodname character varying(60),
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.classperiod OWNER TO postgres;

--
-- Name: cohort; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.cohort (
    oldcohortidentifier character varying(20) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    newcohortidentifier character varying(20),
    neweducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.cohort OWNER TO postgres;

--
-- Name: communityproviderlicense; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.communityproviderlicense (
    oldcommunityproviderid integer NOT NULL,
    oldlicenseidentifier character varying(20) NOT NULL,
    oldlicensingorganization character varying(75) NOT NULL,
    newcommunityproviderid integer,
    newlicenseidentifier character varying(20),
    newlicensingorganization character varying(75),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.communityproviderlicense OWNER TO postgres;

--
-- Name: competencyobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.competencyobjective (
    oldeducationorganizationid integer NOT NULL,
    oldobjective character varying(60) NOT NULL,
    oldobjectivegradeleveldescriptorid integer NOT NULL,
    oldobjectivegradeleveldescriptornamespace character varying(255) NOT NULL,
    oldobjectivegradeleveldescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newobjective character varying(60),
    newobjectivegradeleveldescriptorid integer,
    newobjectivegradeleveldescriptornamespace character varying(255),
    newobjectivegradeleveldescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.competencyobjective OWNER TO postgres;

--
-- Name: course; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.course (
    oldcoursecode character varying(60) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    newcoursecode character varying(60),
    neweducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.course OWNER TO postgres;

--
-- Name: courseoffering; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.courseoffering (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.courseoffering OWNER TO postgres;

--
-- Name: coursetranscript; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.coursetranscript (
    oldcourseattemptresultdescriptorid integer NOT NULL,
    oldcourseattemptresultdescriptornamespace character varying(255) NOT NULL,
    oldcourseattemptresultdescriptorcodevalue character varying(50) NOT NULL,
    oldcoursecode character varying(60) NOT NULL,
    oldcourseeducationorganizationid integer NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    newcourseattemptresultdescriptorid integer,
    newcourseattemptresultdescriptornamespace character varying(255),
    newcourseattemptresultdescriptorcodevalue character varying(50),
    newcoursecode character varying(60),
    newcourseeducationorganizationid integer,
    neweducationorganizationid integer,
    newschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.coursetranscript OWNER TO postgres;

--
-- Name: credential; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.credential (
    oldcredentialidentifier character varying(60) NOT NULL,
    oldstateofissuestateabbreviationdescriptorid integer NOT NULL,
    oldstateofissuestateabbreviationdescriptornamespace character varying(255) NOT NULL,
    oldstateofissuestateabbreviationdescriptorcodevalue character varying(50) NOT NULL,
    newcredentialidentifier character varying(60),
    newstateofissuestateabbreviationdescriptorid integer,
    newstateofissuestateabbreviationdescriptornamespace character varying(255),
    newstateofissuestateabbreviationdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.credential OWNER TO postgres;

--
-- Name: descriptor; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.descriptor (
    olddescriptorid integer NOT NULL,
    oldcodevalue character varying(50) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newdescriptorid integer,
    newcodevalue character varying(50),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.descriptor OWNER TO postgres;

--
-- Name: descriptormapping; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.descriptormapping (
    oldmappednamespace character varying(255) NOT NULL,
    oldmappedvalue character varying(50) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldvalue character varying(50) NOT NULL,
    newmappednamespace character varying(255),
    newmappedvalue character varying(50),
    newnamespace character varying(255),
    newvalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.descriptormapping OWNER TO postgres;

--
-- Name: disciplineaction; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.disciplineaction (
    olddisciplineactionidentifier character varying(32) NOT NULL,
    olddisciplinedate date NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldresponsibilityschoolid integer NOT NULL,
    newdisciplineactionidentifier character varying(32),
    newdisciplinedate date,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.disciplineaction OWNER TO postgres;

--
-- Name: disciplineincident; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.disciplineincident (
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    newincidentidentifier character varying(20),
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.disciplineincident OWNER TO postgres;

--
-- Name: educationcontent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationcontent (
    oldcontentidentifier character varying(225) NOT NULL,
    newcontentidentifier character varying(225),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationcontent OWNER TO postgres;

--
-- Name: educationorganization; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganization (
    oldeducationorganizationid integer NOT NULL,
    neweducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganization OWNER TO postgres;

--
-- Name: educationorganizationinterventionprescriptionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationinterventionprescriptionassociation (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionprescriptioneducationorganizationid integer NOT NULL,
    oldinterventionprescriptionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newinterventionprescriptioneducationorganizationid integer,
    newinterventionprescriptionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationinterventionprescriptionassociation OWNER TO postgres;

--
-- Name: educationorganizationnetworkassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationnetworkassociation (
    oldeducationorganizationnetworkid integer NOT NULL,
    oldmembereducationorganizationid integer NOT NULL,
    neweducationorganizationnetworkid integer,
    newmembereducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationnetworkassociation OWNER TO postgres;

--
-- Name: educationorganizationpeerassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.educationorganizationpeerassociation (
    oldeducationorganizationid integer NOT NULL,
    oldpeereducationorganizationid integer NOT NULL,
    neweducationorganizationid integer,
    newpeereducationorganizationid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.educationorganizationpeerassociation OWNER TO postgres;

--
-- Name: feederschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.feederschoolassociation (
    oldbegindate date NOT NULL,
    oldfeederschoolid integer NOT NULL,
    oldschoolid integer NOT NULL,
    newbegindate date,
    newfeederschoolid integer,
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.feederschoolassociation OWNER TO postgres;

--
-- Name: functiondimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.functiondimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.functiondimension OWNER TO postgres;

--
-- Name: funddimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.funddimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.funddimension OWNER TO postgres;

--
-- Name: generalstudentprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.generalstudentprogramassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldprogrameducationorganizationid integer NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid integer,
    newprogrameducationorganizationid integer,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.generalstudentprogramassociation OWNER TO postgres;

--
-- Name: grade; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.grade (
    oldbegindate date NOT NULL,
    oldgradetypedescriptorid integer NOT NULL,
    oldgradetypedescriptornamespace character varying(255) NOT NULL,
    oldgradetypedescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldgradingperiodsequence integer NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newgradetypedescriptorid integer,
    newgradetypedescriptornamespace character varying(255),
    newgradetypedescriptorcodevalue character varying(50),
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodschoolyear smallint,
    newgradingperiodsequence integer,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.grade OWNER TO postgres;

--
-- Name: gradebookentry; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.gradebookentry (
    oldgradebookentryidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newgradebookentryidentifier character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.gradebookentry OWNER TO postgres;

--
-- Name: gradingperiod; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.gradingperiod (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldperiodsequence integer NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newperiodsequence integer,
    newschoolid integer,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.gradingperiod OWNER TO postgres;

--
-- Name: graduationplan; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.graduationplan (
    oldeducationorganizationid integer NOT NULL,
    oldgraduationplantypedescriptorid integer NOT NULL,
    oldgraduationplantypedescriptornamespace character varying(255) NOT NULL,
    oldgraduationplantypedescriptorcodevalue character varying(50) NOT NULL,
    oldgraduationschoolyear smallint NOT NULL,
    neweducationorganizationid integer,
    newgraduationplantypedescriptorid integer,
    newgraduationplantypedescriptornamespace character varying(255),
    newgraduationplantypedescriptorcodevalue character varying(50),
    newgraduationschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.graduationplan OWNER TO postgres;

--
-- Name: intervention; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.intervention (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newinterventionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.intervention OWNER TO postgres;

--
-- Name: interventionprescription; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.interventionprescription (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionprescriptionidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newinterventionprescriptionidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.interventionprescription OWNER TO postgres;

--
-- Name: interventionstudy; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.interventionstudy (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionstudyidentificationcode character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newinterventionstudyidentificationcode character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.interventionstudy OWNER TO postgres;

--
-- Name: learningobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningobjective (
    oldlearningobjectiveid character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newlearningobjectiveid character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningobjective OWNER TO postgres;

--
-- Name: learningstandard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningstandard (
    oldlearningstandardid character varying(60) NOT NULL,
    newlearningstandardid character varying(60),
    id uuid NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningstandard OWNER TO postgres;

--
-- Name: learningstandardequivalenceassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.learningstandardequivalenceassociation (
    oldnamespace character varying(255) NOT NULL,
    oldsourcelearningstandardid character varying(60) NOT NULL,
    oldtargetlearningstandardid character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsourcelearningstandardid character varying(60),
    newtargetlearningstandardid character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.learningstandardequivalenceassociation OWNER TO postgres;

--
-- Name: localaccount; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localaccount (
    oldaccountidentifier character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localaccount OWNER TO postgres;

--
-- Name: localactual; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localactual (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localactual OWNER TO postgres;

--
-- Name: localbudget; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localbudget (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localbudget OWNER TO postgres;

--
-- Name: localcontractedstaff; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localcontractedstaff (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localcontractedstaff OWNER TO postgres;

--
-- Name: localencumbrance; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localencumbrance (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localencumbrance OWNER TO postgres;

--
-- Name: localpayroll; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.localpayroll (
    oldaccountidentifier character varying(50) NOT NULL,
    oldasofdate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldfiscalyear integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newaccountidentifier character varying(50),
    newasofdate date,
    neweducationorganizationid integer,
    newfiscalyear integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.localpayroll OWNER TO postgres;

--
-- Name: location; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.location (
    oldclassroomidentificationcode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    newclassroomidentificationcode character varying(60),
    newschoolid integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.location OWNER TO postgres;

--
-- Name: objectdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.objectdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.objectdimension OWNER TO postgres;

--
-- Name: objectiveassessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.objectiveassessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldidentificationcode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    newassessmentidentifier character varying(60),
    newidentificationcode character varying(60),
    newnamespace character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.objectiveassessment OWNER TO postgres;

--
-- Name: openstaffposition; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.openstaffposition (
    oldeducationorganizationid integer NOT NULL,
    oldrequisitionnumber character varying(20) NOT NULL,
    neweducationorganizationid integer,
    newrequisitionnumber character varying(20),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.openstaffposition OWNER TO postgres;

--
-- Name: operationalunitdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.operationalunitdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.operationalunitdimension OWNER TO postgres;

--
-- Name: parent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.parent (
    oldparentusi integer NOT NULL,
    oldparentuniqueid character varying(32) NOT NULL,
    newparentusi integer,
    newparentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.parent OWNER TO postgres;

--
-- Name: person; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.person (
    oldpersonid character varying(32) NOT NULL,
    oldsourcesystemdescriptorid integer NOT NULL,
    oldsourcesystemdescriptornamespace character varying(255) NOT NULL,
    oldsourcesystemdescriptorcodevalue character varying(50) NOT NULL,
    newpersonid character varying(32),
    newsourcesystemdescriptorid integer,
    newsourcesystemdescriptornamespace character varying(255),
    newsourcesystemdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.person OWNER TO postgres;

--
-- Name: postsecondaryevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.postsecondaryevent (
    oldeventdate date NOT NULL,
    oldpostsecondaryeventcategorydescriptorid integer NOT NULL,
    oldpostsecondaryeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldpostsecondaryeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweventdate date,
    newpostsecondaryeventcategorydescriptorid integer,
    newpostsecondaryeventcategorydescriptornamespace character varying(255),
    newpostsecondaryeventcategorydescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.postsecondaryevent OWNER TO postgres;

--
-- Name: program; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.program (
    oldeducationorganizationid integer NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.program OWNER TO postgres;

--
-- Name: programdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.programdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.programdimension OWNER TO postgres;

--
-- Name: projectdimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.projectdimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.projectdimension OWNER TO postgres;

--
-- Name: reportcard; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.reportcard (
    oldeducationorganizationid integer NOT NULL,
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodschoolid integer NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldgradingperiodsequence integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid integer,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodschoolid integer,
    newgradingperiodschoolyear smallint,
    newgradingperiodsequence integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.reportcard OWNER TO postgres;

--
-- Name: restraintevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.restraintevent (
    oldrestrainteventidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newrestrainteventidentifier character varying(20),
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.restraintevent OWNER TO postgres;

--
-- Name: schoolyeartype; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.schoolyeartype (
    oldschoolyear smallint NOT NULL,
    newschoolyear smallint,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.schoolyeartype OWNER TO postgres;

--
-- Name: section; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.section (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.section OWNER TO postgres;

--
-- Name: sectionattendancetakenevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.sectionattendancetakenevent (
    oldcalendarcode character varying(60) NOT NULL,
    olddate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newcalendarcode character varying(60),
    newdate date,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.sectionattendancetakenevent OWNER TO postgres;

--
-- Name: session; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.session (
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    newschoolid integer,
    newschoolyear smallint,
    newsessionname character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.session OWNER TO postgres;

--
-- Name: sourcedimension; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.sourcedimension (
    oldcode character varying(16) NOT NULL,
    oldfiscalyear integer NOT NULL,
    newcode character varying(16),
    newfiscalyear integer,
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.sourcedimension OWNER TO postgres;

--
-- Name: staff; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staff (
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staff OWNER TO postgres;

--
-- Name: staffabsenceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffabsenceevent (
    oldabsenceeventcategorydescriptorid integer NOT NULL,
    oldabsenceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldabsenceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newabsenceeventcategorydescriptorid integer,
    newabsenceeventcategorydescriptornamespace character varying(255),
    newabsenceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffabsenceevent OWNER TO postgres;

--
-- Name: staffcohortassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffcohortassociation (
    oldbegindate date NOT NULL,
    oldcohortidentifier character varying(20) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newcohortidentifier character varying(20),
    neweducationorganizationid integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffcohortassociation OWNER TO postgres;

--
-- Name: staffdisciplineincidentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffdisciplineincidentassociation (
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(20),
    newschoolid integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffdisciplineincidentassociation OWNER TO postgres;

--
-- Name: staffeducationorganizationcontactassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffeducationorganizationcontactassociation (
    oldcontacttitle character varying(75) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newcontacttitle character varying(75),
    neweducationorganizationid integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffeducationorganizationcontactassociation OWNER TO postgres;

--
-- Name: staffleave; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffleave (
    oldbegindate date NOT NULL,
    oldstaffleaveeventcategorydescriptorid integer NOT NULL,
    oldstaffleaveeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldstaffleaveeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newstaffleaveeventcategorydescriptorid integer,
    newstaffleaveeventcategorydescriptornamespace character varying(255),
    newstaffleaveeventcategorydescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffleave OWNER TO postgres;

--
-- Name: staffprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffprogramassociation (
    oldbegindate date NOT NULL,
    oldprogrameducationorganizationid integer NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newprogrameducationorganizationid integer,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffprogramassociation OWNER TO postgres;

--
-- Name: staffschoolassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffschoolassociation (
    oldprogramassignmentdescriptorid integer NOT NULL,
    oldprogramassignmentdescriptornamespace character varying(255) NOT NULL,
    oldprogramassignmentdescriptorcodevalue character varying(50) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newprogramassignmentdescriptorid integer,
    newprogramassignmentdescriptornamespace character varying(255),
    newprogramassignmentdescriptorcodevalue character varying(50),
    newschoolid integer,
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffschoolassociation OWNER TO postgres;

--
-- Name: staffsectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.staffsectionassociation (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.staffsectionassociation OWNER TO postgres;

--
-- Name: student; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.student (
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.student OWNER TO postgres;

--
-- Name: studentacademicrecord; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentacademicrecord (
    oldeducationorganizationid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    oldtermdescriptorid integer NOT NULL,
    oldtermdescriptornamespace character varying(255) NOT NULL,
    oldtermdescriptorcodevalue character varying(50) NOT NULL,
    neweducationorganizationid integer,
    newschoolyear smallint,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    newtermdescriptorid integer,
    newtermdescriptornamespace character varying(255),
    newtermdescriptorcodevalue character varying(50),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentacademicrecord OWNER TO postgres;

--
-- Name: studentassessment; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentassessment (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentassessmentidentifier character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newassessmentidentifier character varying(60),
    newnamespace character varying(255),
    newstudentassessmentidentifier character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentassessment OWNER TO postgres;

--
-- Name: studentassessmenteducationorganizationassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentassessmenteducationorganizationassociation (
    oldassessmentidentifier character varying(60) NOT NULL,
    oldeducationorganizationassociationtypedescriptorid integer NOT NULL,
    oldeducationorganizationassociationtypedescriptornamespace character varying(255) NOT NULL,
    oldeducationorganizationassociationtypedescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentassessmentidentifier character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newassessmentidentifier character varying(60),
    neweducationorganizationassociationtypedescriptorid integer,
    neweducationorganizationassociationtypedescriptornamespace character varying(255),
    neweducationorganizationassociationtypedescriptorcodevalue character varying(50),
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newstudentassessmentidentifier character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentassessmenteducationorganizationassociation OWNER TO postgres;

--
-- Name: studentcohortassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcohortassociation (
    oldbegindate date NOT NULL,
    oldcohortidentifier character varying(20) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newcohortidentifier character varying(20),
    neweducationorganizationid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcohortassociation OWNER TO postgres;

--
-- Name: studentcompetencyobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentcompetencyobjective (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodschoolid integer NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldgradingperiodsequence integer NOT NULL,
    oldobjective character varying(60) NOT NULL,
    oldobjectiveeducationorganizationid integer NOT NULL,
    oldobjectivegradeleveldescriptorid integer NOT NULL,
    oldobjectivegradeleveldescriptornamespace character varying(255) NOT NULL,
    oldobjectivegradeleveldescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodschoolid integer,
    newgradingperiodschoolyear smallint,
    newgradingperiodsequence integer,
    newobjective character varying(60),
    newobjectiveeducationorganizationid integer,
    newobjectivegradeleveldescriptorid integer,
    newobjectivegradeleveldescriptornamespace character varying(255),
    newobjectivegradeleveldescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentcompetencyobjective OWNER TO postgres;

--
-- Name: studentdisciplineincidentassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentassociation (
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(20),
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentassociation OWNER TO postgres;

--
-- Name: studentdisciplineincidentbehaviorassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentbehaviorassociation (
    oldbehaviordescriptorid integer NOT NULL,
    oldbehaviordescriptornamespace character varying(255) NOT NULL,
    oldbehaviordescriptorcodevalue character varying(50) NOT NULL,
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbehaviordescriptorid integer,
    newbehaviordescriptornamespace character varying(255),
    newbehaviordescriptorcodevalue character varying(50),
    newincidentidentifier character varying(20),
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentbehaviorassociation OWNER TO postgres;

--
-- Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation (
    oldincidentidentifier character varying(20) NOT NULL,
    oldschoolid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newincidentidentifier character varying(20),
    newschoolid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation OWNER TO postgres;

--
-- Name: studenteducationorganizationassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studenteducationorganizationassociation (
    oldeducationorganizationid integer NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid integer,
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studenteducationorganizationassociation OWNER TO postgres;

--
-- Name: studenteducationorganizationresponsibilityassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studenteducationorganizationresponsibilityassociation (
    oldbegindate date NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldresponsibilitydescriptorid integer NOT NULL,
    oldresponsibilitydescriptornamespace character varying(255) NOT NULL,
    oldresponsibilitydescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    neweducationorganizationid integer,
    newresponsibilitydescriptorid integer,
    newresponsibilitydescriptornamespace character varying(255),
    newresponsibilitydescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studenteducationorganizationresponsibilityassociation OWNER TO postgres;

--
-- Name: studentgradebookentry; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentgradebookentry (
    oldgradebookentryidentifier character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradebookentryidentifier character varying(60),
    newnamespace character varying(255),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentgradebookentry OWNER TO postgres;

--
-- Name: studentinterventionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentinterventionassociation (
    oldeducationorganizationid integer NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    neweducationorganizationid integer,
    newinterventionidentificationcode character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentinterventionassociation OWNER TO postgres;

--
-- Name: studentinterventionattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentinterventionattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldeventdate date NOT NULL,
    oldinterventionidentificationcode character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweducationorganizationid integer,
    neweventdate date,
    newinterventionidentificationcode character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentinterventionattendanceevent OWNER TO postgres;

--
-- Name: studentlearningobjective; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentlearningobjective (
    oldgradingperioddescriptorid integer NOT NULL,
    oldgradingperioddescriptornamespace character varying(255) NOT NULL,
    oldgradingperioddescriptorcodevalue character varying(50) NOT NULL,
    oldgradingperiodschoolid integer NOT NULL,
    oldgradingperiodschoolyear smallint NOT NULL,
    oldgradingperiodsequence integer NOT NULL,
    oldlearningobjectiveid character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newgradingperioddescriptorid integer,
    newgradingperioddescriptornamespace character varying(255),
    newgradingperioddescriptorcodevalue character varying(50),
    newgradingperiodschoolid integer,
    newgradingperiodschoolyear smallint,
    newgradingperiodsequence integer,
    newlearningobjectiveid character varying(60),
    newnamespace character varying(255),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentlearningobjective OWNER TO postgres;

--
-- Name: studentprogramattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentprogramattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldeventdate date NOT NULL,
    oldprogrameducationorganizationid integer NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweducationorganizationid integer,
    neweventdate date,
    newprogrameducationorganizationid integer,
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentprogramattendanceevent OWNER TO postgres;

--
-- Name: studentschoolattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentschoolattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newschoolid integer,
    newschoolyear smallint,
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentschoolattendanceevent OWNER TO postgres;

--
-- Name: studentsectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentsectionassociation (
    oldbegindate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newbegindate date,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentsectionassociation OWNER TO postgres;

--
-- Name: studentsectionattendanceevent; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.studentsectionattendanceevent (
    oldattendanceeventcategorydescriptorid integer NOT NULL,
    oldattendanceeventcategorydescriptornamespace character varying(255) NOT NULL,
    oldattendanceeventcategorydescriptorcodevalue character varying(50) NOT NULL,
    oldeventdate date NOT NULL,
    oldlocalcoursecode character varying(60) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldstudentusi integer NOT NULL,
    oldstudentuniqueid character varying(32) NOT NULL,
    newattendanceeventcategorydescriptorid integer,
    newattendanceeventcategorydescriptornamespace character varying(255),
    newattendanceeventcategorydescriptorcodevalue character varying(50),
    neweventdate date,
    newlocalcoursecode character varying(60),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newstudentusi integer,
    newstudentuniqueid character varying(32),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.studentsectionattendanceevent OWNER TO postgres;

--
-- Name: survey; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.survey (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.survey OWNER TO postgres;

--
-- Name: surveycourseassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveycourseassociation (
    oldcoursecode character varying(60) NOT NULL,
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newcoursecode character varying(60),
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveycourseassociation OWNER TO postgres;

--
-- Name: surveyprogramassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyprogramassociation (
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldprogramname character varying(60) NOT NULL,
    oldprogramtypedescriptorid integer NOT NULL,
    oldprogramtypedescriptornamespace character varying(255) NOT NULL,
    oldprogramtypedescriptorcodevalue character varying(50) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newprogramname character varying(60),
    newprogramtypedescriptorid integer,
    newprogramtypedescriptornamespace character varying(255),
    newprogramtypedescriptorcodevalue character varying(50),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyprogramassociation OWNER TO postgres;

--
-- Name: surveyquestion; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyquestion (
    oldnamespace character varying(255) NOT NULL,
    oldquestioncode character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newquestioncode character varying(60),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyquestion OWNER TO postgres;

--
-- Name: surveyquestionresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyquestionresponse (
    oldnamespace character varying(255) NOT NULL,
    oldquestioncode character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newquestioncode character varying(60),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyquestionresponse OWNER TO postgres;

--
-- Name: surveyresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponse (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponse OWNER TO postgres;

--
-- Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation (
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveyresponsestafftargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveyresponsestafftargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    newnamespace character varying(255),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveyresponsestafftargetassociation OWNER TO postgres;

--
-- Name: surveysection; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysection (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysection OWNER TO postgres;

--
-- Name: surveysectionassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionassociation (
    oldlocalcoursecode character varying(60) NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldschoolid integer NOT NULL,
    oldschoolyear smallint NOT NULL,
    oldsectionidentifier character varying(255) NOT NULL,
    oldsessionname character varying(60) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    newlocalcoursecode character varying(60),
    newnamespace character varying(255),
    newschoolid integer,
    newschoolyear smallint,
    newsectionidentifier character varying(255),
    newsessionname character varying(60),
    newsurveyidentifier character varying(60),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionassociation OWNER TO postgres;

--
-- Name: surveysectionresponse; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponse (
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponse OWNER TO postgres;

--
-- Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation (
    oldeducationorganizationid integer NOT NULL,
    oldnamespace character varying(255) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    neweducationorganizationid integer,
    newnamespace character varying(255),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation OWNER TO postgres;

--
-- Name: surveysectionresponsestafftargetassociation; Type: TABLE; Schema: tracked_changes_edfi; Owner: postgres
--

CREATE TABLE tracked_changes_edfi.surveysectionresponsestafftargetassociation (
    oldnamespace character varying(255) NOT NULL,
    oldstaffusi integer NOT NULL,
    oldstaffuniqueid character varying(32) NOT NULL,
    oldsurveyidentifier character varying(60) NOT NULL,
    oldsurveyresponseidentifier character varying(60) NOT NULL,
    oldsurveysectiontitle character varying(255) NOT NULL,
    newnamespace character varying(255),
    newstaffusi integer,
    newstaffuniqueid character varying(32),
    newsurveyidentifier character varying(60),
    newsurveyresponseidentifier character varying(60),
    newsurveysectiontitle character varying(255),
    id uuid NOT NULL,
    changeversion bigint NOT NULL,
    discriminator character varying(128),
    createdate timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE tracked_changes_edfi.surveysectionresponsestafftargetassociation OWNER TO postgres;

--
-- Name: descriptor descriptorid; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor ALTER COLUMN descriptorid SET DEFAULT nextval('edfi.descriptor_descriptorid_seq'::regclass);


--
-- Name: parent parentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent ALTER COLUMN parentusi SET DEFAULT nextval('edfi.parent_parentusi_seq'::regclass);


--
-- Name: staff staffusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff ALTER COLUMN staffusi SET DEFAULT nextval('edfi.staff_staffusi_seq'::regclass);


--
-- Name: student studentusi; Type: DEFAULT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student ALTER COLUMN studentusi SET DEFAULT nextval('edfi.student_studentusi_seq'::regclass);


--
-- Name: DeployJournal schemaversionsid; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal" ALTER COLUMN schemaversionsid SET DEFAULT nextval('public."DeployJournal_schemaversionsid_seq"'::regclass);


--
-- Data for Name: educationorganizationidtoeducationorganizationid; Type: TABLE DATA; Schema: auth; Owner: postgres
--

COPY auth.educationorganizationidtoeducationorganizationid (sourceeducationorganizationid, targeteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: snapshot; Type: TABLE DATA; Schema: changes; Owner: postgres
--

COPY changes.snapshot (snapshotidentifier, snapshotdatetime, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: absenceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.absenceeventcategorydescriptor (absenceeventcategorydescriptorid) FROM stdin;
1
4
5
7
9
11
2
3
6
8
10
12
\.


--
-- Data for Name: academichonorcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academichonorcategorydescriptor (academichonorcategorydescriptorid) FROM stdin;
14
15
17
19
22
23
26
28
29
13
16
18
20
21
24
25
27
30
\.


--
-- Data for Name: academicsubjectdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicsubjectdescriptor (academicsubjectdescriptorid) FROM stdin;
32
33
35
38
40
42
45
47
49
31
34
36
37
39
41
43
44
46
48
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.academicweek (schoolid, weekidentifier, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accommodationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accommodationdescriptor (accommodationdescriptorid) FROM stdin;
50
51
52
53
54
55
56
57
58
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accountabilityrating (educationorganizationid, ratingtitle, schoolyear, rating, ratingdate, ratingorganization, ratingprogram, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: accounttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.accounttypedescriptor (accounttypedescriptorid) FROM stdin;
59
60
61
\.


--
-- Data for Name: achievementcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.achievementcategorydescriptor (achievementcategorydescriptorid) FROM stdin;
62
63
64
65
66
67
68
69
70
71
72
73
\.


--
-- Data for Name: additionalcredittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.additionalcredittypedescriptor (additionalcredittypedescriptorid) FROM stdin;
74
75
76
77
78
\.


--
-- Data for Name: addresstypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.addresstypedescriptor (addresstypedescriptorid) FROM stdin;
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
\.


--
-- Data for Name: administrationenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrationenvironmentdescriptor (administrationenvironmentdescriptorid) FROM stdin;
95
94
96
97
\.


--
-- Data for Name: administrativefundingcontroldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.administrativefundingcontroldescriptor (administrativefundingcontroldescriptorid) FROM stdin;
98
99
100
\.


--
-- Data for Name: ancestryethnicorigindescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.ancestryethnicorigindescriptor (ancestryethnicorigindescriptorid) FROM stdin;
102
101
103
104
105
106
107
108
109
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessment (assessmentidentifier, namespace, assessmenttitle, assessmentcategorydescriptorid, assessmentform, assessmentversion, revisiondate, maxrawscore, nomenclature, assessmentfamily, educationorganizationid, adaptiveassessment, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentacademicsubject (academicsubjectdescriptorid, assessmentidentifier, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentassessedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentassessedgradelevel (assessmentidentifier, gradeleveldescriptorid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcategorydescriptor (assessmentcategorydescriptorid) FROM stdin;
111
110
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
\.


--
-- Data for Name: assessmentcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandard (assessmentidentifier, namespace, title, version, uri, publicationdate, publicationyear, publicationstatusdescriptorid, mandatingeducationorganizationid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentcontentstandardauthor (assessmentidentifier, author, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationcode (assessmentidentificationsystemdescriptorid, assessmentidentifier, namespace, identificationcode, assigningorganizationidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentidentificationsystemdescriptor (assessmentidentificationsystemdescriptorid) FROM stdin;
154
155
156
157
158
159
160
161
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitem (assessmentidentifier, identificationcode, namespace, assessmentitemcategorydescriptorid, maxrawscore, itemtext, expectedtimeassessed, nomenclature, assessmentitemuri, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentitemcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemcategorydescriptor (assessmentitemcategorydescriptorid) FROM stdin;
163
162
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
\.


--
-- Data for Name: assessmentitemlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemlearningstandard (assessmentidentifier, identificationcode, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitempossibleresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitempossibleresponse (assessmentidentifier, identificationcode, namespace, responsevalue, responsedescription, correctresponse, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitemresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentitemresultdescriptor (assessmentitemresultdescriptorid) FROM stdin;
185
184
186
187
188
189
\.


--
-- Data for Name: assessmentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentlanguage (assessmentidentifier, languagedescriptorid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid, minimumscore, maximumscore, resultdatatypetypedescriptorid, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperiod (assessmentidentifier, assessmentperioddescriptorid, namespace, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentperioddescriptor (assessmentperioddescriptorid) FROM stdin;
191
190
192
193
194
195
\.


--
-- Data for Name: assessmentplatformtype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentplatformtype (assessmentidentifier, namespace, platformtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentprogram (assessmentidentifier, educationorganizationid, namespace, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentreportingmethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentreportingmethoddescriptor (assessmentreportingmethoddescriptorid) FROM stdin;
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
\.


--
-- Data for Name: assessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscore (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandard (assessmentidentifier, namespace, scorerangeid, assessmentreportingmethoddescriptorid, minimumscore, maximumscore, identificationcode, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandardlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentscorerangelearningstandardlearningstandard (assessmentidentifier, learningstandardid, namespace, scorerangeid, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assessmentsection (assessmentidentifier, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: assignmentlatestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.assignmentlatestatusdescriptor (assignmentlatestatusdescriptorid) FROM stdin;
240
241
\.


--
-- Data for Name: attemptstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attemptstatusdescriptor (attemptstatusdescriptorid) FROM stdin;
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
\.


--
-- Data for Name: attendanceeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.attendanceeventcategorydescriptor (attendanceeventcategorydescriptorid) FROM stdin;
259
260
263
258
261
262
\.


--
-- Data for Name: balancesheetdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.balancesheetdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: balancesheetdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.balancesheetdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: barriertointernetaccessinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.barriertointernetaccessinresidencedescriptor (barriertointernetaccessinresidencedescriptorid) FROM stdin;
265
264
266
267
\.


--
-- Data for Name: behaviordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.behaviordescriptor (behaviordescriptorid) FROM stdin;
269
268
270
271
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedule (bellschedulename, schoolid, alternatedayname, starttime, endtime, totalinstructionaltime, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: bellscheduleclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduleclassperiod (bellschedulename, classperiodname, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: bellscheduledate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellscheduledate (bellschedulename, date, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedulegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.bellschedulegradelevel (bellschedulename, gradeleveldescriptorid, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendar (calendarcode, schoolid, schoolyear, calendartypedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardate (calendarcode, date, schoolid, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: calendardatecalendarevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendardatecalendarevent (calendarcode, calendareventdescriptorid, date, schoolid, schoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: calendareventdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendareventdescriptor (calendareventdescriptorid) FROM stdin;
273
272
274
275
276
277
278
279
280
281
\.


--
-- Data for Name: calendargradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendargradelevel (calendarcode, gradeleveldescriptorid, schoolid, schoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: calendartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.calendartypedescriptor (calendartypedescriptorid) FROM stdin;
283
282
284
285
286
\.


--
-- Data for Name: careerpathwaydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.careerpathwaydescriptor (careerpathwaydescriptorid) FROM stdin;
288
287
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
\.


--
-- Data for Name: charterapprovalagencytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterapprovalagencytypedescriptor (charterapprovalagencytypedescriptorid) FROM stdin;
305
304
306
307
\.


--
-- Data for Name: charterstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.charterstatusdescriptor (charterstatusdescriptorid) FROM stdin;
309
308
310
311
\.


--
-- Data for Name: chartofaccount; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.chartofaccount (accountidentifier, educationorganizationid, fiscalyear, accounttypedescriptorid, accountname, balancesheetcode, functioncode, fundcode, objectcode, operationalunitcode, programcode, projectcode, sourcecode, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: chartofaccountreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.chartofaccountreportingtag (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid, tagvalue, createdate) FROM stdin;
\.


--
-- Data for Name: citizenshipstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.citizenshipstatusdescriptor (citizenshipstatusdescriptorid) FROM stdin;
312
314
313
315
316
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiod (classperiodname, schoolid, officialattendanceperiod, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: classperiodmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classperiodmeetingtime (classperiodname, endtime, schoolid, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: classroompositiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.classroompositiondescriptor (classroompositiondescriptorid) FROM stdin;
317
319
318
320
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohort (cohortidentifier, educationorganizationid, cohortdescription, cohorttypedescriptorid, cohortscopedescriptorid, academicsubjectdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: cohortprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortprogram (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: cohortscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortscopedescriptor (cohortscopedescriptorid) FROM stdin;
322
321
323
324
325
326
327
328
329
\.


--
-- Data for Name: cohorttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohorttypedescriptor (cohorttypedescriptorid) FROM stdin;
331
330
332
333
334
335
336
337
338
339
340
\.


--
-- Data for Name: cohortyeartypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cohortyeartypedescriptor (cohortyeartypedescriptorid) FROM stdin;
342
341
343
344
345
346
347
348
349
350
351
352
\.


--
-- Data for Name: communityorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityorganization (communityorganizationid) FROM stdin;
\.


--
-- Data for Name: communityprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityprovider (communityproviderid, communityorganizationid, providerprofitabilitydescriptorid, providerstatusdescriptorid, providercategorydescriptorid, schoolindicator, licenseexemptindicator) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.communityproviderlicense (communityproviderid, licenseidentifier, licensingorganization, licenseeffectivedate, licenseexpirationdate, licenseissuedate, licensestatusdescriptorid, licensetypedescriptorid, authorizedfacilitycapacity, oldestageauthorizedtoserve, youngestageauthorizedtoserve, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: competencyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyleveldescriptor (competencyleveldescriptorid) FROM stdin;
354
353
355
356
357
358
359
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.competencyobjective (educationorganizationid, objective, objectivegradeleveldescriptorid, competencyobjectiveid, description, successcriteria, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: contacttypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contacttypedescriptor (contacttypedescriptorid) FROM stdin;
360
\.


--
-- Data for Name: contentclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.contentclassdescriptor (contentclassdescriptorid) FROM stdin;
361
362
363
364
365
\.


--
-- Data for Name: continuationofservicesreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.continuationofservicesreasondescriptor (continuationofservicesreasondescriptorid) FROM stdin;
367
366
368
\.


--
-- Data for Name: costratedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.costratedescriptor (costratedescriptorid) FROM stdin;
370
369
\.


--
-- Data for Name: countrydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.countrydescriptor (countrydescriptorid) FROM stdin;
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
514
515
516
517
518
519
520
521
522
523
524
525
526
527
528
529
530
531
532
533
534
535
536
537
538
539
540
541
542
543
544
545
546
547
548
549
550
551
552
553
554
555
556
557
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
581
582
583
584
585
586
587
588
589
590
591
592
593
594
595
596
597
599
601
603
605
607
609
610
612
614
616
617
619
598
600
602
604
606
608
611
613
615
618
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.course (coursecode, educationorganizationid, coursetitle, numberofparts, academicsubjectdescriptorid, coursedescription, timerequiredforcompletion, datecourseadopted, highschoolcourserequirement, coursegpaapplicabilitydescriptorid, coursedefinedbydescriptorid, minimumavailablecredits, minimumavailablecredittypedescriptorid, minimumavailablecreditconversion, maximumavailablecredits, maximumavailablecredittypedescriptorid, maximumavailablecreditconversion, careerpathwaydescriptorid, maxcompletionsforcredit, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseattemptresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseattemptresultdescriptor (courseattemptresultdescriptorid) FROM stdin;
620
622
621
623
\.


--
-- Data for Name: coursecompetencylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursecompetencylevel (competencyleveldescriptorid, coursecode, educationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: coursedefinedbydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursedefinedbydescriptor (coursedefinedbydescriptorid) FROM stdin;
625
627
624
626
\.


--
-- Data for Name: coursegpaapplicabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursegpaapplicabilitydescriptor (coursegpaapplicabilitydescriptorid) FROM stdin;
628
630
629
\.


--
-- Data for Name: courseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationcode (coursecode, courseidentificationsystemdescriptorid, educationorganizationid, identificationcode, assigningorganizationidentificationcode, coursecatalogurl, createdate) FROM stdin;
\.


--
-- Data for Name: courseidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseidentificationsystemdescriptor (courseidentificationsystemdescriptorid) FROM stdin;
631
632
633
634
635
636
637
638
639
\.


--
-- Data for Name: courselearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningobjective (coursecode, educationorganizationid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: courselearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselearningstandard (coursecode, educationorganizationid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristic (coursecode, courselevelcharacteristicdescriptorid, educationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: courselevelcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courselevelcharacteristicdescriptor (courselevelcharacteristicdescriptorid) FROM stdin;
641
642
644
646
648
649
651
653
655
657
658
660
662
640
643
645
647
650
652
654
656
659
661
\.


--
-- Data for Name: courseofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferedgradelevel (coursecode, educationorganizationid, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseoffering (localcoursecode, schoolid, schoolyear, sessionname, localcoursetitle, instructionaltimeplanned, coursecode, educationorganizationid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: courseofferingcourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcourselevelcharacteristic (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingcurriculumused; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingcurriculumused (curriculumuseddescriptorid, localcoursecode, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: courseofferingofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courseofferingofferedgradelevel (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: courserepeatcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.courserepeatcodedescriptor (courserepeatcodedescriptorid) FROM stdin;
663
666
668
664
665
667
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscript (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, attemptedcredits, attemptedcredittypedescriptorid, attemptedcreditconversion, earnedcredits, earnedcredittypedescriptorid, earnedcreditconversion, whentakengradeleveldescriptorid, methodcreditearneddescriptorid, finallettergradeearned, finalnumericgradeearned, courserepeatcodedescriptorid, coursetitle, alternativecoursetitle, alternativecoursecode, externaleducationorganizationid, externaleducationorganizationnameofinstitution, assigningorganizationidentificationcode, coursecatalogurl, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: coursetranscriptacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptacademicsubject (academicsubjectdescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptalternativecourseidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptalternativecourseidentificationcode (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, courseidentificationsystemdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, identificationcode, assigningorganizationidentificationcode, coursecatalogurl, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptcreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptcreditcategory (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, creditcategorydescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptearnedadditionalcredits; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptearnedadditionalcredits (additionalcredittypedescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, credits, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscriptpartialcoursetranscriptawards; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.coursetranscriptpartialcoursetranscriptawards (awarddate, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid, earnedcredits, methodcreditearneddescriptorid, lettergradeearned, numericgradeearned, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credential (credentialidentifier, stateofissuestateabbreviationdescriptorid, effectivedate, expirationdate, credentialfielddescriptorid, issuancedate, credentialtypedescriptorid, teachingcredentialdescriptorid, teachingcredentialbasisdescriptorid, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: credentialacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialacademicsubject (academicsubjectdescriptorid, credentialidentifier, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialendorsement; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialendorsement (credentialendorsement, credentialidentifier, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialfielddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialfielddescriptor (credentialfielddescriptorid) FROM stdin;
669
672
674
676
677
679
681
683
670
671
673
675
678
680
682
\.


--
-- Data for Name: credentialgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialgradelevel (credentialidentifier, gradeleveldescriptorid, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: credentialtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credentialtypedescriptor (credentialtypedescriptorid) FROM stdin;
685
687
684
686
688
\.


--
-- Data for Name: creditcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.creditcategorydescriptor (creditcategorydescriptorid) FROM stdin;
690
689
691
692
\.


--
-- Data for Name: credittypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.credittypedescriptor (credittypedescriptorid) FROM stdin;
693
694
695
696
697
698
699
700
701
702
703
704
705
706
707
708
709
\.


--
-- Data for Name: cteprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.cteprogramservicedescriptor (cteprogramservicedescriptorid) FROM stdin;
710
712
714
717
719
720
723
726
711
713
715
716
718
721
722
724
725
\.


--
-- Data for Name: curriculumuseddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.curriculumuseddescriptor (curriculumuseddescriptorid) FROM stdin;
727
728
729
730
731
732
733
734
735
\.


--
-- Data for Name: deliverymethoddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.deliverymethoddescriptor (deliverymethoddescriptorid) FROM stdin;
737
736
738
739
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptor (descriptorid, namespace, codevalue, shortdescription, description, priordescriptorid, effectivebegindate, effectiveenddate, createdate, lastmodifieddate, id, changeversion) FROM stdin;
1	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	2022-11-17 17:07:39.914856	2022-11-17 17:07:39.897314	282c1346-c614-4154-b5d5-c40b43336946	1
4	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	2022-11-17 17:07:40.039824	2022-11-17 17:07:40.039475	7f8dbd9c-af15-4c56-9c6e-b2ea0aa971bc	4
5	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:40.050649	2022-11-17 17:07:40.050584	1264f708-2e2a-4336-be16-44f95e3429ae	5
7	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	2022-11-17 17:07:40.060947	2022-11-17 17:07:40.060882	2b92fc0b-262e-4083-8f37-d71d3b14e40a	7
9	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	2022-11-17 17:07:40.069943	2022-11-17 17:07:40.069883	10775879-55b2-4952-98cf-10d1cc4891d0	9
11	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	2022-11-17 17:07:40.078147	2022-11-17 17:07:40.078036	6bc8afd8-a6da-4fce-8aa3-e6c7619b8ef1	11
13	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	2022-11-17 17:07:40.115764	2022-11-17 17:07:40.114273	a35c27f1-8109-4612-88b2-f849803936b0	13
16	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	2022-11-17 17:07:40.128921	2022-11-17 17:07:40.128874	b0f5d9e7-8f58-495d-9dec-2180b2b0808d	16
18	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	2022-11-17 17:07:40.137419	2022-11-17 17:07:40.13738	41ea32d6-e82a-40e8-a854-d7306a3635a3	18
20	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor society	Honor society	Honor society	\N	\N	\N	2022-11-17 17:07:40.146024	2022-11-17 17:07:40.145985	8e321c1c-8e28-4187-8b5e-4d8aa7ba96f9	20
21	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honorable mention	Honorable mention	Honorable mention	\N	\N	\N	2022-11-17 17:07:40.151161	2022-11-17 17:07:40.151099	15142198-364b-4620-b613-3d471e2f4f78	21
24	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Medals	Medals	Medals	\N	\N	\N	2022-11-17 17:07:40.163788	2022-11-17 17:07:40.16375	6162bf75-6d87-4ccd-a3a0-c0d4e3d2bfe1	24
25	uri://ed-fi.org/AcademicHonorCategoryDescriptor	National Merit Scholar	National Merit Scholar	National Merit Scholar	\N	\N	\N	2022-11-17 17:07:40.169127	2022-11-17 17:07:40.168811	c0496d53-20b8-497b-9750-29abdc4c7736	25
27	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Points	Points	Points	\N	\N	\N	2022-11-17 17:07:40.177972	2022-11-17 17:07:40.177896	f9282d92-1db0-4e28-8779-161d095654f4	27
30	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Scholarships	Scholarships	Scholarships	\N	\N	\N	2022-11-17 17:07:40.189801	2022-11-17 17:07:40.189762	3250f11b-a2a3-4827-ad2b-9fae649662f8	30
32	uri://ed-fi.org/AcademicSubjectDescriptor	Composite	Composite	Composite	\N	\N	\N	2022-11-17 17:07:40.221563	2022-11-17 17:07:40.220009	32740069-86cb-4c4d-99be-4fc42d578f1d	32
33	uri://ed-fi.org/AcademicSubjectDescriptor	Critical Reading	Critical Reading	Critical Reading	\N	\N	\N	2022-11-17 17:07:40.231319	2022-11-17 17:07:40.231264	b1d6540e-4a88-41c2-972d-7285af3c6102	33
35	uri://ed-fi.org/AcademicSubjectDescriptor	English	English	English	\N	\N	\N	2022-11-17 17:07:40.240635	2022-11-17 17:07:40.240569	b34e4b85-3ebe-49ea-9f94-42b98d614c95	35
38	uri://ed-fi.org/AcademicSubjectDescriptor	Foreign Language and Literature	Foreign Language and Literature	Foreign Language and Literature	\N	\N	\N	2022-11-17 17:07:40.252157	2022-11-17 17:07:40.252122	9088e22d-5ba0-4a94-8645-fe371f62bcee	38
40	uri://ed-fi.org/AcademicSubjectDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	2022-11-17 17:07:40.260919	2022-11-17 17:07:40.26086	e895f51a-6839-4e11-84b6-dbac426ce849	40
42	uri://ed-fi.org/AcademicSubjectDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:40.271406	2022-11-17 17:07:40.271355	58738fca-ba7e-4ac3-aa39-0d93234774f1	42
45	uri://ed-fi.org/AcademicSubjectDescriptor	Religious Education and Theology	Religious Education and Theology	Religious Education and Theology	\N	\N	\N	2022-11-17 17:07:40.285217	2022-11-17 17:07:40.285199	d498cb37-f048-4a50-b163-19e071bebffb	45
47	uri://ed-fi.org/AcademicSubjectDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	2022-11-17 17:07:40.293539	2022-11-17 17:07:40.293503	4a0ae42c-617e-442f-b30d-315604ae7d65	47
49	uri://ed-fi.org/AcademicSubjectDescriptor	Writing	Writing	Writing	\N	\N	\N	2022-11-17 17:07:40.301948	2022-11-17 17:07:40.301912	bbe2712f-9cc2-439a-97c6-096bc6a1337e	49
51	uri://ed-fi.org/AccommodationDescriptor	English language learner accommodation	English language learner accommodation	English language learner accommodation	\N	\N	\N	2022-11-17 17:07:40.3364	2022-11-17 17:07:40.334876	31892fec-46f2-47d2-a4cf-7842dded4ff6	51
52	uri://ed-fi.org/AccommodationDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:40.346225	2022-11-17 17:07:40.346172	36dc1252-1c74-461e-b4ee-ea8916dd87b5	52
54	uri://ed-fi.org/AccommodationDescriptor	Settings accommodation	Settings accommodation	Settings accommodation	\N	\N	\N	2022-11-17 17:07:40.356075	2022-11-17 17:07:40.356022	49900ac7-f1e5-467d-b484-f48278e8be89	54
57	uri://ed-fi.org/AccommodationDescriptor	Test material accommodation	Test material accommodation	Test material accommodation	\N	\N	\N	2022-11-17 17:07:40.368121	2022-11-17 17:07:40.368084	f254ef57-02cf-4cc7-84f0-1fcf97534a6c	57
59	uri://ed-fi.org/AccountTypeDescriptor	Balance sheet	Balance sheet	Balance sheet	\N	\N	\N	2022-11-17 17:07:40.40505	2022-11-17 17:07:40.403709	3be1114e-dd29-4b28-a9d2-3466c867f235	59
63	uri://ed-fi.org/AchievementCategoryDescriptor	Certificate Earned	Certificate Earned	Certificate Earned	\N	\N	\N	2022-11-17 17:07:40.44978	2022-11-17 17:07:40.44653	19dd0586-b01f-4632-b80a-9b96bf217000	63
65	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Retained	Competency Retained	Competency Retained	\N	\N	\N	2022-11-17 17:07:40.462025	2022-11-17 17:07:40.461969	e173dc2d-ec95-4e48-8797-3edd314355c8	65
67	uri://ed-fi.org/AchievementCategoryDescriptor	Diploma Earned	Diploma Earned	Diploma Earned	\N	\N	\N	2022-11-17 17:07:40.472785	2022-11-17 17:07:40.472732	ad63f0e1-37d5-488b-846e-86eaa99d3152	67
70	uri://ed-fi.org/AchievementCategoryDescriptor	License Endorsement Earned	License Endorsement Earned	License Endorsement Earned	\N	\N	\N	2022-11-17 17:07:40.487302	2022-11-17 17:07:40.487239	3ad69d5d-9071-4320-9d7d-b48c657149ff	70
72	uri://ed-fi.org/AchievementCategoryDescriptor	Non-Academic Honor	Non-Academic Honor	Non-Academic Honor	\N	\N	\N	2022-11-17 17:07:40.495682	2022-11-17 17:07:40.494012	d8a42bb1-8d58-4f28-b486-a05a715f4cd4	72
73	uri://ed-fi.org/AchievementCategoryDescriptor	Recognition	Recognition	Recognition	\N	\N	\N	2022-11-17 17:07:40.504144	2022-11-17 17:07:40.504092	ff06cd79-a493-4938-b686-4acfa3ddbc52	73
74	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-11-17 17:07:40.534561	2022-11-17 17:07:40.533047	158211ba-67ea-4ccb-95da-746d4279d567	74
77	uri://ed-fi.org/AdditionalCreditTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-11-17 17:07:40.54944	2022-11-17 17:07:40.549387	58539129-b65a-4b71-8608-b1488a619f62	77
79	uri://ed-fi.org/AddressTypeDescriptor	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	Doubled - up (i.e., living with another family)	\N	\N	\N	2022-11-17 17:07:40.587818	2022-11-17 17:07:40.586488	2e441e42-7c57-4fb3-9ab5-103d64cdec28	79
82	uri://ed-fi.org/AddressTypeDescriptor	Guardian Address	Guardian Address	Guardian Address	\N	\N	\N	2022-11-17 17:07:40.601711	2022-11-17 17:07:40.601674	675ac654-6b4b-402f-8b6a-105df82f59cf	82
83	uri://ed-fi.org/AddressTypeDescriptor	Home	Home	Home	\N	\N	\N	2022-11-17 17:07:40.608281	2022-11-17 17:07:40.608063	c0d182c4-5c67-43cd-91ac-82437b80a036	83
86	uri://ed-fi.org/AddressTypeDescriptor	Mother Address	Mother Address	Mother Address	\N	\N	\N	2022-11-17 17:07:40.619676	2022-11-17 17:07:40.619641	7ecc6c66-059d-408b-a1f0-c3e0cb434766	86
87	uri://ed-fi.org/AddressTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:40.624926	2022-11-17 17:07:40.624782	90df7797-de5c-48d2-a073-e37513cccccd	87
89	uri://ed-fi.org/AddressTypeDescriptor	Shelter, Transitional housing, Awaiting Foster	Shelters, Transitional housing, Awaiting Foster Care	Shelters, Transitional housing, Awaiting Foster Care	\N	\N	\N	2022-11-17 17:07:40.632822	2022-11-17 17:07:40.63272	1efd58a2-6f96-46a4-8387-88c7f03c2dc4	89
91	uri://ed-fi.org/AddressTypeDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	2022-11-17 17:07:40.641425	2022-11-17 17:07:40.641323	48445696-3b68-44c9-90c3-2d2566cc6abe	91
88	uri://ed-fi.org/AddressTypeDescriptor	Physical	Physical	Physical	\N	\N	\N	2022-11-17 17:07:40.628063	2022-11-17 17:07:40.628026	f4c922c7-31c4-43dc-9c56-9b59feeb1344	88
90	uri://ed-fi.org/AddressTypeDescriptor	Shipping	Shipping	Shipping	\N	\N	\N	2022-11-17 17:07:40.636701	2022-11-17 17:07:40.636665	6bc8ec6b-48ae-42db-80bd-e699f1d4fcb4	90
92	uri://ed-fi.org/AddressTypeDescriptor	Unsheltered	Unsheltered (cars, parks, temporary trailers, or abandoned buildings)	Unsheltered (e.g. cars, parks, campgrounds, temporary trailers including FEMA trailers, or abandoned buildings)	\N	\N	\N	2022-11-17 17:07:40.645266	2022-11-17 17:07:40.645233	aa3d048b-71af-4c77-aab0-d9e2c90807de	92
95	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-11-17 17:07:40.681276	2022-11-17 17:07:40.679914	4e3fcc81-6435-45a1-95c3-81f96be8426b	95
97	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Remote	Remote	Outside the school or district	\N	\N	\N	2022-11-17 17:07:40.692687	2022-11-17 17:07:40.692641	9729a432-75af-4bfa-98c8-2a0a56877484	97
99	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:40.727726	2022-11-17 17:07:40.726234	8b4d7b8e-bf58-43a3-8b02-7e7b0ad04c48	99
100	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Public School	Public School	Public School	\N	\N	\N	2022-11-17 17:07:40.738129	2022-11-17 17:07:40.738076	461b9ce1-ad3f-4b17-bb2c-c14a2c7c3f70	100
101	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Ecuadorian	Ecuadorian	Ecuadorian	\N	\N	\N	2022-11-17 17:07:40.766629	2022-11-17 17:07:40.765321	5ce46d7c-0a7f-4b1d-aea5-3419a3bca3ed	101
103	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Guatemalan	Guatemalan	Guatemalan	\N	\N	\N	2022-11-17 17:07:40.776172	2022-11-17 17:07:40.776119	e3cfe90c-a9d9-44ea-9d13-ed590b02bc56	103
105	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Puerto Rican	Puerto Rican	Puerto Rican	\N	\N	\N	2022-11-17 17:07:40.785117	2022-11-17 17:07:40.785028	675c0b3e-9542-42a9-8bfc-afe37d049dcf	105
107	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Spaniard/Spanish/Spanish-American	Spaniard/Spanish/Spanish-American	Spaniard/Spanish/Spanish-American	\N	\N	\N	2022-11-17 17:07:40.793137	2022-11-17 17:07:40.7931	d4053e13-5456-4152-a784-fcd4b8dfdb97	107
109	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-11-17 17:07:40.801431	2022-11-17 17:07:40.801393	cdefe5ff-119d-438d-871b-ceb78977e16b	109
111	uri://ed-fi.org/AssessmentCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2022-11-17 17:07:40.832862	2022-11-17 17:07:40.831446	8c4e4eef-aa2e-4921-a713-5bf8efb4fca7	111
112	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Physical well-being and motor dev	Early Learning - Physical well-being and motor development	Early Learning - Physical well-being and motor development	\N	\N	\N	2022-11-17 17:07:40.843672	2022-11-17 17:07:40.84362	0520a7d1-adb5-402d-a081-a0da63df2410	112
114	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychomotor test	Psychomotor test	Psychomotor test	\N	\N	\N	2022-11-17 17:07:40.853194	2022-11-17 17:07:40.853141	de542035-edbb-459e-8df4-af11fa0e0722	114
116	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/ELL	Alternate assessment/ELL	Alternate assessment/ELL	\N	\N	\N	2022-11-17 17:07:40.861391	2022-11-17 17:07:40.861355	d23bef1c-ffb6-4ce4-a153-610052d4cddd	116
118	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Social and emotional development	Early Learning - Social and emotional development	Early Learning - Social and emotional development	\N	\N	\N	2022-11-17 17:07:40.869786	2022-11-17 17:07:40.869751	b53bf580-d2b9-44fb-81df-8acb5494f96c	118
120	uri://ed-fi.org/AssessmentCategoryDescriptor	Reading readiness test	Reading readiness test	Reading readiness test	\N	\N	\N	2022-11-17 17:07:40.878783	2022-11-17 17:07:40.878748	8f8d4c2a-8a2b-44af-b6bc-93d5b5da0153	120
122	uri://ed-fi.org/AssessmentCategoryDescriptor	Achievement test	Achievement test	Achievement test	\N	\N	\N	2022-11-17 17:07:40.887299	2022-11-17 17:07:40.887262	567720a9-93da-4691-a788-bb6f01b923c4	122
124	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Language and literacy development	Early Learning - Language and literacy development	Early Learning - Language and literacy development	\N	\N	\N	2022-11-17 17:07:40.895704	2022-11-17 17:07:40.89567	e386e3b0-6687-4b38-a493-eda4b3353fec	124
126	uri://ed-fi.org/AssessmentCategoryDescriptor	Psychological test	Psychological test	Psychological test	\N	\N	\N	2022-11-17 17:07:40.903425	2022-11-17 17:07:40.903389	243c8b78-ba39-46f7-9f6e-5f623f2eae63	126
127	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/modified standards	State alternative assessment/modified standards	State alternative assessment/modified standards	\N	\N	\N	2022-11-17 17:07:40.908423	2022-11-17 17:07:40.908379	e0569b76-cb7e-4eee-ae1b-ba784945f93a	127
129	uri://ed-fi.org/AssessmentCategoryDescriptor	Developmental observation	Developmental observation	Developmental observation	\N	\N	\N	2022-11-17 17:07:40.916722	2022-11-17 17:07:40.916686	a0d07acc-cd0b-4154-9b6e-0f9f8488cf91	129
131	uri://ed-fi.org/AssessmentCategoryDescriptor	Performance assessment	Performance assessment	Performance assessment	\N	\N	\N	2022-11-17 17:07:40.92444	2022-11-17 17:07:40.924398	69aa7631-7462-41eb-b9c0-e7256b1655b1	131
133	uri://ed-fi.org/AssessmentCategoryDescriptor	Aptitude test	Aptitude test	Aptitude test	\N	\N	\N	2022-11-17 17:07:40.932808	2022-11-17 17:07:40.932773	852f6c37-8e2c-4a1f-b7aa-a67b28607960	133
135	uri://ed-fi.org/AssessmentCategoryDescriptor	Formative	Formative	Formative	\N	\N	\N	2022-11-17 17:07:40.942618	2022-11-17 17:07:40.942518	94928985-94a1-4c81-a477-d62ac7ac25ed	135
137	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school subject assessment	State high school subject assessment	State high school subject assessment	\N	\N	\N	2022-11-17 17:07:40.951618	2022-11-17 17:07:40.95158	78f0dc39-6cab-4d04-8224-ab28b7e3ee13	137
138	uri://ed-fi.org/AssessmentCategoryDescriptor	Benchmark test	Benchmark test	Benchmark test	\N	\N	\N	2022-11-17 17:07:40.957159	2022-11-17 17:07:40.957107	d9e07ba2-feb7-41bf-8435-4c4785c5aed8	138
141	uri://ed-fi.org/AssessmentCategoryDescriptor	Prekindergarten Readiness	Prekindergarten Readiness	Prekindergarten Readiness	\N	\N	\N	2022-11-17 17:07:40.97292	2022-11-17 17:07:40.972881	be437677-42c3-44eb-b8fe-9c6827064d68	141
143	uri://ed-fi.org/AssessmentCategoryDescriptor	Attitudinal test	Attitudinal test	Attitudinal test	\N	\N	\N	2022-11-17 17:07:40.982379	2022-11-17 17:07:40.982311	d5f7e578-683e-4a85-abb0-9c720b4462c9	143
145	uri://ed-fi.org/AssessmentCategoryDescriptor	Interest inventory	Interest inventory	Interest inventory	\N	\N	\N	2022-11-17 17:07:40.993075	2022-11-17 17:07:40.993039	fe592b97-ade4-4dca-a53e-94184d6c5d7c	145
147	uri://ed-fi.org/AssessmentCategoryDescriptor	State high school course assessment	State high school course assessment	State high school course assessment	\N	\N	\N	2022-11-17 17:07:41.001437	2022-11-17 17:07:41.001402	39528aae-6c4c-4bf7-a922-59086b822464	147
148	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	Alternate assessment/grade-level standards	\N	\N	\N	2022-11-17 17:07:41.006782	2022-11-17 17:07:41.006726	cd43a4eb-3edd-43e9-be70-b703b48bd78f	148
151	uri://ed-fi.org/AssessmentCategoryDescriptor	Mental ability (intelligence) test	Mental ability (intelligence) test	Mental ability (intelligence) test	\N	\N	\N	2022-11-17 17:07:41.018482	2022-11-17 17:07:41.018447	1bd439c0-f61b-47bd-afed-0a651badb678	151
153	uri://ed-fi.org/AssessmentCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:41.027011	2022-11-17 17:07:41.026976	6e4d4cd5-c96e-46a3-9186-f9a716bba172	153
154	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	District	District	District	\N	\N	\N	2022-11-17 17:07:41.059032	2022-11-17 17:07:41.057476	396d011b-d651-4a2d-a063-4e06d65fa1a5	154
156	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:41.069796	2022-11-17 17:07:41.069745	e0bfbe0e-498a-4d1d-9280-a407dd3a1e6c	156
158	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:41.081893	2022-11-17 17:07:41.081824	8d7e4af4-cf5c-4b82-8452-ec3e414e2aff	158
160	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Test Contractor	Test Contractor	Test Contractor	\N	\N	\N	2022-11-17 17:07:41.093752	2022-11-17 17:07:41.093716	c993f239-d91d-42ed-9cd0-fcfcb5b72001	160
162	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Essay	Essay	Essay	\N	\N	\N	2022-11-17 17:07:41.131941	2022-11-17 17:07:41.130598	80b1895d-c32a-4fc9-810a-d5e268452cc5	162
165	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Innovative	Innovative	Innovative	\N	\N	\N	2022-11-17 17:07:41.145328	2022-11-17 17:07:41.145293	0f05c932-b0f7-4fb2-a52b-0605dcbc0906	165
1288	uri://ed-fi.org/LanguageDescriptor	loz	Lozi	Lozi	\N	\N	\N	2022-11-17 17:07:48.660587	2022-11-17 17:07:48.660549	7741812b-910f-4a09-8c81-bdaec9f990d7	1288
93	uri://ed-fi.org/AddressTypeDescriptor	Work	Work	Work	\N	\N	\N	2022-11-17 17:07:40.649138	2022-11-17 17:07:40.649102	45d796ce-2734-45cb-af80-bc9e2a5d4340	93
94	uri://ed-fi.org/AdministrationEnvironmentDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:40.68126	2022-11-17 17:07:40.679918	dd4be670-51f8-44a6-8784-323452a10d6a	94
96	uri://ed-fi.org/AdministrationEnvironmentDescriptor	Testing Center	Testing Center	Testing Center	\N	\N	\N	2022-11-17 17:07:40.692293	2022-11-17 17:07:40.691398	7405376e-8ecb-4b6e-b238-8f8d2227f797	96
98	uri://ed-fi.org/AdministrativeFundingControlDescriptor	Private School	Private School	Private School	\N	\N	\N	2022-11-17 17:07:40.727583	2022-11-17 17:07:40.72623	16dc390f-2069-46a0-a020-ed66452a6564	98
102	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Colombian	Colombian	Colombian	\N	\N	\N	2022-11-17 17:07:40.766644	2022-11-17 17:07:40.765317	9511f24e-c017-4d95-aa4f-6a78f233fd5d	102
104	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Mexican	Mexican	Mexican	\N	\N	\N	2022-11-17 17:07:40.779091	2022-11-17 17:07:40.779056	fea4c52d-ca36-4aa8-b932-de85473fa2ee	104
106	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Salvadoran	Salvadoran	Salvadoran	\N	\N	\N	2022-11-17 17:07:40.788025	2022-11-17 17:07:40.787991	616ef886-5777-4f33-863c-e3aaae692597	106
108	uri://gbisd.edu/AncestryEthnicOriginDescriptor	Other Hispanic/Latino	Other Hispanic/Latino	Other Hispanic/Latino	\N	\N	\N	2022-11-17 17:07:40.796832	2022-11-17 17:07:40.796797	d17f0da9-4e21-4269-acef-cf653ed69c41	108
110	uri://ed-fi.org/AssessmentCategoryDescriptor	Class quiz	Class quiz	Class quiz	\N	\N	\N	2022-11-17 17:07:40.832848	2022-11-17 17:07:40.831449	e37eb171-bf77-4ed0-a52f-3edfcb02a21c	110
113	uri://ed-fi.org/AssessmentCategoryDescriptor	Language proficiency test	Language proficiency test	Language proficiency test	\N	\N	\N	2022-11-17 17:07:40.844238	2022-11-17 17:07:40.844187	8b461ced-55bf-4300-a1e8-d5d4d8a7b379	113
115	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternate assessment/ELL	State alternate assessment/ELL	State alternate assessment/ELL	\N	\N	\N	2022-11-17 17:07:40.856101	2022-11-17 17:07:40.856065	bc8d4d78-6e9b-461a-bf74-3ed22bc8a7b7	115
117	uri://ed-fi.org/AssessmentCategoryDescriptor	College entrance exam	College entrance exam	College entrance exam	\N	\N	\N	2022-11-17 17:07:40.866107	2022-11-17 17:07:40.866003	6201b51a-6dc8-4c8e-97e5-e6c8bb8d13d3	117
119	uri://ed-fi.org/AssessmentCategoryDescriptor	Manual dexterity test	Manual dexterity test	Manual dexterity test	\N	\N	\N	2022-11-17 17:07:40.875726	2022-11-17 17:07:40.874988	dd29772f-d7b8-4d97-8fd5-3f2e15d829f9	119
121	uri://ed-fi.org/AssessmentCategoryDescriptor	State English proficiency test	State English proficiency test	State English proficiency test	\N	\N	\N	2022-11-17 17:07:40.883597	2022-11-17 17:07:40.883559	86d5b83f-863d-4594-af4d-c1b014b002a0	121
123	uri://ed-fi.org/AssessmentCategoryDescriptor	Class test	Class test	Class test	\N	\N	\N	2022-11-17 17:07:40.891856	2022-11-17 17:07:40.89171	2f923a27-8fef-4d1c-91d2-3d8f1fa17ab0	123
125	uri://ed-fi.org/AssessmentCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-11-17 17:07:40.899661	2022-11-17 17:07:40.899615	7f158533-3ad0-4fa6-82b6-75b928423b77	125
128	uri://ed-fi.org/AssessmentCategoryDescriptor	Alternative assessment/modified standards	Alternative assessment/modified standards	Alternative assessment/modified standards	\N	\N	\N	2022-11-17 17:07:40.911981	2022-11-17 17:07:40.911946	67eec6b5-f44c-485a-acbf-af1f6fd3b9b5	128
130	uri://ed-fi.org/AssessmentCategoryDescriptor	Foreign language proficiency test	Foreign language proficiency test	Foreign language proficiency test	\N	\N	\N	2022-11-17 17:07:40.920291	2022-11-17 17:07:40.920256	93f93444-2bb7-4262-a4ef-908489068976	130
132	uri://ed-fi.org/AssessmentCategoryDescriptor	State summative assessment 3-8 general	State summative assessment 3-8 general	State summative assessment 3-8 general	\N	\N	\N	2022-11-17 17:07:40.928964	2022-11-17 17:07:40.92886	9fd41b9e-d25d-4aad-9ea2-189240f80ada	132
134	uri://ed-fi.org/AssessmentCategoryDescriptor	Diagnostic	Diagnostic	Diagnostic	\N	\N	\N	2022-11-17 17:07:40.93674	2022-11-17 17:07:40.936705	ba138792-49ba-467b-b18b-f1199afd436b	134
136	uri://ed-fi.org/AssessmentCategoryDescriptor	Personality test	Personality test	Personality test	\N	\N	\N	2022-11-17 17:07:40.946835	2022-11-17 17:07:40.94602	b39bfd78-9cad-4c3b-a92b-68cca07894f7	136
139	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	Early Learning - Cognition and general knowledge	\N	\N	\N	2022-11-17 17:07:40.962424	2022-11-17 17:07:40.962375	7768189a-90d8-4bc8-ae47-f625481b42e0	139
140	uri://ed-fi.org/AssessmentCategoryDescriptor	Interim	Interim	Interim	\N	\N	\N	2022-11-17 17:07:40.968321	2022-11-17 17:07:40.968271	f203f72b-64d1-4cda-8443-45686e30e55f	140
142	uri://ed-fi.org/AssessmentCategoryDescriptor	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	State alternative assessment/grade-level standards	\N	\N	\N	2022-11-17 17:07:40.979702	2022-11-17 17:07:40.978023	9caed863-8330-43f0-8e28-ce87dad8921e	142
144	uri://ed-fi.org/AssessmentCategoryDescriptor	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	Early Learning - Approaches toward learning	\N	\N	\N	2022-11-17 17:07:40.989236	2022-11-17 17:07:40.988992	c98c3711-7d8b-446a-8d6c-74b844694573	144
146	uri://ed-fi.org/AssessmentCategoryDescriptor	Portfolio assessment	Portfolio assessment	Portfolio assessment	\N	\N	\N	2022-11-17 17:07:40.997776	2022-11-17 17:07:40.997737	99a9664b-03a7-4745-98c6-21a79b2acc64	146
149	uri://ed-fi.org/AssessmentCategoryDescriptor	Cognitive and perceptual skills test	Cognitive and perceptual skills test	Cognitive and perceptual skills test	\N	\N	\N	2022-11-17 17:07:41.010177	2022-11-17 17:07:41.010142	7ccb05e9-2285-427e-853a-91a31e339c1e	149
150	uri://ed-fi.org/AssessmentCategoryDescriptor	English proficiency screening test	English proficiency screening test	English proficiency screening test	\N	\N	\N	2022-11-17 17:07:41.015432	2022-11-17 17:07:41.015213	ae84e39c-cebe-40a0-8eba-04523b982457	150
152	uri://ed-fi.org/AssessmentCategoryDescriptor	State assessment	State assessment	State assessment	\N	\N	\N	2022-11-17 17:07:41.023931	2022-11-17 17:07:41.023875	3060168b-5728-4608-bee3-0030b6de0ac1	152
155	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-11-17 17:07:41.059033	2022-11-17 17:07:41.057484	3b81abe5-7516-478f-a2bc-7cbba212f6a5	155
157	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	2022-11-17 17:07:41.072099	2022-11-17 17:07:41.072064	cb62b239-ce89-4ed5-807a-aba0112b5972	157
159	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	State	State	State	\N	\N	\N	2022-11-17 17:07:41.085073	2022-11-17 17:07:41.085039	8ab47912-398e-4582-92b2-b8a698f8f09f	159
161	uri://ed-fi.org/AssessmentIdentificationSystemDescriptor	National	National	National	\N	\N	\N	2022-11-17 17:07:41.099902	2022-11-17 17:07:41.099846	88796b38-7e59-4968-924f-d872867fcefc	161
163	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Analytic	Analytic	Analytic	\N	\N	\N	2022-11-17 17:07:41.131954	2022-11-17 17:07:41.130602	6ead8836-943d-4c12-8525-e95e384aef83	163
164	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Fill-in-the-blank	Fill-in-the-blank	Fill-in-the-blank	\N	\N	\N	2022-11-17 17:07:41.142921	2022-11-17 17:07:41.142864	ac6d4011-1738-42cb-83a6-2f1132300ecf	164
166	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Labeling	Labeling	Labeling	\N	\N	\N	2022-11-17 17:07:41.151888	2022-11-17 17:07:41.151818	9fa12c02-220e-4a53-a9bd-104719014d65	166
169	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Math Matrix	Math Matrix	Math Matrix	\N	\N	\N	2022-11-17 17:07:41.163345	2022-11-17 17:07:41.16331	4fa87daa-b543-4d21-a5cf-9d877bf9664a	169
171	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice multi-select	Multiple-choice multi-select	Multiple-choice multi-select	\N	\N	\N	2022-11-17 17:07:41.171598	2022-11-17 17:07:41.171562	f87d80b6-cbc8-4010-b9a9-8a7b36286cce	171
172	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:41.176561	2022-11-17 17:07:41.176509	78c62baa-2a36-428d-a226-2c3acc8fd1b3	172
174	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other extended response	Other extended response	Other extended response	\N	\N	\N	2022-11-17 17:07:41.184586	2022-11-17 17:07:41.184549	627ffa65-f3f9-406e-992e-477d07f5b9d2	174
176	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Prose	Prose	Prose	\N	\N	\N	2022-11-17 17:07:41.193284	2022-11-17 17:07:41.193246	acbf08ed-cd5a-4199-bc69-771a3656dfd2	176
178	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Rubric	Rubric	Rubric	\N	\N	\N	2022-11-17 17:07:41.2029	2022-11-17 17:07:41.202862	4d1a9812-b693-475b-8b7b-221af88854ff	178
1290	uri://ed-fi.org/LanguageDescriptor	lug	Ganda	Ganda	\N	\N	\N	2022-11-17 17:07:48.670374	2022-11-17 17:07:48.670327	1f63902c-3395-4e28-9924-fda88a32735e	1290
167	uri://ed-fi.org/AssessmentItemCategoryDescriptor	List Question	List Question	List Question	\N	\N	\N	2022-11-17 17:07:41.154988	2022-11-17 17:07:41.154952	977cae73-c574-4629-baff-e097725b5f4f	167
168	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Matching	Matching	Matching	\N	\N	\N	2022-11-17 17:07:41.160129	2022-11-17 17:07:41.160063	0242dcb9-449e-45fd-af18-4c664b9b36b4	168
170	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Multiple-choice	Multiple-choice	Multiple-choice	\N	\N	\N	2022-11-17 17:07:41.168435	2022-11-17 17:07:41.16834	4405f2b1-a612-48d7-8814-757f14f00f98	170
173	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Other constructed response	Other constructed response	Other constructed response	\N	\N	\N	2022-11-17 17:07:41.180031	2022-11-17 17:07:41.179994	f6372ef1-d14c-4c7e-9986-de873f35e301	173
175	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Performance task	Performance task	Performance task	\N	\N	\N	2022-11-17 17:07:41.189222	2022-11-17 17:07:41.189114	453f2a45-8ec4-4567-b0e2-f60cc22afb8a	175
177	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Reordering	Reordering	Reordering	\N	\N	\N	2022-11-17 17:07:41.198222	2022-11-17 17:07:41.198164	6bdb375d-0bf6-4f27-9b89-2dfd1960a9b0	177
179	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Short answer	Short answer	Short answer	\N	\N	\N	2022-11-17 17:07:41.206997	2022-11-17 17:07:41.206959	d5393b26-425b-4cdf-8f4c-5d8ad6e69df4	179
181	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Substitution	Substitution	Substitution	\N	\N	\N	2022-11-17 17:07:41.215694	2022-11-17 17:07:41.215659	b8055ab7-cf9b-427e-b7df-45cffd3ffe2a	181
183	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Visual representation	Visual representation	Visual representation	\N	\N	\N	2022-11-17 17:07:41.224138	2022-11-17 17:07:41.224102	4606252f-cf32-4dda-b1e8-0bc4d98815d4	183
185	uri://ed-fi.org/AssessmentItemResultDescriptor	Below Standard	Below Standard	Below Standard	\N	\N	\N	2022-11-17 17:07:41.255944	2022-11-17 17:07:41.254601	66d7fa06-323f-4411-92eb-00cee6ab8654	185
186	uri://ed-fi.org/AssessmentItemResultDescriptor	Correct	Correct	Correct	\N	\N	\N	2022-11-17 17:07:41.266065	2022-11-17 17:07:41.266009	c27ed55f-23e1-4bbb-9f39-6cf06b41363b	186
188	uri://ed-fi.org/AssessmentItemResultDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	2022-11-17 17:07:41.277432	2022-11-17 17:07:41.277363	dbde33a3-925c-4357-927b-bad0fd226fbd	188
190	uri://ed-fi.org/AssessmentPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	2022-11-17 17:07:41.326587	2022-11-17 17:07:41.325268	6f7edb63-c1fb-4f98-aff5-735459189aa0	190
192	uri://ed-fi.org/AssessmentPeriodDescriptor	Fall	Fall	Fall	\N	\N	\N	2022-11-17 17:07:41.337395	2022-11-17 17:07:41.337288	863c9edc-764f-4658-bb8a-99da97f1d8cd	192
194	uri://ed-fi.org/AssessmentPeriodDescriptor	Spring	Spring	Spring	\N	\N	\N	2022-11-17 17:07:41.34783	2022-11-17 17:07:41.347792	e1a985be-5b5b-449c-b759-ec6712b8e56d	194
197	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Achievement/proficiency level	Achievement/proficiency level	Achievement/proficiency level	\N	\N	\N	2022-11-17 17:07:41.382903	2022-11-17 17:07:41.38138	29f68f48-2aa9-43a8-b9f7-62772af1b42b	197
198	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Adaptive scale score	Adaptive scale score	Adaptive scale score	\N	\N	\N	2022-11-17 17:07:41.393318	2022-11-17 17:07:41.393281	32f5fb52-909d-4607-80c1-bd9b688f97d7	198
200	uri://ed-fi.org/AssessmentReportingMethodDescriptor	C-scaled scores	C-scaled scores	C-scaled scores	\N	\N	\N	2022-11-17 17:07:41.403656	2022-11-17 17:07:41.40362	0791dd55-ec4e-4bb7-91a0-9f2d9dbed755	200
201	uri://ed-fi.org/AssessmentReportingMethodDescriptor	College Board examination scores	DEPRECATED: College Board examination scores	DEPRECATED: College Board examination scores	\N	\N	\N	2022-11-17 17:07:41.408688	2022-11-17 17:07:41.408612	f8ded5c6-813b-4437-8b44-9d0b4c34750e	201
204	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composition Score	Composition Score	Composition Score	\N	\N	\N	2022-11-17 17:07:41.420137	2022-11-17 17:07:41.420102	9a90dc72-374d-4c15-b2d3-531c4ffdd2f6	204
205	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	Grade equivalent or grade-level indicator	\N	\N	\N	2022-11-17 17:07:41.42537	2022-11-17 17:07:41.425194	5f8a470b-6b47-4bc9-8917-3d89bf015875	205
207	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Growth/value-added/indexing	Growth/value-added/indexing	Growth/value-added/indexing	\N	\N	\N	2022-11-17 17:07:41.434389	2022-11-17 17:07:41.434323	162cbf05-1dcc-48f0-a6b8-0a278900fea9	207
209	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Letter grade/mark	Letter grade/mark	Letter grade/mark	\N	\N	\N	2022-11-17 17:07:41.443247	2022-11-17 17:07:41.443179	7f2b48bd-940c-4ba0-b0d1-d0859bbbfe26	209
211	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normal curve equivalent	Normal curve equivalent	Normal curve equivalent	\N	\N	\N	2022-11-17 17:07:41.451179	2022-11-17 17:07:41.451128	5cb141c9-1839-4c91-a6ea-e3b1367b4dfc	211
213	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Number score	Number score	Number score	\N	\N	\N	2022-11-17 17:07:41.459919	2022-11-17 17:07:41.459853	d62eff3a-2da7-4cb0-817c-f0c1fef76e98	213
216	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile rank	Percentile rank	Percentile rank	\N	\N	\N	2022-11-17 17:07:41.471335	2022-11-17 17:07:41.471299	34c4d6b4-72ac-4f89-9552-6f2dc81c2948	216
217	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Proficiency level	Proficiency level	Proficiency level	\N	\N	\N	2022-11-17 17:07:41.476187	2022-11-17 17:07:41.476078	79148791-fc8c-43ed-8bc0-f82fc66cf2ac	217
219	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	2022-11-17 17:07:41.48428	2022-11-17 17:07:41.484246	0589cc33-7ad1-42e5-be98-424d1e9ae2f4	219
221	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Raw score	Raw score	Raw score	\N	\N	\N	2022-11-17 17:07:41.492719	2022-11-17 17:07:41.492683	903b2c7a-3893-4971-ba53-ae1c337f897d	221
223	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard age score	Standard age score	Standard age score	\N	\N	\N	2022-11-17 17:07:41.500408	2022-11-17 17:07:41.500372	31e5c2c6-1135-403e-b66e-d864260a2c11	223
224	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Standard error measurement	Standard error measurement	Standard error measurement	\N	\N	\N	2022-11-17 17:07:41.505376	2022-11-17 17:07:41.505339	28f2997b-ca62-4a64-baca-0d3783c85ef6	224
227	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Theta	Theta	Theta	\N	\N	\N	2022-11-17 17:07:41.517065	2022-11-17 17:07:41.51703	1ae0543e-a4bc-4fe6-a668-323085bf637b	227
229	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical score	Vertical score	Vertical score	\N	\N	\N	2022-11-17 17:07:41.525446	2022-11-17 17:07:41.525411	330e8b17-9a67-47e8-b07f-4066b0e4f8f7	229
231	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Z-score	Z-score	Z-score	\N	\N	\N	2022-11-17 17:07:41.532981	2022-11-17 17:07:41.532947	3e62fa98-92d5-4a6c-bc70-45e62a47cfa5	231
233	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Not applicable	DEPRECATED: Not applicable	DEPRECATED: Not applicable	\N	\N	\N	2022-11-17 17:07:41.540747	2022-11-17 17:07:41.540708	79cfa30a-7420-4ef0-8f7c-5904a6164293	233
235	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Lexile Measure	Lexile Measure	Lexile Measure	\N	\N	\N	2022-11-17 17:07:41.54879	2022-11-17 17:07:41.548754	5b6f3ca1-684b-4649-9afd-bbe166e20f60	235
237	uri://ed-fi.org/AssessmentReportingMethodDescriptor	National College-Bound Percentile	National College-Bound Percentile	National College-Bound Percentile	\N	\N	\N	2022-11-17 17:07:41.557363	2022-11-17 17:07:41.557266	8178e32b-40fa-4451-80cb-234503c49390	237
240	uri://ed-fi.org/AssignmentLateStatusDescriptor	Late	Late	The assignment was submitted by the student after the due date/time and marked as late and the score may or may not be affected.	\N	\N	\N	2022-11-17 17:07:41.597353	2022-11-17 17:07:41.595855	5e4e3920-a804-48ca-8c7c-57e76b8c9c51	240
243	uri://ed-fi.org/AttemptStatusDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-11-17 17:07:41.634282	2022-11-17 17:07:41.632959	51757f19-1b98-40ce-94da-3c11248ee426	243
244	uri://ed-fi.org/AttemptStatusDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	2022-11-17 17:07:41.643783	2022-11-17 17:07:41.643707	14103f1c-35c5-4910-adcc-88dbdedac84a	244
247	uri://ed-fi.org/AttemptStatusDescriptor	Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	DEPRECATED: Died or is permanently incapacitated	\N	\N	\N	2022-11-17 17:07:41.65571	2022-11-17 17:07:41.655672	300df0af-db11-4e33-b046-a505f82bb9f6	247
248	uri://ed-fi.org/AttemptStatusDescriptor	Discontinued schooling	DEPRECATED: Discontinued schooling	DEPRECATED: Discontinued schooling	\N	\N	\N	2022-11-17 17:07:41.660861	2022-11-17 17:07:41.660805	0bc5f9be-e558-48a7-8d54-8aee3b44f972	248
250	uri://ed-fi.org/AttemptStatusDescriptor	Moved out of state	DEPRECATED: Moved out of state	DEPRECATED: Moved out of state	\N	\N	\N	2022-11-17 17:07:41.668924	2022-11-17 17:07:41.668821	72ca77be-9abe-4a91-b905-7a9ac067a05e	250
180	uri://ed-fi.org/AssessmentItemCategoryDescriptor	Show your work	Show your work	Show your work	\N	\N	\N	2022-11-17 17:07:41.211746	2022-11-17 17:07:41.211637	650fe0c6-03ea-4e7c-a80e-d4d53dbe3a0b	180
182	uri://ed-fi.org/AssessmentItemCategoryDescriptor	True-False	True-False	True-False	\N	\N	\N	2022-11-17 17:07:41.220307	2022-11-17 17:07:41.220202	26fb205b-37c5-4080-a535-4188dda91eec	182
184	uri://ed-fi.org/AssessmentItemResultDescriptor	Above Standard	Above Standard	Above Standard	\N	\N	\N	2022-11-17 17:07:41.25593	2022-11-17 17:07:41.254603	0b904521-6218-4536-94d7-5f954400e33d	184
187	uri://ed-fi.org/AssessmentItemResultDescriptor	Incorrect	Incorrect	Incorrect	\N	\N	\N	2022-11-17 17:07:41.269067	2022-11-17 17:07:41.269013	d98dc940-c6a5-4722-bf30-5c1ad3a21f1d	187
189	uri://ed-fi.org/AssessmentItemResultDescriptor	Partially Correct	Partially Correct	Partially Correct	\N	\N	\N	2022-11-17 17:07:41.280333	2022-11-17 17:07:41.280298	d4736a61-59f8-47f9-89fd-c245e955f445	189
191	uri://ed-fi.org/AssessmentPeriodDescriptor	Beginning of Year	Beginning of Year	Beginning of Year	\N	\N	\N	2022-11-17 17:07:41.326606	2022-11-17 17:07:41.325265	9744e28c-fd25-44f7-b6bc-f4fb8e3ba642	191
193	uri://ed-fi.org/AssessmentPeriodDescriptor	Middle of Year	Middle of Year	Middle of Year	\N	\N	\N	2022-11-17 17:07:41.342696	2022-11-17 17:07:41.342644	84a34806-10c8-48d0-86ec-24556dd074c9	193
195	uri://ed-fi.org/AssessmentPeriodDescriptor	Summer	Summer	Summer	\N	\N	\N	2022-11-17 17:07:41.351787	2022-11-17 17:07:41.351747	a7ff9d9b-be34-468e-8dce-e9ef6e9640f6	195
196	uri://ed-fi.org/AssessmentReportingMethodDescriptor	ACT score	DEPRECATED: ACT score	DEPRECATED: ACT score	\N	\N	\N	2022-11-17 17:07:41.382901	2022-11-17 17:07:41.381384	279f3f48-99e7-40d6-9078-dca3e60fa071	196
199	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Age score	Age score	Age score	\N	\N	\N	2022-11-17 17:07:41.400524	2022-11-17 17:07:41.399749	cd16c85d-6fd5-4623-9968-e926a32e0da0	199
202	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Score	Composite Score	Composite Score	\N	\N	\N	2022-11-17 17:07:41.411969	2022-11-17 17:07:41.411936	f5ad7f7e-fe5f-4ecb-9faf-2ef30f7f1aee	202
203	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Composite Rating	Composite Rating	Composite Rating	\N	\N	\N	2022-11-17 17:07:41.417071	2022-11-17 17:07:41.416885	be91f5eb-1279-4883-9042-829c425a9941	203
206	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Graduation score	Graduation score	Graduation score	\N	\N	\N	2022-11-17 17:07:41.428574	2022-11-17 17:07:41.42854	f3a1ad51-4f65-4fa9-b79d-f4efe2454ea5	206
208	uri://ed-fi.org/AssessmentReportingMethodDescriptor	International Baccalaureate score	DEPRECATED: International Baccalaureate score	DEPRECATED: International Baccalaureate score	\N	\N	\N	2022-11-17 17:07:41.43732	2022-11-17 17:07:41.437284	c405c0ae-12a8-4433-9a7e-62a9d4354edc	208
210	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Mastery level	Mastery level	Mastery level	\N	\N	\N	2022-11-17 17:07:41.446092	2022-11-17 17:07:41.446056	df30eb02-4738-4d08-9411-bd51544e63da	210
212	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Normalized standard score	Normalized standard score	Normalized standard score	\N	\N	\N	2022-11-17 17:07:41.454406	2022-11-17 17:07:41.454371	dceb9b3f-b012-43ab-9e1d-dad91fe2035f	212
214	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Pass-fail	Pass-fail	Pass-fail	\N	\N	\N	2022-11-17 17:07:41.462814	2022-11-17 17:07:41.462779	3a3fe430-8ec6-4351-a3e8-71faa0e705df	214
215	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	2022-11-17 17:07:41.4679	2022-11-17 17:07:41.467849	936d6908-a6f6-43e7-9b84-410361a6deb1	215
218	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Promotion score	Promotion score	Promotion score	\N	\N	\N	2022-11-17 17:07:41.479646	2022-11-17 17:07:41.479609	32f63b44-2f38-4dd8-a8be-7776477cdf82	218
220	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Ratio IQ's	Ratio IQ's	Ratio IQ's	\N	\N	\N	2022-11-17 17:07:41.488821	2022-11-17 17:07:41.488718	c61e5c77-60c4-4f7d-bc97-0162ca52494f	220
222	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Scale score	Scale score	Scale score	\N	\N	\N	2022-11-17 17:07:41.496619	2022-11-17 17:07:41.496567	9fabb454-5d9a-4521-b2cf-76d711af20a1	222
225	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Stanine score	Stanine score	Stanine score	\N	\N	\N	2022-11-17 17:07:41.508831	2022-11-17 17:07:41.508796	66fd2fb1-0494-4695-a099-0a7f45e8482c	225
226	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Sten score	Sten score	Sten score	\N	\N	\N	2022-11-17 17:07:41.513639	2022-11-17 17:07:41.513601	3a3800ef-db08-4abe-bc7b-027502a17ce6	226
228	uri://ed-fi.org/AssessmentReportingMethodDescriptor	T-score	T-score	T-score	\N	\N	\N	2022-11-17 17:07:41.521818	2022-11-17 17:07:41.52178	bf981d7f-7e77-49c5-b60f-6698b6af5da9	228
230	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Workplace readiness score	Workplace readiness score	Workplace readiness score	\N	\N	\N	2022-11-17 17:07:41.529389	2022-11-17 17:07:41.529349	d20f26f5-fa69-4b7f-a4f0-31ef7075a7b5	230
232	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:41.536902	2022-11-17 17:07:41.536858	8f04c95f-81a9-433f-a9b1-752b96bec4b7	232
234	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Quantile Measure	Quantile Measure	Quantile Measure	\N	\N	\N	2022-11-17 17:07:41.544986	2022-11-17 17:07:41.544949	0c834fa5-164f-49de-a530-9ddbe79ef577	234
236	uri://ed-fi.org/AssessmentReportingMethodDescriptor	Vertical Scale Score	Vertical Scale Score	Vertical Scale Score	\N	\N	\N	2022-11-17 17:07:41.552712	2022-11-17 17:07:41.552672	057b5858-2f9c-4c42-b964-3cf91ef95187	236
238	uri://ed-fi.org/AssessmentReportingMethodDescriptor	State College-Bound Percentile	State College-Bound Percentile	State College-Bound Percentile	\N	\N	\N	2022-11-17 17:07:41.560889	2022-11-17 17:07:41.560854	bed96ed2-fd08-4611-b6b7-06dcf8d6c5e9	238
239	uri://ed-fi.org/AssessmentReportingMethodDescriptor	RIT scale score	RIT scale score	RIT scale score	\N	\N	\N	2022-11-17 17:07:41.565876	2022-11-17 17:07:41.565822	96933b33-96d8-44e9-9c36-bea481008edf	239
241	uri://ed-fi.org/AssignmentLateStatusDescriptor	Not Late	Not Late	The assignment was not submitted after the due date and/or is not marked as late.	\N	\N	\N	2022-11-17 17:07:41.597357	2022-11-17 17:07:41.595851	f870c34b-982e-41ec-9269-298053e49735	241
242	uri://ed-fi.org/AttemptStatusDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-11-17 17:07:41.634282	2022-11-17 17:07:41.632955	4cf1c8f5-304b-498d-848b-8ed9922869f9	242
245	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	2022-11-17 17:07:41.647408	2022-11-17 17:07:41.647369	add3dba6-d499-4003-be07-4ea3ae421169	245
246	uri://ed-fi.org/AttemptStatusDescriptor	Audited	Audited	Audited	\N	\N	\N	2022-11-17 17:07:41.652641	2022-11-17 17:07:41.652578	c1d80bb8-f6d7-4be1-8841-b9d3afd54750	246
249	uri://ed-fi.org/AttemptStatusDescriptor	Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	DEPRECATED: Graduated with a high school diploma	\N	\N	\N	2022-11-17 17:07:41.664523	2022-11-17 17:07:41.664474	e3048c10-a182-450d-b12a-4101d457edf6	249
251	uri://ed-fi.org/AttemptStatusDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	2022-11-17 17:07:41.672771	2022-11-17 17:07:41.672732	a7f3bcbf-3cf8-401f-9e7c-93233d5c6316	251
253	uri://ed-fi.org/AttemptStatusDescriptor	Received certificate of completion or equivalent	DEPRECATED: Received completion certificate, modified diploma, or met IEP r	DEPRECATED: Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	2022-11-17 17:07:41.680987	2022-11-17 17:07:41.68095	40435428-79f1-4205-a9fb-3c6ab617946b	253
255	uri://ed-fi.org/AttemptStatusDescriptor	Transferred to another district or school	DEPRECATED: Transferred to another district or school	DEPRECATED: Transferred to another district or school	\N	\N	\N	2022-11-17 17:07:41.689241	2022-11-17 17:07:41.6892	c3ac7341-649e-4867-9a43-bfac1c681415	255
258	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Excused Absence	Excused Absence	Excused Absence	\N	\N	\N	2022-11-17 17:07:41.72883	2022-11-17 17:07:41.727329	6447f2fd-83c4-42e8-9607-045c387a40e2	258
261	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Tardy	Tardy	Tardy	\N	\N	\N	2022-11-17 17:07:41.74466	2022-11-17 17:07:41.744622	7cc65201-eccf-474f-b5b6-a46786a1e804	261
262	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Early departure	Early departure	Early departure	\N	\N	\N	2022-11-17 17:07:41.749708	2022-11-17 17:07:41.749602	96bce6c6-3864-425e-bf59-e3a0b0bc7d22	262
265	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Affordable	Not Affordable	The student cannot access the internet in their primary place of residence because internet service is not affordable.	\N	\N	\N	2022-11-17 17:07:41.787572	2022-11-17 17:07:41.786227	5e9e0e6d-3f98-4555-b2e4-0fc957e11433	265
990	uri://ed-fi.org/GradePointAverageTypeDescriptor	Unweighted	Unweighted	Unweighted	\N	\N	\N	2022-11-17 17:07:46.764525	2022-11-17 17:07:46.762954	cd2c9521-2fdb-4714-a2d1-2a8c61385c0b	990
252	uri://ed-fi.org/AttemptStatusDescriptor	Reached maximum age	DEPRECATED: Reached maximum age	DEPRECATED: Reached maximum age	\N	\N	\N	2022-11-17 17:07:41.677336	2022-11-17 17:07:41.677233	3e0ff2a6-f548-41cd-bc54-190ba2853f88	252
254	uri://ed-fi.org/AttemptStatusDescriptor	Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	DEPRECATED: Suspended or expelled from school	\N	\N	\N	2022-11-17 17:07:41.685601	2022-11-17 17:07:41.685559	ddf4473f-0832-4d29-8615-5f6b902b8611	254
256	uri://ed-fi.org/AttemptStatusDescriptor	Unknown reason	DEPRECATED: Unknown reason	DEPRECATED: Unknown reason	\N	\N	\N	2022-11-17 17:07:41.69305	2022-11-17 17:07:41.693013	4a1479d1-8855-47f5-ac16-31aa3727a5b1	256
257	uri://ed-fi.org/AttemptStatusDescriptor	Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	DEPRECATED: Withdrawal by a parent (or guardian)	\N	\N	\N	2022-11-17 17:07:41.697774	2022-11-17 17:07:41.697734	451e714a-825e-4690-8f57-9b1f8f35add9	257
259	uri://ed-fi.org/AttendanceEventCategoryDescriptor	In Attendance	In Attendance	In Attendance	\N	\N	\N	2022-11-17 17:07:41.728836	2022-11-17 17:07:41.727325	afa5b519-0feb-4fdd-bd3b-7478ffa77763	259
260	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Unexcused Absence	Unexcused Absence	Unexcused Absence	\N	\N	\N	2022-11-17 17:07:41.740169	2022-11-17 17:07:41.740016	c6ee3580-3a09-4ff3-b892-61f313b198a8	260
263	uri://ed-fi.org/AttendanceEventCategoryDescriptor	Partial	Partial	Partial	\N	\N	\N	2022-11-17 17:07:41.753113	2022-11-17 17:07:41.753075	af93ea79-dcb3-479f-9c65-92550967718b	263
264	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Available	Not Available	The student cannot access the internet in their primary place of residence because internet service is not available.	\N	\N	\N	2022-11-17 17:07:41.78756	2022-11-17 17:07:41.78623	9382bf91-0278-4b7a-9caf-43edb7703d5a	264
267	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Other	Other	The reason why a student cannot access the internet in their primary place of residence is not yet defined.	\N	\N	\N	2022-11-17 17:07:41.800436	2022-11-17 17:07:41.800414	daf25ba8-eaab-475f-9249-7faf9a25611a	267
268	uri://ed-fi.org/BehaviorDescriptor	State Offense	State Offense	State Offense	\N	\N	\N	2022-11-17 17:07:41.833997	2022-11-17 17:07:41.832682	b9745212-7cbd-4dcd-9bf3-2e0c86e12109	268
271	uri://ed-fi.org/BehaviorDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:41.847692	2022-11-17 17:07:41.847655	1101fbe1-c69b-4eca-b4c3-6aea16af7fa8	271
272	uri://ed-fi.org/CalendarEventDescriptor	Holiday	Holiday	Instruction cancelled or reduced due to a holiday	\N	\N	\N	2022-11-17 17:07:41.879798	2022-11-17 17:07:41.878489	8dc2683c-bd0d-400c-8ab2-2a6984c3ecc3	272
275	uri://ed-fi.org/CalendarEventDescriptor	Make-up day	Make-up day	Make-up instructional day	\N	\N	\N	2022-11-17 17:07:41.896326	2022-11-17 17:07:41.89629	eb230321-a645-4756-a9a9-e2b33b1e3f11	275
277	uri://ed-fi.org/CalendarEventDescriptor	Strike	Strike	Instruction cancelled or reduced due to a strike	\N	\N	\N	2022-11-17 17:07:41.905787	2022-11-17 17:07:41.905751	0bb292f5-19b7-4f64-835f-b22eba6bc785	277
279	uri://ed-fi.org/CalendarEventDescriptor	Teacher only day	Teacher only day	Non-instructional day for students designated for teachers (e.g., staff development, work day)	\N	\N	\N	2022-11-17 17:07:41.9144	2022-11-17 17:07:41.914365	4dc822b5-a56e-454c-83b1-4fca2c2eef27	279
281	uri://ed-fi.org/CalendarEventDescriptor	Non-instructional day	Non-instructional day	Non-instructional day	\N	\N	\N	2022-11-17 17:07:41.922986	2022-11-17 17:07:41.922951	8d4f612a-b7c9-467a-bbf6-8dce1060dc2f	281
283	uri://ed-fi.org/CalendarTypeDescriptor	IEP	IEP	IEP	\N	\N	\N	2022-11-17 17:07:41.954503	2022-11-17 17:07:41.953144	361c0be8-e15a-46c1-8eeb-dfe112a5452f	283
285	uri://ed-fi.org/CalendarTypeDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:41.966295	2022-11-17 17:07:41.966243	64746f6e-e835-4252-94ae-f567a2e9d444	285
288	uri://ed-fi.org/CareerPathwayDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	2022-11-17 17:07:42.003797	2022-11-17 17:07:42.002453	056a91c7-a284-4044-ba4b-9afbc73e8d07	288
289	uri://ed-fi.org/CareerPathwayDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	2022-11-17 17:07:42.0142	2022-11-17 17:07:42.014162	e61a3181-d1ee-443f-b224-334d5b11d6cf	289
291	uri://ed-fi.org/CareerPathwayDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	2022-11-17 17:07:42.024634	2022-11-17 17:07:42.024598	eeb09bc9-3c42-4f71-8439-c14bd92e35ce	291
292	uri://ed-fi.org/CareerPathwayDescriptor	Finance	Finance	Finance	\N	\N	\N	2022-11-17 17:07:42.029594	2022-11-17 17:07:42.029555	703ffa38-f0d6-4d71-aba0-c145ba544a1a	292
295	uri://ed-fi.org/CareerPathwayDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	2022-11-17 17:07:42.041769	2022-11-17 17:07:42.041734	0491b8d9-e703-4512-8828-25ed52010329	295
297	uri://ed-fi.org/CareerPathwayDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	2022-11-17 17:07:42.050138	2022-11-17 17:07:42.050103	dd5f8dbd-f174-4753-8aa6-282730d80eca	297
298	uri://ed-fi.org/CareerPathwayDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	2022-11-17 17:07:42.05595	2022-11-17 17:07:42.055221	ed1b7ebf-21ad-45db-8238-2699e1ed1f8e	298
300	uri://ed-fi.org/CareerPathwayDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	2022-11-17 17:07:42.06424	2022-11-17 17:07:42.0642	0b9d23d9-53ea-49a5-be45-347039af9774	300
302	uri://ed-fi.org/CareerPathwayDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	2022-11-17 17:07:42.072569	2022-11-17 17:07:42.072537	94a3639e-a50c-419f-af43-dbaaffabbd78	302
304	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:42.109495	2022-11-17 17:07:42.108162	7f7feb22-5079-45fd-9c43-41c497e64ce7	304
307	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	University	University	University	\N	\N	\N	2022-11-17 17:07:42.124147	2022-11-17 17:07:42.124125	2214575c-e320-4b0e-8860-b0f07de84aed	307
308	uri://ed-fi.org/CharterStatusDescriptor	College/University Charter	College/University Charter	College/University Charter	\N	\N	\N	2022-11-17 17:07:42.158892	2022-11-17 17:07:42.157575	630a3a2a-ecef-470f-a9a7-9674ab889cf0	308
310	uri://ed-fi.org/CharterStatusDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	2022-11-17 17:07:42.172343	2022-11-17 17:07:42.172211	13960e6e-f6a1-400f-a8bc-e42c1f21a769	310
313	uri://ed-fi.org/CitizenshipStatusDescriptor	Non-resident alien	Non-resident alien	Non-resident alien	\N	\N	\N	2022-11-17 17:07:42.211089	2022-11-17 17:07:42.209752	4b81f2ec-4699-487f-96f1-fcd9f25ff745	313
315	uri://ed-fi.org/CitizenshipStatusDescriptor	Resident alien	Resident alien	Resident alien	\N	\N	\N	2022-11-17 17:07:42.22525	2022-11-17 17:07:42.225214	6d418fc0-11b5-4cdb-8e0d-3bb584c018df	315
316	uri://ed-fi.org/CitizenshipStatusDescriptor	US Citizen	US Citizen	US Citizen	\N	\N	\N	2022-11-17 17:07:42.230454	2022-11-17 17:07:42.230399	629e9c1a-8c27-410e-a854-f57cf587cea0	316
318	uri://ed-fi.org/ClassroomPositionDescriptor	Assistant Teacher	Assistant Teacher	Assistant Teacher	\N	\N	\N	2022-11-17 17:07:42.26092	2022-11-17 17:07:42.259393	af4fd52b-fc67-4e8b-8d85-6a08903f5e13	318
320	uri://ed-fi.org/ClassroomPositionDescriptor	Teacher of Record	Teacher of Record	Teacher of Record	\N	\N	\N	2022-11-17 17:07:42.275576	2022-11-17 17:07:42.275539	1e87a170-bfca-4bed-a586-b033b69a5bde	320
322	uri://ed-fi.org/CohortScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-11-17 17:07:42.309222	2022-11-17 17:07:42.307865	3084063d-f005-4437-8140-126766a115a0	322
323	uri://ed-fi.org/CohortScopeDescriptor	District	District	District	\N	\N	\N	2022-11-17 17:07:42.320034	2022-11-17 17:07:42.319965	8f58e128-83cc-4b17-bdb5-5055beaab92a	323
326	uri://ed-fi.org/CohortScopeDescriptor	Principal	Principal	Principal	\N	\N	\N	2022-11-17 17:07:42.332832	2022-11-17 17:07:42.332796	cbfa5e2f-6f34-48a6-a794-f6a854072f13	326
328	uri://ed-fi.org/CohortScopeDescriptor	Statewide	Statewide	Statewide	\N	\N	\N	2022-11-17 17:07:42.341286	2022-11-17 17:07:42.34125	ae108842-fd47-4797-9ef6-6b3a05807ff0	328
331	uri://ed-fi.org/CohortTypeDescriptor	Academic Intervention	Academic Intervention	Academic Intervention	\N	\N	\N	2022-11-17 17:07:42.376986	2022-11-17 17:07:42.375644	ecd75cab-d036-47b3-9885-ff7e532d1456	331
332	uri://ed-fi.org/CohortTypeDescriptor	Classroom Pullout	Classroom Pullout	Classroom Pullout	\N	\N	\N	2022-11-17 17:07:42.387445	2022-11-17 17:07:42.387395	b7667901-ad53-49e8-9114-c1b032f4c369	332
991	uri://ed-fi.org/GradeTypeDescriptor	Exam	Exam	Exam	\N	\N	\N	2022-11-17 17:07:46.801115	2022-11-17 17:07:46.799547	51a2ca11-a874-4d38-8064-090130a84200	991
266	uri://ed-fi.org/BarrierToInternetAccessInResidenceDescriptor	Not Desired	Not Desired	The student cannot access the internet in their primary place of residence because the parent or guardian chooses not to subscribe to internet service.	\N	\N	\N	2022-11-17 17:07:41.797537	2022-11-17 17:07:41.797479	2f92f023-03ff-4f73-93c7-e4c7b296a676	266
269	uri://ed-fi.org/BehaviorDescriptor	School Violation	School Violation	School Violation	\N	\N	\N	2022-11-17 17:07:41.834009	2022-11-17 17:07:41.832679	548b6906-7a92-4f8e-8eed-321951d6063b	269
270	uri://ed-fi.org/BehaviorDescriptor	School Code of Conduct	School Code of Conduct	School Code of Conduct	\N	\N	\N	2022-11-17 17:07:41.844419	2022-11-17 17:07:41.843624	31490923-e797-45e2-939c-8ec70641d60c	270
273	uri://ed-fi.org/CalendarEventDescriptor	Emergency day	Emergency day	Instruction cancelled or reduced due to an emergency	\N	\N	\N	2022-11-17 17:07:41.87986	2022-11-17 17:07:41.878493	0ced406e-c05f-4df1-9099-b216e7ee7a74	273
274	uri://ed-fi.org/CalendarEventDescriptor	Instructional day	Instructional day	Student instructional day	\N	\N	\N	2022-11-17 17:07:41.893412	2022-11-17 17:07:41.893357	d894e4ab-c2f2-4ef2-8979-15390c7ab32a	274
276	uri://ed-fi.org/CalendarEventDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:41.902614	2022-11-17 17:07:41.902544	ed2b79a5-1a66-4219-a369-8303fcab0892	276
278	uri://ed-fi.org/CalendarEventDescriptor	Student late arrival/early dismissal	Student late arrival/early dismissal	Abbreviated instructional day due to student late arrival or early dismissal	\N	\N	\N	2022-11-17 17:07:41.910804	2022-11-17 17:07:41.910749	63ace0ab-442c-494c-9a4c-57b4a7dc5623	278
280	uri://ed-fi.org/CalendarEventDescriptor	Weather day	Weather day	Instruction cancelled or reduced due to weather	\N	\N	\N	2022-11-17 17:07:41.919337	2022-11-17 17:07:41.919297	c15700eb-9abd-4345-83a4-3ac685bc9d5d	280
282	uri://ed-fi.org/CalendarTypeDescriptor	Student Specific	Student Specific	Student Specific	\N	\N	\N	2022-11-17 17:07:41.954488	2022-11-17 17:07:41.953148	49887382-9f41-40ff-bf4d-8a726c297d8f	282
284	uri://ed-fi.org/CalendarTypeDescriptor	Grade Level	Grade Level	Grade Level	\N	\N	\N	2022-11-17 17:07:41.965666	2022-11-17 17:07:41.96476	569d16f2-4bf0-4912-8869-37f3e8814382	284
286	uri://ed-fi.org/CalendarTypeDescriptor	Staff	Staff	Staff	\N	\N	\N	2022-11-17 17:07:41.974257	2022-11-17 17:07:41.974189	281bba3c-c7cc-43f9-bfb6-8891e0c47fa3	286
287	uri://ed-fi.org/CareerPathwayDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	2022-11-17 17:07:42.003781	2022-11-17 17:07:42.002461	72f0bc61-45cf-4d11-b3cc-84b814d220a6	287
290	uri://ed-fi.org/CareerPathwayDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	2022-11-17 17:07:42.020918	2022-11-17 17:07:42.020861	90f98e9b-2b9b-41fd-a067-bd503287afd8	290
293	uri://ed-fi.org/CareerPathwayDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	2022-11-17 17:07:42.033191	2022-11-17 17:07:42.033156	536d899f-ebb9-41be-b287-d22a72ada69e	293
294	uri://ed-fi.org/CareerPathwayDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	2022-11-17 17:07:42.038422	2022-11-17 17:07:42.038367	030c1ed3-6d65-40d3-9a23-c233f9cf7721	294
296	uri://ed-fi.org/CareerPathwayDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	2022-11-17 17:07:42.046665	2022-11-17 17:07:42.046606	de4cdf35-585c-4c1c-8c88-e45098b07724	296
299	uri://ed-fi.org/CareerPathwayDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	2022-11-17 17:07:42.059531	2022-11-17 17:07:42.059496	ad096eba-2ca0-41f5-aaaf-dc2cfc095653	299
301	uri://ed-fi.org/CareerPathwayDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:42.068031	2022-11-17 17:07:42.067999	31d4caaf-c402-428c-9b83-afcd55d3d0cf	301
303	uri://ed-fi.org/CareerPathwayDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	2022-11-17 17:07:42.076413	2022-11-17 17:07:42.076378	f32c2b75-b665-49c3-90eb-0f3317598765	303
305	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	Public charter school board	Public charter school board	Public charter school board	\N	\N	\N	2022-11-17 17:07:42.109518	2022-11-17 17:07:42.108158	1032b999-2b01-474b-8534-265903806abf	305
306	uri://ed-fi.org/CharterApprovalAgencyTypeDescriptor	State board of education	State board of education	State board of education	\N	\N	\N	2022-11-17 17:07:42.122442	2022-11-17 17:07:42.121532	608e4e71-8e95-46ff-90d2-05f47511ff0a	306
309	uri://ed-fi.org/CharterStatusDescriptor	Not a Charter School	Not a Charter School	Not a Charter School	\N	\N	\N	2022-11-17 17:07:42.158916	2022-11-17 17:07:42.157572	c35f88e8-0f63-40c5-ad35-4371c866842b	309
311	uri://ed-fi.org/CharterStatusDescriptor	School Charter	School Charter	School Charter	\N	\N	\N	2022-11-17 17:07:42.173232	2022-11-17 17:07:42.173166	d7ad93f5-37eb-4a5b-9185-a2ff7046cc70	311
312	uri://ed-fi.org/CitizenshipStatusDescriptor	Permanent resident	Permanent resident	Permanent resident	\N	\N	\N	2022-11-17 17:07:42.211107	2022-11-17 17:07:42.209755	4abc8dde-b6e1-49e5-a10c-d487d83a2359	312
314	uri://ed-fi.org/CitizenshipStatusDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	2022-11-17 17:07:42.22189	2022-11-17 17:07:42.221812	54104e2c-2223-4167-b808-a7a984bce42f	314
317	uri://ed-fi.org/ClassroomPositionDescriptor	Substitute Teacher	Substitute Teacher	Substitute Teacher	\N	\N	\N	2022-11-17 17:07:42.26092	2022-11-17 17:07:42.259388	46955785-9a74-4f24-b41f-8f3af97aaef1	317
319	uri://ed-fi.org/ClassroomPositionDescriptor	Support Teacher	Support Teacher	Support Teacher	\N	\N	\N	2022-11-17 17:07:42.271922	2022-11-17 17:07:42.271863	5fcb4860-fabb-4ea4-b880-23b68975e41f	319
321	uri://ed-fi.org/CohortScopeDescriptor	Counselor	Counselor	Counselor	\N	\N	\N	2022-11-17 17:07:42.309204	2022-11-17 17:07:42.307869	17d7a3bb-5ac6-4a56-9b7d-90840b0c787b	321
324	uri://ed-fi.org/CohortScopeDescriptor	Network	Network	Network	\N	\N	\N	2022-11-17 17:07:42.322891	2022-11-17 17:07:42.322855	ec512f9c-f41f-4936-9952-f864a25f51a4	324
325	uri://ed-fi.org/CohortScopeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:42.329338	2022-11-17 17:07:42.328602	eb6ca103-4066-4f3f-b8eb-1f36ca2e45a2	325
327	uri://ed-fi.org/CohortScopeDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:42.337678	2022-11-17 17:07:42.337641	a6060ef3-fe98-4bd0-b7fc-45a4bb972f22	327
329	uri://ed-fi.org/CohortScopeDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	2022-11-17 17:07:42.346046	2022-11-17 17:07:42.346007	99ef353f-32e8-4b10-ad20-c791713b124a	329
330	uri://ed-fi.org/CohortTypeDescriptor	Attendance Intervention	Attendance Intervention	Attendance Intervention	\N	\N	\N	2022-11-17 17:07:42.376968	2022-11-17 17:07:42.375647	a9ca1f7e-cc89-47ba-bc49-623e8ceb5e33	330
333	uri://ed-fi.org/CohortTypeDescriptor	Counselor List	Counselor List	Counselor List	\N	\N	\N	2022-11-17 17:07:42.389999	2022-11-17 17:07:42.389963	a2467833-5ef9-43bb-bc6d-27715da9002f	333
335	uri://ed-fi.org/CohortTypeDescriptor	Extracurricular Activity	Extracurricular Activity	Extracurricular Activity	\N	\N	\N	2022-11-17 17:07:42.398848	2022-11-17 17:07:42.398812	db448a8f-0837-46a8-8b14-26cd35126335	335
337	uri://ed-fi.org/CohortTypeDescriptor	In-school Suspension	In-school Suspension	In-school Suspension	\N	\N	\N	2022-11-17 17:07:42.408643	2022-11-17 17:07:42.408606	597c206c-8743-45d4-a31f-11a8dd304fbf	337
339	uri://ed-fi.org/CohortTypeDescriptor	Principal Watch List	Principal Watch List	Principal Watch List	\N	\N	\N	2022-11-17 17:07:42.416954	2022-11-17 17:07:42.416919	7b02d514-04a9-4f3b-afba-660778ba48fa	339
342	uri://ed-fi.org/CohortYearTypeDescriptor	First grade	First grade	First grade	\N	\N	\N	2022-11-17 17:07:42.45216	2022-11-17 17:07:42.450814	e5182600-7f14-4f82-bcbf-0caa4435c59d	342
343	uri://ed-fi.org/CohortYearTypeDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	2022-11-17 17:07:42.464134	2022-11-17 17:07:42.46382	60b6cdd7-cc3e-4fde-b5b0-97bd12bb8d16	343
345	uri://ed-fi.org/CohortYearTypeDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	2022-11-17 17:07:42.472455	2022-11-17 17:07:42.472417	b8baad46-05c0-4b6a-b4ef-06d1da73f639	345
347	uri://ed-fi.org/CohortYearTypeDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	2022-11-17 17:07:42.481003	2022-11-17 17:07:42.480901	ca128b7e-edd7-4769-8aae-360daa6dcca6	347
349	uri://ed-fi.org/CohortYearTypeDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	2022-11-17 17:07:42.489398	2022-11-17 17:07:42.489383	dcfda9bd-04f5-4464-9080-a4caf7476e64	349
351	uri://ed-fi.org/CohortYearTypeDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	2022-11-17 17:07:42.498195	2022-11-17 17:07:42.498157	c1e9d62a-0eae-4c07-935b-e098dfa170df	351
354	uri://ed-fi.org/CompetencyLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	2022-11-17 17:07:42.533485	2022-11-17 17:07:42.532146	40ffdc26-5a9d-4867-adb5-dc68acb2cf6b	354
334	uri://ed-fi.org/CohortTypeDescriptor	Discipline Intervention	Discipline Intervention	Discipline Intervention	\N	\N	\N	2022-11-17 17:07:42.395874	2022-11-17 17:07:42.395808	bfa6af44-9aa7-4455-9321-d8dd2b96f564	334
336	uri://ed-fi.org/CohortTypeDescriptor	Field Trip	Field Trip	Field Trip	\N	\N	\N	2022-11-17 17:07:42.404416	2022-11-17 17:07:42.404377	adbb1535-2170-4c96-ba63-e79344f28fb0	336
338	uri://ed-fi.org/CohortTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:42.41334	2022-11-17 17:07:42.413301	fcf16581-3ec6-4b39-9f0c-8da559cb8792	338
340	uri://ed-fi.org/CohortTypeDescriptor	Study Hall	Study Hall	Study Hall	\N	\N	\N	2022-11-17 17:07:42.42162	2022-11-17 17:07:42.42158	0926245b-6d1f-403b-b4fc-2f2b27510771	340
341	uri://ed-fi.org/CohortYearTypeDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	2022-11-17 17:07:42.452145	2022-11-17 17:07:42.450818	329793a6-1a1f-4ca8-9946-7463f5704910	341
344	uri://ed-fi.org/CohortYearTypeDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	2022-11-17 17:07:42.467616	2022-11-17 17:07:42.46758	82b966dc-4de4-420c-9b68-ef053d2e0c08	344
346	uri://ed-fi.org/CohortYearTypeDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	2022-11-17 17:07:42.47658	2022-11-17 17:07:42.476544	427fa622-9bc9-4846-b9d3-29a15c50cf20	346
348	uri://ed-fi.org/CohortYearTypeDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	2022-11-17 17:07:42.484932	2022-11-17 17:07:42.484869	9628f907-5556-4b32-927c-8aa62c6c254c	348
350	uri://ed-fi.org/CohortYearTypeDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	2022-11-17 17:07:42.493432	2022-11-17 17:07:42.493396	4cf883c5-c32b-4098-bbf0-1c8ed3522907	350
352	uri://ed-fi.org/CohortYearTypeDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	2022-11-17 17:07:42.501766	2022-11-17 17:07:42.501731	6dcb35ce-b220-44c7-aebe-d6976d27a5b2	352
353	uri://ed-fi.org/CompetencyLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2022-11-17 17:07:42.533468	2022-11-17 17:07:42.53215	b5bf9ca2-7476-4711-8833-2be5d9f9324d	353
355	uri://ed-fi.org/CompetencyLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	2022-11-17 17:07:42.543395	2022-11-17 17:07:42.543089	432c850f-50ed-44f4-9101-d9883fc23d9f	355
358	uri://ed-fi.org/CompetencyLevelDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2022-11-17 17:07:42.555592	2022-11-17 17:07:42.555556	a47548b0-838a-4bc7-b371-96f240ccfce6	358
359	uri://ed-fi.org/CompetencyLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	2022-11-17 17:07:42.560764	2022-11-17 17:07:42.560707	fa3b37dc-777c-40f8-aa60-c7bb7892c68f	359
361	uri://ed-fi.org/ContentClassDescriptor	Education Research	Education Research	Education Research	\N	\N	\N	2022-11-17 17:07:42.610358	2022-11-17 17:07:42.609138	433d98c2-32fd-4ae6-a18a-5a6c6d3c9c62	361
362	uri://ed-fi.org/ContentClassDescriptor	Presentation	Presentation	Presentation	\N	\N	\N	2022-11-17 17:07:42.616785	2022-11-17 17:07:42.616679	d76a29c0-67c5-4efe-9406-ada091cdd6b1	362
364	uri://ed-fi.org/ContentClassDescriptor	Video	Video	Video	\N	\N	\N	2022-11-17 17:07:42.626103	2022-11-17 17:07:42.626036	d70d0a0c-6274-46cb-be75-cb36f4bb2dfc	364
367	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during school term	Ceased to be migratory during school term	Ceased to be migratory during school term	\N	\N	\N	2022-11-17 17:07:42.661217	2022-11-17 17:07:42.65987	8b927dbf-ba7d-4877-a6f4-6a9f5dc21249	367
369	uri://ed-fi.org/CostRateDescriptor	Flat Fee	Flat Fee	Flat Fee	\N	\N	\N	2022-11-17 17:07:42.700496	2022-11-17 17:07:42.699179	cb3c2bfb-32ee-4222-8768-a7cfcfec7656	369
371	uri://ed-fi.org/CountryDescriptor	AD	Andorra	Andorra	\N	\N	\N	2022-11-17 17:07:42.737164	2022-11-17 17:07:42.735825	d532e97a-3eb0-42f5-9cd4-67ac73ad6244	371
373	uri://ed-fi.org/CountryDescriptor	AF	Afghanistan	Afghanistan	\N	\N	\N	2022-11-17 17:07:42.747942	2022-11-17 17:07:42.74787	f7ee74ba-6494-4e4b-97a7-dc57d61dd5ab	373
375	uri://ed-fi.org/CountryDescriptor	AI	Anguilla	Anguilla	\N	\N	\N	2022-11-17 17:07:42.756563	2022-11-17 17:07:42.756314	04e64006-57fd-4131-954b-d386adcc3400	375
377	uri://ed-fi.org/CountryDescriptor	AM	Armenia	Armenia	\N	\N	\N	2022-11-17 17:07:42.765404	2022-11-17 17:07:42.765322	c7f05042-ef27-4784-80c6-480c6b4e7d28	377
379	uri://ed-fi.org/CountryDescriptor	AQ	Antarctica	Antarctica	\N	\N	\N	2022-11-17 17:07:42.774139	2022-11-17 17:07:42.774073	c5a01953-c396-446c-8267-887500a74ac9	379
381	uri://ed-fi.org/CountryDescriptor	AS	American Samoa	American Samoa	\N	\N	\N	2022-11-17 17:07:42.782843	2022-11-17 17:07:42.782774	14d8c455-c48c-4c3e-821c-c577d22345f0	381
383	uri://ed-fi.org/CountryDescriptor	AU	Australia	Australia	\N	\N	\N	2022-11-17 17:07:42.791077	2022-11-17 17:07:42.790974	e799727b-e6cb-4b02-bdda-9bc85acb9fb9	383
386	uri://ed-fi.org/CountryDescriptor	AZ	Azerbaijan	Azerbaijan	\N	\N	\N	2022-11-17 17:07:42.804042	2022-11-17 17:07:42.804006	1eaf1b45-2c6f-48c8-b023-f48efbb3a356	386
387	uri://ed-fi.org/CountryDescriptor	BA	Bosnia and Herzegovina	Bosnia and Herzegovina	\N	\N	\N	2022-11-17 17:07:42.809128	2022-11-17 17:07:42.809033	70e75a9f-a701-47f1-bead-d03ee416e48b	387
389	uri://ed-fi.org/CountryDescriptor	BD	Bangladesh	Bangladesh	\N	\N	\N	2022-11-17 17:07:42.818026	2022-11-17 17:07:42.817955	11f44a55-dfac-4270-bd7d-c772246554ab	389
391	uri://ed-fi.org/CountryDescriptor	BF	Burkina Faso	Burkina Faso	\N	\N	\N	2022-11-17 17:07:42.8265	2022-11-17 17:07:42.82643	899dd059-0067-4ffd-b9de-31bc2c203ed3	391
394	uri://ed-fi.org/CountryDescriptor	BI	Burundi	Burundi	\N	\N	\N	2022-11-17 17:07:42.838101	2022-11-17 17:07:42.838066	34513c27-3cdd-4361-99b3-820dee9a16b2	394
395	uri://ed-fi.org/CountryDescriptor	BJ	Benin	Benin	\N	\N	\N	2022-11-17 17:07:42.843605	2022-11-17 17:07:42.843546	48707c99-5ea0-425a-b70f-102a0495d9e2	395
398	uri://ed-fi.org/CountryDescriptor	BN	Brunei Darussalam	Brunei Darussalam	\N	\N	\N	2022-11-17 17:07:42.855376	2022-11-17 17:07:42.85534	8b9fa8c7-0eeb-4d59-a24c-dc6d244a7168	398
399	uri://ed-fi.org/CountryDescriptor	BO	Bolivia, Plurinational State of	Bolivia, Plurinational State of	\N	\N	\N	2022-11-17 17:07:42.860742	2022-11-17 17:07:42.860656	a8d2fb40-0393-4fb2-b69d-29d128f86c98	399
402	uri://ed-fi.org/CountryDescriptor	BS	Bahamas	Bahamas	\N	\N	\N	2022-11-17 17:07:42.872563	2022-11-17 17:07:42.872528	3961b7cd-739f-4a91-af5c-e3842f25546b	402
404	uri://ed-fi.org/CountryDescriptor	BV	Bouvet Island	Bouvet Island	\N	\N	\N	2022-11-17 17:07:42.88088	2022-11-17 17:07:42.880844	16a75b95-f689-4b8a-82bd-60631ba37823	404
406	uri://ed-fi.org/CountryDescriptor	BY	Belarus	Belarus	\N	\N	\N	2022-11-17 17:07:42.889907	2022-11-17 17:07:42.88981	38aa9f0b-7f25-40c6-acf5-9c3e8933d136	406
408	uri://ed-fi.org/CountryDescriptor	CA	Canada	Canada	\N	\N	\N	2022-11-17 17:07:42.898375	2022-11-17 17:07:42.898337	1c9c675f-71e1-45bf-9b7e-a4bdca78e4f2	408
410	uri://ed-fi.org/CountryDescriptor	CD	Congo, the Democratic Republic of the	Congo, the Democratic Republic of the	\N	\N	\N	2022-11-17 17:07:42.907733	2022-11-17 17:07:42.907682	78f27693-8721-46fa-b260-732a713ec044	410
413	uri://ed-fi.org/CountryDescriptor	CH	Switzerland	Switzerland	\N	\N	\N	2022-11-17 17:07:42.919223	2022-11-17 17:07:42.919188	e96e4fef-b60b-4c87-ab7c-4ad68cb849ea	413
415	uri://ed-fi.org/CountryDescriptor	CK	Cook Islands	Cook Islands	\N	\N	\N	2022-11-17 17:07:42.929271	2022-11-17 17:07:42.929218	a134b27a-7ad3-4cdd-ad08-04383f145dc4	415
418	uri://ed-fi.org/CountryDescriptor	CN	China	China	\N	\N	\N	2022-11-17 17:07:42.941239	2022-11-17 17:07:42.941199	44a92b07-9d00-4676-a524-7cf488ae3b23	418
420	uri://ed-fi.org/CountryDescriptor	CR	Costa Rica	Costa Rica	\N	\N	\N	2022-11-17 17:07:42.949681	2022-11-17 17:07:42.949645	b994f9ac-a08d-4882-97c4-d2fdabf96c3f	420
422	uri://ed-fi.org/CountryDescriptor	CV	Cabo Verde	Cabo Verde	\N	\N	\N	2022-11-17 17:07:42.962833	2022-11-17 17:07:42.962781	28ba7ea3-2c10-4b97-aa49-b317aa9b57e9	422
424	uri://ed-fi.org/CountryDescriptor	CX	Christmas Island	Christmas Island	\N	\N	\N	2022-11-17 17:07:42.971951	2022-11-17 17:07:42.971896	50f7a5d5-63b8-45f3-bb31-a5b5a9254a87	424
426	uri://ed-fi.org/CountryDescriptor	CZ	Czech Republic	Czech Republic	\N	\N	\N	2022-11-17 17:07:42.980862	2022-11-17 17:07:42.980823	8834a5aa-f876-4403-953d-ec5efcdb1ede	426
428	uri://ed-fi.org/CountryDescriptor	DJ	Djibouti	Djibouti	\N	\N	\N	2022-11-17 17:07:42.991434	2022-11-17 17:07:42.991385	7622ee03-a4e1-4c80-b1b9-ad597bbe8ba1	428
430	uri://ed-fi.org/CountryDescriptor	DM	Dominica	Dominica	\N	\N	\N	2022-11-17 17:07:43.002029	2022-11-17 17:07:43.001979	b180cd48-e231-4485-a882-3190bcdc0321	430
432	uri://ed-fi.org/CountryDescriptor	DZ	Algeria	Algeria	\N	\N	\N	2022-11-17 17:07:43.011242	2022-11-17 17:07:43.011202	5e63ee21-d37f-427f-a366-2c5d87baf869	432
434	uri://ed-fi.org/CountryDescriptor	EE	Estonia	Estonia	\N	\N	\N	2022-11-17 17:07:43.018964	2022-11-17 17:07:43.018929	1be28f32-5d43-4ec8-855e-904b41142f47	434
436	uri://ed-fi.org/CountryDescriptor	EH	Western Sahara	Western Sahara	\N	\N	\N	2022-11-17 17:07:43.027185	2022-11-17 17:07:43.027149	96002d0c-b607-4b82-aad5-2fe1b56a501e	436
438	uri://ed-fi.org/CountryDescriptor	ES	Spain	Spain	\N	\N	\N	2022-11-17 17:07:43.037077	2022-11-17 17:07:43.037041	3c9e1d6d-a882-420e-9e3e-5c3ebceac4a1	438
439	uri://ed-fi.org/CountryDescriptor	ET	Ethiopia	Ethiopia	\N	\N	\N	2022-11-17 17:07:43.042986	2022-11-17 17:07:43.042216	67cfb8f6-8ad0-4e68-aed1-9e3f3ef9b20b	439
356	uri://ed-fi.org/CompetencyLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-11-17 17:07:42.546777	2022-11-17 17:07:42.546741	af6ab98a-5e36-4616-a081-67345efa4aa5	356
357	uri://ed-fi.org/CompetencyLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-11-17 17:07:42.552178	2022-11-17 17:07:42.551917	cd40322d-2035-4f82-86d8-8899b34515a6	357
360	uri://ed-fi.org/ContactTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:42.606316	2022-11-17 17:07:42.604744	a5435553-e765-40c6-aaae-066c83a0a78d	360
363	uri://ed-fi.org/ContentClassDescriptor	Vendor Intervention Offering	Vendor Intervention Offering	Vendor Intervention Offering	\N	\N	\N	2022-11-17 17:07:42.620479	2022-11-17 17:07:42.620443	3436222a-1ecd-4348-aea6-a5701baf3a2a	363
365	uri://ed-fi.org/ContentClassDescriptor	Written Activity	Written Activity	Written Activity	\N	\N	\N	2022-11-17 17:07:42.62916	2022-11-17 17:07:42.629125	d4d1d5f1-3437-464d-9525-54a99284edd4	365
366	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Ceased to be migratory during previous term	Ceased to be migratory in previous term - comparable services not available	Ceased to be migratory during previous school term and no comparable services are available	\N	\N	\N	2022-11-17 17:07:42.661204	2022-11-17 17:07:42.659875	18062fba-41ca-4120-9843-b651b323c637	366
368	uri://ed-fi.org/ContinuationofServicesReasonDescriptor	Previously migratory secondary student	Previously migratory secondary student continuing credit accrual	Previously migratory secondary student continuing secondary school credit accrual	\N	\N	\N	2022-11-17 17:07:42.671661	2022-11-17 17:07:42.671589	a3c1c408-6bc0-4f46-8612-312c111c282a	368
370	uri://ed-fi.org/CostRateDescriptor	Per Student	Per Student	Per Student	\N	\N	\N	2022-11-17 17:07:42.700505	2022-11-17 17:07:42.699183	9604d232-0db9-4a64-8f86-cffcb676a7fb	370
372	uri://ed-fi.org/CountryDescriptor	AE	United Arab Emirates	United Arab Emirates	\N	\N	\N	2022-11-17 17:07:42.737171	2022-11-17 17:07:42.735828	7f249e2b-94c8-4fa6-be20-84fa33d85ef1	372
374	uri://ed-fi.org/CountryDescriptor	AG	Antigua and Barbuda	Antigua and Barbuda	\N	\N	\N	2022-11-17 17:07:42.750911	2022-11-17 17:07:42.750874	bd8965f0-d722-4881-873f-41f2240c14c2	374
376	uri://ed-fi.org/CountryDescriptor	AL	Albania	Albania	\N	\N	\N	2022-11-17 17:07:42.759435	2022-11-17 17:07:42.759399	74030642-51f8-4801-bef0-7cdac3f11104	376
378	uri://ed-fi.org/CountryDescriptor	AO	Angola	Angola	\N	\N	\N	2022-11-17 17:07:42.768578	2022-11-17 17:07:42.768541	4f08d019-c7d5-4b93-af94-6f3f8742d0ac	378
380	uri://ed-fi.org/CountryDescriptor	AR	Argentina	Argentina	\N	\N	\N	2022-11-17 17:07:42.777159	2022-11-17 17:07:42.777123	9458fb87-09a9-45a1-8840-f4f3358db7d7	380
382	uri://ed-fi.org/CountryDescriptor	AT	Austria	Austria	\N	\N	\N	2022-11-17 17:07:42.785782	2022-11-17 17:07:42.785745	23885b7c-609a-464f-b27d-ecbfe07feda4	382
384	uri://ed-fi.org/CountryDescriptor	AW	Aruba	Aruba	\N	\N	\N	2022-11-17 17:07:42.79466	2022-11-17 17:07:42.794625	d7ae812f-d2b7-4150-90cd-4313ecf3b18c	384
385	uri://ed-fi.org/CountryDescriptor	AX	Åland Islands	Åland Islands	\N	\N	\N	2022-11-17 17:07:42.800552	2022-11-17 17:07:42.799762	f525f63d-f6cc-41d5-bc8e-7c8a109bbcc9	385
388	uri://ed-fi.org/CountryDescriptor	BB	Barbados	Barbados	\N	\N	\N	2022-11-17 17:07:42.812519	2022-11-17 17:07:42.812484	0e2bf490-0137-4e6c-95c1-4d308c53e9fa	388
390	uri://ed-fi.org/CountryDescriptor	BE	Belgium	Belgium	\N	\N	\N	2022-11-17 17:07:42.820755	2022-11-17 17:07:42.820718	21413c32-b4e2-48af-a55a-3da87e423d95	390
392	uri://ed-fi.org/CountryDescriptor	BG	Bulgaria	Bulgaria	\N	\N	\N	2022-11-17 17:07:42.829562	2022-11-17 17:07:42.829526	a20d8b81-03ee-4245-a868-355ca0acd15e	392
393	uri://ed-fi.org/CountryDescriptor	BH	Bahrain	Bahrain	\N	\N	\N	2022-11-17 17:07:42.834946	2022-11-17 17:07:42.83489	f69fa9ac-8a0f-4d86-9dbb-0eb692956d83	393
396	uri://ed-fi.org/CountryDescriptor	BL	Saint Barthélemy	Saint Barthélemy	\N	\N	\N	2022-11-17 17:07:42.846699	2022-11-17 17:07:42.846664	e9c5c542-9c6a-45b1-951a-1f267f468f54	396
397	uri://ed-fi.org/CountryDescriptor	BM	Bermuda	Bermuda	\N	\N	\N	2022-11-17 17:07:42.852305	2022-11-17 17:07:42.852252	79566c75-6096-472b-b5a9-5c3c80c3e2f2	397
400	uri://ed-fi.org/CountryDescriptor	BQ	Bonaire, Sint Eustatius and Saba	Bonaire, Sint Eustatius and Saba	\N	\N	\N	2022-11-17 17:07:42.863858	2022-11-17 17:07:42.863823	e9a5cc81-4b6f-4d66-acf2-7184ba4b0663	400
401	uri://ed-fi.org/CountryDescriptor	BR	Brazil	Brazil	\N	\N	\N	2022-11-17 17:07:42.869071	2022-11-17 17:07:42.868964	25201142-ee5a-433a-8e43-b30bbaf28b95	401
403	uri://ed-fi.org/CountryDescriptor	BT	Bhutan	Bhutan	\N	\N	\N	2022-11-17 17:07:42.87724	2022-11-17 17:07:42.877202	d7962a0b-e5d4-4a74-ab5d-4e7b172c0b1e	403
405	uri://ed-fi.org/CountryDescriptor	BW	Botswana	Botswana	\N	\N	\N	2022-11-17 17:07:42.885208	2022-11-17 17:07:42.885173	cf9ddb76-aaa8-4ba5-8a6b-1a8cf1240e89	405
407	uri://ed-fi.org/CountryDescriptor	BZ	Belize	Belize	\N	\N	\N	2022-11-17 17:07:42.893777	2022-11-17 17:07:42.893742	e10dd234-0153-4781-b229-f7c0a516f8f1	407
409	uri://ed-fi.org/CountryDescriptor	CC	Cocos (Keeling) Islands	Cocos (Keeling) Islands	\N	\N	\N	2022-11-17 17:07:42.902219	2022-11-17 17:07:42.902185	6130eb76-f5a1-4d2b-8b98-40202384392a	409
411	uri://ed-fi.org/CountryDescriptor	CF	Central African Republic	Central African Republic	\N	\N	\N	2022-11-17 17:07:42.910852	2022-11-17 17:07:42.910817	e1557046-2434-494e-8350-327f3cbbfd33	411
412	uri://ed-fi.org/CountryDescriptor	CG	Congo	Congo	\N	\N	\N	2022-11-17 17:07:42.916172	2022-11-17 17:07:42.915927	a5311a5c-03a3-4777-b53b-d08c9fc6f71b	412
414	uri://ed-fi.org/CountryDescriptor	CI	Côte d'Ivoire	Côte d'Ivoire	\N	\N	\N	2022-11-17 17:07:42.92423	2022-11-17 17:07:42.9242	b54662b2-543b-4a70-b9bb-42c6eb16df8f	414
416	uri://ed-fi.org/CountryDescriptor	CL	Chile	Chile	\N	\N	\N	2022-11-17 17:07:42.932788	2022-11-17 17:07:42.932753	5d63cea1-413a-4598-94d4-73835eb16410	416
417	uri://ed-fi.org/CountryDescriptor	CM	Cameroon	Cameroon	\N	\N	\N	2022-11-17 17:07:42.9377	2022-11-17 17:07:42.937588	6abf92f1-1c79-436f-8560-d52dd1c06caa	417
419	uri://ed-fi.org/CountryDescriptor	CO	Colombia	Colombia	\N	\N	\N	2022-11-17 17:07:42.945872	2022-11-17 17:07:42.945774	16252dbf-57dd-4a70-be48-e49a9fbe8b7c	419
421	uri://ed-fi.org/CountryDescriptor	CU	Cuba	Cuba	\N	\N	\N	2022-11-17 17:07:42.95562	2022-11-17 17:07:42.955537	6ead7ba4-ac87-42d7-80f3-4d31580c12fa	421
423	uri://ed-fi.org/CountryDescriptor	CW	Curaçao	Curaçao	\N	\N	\N	2022-11-17 17:07:42.967294	2022-11-17 17:07:42.967184	d527d3d2-1e64-427d-854c-d87284a17bcb	423
425	uri://ed-fi.org/CountryDescriptor	CY	Cyprus	Cyprus	\N	\N	\N	2022-11-17 17:07:42.978089	2022-11-17 17:07:42.976278	97263c3f-6af9-437f-a3e0-6b890fa325dd	425
427	uri://ed-fi.org/CountryDescriptor	DE	Germany	Germany	\N	\N	\N	2022-11-17 17:07:42.988512	2022-11-17 17:07:42.986711	215d92e1-6bf1-4127-9880-5be0f5bbea9b	427
429	uri://ed-fi.org/CountryDescriptor	DK	Denmark	Denmark	\N	\N	\N	2022-11-17 17:07:42.998187	2022-11-17 17:07:42.99808	524f6783-8c67-41e0-8a1e-1f99092208ba	429
431	uri://ed-fi.org/CountryDescriptor	DO	Dominican Republic	Dominican Republic	\N	\N	\N	2022-11-17 17:07:43.006847	2022-11-17 17:07:43.006823	ae6bc7ea-721f-4755-8600-9fcdf84ec707	431
433	uri://ed-fi.org/CountryDescriptor	EC	Ecuador	Ecuador	\N	\N	\N	2022-11-17 17:07:43.015057	2022-11-17 17:07:43.015021	bf11d650-136d-401e-8514-e755dd338755	433
435	uri://ed-fi.org/CountryDescriptor	EG	Egypt	Egypt	\N	\N	\N	2022-11-17 17:07:43.023608	2022-11-17 17:07:43.023569	4470855a-e778-4ff3-aad5-8e96f2c304b0	435
437	uri://ed-fi.org/CountryDescriptor	ER	Eritrea	Eritrea	\N	\N	\N	2022-11-17 17:07:43.034157	2022-11-17 17:07:43.034089	7207075d-cfb7-43cd-a40d-2cbab0b13f31	437
440	uri://ed-fi.org/CountryDescriptor	FI	Finland	Finland	\N	\N	\N	2022-11-17 17:07:43.046355	2022-11-17 17:07:43.046318	179e48ba-da57-4500-999f-90a7b6a1c55c	440
442	uri://ed-fi.org/CountryDescriptor	FK	Falkland Islands (Malvinas)	Falkland Islands (Malvinas)	\N	\N	\N	2022-11-17 17:07:43.056011	2022-11-17 17:07:43.055943	bc7d431e-d20f-4298-b70f-4c1c440b4e02	442
444	uri://ed-fi.org/CountryDescriptor	FO	Faroe Islands	Faroe Islands	\N	\N	\N	2022-11-17 17:07:43.066029	2022-11-17 17:07:43.06595	73793e70-73ad-4911-ae24-542b690870b0	444
446	uri://ed-fi.org/CountryDescriptor	GA	Gabon	Gabon	\N	\N	\N	2022-11-17 17:07:43.076423	2022-11-17 17:07:43.07632	981d6346-73e0-483a-98b4-eb1444fce037	446
448	uri://ed-fi.org/CountryDescriptor	GD	Grenada	Grenada	\N	\N	\N	2022-11-17 17:07:43.084878	2022-11-17 17:07:43.084771	c4eb8f47-6857-4fa8-be89-ff517ae0b8a3	448
450	uri://ed-fi.org/CountryDescriptor	GF	French Guiana	French Guiana	\N	\N	\N	2022-11-17 17:07:43.093449	2022-11-17 17:07:43.093348	d0ffdc63-dbb3-4bee-899e-20acf110b274	450
452	uri://ed-fi.org/CountryDescriptor	GH	Ghana	Ghana	\N	\N	\N	2022-11-17 17:07:43.105269	2022-11-17 17:07:43.105229	7d755125-99ab-4da3-9dc6-a6d3ccad4451	452
453	uri://ed-fi.org/CountryDescriptor	GI	Gibraltar	Gibraltar	\N	\N	\N	2022-11-17 17:07:43.110223	2022-11-17 17:07:43.110116	0f84dd71-d33d-4165-af1c-61584fbab79f	453
456	uri://ed-fi.org/CountryDescriptor	GN	Guinea	Guinea	\N	\N	\N	2022-11-17 17:07:43.125077	2022-11-17 17:07:43.125031	8979ab5e-34b8-4216-a23f-2852f1b023c3	456
459	uri://ed-fi.org/CountryDescriptor	GR	Greece	Greece	\N	\N	\N	2022-11-17 17:07:43.14348	2022-11-17 17:07:43.142198	a000fadf-365b-490d-b5a6-32567fd5e184	459
441	uri://ed-fi.org/CountryDescriptor	FJ	Fiji	Fiji	\N	\N	\N	2022-11-17 17:07:43.051042	2022-11-17 17:07:43.050939	145c0fb6-1652-43d4-820b-a208c7761599	441
443	uri://ed-fi.org/CountryDescriptor	FM	Micronesia, Federated States of	Micronesia, Federated States of	\N	\N	\N	2022-11-17 17:07:43.061187	2022-11-17 17:07:43.061133	3f223185-0e9e-401b-af8d-de16f0fc0202	443
445	uri://ed-fi.org/CountryDescriptor	FR	France	France	\N	\N	\N	2022-11-17 17:07:43.071849	2022-11-17 17:07:43.071796	b7a07d22-9e97-4275-a992-8cb9ec099a1e	445
447	uri://ed-fi.org/CountryDescriptor	GB	United Kingdom of Great Britain and Northern Ireland	United Kingdom of Great Britain and Northern Ireland	\N	\N	\N	2022-11-17 17:07:43.080344	2022-11-17 17:07:43.080309	ca20c9e1-55e7-4ba3-9c02-d2daad9664e2	447
449	uri://ed-fi.org/CountryDescriptor	GE	Georgia	Georgia	\N	\N	\N	2022-11-17 17:07:43.088947	2022-11-17 17:07:43.088911	0513fc5b-2d7e-4011-8e6f-79294af276ee	449
451	uri://ed-fi.org/CountryDescriptor	GG	Guernsey	Guernsey	\N	\N	\N	2022-11-17 17:07:43.097401	2022-11-17 17:07:43.097347	8d907324-40e9-46c2-a2a7-8b91ca253913	451
454	uri://ed-fi.org/CountryDescriptor	GL	Greenland	Greenland	\N	\N	\N	2022-11-17 17:07:43.113939	2022-11-17 17:07:43.113873	eab36bce-b8c3-481c-9a30-638aab90767f	454
455	uri://ed-fi.org/CountryDescriptor	GM	Gambia	Gambia	\N	\N	\N	2022-11-17 17:07:43.121054	2022-11-17 17:07:43.120711	fe756cbc-3ba6-44e6-8ae6-72a92f5dea3d	455
457	uri://ed-fi.org/CountryDescriptor	GP	Guadeloupe	Guadeloupe	\N	\N	\N	2022-11-17 17:07:43.131162	2022-11-17 17:07:43.13111	dc98d9cb-bfed-45cd-af9d-5b5a6729adc0	457
458	uri://ed-fi.org/CountryDescriptor	GQ	Equatorial Guinea	Equatorial Guinea	\N	\N	\N	2022-11-17 17:07:43.137236	2022-11-17 17:07:43.137183	1ac581ab-f593-4388-826b-84bc30cfd832	458
460	uri://ed-fi.org/CountryDescriptor	GS	South Georgia and the South Sandwich Islands	South Georgia and the South Sandwich Islands	\N	\N	\N	2022-11-17 17:07:43.14735	2022-11-17 17:07:43.147292	ac3f5e57-6005-4550-8c2f-196a895dd272	460
462	uri://ed-fi.org/CountryDescriptor	GU	Guam	Guam	\N	\N	\N	2022-11-17 17:07:43.158106	2022-11-17 17:07:43.158052	cbf57e0f-aef8-4109-8e6a-0953075d639b	462
464	uri://ed-fi.org/CountryDescriptor	GY	Guyana	Guyana	\N	\N	\N	2022-11-17 17:07:43.166625	2022-11-17 17:07:43.166569	803cf04b-410c-4e12-be7f-91acb24b952d	464
466	uri://ed-fi.org/CountryDescriptor	HM	Heard Island and McDonald Islands	Heard Island and McDonald Islands	\N	\N	\N	2022-11-17 17:07:43.177757	2022-11-17 17:07:43.177593	b80b1e2c-265d-410f-b7fd-f40eb87bb3bc	466
468	uri://ed-fi.org/CountryDescriptor	HR	Croatia	Croatia	\N	\N	\N	2022-11-17 17:07:43.190464	2022-11-17 17:07:43.190408	a7a5a5b0-990a-479a-bd04-8300d31bf712	468
470	uri://ed-fi.org/CountryDescriptor	HU	Hungary	Hungary	\N	\N	\N	2022-11-17 17:07:43.205746	2022-11-17 17:07:43.205695	f66f2332-0db3-45ea-a49e-76bda75173d5	470
472	uri://ed-fi.org/CountryDescriptor	IE	Ireland	Ireland	\N	\N	\N	2022-11-17 17:07:43.219921	2022-11-17 17:07:43.219268	b3e84b42-b344-46cc-8067-f97cf6262d33	472
474	uri://ed-fi.org/CountryDescriptor	IM	Isle of Man	Isle of Man	\N	\N	\N	2022-11-17 17:07:43.231028	2022-11-17 17:07:43.23097	c0f3b262-7ca3-431d-b844-fb775b8f99ec	474
476	uri://ed-fi.org/CountryDescriptor	IO	British Indian Ocean Territory	British Indian Ocean Territory	\N	\N	\N	2022-11-17 17:07:43.240129	2022-11-17 17:07:43.240084	9414cbf4-cf00-4601-868c-50ed9e7e633c	476
478	uri://ed-fi.org/CountryDescriptor	IR	Iran, Islamic Republic of	Iran, Islamic Republic of	\N	\N	\N	2022-11-17 17:07:43.257069	2022-11-17 17:07:43.255092	95f69aa8-6d94-4490-8c3d-20962792aa7e	478
480	uri://ed-fi.org/CountryDescriptor	IT	Italy	Italy	\N	\N	\N	2022-11-17 17:07:43.267279	2022-11-17 17:07:43.267222	ecc7b9d2-8003-4126-93b4-cfb7c8d0729d	480
482	uri://ed-fi.org/CountryDescriptor	JM	Jamaica	Jamaica	\N	\N	\N	2022-11-17 17:07:43.276211	2022-11-17 17:07:43.276161	8bb19e53-a058-4d5f-acdf-fe2ac5d7056b	482
485	uri://ed-fi.org/CountryDescriptor	KE	Kenya	Kenya	\N	\N	\N	2022-11-17 17:07:43.287555	2022-11-17 17:07:43.287519	12c25fef-2e58-45aa-9e15-698c8dac050a	485
487	uri://ed-fi.org/CountryDescriptor	KH	Cambodia	Cambodia	\N	\N	\N	2022-11-17 17:07:43.295868	2022-11-17 17:07:43.29583	522c5caf-3ee2-44dd-afa3-51d9d4c4b23f	487
489	uri://ed-fi.org/CountryDescriptor	KM	Comoros	Comoros	\N	\N	\N	2022-11-17 17:07:43.304079	2022-11-17 17:07:43.304043	cb300cad-bdc7-45ac-8225-143a73241577	489
490	uri://ed-fi.org/CountryDescriptor	KN	Saint Kitts and Nevis	Saint Kitts and Nevis	\N	\N	\N	2022-11-17 17:07:43.309077	2022-11-17 17:07:43.309028	91f1a841-3948-4633-867d-357953fd867f	490
492	uri://ed-fi.org/CountryDescriptor	KR	Korea, Republic of	Korea, Republic of	\N	\N	\N	2022-11-17 17:07:43.31783	2022-11-17 17:07:43.317778	cf415291-3902-4f7e-aef3-f44c6f9a428c	492
494	uri://ed-fi.org/CountryDescriptor	KY	Cayman Islands	Cayman Islands	\N	\N	\N	2022-11-17 17:07:43.326454	2022-11-17 17:07:43.326402	ed162f69-a2f8-4140-971e-23a66af45b9b	494
496	uri://ed-fi.org/CountryDescriptor	LA	Lao People's Democratic Republic	Lao People's Democratic Republic	\N	\N	\N	2022-11-17 17:07:43.33564	2022-11-17 17:07:43.335593	c625e742-dada-429b-86c6-b705e6f582e5	496
497	uri://ed-fi.org/CountryDescriptor	LB	Lebanon	Lebanon	\N	\N	\N	2022-11-17 17:07:43.340915	2022-11-17 17:07:43.340872	7e8720a6-e2ed-4b54-8dac-4c45c6c5709c	497
499	uri://ed-fi.org/CountryDescriptor	LI	Liechtenstein	Liechtenstein	\N	\N	\N	2022-11-17 17:07:43.350573	2022-11-17 17:07:43.350536	e1a30207-82db-4997-8c37-4867c2eb83a3	499
500	uri://ed-fi.org/CountryDescriptor	LK	Sri Lanka	Sri Lanka	\N	\N	\N	2022-11-17 17:07:43.355839	2022-11-17 17:07:43.35579	316aa01a-2dd7-4c27-8f20-e6e2dfdccc2f	500
503	uri://ed-fi.org/CountryDescriptor	LT	Lithuania	Lithuania	\N	\N	\N	2022-11-17 17:07:43.368827	2022-11-17 17:07:43.368758	d99db0ea-3b14-4765-b9b5-c809b80f0643	503
505	uri://ed-fi.org/CountryDescriptor	LY	Libya	Libya	\N	\N	\N	2022-11-17 17:07:43.38474	2022-11-17 17:07:43.3847	dea84b0b-b6bc-4011-bbcd-99db841508e8	505
508	uri://ed-fi.org/CountryDescriptor	LU	Luxembourg	Luxembourg	\N	\N	\N	2022-11-17 17:07:43.401296	2022-11-17 17:07:43.401261	c7017fdd-da40-40cc-ab43-e204be737e31	508
510	uri://ed-fi.org/CountryDescriptor	ME	Montenegro	Montenegro	\N	\N	\N	2022-11-17 17:07:43.411582	2022-11-17 17:07:43.411565	058fa9ae-f58f-449f-ac78-37065d03df27	510
512	uri://ed-fi.org/CountryDescriptor	MG	Madagascar	Madagascar	\N	\N	\N	2022-11-17 17:07:43.419805	2022-11-17 17:07:43.419767	ae2ed98b-8555-428c-bb22-c17d3af5c939	512
515	uri://ed-fi.org/CountryDescriptor	ML	Mali	Mali	\N	\N	\N	2022-11-17 17:07:43.432368	2022-11-17 17:07:43.432333	85993f69-b31b-4eb0-acee-f7a5ecb82186	515
516	uri://ed-fi.org/CountryDescriptor	MM	Myanmar	Myanmar	\N	\N	\N	2022-11-17 17:07:43.437327	2022-11-17 17:07:43.437275	b0d0a68a-03c2-4a68-a57d-901d9470e872	516
519	uri://ed-fi.org/CountryDescriptor	MP	Northern Mariana Islands	Northern Mariana Islands	\N	\N	\N	2022-11-17 17:07:43.449758	2022-11-17 17:07:43.449721	5b54bf57-cbc8-4c59-ae33-f7a3f8ed565d	519
521	uri://ed-fi.org/CountryDescriptor	MR	Mauritania	Mauritania	\N	\N	\N	2022-11-17 17:07:43.45747	2022-11-17 17:07:43.457435	70046bd2-fbf4-4851-b05f-3ba1f6efbfd4	521
523	uri://ed-fi.org/CountryDescriptor	MT	Malta	Malta	\N	\N	\N	2022-11-17 17:07:43.466116	2022-11-17 17:07:43.466078	d51bf200-48ad-48ea-b438-3ee6c68e3508	523
525	uri://ed-fi.org/CountryDescriptor	MV	Maldives	Maldives	\N	\N	\N	2022-11-17 17:07:43.474326	2022-11-17 17:07:43.474202	1486607e-fdd5-43eb-8328-e6dfd12af522	525
527	uri://ed-fi.org/CountryDescriptor	MX	Mexico	Mexico	\N	\N	\N	2022-11-17 17:07:43.481919	2022-11-17 17:07:43.481881	d5fa24ae-ed99-4a72-b119-f3357845f91d	527
529	uri://ed-fi.org/CountryDescriptor	MZ	Mozambique	Mozambique	\N	\N	\N	2022-11-17 17:07:43.48993	2022-11-17 17:07:43.489891	c599e7e0-9306-4d55-884a-24d1858d1a95	529
531	uri://ed-fi.org/CountryDescriptor	NC	New Caledonia	New Caledonia	\N	\N	\N	2022-11-17 17:07:43.49786	2022-11-17 17:07:43.497826	ac9f3072-a277-4a88-a1ff-180f11ae6c21	531
533	uri://ed-fi.org/CountryDescriptor	NF	Norfolk Island	Norfolk Island	\N	\N	\N	2022-11-17 17:07:43.50575	2022-11-17 17:07:43.505711	fd5ef260-4080-4bfa-af0c-212c35a9b685	533
534	uri://ed-fi.org/CountryDescriptor	NG	Nigeria	Nigeria	\N	\N	\N	2022-11-17 17:07:43.510693	2022-11-17 17:07:43.510644	390d73c3-c5c5-42ed-8596-49f5048ab956	534
537	uri://ed-fi.org/CountryDescriptor	NO	Norway	Norway	\N	\N	\N	2022-11-17 17:07:43.522729	2022-11-17 17:07:43.522694	2c68f643-cb03-43a4-ba4b-89c896675d5c	537
539	uri://ed-fi.org/CountryDescriptor	NR	Nauru	Nauru	\N	\N	\N	2022-11-17 17:07:43.530676	2022-11-17 17:07:43.53064	4826edeb-bf9e-4e8c-8d40-0190a06b3ca9	539
541	uri://ed-fi.org/CountryDescriptor	NZ	New Zealand	New Zealand	\N	\N	\N	2022-11-17 17:07:43.539252	2022-11-17 17:07:43.539215	04d55e1f-d504-40e9-8778-eda82d2d338d	541
542	uri://ed-fi.org/CountryDescriptor	OM	Oman	Oman	\N	\N	\N	2022-11-17 17:07:43.544825	2022-11-17 17:07:43.5446	14f2c304-9ffb-440a-971b-c45531ec6814	542
544	uri://ed-fi.org/CountryDescriptor	PE	Peru	Peru	\N	\N	\N	2022-11-17 17:07:43.557162	2022-11-17 17:07:43.557096	4213978d-0c68-411f-97c8-50429fe5e223	544
546	uri://ed-fi.org/CountryDescriptor	PG	Papua New Guinea	Papua New Guinea	\N	\N	\N	2022-11-17 17:07:43.566321	2022-11-17 17:07:43.565716	68e03498-6e55-45c9-9355-fa768083ed95	546
549	uri://ed-fi.org/CountryDescriptor	PL	Poland	Poland	\N	\N	\N	2022-11-17 17:07:43.57952	2022-11-17 17:07:43.579486	16c40451-7bba-45e8-8378-fe21c290d1ec	549
461	uri://ed-fi.org/CountryDescriptor	GT	Guatemala	Guatemala	\N	\N	\N	2022-11-17 17:07:43.152171	2022-11-17 17:07:43.15205	6db5d535-eb19-4354-9ed3-6ae720cc885f	461
463	uri://ed-fi.org/CountryDescriptor	GW	Guinea-Bissau	Guinea-Bissau	\N	\N	\N	2022-11-17 17:07:43.161701	2022-11-17 17:07:43.161662	ff3d5358-62f5-4387-b615-e3595cba3f2f	463
465	uri://ed-fi.org/CountryDescriptor	HK	Hong Kong	Hong Kong	\N	\N	\N	2022-11-17 17:07:43.171667	2022-11-17 17:07:43.171611	d58fa73d-b687-4424-97df-07ca85590fd8	465
467	uri://ed-fi.org/CountryDescriptor	HN	Honduras	Honduras	\N	\N	\N	2022-11-17 17:07:43.184582	2022-11-17 17:07:43.184529	1f49f3ef-8a93-4462-aebe-5ec7a9ad039d	467
469	uri://ed-fi.org/CountryDescriptor	HT	Haiti	Haiti	\N	\N	\N	2022-11-17 17:07:43.197644	2022-11-17 17:07:43.197586	3934d034-e9d0-4f7a-b039-cf4fa53819cc	469
471	uri://ed-fi.org/CountryDescriptor	ID	Indonesia	Indonesia	\N	\N	\N	2022-11-17 17:07:43.213394	2022-11-17 17:07:43.213326	f3cb8ca8-1001-4b13-bc37-3e5dd1c9abe9	471
473	uri://ed-fi.org/CountryDescriptor	IL	Israel	Israel	\N	\N	\N	2022-11-17 17:07:43.223935	2022-11-17 17:07:43.223876	da2fdfb3-01af-454a-ba20-0efb9251a5c0	473
475	uri://ed-fi.org/CountryDescriptor	IN	India	India	\N	\N	\N	2022-11-17 17:07:43.233986	2022-11-17 17:07:43.233779	50b47fc2-600b-4ba6-9573-c85d52b6a8b1	475
477	uri://ed-fi.org/CountryDescriptor	IQ	Iraq	Iraq	\N	\N	\N	2022-11-17 17:07:43.24556	2022-11-17 17:07:43.245521	49836767-eeb9-4303-8fb7-54fe81afd1c8	477
479	uri://ed-fi.org/CountryDescriptor	IS	Iceland	Iceland	\N	\N	\N	2022-11-17 17:07:43.261032	2022-11-17 17:07:43.260978	77e5abbc-7312-41bc-b8ce-2123505e7fd3	479
481	uri://ed-fi.org/CountryDescriptor	JE	Jersey	Jersey	\N	\N	\N	2022-11-17 17:07:43.270193	2022-11-17 17:07:43.270156	be6dc45c-9975-4f4e-9ef0-024af1e617a8	481
483	uri://ed-fi.org/CountryDescriptor	JO	Jordan	Jordan	\N	\N	\N	2022-11-17 17:07:43.27898	2022-11-17 17:07:43.278939	7c49a8ab-c820-4dd1-a4e3-b248aa9006c7	483
484	uri://ed-fi.org/CountryDescriptor	JP	Japan	Japan	\N	\N	\N	2022-11-17 17:07:43.2842	2022-11-17 17:07:43.284151	4d6cb4a4-93a5-4d7a-beac-76c752e1736a	484
486	uri://ed-fi.org/CountryDescriptor	KG	Kyrgyzstan	Kyrgyzstan	\N	\N	\N	2022-11-17 17:07:43.292106	2022-11-17 17:07:43.292065	962eff19-7870-4f58-affb-9894d3882ff4	486
488	uri://ed-fi.org/CountryDescriptor	KI	Kiribati	Kiribati	\N	\N	\N	2022-11-17 17:07:43.300536	2022-11-17 17:07:43.300494	fc4db0ff-29e8-43a4-bb49-ca28d4806cbc	488
491	uri://ed-fi.org/CountryDescriptor	KP	Korea, Democratic People's Republic of	Korea, Democratic People's Republic of	\N	\N	\N	2022-11-17 17:07:43.311727	2022-11-17 17:07:43.311693	40628131-48f2-4a6d-8932-2c981e032b5a	491
493	uri://ed-fi.org/CountryDescriptor	KW	Kuwait	Kuwait	\N	\N	\N	2022-11-17 17:07:43.32166	2022-11-17 17:07:43.321622	6b693e8e-2b16-4c1b-9611-129d203205bc	493
495	uri://ed-fi.org/CountryDescriptor	KZ	Kazakhstan	Kazakhstan	\N	\N	\N	2022-11-17 17:07:43.332032	2022-11-17 17:07:43.331984	66b2922b-90d7-4514-8757-19ee9a1d348e	495
498	uri://ed-fi.org/CountryDescriptor	LC	Saint Lucia	Saint Lucia	\N	\N	\N	2022-11-17 17:07:43.345535	2022-11-17 17:07:43.345498	f26aaf12-64df-4f1e-b3aa-fb768245d47b	498
501	uri://ed-fi.org/CountryDescriptor	LR	Liberia	Liberia	\N	\N	\N	2022-11-17 17:07:43.359812	2022-11-17 17:07:43.359725	e883fe79-3df7-4ce0-bcb6-b46e2ac1cbbe	501
502	uri://ed-fi.org/CountryDescriptor	LS	Lesotho	Lesotho	\N	\N	\N	2022-11-17 17:07:43.365889	2022-11-17 17:07:43.364821	21400c91-0175-4b19-9e61-d9d060946f85	502
504	uri://ed-fi.org/CountryDescriptor	LV	Latvia	Latvia	\N	\N	\N	2022-11-17 17:07:43.377148	2022-11-17 17:07:43.377108	892cf220-45ec-4f6f-b956-1eb362723014	504
506	uri://ed-fi.org/CountryDescriptor	MA	Morocco	Morocco	\N	\N	\N	2022-11-17 17:07:43.392014	2022-11-17 17:07:43.391977	1be8f3f5-795b-4f8d-bdd7-032925a4184a	506
507	uri://ed-fi.org/CountryDescriptor	MC	Monaco	Monaco	\N	\N	\N	2022-11-17 17:07:43.399646	2022-11-17 17:07:43.399596	dc797167-8d8a-4c12-8045-8899420ce2ad	507
509	uri://ed-fi.org/CountryDescriptor	MD	Moldova, Republic of	Moldova, Republic of	\N	\N	\N	2022-11-17 17:07:43.408094	2022-11-17 17:07:43.40802	a563f8f4-1168-4022-9ad8-7322e22a49b2	509
511	uri://ed-fi.org/CountryDescriptor	MF	Saint Martin (French part)	Saint Martin (French part)	\N	\N	\N	2022-11-17 17:07:43.416045	2022-11-17 17:07:43.416007	4d3eaf0e-ad47-4bdc-bd07-8eb5a9ee706e	511
513	uri://ed-fi.org/CountryDescriptor	MH	Marshall Islands	Marshall Islands	\N	\N	\N	2022-11-17 17:07:43.424229	2022-11-17 17:07:43.424193	f8e04f41-7d24-4c2d-8f77-8c18ab0a8f30	513
514	uri://ed-fi.org/CountryDescriptor	MK	Macedonia, the former Yugoslav Republic of	Macedonia, the former Yugoslav Republic of	\N	\N	\N	2022-11-17 17:07:43.429547	2022-11-17 17:07:43.429266	3e5bd89f-92c5-45e6-a504-b9d8f7816796	514
517	uri://ed-fi.org/CountryDescriptor	MN	Mongolia	Mongolia	\N	\N	\N	2022-11-17 17:07:43.440618	2022-11-17 17:07:43.440584	58dfe262-fd1b-48df-bc56-84f1942be161	517
518	uri://ed-fi.org/CountryDescriptor	MO	Macao	Macao	\N	\N	\N	2022-11-17 17:07:43.445727	2022-11-17 17:07:43.44568	efdf2d27-3124-4aa1-898c-7b1d7f3b22d6	518
520	uri://ed-fi.org/CountryDescriptor	MQ	Martinique	Martinique	\N	\N	\N	2022-11-17 17:07:43.45401	2022-11-17 17:07:43.453974	dbde065f-fb1f-4a52-92a1-3d62533710f2	520
522	uri://ed-fi.org/CountryDescriptor	MS	Montserrat	Montserrat	\N	\N	\N	2022-11-17 17:07:43.461945	2022-11-17 17:07:43.461908	b8c60fed-5144-48ee-b7d6-d251f09519fb	522
524	uri://ed-fi.org/CountryDescriptor	MU	Mauritius	Mauritius	\N	\N	\N	2022-11-17 17:07:43.469879	2022-11-17 17:07:43.469844	b76e46a3-41bd-48d8-a9da-e013152b5a9e	524
526	uri://ed-fi.org/CountryDescriptor	MW	Malawi	Malawi	\N	\N	\N	2022-11-17 17:07:43.478073	2022-11-17 17:07:43.478038	63d277f8-df31-4f14-81ee-21c85054f831	526
528	uri://ed-fi.org/CountryDescriptor	MY	Malaysia	Malaysia	\N	\N	\N	2022-11-17 17:07:43.485888	2022-11-17 17:07:43.485853	197b0ce2-72e5-440a-b00b-ef5938a9ce85	528
530	uri://ed-fi.org/CountryDescriptor	NA	Namibia	Namibia	\N	\N	\N	2022-11-17 17:07:43.494284	2022-11-17 17:07:43.494248	0489f7f8-9108-4c80-ab8e-b389c27aa291	530
532	uri://ed-fi.org/CountryDescriptor	NE	Niger	Niger	\N	\N	\N	2022-11-17 17:07:43.502329	2022-11-17 17:07:43.502233	39116cb9-208c-46f6-9aeb-677b77b98e11	532
535	uri://ed-fi.org/CountryDescriptor	NI	Nicaragua	Nicaragua	\N	\N	\N	2022-11-17 17:07:43.513784	2022-11-17 17:07:43.513749	ce2f7059-5b12-46a6-b886-9a333519deb8	535
536	uri://ed-fi.org/CountryDescriptor	NL	Netherlands	Netherlands	\N	\N	\N	2022-11-17 17:07:43.519664	2022-11-17 17:07:43.519563	7b0c79a1-1efd-4c8c-ac99-f4b28fb81713	536
538	uri://ed-fi.org/CountryDescriptor	NP	Nepal	Nepal	\N	\N	\N	2022-11-17 17:07:43.527988	2022-11-17 17:07:43.52792	58f40a2f-d9c0-476f-957e-05b1a0dea9da	538
540	uri://ed-fi.org/CountryDescriptor	NU	Niue	Niue	\N	\N	\N	2022-11-17 17:07:43.536325	2022-11-17 17:07:43.536258	53958f9f-75a8-45b4-b1d8-2108008637a7	540
543	uri://ed-fi.org/CountryDescriptor	PA	Panama	Panama	\N	\N	\N	2022-11-17 17:07:43.547787	2022-11-17 17:07:43.547752	4c8814f9-e3a2-40bc-8ae0-861985726c69	543
545	uri://ed-fi.org/CountryDescriptor	PF	French Polynesia	French Polynesia	\N	\N	\N	2022-11-17 17:07:43.559943	2022-11-17 17:07:43.559908	0fa39fe2-b14a-495a-b3f1-a961720f7d15	545
547	uri://ed-fi.org/CountryDescriptor	PH	Philippines	Philippines	\N	\N	\N	2022-11-17 17:07:43.569893	2022-11-17 17:07:43.569845	f9e6daf1-a48e-4659-91b0-a7df2f96b9bc	547
548	uri://ed-fi.org/CountryDescriptor	PK	Pakistan	Pakistan	\N	\N	\N	2022-11-17 17:07:43.576545	2022-11-17 17:07:43.576316	2c393d96-4822-4220-bc26-2f9e8aefcfeb	548
551	uri://ed-fi.org/CountryDescriptor	PN	Pitcairn	Pitcairn	\N	\N	\N	2022-11-17 17:07:43.588114	2022-11-17 17:07:43.588051	79e6e386-8d0c-4d69-9a59-bf05c2771f2b	551
552	uri://ed-fi.org/CountryDescriptor	PR	Puerto Rico	Puerto Rico	\N	\N	\N	2022-11-17 17:07:43.593169	2022-11-17 17:07:43.59312	9af2cbaa-7af8-421c-8bde-5d0fcc2462e4	552
554	uri://ed-fi.org/CountryDescriptor	PT	Portugal	Portugal	\N	\N	\N	2022-11-17 17:07:43.602525	2022-11-17 17:07:43.602455	012107df-6d77-4467-940b-10f9be76cbb5	554
556	uri://ed-fi.org/CountryDescriptor	PY	Paraguay	Paraguay	\N	\N	\N	2022-11-17 17:07:43.613037	2022-11-17 17:07:43.612963	c9343321-70d7-4d89-9a3f-329ca3887e70	556
558	uri://ed-fi.org/CountryDescriptor	RE	Réunion	Réunion	\N	\N	\N	2022-11-17 17:07:43.622283	2022-11-17 17:07:43.622234	2f9f0e75-84a9-44de-9243-2e57987a22dc	558
560	uri://ed-fi.org/CountryDescriptor	RS	Serbia	Serbia	\N	\N	\N	2022-11-17 17:07:43.633167	2022-11-17 17:07:43.63299	5668778c-0eef-41ac-9b60-1dc30b20add3	560
562	uri://ed-fi.org/CountryDescriptor	RW	Rwanda	Rwanda	\N	\N	\N	2022-11-17 17:07:43.642935	2022-11-17 17:07:43.642857	6af80986-463b-4712-8049-aa3d99ad4def	562
564	uri://ed-fi.org/CountryDescriptor	SB	Solomon Islands	Solomon Islands	\N	\N	\N	2022-11-17 17:07:43.65251	2022-11-17 17:07:43.652443	d722933c-c0fb-41b4-a511-fa51eb0fc727	564
566	uri://ed-fi.org/CountryDescriptor	SD	Sudan	Sudan	\N	\N	\N	2022-11-17 17:07:43.661471	2022-11-17 17:07:43.661394	26513bd7-2108-4d1d-94ac-7a55b30d0ffd	566
567	uri://ed-fi.org/CountryDescriptor	SE	Sweden	Sweden	\N	\N	\N	2022-11-17 17:07:43.666842	2022-11-17 17:07:43.666793	266929ca-dde3-4e99-abcc-495bc2f603ab	567
569	uri://ed-fi.org/CountryDescriptor	SH	Saint Helena, Ascension and Tristan da Cunha	Saint Helena, Ascension and Tristan da Cunha	\N	\N	\N	2022-11-17 17:07:43.675979	2022-11-17 17:07:43.675942	045c7f3e-18f2-490f-928a-8a65b1682da4	569
1527	uri://ed-fi.org/LanguageDescriptor	nog	Nogai	Nogai	\N	\N	\N	2022-11-17 17:07:49.729393	2022-11-17 17:07:49.729361	bedd2e5e-a5d9-4eef-944c-de830f801d4a	1527
550	uri://ed-fi.org/CountryDescriptor	PM	Saint Pierre and Miquelon	Saint Pierre and Miquelon	\N	\N	\N	2022-11-17 17:07:43.585062	2022-11-17 17:07:43.584885	de887e3e-2851-413c-bc61-1d5def7afe61	550
553	uri://ed-fi.org/CountryDescriptor	PS	Palestine, State of	Palestine, State of	\N	\N	\N	2022-11-17 17:07:43.597161	2022-11-17 17:07:43.597069	73c6194b-ddf7-42fc-a124-14e25f1808d2	553
555	uri://ed-fi.org/CountryDescriptor	PW	Palau	Palau	\N	\N	\N	2022-11-17 17:07:43.607742	2022-11-17 17:07:43.607695	2ba279fe-4d07-4b03-925e-35bb072983e2	555
557	uri://ed-fi.org/CountryDescriptor	QA	Qatar	Qatar	\N	\N	\N	2022-11-17 17:07:43.618899	2022-11-17 17:07:43.618325	ef3dc165-029c-416f-beeb-9f71a1ad90a0	557
559	uri://ed-fi.org/CountryDescriptor	RO	Romania	Romania	\N	\N	\N	2022-11-17 17:07:43.630277	2022-11-17 17:07:43.630229	9abfe892-3db3-44b6-96e5-3ae78957a7e6	559
561	uri://ed-fi.org/CountryDescriptor	RU	Russian Federation	Russian Federation	\N	\N	\N	2022-11-17 17:07:43.639151	2022-11-17 17:07:43.639103	f4c8e0e6-f788-4ba2-b6a0-72fea2934d96	561
563	uri://ed-fi.org/CountryDescriptor	SA	Saudi Arabia	Saudi Arabia	\N	\N	\N	2022-11-17 17:07:43.648348	2022-11-17 17:07:43.648269	b541b666-c6c8-4533-a3bd-ddf2628b36c8	563
565	uri://ed-fi.org/CountryDescriptor	SC	Seychelles	Seychelles	\N	\N	\N	2022-11-17 17:07:43.658341	2022-11-17 17:07:43.657154	b2469498-5054-498b-911c-c93da60a8acf	565
568	uri://ed-fi.org/CountryDescriptor	SG	Singapore	Singapore	\N	\N	\N	2022-11-17 17:07:43.670841	2022-11-17 17:07:43.670794	0faeeb9b-4ab7-4a91-ba90-646d38e7367d	568
570	uri://ed-fi.org/CountryDescriptor	SI	Slovenia	Slovenia	\N	\N	\N	2022-11-17 17:07:43.680822	2022-11-17 17:07:43.680774	4d6d43ef-9865-4c6c-9a18-b6e9004869e6	570
572	uri://ed-fi.org/CountryDescriptor	SK	Slovakia	Slovakia	\N	\N	\N	2022-11-17 17:07:43.692009	2022-11-17 17:07:43.691971	524bbd72-2f4e-40a9-b926-2a4210d9e5df	572
573	uri://ed-fi.org/CountryDescriptor	SL	Sierra Leone	Sierra Leone	\N	\N	\N	2022-11-17 17:07:43.697926	2022-11-17 17:07:43.697877	df9fa035-ec8a-46e2-916c-990c48bd602a	573
575	uri://ed-fi.org/CountryDescriptor	SN	Senegal	Senegal	\N	\N	\N	2022-11-17 17:07:43.707498	2022-11-17 17:07:43.70745	f99cff41-0bfc-457b-a96b-1c9e24c34786	575
577	uri://ed-fi.org/CountryDescriptor	SR	Suriname	Suriname	\N	\N	\N	2022-11-17 17:07:43.717604	2022-11-17 17:07:43.717543	3228b5a5-c24d-40e9-bff3-de1f84c20b08	577
579	uri://ed-fi.org/CountryDescriptor	ST	Sao Tome and Principe	Sao Tome and Principe	\N	\N	\N	2022-11-17 17:07:43.727336	2022-11-17 17:07:43.727288	4c499f70-769b-4e24-b635-62e7144b4032	579
581	uri://ed-fi.org/CountryDescriptor	SX	Sint Maarten (Dutch part)	Sint Maarten (Dutch part)	\N	\N	\N	2022-11-17 17:07:43.737344	2022-11-17 17:07:43.737295	78f87abe-a48e-4d97-838b-33d7ef15e3ee	581
583	uri://ed-fi.org/CountryDescriptor	SZ	Swaziland	Swaziland	\N	\N	\N	2022-11-17 17:07:43.747328	2022-11-17 17:07:43.74728	ab2a0d21-cc7b-49c8-88e6-22e7d4edd903	583
585	uri://ed-fi.org/CountryDescriptor	TD	Chad	Chad	\N	\N	\N	2022-11-17 17:07:43.757439	2022-11-17 17:07:43.757359	295a0c5d-2f56-4f24-a41b-380c25b8562a	585
587	uri://ed-fi.org/CountryDescriptor	TG	Togo	Togo	\N	\N	\N	2022-11-17 17:07:43.76726	2022-11-17 17:07:43.767184	6b8de1b2-cbf6-4a2b-900b-c208e2034c79	587
589	uri://ed-fi.org/CountryDescriptor	TJ	Tajikistan	Tajikistan	\N	\N	\N	2022-11-17 17:07:43.777496	2022-11-17 17:07:43.777456	13fb94b8-7db2-4e6f-9200-4c70e5d4d920	589
590	uri://ed-fi.org/CountryDescriptor	TK	Tokelau	Tokelau	\N	\N	\N	2022-11-17 17:07:43.784006	2022-11-17 17:07:43.782381	f531bfd6-1e11-4e85-8366-2ddc5275fa9d	590
593	uri://ed-fi.org/CountryDescriptor	TN	Tunisia	Tunisia	\N	\N	\N	2022-11-17 17:07:43.797042	2022-11-17 17:07:43.796971	862a6502-7a61-48a7-a346-d01fb1f7f34d	593
596	uri://ed-fi.org/CountryDescriptor	TT	Trinidad and Tobago	Trinidad and Tobago	\N	\N	\N	2022-11-17 17:07:43.811605	2022-11-17 17:07:43.811526	0081dfda-b842-41ec-bbde-774992d0ce2e	596
598	uri://ed-fi.org/CountryDescriptor	TW	Taiwan, Province of China	Taiwan, Province of China	\N	\N	\N	2022-11-17 17:07:43.820803	2022-11-17 17:07:43.820755	97bda426-4576-4eb2-a471-6295b5836511	598
600	uri://ed-fi.org/CountryDescriptor	UA	Ukraine	Ukraine	\N	\N	\N	2022-11-17 17:07:43.831479	2022-11-17 17:07:43.831286	6a1fa1f2-627c-4c34-8384-587e708d1f48	600
602	uri://ed-fi.org/CountryDescriptor	UM	United States Minor Outlying Islands	United States Minor Outlying Islands	\N	\N	\N	2022-11-17 17:07:43.840528	2022-11-17 17:07:43.840451	ef42471b-dde7-4db6-8399-be99e7e4d910	602
604	uri://ed-fi.org/CountryDescriptor	UY	Uruguay	Uruguay	\N	\N	\N	2022-11-17 17:07:43.85142	2022-11-17 17:07:43.851366	ec9f4a5f-fa00-4959-a014-a91aae7c537e	604
606	uri://ed-fi.org/CountryDescriptor	VA	Holy See	Holy See	\N	\N	\N	2022-11-17 17:07:43.862176	2022-11-17 17:07:43.862128	f0570125-8c3c-43e6-8a65-de48b04dcc3f	606
608	uri://ed-fi.org/CountryDescriptor	VE	Venezuela, Bolivarian Republic of	Venezuela, Bolivarian Republic of	\N	\N	\N	2022-11-17 17:07:43.870703	2022-11-17 17:07:43.870617	cae7f9ff-9d49-4dd8-a540-1a5de34ca936	608
611	uri://ed-fi.org/CountryDescriptor	VN	Viet Nam	Viet Nam	\N	\N	\N	2022-11-17 17:07:43.88527	2022-11-17 17:07:43.885222	89cdc152-7334-4408-990c-b8f858a23bfd	611
613	uri://ed-fi.org/CountryDescriptor	WF	Wallis and Futuna	Wallis and Futuna	\N	\N	\N	2022-11-17 17:07:43.897189	2022-11-17 17:07:43.897142	82439bce-1e0b-4306-bfb3-57c3beb8f466	613
615	uri://ed-fi.org/CountryDescriptor	YE	Yemen	Yemen	\N	\N	\N	2022-11-17 17:07:43.90908	2022-11-17 17:07:43.90861	ea473494-1272-4bd8-92c5-cb1bb1acd6ca	615
618	uri://ed-fi.org/CountryDescriptor	ZM	Zambia	Zambia	\N	\N	\N	2022-11-17 17:07:43.921306	2022-11-17 17:07:43.921258	9d2eccc7-2d1b-4050-8d99-5dd5435a8aed	618
620	uri://ed-fi.org/CourseAttemptResultDescriptor	Incomplete	Incomplete	Incomplete	\N	\N	\N	2022-11-17 17:07:43.960258	2022-11-17 17:07:43.958892	5bb7d763-4b0d-4872-93ed-d7f9708b9ca7	620
622	uri://ed-fi.org/CourseAttemptResultDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-11-17 17:07:43.970829	2022-11-17 17:07:43.970771	cecb8950-8566-4bde-a72f-533eedba4c6d	622
625	uri://ed-fi.org/CourseDefinedByDescriptor	LEA	LEA	LEA	\N	\N	\N	2022-11-17 17:07:44.007051	2022-11-17 17:07:44.005436	304ea836-29a3-4ae8-9dbd-e3ab1298e886	625
627	uri://ed-fi.org/CourseDefinedByDescriptor	SEA	SEA	SEA	\N	\N	\N	2022-11-17 17:07:44.019481	2022-11-17 17:07:44.019433	dacbb483-25de-4588-81fd-3740ce0f37b8	627
629	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Not Applicable	Not Applicable	Not Applicable	\N	\N	\N	2022-11-17 17:07:44.055142	2022-11-17 17:07:44.053771	3a792a9d-385b-438a-9d28-2bf97821a738	629
632	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Intermediate agency course code	Intermediate agency course code	Intermediate agency course code	\N	\N	\N	2022-11-17 17:07:44.104042	2022-11-17 17:07:44.102585	16572137-90c9-4508-9846-5f65f2b70624	632
633	uri://ed-fi.org/CourseIdentificationSystemDescriptor	LEA course code	LEA course code	LEA course code	\N	\N	\N	2022-11-17 17:07:44.114928	2022-11-17 17:07:44.114838	05cd46f4-fe45-41fc-890c-3d3870211324	633
635	uri://ed-fi.org/CourseIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:44.123209	2022-11-17 17:07:44.123168	ed486de9-d046-4766-9376-6ccee4304cea	635
637	uri://ed-fi.org/CourseIdentificationSystemDescriptor	School course code	School course code	School course code	\N	\N	\N	2022-11-17 17:07:44.131378	2022-11-17 17:07:44.131334	fe415fbe-d773-4c7d-80f3-72cc25d1eef2	637
639	uri://ed-fi.org/CourseIdentificationSystemDescriptor	University course code	University course code	University course code	\N	\N	\N	2022-11-17 17:07:44.139499	2022-11-17 17:07:44.139456	4526ca8c-ddc5-4464-b734-d0c40efd099c	639
641	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2022-11-17 17:07:44.171564	2022-11-17 17:07:44.170236	1c52f888-ac5c-445e-8fab-98dcd4af2e45	641
642	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2022-11-17 17:07:44.182072	2022-11-17 17:07:44.182015	b545e2e2-a0cb-4e62-856d-ecb59d8f3f1d	642
644	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-11-17 17:07:44.19028	2022-11-17 17:07:44.190245	c78fc0d6-ab6d-436b-93ba-0b9f70476dec	644
646	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Core Subject	Core Subject	Core Subject	\N	\N	\N	2022-11-17 17:07:44.198511	2022-11-17 17:07:44.198477	c553e9d5-aa6f-4a3b-9da7-d017f5c59dd8	646
648	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Distance Learning	Distance Learning	Distance Learning	\N	\N	\N	2022-11-17 17:07:44.206675	2022-11-17 17:07:44.20664	40517a5e-d8c7-4124-8be3-646888967101	648
649	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	2022-11-17 17:07:44.211705	2022-11-17 17:07:44.211609	ad003f48-1eaa-4991-8abc-82152123f027	649
651	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	General	General	General	\N	\N	\N	2022-11-17 17:07:44.219855	2022-11-17 17:07:44.21982	e1813fe8-5385-48f1-838f-be33a27c75ed	651
653	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Graduation Credit	Graduation Credit	Graduation Credit	\N	\N	\N	2022-11-17 17:07:44.227889	2022-11-17 17:07:44.227856	28138e0a-0ccc-4415-9560-5ee01b16dcdb	653
571	uri://ed-fi.org/CountryDescriptor	SJ	Svalbard and Jan Mayen	Svalbard and Jan Mayen	\N	\N	\N	2022-11-17 17:07:43.689265	2022-11-17 17:07:43.687441	c643182c-3ee2-4d38-aa68-e2b85170f4be	571
574	uri://ed-fi.org/CountryDescriptor	SM	San Marino	San Marino	\N	\N	\N	2022-11-17 17:07:43.702726	2022-11-17 17:07:43.702678	16b61b38-f0c6-475e-a68c-75e9eae31521	574
576	uri://ed-fi.org/CountryDescriptor	SO	Somalia	Somalia	\N	\N	\N	2022-11-17 17:07:43.712785	2022-11-17 17:07:43.712736	d4cd32ac-63f5-43f3-925e-2411633b16c2	576
578	uri://ed-fi.org/CountryDescriptor	SS	South Sudan	South Sudan	\N	\N	\N	2022-11-17 17:07:43.722459	2022-11-17 17:07:43.7224	b357f8d0-c376-4b8e-a9bd-9ade64fb8f6b	578
580	uri://ed-fi.org/CountryDescriptor	SV	El Salvador	El Salvador	\N	\N	\N	2022-11-17 17:07:43.732188	2022-11-17 17:07:43.73214	8d7037ba-4897-4cae-96b3-1506325b05fb	580
582	uri://ed-fi.org/CountryDescriptor	SY	Syrian Arab Republic	Syrian Arab Republic	\N	\N	\N	2022-11-17 17:07:43.742363	2022-11-17 17:07:43.742315	23734df1-6275-46b1-87c0-3b34ce413b0b	582
584	uri://ed-fi.org/CountryDescriptor	TC	Turks and Caicos Islands	Turks and Caicos Islands	\N	\N	\N	2022-11-17 17:07:43.752611	2022-11-17 17:07:43.752562	84a955c4-5126-411b-b168-b2da57341827	584
586	uri://ed-fi.org/CountryDescriptor	TF	French Southern Territories	French Southern Territories	\N	\N	\N	2022-11-17 17:07:43.762206	2022-11-17 17:07:43.762146	c59f5ba5-5411-4275-8f28-f5708d5a9b47	586
588	uri://ed-fi.org/CountryDescriptor	TH	Thailand	Thailand	\N	\N	\N	2022-11-17 17:07:43.772297	2022-11-17 17:07:43.77225	1c3a2028-e579-42eb-9d0a-e822ded50dcf	588
591	uri://ed-fi.org/CountryDescriptor	TL	Timor-Leste	Timor-Leste	\N	\N	\N	2022-11-17 17:07:43.786706	2022-11-17 17:07:43.786634	960c223b-306f-42ec-9dd6-76211832f802	591
592	uri://ed-fi.org/CountryDescriptor	TM	Turkmenistan	Turkmenistan	\N	\N	\N	2022-11-17 17:07:43.793499	2022-11-17 17:07:43.79282	ddd1109e-e044-4284-89b0-9d131c8db0dd	592
594	uri://ed-fi.org/CountryDescriptor	TO	Tonga	Tonga	\N	\N	\N	2022-11-17 17:07:43.802038	2022-11-17 17:07:43.801956	9a17be96-dab3-44ae-84fd-5e7c874b154a	594
595	uri://ed-fi.org/CountryDescriptor	TR	Turkey	Turkey	\N	\N	\N	2022-11-17 17:07:43.808442	2022-11-17 17:07:43.808391	45ac33e8-778f-4dca-a56c-1cf4439f23d4	595
597	uri://ed-fi.org/CountryDescriptor	TV	Tuvalu	Tuvalu	\N	\N	\N	2022-11-17 17:07:43.817738	2022-11-17 17:07:43.81769	318682c5-3d10-402d-85cc-03b460531a8a	597
599	uri://ed-fi.org/CountryDescriptor	TZ	Tanzania, United Republic of	Tanzania, United Republic of	\N	\N	\N	2022-11-17 17:07:43.827735	2022-11-17 17:07:43.82743	3e211472-9f95-4e35-8ffd-9ccd2fa6d80e	599
601	uri://ed-fi.org/CountryDescriptor	UG	Uganda	Uganda	\N	\N	\N	2022-11-17 17:07:43.837586	2022-11-17 17:07:43.8364	f139aed7-bc56-4e02-9d91-0a570164a038	601
603	uri://ed-fi.org/CountryDescriptor	US	United States of America	United States of America	\N	\N	\N	2022-11-17 17:07:43.846169	2022-11-17 17:07:43.846133	56d100cb-fb7a-4851-83ac-4cfee90d1f75	603
605	uri://ed-fi.org/CountryDescriptor	UZ	Uzbekistan	Uzbekistan	\N	\N	\N	2022-11-17 17:07:43.85604	2022-11-17 17:07:43.855991	94098b5c-40de-4a90-9e89-29e99f7c4b48	605
607	uri://ed-fi.org/CountryDescriptor	VC	Saint Vincent and the Grenadines	Saint Vincent and the Grenadines	\N	\N	\N	2022-11-17 17:07:43.865922	2022-11-17 17:07:43.865875	de32b554-5440-422f-ba81-b2c2c2edc355	607
609	uri://ed-fi.org/CountryDescriptor	VG	Virgin Islands, British	Virgin Islands, British	\N	\N	\N	2022-11-17 17:07:43.876312	2022-11-17 17:07:43.876264	8282c595-87b6-44bd-8665-da56dc349b25	609
610	uri://ed-fi.org/CountryDescriptor	VI	Virgin Islands, U.S.	Virgin Islands, U.S.	\N	\N	\N	2022-11-17 17:07:43.882259	2022-11-17 17:07:43.881735	f8e05614-503b-46ee-8735-14be0f515ecf	610
612	uri://ed-fi.org/CountryDescriptor	VU	Vanuatu	Vanuatu	\N	\N	\N	2022-11-17 17:07:43.892926	2022-11-17 17:07:43.892878	1941ca2d-5ed5-4d00-8912-6da8ffffa6ab	612
614	uri://ed-fi.org/CountryDescriptor	WS	Samoa	Samoa	\N	\N	\N	2022-11-17 17:07:43.901986	2022-11-17 17:07:43.901924	b93a3a11-6781-43f7-8df7-1a1ffae7e7ab	614
616	uri://ed-fi.org/CountryDescriptor	YT	Mayotte	Mayotte	\N	\N	\N	2022-11-17 17:07:43.912416	2022-11-17 17:07:43.912347	0ac12188-4b84-4415-b4ec-c3b816a41bd6	616
617	uri://ed-fi.org/CountryDescriptor	ZA	South Africa	South Africa	\N	\N	\N	2022-11-17 17:07:43.917597	2022-11-17 17:07:43.917548	82c31a6e-0996-4a20-a10f-14c40577ea9e	617
619	uri://ed-fi.org/CountryDescriptor	ZW	Zimbabwe	Zimbabwe	\N	\N	\N	2022-11-17 17:07:43.926306	2022-11-17 17:07:43.926252	c6c4b2b4-c43c-4317-ab21-1e2b3251585b	619
621	uri://ed-fi.org/CourseAttemptResultDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-11-17 17:07:43.960282	2022-11-17 17:07:43.958897	08b2d9f1-c663-4469-9b06-86e1dd9fa52b	621
623	uri://ed-fi.org/CourseAttemptResultDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	2022-11-17 17:07:43.97433	2022-11-17 17:07:43.974295	1ef382bb-e24c-492f-9f5f-8fcfeb6aa41d	623
624	uri://ed-fi.org/CourseDefinedByDescriptor	National Organization	National Organization	National Organization	\N	\N	\N	2022-11-17 17:07:44.007051	2022-11-17 17:07:44.005432	940c3554-3992-4f7c-b90d-6b01b526e4b4	624
626	uri://ed-fi.org/CourseDefinedByDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:44.018846	2022-11-17 17:07:44.018171	21c56baf-f68b-4f92-8eec-168c2ec148ab	626
628	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Applicable	Applicable	Applicable	\N	\N	\N	2022-11-17 17:07:44.055118	2022-11-17 17:07:44.053765	14cc04a4-afb5-4288-8ed2-25e09b1de66f	628
630	uri://ed-fi.org/CourseGPAApplicabilityDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	2022-11-17 17:07:44.072286	2022-11-17 17:07:44.072218	d7ebadce-7e86-40d6-8014-16d61a092c15	630
631	uri://ed-fi.org/CourseIdentificationSystemDescriptor	CSSC course code	CSSC course code	CSSC course code	\N	\N	\N	2022-11-17 17:07:44.104028	2022-11-17 17:07:44.10262	f4664d7e-1385-4a6f-9a4e-cc81b947bef1	631
634	uri://ed-fi.org/CourseIdentificationSystemDescriptor	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	NCES Pilot SNCCS course code	\N	\N	\N	2022-11-17 17:07:44.118984	2022-11-17 17:07:44.118604	4399123a-76db-42f9-a7fd-6434d8dcf71b	634
636	uri://ed-fi.org/CourseIdentificationSystemDescriptor	SCED course code	SCED course code	SCED course code	\N	\N	\N	2022-11-17 17:07:44.127084	2022-11-17 17:07:44.127049	eb5714b4-bb06-471d-a212-a671a1c13887	636
638	uri://ed-fi.org/CourseIdentificationSystemDescriptor	State course code	State course code	State course code	\N	\N	\N	2022-11-17 17:07:44.134935	2022-11-17 17:07:44.134899	e88035b4-6ba0-4d27-9932-69bf28b9abb6	638
640	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Accepted as high school equivalent	Accepted as high school equivalent	Accepted as high school equivalent	\N	\N	\N	2022-11-17 17:07:44.171551	2022-11-17 17:07:44.170232	4a6d5042-23de-47eb-b23f-ae336ae98bbf	640
643	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Basic	Basic	Basic	\N	\N	\N	2022-11-17 17:07:44.185737	2022-11-17 17:07:44.185701	2c8cad0a-c455-4bc4-a761-5745f7fa696e	643
645	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	College-level	College-level	College-level	\N	\N	\N	2022-11-17 17:07:44.194691	2022-11-17 17:07:44.194653	c455ed99-5225-4a15-acbb-3ec8b5237100	645
647	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Correspondence	Correspondence	Correspondence	\N	\N	\N	2022-11-17 17:07:44.203191	2022-11-17 17:07:44.203154	47db0110-5b6c-481e-b4bb-234ffae4b765	647
650	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	English Language Learner	English Language Learner	English Language Learner	\N	\N	\N	2022-11-17 17:07:44.215107	2022-11-17 17:07:44.215073	db3b6b76-62fb-4520-b859-566d5ff936fa	650
652	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	2022-11-17 17:07:44.223308	2022-11-17 17:07:44.223273	0e020a34-12c5-4f73-8e5c-691cbdc6dcf1	652
654	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Honors	Honors	Honors	\N	\N	\N	2022-11-17 17:07:44.231553	2022-11-17 17:07:44.231517	c783dfc1-de48-4e3a-94d1-e0bdc7018f2a	654
656	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Magnet	Magnet	Magnet	\N	\N	\N	2022-11-17 17:07:44.240466	2022-11-17 17:07:44.240208	992e4a67-0fff-4501-8857-80b858724c54	656
659	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-IB	Pre-IB	Pre-IB	\N	\N	\N	2022-11-17 17:07:44.252207	2022-11-17 17:07:44.252171	70ea3c2e-34a8-4e65-8cf8-6e1fd37d78bc	659
661	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Students with disabilities	Students with disabilities	Students with disabilities	\N	\N	\N	2022-11-17 17:07:44.260656	2022-11-17 17:07:44.260618	71d620ff-5cda-4230-9840-9e3ef235c9f0	661
664	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Counted	Repeat Counted	Repeat Counted	\N	\N	\N	2022-11-17 17:07:44.297474	2022-11-17 17:07:44.296106	41093ee3-da3f-4d9d-916b-b0046dbb04fb	664
665	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat NotCounted	Repeat NotCounted	Repeat NotCounted	\N	\N	\N	2022-11-17 17:07:44.308778	2022-11-17 17:07:44.308722	397f9679-dfb8-4b85-92d5-da7e4a0b6eba	665
667	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replaced NotCounted	Replaced NotCounted	Replaced NotCounted	\N	\N	\N	2022-11-17 17:07:44.317106	2022-11-17 17:07:44.317007	a01bd980-d860-40a2-b63b-20d50057f6dd	667
655	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-11-17 17:07:44.235501	2022-11-17 17:07:44.235467	aa7711a8-52fa-454f-9d43-a8f795420e5a	655
657	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:44.243892	2022-11-17 17:07:44.243853	e495c421-4e03-4ab2-bcfa-8b1c27b32fad	657
658	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Pre-AP	Pre-AP	Pre-AP	\N	\N	\N	2022-11-17 17:07:44.24882	2022-11-17 17:07:44.248781	e7927526-e805-4515-80d7-c9ffb1970b2e	658
660	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Remedial	Remedial	Remedial	\N	\N	\N	2022-11-17 17:07:44.257142	2022-11-17 17:07:44.257102	7b93d5a7-78ca-4605-b7ae-873bda6a707b	660
662	uri://ed-fi.org/CourseLevelCharacteristicDescriptor	Untracked	Untracked	Untracked	\N	\N	\N	2022-11-17 17:07:44.265326	2022-11-17 17:07:44.265287	a432b73b-e8ed-494e-bc7e-78c0630c7237	662
663	uri://ed-fi.org/CourseRepeatCodeDescriptor	Not Counted Other	Not Counted Other	Not Counted Other	\N	\N	\N	2022-11-17 17:07:44.29746	2022-11-17 17:07:44.296109	854f472a-a6ff-4ac5-bce1-64d153d2cfd4	663
666	uri://ed-fi.org/CourseRepeatCodeDescriptor	Repeat Other Institution	Repeat Other Institution	Repeat Other Institution	\N	\N	\N	2022-11-17 17:07:44.31068	2022-11-17 17:07:44.310645	3eb1c418-c959-40c2-8a84-d15a5a083357	666
668	uri://ed-fi.org/CourseRepeatCodeDescriptor	Replacement Counted	Replacement Counted	Replacement Counted	\N	\N	\N	2022-11-17 17:07:44.320215	2022-11-17 17:07:44.320179	deef0035-4916-4aa2-b608-9cb820c1b766	668
669	uri://ed-fi.org/CredentialFieldDescriptor	Computer Science	Computer Science	Computer Science	\N	\N	\N	2022-11-17 17:07:44.354177	2022-11-17 17:07:44.35262	91f11ed6-defe-4f85-b53b-bc603456bc47	669
672	uri://ed-fi.org/CredentialFieldDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	2022-11-17 17:07:44.367119	2022-11-17 17:07:44.3671	3e11cadb-11d9-49d0-a868-e69a324f2f56	672
674	uri://ed-fi.org/CredentialFieldDescriptor	Art	Art	Art	\N	\N	\N	2022-11-17 17:07:44.376504	2022-11-17 17:07:44.376468	7bf54fe0-4838-45a0-818b-ed13477689bf	674
676	uri://ed-fi.org/CredentialFieldDescriptor	Social Studies	Social Studies	Social Studies	\N	\N	\N	2022-11-17 17:07:44.385481	2022-11-17 17:07:44.385443	605204ac-27de-4212-ab77-fffae10c66fb	676
677	uri://ed-fi.org/CredentialFieldDescriptor	Music	Music	Music	\N	\N	\N	2022-11-17 17:07:44.390787	2022-11-17 17:07:44.390727	290ca5bf-0f77-48d5-842a-651fc3a787cd	677
679	uri://ed-fi.org/CredentialFieldDescriptor	Health	Health	Health	\N	\N	\N	2022-11-17 17:07:44.399003	2022-11-17 17:07:44.398942	46a5141a-f6eb-43a3-afdf-3c635cc1c26b	679
681	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	Bilingual Generalist-Spanish	\N	\N	\N	2022-11-17 17:07:44.407451	2022-11-17 17:07:44.407411	5d30f316-525c-4afd-a190-f5de99373125	681
683	uri://ed-fi.org/CredentialFieldDescriptor	Master Teacher	Master Teacher	Master Teacher	\N	\N	\N	2022-11-17 17:07:44.4159	2022-11-17 17:07:44.415796	f788d7ae-0a74-44c8-aef1-a618461dfd98	683
685	uri://ed-fi.org/CredentialTypeDescriptor	Certification	Certification	Certification	\N	\N	\N	2022-11-17 17:07:44.447695	2022-11-17 17:07:44.446084	25309f45-f931-45d0-abb6-95a3a55b3a69	685
687	uri://ed-fi.org/CredentialTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:44.461071	2022-11-17 17:07:44.461036	92f579d2-7ac2-4236-845c-5614b9fdb2ca	687
689	uri://gbisd.edu/CreditCategoryDescriptor	Dual Credit	Dual Credit	Dual Credit	\N	\N	\N	2022-11-17 17:07:44.500167	2022-11-17 17:07:44.498827	e79f2ce6-8a09-4c46-988d-df2554d5d49e	689
692	uri://gbisd.edu/CreditCategoryDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-11-17 17:07:44.513249	2022-11-17 17:07:44.513214	a8e10631-e5a3-4313-b939-16815902247b	692
693	uri://ed-fi.org/CreditTypeDescriptor	Career and Technical Education credit	Career and Technical Education credit	Career and Technical Education credit	\N	\N	\N	2022-11-17 17:07:44.548138	2022-11-17 17:07:44.546729	faebbac0-2924-4d7e-9e6c-f460ce54f2d7	693
696	uri://ed-fi.org/CreditTypeDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	2022-11-17 17:07:44.567228	2022-11-17 17:07:44.567172	fcc44fb9-e3b7-41ed-8fff-0f093fd1d13c	696
698	uri://ed-fi.org/CreditTypeDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	2022-11-17 17:07:44.57858	2022-11-17 17:07:44.578527	7349cca0-7e9e-4030-bfed-7744b9383704	698
700	uri://ed-fi.org/CreditTypeDescriptor	Long session hour credit	Long session hour credit	Long session hour credit	\N	\N	\N	2022-11-17 17:07:44.58984	2022-11-17 17:07:44.58979	08096eb8-3541-43dd-ad62-20e45d246dd7	700
702	uri://ed-fi.org/CreditTypeDescriptor	Nine month year hour credit	Nine month year hour credit	Nine month year hour credit	\N	\N	\N	2022-11-17 17:07:44.597728	2022-11-17 17:07:44.597694	bfbc0354-dfb4-4628-95f1-a97d30a15875	702
704	uri://ed-fi.org/CreditTypeDescriptor	Quarter hour credit	Quarter hour credit	Quarter hour credit	\N	\N	\N	2022-11-17 17:07:44.606038	2022-11-17 17:07:44.606004	de0a2b5d-de05-4929-849c-043211f58b72	704
705	uri://ed-fi.org/CreditTypeDescriptor	Quinmester hour credit	Quinmester hour credit	Quinmester hour credit	\N	\N	\N	2022-11-17 17:07:44.611437	2022-11-17 17:07:44.611157	042a5ecc-c112-48d8-ae5a-11ca376a906a	705
707	uri://ed-fi.org/CreditTypeDescriptor	Summer term hour credit	Summer term hour credit	Summer term hour credit	\N	\N	\N	2022-11-17 17:07:44.620309	2022-11-17 17:07:44.62026	323f24e8-c5c5-4669-b64e-f6534130740a	707
710	uri://ed-fi.org/CTEProgramServiceDescriptor	Architecture and Construction	Architecture and Construction	Architecture and Construction	\N	\N	\N	2022-11-17 17:07:44.66068	2022-11-17 17:07:44.659336	e880c2a5-d30b-4f3b-a44c-e3359f3b6592	710
712	uri://ed-fi.org/CTEProgramServiceDescriptor	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	Arts, A/V Technology and Communications	\N	\N	\N	2022-11-17 17:07:44.672631	2022-11-17 17:07:44.670911	6465b5d5-f8ea-4b43-9193-1dc075d3c58e	712
714	uri://ed-fi.org/CTEProgramServiceDescriptor	Education and Training	Education and Training	Education and Training	\N	\N	\N	2022-11-17 17:07:44.684478	2022-11-17 17:07:44.684425	6fa01591-1118-4dd4-9bd4-640c3b3b4425	714
717	uri://ed-fi.org/CTEProgramServiceDescriptor	Health Science	Health Science	Health Science	\N	\N	\N	2022-11-17 17:07:44.70262	2022-11-17 17:07:44.70253	83e403df-9e69-415f-b4d8-b2a7b6e36f64	717
719	uri://ed-fi.org/CTEProgramServiceDescriptor	Human Services	Human Services	Human Services	\N	\N	\N	2022-11-17 17:07:44.711774	2022-11-17 17:07:44.71171	90d82c87-82fb-4e21-b758-00e15107bbca	719
720	uri://ed-fi.org/CTEProgramServiceDescriptor	Information Technology	Information Technology	Information Technology	\N	\N	\N	2022-11-17 17:07:44.716763	2022-11-17 17:07:44.716715	7f00509f-4b27-43db-8079-baecdf9c1a03	720
723	uri://ed-fi.org/CTEProgramServiceDescriptor	Marketing, Sales and Service	Marketing, Sales and Service	Marketing, Sales and Service	\N	\N	\N	2022-11-17 17:07:44.730476	2022-11-17 17:07:44.730355	eae0e900-56c1-46bf-a914-aadadd275f8c	723
726	uri://ed-fi.org/CTEProgramServiceDescriptor	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	Transportation, Distribution and Logistics	\N	\N	\N	2022-11-17 17:07:44.747885	2022-11-17 17:07:44.746112	df2591dc-7546-465e-970c-ee0ee8cfbafc	726
727	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	Creative curriculum infants/toddlers	\N	\N	\N	2022-11-17 17:07:44.778545	2022-11-17 17:07:44.77695	70409076-db9b-44f1-88b4-cd15a3b01f98	727
730	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope infants/toddlers	Highscope infants/toddlers	Highscope infants/toddlers	\N	\N	\N	2022-11-17 17:07:44.791192	2022-11-17 17:07:44.790789	3ddd7d7d-2923-42a1-99af-bd248d7a7a0e	730
731	uri://ed-fi.org/CurriculumUsedDescriptor	Highscope preschoolers	Highscope preschoolers	Highscope preschoolers	\N	\N	\N	2022-11-17 17:07:44.797883	2022-11-17 17:07:44.79779	5610750a-40b5-4fa1-8f3e-46e34757fdb8	731
734	uri://ed-fi.org/CurriculumUsedDescriptor	None	None	None	\N	\N	\N	2022-11-17 17:07:44.809676	2022-11-17 17:07:44.809646	35666748-8156-4d82-a83f-dcd9de007819	734
735	uri://ed-fi.org/CurriculumUsedDescriptor	Other curriculum	Other curriculum	Other curriculum	\N	\N	\N	2022-11-17 17:07:44.814697	2022-11-17 17:07:44.814641	25d308d9-4c4b-4d09-b2b5-8f0844163ed4	735
737	uri://ed-fi.org/DeliveryMethodDescriptor	Individual	Individual	Individual	\N	\N	\N	2022-11-17 17:07:44.845602	2022-11-17 17:07:44.84424	5b31ccb8-0db5-4566-9bba-e723c922dc20	737
738	uri://ed-fi.org/DeliveryMethodDescriptor	Whole Class	Whole Class	Whole Class	\N	\N	\N	2022-11-17 17:07:44.855775	2022-11-17 17:07:44.855724	fe05cca8-9824-4e10-a517-78e6402817e9	738
670	uri://ed-fi.org/CredentialFieldDescriptor	Agricultural Science and Technology	Agricultural Science and Technology	Agricultural Science and Technology	\N	\N	\N	2022-11-17 17:07:44.354175	2022-11-17 17:07:44.352624	0cdacd31-af97-4ba0-9047-a78a11158e77	670
671	uri://ed-fi.org/CredentialFieldDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	2022-11-17 17:07:44.36539	2022-11-17 17:07:44.365329	cc7a14b5-4227-4b1e-82c5-01933c8fddd0	671
673	uri://ed-fi.org/CredentialFieldDescriptor	Life and Physical Sciences	Life and Physical Sciences	Life and Physical Sciences	\N	\N	\N	2022-11-17 17:07:44.374279	2022-11-17 17:07:44.374252	a8b23cc7-4178-4ff4-ab33-d664243e4745	673
675	uri://ed-fi.org/CredentialFieldDescriptor	Generalist	Generalist	Generalist	\N	\N	\N	2022-11-17 17:07:44.382529	2022-11-17 17:07:44.382445	606d4cd5-16f5-4167-8d0f-bf611a56e1ca	675
678	uri://ed-fi.org/CredentialFieldDescriptor	Physical Education	Physical Education	Physical Education	\N	\N	\N	2022-11-17 17:07:44.393945	2022-11-17 17:07:44.393909	d2089be6-8087-46bf-9cfb-d226dd9c52a7	678
680	uri://ed-fi.org/CredentialFieldDescriptor	Psychology	Psychology	Psychology	\N	\N	\N	2022-11-17 17:07:44.402694	2022-11-17 17:07:44.402658	2a0a8318-0602-4e91-a312-44fb13181be8	680
682	uri://ed-fi.org/CredentialFieldDescriptor	Elementary Education	Elementary Education	Elementary Education	\N	\N	\N	2022-11-17 17:07:44.410946	2022-11-17 17:07:44.410909	b7ed19f8-0959-43b3-9895-7939d64c6205	682
684	uri://ed-fi.org/CredentialTypeDescriptor	Endorsement	Endorsement	Endorsement	\N	\N	\N	2022-11-17 17:07:44.447697	2022-11-17 17:07:44.446082	d360af06-da77-4797-a4a7-73d24e202322	684
686	uri://ed-fi.org/CredentialTypeDescriptor	Licensure	Licensure	Licensure	\N	\N	\N	2022-11-17 17:07:44.459148	2022-11-17 17:07:44.459088	9a9c458b-ffba-45f6-8b41-69c7e0f4d630	686
688	uri://ed-fi.org/CredentialTypeDescriptor	Registration	Registration	Registration	\N	\N	\N	2022-11-17 17:07:44.468278	2022-11-17 17:07:44.468039	16d2242e-3998-4848-9cf0-69abe57c9542	688
690	uri://gbisd.edu/CreditCategoryDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2022-11-17 17:07:44.500193	2022-11-17 17:07:44.498824	41f81c32-dbf6-4dd7-a932-374db13d23e3	690
691	uri://gbisd.edu/CreditCategoryDescriptor	Honors	Honors	Honors	\N	\N	\N	2022-11-17 17:07:44.5111	2022-11-17 17:07:44.511046	35c66923-6e54-4032-9c55-6ef22fcae1ec	691
694	uri://ed-fi.org/CreditTypeDescriptor	Adult education credit	Adult education credit	Adult education credit	\N	\N	\N	2022-11-17 17:07:44.548275	2022-11-17 17:07:44.546734	d9fc50a0-9128-4a35-914c-18a9fc6fb067	694
695	uri://ed-fi.org/CreditTypeDescriptor	Carnegie unit	Carnegie unit	Carnegie unit	\N	\N	\N	2022-11-17 17:07:44.561853	2022-11-17 17:07:44.559987	d12fcde4-3c08-42a6-af66-b587b8c38c54	695
697	uri://ed-fi.org/CreditTypeDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	2022-11-17 17:07:44.572976	2022-11-17 17:07:44.572924	b18ef030-109d-4c0b-bf80-6ff4fd68ca53	697
699	uri://ed-fi.org/CreditTypeDescriptor	Intersession hour credit	Intersession hour credit	Intersession hour credit	\N	\N	\N	2022-11-17 17:07:44.584168	2022-11-17 17:07:44.584117	2fe78b6a-d48e-4826-beeb-c6d745c03499	699
701	uri://ed-fi.org/CreditTypeDescriptor	Mini-term hour credit	Mini-term hour credit	Mini-term hour credit	\N	\N	\N	2022-11-17 17:07:44.59414	2022-11-17 17:07:44.594105	33e30409-a374-4b77-81e4-0fb99deca3b0	701
703	uri://ed-fi.org/CreditTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:44.602457	2022-11-17 17:07:44.60242	8446ec2d-3e7a-4f35-911e-18bf9662f9f8	703
706	uri://ed-fi.org/CreditTypeDescriptor	Semester hour credit	Semester hour credit	Semester hour credit	\N	\N	\N	2022-11-17 17:07:44.614433	2022-11-17 17:07:44.614398	9f339e39-e32c-4bd6-8a88-00b2b726be70	706
708	uri://ed-fi.org/CreditTypeDescriptor	Trimester hour credit	Trimester hour credit	Trimester hour credit	\N	\N	\N	2022-11-17 17:07:44.623128	2022-11-17 17:07:44.623094	756f3ed6-5227-428d-9597-fca88536c383	708
709	uri://ed-fi.org/CreditTypeDescriptor	Twelve month year hour credit	Twelve month year hour credit	Twelve month year hour credit	\N	\N	\N	2022-11-17 17:07:44.628221	2022-11-17 17:07:44.628167	f0ac6a5f-0304-4004-bc5d-fd8f20c3329b	709
711	uri://ed-fi.org/CTEProgramServiceDescriptor	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	Agriculture, Food and Natural Resources	\N	\N	\N	2022-11-17 17:07:44.660698	2022-11-17 17:07:44.659333	eed3353a-8a31-42ed-85ef-8b8532890c2e	711
713	uri://ed-fi.org/CTEProgramServiceDescriptor	Business, Management and Administration	Business, Management and Administration	Business, Management and Administration	\N	\N	\N	2022-11-17 17:07:44.676266	2022-11-17 17:07:44.676197	22716bd5-418e-4abf-b6d5-f1b471eadff4	713
715	uri://ed-fi.org/CTEProgramServiceDescriptor	Finance	Finance	Finance	\N	\N	\N	2022-11-17 17:07:44.693187	2022-11-17 17:07:44.693131	b9fab3cc-bb38-4dab-a8b7-022faa4e6dc1	715
716	uri://ed-fi.org/CTEProgramServiceDescriptor	Government and Public Administration	Government and Public Administration	Government and Public Administration	\N	\N	\N	2022-11-17 17:07:44.700032	2022-11-17 17:07:44.698262	c51469a1-a0b5-4ab4-a40a-026440984f29	716
718	uri://ed-fi.org/CTEProgramServiceDescriptor	Hospitality and Tourism	Hospitality and Tourism	Hospitality and Tourism	\N	\N	\N	2022-11-17 17:07:44.708893	2022-11-17 17:07:44.708843	da433789-e53a-4091-93b7-262dba9b2f53	718
721	uri://ed-fi.org/CTEProgramServiceDescriptor	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	Law, Public Safety, Corrections and Security	\N	\N	\N	2022-11-17 17:07:44.721971	2022-11-17 17:07:44.721924	3862ba63-56c7-4511-9a8a-b822c3ad888c	721
722	uri://ed-fi.org/CTEProgramServiceDescriptor	Manufacturing	Manufacturing	Manufacturing	\N	\N	\N	2022-11-17 17:07:44.726964	2022-11-17 17:07:44.726735	a0fe91d5-c0d4-4f4a-9d7f-d64fc47f971a	722
724	uri://ed-fi.org/CTEProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:44.736441	2022-11-17 17:07:44.736393	32a34828-906c-4223-a20f-523733ea8737	724
725	uri://ed-fi.org/CTEProgramServiceDescriptor	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	Science, Technology, Engineering and Mathematics	\N	\N	\N	2022-11-17 17:07:44.74147	2022-11-17 17:07:44.741422	6f6155f4-7ffb-4ed8-a7b2-68161a8a7f74	725
728	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum family child care	Creative curriculum family child care	Creative curriculum family child care	\N	\N	\N	2022-11-17 17:07:44.778545	2022-11-17 17:07:44.77695	f92e7ea5-4f0d-42c7-a327-709cb9a6b487	728
729	uri://ed-fi.org/CurriculumUsedDescriptor	Creative curriculum preschool	Creative curriculum preschool	Creative curriculum preschool	\N	\N	\N	2022-11-17 17:07:44.789548	2022-11-17 17:07:44.789198	a9280d06-001f-492b-9ebc-bf1c141d04db	729
732	uri://ed-fi.org/CurriculumUsedDescriptor	Locally designed curriculum	Locally designed curriculum	Locally designed curriculum	\N	\N	\N	2022-11-17 17:07:44.801073	2022-11-17 17:07:44.801042	1012ad04-3b94-4b8d-8822-0ba98d7ec175	732
733	uri://ed-fi.org/CurriculumUsedDescriptor	Montessori curriculum	Montessori curriculum	Montessori curriculum	\N	\N	\N	2022-11-17 17:07:44.806556	2022-11-17 17:07:44.806506	bf693704-a689-431a-b467-1a63a25e19b4	733
736	uri://ed-fi.org/DeliveryMethodDescriptor	Small Group	Small Group	Small Group	\N	\N	\N	2022-11-17 17:07:44.845579	2022-11-17 17:07:44.844244	7b6d899b-8f04-4fb4-a649-1f8ba6a08764	736
739	uri://ed-fi.org/DeliveryMethodDescriptor	Whole School	Whole School	Whole School	\N	\N	\N	2022-11-17 17:07:44.858819	2022-11-17 17:07:44.858727	77c01f0f-d38a-42d1-89a5-0c140350fcfc	739
741	uri://gbisd.edu/DiagnosisDescriptor	Dropout Risk	Dropout Risk	Dropout Risk	\N	\N	\N	2022-11-17 17:07:44.891622	2022-11-17 17:07:44.890255	d1fc47bb-ebd9-4efe-ab11-7e177de74aed	741
743	uri://ed-fi.org/DiplomaLevelDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	2022-11-17 17:07:44.929782	2022-11-17 17:07:44.928428	92ac7ce1-a8c2-4bb6-802e-9dafd209cf4f	743
744	uri://ed-fi.org/DiplomaLevelDescriptor	Magna cum laude	Magna cum laude	Magna cum laude	\N	\N	\N	2022-11-17 17:07:44.940227	2022-11-17 17:07:44.940016	148d727f-bcaf-46c3-bb6b-6434d2250e1a	744
746	uri://ed-fi.org/DiplomaLevelDescriptor	Open Enrollment	Open Enrollment	Open Enrollment	\N	\N	\N	2022-11-17 17:07:44.948372	2022-11-17 17:07:44.948304	8e5debe2-adf8-42bd-9f21-a9766800733f	746
748	uri://ed-fi.org/DiplomaLevelDescriptor	Summa cum laude	Summa cum laude	Summa cum laude	\N	\N	\N	2022-11-17 17:07:44.956327	2022-11-17 17:07:44.956259	ba16d5b6-753c-476b-8846-62a7ee7382be	748
749	uri://ed-fi.org/DiplomaTypeDescriptor	Alternative credential	Alternative credential	Alternative credential	\N	\N	\N	2022-11-17 17:07:44.987164	2022-11-17 17:07:44.985601	2cc52613-e979-491c-9075-bc81963148bf	749
752	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of attendance	Certificate of attendance	Certificate of attendance	\N	\N	\N	2022-11-17 17:07:45.001102	2022-11-17 17:07:45.001065	11c62145-2df0-44b7-b99c-451acf638d89	752
740	uri://gbisd.edu/DiagnosisDescriptor	Low Attendance	Low Attendance	Low Attendance	\N	\N	\N	2022-11-17 17:07:44.891605	2022-11-17 17:07:44.890258	8686c7f6-955b-4108-b85a-5d33b1003a55	740
742	uri://ed-fi.org/DiplomaLevelDescriptor	Cum laude	Cum laude	Cum laude	\N	\N	\N	2022-11-17 17:07:44.929768	2022-11-17 17:07:44.928426	9081197f-2082-4559-bb97-e667389f8021	742
745	uri://ed-fi.org/DiplomaLevelDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	2022-11-17 17:07:44.941662	2022-11-17 17:07:44.941437	f16a0217-d8c7-49e2-af34-471441ea9efe	745
747	uri://ed-fi.org/DiplomaLevelDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	2022-11-17 17:07:44.950998	2022-11-17 17:07:44.950963	e1518bb8-47c9-478a-b6f3-dcc85bb30146	747
750	uri://ed-fi.org/DiplomaTypeDescriptor	Apprenticeship Certificate	Apprenticeship Certificate	Apprenticeship Certificate	\N	\N	\N	2022-11-17 17:07:44.987163	2022-11-17 17:07:44.985608	bf396f23-5eca-4cee-a255-771931cb2852	750
751	uri://ed-fi.org/DiplomaTypeDescriptor	Career and Technical Education certificate	Career and Technical Education certificate	Career and Technical Education certificate	\N	\N	\N	2022-11-17 17:07:44.997983	2022-11-17 17:07:44.997923	f3751c00-07b0-415e-b0a5-9b63e6818168	751
753	uri://ed-fi.org/DiplomaTypeDescriptor	Certificate of completion	Certificate of completion	Certificate of completion	\N	\N	\N	2022-11-17 17:07:45.00699	2022-11-17 17:07:45.00692	4ac20826-7c0f-4a60-ae71-d5968267a68f	753
755	uri://ed-fi.org/DiplomaTypeDescriptor	General Educational Development (GED) credential	General Educational Development (GED) credential	General Educational Development (GED) credential	\N	\N	\N	2022-11-17 17:07:45.015408	2022-11-17 17:07:45.015348	a62cfe1a-c38c-42f9-8b09-c1ba197b1b5d	755
757	uri://ed-fi.org/DiplomaTypeDescriptor	Industry-recognized Certification	Industry-recognized Certification	Industry-recognized Certification	\N	\N	\N	2022-11-17 17:07:45.023673	2022-11-17 17:07:45.023606	895733c5-4df6-4835-8cef-180601358df9	757
759	uri://ed-fi.org/DiplomaTypeDescriptor	Modified diploma	Modified diploma	Modified diploma	\N	\N	\N	2022-11-17 17:07:45.032003	2022-11-17 17:07:45.031935	c337b05c-c8c3-46c9-9e84-d6b21c96fce3	759
761	uri://ed-fi.org/DiplomaTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.040161	2022-11-17 17:07:45.040096	a6f8546d-4ba2-4eb6-97c6-52e819d0290e	761
763	uri://ed-fi.org/DiplomaTypeDescriptor	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	Post graduate certificate (grade 13)	\N	\N	\N	2022-11-17 17:07:45.048486	2022-11-17 17:07:45.048402	ddfc6a7b-6dc7-4a15-aa79-9d3cccff6213	763
767	uri://ed-fi.org/DisabilityDescriptor	Deaf-Blindness	Deaf-Blindness	Deaf-Blindness	\N	\N	\N	2022-11-17 17:07:45.089024	2022-11-17 17:07:45.087444	d6cbe468-880a-42ce-82ff-5b5b45853b0d	767
769	uri://ed-fi.org/DisabilityDescriptor	Intellectual Disability	Intellectual Disability	Intellectual Disability	\N	\N	\N	2022-11-17 17:07:45.101877	2022-11-17 17:07:45.101806	4d14ce2f-b632-427d-b902-0c1bf02c541a	769
771	uri://ed-fi.org/DisabilityDescriptor	Medical condition	Medical condition	Medical condition	\N	\N	\N	2022-11-17 17:07:45.113805	2022-11-17 17:07:45.113769	7643a434-f813-4262-af1b-36abcfd9f8bf	771
773	uri://ed-fi.org/DisabilityDescriptor	Motor impairment	Motor impairment	Motor impairment	\N	\N	\N	2022-11-17 17:07:45.123352	2022-11-17 17:07:45.123316	9b299e29-7f05-41f1-870b-0aeb60b45970	773
774	uri://ed-fi.org/DisabilityDescriptor	Multiple Disabilities	Multiple Disabilities	Multiple disabilities	\N	\N	\N	2022-11-17 17:07:45.128839	2022-11-17 17:07:45.12854	a1650681-bd2c-498a-babd-3098b74a3ae9	774
776	uri://ed-fi.org/DisabilityDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.137431	2022-11-17 17:07:45.137371	9db47d7a-a2df-4463-93d8-54d98dec57b9	776
779	uri://ed-fi.org/DisabilityDescriptor	Preschooler with a Disability	Preschooler with a Disability	Preschooler with a Disability	\N	\N	\N	2022-11-17 17:07:45.148761	2022-11-17 17:07:45.148726	b96f5789-466f-4ef5-9b55-44e42300fc2f	779
780	uri://ed-fi.org/DisabilityDescriptor	Sensory impairment	Sensory impairment	Sensory impairment	\N	\N	\N	2022-11-17 17:07:45.154217	2022-11-17 17:07:45.154129	59fbe13a-946b-452c-bd14-0df32641b3cb	780
782	uri://ed-fi.org/DisabilityDescriptor	Speech or Language Impairment	Speech or Language Impairment	Speech or Language Impairment	\N	\N	\N	2022-11-17 17:07:45.162704	2022-11-17 17:07:45.162637	053681b0-69c1-4032-be55-797c2192d444	782
785	uri://ed-fi.org/DisabilityDescriptor	Visual Impairment, including Blindness	Visual Impairment, including Blindness	Visual Impairment, including Blindness	\N	\N	\N	2022-11-17 17:07:45.17436	2022-11-17 17:07:45.174326	9b1780a3-7c34-49dc-817e-285793912587	785
787	uri://ed-fi.org/DisabilityDesignationDescriptor	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	Individuals with Disabilities Education Act	\N	\N	\N	2022-11-17 17:07:45.208431	2022-11-17 17:07:45.20688	91fec717-f126-4549-9d3c-53e27b8573bc	787
788	uri://ed-fi.org/DisabilityDesignationDescriptor	Section 504	Section 504	Section 504	\N	\N	\N	2022-11-17 17:07:45.220437	2022-11-17 17:07:45.219777	a556c828-f531-4f78-ba6f-751a9a0a228d	788
790	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By health care provider	By health care provider	By health care provider	\N	\N	\N	2022-11-17 17:07:45.264773	2022-11-17 17:07:45.263428	0ee0460e-ddbe-47c1-9f52-da08b8f6faf8	790
791	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By physician	By physician	By physician	\N	\N	\N	2022-11-17 17:07:45.275482	2022-11-17 17:07:45.275418	fcade6b6-c1a1-403c-9b28-ed7559426731	791
794	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Not applicable to the student	Not applicable to the student	Not applicable to the student	\N	\N	\N	2022-11-17 17:07:45.286817	2022-11-17 17:07:45.286783	f0c2d4d2-f7aa-4e1d-882e-e9ab1fede0bc	794
796	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Self-reported	Self-reported	Self-reported	\N	\N	\N	2022-11-17 17:07:45.295152	2022-11-17 17:07:45.295118	78ad61be-1a0c-4232-b8da-7113ae85fdc9	796
797	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Unknown or Unreported	Unknown or Unreported	Unknown or Unreported	\N	\N	\N	2022-11-17 17:07:45.300479	2022-11-17 17:07:45.300376	92e48de3-ee44-4352-979c-ca05898dca3d	797
798	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Continuation Of Prior Year's Disciplinary Action	Continuation Of Previous Year's Disciplinary Action Assignment	Continuation Of Previous Year's Disciplinary Action Assignment	\N	\N	\N	2022-11-17 17:07:45.332531	2022-11-17 17:07:45.331208	ad954cea-6170-43d5-9650-277ca026e087	798
800	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.343821	2022-11-17 17:07:45.343774	6c3d697e-fe5d-430e-8059-b6244c74aa8f	800
802	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	Student Completed Term Requirements Sooner Than Expected	\N	\N	\N	2022-11-17 17:07:45.352608	2022-11-17 17:07:45.352538	9b2e2a45-27ea-497f-a43b-587925fedcc8	802
805	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Decreased Due To Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	Term Decreased Due To Extenuating Health-Related Circumstances	\N	\N	\N	2022-11-17 17:07:45.364008	2022-11-17 17:07:45.363975	1d2bd291-05ee-44df-adb4-f48c50df9b72	805
807	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By District	Term Modified By District	Term Modified By District	\N	\N	\N	2022-11-17 17:07:45.372177	2022-11-17 17:07:45.372143	cc3b779b-ad03-4528-9a26-3ab15e84046e	807
809	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Placement Program Due To Behavior	Term Modified By Placement Program Due To Student Behavior	Term Modified By Placement Program Due To Student Behavior While In The Placement	\N	\N	\N	2022-11-17 17:07:45.380684	2022-11-17 17:07:45.380649	bb0e3b2a-c9e4-4fb3-b951-538b0d2759a0	809
810	uri://ed-fi.org/DisciplineDescriptor	In School Suspension	In School Suspension	In School Suspension	\N	\N	\N	2022-11-17 17:07:45.414594	2022-11-17 17:07:45.41328	76ccfdb8-ac39-4a07-9e10-7839ef59db76	810
812	uri://ed-fi.org/DisciplineDescriptor	Out of School Suspension	Out of School Suspension	Out of School Suspension	\N	\N	\N	2022-11-17 17:07:45.427987	2022-11-17 17:07:45.427936	b8a5a607-7743-49bd-a580-050e61ebebce	812
814	uri://ed-fi.org/DisciplineDescriptor	Expulsion with Services	Expulsion with Services	Expulsion with Services	\N	\N	\N	2022-11-17 17:07:45.437744	2022-11-17 17:07:45.436026	74b1db48-7add-4778-9eeb-1b72c055cfc2	814
816	uri://ed-fi.org/DisciplineDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.446027	2022-11-17 17:07:45.445967	2f63f64e-4418-42df-b8b2-334a8795edef	816
754	uri://ed-fi.org/DiplomaTypeDescriptor	Endorsed/advanced diploma	Endorsed/advanced diploma	Endorsed/advanced diploma	\N	\N	\N	2022-11-17 17:07:45.009831	2022-11-17 17:07:45.009796	9525d44c-ddc3-40cf-b036-ccc7b42701e0	754
756	uri://ed-fi.org/DiplomaTypeDescriptor	High school equivalency credential, other than GED	High school equivalency credential, other than GED	High school equivalency credential, other than GED	\N	\N	\N	2022-11-17 17:07:45.018363	2022-11-17 17:07:45.018329	c73059a6-6a0d-4807-8ff2-156811a8a620	756
758	uri://ed-fi.org/DiplomaTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-11-17 17:07:45.02633	2022-11-17 17:07:45.026294	1c82770d-bedc-4369-b6bd-517d0dd074be	758
760	uri://ed-fi.org/DiplomaTypeDescriptor	Occupational License	Occupational License	Occupational License	\N	\N	\N	2022-11-17 17:07:45.034801	2022-11-17 17:07:45.034759	1bdf0807-ad2f-4594-b575-d434016c01c8	760
762	uri://ed-fi.org/DiplomaTypeDescriptor	Other diploma	Other diploma	Other diploma	\N	\N	\N	2022-11-17 17:07:45.042965	2022-11-17 17:07:45.042931	3b39dec9-2fab-4b75-ad18-6f017e0b6d5c	762
764	uri://ed-fi.org/DiplomaTypeDescriptor	Regents diploma	Regents diploma	Regents diploma	\N	\N	\N	2022-11-17 17:07:45.051541	2022-11-17 17:07:45.051498	2528bc3b-4897-4526-b947-5fcd34ef58dd	764
765	uri://ed-fi.org/DiplomaTypeDescriptor	Regular diploma	Regular diploma	Regular diploma	\N	\N	\N	2022-11-17 17:07:45.056819	2022-11-17 17:07:45.056737	d94673fb-d29e-4a6b-9235-b64223034452	765
766	uri://ed-fi.org/DisabilityDescriptor	Autism Spectrum Disorders	Autism Spectrum Disorders	Autism Spectrum Disorders	\N	\N	\N	2022-11-17 17:07:45.089025	2022-11-17 17:07:45.087441	1e1338ba-bc24-4b98-b00a-faf9bc95aa73	766
768	uri://ed-fi.org/DisabilityDescriptor	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	Hearing Impairment, including Deafness	\N	\N	\N	2022-11-17 17:07:45.101495	2022-11-17 17:07:45.100704	2075aba0-587f-4ccd-ab7a-c21544d405f3	768
770	uri://ed-fi.org/DisabilityDescriptor	Infant/Toddler with a Disability	Infant/Toddler with a Disability	Infant/Toddler with a Disability	\N	\N	\N	2022-11-17 17:07:45.11128	2022-11-17 17:07:45.111228	b4d36b58-cec1-4a77-81ee-6f3c9ca9da6e	770
772	uri://ed-fi.org/DisabilityDescriptor	Mental impairment	Mental impairment	Mental impairment	\N	\N	\N	2022-11-17 17:07:45.120248	2022-11-17 17:07:45.120176	59c0f0fb-07c9-47a6-ab66-5cfe2668721d	772
775	uri://ed-fi.org/DisabilityDescriptor	Orthopedic Impairment	Orthopedic Impairment	Orthopedic Impairment	\N	\N	\N	2022-11-17 17:07:45.131939	2022-11-17 17:07:45.131903	18e3ca39-3c1d-4e99-ae65-238ede3373e3	775
777	uri://ed-fi.org/DisabilityDescriptor	Other Health Impairment	Other Health Impairment	Other Health Impairment	\N	\N	\N	2022-11-17 17:07:45.140574	2022-11-17 17:07:45.140539	fdb36e3f-cc4f-4de6-812d-934b326a571a	777
778	uri://ed-fi.org/DisabilityDescriptor	Physical Disability	Physical Disability	Physical Disability	\N	\N	\N	2022-11-17 17:07:45.145798	2022-11-17 17:07:45.14571	b9d7ad1f-a599-4bfb-b30c-f521c55180a6	778
781	uri://ed-fi.org/DisabilityDescriptor	Serious Emotional Disability	Serious Emotional Disability	Serious Emotional Disability	\N	\N	\N	2022-11-17 17:07:45.157348	2022-11-17 17:07:45.157315	ca1097c7-b6e6-48c1-be34-c1817b0cdfea	781
783	uri://ed-fi.org/DisabilityDescriptor	Specific Learning Disability	Specific Learning Disability	Specific Learning Disability	\N	\N	\N	2022-11-17 17:07:45.165463	2022-11-17 17:07:45.165427	889a9bf9-1eeb-4c31-b005-e450877d6754	783
784	uri://ed-fi.org/DisabilityDescriptor	Traumatic Brain Injury	Traumatic Brain Injury	Traumatic Brain Injury	\N	\N	\N	2022-11-17 17:07:45.171369	2022-11-17 17:07:45.171316	a2e6a7d9-631a-49a3-a780-98ae47c17a84	784
786	uri://ed-fi.org/DisabilityDesignationDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.208431	2022-11-17 17:07:45.206884	235bb411-3303-4349-88b4-98726bd4a35c	786
789	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By licensed physical therapist	By licensed physical therapist	By licensed physical therapist	\N	\N	\N	2022-11-17 17:07:45.264788	2022-11-17 17:07:45.263431	6faf7262-04e0-4edc-b98c-4fcb6c8e8387	789
792	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By school psychologist or other psychologist	By school psychologist or other psychologist	By school psychologist or other psychologist	\N	\N	\N	2022-11-17 17:07:45.277956	2022-11-17 17:07:45.277922	835abfcc-af3d-4707-857e-aa7850dc2b00	792
793	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	By social service or other type of agency	By social service or other type of agency	By social service or other type of agency	\N	\N	\N	2022-11-17 17:07:45.283841	2022-11-17 17:07:45.283663	7e7111b9-b52b-44b3-9b1b-5bb4ec907d89	793
795	uri://ed-fi.org/DisabilityDeterminationSourceTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.292227	2022-11-17 17:07:45.29216	62b393da-1ea9-4e3f-b2fd-2b8befcdd3b3	795
799	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	No Difference	No Difference	No Difference	\N	\N	\N	2022-11-17 17:07:45.332553	2022-11-17 17:07:45.331204	2e5539e4-f69e-466a-a2ae-5d9752c69d6f	799
801	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	School Year Ended	School Year Ended	School Year Ended	\N	\N	\N	2022-11-17 17:07:45.345839	2022-11-17 17:07:45.345803	186cffd0-a6ef-4b6b-9b91-a4a4c7fe1a04	801
803	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Incarcerated	Student Incarcerated	Student Incarcerated	\N	\N	\N	2022-11-17 17:07:45.355656	2022-11-17 17:07:45.355621	b80a6c5b-9e04-4965-aa16-94890622cb21	803
804	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Student Withdrew From School	Student Withdrew From School	Student Withdrew From School	\N	\N	\N	2022-11-17 17:07:45.360693	2022-11-17 17:07:45.360655	56dc6ef7-2c99-4819-afbc-018b7a5ee7d7	804
806	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Court Order	Term Modified By Court Order	Term Modified By Court Order	\N	\N	\N	2022-11-17 17:07:45.368648	2022-11-17 17:07:45.36855	699f1264-6f94-4f9a-9369-621ff79dc290	806
808	uri://ed-fi.org/DisciplineActionLengthDifferenceReasonDescriptor	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	Term Modified By Mutual Agreement	\N	\N	\N	2022-11-17 17:07:45.377014	2022-11-17 17:07:45.37691	47b8b548-429a-4a8c-af6d-67e81e224eee	808
811	uri://ed-fi.org/DisciplineDescriptor	Removal from Classroom	Removal from Classroom	Removal from Classroom	\N	\N	\N	2022-11-17 17:07:45.414612	2022-11-17 17:07:45.413276	94f418ee-b3d3-4c94-87b4-76869265c4e0	811
813	uri://ed-fi.org/DisciplineDescriptor	Expulsion	Expulsion	Expulsion	\N	\N	\N	2022-11-17 17:07:45.429831	2022-11-17 17:07:45.429795	4d51ecd6-a1bf-41a9-ad55-4d6dfe877749	813
815	uri://ed-fi.org/DisciplineDescriptor	Community Service	Community Service	Community Service	\N	\N	\N	2022-11-17 17:07:45.440357	2022-11-17 17:07:45.440319	ef36efef-83b7-43e9-8d77-06993911b06c	815
817	uri://ed-fi.org/DisciplineDescriptor	No action for incident	No action for incident	No action for incident	\N	\N	\N	2022-11-17 17:07:45.44891	2022-11-17 17:07:45.448867	9698bfbd-02f0-49b2-a36e-8f58a3607f26	817
818	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	Expulsion under Guns Free School Act	\N	\N	\N	2022-11-17 17:07:45.454354	2022-11-17 17:07:45.454036	e7abf9e1-bfaa-43ef-8fd4-36c88870225c	818
820	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	2022-11-17 17:07:45.507444	2022-11-17 17:07:45.506121	1fb17566-cb0d-4588-b0ac-f4a85e977c70	820
823	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	2022-11-17 17:07:45.520631	2022-11-17 17:07:45.520593	9922e6e7-239b-43f8-8e07-2af610f298de	823
824	uri://ed-fi.org/EducationalEnvironmentDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	2022-11-17 17:07:45.553776	2022-11-17 17:07:45.552166	770a66b4-3050-4bb6-888a-b083690fbc5c	824
826	uri://ed-fi.org/EducationalEnvironmentDescriptor	Hospital class	Hospital class	Hospital class	\N	\N	\N	2022-11-17 17:07:45.564099	2022-11-17 17:07:45.564047	a50a9bb2-c39d-4e94-a268-028939574664	826
829	uri://ed-fi.org/EducationalEnvironmentDescriptor	Mainstream (Special Education)	Mainstream (Special Education)	Mainstream (Special Education)	\N	\N	\N	2022-11-17 17:07:45.576069	2022-11-17 17:07:45.576033	1bb36f34-dca6-490b-bd33-d997bc345463	829
830	uri://ed-fi.org/EducationalEnvironmentDescriptor	Off-school center	Off-school center	Off-school center	\N	\N	\N	2022-11-17 17:07:45.581228	2022-11-17 17:07:45.581174	27955eea-6746-4983-8ad8-10f1d174e477	830
832	uri://ed-fi.org/EducationalEnvironmentDescriptor	Resource room	Resource room	Resource room	\N	\N	\N	2022-11-17 17:07:45.589293	2022-11-17 17:07:45.589149	4dcf475e-de7e-446e-8812-95835c91844c	832
834	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-study	Self-study	Self-study	\N	\N	\N	2022-11-17 17:07:45.596832	2022-11-17 17:07:45.596796	ca0bdf4e-68e2-473d-a81d-eab16256863c	834
819	uri://ed-fi.org/DisciplineDescriptor	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	Expulsion under Guns Free School Act with Services	\N	\N	\N	2022-11-17 17:07:45.457119	2022-11-17 17:07:45.457081	9d07db98-7210-40cd-93f5-4065f2105f10	819
821	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	2022-11-17 17:07:45.507456	2022-11-17 17:07:45.506124	262fe321-8bb9-4c6c-98db-b8faeb159153	821
822	uri://ed-fi.org/DisciplineIncidentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	2022-11-17 17:07:45.517268	2022-11-17 17:07:45.517187	c5c1a86c-6834-4302-8d7d-7db0f4f13e79	822
825	uri://ed-fi.org/EducationalEnvironmentDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-11-17 17:07:45.553778	2022-11-17 17:07:45.552163	956f2093-c632-4f15-8a67-c377e5010d2b	825
827	uri://ed-fi.org/EducationalEnvironmentDescriptor	In-school suspension	In-school suspension	In-school suspension	\N	\N	\N	2022-11-17 17:07:45.56592	2022-11-17 17:07:45.565885	3ed2c7a1-6a9f-435f-a7bd-7ca7d64dc5f9	827
828	uri://ed-fi.org/EducationalEnvironmentDescriptor	Laboratory	Laboratory	Laboratory	\N	\N	\N	2022-11-17 17:07:45.573015	2022-11-17 17:07:45.572748	2ebccb49-6a61-4205-8aee-74d37f332f33	828
831	uri://ed-fi.org/EducationalEnvironmentDescriptor	Pull-out class	Pull-out class	Pull-out class	\N	\N	\N	2022-11-17 17:07:45.584391	2022-11-17 17:07:45.584354	8d2fda15-4bfb-41b8-b39f-d55599658c4b	831
833	uri://ed-fi.org/EducationalEnvironmentDescriptor	Self-contained (Special Education)	Self-contained (Special Education)	Self-contained (Special Education)	\N	\N	\N	2022-11-17 17:07:45.593098	2022-11-17 17:07:45.593058	3c99be5d-d3bb-472e-9dd8-08108262dd4b	833
835	uri://ed-fi.org/EducationalEnvironmentDescriptor	Shop	Shop	Shop	\N	\N	\N	2022-11-17 17:07:45.600805	2022-11-17 17:07:45.600768	02ea1eaa-6753-45a3-868c-422685c97890	835
838	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Attribution	Attribution	Indicates the education organization (state, district, and/or school) to which the student's results are attributed to; often used for accountability reporting.	\N	\N	\N	2022-11-17 17:07:45.637426	2022-11-17 17:07:45.63608	1282c88b-8781-4a2e-96ad-4a52672a1f23	838
839	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Enrollment	Enrollment	Indicates the education organization (typically a school) where the student was enrolled at the time the assessment was taken by the student. If dual-enrolled, what the school of record.	\N	\N	\N	2022-11-17 17:07:45.648069	2022-11-17 17:07:45.647986	5ba9a06c-2830-4c4e-a37c-5e5ee434f4bb	839
841	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Organization Network	Education Organization Network	Education Organization Network	\N	\N	\N	2022-11-17 17:07:45.681627	2022-11-17 17:07:45.680036	af4d602c-d8e0-4ee2-b776-da57a6d1558f	841
843	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.695714	2022-11-17 17:07:45.695676	233a1d7a-1ce5-47d1-b954-2cb7541fa03e	843
845	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	2022-11-17 17:07:45.704549	2022-11-17 17:07:45.704514	cece2be3-74f7-485b-87bc-d555ebba24dd	845
847	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Organization Department	Organization Department	An organizational unit of another education organization, often devoted to a particular academic discipline, area of study, or organization function.	\N	\N	\N	2022-11-17 17:07:45.712914	2022-11-17 17:07:45.71288	463a2bf1-33d1-434e-8aa6-9f2750f865b2	847
849	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	DUNS	DUNS	DUNS	\N	\N	\N	2022-11-17 17:07:45.747603	2022-11-17 17:07:45.746037	2a534ce4-daf0-4ec5-bd97-7412d7f0033b	849
850	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-11-17 17:07:45.758183	2022-11-17 17:07:45.758109	f67d8758-0b61-4f01-8c34-13d7ac08cd1c	850
852	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	LEA	LEA	LEA	\N	\N	\N	2022-11-17 17:07:45.76616	2022-11-17 17:07:45.766124	e0bc5491-6c3e-4f93-bed7-2536f5aa6c79	852
854	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.773923	2022-11-17 17:07:45.773884	eec87172-2787-43bb-8b65-5475315c828a	854
856	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:45.78242	2022-11-17 17:07:45.782385	00eae29c-782c-4cd3-ab52-3de54a54f61b	856
857	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	SEA	SEA	SEA	\N	\N	\N	2022-11-17 17:07:45.787682	2022-11-17 17:07:45.787591	fa77d7ea-b91c-4d40-9fa9-6ceb526c6d05	857
860	uri://ed-fi.org/EducationPlanDescriptor	504 Plan	504 Plan	504 Plan	\N	\N	\N	2022-11-17 17:07:45.829104	2022-11-17 17:07:45.827557	13efb4ec-3ca4-4a85-8c89-7a7bd384ff85	860
861	uri://ed-fi.org/EducationPlanDescriptor	Career Suggestions	Career Suggestions	Career Suggestions	\N	\N	\N	2022-11-17 17:07:45.845634	2022-11-17 17:07:45.845572	e049e433-f36a-4cf3-a4f6-736bd7e7e047	861
864	uri://ed-fi.org/EducationPlanDescriptor	Full Time Employment	Full Time Employment	Full Time Employment	\N	\N	\N	2022-11-17 17:07:45.858363	2022-11-17 17:07:45.858334	f791d8e3-25c9-4587-a2c9-7624fc9c8615	864
866	uri://ed-fi.org/EducationPlanDescriptor	IDEA IEP	IDEA IEP	IDEA IEP	\N	\N	\N	2022-11-17 17:07:45.8665	2022-11-17 17:07:45.866466	2817770b-aa61-462a-97e2-f156232f370d	866
868	uri://ed-fi.org/EducationPlanDescriptor	Outside Service Access	Outside Service Access	Outside Service Access	\N	\N	\N	2022-11-17 17:07:45.874705	2022-11-17 17:07:45.874649	28f14b4a-96d2-43d5-9ade-bb9aeb84dc09	868
870	uri://ed-fi.org/EducationPlanDescriptor	Student Success Plan	Student Success Plan	Student Success Plan	\N	\N	\N	2022-11-17 17:07:45.882558	2022-11-17 17:07:45.88253	b6b2a429-009f-4709-b66a-6297f3f54b42	870
871	uri://ed-fi.org/ElectronicMailTypeDescriptor	Home/Personal	Home/Personal	Home/Personal	\N	\N	\N	2022-11-17 17:07:45.917381	2022-11-17 17:07:45.915937	10085045-46b9-4cb5-b2a7-a010a898372f	871
873	uri://ed-fi.org/ElectronicMailTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.929187	2022-11-17 17:07:45.92796	b8b659b6-66a1-4854-8926-937dce2274f2	873
876	uri://ed-fi.org/EmploymentStatusDescriptor	Probationary	Probationary	Probationary	\N	\N	\N	2022-11-17 17:07:46.020211	2022-11-17 17:07:46.018624	29f5578d-4ef6-40ed-a69d-d12d0a58b219	876
878	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside organization	Employed or affiliated with outside organization	Employed or affiliated with outside organization	\N	\N	\N	2022-11-17 17:07:46.03311	2022-11-17 17:07:46.033089	5b068dd1-fd71-4dea-8a83-174f3af48f0c	878
879	uri://ed-fi.org/EmploymentStatusDescriptor	Employed part-time	Employed part-time	Employed part-time	\N	\N	\N	2022-11-17 17:07:46.040842	2022-11-17 17:07:46.040737	4579b8de-3b2d-4d3c-8fcf-4b6c77fbaa30	879
881	uri://ed-fi.org/EmploymentStatusDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:46.048993	2022-11-17 17:07:46.048959	73ebff4e-c337-4703-a7a2-9130f3a4d3d1	881
883	uri://ed-fi.org/EmploymentStatusDescriptor	Tenured or permanent	Tenured or permanent	Tenured or permanent	\N	\N	\N	2022-11-17 17:07:46.057257	2022-11-17 17:07:46.057223	366dc3b7-f880-42c5-b4fd-981bcc437dd8	883
885	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	Nonpromotion - Failed to meet testing requirements	\N	\N	\N	2022-11-17 17:07:46.093879	2022-11-17 17:07:46.092541	58b576a7-83af-488a-865c-27010514dc34	885
888	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	Nonpromotion - Inadequate performance	\N	\N	\N	2022-11-17 17:07:46.105991	2022-11-17 17:07:46.105975	497efc52-d6eb-4ed0-b7ca-3860218cb3a2	888
890	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Other	Nonpromotion - Other	Nonpromotion - Other	\N	\N	\N	2022-11-17 17:07:46.118683	2022-11-17 17:07:46.118647	b6e47286-41f8-423d-a4af-15d2ee91bfcb	890
892	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Accelerated promotion	Promotion - Accelerated promotion	Promotion - Accelerated promotion	\N	\N	\N	2022-11-17 17:07:46.126877	2022-11-17 17:07:46.126841	b76dcdb9-feea-4abd-8974-8a99af00bc4d	892
893	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Continuous promotion	Promotion - Continuous promotion	Promotion - Continuous promotion	\N	\N	\N	2022-11-17 17:07:46.132051	2022-11-17 17:07:46.132015	a46a29a9-76eb-4099-93c1-72baa1329879	893
896	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Regular promotion	Promotion - Regular promotion	Promotion - Regular promotion	\N	\N	\N	2022-11-17 17:07:46.144134	2022-11-17 17:07:46.144098	093a7e63-0caf-482b-bcbd-a34bdfbaeb4f	896
836	uri://ed-fi.org/EducationalEnvironmentDescriptor	Single sex classroom	Single sex classroom	Single sex classroom	\N	\N	\N	2022-11-17 17:07:45.604653	2022-11-17 17:07:45.604603	2231df6f-9b5c-4547-8c86-a48fcc19973f	836
837	uri://ed-fi.org/EducationOrganizationAssociationTypeDescriptor	Administration	Administration	Indicates the education organization (typically a school) that administered the assessment.	\N	\N	\N	2022-11-17 17:07:45.637439	2022-11-17 17:07:45.636084	6b5d692e-bbe3-413c-af2d-ab6c6cfa3591	837
840	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	2022-11-17 17:07:45.681626	2022-11-17 17:07:45.680033	2c4fdd54-f821-49ce-8159-b24b16dac3bf	840
842	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	2022-11-17 17:07:45.692299	2022-11-17 17:07:45.692241	1539fa8c-8c41-45b7-ae00-26aeff7f3bb0	842
844	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:45.701783	2022-11-17 17:07:45.701714	211a0315-d436-481d-8159-9b2a97b12b5d	844
846	uri://ed-fi.org/EducationOrganizationCategoryDescriptor	Post Secondary Institution	Post Secondary Institution	Post Secondary Institution	\N	\N	\N	2022-11-17 17:07:45.709881	2022-11-17 17:07:45.709827	48580b9b-35cd-4e0b-bb88-f7882a1b028b	846
848	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	ACT	ACT	ACT	\N	\N	\N	2022-11-17 17:07:45.747582	2022-11-17 17:07:45.746043	e6a2d896-f487-4294-aa09-20393834a94b	848
851	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	IPEDS	IPEDS	IPEDS	\N	\N	\N	2022-11-17 17:07:45.76209	2022-11-17 17:07:45.762055	c1856e24-8cfa-4ba8-acfa-627667177c2f	851
853	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	NCES	NCES	NCES	\N	\N	\N	2022-11-17 17:07:45.769814	2022-11-17 17:07:45.76978	a68b65ee-7b38-4f2a-99a1-26a1ad78a8a2	853
855	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	2022-11-17 17:07:45.778461	2022-11-17 17:07:45.778351	d391a4d7-9b01-4099-b1c1-d2b6c38a0070	855
858	uri://ed-fi.org/EducationOrganizationIdentificationSystemDescriptor	USDE - OPE	USDE - OPE	USDE - OPE	\N	\N	\N	2022-11-17 17:07:45.79098	2022-11-17 17:07:45.790946	6647f5c7-1358-4b4f-9fcd-231134e6ec97	858
859	uri://ed-fi.org/EducationPlanDescriptor	Career Pathways	Career Pathways	Career Pathways	\N	\N	\N	2022-11-17 17:07:45.829099	2022-11-17 17:07:45.827554	b2231e31-2f01-4d6d-aff2-c55dba1879f4	859
862	uri://ed-fi.org/EducationPlanDescriptor	Completion and Reach Age 22	Completion and Reach Age 22	Completion and Reach Age 22	\N	\N	\N	2022-11-17 17:07:45.846367	2022-11-17 17:07:45.846314	0a2f443f-3c04-401f-8854-0f2b629fc1fd	862
863	uri://ed-fi.org/EducationPlanDescriptor	Employability Skills	Employability Skills	Employability Skills	\N	\N	\N	2022-11-17 17:07:45.854028	2022-11-17 17:07:45.853975	c3bf63d7-456e-44ff-abb2-d33a5141558d	863
865	uri://ed-fi.org/EducationPlanDescriptor	High School Education Plan	High School Education Plan	High School Education Plan	\N	\N	\N	2022-11-17 17:07:45.862863	2022-11-17 17:07:45.862764	3465c751-d22d-437e-b105-1e382dc77a38	865
867	uri://ed-fi.org/EducationPlanDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:45.870356	2022-11-17 17:07:45.870317	be3f4063-eddc-472a-b603-1d10481d7003	867
869	uri://ed-fi.org/EducationPlanDescriptor	Personal Graduation Plan	Personal Graduation Plan	Personal Graduation Plan	\N	\N	\N	2022-11-17 17:07:45.878667	2022-11-17 17:07:45.87861	b3a0b55a-ab6c-4e71-9960-9070be468ca7	869
872	uri://ed-fi.org/ElectronicMailTypeDescriptor	Organization	Organization	Organization	\N	\N	\N	2022-11-17 17:07:45.917704	2022-11-17 17:07:45.91594	a083caba-832c-439f-ab45-c7ff03fd5ef0	872
874	uri://ed-fi.org/ElectronicMailTypeDescriptor	Work	Work	Work	\N	\N	\N	2022-11-17 17:07:45.929632	2022-11-17 17:07:45.929576	0590f2aa-3710-414f-a6a2-3c76abb60597	874
875	uri://ed-fi.org/EmploymentStatusDescriptor	Contractual	Contractual	Contractual	\N	\N	\N	2022-11-17 17:07:46.020211	2022-11-17 17:07:46.01862	b754f480-9548-4d60-adb3-eb34212a3021	875
877	uri://ed-fi.org/EmploymentStatusDescriptor	Employed or affiliated with outside agency part-ti	Employed or affiliated with outside agency part-time	Employed or affiliated with outside agency part-time	\N	\N	\N	2022-11-17 17:07:46.031693	2022-11-17 17:07:46.031567	095c11c1-07f2-4e32-b5e1-4695652c35b7	877
880	uri://ed-fi.org/EmploymentStatusDescriptor	Non-contractual	Non-contractual	Non-contractual	\N	\N	\N	2022-11-17 17:07:46.044032	2022-11-17 17:07:46.043998	1fcb802f-a985-4b0e-92dc-946ef36cfa4e	880
882	uri://ed-fi.org/EmploymentStatusDescriptor	Substitute/temporary	Substitute/temporary	Substitute/temporary	\N	\N	\N	2022-11-17 17:07:46.053793	2022-11-17 17:07:46.053756	1f75870a-7aa4-4e71-9abe-026c45abdd02	882
884	uri://ed-fi.org/EmploymentStatusDescriptor	Volunteer/no contract	Volunteer/no contract	Volunteer/no contract	\N	\N	\N	2022-11-17 17:07:46.061728	2022-11-17 17:07:46.061631	5cb4dd17-f38a-4ca5-b14d-25071700a327	884
886	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Illness	Nonpromotion - Illness	Nonpromotion - Illness	\N	\N	\N	2022-11-17 17:07:46.09387	2022-11-17 17:07:46.092537	7b21c428-e101-4bf3-a91f-119761e23224	886
887	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Immaturity	Nonpromotion - Immaturity	Nonpromotion - Immaturity	\N	\N	\N	2022-11-17 17:07:46.104515	2022-11-17 17:07:46.104414	0a524363-9dc5-4fba-b005-33039925a4e7	887
889	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	Nonpromotion - Insufficient credits	\N	\N	\N	2022-11-17 17:07:46.11589	2022-11-17 17:07:46.115819	76934893-77d3-4106-b900-a4d0532d28fd	889
891	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	Nonpromotion - Prolonged absence	\N	\N	\N	2022-11-17 17:07:46.123965	2022-11-17 17:07:46.123894	574bfb2f-8214-47a2-8277-c168e572ff74	891
894	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Other	Promotion - Other	Promotion - Other	\N	\N	\N	2022-11-17 17:07:46.135387	2022-11-17 17:07:46.135351	260da0ef-addd-45d4-b27b-7dc37a5b8763	894
895	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Probationary promotion	Promotion - Probationary promotion	Promotion - Probationary promotion	\N	\N	\N	2022-11-17 17:07:46.141215	2022-11-17 17:07:46.141011	20281ea1-3ce5-430c-9af8-401679199e47	895
899	uri://ed-fi.org/EntryTypeDescriptor	New to education system	New to education system	New to education system	\N	\N	\N	2022-11-17 17:07:46.184747	2022-11-17 17:07:46.183417	c8e10ab1-e09d-485e-ab79-6ebd302a2825	899
900	uri://ed-fi.org/EntryTypeDescriptor	Next year school	Next year school	Next year school	\N	\N	\N	2022-11-17 17:07:46.195365	2022-11-17 17:07:46.195316	82371fad-8716-4a40-a62b-c5c3b0d8f448	900
902	uri://ed-fi.org/EntryTypeDescriptor	Re-entry	Re-entry	Re-entry	\N	\N	\N	2022-11-17 17:07:46.203615	2022-11-17 17:07:46.203545	9021565b-b182-4657-92d1-3caf33e8ae1c	902
903	uri://ed-fi.org/EventCircumstanceDescriptor	Administration or system failure	Administration or system failure	Administration or system failure	\N	\N	\N	2022-11-17 17:07:46.234836	2022-11-17 17:07:46.233525	fd04b746-ad28-448f-a32e-36861a8134df	903
906	uri://ed-fi.org/EventCircumstanceDescriptor	Chronic absences	Chronic absences	Chronic absences	\N	\N	\N	2022-11-17 17:07:46.248336	2022-11-17 17:07:46.248299	12546617-228d-402a-9aac-e1f6510b1b0a	906
908	uri://ed-fi.org/EventCircumstanceDescriptor	Earlier truancy	Earlier truancy	Earlier truancy	\N	\N	\N	2022-11-17 17:07:46.257119	2022-11-17 17:07:46.257084	083876ce-c0c1-494f-bdd5-f1d2c54bb160	908
910	uri://ed-fi.org/EventCircumstanceDescriptor	Foreign exchange student	Foreign exchange student	Foreign exchange student	\N	\N	\N	2022-11-17 17:07:46.265477	2022-11-17 17:07:46.265441	d31098f3-5c26-44bb-a646-b123611a7b00	910
911	uri://ed-fi.org/EventCircumstanceDescriptor	Home schooled for assessed subjects	Home schooled for assessed subjects	Home schooled for assessed subjects	\N	\N	\N	2022-11-17 17:07:46.270655	2022-11-17 17:07:46.270378	b58c90fb-d708-43ff-856c-d55fe121e4c7	911
914	uri://ed-fi.org/EventCircumstanceDescriptor	Left testing	Left testing	Left testing	\N	\N	\N	2022-11-17 17:07:46.281626	2022-11-17 17:07:46.281591	c414d584-8631-4742-a148-59c9b902edd0	914
916	uri://ed-fi.org/EventCircumstanceDescriptor	Non-special ed student used calculator	Non-special education student used calculator on non-calculator items	Non-special education student used calculator on non-calculator items	\N	\N	\N	2022-11-17 17:07:46.289728	2022-11-17 17:07:46.28969	0914fbc0-9076-48e7-954a-6c36d03caf03	916
918	uri://ed-fi.org/EventCircumstanceDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:46.29774	2022-11-17 17:07:46.297704	7a551e17-9b43-4391-969c-74e25a7ca6a7	918
897	uri://ed-fi.org/EntryGradeLevelReasonDescriptor	Promotion - Variable progress	Promotion - Variable progress	Promotion - Variable progress	\N	\N	\N	2022-11-17 17:07:46.149264	2022-11-17 17:07:46.149181	7cef949c-307e-4587-909a-1270fb250da1	897
898	uri://ed-fi.org/EntryTypeDescriptor	Transfer	Transfer	Transfer	\N	\N	\N	2022-11-17 17:07:46.184733	2022-11-17 17:07:46.183413	f5513e5d-1963-4bfc-ba5b-a6ea9dc9f933	898
901	uri://ed-fi.org/EntryTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:46.197214	2022-11-17 17:07:46.197179	4ac703b3-8309-48d0-a27a-4c2b175ee348	901
904	uri://ed-fi.org/EventCircumstanceDescriptor	Catastrophic illness or accident	Catastrophic illness or accident	Catastrophic illness or accident	\N	\N	\N	2022-11-17 17:07:46.234862	2022-11-17 17:07:46.23353	7e3f2952-1a2a-43f1-a9be-e6982c52a823	904
905	uri://ed-fi.org/EventCircumstanceDescriptor	Cheating	Cheating	Cheating	\N	\N	\N	2022-11-17 17:07:46.24533	2022-11-17 17:07:46.244752	a943c363-cf1c-4cd3-bbb9-2232138c1f9b	905
907	uri://ed-fi.org/EventCircumstanceDescriptor	Cross-enrolled	Cross-enrolled	Cross-enrolled	\N	\N	\N	2022-11-17 17:07:46.254144	2022-11-17 17:07:46.254072	422192fa-c7eb-49e3-9369-5d996c5e846f	907
909	uri://ed-fi.org/EventCircumstanceDescriptor	Fire alarm	Fire alarm	Fire alarm	\N	\N	\N	2022-11-17 17:07:46.262544	2022-11-17 17:07:46.262335	decc20c5-4c72-4cb8-8cc9-f6fc2a032753	909
912	uri://ed-fi.org/EventCircumstanceDescriptor	Homebound	Homebound	Homebound	\N	\N	\N	2022-11-17 17:07:46.273563	2022-11-17 17:07:46.273527	195b0350-cfc6-4655-af9a-c599217a5833	912
913	uri://ed-fi.org/EventCircumstanceDescriptor	Incarcerated at adult facility	Incarcerated at adult facility	Incarcerated at adult facility	\N	\N	\N	2022-11-17 17:07:46.278722	2022-11-17 17:07:46.278456	18c43ff6-1027-490d-b8b6-6f751cc53c5a	913
915	uri://ed-fi.org/EventCircumstanceDescriptor	Long-term suspension - non-special education	Long-term suspension - non-special education	Long-term suspension - non-special education	\N	\N	\N	2022-11-17 17:07:46.286817	2022-11-17 17:07:46.286764	eda45977-6e18-4d87-8a66-17b454372108	915
917	uri://ed-fi.org/EventCircumstanceDescriptor	Only for writing	Only for writing	Only for writing	\N	\N	\N	2022-11-17 17:07:46.294862	2022-11-17 17:07:46.294802	fc697205-35e1-4771-8a0d-a037af8a7fb0	917
920	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for nonparticipation	Other reason for nonparticipation	Other reason for nonparticipation	\N	\N	\N	2022-11-17 17:07:46.305813	2022-11-17 17:07:46.305776	123a4431-5b25-4b30-9680-ed0bccbeaa10	920
922	uri://ed-fi.org/EventCircumstanceDescriptor	Psychological factors of emotional trauma	Psychological factors of emotional trauma	Psychological factors of emotional trauma	\N	\N	\N	2022-11-17 17:07:46.313855	2022-11-17 17:07:46.313818	b16027d7-2b14-48aa-947d-8a85f2fcf032	922
924	uri://ed-fi.org/EventCircumstanceDescriptor	Short-term suspension - non-special education	Short-term suspension - non-special education	Short-term suspension - non-special education	\N	\N	\N	2022-11-17 17:07:46.324083	2022-11-17 17:07:46.324046	c325f007-3b3f-4320-b97c-59274232d532	924
926	uri://ed-fi.org/EventCircumstanceDescriptor	Special treatment center	Special treatment center	Special treatment center	\N	\N	\N	2022-11-17 17:07:46.33218	2022-11-17 17:07:46.332144	2be9b390-087e-41e3-b721-98c5c4d39c6d	926
928	uri://ed-fi.org/EventCircumstanceDescriptor	Student refusal	Student refusal	Student refusal	\N	\N	\N	2022-11-17 17:07:46.352978	2022-11-17 17:07:46.352924	69e987a8-1ae4-4eb0-a7bb-828e0d7cb420	928
930	uri://ed-fi.org/EventCircumstanceDescriptor	Student used math journal (non-IEP)	Student used math journal (non-IEP)	Student used math journal (non-IEP)	\N	\N	\N	2022-11-17 17:07:46.361611	2022-11-17 17:07:46.361102	47828824-e485-421c-b7dd-940072e8a0a2	930
932	uri://ed-fi.org/EventCircumstanceDescriptor	Teacher cheating or mis-admin	Teacher cheating or mis-admin	Teacher cheating or mis-admin	\N	\N	\N	2022-11-17 17:07:46.370454	2022-11-17 17:07:46.370436	fcd6344d-9a2b-495b-9a17-788b9cd397ad	932
934	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - paperwork filed	Truancy - paperwork filed	Truancy - paperwork filed	\N	\N	\N	2022-11-17 17:07:46.379617	2022-11-17 17:07:46.379569	bbd5db7e-ca29-43a3-a7b4-e873521991ac	934
935	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Completed	Completed	Completed	\N	\N	\N	2022-11-17 17:07:46.413068	2022-11-17 17:07:46.411465	b74361f2-6e5c-4247-990c-6a391f619923	935
938	uri://ed-fi.org/ExitWithdrawTypeDescriptor	End of school year	End of school year	End of school year	\N	\N	\N	2022-11-17 17:07:46.426488	2022-11-17 17:07:46.426454	0cf2dfd0-0f91-4b7e-ba11-65d94e46a564	938
939	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Enrolled in a high school diploma program	Enrolled in a high school diploma program	Enrolled in a high school diploma program	\N	\N	\N	2022-11-17 17:07:46.431664	2022-11-17 17:07:46.431607	83db022a-de8e-43ad-baa9-b09de4b25b8b	939
942	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Incarcerated	Incarcerated	Incarcerated	\N	\N	\N	2022-11-17 17:07:46.443047	2022-11-17 17:07:46.443014	04da6260-255d-4682-a84d-4f69c8d03cae	942
943	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Invalid enrollment	Invalid enrollment	Invalid enrollment	\N	\N	\N	2022-11-17 17:07:46.448	2022-11-17 17:07:46.447926	66cb1f42-3634-4ae5-8843-5308592ed623	943
946	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:46.459013	2022-11-17 17:07:46.458978	ace79225-cf40-4687-851a-73bc0d8a7b64	946
948	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Transferred	Transferred	Transferred	\N	\N	\N	2022-11-17 17:07:46.467181	2022-11-17 17:07:46.467155	746ea9a6-2137-4417-bdeb-2cdb987d6fe5	948
950	uri://ed-fi.org/FinancialCollectionDescriptor	31 to 45 days	31 to 45 days	31 to 45 days	\N	\N	\N	2022-11-17 17:07:46.504725	2022-11-17 17:07:46.503167	938d0191-7039-4d6c-850c-7adc5b9d0bd5	950
952	uri://ed-fi.org/FinancialCollectionDescriptor	46 to 60 days	46 to 60 days	46 to 60 days	\N	\N	\N	2022-11-17 17:07:46.514808	2022-11-17 17:07:46.51474	d85b7bd1-3ab4-41b8-aa51-09622329ca17	952
956	uri://ed-fi.org/GradebookEntryTypeDescriptor	Activity	Activity	Activity	\N	\N	\N	2022-11-17 17:07:46.555858	2022-11-17 17:07:46.554273	ef54c9a4-c60e-419f-ac2e-def481e72fc7	956
957	uri://ed-fi.org/GradebookEntryTypeDescriptor	Classroom Assessment	Classroom Assessment	Classroom Assessment	\N	\N	\N	2022-11-17 17:07:46.566873	2022-11-17 17:07:46.566831	70b228a2-c700-4ef2-afde-835c2212224d	957
960	uri://ed-fi.org/GradebookEntryTypeDescriptor	Oral Presentation	Oral Presentation	Oral Presentation	\N	\N	\N	2022-11-17 17:07:46.578898	2022-11-17 17:07:46.578865	117063a2-c7b4-4034-8453-5a480b848c97	960
962	uri://ed-fi.org/GradebookEntryTypeDescriptor	Unit Test	Unit Test	Unit Test	\N	\N	\N	2022-11-17 17:07:46.587789	2022-11-17 17:07:46.587756	82f4fb6a-71cc-43cb-9670-f8682e8dfe3a	962
964	uri://ed-fi.org/GradeLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	2022-11-17 17:07:46.62101	2022-11-17 17:07:46.619406	c326b387-177a-4286-8aa6-9cd28d5b6727	964
966	uri://ed-fi.org/GradeLevelDescriptor	Transitional Kindergarten	Transitional Kindergarten	Transitional Kindergarten	\N	\N	\N	2022-11-17 17:07:46.637239	2022-11-17 17:07:46.637207	0452d0db-2779-4a09-b99e-a273c1bb7864	966
968	uri://ed-fi.org/GradeLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	2022-11-17 17:07:46.64554	2022-11-17 17:07:46.645506	08e52a2c-f0a8-4476-b2a8-b67ca96c770e	968
969	uri://ed-fi.org/GradeLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	2022-11-17 17:07:46.65145	2022-11-17 17:07:46.651397	76f554e1-013e-4c71-8b81-664dff5da741	969
972	uri://ed-fi.org/GradeLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	2022-11-17 17:07:46.662856	2022-11-17 17:07:46.662823	c0c3d1b7-5175-4ce8-b917-9844b7fafe20	972
974	uri://ed-fi.org/GradeLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	2022-11-17 17:07:46.670675	2022-11-17 17:07:46.670641	703e33b6-f142-4544-a814-9da3dd057ecf	974
976	uri://ed-fi.org/GradeLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	2022-11-17 17:07:46.678755	2022-11-17 17:07:46.678721	758b20e4-ee5d-4088-9d24-255a73ea5e7e	976
979	uri://ed-fi.org/GradeLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	2022-11-17 17:07:46.690823	2022-11-17 17:07:46.690789	a45569d7-d16b-45d0-b9fc-a0736dd0e70f	979
981	uri://ed-fi.org/GradeLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	2022-11-17 17:07:46.700904	2022-11-17 17:07:46.700819	b89c125c-6340-407f-a36a-ae238b215840	981
984	uri://ed-fi.org/GradeLevelDescriptor	Out of School	Out of School	Out of School	\N	\N	\N	2022-11-17 17:07:46.712435	2022-11-17 17:07:46.7124	0a434872-210b-4a8b-8c9d-e4de77155645	984
986	uri://ed-fi.org/GradeLevelDescriptor	Preschool/Prekindergarten	DEPRECATED: Preschool/Prekindergarten	DEPRECATED: Preschool/Prekindergarten	\N	\N	\N	2022-11-17 17:07:46.720092	2022-11-17 17:07:46.720058	ccf7cca9-e294-4993-a44f-7c2d0d3ad74a	986
988	uri://ed-fi.org/GradeLevelDescriptor	Adult Education	DEPRECATED: Adult Education	DEPRECATED: Adult Education	\N	\N	\N	2022-11-17 17:07:46.731753	2022-11-17 17:07:46.73172	cce9d229-d0f2-4b0f-a1f9-605b6309a4fe	988
919	uri://ed-fi.org/EventCircumstanceDescriptor	Other reason for ineligibility	Other reason for ineligibility	Other reason for ineligibility	\N	\N	\N	2022-11-17 17:07:46.303148	2022-11-17 17:07:46.302836	d3e4447c-c052-48cd-9bfa-6ac17a0b1b36	919
921	uri://ed-fi.org/EventCircumstanceDescriptor	Parent refusal	Parent refusal	Parent refusal	\N	\N	\N	2022-11-17 17:07:46.311086	2022-11-17 17:07:46.311061	468a86b9-a759-45f3-bc07-ce632ad485e5	921
923	uri://ed-fi.org/EventCircumstanceDescriptor	Reading passage read to student (IEP)	Reading passage read to student (IEP)	Reading passage read to student (IEP)	\N	\N	\N	2022-11-17 17:07:46.318893	2022-11-17 17:07:46.318858	7a01403b-2292-482d-99db-ce2804552b41	923
925	uri://ed-fi.org/EventCircumstanceDescriptor	Special detention center	Special detention center	Special detention center	\N	\N	\N	2022-11-17 17:07:46.328522	2022-11-17 17:07:46.328483	90b8234d-93b5-4c80-9612-6cbe1365930e	925
927	uri://ed-fi.org/EventCircumstanceDescriptor	Student not showing adequate effort	Student not showing adequate effort	Student not showing adequate effort	\N	\N	\N	2022-11-17 17:07:46.336961	2022-11-17 17:07:46.33692	ba64b413-97f5-4a3a-abe7-ab3163d9161d	927
929	uri://ed-fi.org/EventCircumstanceDescriptor	Student took this grade level assessment last year	Student took this grade level assessment last year	Student took this grade level assessment last year	\N	\N	\N	2022-11-17 17:07:46.353228	2022-11-17 17:07:46.353156	07eb05bf-2f43-4b64-bdf8-863bd098cd67	929
931	uri://ed-fi.org/EventCircumstanceDescriptor	Suspension - special education	Suspension - special education	Suspension - special education	\N	\N	\N	2022-11-17 17:07:46.364783	2022-11-17 17:07:46.364742	63b8f441-cb8a-4ff8-a852-710746419672	931
933	uri://ed-fi.org/EventCircumstanceDescriptor	Truancy - no paperwork filed	Truancy - no paperwork filed	Truancy - no paperwork filed	\N	\N	\N	2022-11-17 17:07:46.374927	2022-11-17 17:07:46.374774	d259a862-fa3a-4d72-82a1-1d033228bcf7	933
936	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	2022-11-17 17:07:46.413068	2022-11-17 17:07:46.411467	fdb1f84d-c03f-41ee-84e0-7bde5d224aba	936
937	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Dropout	Dropout	Dropout	\N	\N	\N	2022-11-17 17:07:46.423389	2022-11-17 17:07:46.423332	acb825f6-0a77-4222-9b75-c64502689f3b	937
940	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Expelled	Expelled	Expelled	\N	\N	\N	2022-11-17 17:07:46.434893	2022-11-17 17:07:46.43486	7bf62557-c524-461d-b7a0-c4e386e12c53	940
941	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Graduated	Graduated	Graduated	\N	\N	\N	2022-11-17 17:07:46.440104	2022-11-17 17:07:46.439842	4af18f8e-eaac-4798-a920-40916940e45c	941
944	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Involuntarily Removed	Involuntarily Removed	Involuntarily Removed	\N	\N	\N	2022-11-17 17:07:46.450928	2022-11-17 17:07:46.450894	53c18a5b-d6c0-4337-80fe-0c8e8bb02ee1	944
945	uri://ed-fi.org/ExitWithdrawTypeDescriptor	No show	No show	No show	\N	\N	\N	2022-11-17 17:07:46.455995	2022-11-17 17:07:46.455861	6fb15bff-4a4e-445f-9068-f57c10d94452	945
947	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	2022-11-17 17:07:46.46485	2022-11-17 17:07:46.464033	9f50632b-88d9-493e-bb5a-1e165a233990	947
949	uri://ed-fi.org/ExitWithdrawTypeDescriptor	Withdrawn	Withdrawn	Withdrawn	\N	\N	\N	2022-11-17 17:07:46.473318	2022-11-17 17:07:46.473221	2e7b3df0-098e-4b77-a040-be0076855ba4	949
951	uri://ed-fi.org/FinancialCollectionDescriptor	0 to 30 days	0 to 30 days	0 to 30 days	\N	\N	\N	2022-11-17 17:07:46.504724	2022-11-17 17:07:46.503171	bb8776c6-3fd7-4192-848b-d0b27a54cbac	951
953	uri://ed-fi.org/FinancialCollectionDescriptor	61 to 75 days	61 to 75 days	61 to 75 days	\N	\N	\N	2022-11-17 17:07:46.518224	2022-11-17 17:07:46.518187	15d95ea5-4fff-4982-9dd3-5692668a3150	953
954	uri://ed-fi.org/FinancialCollectionDescriptor	76 to 90 days	76 to 90 days	76 to 90 days	\N	\N	\N	2022-11-17 17:07:46.523475	2022-11-17 17:07:46.523315	54b13844-8d4a-447f-bf08-b39b41bd7369	954
955	uri://ed-fi.org/GradebookEntryTypeDescriptor	Assignment	Assignment	Assignment	\N	\N	\N	2022-11-17 17:07:46.555858	2022-11-17 17:07:46.55427	5cd628c5-ec21-4e65-990c-6c8dcca335e5	955
958	uri://ed-fi.org/GradebookEntryTypeDescriptor	Homework	Homework	Homework	\N	\N	\N	2022-11-17 17:07:46.56926	2022-11-17 17:07:46.569225	854df04d-2122-4c16-964e-554bc68c4137	958
959	uri://ed-fi.org/GradebookEntryTypeDescriptor	Lesson	Lesson	Lesson	\N	\N	\N	2022-11-17 17:07:46.575938	2022-11-17 17:07:46.575698	cab5886c-9533-4d19-b930-3e47e8fc8a03	959
961	uri://ed-fi.org/GradebookEntryTypeDescriptor	Quiz	Quiz	Quiz	\N	\N	\N	2022-11-17 17:07:46.584974	2022-11-17 17:07:46.58491	87081c78-b7c5-4c45-9bd1-cc56a258b2df	961
963	uri://ed-fi.org/GradeLevelDescriptor	Preschool	Preschool	Preschool	\N	\N	\N	2022-11-17 17:07:46.62101	2022-11-17 17:07:46.61941	321604a9-8a0b-4327-99b1-06fa4a78bcf4	963
965	uri://ed-fi.org/GradeLevelDescriptor	Prekindergarten	Prekindergarten	Prekindergarten	\N	\N	\N	2022-11-17 17:07:46.633062	2022-11-17 17:07:46.632952	5fe0ddd5-2b27-4b98-b47d-f7c155e7e483	965
967	uri://ed-fi.org/GradeLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	2022-11-17 17:07:46.642169	2022-11-17 17:07:46.642122	1e137931-7a5d-4df1-9740-176273ebbd72	967
970	uri://ed-fi.org/GradeLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	2022-11-17 17:07:46.654597	2022-11-17 17:07:46.654563	92f2d190-7cf5-478f-bbf9-0554dfa8907d	970
971	uri://ed-fi.org/GradeLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	2022-11-17 17:07:46.659461	2022-11-17 17:07:46.659424	6c165546-00d0-47ac-8fbe-af4c99fcdbe6	971
973	uri://ed-fi.org/GradeLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	2022-11-17 17:07:46.667241	2022-11-17 17:07:46.667205	30d755f2-aa46-40be-a4a0-b52bcddcbef0	973
975	uri://ed-fi.org/GradeLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	2022-11-17 17:07:46.675151	2022-11-17 17:07:46.675022	485d27e1-2fb5-48f5-8497-9e60a8b077af	975
977	uri://ed-fi.org/GradeLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	2022-11-17 17:07:46.682384	2022-11-17 17:07:46.68235	5df7bea1-00f2-4f51-af9b-a353d7f7b85e	977
978	uri://ed-fi.org/GradeLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	2022-11-17 17:07:46.687634	2022-11-17 17:07:46.687595	338e7296-5ca8-40cf-9c69-998971749581	978
980	uri://ed-fi.org/GradeLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	2022-11-17 17:07:46.695403	2022-11-17 17:07:46.695369	66e1a63a-5020-4662-a341-53c39942fde4	980
982	uri://ed-fi.org/GradeLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	2022-11-17 17:07:46.70392	2022-11-17 17:07:46.703886	25f3476d-0c96-4147-968d-e0449025956f	982
983	uri://ed-fi.org/GradeLevelDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:46.709435	2022-11-17 17:07:46.709351	337d7441-e767-455f-8ab8-1789b007edaa	983
985	uri://ed-fi.org/GradeLevelDescriptor	Early Education	DEPRECATED: Early Education	DEPRECATED: Early Education	\N	\N	\N	2022-11-17 17:07:46.717497	2022-11-17 17:07:46.717437	179702cc-3650-406f-875d-f733422e860b	985
987	uri://ed-fi.org/GradeLevelDescriptor	No grade level	DEPRECATED: No grade level	DEPRECATED: No grade level	\N	\N	\N	2022-11-17 17:07:46.728915	2022-11-17 17:07:46.728851	4193c41c-a7e1-437f-94c5-5853ef56e626	987
989	uri://ed-fi.org/GradePointAverageTypeDescriptor	Weighted	Weighted	Weighted	\N	\N	\N	2022-11-17 17:07:46.764526	2022-11-17 17:07:46.76295	b84e0a4c-d09b-4cdb-a2c9-c4076c92ff55	989
992	uri://ed-fi.org/GradeTypeDescriptor	Conduct	Conduct	Conduct	\N	\N	\N	2022-11-17 17:07:46.801115	2022-11-17 17:07:46.79955	afbeab12-7f5a-431f-8e7c-5fe7d06a330c	992
993	uri://ed-fi.org/GradeTypeDescriptor	Final	Final	Final	\N	\N	\N	2022-11-17 17:07:46.811896	2022-11-17 17:07:46.811795	1ea82cba-95c8-4115-8752-7c20b88420ed	993
994	uri://ed-fi.org/GradeTypeDescriptor	Grading Period	Grading Period	Grading Period	\N	\N	\N	2022-11-17 17:07:46.813579	2022-11-17 17:07:46.813372	81dca6f8-783b-4a76-94d5-20a81d122d30	994
995	uri://ed-fi.org/GradeTypeDescriptor	Mid-Term Grade	Mid-Term Grade	Mid-Term Grade	\N	\N	\N	2022-11-17 17:07:46.82061	2022-11-17 17:07:46.820542	ba56f972-a423-4304-a914-5a9a2e40689c	995
996	uri://ed-fi.org/GradeTypeDescriptor	Progress Report	Progress Report	Progress Report	\N	\N	\N	2022-11-17 17:07:46.823624	2022-11-17 17:07:46.823592	bbc863d2-af2d-4043-a74b-57e5ab390182	996
997	uri://ed-fi.org/GradeTypeDescriptor	Semester	Semester	Semester	\N	\N	\N	2022-11-17 17:07:46.828844	2022-11-17 17:07:46.828548	0f399686-585f-4273-9cd2-7fe80b9d62cb	997
998	uri://ed-fi.org/GradingPeriodDescriptor	First Semester	First Semester	First Semester	\N	\N	\N	2022-11-17 17:07:46.860085	2022-11-17 17:07:46.858542	d4dad012-b4b6-49a8-8936-ed76a706f0ca	998
999	uri://ed-fi.org/GradingPeriodDescriptor	Second Semester	Second Semester	Second Semester	\N	\N	\N	2022-11-17 17:07:46.860086	2022-11-17 17:07:46.858539	0cd7e335-d3cd-41b7-874b-7dfbc678ffff	999
1000	uri://ed-fi.org/GradingPeriodDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	2022-11-17 17:07:46.870493	2022-11-17 17:07:46.870276	80f972cc-9539-4996-a0dc-a888192afa93	1000
2	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	2022-11-17 17:07:39.913488	2022-11-17 17:07:39.89732	3a62029e-7137-4c70-95d2-88a6cabae206	2
3	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	2022-11-17 17:07:40.039696	2022-11-17 17:07:40.039636	cbc32658-50f3-48a7-96bf-7b29f972f3a3	3
6	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	2022-11-17 17:07:40.051371	2022-11-17 17:07:40.051315	4648ffe2-c35e-4585-9598-fc9b12015ff5	6
8	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	2022-11-17 17:07:40.064068	2022-11-17 17:07:40.064027	4c18db95-eab9-451f-8450-bdec8023d012	8
10	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	2022-11-17 17:07:40.07302	2022-11-17 17:07:40.072981	5df3ee20-45c2-46ea-ba23-4580e91a6681	10
12	uri://ed-fi.org/AbsenceEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	2022-11-17 17:07:40.082087	2022-11-17 17:07:40.082051	2261f97d-415c-4729-b789-d06fee41c795	12
14	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Attendance award	Attendance award	Attendance award	\N	\N	\N	2022-11-17 17:07:40.115762	2022-11-17 17:07:40.114269	09fc22bf-4373-403b-867b-0b6c1dc5674b	14
15	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	2022-11-17 17:07:40.126232	2022-11-17 17:07:40.126169	de551d21-f8b2-49c9-a5e2-7eacda605483	15
17	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	2022-11-17 17:07:40.134497	2022-11-17 17:07:40.134436	7bd6c1cf-960e-4ed1-9026-f48ce228dcbf	17
19	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honor roll	Honor roll	Honor roll	\N	\N	\N	2022-11-17 17:07:40.142824	2022-11-17 17:07:40.142763	a6d7afb2-7075-4fe8-923b-0fb668395176	19
22	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Honors program	Honors program	Honors program	\N	\N	\N	2022-11-17 17:07:40.154571	2022-11-17 17:07:40.154529	240f7c25-d032-4831-889e-5fcf74cec3a2	22
23	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Letter of student commendation	Letter of student commendation	Letter of student commendation	\N	\N	\N	2022-11-17 17:07:40.160075	2022-11-17 17:07:40.159985	154d474d-fd3c-470b-9a13-4844b8295622	23
26	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:40.172089	2022-11-17 17:07:40.172051	aff606ff-ffc3-4cbe-a6d7-20d62f570e34	26
28	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Prize awards	Prize awards	Prize awards	\N	\N	\N	2022-11-17 17:07:40.180844	2022-11-17 17:07:40.180803	113f97eb-6cfc-4848-9667-5fbef5b44484	28
29	uri://ed-fi.org/AcademicHonorCategoryDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	2022-11-17 17:07:40.186265	2022-11-17 17:07:40.186209	c4e2c4b4-1d72-4e00-a3ef-266871a6ea6d	29
31	uri://ed-fi.org/AcademicSubjectDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-11-17 17:07:40.221564	2022-11-17 17:07:40.220012	6f315d82-5d5d-4d15-b522-3e227cddb989	31
34	uri://ed-fi.org/AcademicSubjectDescriptor	Cross Subject	Cross Subject	Cross Subject	\N	\N	\N	2022-11-17 17:07:40.234261	2022-11-17 17:07:40.234209	60de6682-3379-4d84-bd98-4201b01104f4	34
36	uri://ed-fi.org/AcademicSubjectDescriptor	English Language Arts	English Language Arts	English Language Arts	\N	\N	\N	2022-11-17 17:07:40.243762	2022-11-17 17:07:40.243726	bb450fe2-aa95-4a89-90f9-208c4de072fe	36
37	uri://ed-fi.org/AcademicSubjectDescriptor	Fine and Performing Arts	Fine and Performing Arts	Fine and Performing Arts	\N	\N	\N	2022-11-17 17:07:40.248655	2022-11-17 17:07:40.248599	348e2ddb-4f60-4b9b-a5f4-55abd6fd5c53	37
39	uri://ed-fi.org/AcademicSubjectDescriptor	Mathematics	Mathematics	Mathematics	\N	\N	\N	2022-11-17 17:07:40.25652	2022-11-17 17:07:40.256452	83941ef6-65d6-441c-a730-b592b840e308	39
41	uri://ed-fi.org/AcademicSubjectDescriptor	Military Science	Military Science	Military Science	\N	\N	\N	2022-11-17 17:07:40.265961	2022-11-17 17:07:40.265758	dad98e15-1417-4760-8def-c9d800d68ca5	41
43	uri://ed-fi.org/AcademicSubjectDescriptor	Physical, Health, and Safety Education	Physical, Health, and Safety Education	Physical, Health, and Safety Education	\N	\N	\N	2022-11-17 17:07:40.276667	2022-11-17 17:07:40.276615	2a3a2b67-0f8c-4b82-9159-052e696e1254	43
44	uri://ed-fi.org/AcademicSubjectDescriptor	Reading	Reading	Reading	\N	\N	\N	2022-11-17 17:07:40.281703	2022-11-17 17:07:40.281488	800cc7f5-064c-409c-b005-6e816ed34d02	44
46	uri://ed-fi.org/AcademicSubjectDescriptor	Social Sciences and History	Social Sciences and History	Social Sciences and History	\N	\N	\N	2022-11-17 17:07:40.290449	2022-11-17 17:07:40.290298	47d6e3c6-5ca5-4196-be13-cacc034833c5	46
48	uri://ed-fi.org/AcademicSubjectDescriptor	Science	Science	Science	\N	\N	\N	2022-11-17 17:07:40.298029	2022-11-17 17:07:40.297989	08570f9a-fe43-4c31-b381-aee8db6ac761	48
50	uri://ed-fi.org/AccommodationDescriptor	504 accommodation	504 accommodation	504 accommodation	\N	\N	\N	2022-11-17 17:07:40.336399	2022-11-17 17:07:40.334871	7de46571-25e0-4a05-b41c-3de4926a6106	50
53	uri://ed-fi.org/AccommodationDescriptor	Scheduling accommodation	Scheduling accommodation	Scheduling accommodation	\N	\N	\N	2022-11-17 17:07:40.350052	2022-11-17 17:07:40.349858	9e68fdad-6a51-47b3-beab-7af600f03c33	53
55	uri://ed-fi.org/AccommodationDescriptor	Student equipment/technology accommodation	Student equipment/technology	Student equipment/technology	\N	\N	\N	2022-11-17 17:07:40.359203	2022-11-17 17:07:40.359028	ea19c7c1-1c6f-4ca2-a9fb-41ef5b24883e	55
56	uri://ed-fi.org/AccommodationDescriptor	Test administration accommodation	Test administration accommodation	Test administration accommodation	\N	\N	\N	2022-11-17 17:07:40.364662	2022-11-17 17:07:40.364609	c0859f89-fd06-4b1b-9018-bce4a64ffd33	56
58	uri://ed-fi.org/AccommodationDescriptor	Test response accommodation	Test response accommodation	Test response accommodation	\N	\N	\N	2022-11-17 17:07:40.373028	2022-11-17 17:07:40.372989	7a27fcc9-7076-463d-b895-dff42ba06e4b	58
60	uri://ed-fi.org/AccountTypeDescriptor	Expenditure	Expenditure	Expenditure	\N	\N	\N	2022-11-17 17:07:40.405188	2022-11-17 17:07:40.403712	3f749cda-2538-4c95-ac2e-b86767e05bef	60
61	uri://ed-fi.org/AccountTypeDescriptor	Revenue	Revenue	Revenue	\N	\N	\N	2022-11-17 17:07:40.415116	2022-11-17 17:07:40.415062	e52635aa-82a9-4f97-b673-8b490ae38f57	61
62	uri://ed-fi.org/AchievementCategoryDescriptor	Academic Honor	Academic Honor	Academic Honor	\N	\N	\N	2022-11-17 17:07:40.447983	2022-11-17 17:07:40.446525	19ae92e2-f7b6-4949-878b-a54e68f6c8f4	62
64	uri://ed-fi.org/AchievementCategoryDescriptor	Competency Mastered	Competency Mastered	Competency Mastered	\N	\N	\N	2022-11-17 17:07:40.45816	2022-11-17 17:07:40.458051	11407d87-0a97-4fe4-b47d-528de3c529c8	64
66	uri://ed-fi.org/AchievementCategoryDescriptor	Course Completed	Course Completed	Course Completed	\N	\N	\N	2022-11-17 17:07:40.466947	2022-11-17 17:07:40.466881	1addb675-968f-4e59-be27-e918c5117f72	66
68	uri://ed-fi.org/AchievementCategoryDescriptor	Level Completed	Level Completed	Level Completed	\N	\N	\N	2022-11-17 17:07:40.478669	2022-11-17 17:07:40.478382	5f4e1fee-6cb2-40f4-bd90-502cccb04497	68
69	uri://ed-fi.org/AchievementCategoryDescriptor	License Earned	License Earned	License Earned	\N	\N	\N	2022-11-17 17:07:40.484117	2022-11-17 17:07:40.483953	0e58ccb7-3800-4761-8f5b-8f29606268b8	69
71	uri://ed-fi.org/AchievementCategoryDescriptor	Participation	Participation	Participation	\N	\N	\N	2022-11-17 17:07:40.495565	2022-11-17 17:07:40.495516	f6e55f6d-34c3-498c-a6cf-49b2f1d80dd0	71
75	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Advanced Placement	Advanced Placement	Advanced Placement	\N	\N	\N	2022-11-17 17:07:40.53456	2022-11-17 17:07:40.533049	604467c3-9db9-4793-a9f1-2b39f18424a7	75
76	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Dual credit	Dual credit	Dual credit	\N	\N	\N	2022-11-17 17:07:40.545153	2022-11-17 17:07:40.545098	a759c4cb-bfda-4014-9d2f-0eff4034f31e	76
78	uri://ed-fi.org/AdditionalCreditTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:40.555015	2022-11-17 17:07:40.554966	48a2fdbc-7fa2-47a4-9206-4ba6beff4ca8	78
80	uri://ed-fi.org/AddressTypeDescriptor	Billing	Billing	Billing	\N	\N	\N	2022-11-17 17:07:40.587959	2022-11-17 17:07:40.586491	cf7bdf97-a116-4548-afcd-0a376ce92c4b	80
81	uri://ed-fi.org/AddressTypeDescriptor	Father Address	Father Address	Father Address	\N	\N	\N	2022-11-17 17:07:40.598431	2022-11-17 17:07:40.597573	c2c0cbce-e646-455f-b3d2-451819bfecec	81
84	uri://ed-fi.org/AddressTypeDescriptor	Hotels/Motels	Hotels/Motels	Hotels/Motels	\N	\N	\N	2022-11-17 17:07:40.611401	2022-11-17 17:07:40.611363	e080367e-0d8a-427e-8d38-a09b89c27e9d	84
85	uri://ed-fi.org/AddressTypeDescriptor	Mailing	Mailing	Mailing	\N	\N	\N	2022-11-17 17:07:40.616378	2022-11-17 17:07:40.61634	4af2e096-6293-4ce1-82e0-b6644652b560	85
1001	uri://ed-fi.org/GradingPeriodDescriptor	First Summer Session	First Summer Session	First Summer Session	\N	\N	\N	2022-11-17 17:07:46.871846	2022-11-17 17:07:46.871627	749b5d2d-d713-4473-8d91-cae73943cda2	1001
1003	uri://ed-fi.org/GradingPeriodDescriptor	Third Summer Session	Third Summer Session	Third Summer Session	\N	\N	\N	2022-11-17 17:07:46.881468	2022-11-17 17:07:46.881442	40a74a02-6139-4d7b-9115-bee9ac924eb2	1003
1004	uri://ed-fi.org/GradingPeriodDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	2022-11-17 17:07:46.886875	2022-11-17 17:07:46.88681	d8fc82a2-21b2-4b10-84c4-5e5189f15d29	1004
1006	uri://ed-fi.org/GradingPeriodDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	2022-11-17 17:07:46.895015	2022-11-17 17:07:46.89489	5d7edc51-57b9-4762-9992-b464341f5090	1006
1008	uri://ed-fi.org/GradingPeriodDescriptor	Second Nine Weeks	Second Nine Weeks	Second Nine Weeks	\N	\N	\N	2022-11-17 17:07:46.90322	2022-11-17 17:07:46.903171	d58aefdf-28d4-4d34-b233-acb1237c4148	1008
1010	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Nine Weeks	Fourth Nine Weeks	Fourth Nine Weeks	\N	\N	\N	2022-11-17 17:07:46.911624	2022-11-17 17:07:46.911572	2c86fe92-27a0-49b2-9421-cbe3db23cdfe	1010
1012	uri://ed-fi.org/GradingPeriodDescriptor	Second Six Weeks	Second Six Weeks	Second Six Weeks	\N	\N	\N	2022-11-17 17:07:46.919857	2022-11-17 17:07:46.919784	c4198a3a-f281-4cdd-bf91-29a7baf2d229	1012
1014	uri://ed-fi.org/GradingPeriodDescriptor	Fourth Six Weeks	Fourth Six Weeks	Fourth Six Weeks	\N	\N	\N	2022-11-17 17:07:46.927892	2022-11-17 17:07:46.927829	581d2b47-c9ad-4aaa-9562-0980be98d3df	1014
1017	uri://ed-fi.org/GradingPeriodDescriptor	End of Year	End of Year	End of Year	\N	\N	\N	2022-11-17 17:07:46.939969	2022-11-17 17:07:46.939936	43e11437-7fd3-4d95-8dd3-61410a03657e	1017
1018	uri://ed-fi.org/GraduationPlanTypeDescriptor	Distinguished	Distinguished	Distinguished	\N	\N	\N	2022-11-17 17:07:46.972786	2022-11-17 17:07:46.971228	b5a234cc-d059-4bfa-bb39-2634702d10ee	1018
1021	uri://ed-fi.org/GraduationPlanTypeDescriptor	Recommended	Recommended	Recommended	\N	\N	\N	2022-11-17 17:07:46.987468	2022-11-17 17:07:46.987433	a4c9401a-42e5-4f42-91e5-df46db7e7ee0	1021
1024	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Not applicable	Not applicable	Not applicable	\N	\N	\N	2022-11-17 17:07:47.023008	2022-11-17 17:07:47.021501	5cf682be-b4af-4623-8546-898ff9a76a5d	1024
1026	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with one or more student offenses	Yes, with reporting of one or more students for an offense	Yes, with reporting of one or more students for an offense	\N	\N	\N	2022-11-17 17:07:47.035644	2022-11-17 17:07:47.035607	a11d48fe-9019-467e-a162-f73298a15470	1026
1027	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Hotels/motels	Hotels/motels	Hotels/motels	\N	\N	\N	2022-11-17 17:07:47.067784	2022-11-17 17:07:47.066215	c453f17a-2696-4696-abec-3ef5c93e8106	1027
1030	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Unsheltered	Unsheltered	Unsheltered	\N	\N	\N	2022-11-17 17:07:47.081488	2022-11-17 17:07:47.08145	19189bdd-912c-4783-9d6f-6d9f67812c5c	1030
1031	uri://ed-fi.org/HomelessProgramServiceDescriptor	Expedited Evaluations	Expedited Evaluations	Expedited Evaluations	\N	\N	\N	2022-11-17 17:07:47.112883	2022-11-17 17:07:47.111313	38f4d73c-b818-4d28-bb57-a0c9562ed55a	1031
1034	uri://ed-fi.org/HomelessProgramServiceDescriptor	Transportation Services	Transportation Services	Transportation Services	\N	\N	\N	2022-11-17 17:07:47.126642	2022-11-17 17:07:47.12661	12351ab1-07e3-4538-970e-31ec0dfd4bf4	1034
1036	uri://ed-fi.org/HomelessProgramServiceDescriptor	External Instructional Services	External Instructional Services	External Instructional Services	\N	\N	\N	2022-11-17 17:07:47.136852	2022-11-17 17:07:47.136813	d814d9d0-44e3-46fb-8e5d-9d13e9e088d6	1036
1040	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Foreign Citizenship Identification	Foreign Citizenship Identification	Foreign Citizenship Identification	\N	\N	\N	2022-11-17 17:07:47.176061	2022-11-17 17:07:47.174499	68219700-402d-4757-85fb-58d91ba3bb96	1040
1041	uri://ed-fi.org/IdentificationDocumentUseDescriptor	US Citizenship Identification	US Citizenship Identification	US Citizenship Identification	\N	\N	\N	2022-11-17 17:07:47.187593	2022-11-17 17:07:47.187407	094d4d7f-f675-4059-83d0-0f403494fcd4	1041
1043	uri://ed-fi.org/IncidentLocationDescriptor	Administrative offices area	Administrative offices area	Administrative offices area	\N	\N	\N	2022-11-17 17:07:47.21543	2022-11-17 17:07:47.214025	6fe03bc0-5011-4fd5-a52c-7b83c164974b	1043
1045	uri://ed-fi.org/IncidentLocationDescriptor	Bus stop	Bus stop	Bus stop	\N	\N	\N	2022-11-17 17:07:47.22812	2022-11-17 17:07:47.228085	6d6f760f-2772-4c5f-ba6c-6900a3bcc409	1045
1047	uri://ed-fi.org/IncidentLocationDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-11-17 17:07:47.237996	2022-11-17 17:07:47.237961	4f16e2f1-a644-4bbf-9521-21a4cfb84c7d	1047
1048	uri://ed-fi.org/IncidentLocationDescriptor	Computer lab	Computer lab	Computer lab	\N	\N	\N	2022-11-17 17:07:47.243912	2022-11-17 17:07:47.243874	05d9bdc6-3955-41d3-bb80-9132858f0f0e	1048
1050	uri://ed-fi.org/IncidentLocationDescriptor	Library/media center	Library/media center	Library/media center	\N	\N	\N	2022-11-17 17:07:47.253539	2022-11-17 17:07:47.253474	40ff4cb1-34a6-439c-9376-a538a1e19bbf	1050
1053	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	Off-campus at a school sponsored activity	\N	\N	\N	2022-11-17 17:07:47.264833	2022-11-17 17:07:47.264799	90805450-0436-4051-909e-dcb6b2fd1b74	1053
1055	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school	Off-campus at other school	Off-campus at other school	\N	\N	\N	2022-11-17 17:07:47.273303	2022-11-17 17:07:47.273269	b2866cd0-0aa7-41cb-864b-f8e55dcdf8a4	1055
1057	uri://ed-fi.org/IncidentLocationDescriptor	On campus	On campus	On campus	\N	\N	\N	2022-11-17 17:07:47.281305	2022-11-17 17:07:47.281271	27426129-89fe-4795-8519-31cf02b6bf7b	1057
1059	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other outside area	On-campus other outside area	On-campus other outside area	\N	\N	\N	2022-11-17 17:07:47.29091	2022-11-17 17:07:47.290875	75c063f5-be47-4235-9663-56b3ea3d1ff7	1059
1060	uri://ed-fi.org/IncidentLocationDescriptor	Online	Online	Online	\N	\N	\N	2022-11-17 17:07:47.298942	2022-11-17 17:07:47.298655	a893894d-35b2-49cb-a982-0ebbfb16735f	1060
1063	uri://ed-fi.org/IncidentLocationDescriptor	School bus	School bus	School bus	\N	\N	\N	2022-11-17 17:07:47.310463	2022-11-17 17:07:47.310428	d29e5aa8-83ba-4464-b02a-98809efcb084	1063
1065	uri://ed-fi.org/IncidentLocationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-11-17 17:07:47.325291	2022-11-17 17:07:47.325197	6ec1630b-81a8-4dca-908b-5b0193e5488f	1065
1067	uri://gbisd.edu/IndicatorDescriptor	Retention Rate	Percent of staff retained	The percent of staff retained for the education organization	\N	\N	\N	2022-11-17 17:07:47.362747	2022-11-17 17:07:47.361418	c43f3149-10fb-4bbd-90f1-6b5376ecfa82	1067
1070	uri://gbisd.edu/IndicatorLevelDescriptor	Medium Retention	Medium Retention	Staff retention from previous school year is between 80-90 percent of staff retained.	\N	\N	\N	2022-11-17 17:07:47.401229	2022-11-17 17:07:47.399662	a7d16afd-ff5e-48f1-81bc-62c524de1c45	1070
1073	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	2022-11-17 17:07:47.442125	2022-11-17 17:07:47.440575	5a084400-3f60-4151-9c5e-50d02edcf09b	1073
1074	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	2022-11-17 17:07:47.453148	2022-11-17 17:07:47.453073	9c8dfccd-5fb9-46d6-953d-e8a93963e87e	1074
1076	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Health Clinic	Health Clinic	Health Clinic	\N	\N	\N	2022-11-17 17:07:47.46144	2022-11-17 17:07:47.461399	aaeccf2c-133f-4425-aca3-edf6e0d3d2fe	1076
1079	uri://ed-fi.org/InteractivityStyleDescriptor	Expositive	Expositive	Expositive	\N	\N	\N	2022-11-17 17:07:47.502389	2022-11-17 17:07:47.5008	2d733859-0619-4ec1-880a-62de83110be1	1079
1081	uri://ed-fi.org/InteractivityStyleDescriptor	Mixed	Mixed	Mixed	\N	\N	\N	2022-11-17 17:07:47.512915	2022-11-17 17:07:47.512879	c6ac7cf6-ff03-4346-a0d7-c5165c18c85e	1081
1084	uri://ed-fi.org/InternetAccessDescriptor	Dial-up	Dial-up	Dial-up	\N	\N	\N	2022-11-17 17:07:47.550721	2022-11-17 17:07:47.549176	e8f9483a-f008-499e-80e5-35a080e76ad7	1084
1086	uri://ed-fi.org/InternetAccessDescriptor	Fiber	Fiber	Fiber	\N	\N	\N	2022-11-17 17:07:47.564904	2022-11-17 17:07:47.564868	5632be11-ccf8-4a5b-a1cb-9dd09412eeeb	1086
1088	uri://ed-fi.org/InternetAccessDescriptor	None	None	None	\N	\N	\N	2022-11-17 17:07:47.57359	2022-11-17 17:07:47.573553	25ca8df8-0272-4bd8-b397-c968726b17b4	1088
1090	uri://ed-fi.org/InternetAccessDescriptor	Personal hotspot/smartphone	Personal hotspot/smartphone	Personal hotspot/smartphone	\N	\N	\N	2022-11-17 17:07:47.581749	2022-11-17 17:07:47.581711	7a5f31cd-ada9-4971-8ff2-ba7900f784d4	1090
1092	uri://ed-fi.org/InternetAccessDescriptor	School-provided hotspot	School-provided hotspot	School-provided hotspot	\N	\N	\N	2022-11-17 17:07:47.593536	2022-11-17 17:07:47.593499	072e4f6f-e815-40ff-b52b-8c57e34cb1c7	1092
1002	uri://ed-fi.org/GradingPeriodDescriptor	Second Summer Session	Second Summer Session	Second Summer Session	\N	\N	\N	2022-11-17 17:07:46.878698	2022-11-17 17:07:46.87863	bb8e2903-d1d6-46c7-91a2-197f28228f9e	1002
1005	uri://ed-fi.org/GradingPeriodDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	2022-11-17 17:07:46.889848	2022-11-17 17:07:46.889822	ccb36575-c39d-407a-a2b5-a8d49941b06b	1005
1007	uri://ed-fi.org/GradingPeriodDescriptor	First Nine Weeks	First Nine Weeks	First Nine Weeks	\N	\N	\N	2022-11-17 17:07:46.897992	2022-11-17 17:07:46.897958	1f7d27b4-ece7-455f-b790-f103159546e6	1007
1009	uri://ed-fi.org/GradingPeriodDescriptor	Third Nine Weeks	Third Nine Weeks	Third Nine Weeks	\N	\N	\N	2022-11-17 17:07:46.906087	2022-11-17 17:07:46.906055	ca5d0db1-fbca-402a-a0b8-a3ac0df9720c	1009
1011	uri://ed-fi.org/GradingPeriodDescriptor	First Six Weeks	First Six Weeks	First Six Weeks	\N	\N	\N	2022-11-17 17:07:46.91451	2022-11-17 17:07:46.914475	581f3672-10e0-40b7-98ed-ab7aab5a0e08	1011
1013	uri://ed-fi.org/GradingPeriodDescriptor	Third Six Weeks	Third Six Weeks	Third Six Weeks	\N	\N	\N	2022-11-17 17:07:46.922616	2022-11-17 17:07:46.922582	1098d02d-1c32-48c1-a905-de007023afdb	1013
1015	uri://ed-fi.org/GradingPeriodDescriptor	Fifth Six Weeks	Fifth Six Weeks	Fifth Six Weeks	\N	\N	\N	2022-11-17 17:07:46.930444	2022-11-17 17:07:46.930408	8c820660-f77b-404f-9381-078a074a2801	1015
1016	uri://ed-fi.org/GradingPeriodDescriptor	Sixth Six Weeks	Sixth Six Weeks	Sixth Six Weeks	\N	\N	\N	2022-11-17 17:07:46.936977	2022-11-17 17:07:46.936902	7f20489e-f778-4cd4-9f1d-d909299f3b0c	1016
1019	uri://ed-fi.org/GraduationPlanTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-11-17 17:07:46.972786	2022-11-17 17:07:46.971232	32b9c07e-eeda-43ff-a302-82331aacfdcc	1019
1020	uri://ed-fi.org/GraduationPlanTypeDescriptor	Minimum	Minimum	Minimum	\N	\N	\N	2022-11-17 17:07:46.984937	2022-11-17 17:07:46.984887	6b2c374f-44d1-4ca7-b54b-5c08f79ddae0	1020
1022	uri://ed-fi.org/GraduationPlanTypeDescriptor	Standard	Standard	Standard	\N	\N	\N	2022-11-17 17:07:46.993252	2022-11-17 17:07:46.993183	3f34be3e-d62e-4974-9602-0afdcd9e4a39	1022
1023	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	No	No	No	\N	\N	\N	2022-11-17 17:07:47.023009	2022-11-17 17:07:47.021497	7d1ae9a6-1e67-487a-93e5-e113482ea441	1023
1025	uri://ed-fi.org/GunFreeSchoolsActReportingStatusDescriptor	Yes, with no reported offenses	Yes, with no reported offenses	Yes, with no reported offenses	\N	\N	\N	2022-11-17 17:07:47.032545	2022-11-17 17:07:47.032333	2cf5c97a-6eda-4c41-a9a7-fc125ef2759b	1025
1028	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Doubled-up	Doubled-up	Doubled-up	\N	\N	\N	2022-11-17 17:07:47.067783	2022-11-17 17:07:47.066218	d3856e20-a016-4fbd-a736-3e5abf7ce43b	1028
1029	uri://ed-fi.org/HomelessPrimaryNighttimeResidenceDescriptor	Shelters	Shelters	Shelters	\N	\N	\N	2022-11-17 17:07:47.078162	2022-11-17 17:07:47.078088	306948dd-a87f-4fd6-9a1c-fe2e5511aec0	1029
1032	uri://ed-fi.org/HomelessProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	2022-11-17 17:07:47.112883	2022-11-17 17:07:47.111317	867b54cc-279a-4e7f-bd7a-49eedf1d37ae	1032
1033	uri://ed-fi.org/HomelessProgramServiceDescriptor	Medical Referrals	Medical Referrals	Medical Referrals	\N	\N	\N	2022-11-17 17:07:47.12381	2022-11-17 17:07:47.123734	060ee264-a9fd-43d3-a6e4-ceb18da9b5a4	1033
1035	uri://ed-fi.org/HomelessProgramServiceDescriptor	Early Childhood Education Programs	Early Childhood Education Programs	Early Childhood Education Programs	\N	\N	\N	2022-11-17 17:07:47.132095	2022-11-17 17:07:47.132058	b66f7a3f-3f48-4f78-9661-26177c3d0613	1035
1037	uri://ed-fi.org/HomelessProgramServiceDescriptor	Specialized Instructional Support Services	Specialized Instructional Support Services	Specialized Instructional Support Services	\N	\N	\N	2022-11-17 17:07:47.14024	2022-11-17 17:07:47.140211	479bdbca-e448-452a-b2e9-8244a84b39ab	1037
1038	uri://ed-fi.org/HomelessProgramServiceDescriptor	Emergency Assistance	Emergency Assistance	Emergency Assistance	\N	\N	\N	2022-11-17 17:07:47.145093	2022-11-17 17:07:47.145035	255d4e6e-3640-4459-8b63-b19b52fc8b82	1038
1039	uri://ed-fi.org/IdentificationDocumentUseDescriptor	Personal Information Verification	Personal Information Verification	Personal Information Verification	\N	\N	\N	2022-11-17 17:07:47.176062	2022-11-17 17:07:47.174495	728cf7fb-013e-40b8-8db0-1563822c379e	1039
1042	uri://ed-fi.org/IncidentLocationDescriptor	Athletic field or playground	Athletic field or playground	Athletic field or playground	\N	\N	\N	2022-11-17 17:07:47.215618	2022-11-17 17:07:47.214022	2c160e95-5a8c-44e4-8be8-855d9b39f3f2	1042
1044	uri://ed-fi.org/IncidentLocationDescriptor	Auditorium	Auditorium	Auditorium	\N	\N	\N	2022-11-17 17:07:47.226304	2022-11-17 17:07:47.226251	434a6487-a098-4640-8d28-ff1950b39fc8	1044
1046	uri://ed-fi.org/IncidentLocationDescriptor	Cafeteria area	Cafeteria area	Cafeteria area	\N	\N	\N	2022-11-17 17:07:47.236024	2022-11-17 17:07:47.235975	a3da17d2-2ea3-4766-aca2-8c48514004e0	1046
1049	uri://ed-fi.org/IncidentLocationDescriptor	Hallway or stairs	Hallway or stairs	Hallway or stairs	\N	\N	\N	2022-11-17 17:07:47.247176	2022-11-17 17:07:47.247138	ef29d1c9-36db-4a2f-b3b4-078c68e41e09	1049
1051	uri://ed-fi.org/IncidentLocationDescriptor	Locker room or gym areas	Locker room or gym areas	Locker room or gym areas	\N	\N	\N	2022-11-17 17:07:47.25639	2022-11-17 17:07:47.256356	1230ee68-de83-4bff-8c2d-970efd7a9191	1051
1052	uri://ed-fi.org/IncidentLocationDescriptor	Off campus	Off campus	Off campus	\N	\N	\N	2022-11-17 17:07:47.261949	2022-11-17 17:07:47.261835	f2fe21f6-ea1c-4380-9ef6-479c4a2fbef1	1052
1054	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	Off-campus at another location unrelated to school	\N	\N	\N	2022-11-17 17:07:47.269611	2022-11-17 17:07:47.269406	273bf5a1-be7b-463c-b3cc-ca4940279f0b	1054
1056	uri://ed-fi.org/IncidentLocationDescriptor	Off-campus at other school district facility	Off-campus at other school district facility	Off-campus at other school district facility	\N	\N	\N	2022-11-17 17:07:47.277863	2022-11-17 17:07:47.277826	1605971a-ae57-4b3c-b511-e2bce3f34998	1056
1058	uri://ed-fi.org/IncidentLocationDescriptor	On-campus other inside area	On-campus other inside area	On-campus other inside area	\N	\N	\N	2022-11-17 17:07:47.287214	2022-11-17 17:07:47.2871	fe149dba-bbfb-4fb9-ae7e-a81a1112bc99	1058
1061	uri://ed-fi.org/IncidentLocationDescriptor	Parking lot	Parking lot	Parking lot	\N	\N	\N	2022-11-17 17:07:47.30172	2022-11-17 17:07:47.301685	eb4296df-9678-4e7e-89f4-2f24bfb4194a	1061
1062	uri://ed-fi.org/IncidentLocationDescriptor	Restroom	Restroom	Restroom	\N	\N	\N	2022-11-17 17:07:47.307183	2022-11-17 17:07:47.306925	3544777a-91e4-4b38-b65e-df7916010b1c	1062
1064	uri://ed-fi.org/IncidentLocationDescriptor	Stadium	Stadium	Stadium	\N	\N	\N	2022-11-17 17:07:47.319228	2022-11-17 17:07:47.319194	62af858c-fb7b-42c7-979c-e9cbe238b5f1	1064
1066	uri://ed-fi.org/IncidentLocationDescriptor	Walking to or from school	Walking to or from school	Walking to or from school	\N	\N	\N	2022-11-17 17:07:47.328366	2022-11-17 17:07:47.328333	8f97d226-0bc4-40ac-a14b-ee8f69f6202f	1066
1068	uri://gbisd.edu/IndicatorGroupDescriptor	Staff Indicator	Staff Indicator	Indicators related to organization staffing.	\N	\N	\N	2022-11-17 17:07:47.371158	2022-11-17 17:07:47.369755	7c33fd63-810c-4b99-80d8-40a7f4495699	1068
1069	uri://gbisd.edu/IndicatorLevelDescriptor	High Retention	High Retention	Staff retention from previous school year is between 90-100 percent of staff retained.	\N	\N	\N	2022-11-17 17:07:47.401041	2022-11-17 17:07:47.399666	76037f26-0008-40e1-9b27-a1d335f5f818	1069
1071	uri://gbisd.edu/IndicatorLevelDescriptor	Low Retention	Low Retention	Staff retention from previous school year is under 80 percent of staff retained.	\N	\N	\N	2022-11-17 17:07:47.41219	2022-11-17 17:07:47.412156	eeafa0fb-d147-471d-b774-31d0b61174f8	1071
1072	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	2022-11-17 17:07:47.442125	2022-11-17 17:07:47.440572	3d211736-5cf0-46b0-93de-dae589b3943c	1072
1075	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Food Service	Food Service	Food Service	\N	\N	\N	2022-11-17 17:07:47.456627	2022-11-17 17:07:47.456596	27512f21-f4df-4a1c-a933-89ab3b8d3cb7	1075
1077	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Main	Main	Main	\N	\N	\N	2022-11-17 17:07:47.464919	2022-11-17 17:07:47.46489	0475fb99-8002-4a13-ac65-c5f24554da5d	1077
1078	uri://ed-fi.org/InstitutionTelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:47.471376	2022-11-17 17:07:47.471337	19a6540d-2838-4adc-a000-45a3b111f648	1078
1080	uri://ed-fi.org/InteractivityStyleDescriptor	Active	Active	Active	\N	\N	\N	2022-11-17 17:07:47.502387	2022-11-17 17:07:47.500804	e7e826ca-ece5-41d2-a30f-ea6b74f06781	1080
1082	uri://ed-fi.org/InteractivityStyleDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:47.516609	2022-11-17 17:07:47.516573	d9971c46-6206-4d9e-b100-40b7b4691f4a	1082
1083	uri://ed-fi.org/InternetAccessDescriptor	Cable	Cable	Cable	\N	\N	\N	2022-11-17 17:07:47.550723	2022-11-17 17:07:47.549172	35d78e6b-ce48-4926-adad-1a1030bc5ae6	1083
1085	uri://ed-fi.org/InternetAccessDescriptor	DSL	DSL	DSL	\N	\N	\N	2022-11-17 17:07:47.561049	2022-11-17 17:07:47.560997	a91591c7-bb70-4b54-9a00-29ef4a390fd0	1085
1087	uri://ed-fi.org/InternetAccessDescriptor	Microwave	Microwave	Microwave	\N	\N	\N	2022-11-17 17:07:47.56951	2022-11-17 17:07:47.569459	cce5c948-d9df-48a0-8286-bc6c22185d09	1087
1089	uri://ed-fi.org/InternetAccessDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:47.578258	2022-11-17 17:07:47.578218	d9bc9628-2848-4f5d-8624-78297491db7a	1089
1091	uri://ed-fi.org/InternetAccessDescriptor	Satellite	Satellite	Satellite	\N	\N	\N	2022-11-17 17:07:47.588586	2022-11-17 17:07:47.58855	f10bfee6-5108-41b9-86cb-2c3a482c1e2b	1091
1093	uri://ed-fi.org/InternetAccessDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-11-17 17:07:47.598217	2022-11-17 17:07:47.598177	239bad57-2726-4de5-9ae0-6bf72b4759aa	1093
1095	uri://ed-fi.org/InternetAccessDescriptor	Less Than High Speed	DEPRECATED: Less Than High Speed	DEPRECATED: Less Than High Speed	\N	\N	\N	2022-11-17 17:07:47.606404	2022-11-17 17:07:47.606366	ecb5953a-a126-4a17-b7a8-6bdb0f81dc56	1095
1097	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Cellular Network	Cellular Network	The type of internet service used in the student’s primary place of residence is a cellular network that creates a hot spot using a cell phone for additional device access or access to the internet is only available through a cellular device.	\N	\N	\N	2022-11-17 17:07:47.637523	2022-11-17 17:07:47.63588	522bf802-61fd-41c7-9dee-ab970f579f52	1097
1098	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Hot Spot	Hot Spot	The type of internet service used in the student’s primary place of residence is a standalone hot spot device that is not a cell phone that allows for additional device access.	\N	\N	\N	2022-11-17 17:07:47.649187	2022-11-17 17:07:47.64914	0f93fab6-6f19-4f60-b2d6-73758a99fb3a	1098
1101	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Dial-up	Dial-up	The type of internet service used in the student’s primary place of residence is dial-up.	\N	\N	\N	2022-11-17 17:07:47.660958	2022-11-17 17:07:47.660924	5a0b99d2-58fc-4b36-8933-a398bc73e6a4	1101
1103	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	None	None	There is no internet service in the student’s primary place of residence.	\N	\N	\N	2022-11-17 17:07:47.670112	2022-11-17 17:07:47.670075	cd0cf475-064c-4982-81ca-a10912deabc8	1103
1106	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Yes	Yes	The student experiences very few or no interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	2022-11-17 17:07:47.704585	2022-11-17 17:07:47.703252	9ce440cd-ae55-4012-8993-5c44b364e963	1106
1108	uri://ed-fi.org/InterventionClassDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:47.744438	2022-11-17 17:07:47.742895	687caa13-2da3-4003-aa2d-9c09979af449	1108
1111	uri://ed-fi.org/InterventionClassDescriptor	Supplement	Supplement	Supplement	\N	\N	\N	2022-11-17 17:07:47.758832	2022-11-17 17:07:47.758798	9dafd13d-26bf-4085-9dd1-d2c77108b72f	1111
1113	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Mixed Effects	Mixed Effects	Mixed Effects	\N	\N	\N	2022-11-17 17:07:47.790483	2022-11-17 17:07:47.788934	729a5943-f852-4536-9e28-53fb57269706	1113
1114	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	No Discernible Effects	No Discernible Effects	No Discernible Effects	\N	\N	\N	2022-11-17 17:07:47.80217	2022-11-17 17:07:47.80187	715e0540-75ac-45fa-ad28-ec71501b8d99	1114
1117	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Negative Effects	Potentially Negative Effects	Potentially Negative Effects	\N	\N	\N	2022-11-17 17:07:47.81477	2022-11-17 17:07:47.814733	a7e09cb5-e732-47d1-a76b-94c16e7e0be7	1117
1120	uri://ed-fi.org/LanguageDescriptor	ady	Adyghe	Adyghe	\N	\N	\N	2022-11-17 17:07:47.85702	2022-11-17 17:07:47.854256	0085e2f9-9a0f-437e-afaf-3bc585c03951	1120
1122	uri://ed-fi.org/LanguageDescriptor	ast	Asturian	Asturian	\N	\N	\N	2022-11-17 17:07:47.870414	2022-11-17 17:07:47.870377	304e6046-6058-486a-b85f-169b9dbea01d	1122
1124	uri://ed-fi.org/LanguageDescriptor	byn	Blin	Blin	\N	\N	\N	2022-11-17 17:07:47.878598	2022-11-17 17:07:47.87856	764fc887-2eca-43f4-8d19-514bd30ab3b1	1124
1126	uri://ed-fi.org/LanguageDescriptor	spa	Spanish	Spanish	\N	\N	\N	2022-11-17 17:07:47.887982	2022-11-17 17:07:47.887945	cb501f0a-5143-4870-9e25-75bce00d1022	1126
1128	uri://ed-fi.org/LanguageDescriptor	zha	Zhuang	Zhuang	\N	\N	\N	2022-11-17 17:07:47.896592	2022-11-17 17:07:47.896556	dc8bc6f7-84be-453f-9bc9-5ac81aa4517a	1128
1130	uri://ed-fi.org/LanguageDescriptor	crh	Crimean Tatar	Crimean Tatar	\N	\N	\N	2022-11-17 17:07:47.904531	2022-11-17 17:07:47.904495	bb6f2fe6-d3f4-4543-a317-c649c764d12e	1130
1132	uri://ed-fi.org/LanguageDescriptor	div	Divehi	Divehi	\N	\N	\N	2022-11-17 17:07:47.912737	2022-11-17 17:07:47.912701	7a95c133-8d75-41fc-873a-9fb20b7c0cbb	1132
1135	uri://ed-fi.org/LanguageDescriptor	dut	Dutch	Dutch	\N	\N	\N	2022-11-17 17:07:47.926616	2022-11-17 17:07:47.92658	cccc9da8-a386-4179-80c5-7524db54b577	1135
1137	uri://ed-fi.org/LanguageDescriptor	kal	Kalaallisut	Kalaallisut	\N	\N	\N	2022-11-17 17:07:47.937563	2022-11-17 17:07:47.937527	67a89746-f1f5-4aff-b626-8f94348f9114	1137
1139	uri://ed-fi.org/LanguageDescriptor	arc	Official Aramaic (700-300 BCE)	Official Aramaic (700-300 BCE)	\N	\N	\N	2022-11-17 17:07:47.949309	2022-11-17 17:07:47.949275	698824e0-f032-46bd-a8e2-7723fa9eace7	1139
1140	uri://ed-fi.org/LanguageDescriptor	kac	Kachin	Kachin	\N	\N	\N	2022-11-17 17:07:47.95529	2022-11-17 17:07:47.955181	89f56428-2c75-4cf6-943f-050694dc2d8b	1140
1142	uri://ed-fi.org/LanguageDescriptor	kua	Kuanyama	Kuanyama	\N	\N	\N	2022-11-17 17:07:47.963854	2022-11-17 17:07:47.963803	857f5f40-7c6f-43d9-9889-385f9a4023da	1142
1145	uri://ed-fi.org/LanguageDescriptor	lim	Limburgan	Limburgan	\N	\N	\N	2022-11-17 17:07:47.975542	2022-11-17 17:07:47.975506	aba1c566-edc5-4391-bd46-7fcdbcba80ff	1145
1146	uri://ed-fi.org/LanguageDescriptor	nds	Low German	Low German	\N	\N	\N	2022-11-17 17:07:47.982121	2022-11-17 17:07:47.981366	57022ae1-325a-43ae-a085-e2fb68b8a7da	1146
1148	uri://ed-fi.org/LanguageDescriptor	mic	Mi'kmaq	Mi'kmaq	\N	\N	\N	2022-11-17 17:07:47.99036	2022-11-17 17:07:47.99026	83b77ce2-efd3-431d-9297-8077bc3ce30d	1148
1151	uri://ed-fi.org/LanguageDescriptor	new	Nepal Bhasa	Nepal Bhasa	\N	\N	\N	2022-11-17 17:07:48.003804	2022-11-17 17:07:48.003768	07b74b84-2454-4a8c-b7aa-212652031ff7	1151
1152	uri://ed-fi.org/LanguageDescriptor	nde	Ndebele, North	Ndebele, North	\N	\N	\N	2022-11-17 17:07:48.011817	2022-11-17 17:07:48.01176	3cbe57fa-2459-4e5c-930a-226ab3e29fb4	1152
1155	uri://ed-fi.org/LanguageDescriptor	nno	Norwegian Nynorsk	Norwegian Nynorsk	\N	\N	\N	2022-11-17 17:07:48.023403	2022-11-17 17:07:48.023365	c8611e02-76da-411f-96b5-a3bc2da9c390	1155
1157	uri://ed-fi.org/LanguageDescriptor	pro	Provençal, Old (to 1500)	Provençal, Old (to 1500)	\N	\N	\N	2022-11-17 17:07:48.032907	2022-11-17 17:07:48.032869	b2f26f54-23e2-4571-bdcb-59da515d73c2	1157
1159	uri://ed-fi.org/LanguageDescriptor	nwc	Classical Newari	Classical Newari	\N	\N	\N	2022-11-17 17:07:48.041554	2022-11-17 17:07:48.041518	a7e45646-e325-43a2-b627-841851528ed7	1159
1161	uri://ed-fi.org/LanguageDescriptor	oss	Ossetian	Ossetian	\N	\N	\N	2022-11-17 17:07:48.051634	2022-11-17 17:07:48.051597	6f9976cd-75ac-4f69-b89f-837bfb156d68	1161
1163	uri://ed-fi.org/LanguageDescriptor	fil	Filipino	Filipino	\N	\N	\N	2022-11-17 17:07:48.063964	2022-11-17 17:07:48.063927	4b902f6c-3378-4912-ad63-acfb16b56853	1163
1165	uri://ed-fi.org/LanguageDescriptor	kho	Khotanese	Khotanese	\N	\N	\N	2022-11-17 17:07:48.072808	2022-11-17 17:07:48.072772	d02b460b-a1b3-4b2d-b036-31779bab2a2a	1165
1166	uri://ed-fi.org/LanguageDescriptor	gla	Gaelic	Gaelic	\N	\N	\N	2022-11-17 17:07:48.077916	2022-11-17 17:07:48.07783	24ee857a-cea2-483b-9d4c-6b7128e7434f	1166
1168	uri://ed-fi.org/LanguageDescriptor	sin	Sinhala	Sinhala	\N	\N	\N	2022-11-17 17:07:48.085751	2022-11-17 17:07:48.085705	14d0bc70-943a-463e-b4f0-1d2f2eb02595	1168
1170	uri://ed-fi.org/LanguageDescriptor	tlh	Klingon	Klingon	\N	\N	\N	2022-11-17 17:07:48.103158	2022-11-17 17:07:48.103109	1d87d556-3de4-43a0-bf81-af2cfbbf75c3	1170
1171	uri://ed-fi.org/LanguageDescriptor	uig	Uighur	Uighur	\N	\N	\N	2022-11-17 17:07:48.11436	2022-11-17 17:07:48.1142	d1efeb0a-e247-4cb1-a7f2-45c05379b29e	1171
1173	uri://ed-fi.org/LanguageDescriptor	him	Himachali languages	Himachali languages	\N	\N	\N	2022-11-17 17:07:48.122288	2022-11-17 17:07:48.12226	8e187aa5-141d-4081-b81f-1c5de34fcebb	1173
1175	uri://ed-fi.org/LanguageDescriptor	aar	Afar	Afar	\N	\N	\N	2022-11-17 17:07:48.130605	2022-11-17 17:07:48.130566	c3188fed-db3c-4cd3-8d88-3d132be3bc15	1175
1177	uri://ed-fi.org/LanguageDescriptor	ada	Adangme	Adangme	\N	\N	\N	2022-11-17 17:07:48.139561	2022-11-17 17:07:48.139461	12544b61-90a8-48c4-aaf2-7a259710c38f	1177
1179	uri://ed-fi.org/LanguageDescriptor	afr	Afrikaans	Afrikaans	\N	\N	\N	2022-11-17 17:07:48.149743	2022-11-17 17:07:48.149709	a0286b00-e437-49cc-8fa8-e93329cbb990	1179
1094	uri://ed-fi.org/InternetAccessDescriptor	High Speed	DEPRECATED: High Speed	DEPRECATED: High Speed	\N	\N	\N	2022-11-17 17:07:47.601665	2022-11-17 17:07:47.601627	402b526c-055c-4726-a89d-ef66fa465fc3	1094
1096	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Residential Broadband	Residential Broadband	The type of internet service used in the student’s primary place of residence is residential broadband.	\N	\N	\N	2022-11-17 17:07:47.637524	2022-11-17 17:07:47.635877	cee5f0e3-1957-41a2-9ad9-f1ba4deb6742	1096
1099	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Community Provided Wi-Fi	Community Provided Wi-Fi	The type of internet service used in the student’s primary place of residence is community provided Wi-Fi.	\N	\N	\N	2022-11-17 17:07:47.650478	2022-11-17 17:07:47.650432	80d4fcca-6605-4961-918f-45627d4a2810	1099
1100	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Satellite	Satellite	The type of internet service used in the student’s primary place of residence is satellite.	\N	\N	\N	2022-11-17 17:07:47.658015	2022-11-17 17:07:47.657757	b9c2e009-cc56-4592-82cd-0833c5d3ea47	1100
1102	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Other	Other	The type of internet service used in the student’s primary place of residence is not yet defined.	\N	\N	\N	2022-11-17 17:07:47.666353	2022-11-17 17:07:47.666314	82ab4035-6f39-45a6-9a95-dae8c33f3454	1102
1104	uri://ed-fi.org/InternetAccessTypeInResidenceDescriptor	Unknown	Unknown	It is not known whether there is internet service in the student’s primary place of residence.	\N	\N	\N	2022-11-17 17:07:47.673747	2022-11-17 17:07:47.673714	5a45e723-c778-4069-bc2a-5a59d0688b4d	1104
1105	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	Sometimes	Sometimes	The student regularly experiences interruptions in learning activities caused by poor internet performance in their primary place of residence.	\N	\N	\N	2022-11-17 17:07:47.704572	2022-11-17 17:07:47.703256	ebd149d2-55fb-4437-9dca-92120aa93392	1105
1107	uri://ed-fi.org/InternetPerformanceInResidenceDescriptor	No	No	The student is unable to complete learning activities due to poor internet performance in their primary place of residence.	\N	\N	\N	2022-11-17 17:07:47.714518	2022-11-17 17:07:47.714289	b40b24a8-1f8f-4136-a067-5f2c0a92309a	1107
1109	uri://ed-fi.org/InterventionClassDescriptor	Curriculum	Curriculum	Curriculum	\N	\N	\N	2022-11-17 17:07:47.744437	2022-11-17 17:07:47.742898	624224c3-0d22-4e3c-88c3-a7459d15786a	1109
1110	uri://ed-fi.org/InterventionClassDescriptor	Practice	Practice	Practice	\N	\N	\N	2022-11-17 17:07:47.756186	2022-11-17 17:07:47.756119	a25a2de2-f47c-42cf-9f62-52596737fa06	1110
1112	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Negative Effects	Negative Effects	Negative Effects	\N	\N	\N	2022-11-17 17:07:47.790485	2022-11-17 17:07:47.78893	19649793-8abf-4145-af6a-6e81202e8c65	1112
1115	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:47.805572	2022-11-17 17:07:47.805537	10f757ed-cc39-4d10-852d-5b5dd7be9912	1115
1116	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Positive Effects	Positive Effects	Positive Effects	\N	\N	\N	2022-11-17 17:07:47.810524	2022-11-17 17:07:47.810467	33201be1-3c52-44ff-a6c9-fbb75daadc75	1116
1118	uri://ed-fi.org/InterventionEffectivenessRatingDescriptor	Potentially Positive Effects	Potentially Positive Effects	Potentially Positive Effects	\N	\N	\N	2022-11-17 17:07:47.819182	2022-11-17 17:07:47.819143	c84b9f76-6dfe-4c93-86e1-e122393be62d	1118
1119	uri://ed-fi.org/LanguageDescriptor	gsw	Swiss German	Swiss German	\N	\N	\N	2022-11-17 17:07:47.855852	2022-11-17 17:07:47.854254	80fddad0-7ae8-48e5-a0cd-153b31837847	1119
1121	uri://ed-fi.org/LanguageDescriptor	rup	Aromanian	Aromanian	\N	\N	\N	2022-11-17 17:07:47.86681	2022-11-17 17:07:47.86602	e63ced3d-fff5-4bdb-ad00-14261db1265e	1121
1123	uri://ed-fi.org/LanguageDescriptor	bej	Beja	Beja	\N	\N	\N	2022-11-17 17:07:47.875129	2022-11-17 17:07:47.875067	5c2a30cb-1cc3-42fe-9875-aac1193db2d5	1123
1125	uri://ed-fi.org/LanguageDescriptor	zbl	Blissymbols	Blissymbols	\N	\N	\N	2022-11-17 17:07:47.883277	2022-11-17 17:07:47.883241	36ece418-c6df-4064-97e7-5b0a5564ea20	1125
1127	uri://ed-fi.org/LanguageDescriptor	nya	Chichewa	Chichewa	\N	\N	\N	2022-11-17 17:07:47.892197	2022-11-17 17:07:47.892161	e5403fc6-4f9b-424f-8e2d-90376c0c190a	1127
1129	uri://ed-fi.org/LanguageDescriptor	rar	Rarotongan	Rarotongan	\N	\N	\N	2022-11-17 17:07:47.900821	2022-11-17 17:07:47.900781	425982ef-4ffa-4d58-ada9-49a4b4cddc6c	1129
1131	uri://ed-fi.org/LanguageDescriptor	chp	Chipewyan	Chipewyan	\N	\N	\N	2022-11-17 17:07:47.909061	2022-11-17 17:07:47.909021	6b4f94a4-cc04-439d-8b1a-fc5b359f8cac	1131
1133	uri://ed-fi.org/LanguageDescriptor	zza	Zaza	Zaza	\N	\N	\N	2022-11-17 17:07:47.917597	2022-11-17 17:07:47.917561	dc804f9f-b2d1-4bd0-a6a4-d397f879fb74	1133
1134	uri://ed-fi.org/LanguageDescriptor	bin	Bini	Bini	\N	\N	\N	2022-11-17 17:07:47.923387	2022-11-17 17:07:47.923347	5d779f28-35f7-4c50-ae77-09fb5ff0d453	1134
1136	uri://ed-fi.org/LanguageDescriptor	kik	Kikuyu	Kikuyu	\N	\N	\N	2022-11-17 17:07:47.932827	2022-11-17 17:07:47.932791	51ee7c37-3a14-41e7-b6a0-5e876bc621bc	1136
1138	uri://ed-fi.org/LanguageDescriptor	hat	Haitian	Haitian	\N	\N	\N	2022-11-17 17:07:47.941779	2022-11-17 17:07:47.941743	935d4724-36a9-449d-86b6-23ef943472eb	1138
1141	uri://ed-fi.org/LanguageDescriptor	pam	Pampanga	Pampanga	\N	\N	\N	2022-11-17 17:07:47.958225	2022-11-17 17:07:47.95819	c8d32b82-620f-4f95-87ff-237be4fa11af	1141
1143	uri://ed-fi.org/LanguageDescriptor	kir	Kirghiz	Kirghiz	\N	\N	\N	2022-11-17 17:07:47.966941	2022-11-17 17:07:47.966903	a22702c4-1dd6-4002-b327-a465d0ea1b54	1143
1144	uri://ed-fi.org/LanguageDescriptor	ltz	Luxembourgish	Luxembourgish	\N	\N	\N	2022-11-17 17:07:47.972625	2022-11-17 17:07:47.972571	cb3d01f6-443a-4f8d-8419-795d95de5083	1144
1147	uri://ed-fi.org/LanguageDescriptor	arn	Mapudungun	Mapudungun	\N	\N	\N	2022-11-17 17:07:47.98557	2022-11-17 17:07:47.985534	61479a7d-f193-432c-985c-d57c8a3fd4c7	1147
1149	uri://ed-fi.org/LanguageDescriptor	hmn	Hmong	Hmong	\N	\N	\N	2022-11-17 17:07:47.993884	2022-11-17 17:07:47.993848	66535196-2c21-4a06-b6eb-7f7f812aa32f	1149
1150	uri://ed-fi.org/LanguageDescriptor	nav	Navajo	Navajo	\N	\N	\N	2022-11-17 17:07:48.000338	2022-11-17 17:07:48.000277	db20ede3-6960-4b6d-9047-4d30377cdb09	1150
1153	uri://ed-fi.org/LanguageDescriptor	nob	Bokmål, Norwegian	Bokmål, Norwegian	\N	\N	\N	2022-11-17 17:07:48.015039	2022-11-17 17:07:48.015002	3b2af6d0-774c-4e0a-a6be-5c287e84cfd4	1153
1154	uri://ed-fi.org/LanguageDescriptor	iii	Sichuan Yi	Sichuan Yi	\N	\N	\N	2022-11-17 17:07:48.019989	2022-11-17 17:07:48.019882	823de58e-4b1e-4abd-b8f5-2d4e68c7e4f0	1154
1156	uri://ed-fi.org/LanguageDescriptor	ile	Interlingue	Interlingue	\N	\N	\N	2022-11-17 17:07:48.028367	2022-11-17 17:07:48.028254	ecd6a7ee-fc62-4f7d-a8cf-9b9666443d9a	1156
1158	uri://ed-fi.org/LanguageDescriptor	xal	Kalmyk	Kalmyk	\N	\N	\N	2022-11-17 17:07:48.038007	2022-11-17 17:07:48.037899	58e2828e-94ec-4006-a3ac-133d1592a38b	1158
1160	uri://ed-fi.org/LanguageDescriptor	chu	Church Slavic	Church Slavic	\N	\N	\N	2022-11-17 17:07:48.047204	2022-11-17 17:07:48.047168	3a3ecdad-3204-4191-a472-37c704f9b64e	1160
1162	uri://ed-fi.org/LanguageDescriptor	pus	Pushto	Pushto	\N	\N	\N	2022-11-17 17:07:48.060512	2022-11-17 17:07:48.060471	04d0a3a0-03f6-46e7-958d-8f0d5ef6462e	1162
1164	uri://ed-fi.org/LanguageDescriptor	pan	Panjabi	Panjabi	\N	\N	\N	2022-11-17 17:07:48.069061	2022-11-17 17:07:48.068953	f718d17d-fa84-4450-b07a-285d31d38d39	1164
1167	uri://ed-fi.org/LanguageDescriptor	nso	Pedi	Pedi	\N	\N	\N	2022-11-17 17:07:48.081171	2022-11-17 17:07:48.081134	bcdfc33f-0022-4586-833a-15ff45640ebf	1167
1169	uri://ed-fi.org/LanguageDescriptor	nbl	Ndebele, South	Ndebele, South	\N	\N	\N	2022-11-17 17:07:48.102817	2022-11-17 17:07:48.102765	5e85ac51-525c-43d3-9370-5c76956c2e5f	1169
1172	uri://ed-fi.org/LanguageDescriptor	cat	Catalan	Catalan	\N	\N	\N	2022-11-17 17:07:48.117379	2022-11-17 17:07:48.117345	7f22915d-35c2-4a3d-952f-0a94512d2857	1172
1174	uri://ed-fi.org/LanguageDescriptor	wal	Wolaitta	Wolaitta	\N	\N	\N	2022-11-17 17:07:48.126328	2022-11-17 17:07:48.126268	d0464354-9f61-4a44-b0e7-04ec27f9480e	1174
1176	uri://ed-fi.org/LanguageDescriptor	ace	Achinese	Achinese	\N	\N	\N	2022-11-17 17:07:48.134706	2022-11-17 17:07:48.134671	c96675e8-f81a-45a5-9b91-f8450e0cd18f	1176
1178	uri://ed-fi.org/LanguageDescriptor	afa	Afro-Asiatic languages	Afro-Asiatic languages	\N	\N	\N	2022-11-17 17:07:48.143471	2022-11-17 17:07:48.143438	fd58cd1b-716b-48ae-a1f7-74f1a8997020	1178
1180	uri://ed-fi.org/LanguageDescriptor	aka	Akan	Akan	\N	\N	\N	2022-11-17 17:07:48.154333	2022-11-17 17:07:48.154296	cea254e5-6685-4b23-b157-9da4eec89ad7	1180
1182	uri://ed-fi.org/LanguageDescriptor	alg	Algonquian languages	Algonquian languages	\N	\N	\N	2022-11-17 17:07:48.16247	2022-11-17 17:07:48.162448	c0c43a16-cfa4-4b3e-b697-84661bae5b97	1182
1184	uri://ed-fi.org/LanguageDescriptor	anp	Angika	Angika	\N	\N	\N	2022-11-17 17:07:48.172938	2022-11-17 17:07:48.172841	e266b79b-5d39-43c2-8147-320e660e9551	1184
1187	uri://ed-fi.org/LanguageDescriptor	art	Artificial languages	Artificial languages	\N	\N	\N	2022-11-17 17:07:48.184463	2022-11-17 17:07:48.18443	02b7fc74-2c32-4f99-9bb9-8079059856ed	1187
1181	uri://ed-fi.org/LanguageDescriptor	alb	Albanian	Albanian	\N	\N	\N	2022-11-17 17:07:48.15786	2022-11-17 17:07:48.157826	57a4e907-64fb-4aca-8d53-9f0f34680a6a	1181
1183	uri://ed-fi.org/LanguageDescriptor	amh	Amharic	Amharic	\N	\N	\N	2022-11-17 17:07:48.165946	2022-11-17 17:07:48.165913	6a783949-3485-4c18-8190-cff1bbd9d112	1183
1185	uri://ed-fi.org/LanguageDescriptor	ara	Arabic	Arabic	\N	\N	\N	2022-11-17 17:07:48.176154	2022-11-17 17:07:48.176119	367a6b4b-71a6-4aaf-ad76-46046975103d	1185
1186	uri://ed-fi.org/LanguageDescriptor	arg	Aragonese	Aragonese	\N	\N	\N	2022-11-17 17:07:48.18118	2022-11-17 17:07:48.181124	d272249b-6ae5-43c5-9c71-47a1db2f6b8a	1186
1188	uri://ed-fi.org/LanguageDescriptor	asm	Assamese	Assamese	\N	\N	\N	2022-11-17 17:07:48.189832	2022-11-17 17:07:48.189798	fd0825f9-bc17-47e2-ac3a-e7b4df1675f4	1188
1190	uri://ed-fi.org/LanguageDescriptor	ava	Avaric	Avaric	\N	\N	\N	2022-11-17 17:07:48.202447	2022-11-17 17:07:48.20238	88b00aa0-8345-41d9-8118-3e7dd2bca0e2	1190
1193	uri://ed-fi.org/LanguageDescriptor	bai	Bamileke languages	Bamileke languages	\N	\N	\N	2022-11-17 17:07:48.213646	2022-11-17 17:07:48.213612	3621ea2f-ec00-428e-b1f6-609f746a6f64	1193
1194	uri://ed-fi.org/LanguageDescriptor	bal	Baluchi	Baluchi	\N	\N	\N	2022-11-17 17:07:48.219275	2022-11-17 17:07:48.219225	0164fdca-4eea-40fa-b1dc-bacd90c00e97	1194
1196	uri://ed-fi.org/LanguageDescriptor	bas	Basa	Basa	\N	\N	\N	2022-11-17 17:07:48.22812	2022-11-17 17:07:48.227355	ba9f9b94-f439-4235-857a-49b7bfa470df	1196
1198	uri://ed-fi.org/LanguageDescriptor	ber	Berber languages	Berber languages	\N	\N	\N	2022-11-17 17:07:48.237656	2022-11-17 17:07:48.237623	1e7f0fa5-7832-4ff7-8fe3-aeff3500de34	1198
1200	uri://ed-fi.org/LanguageDescriptor	bla	Siksika	Siksika	\N	\N	\N	2022-11-17 17:07:48.246287	2022-11-17 17:07:48.246254	c6c9b7b5-70cf-4b31-a1fe-1999c3bb63c9	1200
1201	uri://ed-fi.org/LanguageDescriptor	bos	Bosnian	Bosnian	\N	\N	\N	2022-11-17 17:07:48.251189	2022-11-17 17:07:48.251086	25f539ff-42a8-45e2-ba0b-119382e57c9d	1201
1203	uri://ed-fi.org/LanguageDescriptor	bua	Buriat	Buriat	\N	\N	\N	2022-11-17 17:07:48.259317	2022-11-17 17:07:48.259218	f17745d1-dba0-4228-a70f-62d29234bb4a	1203
1205	uri://ed-fi.org/LanguageDescriptor	cai	Central American Indian languages	Central American Indian languages	\N	\N	\N	2022-11-17 17:07:48.268231	2022-11-17 17:07:48.268195	93e8b87a-f4ee-422d-966c-4c27f07330d2	1205
1207	uri://ed-fi.org/LanguageDescriptor	cha	Chamorro	Chamorro	\N	\N	\N	2022-11-17 17:07:48.27621	2022-11-17 17:07:48.276178	e5cab316-6d4f-43fa-a4ce-16dbb3d14263	1207
1208	uri://ed-fi.org/LanguageDescriptor	che	Chechen	Chechen	\N	\N	\N	2022-11-17 17:07:48.281497	2022-11-17 17:07:48.281448	3ed806ee-ea0c-4378-b842-e3a849f3b7cb	1208
1210	uri://ed-fi.org/LanguageDescriptor	chm	Mari	Mari	\N	\N	\N	2022-11-17 17:07:48.294227	2022-11-17 17:07:48.29413	a1411687-3b86-4673-84dd-5fc81216dfd9	1210
1212	uri://ed-fi.org/LanguageDescriptor	chr	Cherokee	Cherokee	\N	\N	\N	2022-11-17 17:07:48.303931	2022-11-17 17:07:48.303883	d145cc9f-e4e7-41a7-bd6c-a4df0a886921	1212
1214	uri://ed-fi.org/LanguageDescriptor	cmc	Chamic languages	Chamic languages	\N	\N	\N	2022-11-17 17:07:48.317926	2022-11-17 17:07:48.317891	aaeea8cc-4faa-4f84-90db-a1374b987bb7	1214
1215	uri://ed-fi.org/LanguageDescriptor	cor	Cornish	Cornish	\N	\N	\N	2022-11-17 17:07:48.324285	2022-11-17 17:07:48.323537	4769d2f4-29ff-490f-baa7-4d600638bd61	1215
1218	uri://ed-fi.org/LanguageDescriptor	csb	Kashubian	Kashubian	\N	\N	\N	2022-11-17 17:07:48.335685	2022-11-17 17:07:48.335651	b1ec9920-b260-43f0-a0a3-70cf446d4174	1218
1220	uri://ed-fi.org/LanguageDescriptor	dan	Danish	Danish	\N	\N	\N	2022-11-17 17:07:48.345295	2022-11-17 17:07:48.345198	5c4b7228-e042-450b-8009-057c8f8eb43e	1220
1222	uri://ed-fi.org/LanguageDescriptor	den	Slave (Athapascan)	Slave (Athapascan)	\N	\N	\N	2022-11-17 17:07:48.35501	2022-11-17 17:07:48.354978	83685baa-6973-433f-945d-7594583605cd	1222
1224	uri://ed-fi.org/LanguageDescriptor	doi	Dogri	Dogri	\N	\N	\N	2022-11-17 17:07:48.363641	2022-11-17 17:07:48.363608	b9a379cd-fe3b-4355-96f1-696d26235ecd	1224
1226	uri://ed-fi.org/LanguageDescriptor	dum	Dutch, Middle (ca.1050-1350)	Dutch, Middle (ca.1050-1350)	\N	\N	\N	2022-11-17 17:07:48.372116	2022-11-17 17:07:48.372086	2d45776d-c1bf-4812-b8e9-39dcbfe26311	1226
1227	uri://ed-fi.org/LanguageDescriptor	dyu	Dyula	Dyula	\N	\N	\N	2022-11-17 17:07:48.378187	2022-11-17 17:07:48.378088	f37cdc67-08eb-48c3-9cb6-ec91ba16f68d	1227
1229	uri://ed-fi.org/LanguageDescriptor	eka	Ekajuk	Ekajuk	\N	\N	\N	2022-11-17 17:07:48.386719	2022-11-17 17:07:48.386686	720f1869-fdf7-4ff6-a20c-c460355334d1	1229
1232	uri://ed-fi.org/LanguageDescriptor	ewe	Ewe	Ewe	\N	\N	\N	2022-11-17 17:07:48.401002	2022-11-17 17:07:48.400969	e7f833a1-c9cd-403f-b12f-d32f69d398e2	1232
1234	uri://ed-fi.org/LanguageDescriptor	fat	Fanti	Fanti	\N	\N	\N	2022-11-17 17:07:48.408879	2022-11-17 17:07:48.408845	acb92e82-b956-4e49-ad3c-25ff09617845	1234
1235	uri://ed-fi.org/LanguageDescriptor	fiu	Finno-Ugrian languages	Finno-Ugrian languages	\N	\N	\N	2022-11-17 17:07:48.414312	2022-11-17 17:07:48.414068	2baa174e-fa8f-488c-badb-7cda89991e2d	1235
1238	uri://ed-fi.org/LanguageDescriptor	frs	Eastern Frisian	Eastern Frisian	\N	\N	\N	2022-11-17 17:07:48.426665	2022-11-17 17:07:48.426618	77d175ea-823a-486c-8e2d-5f75a35b8e84	1238
1240	uri://ed-fi.org/LanguageDescriptor	gaa	Ga	Ga	\N	\N	\N	2022-11-17 17:07:48.436679	2022-11-17 17:07:48.436631	66501026-79a1-4ab0-b3f6-8fd1dcdd14a6	1240
1242	uri://ed-fi.org/LanguageDescriptor	geo	Georgian	Georgian	\N	\N	\N	2022-11-17 17:07:48.446557	2022-11-17 17:07:48.446497	8f7e92db-363b-442a-9f3c-4c243c8f4fa3	1242
1244	uri://ed-fi.org/LanguageDescriptor	glg	Galician	Galician	\N	\N	\N	2022-11-17 17:07:48.45805	2022-11-17 17:07:48.458	b50233d5-df77-461d-ae12-02bb2782922d	1244
1245	uri://ed-fi.org/LanguageDescriptor	gmh	German, Middle High (ca.1050-1500)	German, Middle High (ca.1050-1500)	\N	\N	\N	2022-11-17 17:07:48.464297	2022-11-17 17:07:48.463268	c9f5c3a6-3cb2-41a3-8254-e3fe0782d700	1245
1247	uri://ed-fi.org/LanguageDescriptor	got	Gothic	Gothic	\N	\N	\N	2022-11-17 17:07:48.472582	2022-11-17 17:07:48.472535	dc58a379-bb3f-4652-b148-41a8be7297ac	1247
1248	uri://ed-fi.org/LanguageDescriptor	grc	Greek, Ancient (to 1453)	Greek, Ancient (to 1453)	\N	\N	\N	2022-11-17 17:07:48.477913	2022-11-17 17:07:48.477866	f7eed555-53fa-44a3-b178-487333e8ab51	1248
1250	uri://ed-fi.org/LanguageDescriptor	guj	Gujarati	Gujarati	\N	\N	\N	2022-11-17 17:07:48.486719	2022-11-17 17:07:48.486672	9c341e1c-9e51-4a20-84c1-f065cc794407	1250
1252	uri://ed-fi.org/LanguageDescriptor	hau	Hausa	Hausa	\N	\N	\N	2022-11-17 17:07:48.496195	2022-11-17 17:07:48.496123	a137345c-45d4-4bbc-b678-389eb33e577c	1252
1254	uri://ed-fi.org/LanguageDescriptor	hil	Hiligaynon	Hiligaynon	\N	\N	\N	2022-11-17 17:07:48.505319	2022-11-17 17:07:48.505271	605f4a7e-fa3c-4c9d-bd0a-31b6cafa66db	1254
1255	uri://ed-fi.org/LanguageDescriptor	hin	Hindi	Hindi	\N	\N	\N	2022-11-17 17:07:48.513332	2022-11-17 17:07:48.512576	6f34eda5-4bac-47f6-99ad-2ba0260b8e7f	1255
1257	uri://ed-fi.org/LanguageDescriptor	hun	Hungarian	Hungarian	\N	\N	\N	2022-11-17 17:07:48.522004	2022-11-17 17:07:48.521904	f2433565-09fd-488c-8cae-b81e9d537f01	1257
1260	uri://ed-fi.org/LanguageDescriptor	iku	Inuktitut	Inuktitut	\N	\N	\N	2022-11-17 17:07:48.533764	2022-11-17 17:07:48.533731	846c6399-4051-4d20-af68-09fa85c095eb	1260
1261	uri://ed-fi.org/LanguageDescriptor	ilo	Iloko	Iloko	\N	\N	\N	2022-11-17 17:07:48.53904	2022-11-17 17:07:48.538941	980a4865-01a5-4f34-aa7f-92af782dd3f5	1261
1263	uri://ed-fi.org/LanguageDescriptor	ine	Indo-European languages	Indo-European languages	\N	\N	\N	2022-11-17 17:07:48.547908	2022-11-17 17:07:48.547858	0e1680e6-ba2e-45e0-95c3-55ec8874a50f	1263
1265	uri://ed-fi.org/LanguageDescriptor	iro	Iroquoian languages	Iroquoian languages	\N	\N	\N	2022-11-17 17:07:48.559152	2022-11-17 17:07:48.558873	be244ce8-f633-449c-abb1-b4c732d89fda	1265
1267	uri://ed-fi.org/LanguageDescriptor	jpn	Japanese	Japanese	\N	\N	\N	2022-11-17 17:07:48.567934	2022-11-17 17:07:48.567883	17a822cb-3530-4aef-a758-61a682d6d692	1267
1269	uri://ed-fi.org/LanguageDescriptor	kab	Kabyle	Kabyle	\N	\N	\N	2022-11-17 17:07:48.576469	2022-11-17 17:07:48.576413	f66bb8ec-1069-4d3e-a1ec-815232ca021d	1269
1271	uri://ed-fi.org/LanguageDescriptor	kas	Kashmiri	Kashmiri	\N	\N	\N	2022-11-17 17:07:48.584782	2022-11-17 17:07:48.584737	50a9b277-8663-44c3-b6ae-e83d69eaa0c9	1271
1274	uri://ed-fi.org/LanguageDescriptor	khi	Khoisan languages	Khoisan languages	\N	\N	\N	2022-11-17 17:07:48.598088	2022-11-17 17:07:48.598055	d2c65ce5-8351-4fe0-a7da-ee15ad96c4f9	1274
1276	uri://ed-fi.org/LanguageDescriptor	kmb	Kimbundu	Kimbundu	\N	\N	\N	2022-11-17 17:07:48.606878	2022-11-17 17:07:48.606844	690b916e-6342-46ea-9862-de64cabba532	1276
1278	uri://ed-fi.org/LanguageDescriptor	kor	Korean	Korean	\N	\N	\N	2022-11-17 17:07:48.615159	2022-11-17 17:07:48.615126	a17f04e1-8cc5-45f9-8713-645c91522e5a	1278
1280	uri://ed-fi.org/LanguageDescriptor	krl	Karelian	Karelian	\N	\N	\N	2022-11-17 17:07:48.623301	2022-11-17 17:07:48.623265	b88acaca-29da-410c-b742-2ec9f3a638c6	1280
1281	uri://ed-fi.org/LanguageDescriptor	kru	Kurukh	Kurukh	\N	\N	\N	2022-11-17 17:07:48.628184	2022-11-17 17:07:48.628134	d059c41d-a244-43ca-b95f-6c4891868217	1281
1283	uri://ed-fi.org/LanguageDescriptor	kut	Kutenai	Kutenai	\N	\N	\N	2022-11-17 17:07:48.635953	2022-11-17 17:07:48.635914	60e14736-1995-4a3d-ad30-aa2a123a74ee	1283
1286	uri://ed-fi.org/LanguageDescriptor	lav	Latvian	Latvian	\N	\N	\N	2022-11-17 17:07:48.650486	2022-11-17 17:07:48.650317	f81e41eb-f3d0-404a-82a8-15c828110633	1286
1189	uri://ed-fi.org/LanguageDescriptor	ath	Athapascan languages	Athapascan languages	\N	\N	\N	2022-11-17 17:07:48.193854	2022-11-17 17:07:48.19382	ad941e5b-6bbc-4633-bc8c-4b425b2571bd	1189
1191	uri://ed-fi.org/LanguageDescriptor	awa	Awadhi	Awadhi	\N	\N	\N	2022-11-17 17:07:48.205031	2022-11-17 17:07:48.204997	5dd4f152-905a-46ba-9a7b-859fcfd1b7d1	1191
1192	uri://ed-fi.org/LanguageDescriptor	aze	Azerbaijani	Azerbaijani	\N	\N	\N	2022-11-17 17:07:48.210602	2022-11-17 17:07:48.210462	788cc1cf-54b4-4737-9fc7-1c57caca4dbc	1192
1195	uri://ed-fi.org/LanguageDescriptor	ban	Balinese	Balinese	\N	\N	\N	2022-11-17 17:07:48.222269	2022-11-17 17:07:48.222234	7e4b0d9b-d56e-405b-ac17-8a3f778cb928	1195
1197	uri://ed-fi.org/LanguageDescriptor	bem	Bemba	Bemba	\N	\N	\N	2022-11-17 17:07:48.231353	2022-11-17 17:07:48.231319	e2a0988d-c4aa-46e0-9656-96721919d719	1197
1199	uri://ed-fi.org/LanguageDescriptor	bih	Bihari languages	Bihari languages	\N	\N	\N	2022-11-17 17:07:48.242608	2022-11-17 17:07:48.242563	982c7bcf-1843-4a55-a2cf-720ab06214f5	1199
1202	uri://ed-fi.org/LanguageDescriptor	bre	Breton	Breton	\N	\N	\N	2022-11-17 17:07:48.254518	2022-11-17 17:07:48.254482	0481fb61-a100-4a70-978c-882fe6f13b8b	1202
1204	uri://ed-fi.org/LanguageDescriptor	bul	Bulgarian	Bulgarian	\N	\N	\N	2022-11-17 17:07:48.263491	2022-11-17 17:07:48.263457	8be0ca77-7479-4a01-874f-6a7a95c66f6b	1204
1206	uri://ed-fi.org/LanguageDescriptor	ceb	Cebuano	Cebuano	\N	\N	\N	2022-11-17 17:07:48.271653	2022-11-17 17:07:48.271619	89f644f2-ad04-4fbc-bea4-8c21f959a3d9	1206
1209	uri://ed-fi.org/LanguageDescriptor	chi	Chinese	Chinese	\N	\N	\N	2022-11-17 17:07:48.284655	2022-11-17 17:07:48.284608	c8e6428f-a026-43b6-880b-abbc121b6c27	1209
1211	uri://ed-fi.org/LanguageDescriptor	cho	Choctaw	Choctaw	\N	\N	\N	2022-11-17 17:07:48.297942	2022-11-17 17:07:48.297773	0e3e6ee3-8ebf-4e9b-9db5-cdf4b5fdfb95	1211
1213	uri://ed-fi.org/LanguageDescriptor	chv	Chuvash	Chuvash	\N	\N	\N	2022-11-17 17:07:48.315235	2022-11-17 17:07:48.315055	31cdb4f3-729d-4460-b4d2-9424d3107aec	1213
1216	uri://ed-fi.org/LanguageDescriptor	cpe	Creoles and pidgins, English based	Creoles and pidgins, English based	\N	\N	\N	2022-11-17 17:07:48.327547	2022-11-17 17:07:48.327514	5a1d9654-6bc8-419b-a034-3898303013c7	1216
1217	uri://ed-fi.org/LanguageDescriptor	cpp	Creoles and pidgins, Portuguese-based	Creoles and pidgins, Portuguese-based	\N	\N	\N	2022-11-17 17:07:48.332377	2022-11-17 17:07:48.33231	68165cbb-7fc9-43ac-9918-53e820364594	1217
1219	uri://ed-fi.org/LanguageDescriptor	cze	Czech	Czech	\N	\N	\N	2022-11-17 17:07:48.340606	2022-11-17 17:07:48.340573	fb6bb635-f48d-4961-8d82-033ef61a15b8	1219
1221	uri://ed-fi.org/LanguageDescriptor	day	Land Dayak languages	Land Dayak languages	\N	\N	\N	2022-11-17 17:07:48.348775	2022-11-17 17:07:48.348742	66421f1f-5890-46f9-bb4c-69f5360e4ff4	1221
1223	uri://ed-fi.org/LanguageDescriptor	din	Dinka	Dinka	\N	\N	\N	2022-11-17 17:07:48.359947	2022-11-17 17:07:48.359908	5e14528c-12ae-4d5c-90b6-c149001a320b	1223
1225	uri://ed-fi.org/LanguageDescriptor	dsb	Lower Sorbian	Lower Sorbian	\N	\N	\N	2022-11-17 17:07:48.368526	2022-11-17 17:07:48.368491	85879c88-b906-4376-9da1-8bddb348f4c3	1225
1228	uri://ed-fi.org/LanguageDescriptor	efi	Efik	Efik	\N	\N	\N	2022-11-17 17:07:48.38121	2022-11-17 17:07:48.381176	c673dcda-8bf5-4fc5-a826-b03037b544fa	1228
1230	uri://ed-fi.org/LanguageDescriptor	eng	English	English	\N	\N	\N	2022-11-17 17:07:48.3914	2022-11-17 17:07:48.391367	90d1200b-f45b-425a-ab31-d276e4cc11da	1230
1231	uri://ed-fi.org/LanguageDescriptor	epo	Esperanto	Esperanto	\N	\N	\N	2022-11-17 17:07:48.397244	2022-11-17 17:07:48.397118	218422ff-3407-4b4b-be89-e9d39ffb103b	1231
1233	uri://ed-fi.org/LanguageDescriptor	fan	Fang	Fang	\N	\N	\N	2022-11-17 17:07:48.40536	2022-11-17 17:07:48.405292	cd588d54-18e0-4793-b8d4-a1f8a4eef3a4	1233
1236	uri://ed-fi.org/LanguageDescriptor	fre	French	French	\N	\N	\N	2022-11-17 17:07:48.41717	2022-11-17 17:07:48.417137	0521fd69-ea01-406d-ae12-eae7ff0ee8b6	1236
1237	uri://ed-fi.org/LanguageDescriptor	fro	French, Old (842-ca.1400)	French, Old (842-ca.1400)	\N	\N	\N	2022-11-17 17:07:48.422904	2022-11-17 17:07:48.4226	fee3abd7-f3df-48a2-b3ef-6b1782ba755e	1237
1239	uri://ed-fi.org/LanguageDescriptor	ful	Fulah	Fulah	\N	\N	\N	2022-11-17 17:07:48.431806	2022-11-17 17:07:48.43176	8a2101ed-f3f3-4b67-b445-c477e5f5896b	1239
1241	uri://ed-fi.org/LanguageDescriptor	gba	Gbaya	Gbaya	\N	\N	\N	2022-11-17 17:07:48.441454	2022-11-17 17:07:48.441369	b5fd5f46-180a-474e-bed7-232f4ee85128	1241
1243	uri://ed-fi.org/LanguageDescriptor	gez	Geez	Geez	\N	\N	\N	2022-11-17 17:07:48.451664	2022-11-17 17:07:48.451589	575365d9-ba3b-4439-9db9-e50d2392c173	1243
1246	uri://ed-fi.org/LanguageDescriptor	gon	Gondi	Gondi	\N	\N	\N	2022-11-17 17:07:48.467809	2022-11-17 17:07:48.467762	2a472a97-5d69-4488-8516-6f3281703e7c	1246
1249	uri://ed-fi.org/LanguageDescriptor	grn	Guarani	Guarani	\N	\N	\N	2022-11-17 17:07:48.48139	2022-11-17 17:07:48.481343	b745eee3-ae08-45e7-8881-a486388e60b6	1249
1251	uri://ed-fi.org/LanguageDescriptor	hai	Haida	Haida	\N	\N	\N	2022-11-17 17:07:48.491723	2022-11-17 17:07:48.491676	8d4cca83-e28a-4f33-994b-56f21ea79c38	1251
1253	uri://ed-fi.org/LanguageDescriptor	heb	Hebrew	Hebrew	\N	\N	\N	2022-11-17 17:07:48.502409	2022-11-17 17:07:48.50195	7ebf4e60-a491-42f8-a752-5bca05517ad1	1253
1256	uri://ed-fi.org/LanguageDescriptor	hrv	Croatian	Croatian	\N	\N	\N	2022-11-17 17:07:48.51672	2022-11-17 17:07:48.516644	9a4f20a5-3b65-40ca-a68f-bdfe9cb0ff21	1256
1258	uri://ed-fi.org/LanguageDescriptor	iba	Iban	Iban	\N	\N	\N	2022-11-17 17:07:48.525423	2022-11-17 17:07:48.525388	9c7f730a-ad21-4075-813d-3953c37cba12	1258
1259	uri://ed-fi.org/LanguageDescriptor	ice	Icelandic	Icelandic	\N	\N	\N	2022-11-17 17:07:48.530966	2022-11-17 17:07:48.530766	a00143bb-fac2-4be2-8265-81be446eb4ee	1259
1262	uri://ed-fi.org/LanguageDescriptor	inc	Indic languages	Indic languages	\N	\N	\N	2022-11-17 17:07:48.542269	2022-11-17 17:07:48.542234	d8a25117-3959-4f24-97b6-f82be7cc194e	1262
1264	uri://ed-fi.org/LanguageDescriptor	ipk	Inupiaq	Inupiaq	\N	\N	\N	2022-11-17 17:07:48.553435	2022-11-17 17:07:48.553385	2fe994ee-8339-48c5-9ba3-3c861bd3c7f3	1264
1266	uri://ed-fi.org/LanguageDescriptor	jav	Javanese	Javanese	\N	\N	\N	2022-11-17 17:07:48.562701	2022-11-17 17:07:48.562634	5379cb57-24c1-4059-9141-f49dfb0a5e21	1266
1268	uri://ed-fi.org/LanguageDescriptor	jrb	Judeo-Arabic	Judeo-Arabic	\N	\N	\N	2022-11-17 17:07:48.571347	2022-11-17 17:07:48.571312	d97be3f3-f5ef-441d-9192-97439ae7d37c	1268
1270	uri://ed-fi.org/LanguageDescriptor	kan	Kannada	Kannada	\N	\N	\N	2022-11-17 17:07:48.580091	2022-11-17 17:07:48.580058	89037421-d52f-49e4-97cf-9eeae8efca31	1270
1272	uri://ed-fi.org/LanguageDescriptor	kaw	Kawi	Kawi	\N	\N	\N	2022-11-17 17:07:48.588758	2022-11-17 17:07:48.588724	8c472e95-cb5b-494f-8836-c962ea674e90	1272
1273	uri://ed-fi.org/LanguageDescriptor	kbd	Kabardian	Kabardian	\N	\N	\N	2022-11-17 17:07:48.594164	2022-11-17 17:07:48.59407	2db15627-d833-4084-9ebd-4be8071fa362	1273
1275	uri://ed-fi.org/LanguageDescriptor	kin	Kinyarwanda	Kinyarwanda	\N	\N	\N	2022-11-17 17:07:48.602728	2022-11-17 17:07:48.602628	1608a899-3b0e-4ff8-aeef-b3372d9a77a7	1275
1277	uri://ed-fi.org/LanguageDescriptor	kom	Komi	Komi	\N	\N	\N	2022-11-17 17:07:48.611744	2022-11-17 17:07:48.611647	6670fe3a-3baa-4366-88cd-ecc665de2eed	1277
1279	uri://ed-fi.org/LanguageDescriptor	kpe	Kpelle	Kpelle	\N	\N	\N	2022-11-17 17:07:48.619885	2022-11-17 17:07:48.619788	c5434bd1-b6fc-42e2-acc2-e83259aebf7d	1279
1282	uri://ed-fi.org/LanguageDescriptor	kum	Kumyk	Kumyk	\N	\N	\N	2022-11-17 17:07:48.631382	2022-11-17 17:07:48.631346	e3507d5b-9080-498e-8d13-825546bb043e	1282
1284	uri://ed-fi.org/LanguageDescriptor	lah	Lahnda	Lahnda	\N	\N	\N	2022-11-17 17:07:48.639919	2022-11-17 17:07:48.639872	bce5328b-0c0c-4a39-b5b8-5c20e1374f59	1284
1285	uri://ed-fi.org/LanguageDescriptor	lao	Lao	Lao	\N	\N	\N	2022-11-17 17:07:48.64509	2022-11-17 17:07:48.645049	f0c73acf-c8d4-470f-b14a-18368f2837c7	1285
1287	uri://ed-fi.org/LanguageDescriptor	lit	Lithuanian	Lithuanian	\N	\N	\N	2022-11-17 17:07:48.657039	2022-11-17 17:07:48.656411	4a7d98a1-1469-4915-b63b-75007e53e3df	1287
1289	uri://ed-fi.org/LanguageDescriptor	lua	Luba-Lulua	Luba-Lulua	\N	\N	\N	2022-11-17 17:07:48.665488	2022-11-17 17:07:48.66544	53706d3f-0384-49ce-952f-dc3a27726d98	1289
1291	uri://ed-fi.org/LanguageDescriptor	lun	Lunda	Lunda	\N	\N	\N	2022-11-17 17:07:48.675669	2022-11-17 17:07:48.675622	bd6dbd46-e516-465e-8f18-04a781788c45	1291
1293	uri://ed-fi.org/LanguageDescriptor	mad	Madurese	Madurese	\N	\N	\N	2022-11-17 17:07:48.686267	2022-11-17 17:07:48.686218	a1d25a83-d908-41c6-864c-eac7334deefa	1293
1295	uri://ed-fi.org/LanguageDescriptor	mak	Makasar	Makasar	\N	\N	\N	2022-11-17 17:07:48.694587	2022-11-17 17:07:48.694549	33248e3f-a396-4633-818f-4dd8b19741d3	1295
1296	uri://ed-fi.org/LanguageDescriptor	man	Mandingo	Mandingo	\N	\N	\N	2022-11-17 17:07:48.700495	2022-11-17 17:07:48.699504	d7748a8c-cca6-4ce0-ba0b-8f93e80cd231	1296
1298	uri://ed-fi.org/LanguageDescriptor	mas	Masai	Masai	\N	\N	\N	2022-11-17 17:07:48.709843	2022-11-17 17:07:48.709474	1f77b698-03e5-430f-875e-aae0f31757ef	1298
1300	uri://ed-fi.org/LanguageDescriptor	men	Mende	Mende	\N	\N	\N	2022-11-17 17:07:48.718703	2022-11-17 17:07:48.718686	e74f6a68-1aa1-422d-8c55-45ca06d21d74	1300
1302	uri://ed-fi.org/LanguageDescriptor	mlg	Malagasy	Malagasy	\N	\N	\N	2022-11-17 17:07:48.727407	2022-11-17 17:07:48.727349	57351ad9-8a30-455c-9d84-4d0aa0466aa7	1302
1303	uri://ed-fi.org/LanguageDescriptor	mnc	Manchu	Manchu	\N	\N	\N	2022-11-17 17:07:48.73391	2022-11-17 17:07:48.733858	452cea08-f7b5-4883-9a4a-da75ba7c7f54	1303
1292	uri://ed-fi.org/LanguageDescriptor	lus	Lushai	Lushai	\N	\N	\N	2022-11-17 17:07:48.681056	2022-11-17 17:07:48.681008	eed757d9-7151-4c07-900d-694d06cf8ce6	1292
1294	uri://ed-fi.org/LanguageDescriptor	mah	Marshallese	Marshallese	\N	\N	\N	2022-11-17 17:07:48.690822	2022-11-17 17:07:48.690783	ad36e989-7956-4fb5-aaf3-1816128bf6cb	1294
1297	uri://ed-fi.org/LanguageDescriptor	map	Austronesian languages	Austronesian languages	\N	\N	\N	2022-11-17 17:07:48.70358	2022-11-17 17:07:48.703545	c62b084f-6fe6-49dd-a2dc-ffd9f1be0ded	1297
1299	uri://ed-fi.org/LanguageDescriptor	mdf	Moksha	Moksha	\N	\N	\N	2022-11-17 17:07:48.713376	2022-11-17 17:07:48.713328	8bbcbeda-201f-43ae-84a8-7b158d7098f2	1299
1301	uri://ed-fi.org/LanguageDescriptor	mis	Uncoded languages	Uncoded languages	\N	\N	\N	2022-11-17 17:07:48.725127	2022-11-17 17:07:48.725082	3ee62235-9147-4dee-9a1d-6ad5c8658ffd	1301
1304	uri://ed-fi.org/LanguageDescriptor	mno	Manobo languages	Manobo languages	\N	\N	\N	2022-11-17 17:07:48.737326	2022-11-17 17:07:48.737289	c6f45e63-04e6-4acc-be78-fb0a0d7430b2	1304
1306	uri://ed-fi.org/LanguageDescriptor	mul	Multiple languages	Multiple languages	\N	\N	\N	2022-11-17 17:07:48.747664	2022-11-17 17:07:48.747618	66ee1eb3-7562-45fa-8d38-2251110e2ae5	1306
1308	uri://ed-fi.org/LanguageDescriptor	mwr	Marwari	Marwari	\N	\N	\N	2022-11-17 17:07:48.756112	2022-11-17 17:07:48.755964	4808e8b1-816c-445d-aebe-92c24c5fe31a	1308
1311	uri://ed-fi.org/LanguageDescriptor	nau	Nauru	Nauru	\N	\N	\N	2022-11-17 17:07:48.76718	2022-11-17 17:07:48.767143	0c0dabcf-6e8a-4e86-9c55-5af952b8e59b	1311
1313	uri://ed-fi.org/LanguageDescriptor	nep	Nepali	Nepali	\N	\N	\N	2022-11-17 17:07:48.775468	2022-11-17 17:07:48.775398	a6665985-e849-4bdc-a016-3cdff7ae1a5e	1313
1315	uri://ed-fi.org/LanguageDescriptor	niu	Niuean	Niuean	\N	\N	\N	2022-11-17 17:07:48.785012	2022-11-17 17:07:48.784966	0f64f49f-cf52-4dba-adbf-9fb54bdc5775	1315
1316	uri://ed-fi.org/LanguageDescriptor	non	Norse, Old	Norse, Old	\N	\N	\N	2022-11-17 17:07:48.793123	2022-11-17 17:07:48.792927	1a5ace8d-6953-435c-878d-383e4e557356	1316
1318	uri://ed-fi.org/LanguageDescriptor	nub	Nubian languages	Nubian languages	\N	\N	\N	2022-11-17 17:07:48.802618	2022-11-17 17:07:48.801759	17b9a565-8826-443d-8f78-46f974b22514	1318
1320	uri://ed-fi.org/LanguageDescriptor	nzi	Nzima	Nzima	\N	\N	\N	2022-11-17 17:07:48.813605	2022-11-17 17:07:48.813553	30e824db-98b0-4df6-8410-ae203ded3b9d	1320
1322	uri://ed-fi.org/LanguageDescriptor	orm	Oromo	Oromo	\N	\N	\N	2022-11-17 17:07:48.821845	2022-11-17 17:07:48.821704	b762ef0c-8d1b-42d7-8681-978473bdd4f4	1322
1325	uri://ed-fi.org/LanguageDescriptor	pap	Papiamento	Papiamento	\N	\N	\N	2022-11-17 17:07:48.833125	2022-11-17 17:07:48.833091	7f1ae21d-3a85-41de-9fc0-5cbc4527d01b	1325
1326	uri://ed-fi.org/LanguageDescriptor	peo	Persian, Old (ca.600-400 B.C.)	Persian, Old (ca.600-400 B.C.)	\N	\N	\N	2022-11-17 17:07:48.838972	2022-11-17 17:07:48.838748	ba5804ae-dc29-4544-b6d3-08b5d3cb3f83	1326
1329	uri://ed-fi.org/LanguageDescriptor	pon	Pohnpeian	Pohnpeian	\N	\N	\N	2022-11-17 17:07:48.850067	2022-11-17 17:07:48.850034	844dbe5d-f4b8-45c5-98cf-6a3800ee41b3	1329
1330	uri://ed-fi.org/LanguageDescriptor	pra	Prakrit languages	Prakrit languages	\N	\N	\N	2022-11-17 17:07:48.854795	2022-11-17 17:07:48.854741	f70a085c-0f24-4b32-8a1d-3fcd222c8442	1330
1333	uri://ed-fi.org/LanguageDescriptor	rum	Romanian	Romanian	\N	\N	\N	2022-11-17 17:07:48.866679	2022-11-17 17:07:48.866646	5344cfe5-8108-49ba-9143-5e4287e44a90	1333
1334	uri://ed-fi.org/LanguageDescriptor	sad	Sandawe	Sandawe	\N	\N	\N	2022-11-17 17:07:48.871928	2022-11-17 17:07:48.871613	48d2418d-e542-480e-b1aa-6c6cd1b9e9a2	1334
1337	uri://ed-fi.org/LanguageDescriptor	san	Sanskrit	Sanskrit	\N	\N	\N	2022-11-17 17:07:48.882779	2022-11-17 17:07:48.882747	64d83cde-c8fb-474f-8e38-58d19330af6b	1337
1339	uri://ed-fi.org/LanguageDescriptor	sco	Scots	Scots	\N	\N	\N	2022-11-17 17:07:48.891465	2022-11-17 17:07:48.891431	7b6292ee-1d58-4f5d-a735-9734273224e7	1339
1341	uri://ed-fi.org/LanguageDescriptor	sgn	Sign Languages	Sign Languages	\N	\N	\N	2022-11-17 17:07:48.899721	2022-11-17 17:07:48.899687	d67e9fbc-e59d-4711-b9fa-c72a55f89293	1341
1342	uri://ed-fi.org/LanguageDescriptor	sid	Sidamo	Sidamo	\N	\N	\N	2022-11-17 17:07:48.905186	2022-11-17 17:07:48.905077	dd515a4a-e3d9-45e5-8101-3ef3a64921ee	1342
1344	uri://ed-fi.org/LanguageDescriptor	sla	Slavic languages	Slavic languages	\N	\N	\N	2022-11-17 17:07:48.913089	2022-11-17 17:07:48.91297	1248d206-6c4a-49e1-b1bd-683eb4dee084	1344
1346	uri://ed-fi.org/LanguageDescriptor	sme	Northern Sami	Northern Sami	\N	\N	\N	2022-11-17 17:07:48.922028	2022-11-17 17:07:48.921932	0602c2e2-cd62-490f-b343-fb0d6e4218b2	1346
1348	uri://ed-fi.org/LanguageDescriptor	smo	Samoan	Samoan	\N	\N	\N	2022-11-17 17:07:48.930206	2022-11-17 17:07:48.930135	a1d7cba9-5e1e-45f6-b7a5-441165253507	1348
1350	uri://ed-fi.org/LanguageDescriptor	snk	Soninke	Soninke	\N	\N	\N	2022-11-17 17:07:48.93953	2022-11-17 17:07:48.939485	75d9e031-bbcf-4b8d-b2db-5ab0981b43ad	1350
1353	uri://ed-fi.org/LanguageDescriptor	srd	Sardinian	Sardinian	\N	\N	\N	2022-11-17 17:07:48.954375	2022-11-17 17:07:48.954331	ba28e197-bde8-4bf7-bf1c-721af92ce27d	1353
1355	uri://ed-fi.org/LanguageDescriptor	ssa	Nilo-Saharan languages	Nilo-Saharan languages	\N	\N	\N	2022-11-17 17:07:48.964756	2022-11-17 17:07:48.964711	8d07552b-d3ee-4ee3-8b15-06ff2e74ed57	1355
1356	uri://ed-fi.org/LanguageDescriptor	suk	Sukuma	Sukuma	\N	\N	\N	2022-11-17 17:07:48.971513	2022-11-17 17:07:48.96983	a0530b37-a004-44db-a225-dbc34c8cfd98	1356
1358	uri://ed-fi.org/LanguageDescriptor	swa	Swahili	Swahili	\N	\N	\N	2022-11-17 17:07:48.981295	2022-11-17 17:07:48.979461	c56c6055-b28c-49ba-9c90-b787d8741c07	1358
1360	uri://ed-fi.org/LanguageDescriptor	tah	Tahitian	Tahitian	\N	\N	\N	2022-11-17 17:07:48.989739	2022-11-17 17:07:48.989646	0582e40b-781b-4794-8272-32a5a5989b42	1360
1362	uri://ed-fi.org/LanguageDescriptor	tel	Telugu	Telugu	\N	\N	\N	2022-11-17 17:07:48.999963	2022-11-17 17:07:48.999132	0d36672e-094c-4a2d-aa95-857b417500dd	1362
1365	uri://ed-fi.org/LanguageDescriptor	tha	Thai	Thai	\N	\N	\N	2022-11-17 17:07:49.012162	2022-11-17 17:07:49.012119	5c9041f8-1982-4250-b8d2-087974dfdeec	1365
1367	uri://ed-fi.org/LanguageDescriptor	tiv	Tiv	Tiv	\N	\N	\N	2022-11-17 17:07:49.02085	2022-11-17 17:07:49.020786	a6789e3d-be3e-4aa3-b77e-b49efd2476c9	1367
1369	uri://ed-fi.org/LanguageDescriptor	ton	Tonga (Tonga Islands)	Tonga (Tonga Islands)	\N	\N	\N	2022-11-17 17:07:49.02991	2022-11-17 17:07:49.029826	be9f8c16-e5fa-4b5a-9e2a-a8f8375fba7b	1369
1371	uri://ed-fi.org/LanguageDescriptor	tso	Tsonga	Tsonga	\N	\N	\N	2022-11-17 17:07:49.039856	2022-11-17 17:07:49.039811	81fe14bc-e699-4c19-8a4e-245434c7c508	1371
1373	uri://ed-fi.org/LanguageDescriptor	tur	Turkish	Turkish	\N	\N	\N	2022-11-17 17:07:49.053802	2022-11-17 17:07:49.053765	2134c5f1-daf4-4871-92a3-39302e20b103	1373
1375	uri://ed-fi.org/LanguageDescriptor	tyv	Tuvinian	Tuvinian	\N	\N	\N	2022-11-17 17:07:49.063512	2022-11-17 17:07:49.063478	03c897e4-bb2f-4134-b1a9-17dad139b593	1375
1377	uri://ed-fi.org/LanguageDescriptor	ukr	Ukrainian	Ukrainian	\N	\N	\N	2022-11-17 17:07:49.073025	2022-11-17 17:07:49.072852	8febf451-6674-4595-a4ae-5b9757f1baf2	1377
1379	uri://ed-fi.org/LanguageDescriptor	uzb	Uzbek	Uzbek	\N	\N	\N	2022-11-17 17:07:49.082322	2022-11-17 17:07:49.082267	2ab6e824-8b9b-46cb-9ada-ba9f44d2f86e	1379
1380	uri://ed-fi.org/LanguageDescriptor	ven	Venda	Venda	\N	\N	\N	2022-11-17 17:07:49.08794	2022-11-17 17:07:49.087896	7c634ff7-1861-48f8-829b-a33cb98365ee	1380
1383	uri://ed-fi.org/LanguageDescriptor	war	Waray	Waray	\N	\N	\N	2022-11-17 17:07:49.100872	2022-11-17 17:07:49.100828	89c773ca-151d-4cdb-9223-d6e615e3fe7e	1383
1386	uri://ed-fi.org/LanguageDescriptor	yao	Yao	Yao	\N	\N	\N	2022-11-17 17:07:49.115393	2022-11-17 17:07:49.11534	92a709fd-8b20-4a21-838a-666093e1275b	1386
1389	uri://ed-fi.org/LanguageDescriptor	zgh	Standard Moroccan Tamazight	Standard Moroccan Tamazight	\N	\N	\N	2022-11-17 17:07:49.133405	2022-11-17 17:07:49.133361	763f0f8e-6ccc-4a7a-b5e1-c07cd031f74d	1389
1391	uri://ed-fi.org/LanguageDescriptor	zun	Zuni	Zuni	\N	\N	\N	2022-11-17 17:07:49.142447	2022-11-17 17:07:49.142412	e60b48d3-f9b2-43f3-a330-e432519628fe	1391
1393	uri://ed-fi.org/LanguageDescriptor	ach	Acoli	Acoli	\N	\N	\N	2022-11-17 17:07:49.149837	2022-11-17 17:07:49.149804	9e83561d-01ac-4472-b2a5-41cdd1778d71	1393
1395	uri://ed-fi.org/LanguageDescriptor	ain	Ainu	Ainu	\N	\N	\N	2022-11-17 17:07:49.158912	2022-11-17 17:07:49.158819	471ad57f-3873-45c9-87ef-3d43a01b52e3	1395
1397	uri://ed-fi.org/LanguageDescriptor	ale	Aleut	Aleut	\N	\N	\N	2022-11-17 17:07:49.167175	2022-11-17 17:07:49.16708	f9abe2a3-10a6-4ed5-b5d2-b4bc40d14be0	1397
1400	uri://ed-fi.org/LanguageDescriptor	apa	Apache languages	Apache languages	\N	\N	\N	2022-11-17 17:07:49.178525	2022-11-17 17:07:49.178493	b1e19113-a533-48bc-8939-c36b3538e00c	1400
1402	uri://ed-fi.org/LanguageDescriptor	arp	Arapaho	Arapaho	\N	\N	\N	2022-11-17 17:07:49.186842	2022-11-17 17:07:49.18681	e1935ff7-057e-4a3a-9cc3-7695314bf89a	1402
1404	uri://ed-fi.org/LanguageDescriptor	aus	Australian languages	Australian languages	\N	\N	\N	2022-11-17 17:07:49.195106	2022-11-17 17:07:49.195074	7bfe3cd3-4c03-4b85-b29d-381be54e46b1	1404
1406	uri://ed-fi.org/LanguageDescriptor	aym	Aymara	Aymara	\N	\N	\N	2022-11-17 17:07:49.203413	2022-11-17 17:07:49.203381	a4e9aa6e-fa7c-4ec2-8de8-28dafcecc833	1406
1408	uri://ed-fi.org/LanguageDescriptor	bak	Bashkir	Bashkir	\N	\N	\N	2022-11-17 17:07:49.211154	2022-11-17 17:07:49.21112	1297fc9f-54a0-46a1-964b-bdf7f604e721	1408
1305	uri://ed-fi.org/LanguageDescriptor	mon	Mongolian	Mongolian	\N	\N	\N	2022-11-17 17:07:48.74218	2022-11-17 17:07:48.742133	c63aa185-2808-4867-a016-8adb825842f5	1305
1307	uri://ed-fi.org/LanguageDescriptor	mus	Creek	Creek	\N	\N	\N	2022-11-17 17:07:48.750512	2022-11-17 17:07:48.750476	e079f234-f6d6-40d6-a963-691d84b4f3e2	1307
1309	uri://ed-fi.org/LanguageDescriptor	myv	Erzya	Erzya	\N	\N	\N	2022-11-17 17:07:48.758981	2022-11-17 17:07:48.758944	1532814f-d99a-41d5-aade-e77d70a4bae4	1309
1310	uri://ed-fi.org/LanguageDescriptor	nai	North American Indian languages	North American Indian languages	\N	\N	\N	2022-11-17 17:07:48.763848	2022-11-17 17:07:48.76381	c534cfa0-ad6d-4ad8-9f52-6946945e9e34	1310
1312	uri://ed-fi.org/LanguageDescriptor	ndo	Ndonga	Ndonga	\N	\N	\N	2022-11-17 17:07:48.771487	2022-11-17 17:07:48.771451	84a40a62-2499-4cf6-8f11-4f6c2bf90c4d	1312
1314	uri://ed-fi.org/LanguageDescriptor	nia	Nias	Nias	\N	\N	\N	2022-11-17 17:07:48.784232	2022-11-17 17:07:48.784193	86f5c272-ee8d-4155-9c52-23b898e82086	1314
1317	uri://ed-fi.org/LanguageDescriptor	nqo	N'Ko	N'Ko	\N	\N	\N	2022-11-17 17:07:48.796355	2022-11-17 17:07:48.79632	be2ce66a-a847-4cba-a5c1-51704a180ae1	1317
1319	uri://ed-fi.org/LanguageDescriptor	nyn	Nyankole	Nyankole	\N	\N	\N	2022-11-17 17:07:48.806043	2022-11-17 17:07:48.806006	e229b767-c8d0-4e11-9fb0-0a90c5db14c9	1319
1321	uri://ed-fi.org/LanguageDescriptor	oji	Ojibwa	Ojibwa	\N	\N	\N	2022-11-17 17:07:48.816608	2022-11-17 17:07:48.816575	f1b98f44-da62-4663-bac0-5b485805c61e	1321
1323	uri://ed-fi.org/LanguageDescriptor	oto	Otomian languages	Otomian languages	\N	\N	\N	2022-11-17 17:07:48.824844	2022-11-17 17:07:48.824812	920b480b-0c29-4557-a3c8-c19d35d5a615	1323
1324	uri://ed-fi.org/LanguageDescriptor	pag	Pangasinan	Pangasinan	\N	\N	\N	2022-11-17 17:07:48.830519	2022-11-17 17:07:48.830207	6b3a071e-942f-4d0c-9f36-0a59213585f8	1324
1327	uri://ed-fi.org/LanguageDescriptor	phi	Philippine languages	Philippine languages	\N	\N	\N	2022-11-17 17:07:48.841835	2022-11-17 17:07:48.841801	76961e0f-4b10-4a06-9030-1b3d2bd70ae0	1327
1328	uri://ed-fi.org/LanguageDescriptor	pli	Pali	Pali	\N	\N	\N	2022-11-17 17:07:48.846951	2022-11-17 17:07:48.846894	ec71d3df-738e-48fd-b74a-4d6bdb0b7dd2	1328
1331	uri://ed-fi.org/LanguageDescriptor	raj	Rajasthani	Rajasthani	\N	\N	\N	2022-11-17 17:07:48.8587	2022-11-17 17:07:48.858666	f1e54488-8988-4925-99d2-912ace1b99df	1331
1332	uri://ed-fi.org/LanguageDescriptor	roh	Romansh	Romansh	\N	\N	\N	2022-11-17 17:07:48.863842	2022-11-17 17:07:48.86346	2937cbae-4a3b-496f-9233-f6901beadf61	1332
1335	uri://ed-fi.org/LanguageDescriptor	sah	Yakut	Yakut	\N	\N	\N	2022-11-17 17:07:48.874557	2022-11-17 17:07:48.874527	36e73b99-9c02-4212-8077-cecc41f16933	1335
1336	uri://ed-fi.org/LanguageDescriptor	sal	Salishan languages	Salishan languages	\N	\N	\N	2022-11-17 17:07:48.879968	2022-11-17 17:07:48.879741	6eac65d4-9313-4f28-b8e2-563b60a82dd7	1336
1338	uri://ed-fi.org/LanguageDescriptor	sat	Santali	Santali	\N	\N	\N	2022-11-17 17:07:48.88857	2022-11-17 17:07:48.888423	2b189d30-a54e-4625-82e7-a3a3b059ce8b	1338
1340	uri://ed-fi.org/LanguageDescriptor	sem	Semitic languages	Semitic languages	\N	\N	\N	2022-11-17 17:07:48.896143	2022-11-17 17:07:48.896029	4017e6d6-4969-4ced-af3f-e8537106775a	1340
1343	uri://ed-fi.org/LanguageDescriptor	sio	Siouan languages	Siouan languages	\N	\N	\N	2022-11-17 17:07:48.908013	2022-11-17 17:07:48.907978	47c8f18b-8cd7-474d-aa17-ac1ae504a8fe	1343
1345	uri://ed-fi.org/LanguageDescriptor	slv	Slovenian	Slovenian	\N	\N	\N	2022-11-17 17:07:48.916044	2022-11-17 17:07:48.91601	539792d6-8fe2-4aa2-aac5-39c28a75d65b	1345
1347	uri://ed-fi.org/LanguageDescriptor	smj	Lule Sami	Lule Sami	\N	\N	\N	2022-11-17 17:07:48.925178	2022-11-17 17:07:48.924999	b6572be2-4e06-4f60-a179-053390c9db0a	1347
1349	uri://ed-fi.org/LanguageDescriptor	sna	Shona	Shona	\N	\N	\N	2022-11-17 17:07:48.936003	2022-11-17 17:07:48.935957	5ecd846b-0e93-49aa-8dd2-43c28e9a3ce1	1349
1351	uri://ed-fi.org/LanguageDescriptor	som	Somali	Somali	\N	\N	\N	2022-11-17 17:07:48.944937	2022-11-17 17:07:48.944892	79ec5423-1303-4c7f-b0fc-42f830f7fe1d	1351
1352	uri://ed-fi.org/LanguageDescriptor	sot	Sotho, Southern	Sotho, Southern	\N	\N	\N	2022-11-17 17:07:48.95096	2022-11-17 17:07:48.949769	b434a792-3759-4234-8509-dd7be7285409	1352
1354	uri://ed-fi.org/LanguageDescriptor	srp	Serbian	Serbian	\N	\N	\N	2022-11-17 17:07:48.959781	2022-11-17 17:07:48.959735	d34a6e91-f977-4242-afb4-349d537c83dc	1354
1357	uri://ed-fi.org/LanguageDescriptor	sus	Susu	Susu	\N	\N	\N	2022-11-17 17:07:48.974131	2022-11-17 17:07:48.974066	ccf82748-e570-4525-bed3-05c5d9a653d0	1357
1359	uri://ed-fi.org/LanguageDescriptor	syc	Classical Syriac	Classical Syriac	\N	\N	\N	2022-11-17 17:07:48.983895	2022-11-17 17:07:48.983861	bafaca69-6dd0-4a35-bf30-c6c6f587956e	1359
1361	uri://ed-fi.org/LanguageDescriptor	tam	Tamil	Tamil	\N	\N	\N	2022-11-17 17:07:48.993637	2022-11-17 17:07:48.993593	bd629360-29bd-4b26-b72b-da778743c503	1361
1363	uri://ed-fi.org/LanguageDescriptor	ter	Tereno	Tereno	\N	\N	\N	2022-11-17 17:07:49.003196	2022-11-17 17:07:49.003137	014ba21b-c7ac-4d44-9f25-cb2d9068c707	1363
1364	uri://ed-fi.org/LanguageDescriptor	tgk	Tajik	Tajik	\N	\N	\N	2022-11-17 17:07:49.008581	2022-11-17 17:07:49.008537	06457d93-799e-46b7-9d67-ae3506dcc73d	1364
1366	uri://ed-fi.org/LanguageDescriptor	tig	Tigre	Tigre	\N	\N	\N	2022-11-17 17:07:49.017408	2022-11-17 17:07:49.016685	dca621fa-81d7-403a-9338-6441c0ec9114	1366
1368	uri://ed-fi.org/LanguageDescriptor	tmh	Tamashek	Tamashek	\N	\N	\N	2022-11-17 17:07:49.026312	2022-11-17 17:07:49.02609	27cde389-e8e9-412a-9f3f-c5261b961675	1368
1370	uri://ed-fi.org/LanguageDescriptor	tsi	Tsimshian	Tsimshian	\N	\N	\N	2022-11-17 17:07:49.034943	2022-11-17 17:07:49.034889	1800be05-3d13-45d9-b7ea-87fc04216dc5	1370
1372	uri://ed-fi.org/LanguageDescriptor	tum	Tumbuka	Tumbuka	\N	\N	\N	2022-11-17 17:07:49.045049	2022-11-17 17:07:49.044998	14ba7673-1b38-48ec-8f97-707527f94259	1372
1374	uri://ed-fi.org/LanguageDescriptor	tvl	Tuvalu	Tuvalu	\N	\N	\N	2022-11-17 17:07:49.06093	2022-11-17 17:07:49.060771	a7ac43e1-9de6-40aa-8b59-8169d8119094	1374
1376	uri://ed-fi.org/LanguageDescriptor	uga	Ugaritic	Ugaritic	\N	\N	\N	2022-11-17 17:07:49.069871	2022-11-17 17:07:49.06958	83f5a097-88bc-481e-a588-a121df6427e4	1376
1378	uri://ed-fi.org/LanguageDescriptor	und	Undetermined	Undetermined	\N	\N	\N	2022-11-17 17:07:49.079491	2022-11-17 17:07:49.07794	7d8db2ba-9912-45ab-98eb-f0e8906a1fa6	1378
1381	uri://ed-fi.org/LanguageDescriptor	vol	Volapük	Volapük	\N	\N	\N	2022-11-17 17:07:49.091581	2022-11-17 17:07:49.091538	1aff535b-d057-461b-be74-6a3f56a02e7d	1381
1382	uri://ed-fi.org/LanguageDescriptor	wak	Wakashan languages	Wakashan languages	\N	\N	\N	2022-11-17 17:07:49.097289	2022-11-17 17:07:49.096909	f10acc80-5e27-4214-ad4e-4e727577cd1f	1382
1384	uri://ed-fi.org/LanguageDescriptor	wel	Welsh	Welsh	\N	\N	\N	2022-11-17 17:07:49.105993	2022-11-17 17:07:49.105949	573e44a2-a258-4061-929c-0358e81dc1d4	1384
1385	uri://ed-fi.org/LanguageDescriptor	wln	Walloon	Walloon	\N	\N	\N	2022-11-17 17:07:49.111089	2022-11-17 17:07:49.111043	fad6893b-3896-4427-b20c-f45b48674bc4	1385
1387	uri://ed-fi.org/LanguageDescriptor	yid	Yiddish	Yiddish	\N	\N	\N	2022-11-17 17:07:49.12194	2022-11-17 17:07:49.121894	350a1af3-8092-40a3-a4a4-e6acc761ad04	1387
1388	uri://ed-fi.org/LanguageDescriptor	ypk	Yupik languages	Yupik languages	\N	\N	\N	2022-11-17 17:07:49.128099	2022-11-17 17:07:49.128055	227d31b6-5e72-4ac3-bb84-cb668b0e50ad	1388
1390	uri://ed-fi.org/LanguageDescriptor	znd	Zande languages	Zande languages	\N	\N	\N	2022-11-17 17:07:49.137879	2022-11-17 17:07:49.137848	cc6692ea-36a1-411c-8f8d-7aa69c1272d9	1390
1392	uri://ed-fi.org/LanguageDescriptor	abk	Abkhazian	Abkhazian	\N	\N	\N	2022-11-17 17:07:49.146555	2022-11-17 17:07:49.146449	1f44822c-62c3-4455-aecc-922cea8e437c	1392
1394	uri://ed-fi.org/LanguageDescriptor	afh	Afrihili	Afrihili	\N	\N	\N	2022-11-17 17:07:49.154627	2022-11-17 17:07:49.154567	5178179e-a55f-4b75-88a3-75d11c72132e	1394
1396	uri://ed-fi.org/LanguageDescriptor	akk	Akkadian	Akkadian	\N	\N	\N	2022-11-17 17:07:49.162443	2022-11-17 17:07:49.162411	4373b92d-ddd9-4cfc-87a7-2b0c35230a04	1396
1398	uri://ed-fi.org/LanguageDescriptor	alt	Southern Altai	Southern Altai	\N	\N	\N	2022-11-17 17:07:49.170776	2022-11-17 17:07:49.170744	451c3cc5-b80b-4d5f-966c-6d59948a51b7	1398
1399	uri://ed-fi.org/LanguageDescriptor	ang	English, Old (ca.450-1100)	English, Old (ca.450-1100)	\N	\N	\N	2022-11-17 17:07:49.175709	2022-11-17 17:07:49.175667	54f307ca-7099-4804-a81b-b0090b1ca4f6	1399
1401	uri://ed-fi.org/LanguageDescriptor	arm	Armenian	Armenian	\N	\N	\N	2022-11-17 17:07:49.183923	2022-11-17 17:07:49.183773	c8f2ba21-03c2-464b-9a43-34537919c5d3	1401
1403	uri://ed-fi.org/LanguageDescriptor	arw	Arawak	Arawak	\N	\N	\N	2022-11-17 17:07:49.19148	2022-11-17 17:07:49.191452	f3466a46-5b6c-4ecd-91cf-3756023959d7	1403
1405	uri://ed-fi.org/LanguageDescriptor	ave	Avestan	Avestan	\N	\N	\N	2022-11-17 17:07:49.199856	2022-11-17 17:07:49.19976	3e5d052c-e4fd-432b-8df5-10a1f4da81f5	1405
1407	uri://ed-fi.org/LanguageDescriptor	bad	Banda languages	Banda languages	\N	\N	\N	2022-11-17 17:07:49.207894	2022-11-17 17:07:49.20786	f15148e8-3a4a-4aae-82ed-ba025abf4d99	1407
1409	uri://ed-fi.org/LanguageDescriptor	bam	Bambara	Bambara	\N	\N	\N	2022-11-17 17:07:49.215535	2022-11-17 17:07:49.21543	c4a4b5e9-4b1c-499b-9475-0297a775c87f	1409
1411	uri://ed-fi.org/LanguageDescriptor	bat	Baltic languages	Baltic languages	\N	\N	\N	2022-11-17 17:07:49.22436	2022-11-17 17:07:49.224294	a0e5cffb-9467-41a7-9122-c236a4929ab7	1411
1410	uri://ed-fi.org/LanguageDescriptor	baq	Basque	Basque	\N	\N	\N	2022-11-17 17:07:49.219118	2022-11-17 17:07:49.219085	77fd8b65-7f47-4913-a1eb-2e04a208c8d8	1410
1412	uri://ed-fi.org/LanguageDescriptor	bel	Belarusian	Belarusian	\N	\N	\N	2022-11-17 17:07:49.227108	2022-11-17 17:07:49.227076	eaf7db5b-0782-4219-97ac-4ea454226fc2	1412
1414	uri://ed-fi.org/LanguageDescriptor	bho	Bhojpuri	Bhojpuri	\N	\N	\N	2022-11-17 17:07:49.235758	2022-11-17 17:07:49.235725	ca472ff2-7fdb-4160-9d5f-83987d01191d	1414
1416	uri://ed-fi.org/LanguageDescriptor	bis	Bislama	Bislama	\N	\N	\N	2022-11-17 17:07:49.24368	2022-11-17 17:07:49.243647	ba792e8a-528c-4ddf-8336-95e1c98cf13a	1416
1417	uri://ed-fi.org/LanguageDescriptor	bnt	Bantu languages	Bantu languages	\N	\N	\N	2022-11-17 17:07:49.248761	2022-11-17 17:07:49.248698	9598ae50-f848-4d8f-a026-ed8d021dac4e	1417
1419	uri://ed-fi.org/LanguageDescriptor	btk	Batak languages	Batak languages	\N	\N	\N	2022-11-17 17:07:49.258347	2022-11-17 17:07:49.258313	e0ae32c5-bae1-43fd-a468-c5d2361cf98b	1419
1422	uri://ed-fi.org/LanguageDescriptor	cad	Caddo	Caddo	\N	\N	\N	2022-11-17 17:07:49.271941	2022-11-17 17:07:49.271909	5e46da40-36c0-4451-a39e-5c0bbcc7ce23	1422
1423	uri://ed-fi.org/LanguageDescriptor	car	Galibi Carib	Galibi Carib	\N	\N	\N	2022-11-17 17:07:49.277339	2022-11-17 17:07:49.277297	b32e8618-eea9-4afa-a571-ad6f7c1a4824	1423
1426	uri://ed-fi.org/LanguageDescriptor	chb	Chibcha	Chibcha	\N	\N	\N	2022-11-17 17:07:49.290134	2022-11-17 17:07:49.29007	7e6b057b-c287-4ded-a5b6-4887c2df3430	1426
1428	uri://ed-fi.org/LanguageDescriptor	chk	Chuukese	Chuukese	\N	\N	\N	2022-11-17 17:07:49.299779	2022-11-17 17:07:49.299746	3ff413cd-b1cc-4c97-85e5-57d62be36348	1428
1429	uri://ed-fi.org/LanguageDescriptor	chn	Chinook jargon	Chinook jargon	\N	\N	\N	2022-11-17 17:07:49.304841	2022-11-17 17:07:49.304786	0668070e-f839-47f1-a539-94694c9251d0	1429
1431	uri://ed-fi.org/LanguageDescriptor	cop	Coptic	Coptic	\N	\N	\N	2022-11-17 17:07:49.3129	2022-11-17 17:07:49.312844	7a386982-3025-4df7-a8ac-d30240be1b0a	1431
1433	uri://ed-fi.org/LanguageDescriptor	cpf	Creoles and pidgins, French-based	Creoles and pidgins, French-based	\N	\N	\N	2022-11-17 17:07:49.320522	2022-11-17 17:07:49.320487	2793b7ed-d4b7-4d38-86e3-4d6f6b771130	1433
1435	uri://ed-fi.org/LanguageDescriptor	crp	Creoles and pidgins	Creoles and pidgins	\N	\N	\N	2022-11-17 17:07:49.32878	2022-11-17 17:07:49.328745	5ca15915-6a57-4676-9cf8-ce1a4c247bc4	1435
1436	uri://ed-fi.org/LanguageDescriptor	cus	Cushitic languages	Cushitic languages	\N	\N	\N	2022-11-17 17:07:49.333311	2022-11-17 17:07:49.333275	d6eedbe5-66d7-46f9-b1f4-010ef7062ee3	1436
1438	uri://ed-fi.org/LanguageDescriptor	dar	Dargwa	Dargwa	\N	\N	\N	2022-11-17 17:07:49.340364	2022-11-17 17:07:49.340328	e44ff00d-8ba1-4d5f-a4c7-48d16204a3c4	1438
1440	uri://ed-fi.org/LanguageDescriptor	dgr	Dogrib	Dogrib	\N	\N	\N	2022-11-17 17:07:49.349024	2022-11-17 17:07:49.348987	c313ff25-c3f3-4e31-8c54-4a4e2eb452fe	1440
1442	uri://ed-fi.org/LanguageDescriptor	dua	Duala	Duala	\N	\N	\N	2022-11-17 17:07:49.35693	2022-11-17 17:07:49.356894	66e69728-20c8-4db4-826a-07ba41b729c6	1442
1444	uri://ed-fi.org/LanguageDescriptor	egy	Egyptian (Ancient)	Egyptian (Ancient)	\N	\N	\N	2022-11-17 17:07:49.364732	2022-11-17 17:07:49.364629	cdd83ec5-fa4d-4c16-9039-133549c67f36	1444
1447	uri://ed-fi.org/LanguageDescriptor	est	Estonian	Estonian	\N	\N	\N	2022-11-17 17:07:49.378147	2022-11-17 17:07:49.378114	752adcee-a221-4bce-bb65-ca0929eded44	1447
1449	uri://ed-fi.org/LanguageDescriptor	fao	Faroese	Faroese	\N	\N	\N	2022-11-17 17:07:49.389424	2022-11-17 17:07:49.389393	314265ea-80a9-488f-9a45-e0382686841c	1449
1450	uri://ed-fi.org/LanguageDescriptor	fij	Fijian	Fijian	\N	\N	\N	2022-11-17 17:07:49.394207	2022-11-17 17:07:49.394113	be8beb96-206e-4757-b80d-7db09a56911f	1450
1453	uri://ed-fi.org/LanguageDescriptor	frm	French, Middle (ca.1400-1600)	French, Middle (ca.1400-1600)	\N	\N	\N	2022-11-17 17:07:49.406609	2022-11-17 17:07:49.40657	b138f564-875f-4542-af32-e705e20b7fd9	1453
1455	uri://ed-fi.org/LanguageDescriptor	fry	Western Frisian	Western Frisian	\N	\N	\N	2022-11-17 17:07:49.414131	2022-11-17 17:07:49.414097	2d1b9933-de8a-4325-a7c3-9742811e7705	1455
1457	uri://ed-fi.org/LanguageDescriptor	gay	Gayo	Gayo	\N	\N	\N	2022-11-17 17:07:49.422433	2022-11-17 17:07:49.422401	26ecb4c3-7be3-40c9-9d6f-92bc6d30be91	1457
1459	uri://ed-fi.org/LanguageDescriptor	ger	German	German	\N	\N	\N	2022-11-17 17:07:49.434344	2022-11-17 17:07:49.434301	38eba79b-c908-4076-96ed-8d43979b2263	1459
1462	uri://ed-fi.org/LanguageDescriptor	glv	Manx	Manx	\N	\N	\N	2022-11-17 17:07:49.445956	2022-11-17 17:07:49.445922	9b6359b3-6e7d-4872-84e1-5aea621d5878	1462
1465	uri://ed-fi.org/LanguageDescriptor	grb	Grebo	Grebo	\N	\N	\N	2022-11-17 17:07:49.460348	2022-11-17 17:07:49.460327	1d32fedf-8126-4503-8938-72f3db6ce187	1465
1467	uri://ed-fi.org/LanguageDescriptor	gwi	Gwich'in	Gwich'in	\N	\N	\N	2022-11-17 17:07:49.468986	2022-11-17 17:07:49.468944	c05073ff-1a03-4bdc-9bcf-1a962d7ad0a0	1467
1469	uri://ed-fi.org/LanguageDescriptor	her	Herero	Herero	\N	\N	\N	2022-11-17 17:07:49.479235	2022-11-17 17:07:49.479202	04bc4916-8d46-4095-b4c6-099d9a586afd	1469
1470	uri://ed-fi.org/LanguageDescriptor	hit	Hittite	Hittite	\N	\N	\N	2022-11-17 17:07:49.484225	2022-11-17 17:07:49.484183	ce1a18dd-ff48-4596-90eb-bf1f5094201b	1470
1473	uri://ed-fi.org/LanguageDescriptor	hup	Hupa	Hupa	\N	\N	\N	2022-11-17 17:07:49.49835	2022-11-17 17:07:49.498314	17b30ba5-8dc1-4abc-ae7f-aa29114d04ef	1473
1475	uri://ed-fi.org/LanguageDescriptor	ido	Ido	Ido	\N	\N	\N	2022-11-17 17:07:49.506838	2022-11-17 17:07:49.506802	8e094505-7a2e-4599-8076-f86c073a87d9	1475
1478	uri://ed-fi.org/LanguageDescriptor	ind	Indonesian	Indonesian	\N	\N	\N	2022-11-17 17:07:49.521712	2022-11-17 17:07:49.521678	83e710cf-88a1-4126-ad5e-2d46d1c99652	1478
1480	uri://ed-fi.org/LanguageDescriptor	ira	Iranian languages	Iranian languages	\N	\N	\N	2022-11-17 17:07:49.531472	2022-11-17 17:07:49.531373	373180e8-260e-4c38-a7ad-b9e39ced209e	1480
1482	uri://ed-fi.org/LanguageDescriptor	jbo	Lojban	Lojban	\N	\N	\N	2022-11-17 17:07:49.539863	2022-11-17 17:07:49.539826	6b32306b-c90e-46e9-a831-c2f7f4d6c7fd	1482
1485	uri://ed-fi.org/LanguageDescriptor	kam	Kamba	Kamba	\N	\N	\N	2022-11-17 17:07:49.551291	2022-11-17 17:07:49.551258	12d17273-9773-41af-a060-d5c1770f847e	1485
1487	uri://ed-fi.org/LanguageDescriptor	kau	Kanuri	Kanuri	\N	\N	\N	2022-11-17 17:07:49.559566	2022-11-17 17:07:49.559502	2b226aad-6f2d-43f6-ab61-a5be2f27e939	1487
1489	uri://ed-fi.org/LanguageDescriptor	kha	Khasi	Khasi	\N	\N	\N	2022-11-17 17:07:49.567473	2022-11-17 17:07:49.567438	bb589e3c-f10e-46a0-a214-c58d85cba9ff	1489
1491	uri://ed-fi.org/LanguageDescriptor	kok	Konkani	Konkani	\N	\N	\N	2022-11-17 17:07:49.577296	2022-11-17 17:07:49.577263	f8aec382-3703-4b10-80dd-5382640e5821	1491
1494	uri://ed-fi.org/LanguageDescriptor	krc	Karachay-Balkar	Karachay-Balkar	\N	\N	\N	2022-11-17 17:07:49.589202	2022-11-17 17:07:49.589166	61962e2b-8268-41b9-8d1d-b9607d5391dc	1494
1496	uri://ed-fi.org/LanguageDescriptor	kur	Kurdish	Kurdish	\N	\N	\N	2022-11-17 17:07:49.601099	2022-11-17 17:07:49.601066	0569c438-ea3c-45e5-a764-8cb938246a80	1496
1498	uri://ed-fi.org/LanguageDescriptor	lam	Lamba	Lamba	\N	\N	\N	2022-11-17 17:07:49.608776	2022-11-17 17:07:49.608741	3cbef4f6-ccb7-47fa-8e68-05cd66206f0f	1498
1500	uri://ed-fi.org/LanguageDescriptor	lez	Lezghian	Lezghian	\N	\N	\N	2022-11-17 17:07:49.616944	2022-11-17 17:07:49.616909	cf932396-d0fd-404f-a3a9-e6cbf033863f	1500
1502	uri://ed-fi.org/LanguageDescriptor	lol	Mongo	Mongo	\N	\N	\N	2022-11-17 17:07:49.625362	2022-11-17 17:07:49.62533	cb48ad63-08d2-4f41-8936-f4a47a68d2b2	1502
1503	uri://ed-fi.org/LanguageDescriptor	lub	Luba-Katanga	Luba-Katanga	\N	\N	\N	2022-11-17 17:07:49.631192	2022-11-17 17:07:49.630873	d55edafb-0eb5-4923-a1ce-4a49196d289f	1503
1506	uri://ed-fi.org/LanguageDescriptor	mac	Macedonian	Macedonian	\N	\N	\N	2022-11-17 17:07:49.643113	2022-11-17 17:07:49.643082	3c759fd8-9d20-4615-ac4a-fae77933972b	1506
1508	uri://ed-fi.org/LanguageDescriptor	mai	Maithili	Maithili	\N	\N	\N	2022-11-17 17:07:49.651469	2022-11-17 17:07:49.651437	406ea665-b7cf-4971-8f84-d44aadb16116	1508
1510	uri://ed-fi.org/LanguageDescriptor	mao	Maori	Maori	\N	\N	\N	2022-11-17 17:07:49.659357	2022-11-17 17:07:49.659325	b75c2bec-6080-4bc5-b8f7-18c643608690	1510
1512	uri://ed-fi.org/LanguageDescriptor	may	Malay	Malay	\N	\N	\N	2022-11-17 17:07:49.667855	2022-11-17 17:07:49.667819	4e0dfbe7-a71c-4413-b334-595bb5ffa48b	1512
1515	uri://ed-fi.org/LanguageDescriptor	min	Minangkabau	Minangkabau	\N	\N	\N	2022-11-17 17:07:49.680568	2022-11-17 17:07:49.680536	c50d2dd2-3895-465e-b1df-a7bd8de3eedc	1515
1517	uri://ed-fi.org/LanguageDescriptor	mlt	Maltese	Maltese	\N	\N	\N	2022-11-17 17:07:49.6884	2022-11-17 17:07:49.688367	a6bcd347-acc8-4f8d-8d24-c7d61dd18672	1517
1519	uri://ed-fi.org/LanguageDescriptor	moh	Mohawk	Mohawk	\N	\N	\N	2022-11-17 17:07:49.697142	2022-11-17 17:07:49.697111	9ce709ac-b956-4d87-a92f-51259a5c2203	1519
1521	uri://ed-fi.org/LanguageDescriptor	mun	Munda languages	Munda languages	\N	\N	\N	2022-11-17 17:07:49.70507	2022-11-17 17:07:49.705039	31fccae5-3aee-4823-a170-409659950a7e	1521
1522	uri://ed-fi.org/LanguageDescriptor	mwl	Mirandese	Mirandese	\N	\N	\N	2022-11-17 17:07:49.709863	2022-11-17 17:07:49.709807	5c42e425-91c7-489d-9fa3-eb000e7dde8a	1522
1524	uri://ed-fi.org/LanguageDescriptor	nah	Nahuatl languages	Nahuatl languages	\N	\N	\N	2022-11-17 17:07:49.718322	2022-11-17 17:07:49.718154	94e4b12f-f599-4ae4-9e98-5ecf3fd7c438	1524
1413	uri://ed-fi.org/LanguageDescriptor	ben	Bengali	Bengali	\N	\N	\N	2022-11-17 17:07:49.232065	2022-11-17 17:07:49.23203	d1e86b7a-32fe-48d5-ba64-34dfb1a96b4b	1413
1415	uri://ed-fi.org/LanguageDescriptor	bik	Bikol	Bikol	\N	\N	\N	2022-11-17 17:07:49.240067	2022-11-17 17:07:49.24003	fd03471e-0651-47d6-9d94-68fcb4ed5199	1415
1418	uri://ed-fi.org/LanguageDescriptor	bra	Braj	Braj	\N	\N	\N	2022-11-17 17:07:49.253555	2022-11-17 17:07:49.253499	adeab52e-3a4c-415a-acc9-0a8a46e6342b	1418
1420	uri://ed-fi.org/LanguageDescriptor	bug	Buginese	Buginese	\N	\N	\N	2022-11-17 17:07:49.263676	2022-11-17 17:07:49.263625	5f5317dd-9cd9-4c41-8daf-9c8d063cc88a	1420
1421	uri://ed-fi.org/LanguageDescriptor	bur	Burmese	Burmese	\N	\N	\N	2022-11-17 17:07:49.269138	2022-11-17 17:07:49.268897	1aa91d4b-c86f-432d-8089-518f765c6ac2	1421
1424	uri://ed-fi.org/LanguageDescriptor	cau	Caucasian languages	Caucasian languages	\N	\N	\N	2022-11-17 17:07:49.280551	2022-11-17 17:07:49.279847	2d58ad07-7e36-44ab-8cef-e7e422dab9ec	1424
1425	uri://ed-fi.org/LanguageDescriptor	cel	Celtic languages	Celtic languages	\N	\N	\N	2022-11-17 17:07:49.286145	2022-11-17 17:07:49.285929	c444364f-f621-4a4a-89bc-ebf357dd7a77	1425
1427	uri://ed-fi.org/LanguageDescriptor	chg	Chagatai	Chagatai	\N	\N	\N	2022-11-17 17:07:49.29539	2022-11-17 17:07:49.295271	3d026ca4-223b-4e59-9f23-1dd97c571f0d	1427
1430	uri://ed-fi.org/LanguageDescriptor	chy	Cheyenne	Cheyenne	\N	\N	\N	2022-11-17 17:07:49.308337	2022-11-17 17:07:49.308179	6365b390-b7b6-4e13-96a7-a6ba624622bd	1430
1432	uri://ed-fi.org/LanguageDescriptor	cos	Corsican	Corsican	\N	\N	\N	2022-11-17 17:07:49.316897	2022-11-17 17:07:49.316859	d062d3a4-b4b9-4b93-9659-1113946ed078	1432
1434	uri://ed-fi.org/LanguageDescriptor	cre	Cree	Cree	\N	\N	\N	2022-11-17 17:07:49.325332	2022-11-17 17:07:49.325264	469b1a36-d3db-413f-9119-ce0370b13bc3	1434
1437	uri://ed-fi.org/LanguageDescriptor	dak	Dakota	Dakota	\N	\N	\N	2022-11-17 17:07:49.336615	2022-11-17 17:07:49.33658	e743f1f7-f6e3-4aef-abaf-27df2249df0e	1437
1439	uri://ed-fi.org/LanguageDescriptor	del	Delaware	Delaware	\N	\N	\N	2022-11-17 17:07:49.344478	2022-11-17 17:07:49.344445	b5bc0175-934c-463f-a79c-4536fd8cba81	1439
1441	uri://ed-fi.org/LanguageDescriptor	dra	Dravidian languages	Dravidian languages	\N	\N	\N	2022-11-17 17:07:49.352356	2022-11-17 17:07:49.352321	ff2c40fb-726b-4f5a-af57-80c1a5c3bd01	1441
1443	uri://ed-fi.org/LanguageDescriptor	dzo	Dzongkha	Dzongkha	\N	\N	\N	2022-11-17 17:07:49.360247	2022-11-17 17:07:49.360212	7e750682-416c-4c86-a001-6578b3a8b725	1443
1445	uri://ed-fi.org/LanguageDescriptor	elx	Elamite	Elamite	\N	\N	\N	2022-11-17 17:07:49.368366	2022-11-17 17:07:49.368332	0210ecef-5766-4342-9bed-be27a547e519	1445
1446	uri://ed-fi.org/LanguageDescriptor	enm	English, Middle (1100-1500)	English, Middle (1100-1500)	\N	\N	\N	2022-11-17 17:07:49.375583	2022-11-17 17:07:49.375526	2906b46f-cee5-42cf-b6f5-df12e175a51d	1446
1448	uri://ed-fi.org/LanguageDescriptor	ewo	Ewondo	Ewondo	\N	\N	\N	2022-11-17 17:07:49.386396	2022-11-17 17:07:49.386263	6d620ccd-83d4-43aa-8d43-67967d937905	1448
1451	uri://ed-fi.org/LanguageDescriptor	fin	Finnish	Finnish	\N	\N	\N	2022-11-17 17:07:49.397578	2022-11-17 17:07:49.397544	4c95ad56-9e32-4a09-a15f-37b502273e82	1451
1452	uri://ed-fi.org/LanguageDescriptor	fon	Fon	Fon	\N	\N	\N	2022-11-17 17:07:49.402387	2022-11-17 17:07:49.40229	4561f7e8-c320-496c-b4ca-d2bab9b48d26	1452
1454	uri://ed-fi.org/LanguageDescriptor	frr	Northern Frisian	Northern Frisian	\N	\N	\N	2022-11-17 17:07:49.410614	2022-11-17 17:07:49.410577	b6b37c77-1985-45c9-a9a8-497f6630e66f	1454
1456	uri://ed-fi.org/LanguageDescriptor	fur	Friulian	Friulian	\N	\N	\N	2022-11-17 17:07:49.418721	2022-11-17 17:07:49.41863	c834f20b-dfd2-43e0-9f19-7afe2bebee9e	1456
1458	uri://ed-fi.org/LanguageDescriptor	gem	Germanic languages	Germanic languages	\N	\N	\N	2022-11-17 17:07:49.428194	2022-11-17 17:07:49.428147	90afb989-18a7-4c69-b913-f4649c77f93c	1458
1460	uri://ed-fi.org/LanguageDescriptor	gil	Gilbertese	Gilbertese	\N	\N	\N	2022-11-17 17:07:49.436179	2022-11-17 17:07:49.436138	94b2cbac-a77b-47fa-a3ac-59c5e94a9b32	1460
1461	uri://ed-fi.org/LanguageDescriptor	gle	Irish	Irish	\N	\N	\N	2022-11-17 17:07:49.442483	2022-11-17 17:07:49.442436	f357203f-747c-46e7-8e64-2b5eeb21cc0c	1461
1463	uri://ed-fi.org/LanguageDescriptor	goh	German, Old High (ca.750-1050)	German, Old High (ca.750-1050)	\N	\N	\N	2022-11-17 17:07:49.450886	2022-11-17 17:07:49.45085	de52aff3-26be-48c9-85ec-5f17e533ca47	1463
1464	uri://ed-fi.org/LanguageDescriptor	gor	Gorontalo	Gorontalo	\N	\N	\N	2022-11-17 17:07:49.456928	2022-11-17 17:07:49.455811	7f106f3f-6b08-4edd-974b-2854ffd891b2	1464
1466	uri://ed-fi.org/LanguageDescriptor	gre	Greek, Modern (1453-)	Greek, Modern (1453-)	\N	\N	\N	2022-11-17 17:07:49.465124	2022-11-17 17:07:49.465088	d120c26a-26bd-4854-ba47-1ae5a9b72942	1466
1468	uri://ed-fi.org/LanguageDescriptor	haw	Hawaiian	Hawaiian	\N	\N	\N	2022-11-17 17:07:49.474391	2022-11-17 17:07:49.474357	6640d164-13d7-4b2d-9f92-4bf4b2b85e96	1468
1471	uri://ed-fi.org/LanguageDescriptor	hmo	Hiri Motu	Hiri Motu	\N	\N	\N	2022-11-17 17:07:49.489364	2022-11-17 17:07:49.489329	c9655e37-6dcd-4d48-939f-c942aa80b304	1471
1472	uri://ed-fi.org/LanguageDescriptor	hsb	Upper Sorbian	Upper Sorbian	\N	\N	\N	2022-11-17 17:07:49.494453	2022-11-17 17:07:49.494356	7b3ae1b9-0209-4874-82bc-6c0d2bdc8740	1472
1474	uri://ed-fi.org/LanguageDescriptor	ibo	Igbo	Igbo	\N	\N	\N	2022-11-17 17:07:49.503471	2022-11-17 17:07:49.503421	e5f18912-cc5d-4564-a38b-fe93e7941fbe	1474
1476	uri://ed-fi.org/LanguageDescriptor	ijo	Ijo languages	Ijo languages	\N	\N	\N	2022-11-17 17:07:49.511611	2022-11-17 17:07:49.511577	75b7a0b6-96e0-4117-9f4b-d68fc2d41e14	1476
1477	uri://ed-fi.org/LanguageDescriptor	ina	Interlingua (International Auxiliary Language Association)	Interlingua (International Auxiliary Language Association)	\N	\N	\N	2022-11-17 17:07:49.518431	2022-11-17 17:07:49.518393	21c9f3a9-e1bf-43ad-b48c-856ddb62bb1c	1477
1479	uri://ed-fi.org/LanguageDescriptor	inh	Ingush	Ingush	\N	\N	\N	2022-11-17 17:07:49.526538	2022-11-17 17:07:49.526505	551ea51a-44dd-42d5-bbc6-235e5d44eb26	1479
1481	uri://ed-fi.org/LanguageDescriptor	ita	Italian	Italian	\N	\N	\N	2022-11-17 17:07:49.534812	2022-11-17 17:07:49.534777	922b9558-9127-4a19-af88-f447bef5c08f	1481
1483	uri://ed-fi.org/LanguageDescriptor	jpr	Judeo-Persian	Judeo-Persian	\N	\N	\N	2022-11-17 17:07:49.543146	2022-11-17 17:07:49.543112	f36db3df-1655-4506-a633-5495526cb778	1483
1484	uri://ed-fi.org/LanguageDescriptor	kaa	Kara-Kalpak	Kara-Kalpak	\N	\N	\N	2022-11-17 17:07:49.547913	2022-11-17 17:07:49.547875	62e6a036-e026-4915-a4f4-203666d3ea1e	1484
1486	uri://ed-fi.org/LanguageDescriptor	kar	Karen languages	Karen languages	\N	\N	\N	2022-11-17 17:07:49.556012	2022-11-17 17:07:49.55591	f69564e4-d158-4932-9c88-0bc671fd6491	1486
1488	uri://ed-fi.org/LanguageDescriptor	kaz	Kazakh	Kazakh	\N	\N	\N	2022-11-17 17:07:49.564015	2022-11-17 17:07:49.563976	3e49f3a8-c976-42c6-b0c7-a846a104ae0d	1488
1490	uri://ed-fi.org/LanguageDescriptor	khm	Central Khmer	Central Khmer	\N	\N	\N	2022-11-17 17:07:49.572687	2022-11-17 17:07:49.572654	a0058bb9-1f88-419c-bfe7-36fd118e51d6	1490
1492	uri://ed-fi.org/LanguageDescriptor	kon	Kongo	Kongo	\N	\N	\N	2022-11-17 17:07:49.580955	2022-11-17 17:07:49.580921	70104e02-f6e6-483e-aafb-4e8d32bb766a	1492
1493	uri://ed-fi.org/LanguageDescriptor	kos	Kosraean	Kosraean	\N	\N	\N	2022-11-17 17:07:49.586106	2022-11-17 17:07:49.586056	89655cad-5a4d-4904-8edf-5b04ec1a834c	1493
1495	uri://ed-fi.org/LanguageDescriptor	kro	Kru languages	Kru languages	\N	\N	\N	2022-11-17 17:07:49.596083	2022-11-17 17:07:49.596049	63d06487-0ed2-4507-857c-142c95828472	1495
1497	uri://ed-fi.org/LanguageDescriptor	lad	Ladino	Ladino	\N	\N	\N	2022-11-17 17:07:49.605198	2022-11-17 17:07:49.605156	7a525678-2b07-48c5-8a1e-b273b3863575	1497
1499	uri://ed-fi.org/LanguageDescriptor	lat	Latin	Latin	\N	\N	\N	2022-11-17 17:07:49.613241	2022-11-17 17:07:49.613139	747d6447-e821-4640-a51a-170439a9b502	1499
1501	uri://ed-fi.org/LanguageDescriptor	lin	Lingala	Lingala	\N	\N	\N	2022-11-17 17:07:49.621934	2022-11-17 17:07:49.621835	ad030463-a2aa-49dc-a7ae-bea1f92e407f	1501
1504	uri://ed-fi.org/LanguageDescriptor	lui	Luiseno	Luiseno	\N	\N	\N	2022-11-17 17:07:49.633916	2022-11-17 17:07:49.633883	a28ecd5b-9804-499b-8121-7b42b83bf5d0	1504
1505	uri://ed-fi.org/LanguageDescriptor	luo	Luo (Kenya and Tanzania)	Luo (Kenya and Tanzania)	\N	\N	\N	2022-11-17 17:07:49.639774	2022-11-17 17:07:49.639673	a7f6f1ec-00e5-4792-974a-22952d50b2be	1505
1507	uri://ed-fi.org/LanguageDescriptor	mag	Magahi	Magahi	\N	\N	\N	2022-11-17 17:07:49.647883	2022-11-17 17:07:49.647848	21507e2d-cb50-4daf-a5e2-3de510f8492e	1507
1509	uri://ed-fi.org/LanguageDescriptor	mal	Malayalam	Malayalam	\N	\N	\N	2022-11-17 17:07:49.656005	2022-11-17 17:07:49.655969	d25226f9-5051-474c-9058-3ba0de63c573	1509
1511	uri://ed-fi.org/LanguageDescriptor	mar	Marathi	Marathi	\N	\N	\N	2022-11-17 17:07:49.664148	2022-11-17 17:07:49.664117	41bc890e-e712-4e65-90b3-26bddf623d37	1511
1513	uri://ed-fi.org/LanguageDescriptor	mdr	Mandar	Mandar	\N	\N	\N	2022-11-17 17:07:49.67149	2022-11-17 17:07:49.671458	0c20aad8-dbe3-458f-8755-812702ca6d58	1513
1514	uri://ed-fi.org/LanguageDescriptor	mga	Irish, Middle (900-1200)	Irish, Middle (900-1200)	\N	\N	\N	2022-11-17 17:07:49.677854	2022-11-17 17:07:49.677545	dc3433bd-0996-4e41-9577-4ade0e48d4fd	1514
1516	uri://ed-fi.org/LanguageDescriptor	mkh	Mon-Khmer languages	Mon-Khmer languages	\N	\N	\N	2022-11-17 17:07:49.68567	2022-11-17 17:07:49.685598	bda9d3c6-8fcb-473d-b9e9-c62978ac177d	1516
1518	uri://ed-fi.org/LanguageDescriptor	mni	Manipuri	Manipuri	\N	\N	\N	2022-11-17 17:07:49.693426	2022-11-17 17:07:49.693329	a6b807d9-7bdf-413a-92e1-b01cac1dd664	1518
1520	uri://ed-fi.org/LanguageDescriptor	mos	Mossi	Mossi	\N	\N	\N	2022-11-17 17:07:49.701708	2022-11-17 17:07:49.701674	154586d3-263a-454f-93b7-571cd3c4de9e	1520
1523	uri://ed-fi.org/LanguageDescriptor	myn	Mayan languages	Mayan languages	\N	\N	\N	2022-11-17 17:07:49.712955	2022-11-17 17:07:49.712922	1d92cad1-8d5c-4680-bb2c-ae9b6693f13c	1523
1525	uri://ed-fi.org/LanguageDescriptor	nap	Neapolitan	Neapolitan	\N	\N	\N	2022-11-17 17:07:49.721135	2022-11-17 17:07:49.721104	cf95957c-0430-4bbe-8db1-bbb8330f970a	1525
1526	uri://ed-fi.org/LanguageDescriptor	nic	Niger-Kordofanian languages	Niger-Kordofanian languages	\N	\N	\N	2022-11-17 17:07:49.726018	2022-11-17 17:07:49.725955	2072971d-81ba-490a-bff3-7c881ecfcfe3	1526
1529	uri://ed-fi.org/LanguageDescriptor	nym	Nyamwezi	Nyamwezi	\N	\N	\N	2022-11-17 17:07:49.737031	2022-11-17 17:07:49.736997	9dc4ce38-c2ca-4e4e-8317-cf77e14e2423	1529
1531	uri://ed-fi.org/LanguageDescriptor	oci	Occitan (post 1500)	Occitan (post 1500)	\N	\N	\N	2022-11-17 17:07:49.745557	2022-11-17 17:07:49.745524	53369075-124d-4d8f-80de-f1859de03013	1531
1533	uri://ed-fi.org/LanguageDescriptor	osa	Osage	Osage	\N	\N	\N	2022-11-17 17:07:49.757668	2022-11-17 17:07:49.757613	3778acf6-68e2-4a1d-9b95-54a2b1a8e621	1533
1536	uri://ed-fi.org/LanguageDescriptor	pal	Pahlavi	Pahlavi	\N	\N	\N	2022-11-17 17:07:49.774336	2022-11-17 17:07:49.774321	73c82e2f-e14e-4d4a-ae28-23cc85a7a889	1536
1537	uri://ed-fi.org/LanguageDescriptor	pau	Palauan	Palauan	\N	\N	\N	2022-11-17 17:07:49.78144	2022-11-17 17:07:49.78117	643b2ac4-c337-437d-bee4-94d23ae2d881	1537
1539	uri://ed-fi.org/LanguageDescriptor	phn	Phoenician	Phoenician	\N	\N	\N	2022-11-17 17:07:49.789102	2022-11-17 17:07:49.789067	b8cb5423-f09c-4533-a3c4-0e96738c8671	1539
1541	uri://ed-fi.org/LanguageDescriptor	por	Portuguese	Portuguese	\N	\N	\N	2022-11-17 17:07:49.796813	2022-11-17 17:07:49.796781	479c578f-c231-40a9-9de1-ed8fb497caa1	1541
1543	uri://ed-fi.org/LanguageDescriptor	rap	Rapanui	Rapanui	\N	\N	\N	2022-11-17 17:07:49.805308	2022-11-17 17:07:49.805212	9480be4b-5fc8-4e25-90a7-b3fe8a887412	1543
1546	uri://ed-fi.org/LanguageDescriptor	run	Rundi	Rundi	\N	\N	\N	2022-11-17 17:07:49.818009	2022-11-17 17:07:49.817937	d4ee2e3a-26fb-486c-9e15-661545a6f8d3	1546
1549	uri://ed-fi.org/LanguageDescriptor	sai	South American Indian languages	South American Indian languages	\N	\N	\N	2022-11-17 17:07:49.833029	2022-11-17 17:07:49.832942	e7a71da5-5376-43d4-8000-12360e3e8d01	1549
1551	uri://ed-fi.org/LanguageDescriptor	sas	Sasak	Sasak	\N	\N	\N	2022-11-17 17:07:49.842912	2022-11-17 17:07:49.84287	ab709713-4912-4548-a7cb-8b8169b81bd3	1551
1553	uri://ed-fi.org/LanguageDescriptor	sel	Selkup	Selkup	\N	\N	\N	2022-11-17 17:07:49.852893	2022-11-17 17:07:49.852852	f47f5c6b-5e19-4925-a9d7-60e0114fbace	1553
1555	uri://ed-fi.org/LanguageDescriptor	shn	Shan	Shan	\N	\N	\N	2022-11-17 17:07:49.862257	2022-11-17 17:07:49.862222	35c9ff8c-80f3-4aee-9015-be7ec4000133	1555
1557	uri://ed-fi.org/LanguageDescriptor	slo	Slovak	Slovak	\N	\N	\N	2022-11-17 17:07:49.869941	2022-11-17 17:07:49.869909	40ce6693-e401-4d54-819a-9e670edf9170	1557
1559	uri://ed-fi.org/LanguageDescriptor	smi	Sami languages	Sami languages	\N	\N	\N	2022-11-17 17:07:49.878452	2022-11-17 17:07:49.878411	12f6e507-ff79-49a3-ba74-671eacf3f15e	1559
1562	uri://ed-fi.org/LanguageDescriptor	snd	Sindhi	Sindhi	\N	\N	\N	2022-11-17 17:07:49.893182	2022-11-17 17:07:49.89315	a006a2e6-164c-471c-a326-e1df861a0d46	1562
1564	uri://ed-fi.org/LanguageDescriptor	son	Songhai languages	Songhai languages	\N	\N	\N	2022-11-17 17:07:49.901852	2022-11-17 17:07:49.901818	4d669991-fd36-4122-8e86-76749daa975e	1564
1566	uri://ed-fi.org/LanguageDescriptor	srr	Serer	Serer	\N	\N	\N	2022-11-17 17:07:49.909832	2022-11-17 17:07:49.909801	e35ab464-60d6-4f07-acb1-bc6b7d912349	1566
1568	uri://ed-fi.org/LanguageDescriptor	sun	Sundanese	Sundanese	\N	\N	\N	2022-11-17 17:07:49.917558	2022-11-17 17:07:49.917526	7ba4b663-9e4a-4214-8524-5f86bf22709b	1568
1569	uri://ed-fi.org/LanguageDescriptor	sux	Sumerian	Sumerian	\N	\N	\N	2022-11-17 17:07:49.92219	2022-11-17 17:07:49.922156	c13d93ff-54d4-4e81-b0fe-b0d11a401e4c	1569
1572	uri://ed-fi.org/LanguageDescriptor	tai	Tai languages	Tai languages	\N	\N	\N	2022-11-17 17:07:49.933715	2022-11-17 17:07:49.933682	7a17a79d-ba33-427a-9032-d5d8b73bf622	1572
1574	uri://ed-fi.org/LanguageDescriptor	tem	Timne	Timne	\N	\N	\N	2022-11-17 17:07:49.94299	2022-11-17 17:07:49.942958	f47e719c-c627-4286-974a-c3531db1ebb8	1574
1575	uri://ed-fi.org/LanguageDescriptor	tet	Tetum	Tetum	\N	\N	\N	2022-11-17 17:07:49.947674	2022-11-17 17:07:49.947618	5a15ef03-e61d-449b-953d-8ce5373602e3	1575
1577	uri://ed-fi.org/LanguageDescriptor	tib	Tibetan	Tibetan	\N	\N	\N	2022-11-17 17:07:49.955336	2022-11-17 17:07:49.955301	64b8dce4-bde9-48bf-bbe3-9a19e2ca6ffc	1577
1579	uri://ed-fi.org/LanguageDescriptor	tkl	Tokelau	Tokelau	\N	\N	\N	2022-11-17 17:07:49.963425	2022-11-17 17:07:49.96339	5df5bb45-296a-463f-921e-42fb4c2377b4	1579
1580	uri://ed-fi.org/LanguageDescriptor	tli	Tlingit	Tlingit	\N	\N	\N	2022-11-17 17:07:49.968304	2022-11-17 17:07:49.968268	1994f7c5-8cc0-479e-9a15-29a66931a8e1	1580
1582	uri://ed-fi.org/LanguageDescriptor	tpi	Tok Pisin	Tok Pisin	\N	\N	\N	2022-11-17 17:07:49.976606	2022-11-17 17:07:49.976532	c1e68fd2-4de1-48d5-a6d8-6d16162c7d83	1582
1584	uri://ed-fi.org/LanguageDescriptor	tuk	Turkmen	Turkmen	\N	\N	\N	2022-11-17 17:07:49.986884	2022-11-17 17:07:49.986842	fb4cbe8a-f821-4f85-b1e9-fe596a7cde50	1584
1586	uri://ed-fi.org/LanguageDescriptor	tut	Altaic languages	Altaic languages	\N	\N	\N	2022-11-17 17:07:49.995326	2022-11-17 17:07:49.995292	a57e88cf-c50e-4ed5-9745-25c4bad23d79	1586
1587	uri://ed-fi.org/LanguageDescriptor	twi	Twi	Twi	\N	\N	\N	2022-11-17 17:07:50.000482	2022-11-17 17:07:50.000436	693e7f48-c7b6-4e5b-b051-6017e67a4c03	1587
1589	uri://ed-fi.org/LanguageDescriptor	umb	Umbundu	Umbundu	\N	\N	\N	2022-11-17 17:07:50.009175	2022-11-17 17:07:50.009132	6b5241fa-183e-41ba-8c1a-f6d4e0f26e83	1589
1592	uri://ed-fi.org/LanguageDescriptor	vie	Vietnamese	Vietnamese	\N	\N	\N	2022-11-17 17:07:50.023916	2022-11-17 17:07:50.023882	8fdbd321-cbff-4641-9be1-9a3ed24abef5	1592
1594	uri://ed-fi.org/LanguageDescriptor	was	Washo	Washo	\N	\N	\N	2022-11-17 17:07:50.032482	2022-11-17 17:07:50.032427	9d71ffc5-14f2-47cd-8b9c-91b5cbb0a2a2	1594
1597	uri://ed-fi.org/LanguageDescriptor	xho	Xhosa	Xhosa	\N	\N	\N	2022-11-17 17:07:50.046749	2022-11-17 17:07:50.046715	33b4d521-2c39-48e7-ae93-443063a6c89c	1597
1598	uri://ed-fi.org/LanguageDescriptor	yap	Yapese	Yapese	\N	\N	\N	2022-11-17 17:07:50.053013	2022-11-17 17:07:50.052977	ae77c447-6ae4-4796-ba39-67f850e9c32e	1598
1600	uri://ed-fi.org/LanguageDescriptor	zap	Zapotec	Zapotec	\N	\N	\N	2022-11-17 17:07:50.06113	2022-11-17 17:07:50.061095	f4c8a6c9-adc0-45ac-a4f6-110029a1978e	1600
1601	uri://ed-fi.org/LanguageDescriptor	zen	Zenaga	Zenaga	\N	\N	\N	2022-11-17 17:07:50.067221	2022-11-17 17:07:50.067171	14ffbca6-c707-4d77-b1f4-255d4b1c79d3	1601
1604	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language or Two-way Immersion	Dual Language or Two-way Immersion	Dual Language or Two-way Immersion	\N	\N	\N	2022-11-17 17:07:50.106921	2022-11-17 17:07:50.10555	1c8c9b6b-7c84-4674-a3ff-cec8fcf336c3	1604
1606	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Missing	Missing	Missing	\N	\N	\N	2022-11-17 17:07:50.119857	2022-11-17 17:07:50.119823	f289ae60-50ec-4ef6-a801-1fc2387e48c8	1606
1608	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:50.127987	2022-11-17 17:07:50.127953	8de84df3-6369-48c7-9f0a-5451762a97e6	1608
1609	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual or Early-Exit Bilingual	Transitional Bilingual Education or Early-Exit Bilingual Education	Transitional Bilingual Education or Early-Exit Bilingual Education	\N	\N	\N	2022-11-17 17:07:50.132898	2022-11-17 17:07:50.132841	d1e6e6c9-faff-48d7-8876-704b666a0e3d	1609
1612	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Transitional Bilingual	DEPRECATED: Transitional Bilingual	DEPRECATED: Transitional Bilingual	\N	\N	\N	2022-11-17 17:07:50.144055	2022-11-17 17:07:50.144019	0cfdc76e-e63a-492c-8472-340b23fcca89	1612
1614	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Heritage Language	DEPRECATED: Heritage Language	DEPRECATED: Heritage Language	\N	\N	\N	2022-11-17 17:07:50.152187	2022-11-17 17:07:50.152152	5012e8c9-701e-44ad-ae00-d348df728672	1614
1616	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Structured English Immersion	DEPRECATED: Structured English Immersion	DEPRECATED: Structured English Immersion	\N	\N	\N	2022-11-17 17:07:50.160262	2022-11-17 17:07:50.160226	0d8022e3-e0d5-4f70-87f9-8125ecf525a5	1616
1619	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Pull-Out ESL	DEPRECATED: Pull-Out ESL	DEPRECATED: Pull-Out ESL	\N	\N	\N	2022-11-17 17:07:50.173564	2022-11-17 17:07:50.173529	edfa4f6a-5caa-4d4a-b08b-daa9431960e7	1619
1621	uri://ed-fi.org/LanguageUseDescriptor	Dominant language	Dominant language	Dominant language	\N	\N	\N	2022-11-17 17:07:50.205633	2022-11-17 17:07:50.204306	a1ca6787-0cc7-4fa3-8527-203d24f9cd12	1621
1622	uri://ed-fi.org/LanguageUseDescriptor	Home language	Home language	Home language	\N	\N	\N	2022-11-17 17:07:50.215571	2022-11-17 17:07:50.215281	f782ac47-9253-4ba9-9686-98a3f5f9a508	1622
1528	uri://ed-fi.org/LanguageDescriptor	nor	Norwegian	Norwegian	\N	\N	\N	2022-11-17 17:07:49.734414	2022-11-17 17:07:49.734207	3de5992b-aab9-42f2-a1d4-74129f6eabf8	1528
1530	uri://ed-fi.org/LanguageDescriptor	nyo	Nyoro	Nyoro	\N	\N	\N	2022-11-17 17:07:49.742227	2022-11-17 17:07:49.742172	2c810a16-713b-4dc1-9062-4bda8936b086	1530
1532	uri://ed-fi.org/LanguageDescriptor	ori	Oriya	Oriya	\N	\N	\N	2022-11-17 17:07:49.750952	2022-11-17 17:07:49.75092	d13c9b4b-ff53-4403-bd0e-e8640c5c521c	1532
1534	uri://ed-fi.org/LanguageDescriptor	ota	Turkish, Ottoman (1500-1928)	Turkish, Ottoman (1500-1928)	\N	\N	\N	2022-11-17 17:07:49.760956	2022-11-17 17:07:49.760922	440bb48b-5a25-4d6c-aafa-23dafb4a84db	1534
1535	uri://ed-fi.org/LanguageDescriptor	paa	Papuan languages	Papuan languages	\N	\N	\N	2022-11-17 17:07:49.773075	2022-11-17 17:07:49.773022	adb4f63c-4d6a-4a2d-8f69-e05397a1604a	1535
1538	uri://ed-fi.org/LanguageDescriptor	per	Persian	Persian	\N	\N	\N	2022-11-17 17:07:49.7843	2022-11-17 17:07:49.784269	80e50a9e-9f4b-4a73-a6da-e2c481db3793	1538
1540	uri://ed-fi.org/LanguageDescriptor	pol	Polish	Polish	\N	\N	\N	2022-11-17 17:07:49.792795	2022-11-17 17:07:49.792763	851f705b-8ef6-4f0d-b98a-316d537a729b	1540
1542	uri://ed-fi.org/LanguageDescriptor	que	Quechua	Quechua	\N	\N	\N	2022-11-17 17:07:49.800896	2022-11-17 17:07:49.800864	17c0c246-580c-4a29-90d4-2577b6f99c4b	1542
1544	uri://ed-fi.org/LanguageDescriptor	roa	Romance languages	Romance languages	\N	\N	\N	2022-11-17 17:07:49.808748	2022-11-17 17:07:49.808717	6530433e-8400-4ca8-a0be-76f172ac10a1	1544
1545	uri://ed-fi.org/LanguageDescriptor	rom	Romany	Romany	\N	\N	\N	2022-11-17 17:07:49.814568	2022-11-17 17:07:49.813886	2b5bd7a2-b506-4dd1-b70c-79f891181ab7	1545
1547	uri://ed-fi.org/LanguageDescriptor	rus	Russian	Russian	\N	\N	\N	2022-11-17 17:07:49.82298	2022-11-17 17:07:49.822786	77943fb5-6a0e-4857-bf41-f357fcd9a0dd	1547
1548	uri://ed-fi.org/LanguageDescriptor	sag	Sango	Sango	\N	\N	\N	2022-11-17 17:07:49.829769	2022-11-17 17:07:49.827875	01318748-b85d-466c-8cff-50295c8cf6a8	1548
1550	uri://ed-fi.org/LanguageDescriptor	sam	Samaritan Aramaic	Samaritan Aramaic	\N	\N	\N	2022-11-17 17:07:49.839178	2022-11-17 17:07:49.838467	d3d4d664-7f58-4e68-9b0b-18f93f890f34	1550
1552	uri://ed-fi.org/LanguageDescriptor	scn	Sicilian	Sicilian	\N	\N	\N	2022-11-17 17:07:49.847542	2022-11-17 17:07:49.847477	79877ad9-2b32-4771-b968-cc175da5ca0f	1552
1554	uri://ed-fi.org/LanguageDescriptor	sga	Irish, Old (to 900)	Irish, Old (to 900)	\N	\N	\N	2022-11-17 17:07:49.858484	2022-11-17 17:07:49.858443	eb873320-571d-4f56-be0d-8da6a6a100c4	1554
1556	uri://ed-fi.org/LanguageDescriptor	sit	Sino-Tibetan languages	Sino-Tibetan languages	\N	\N	\N	2022-11-17 17:07:49.866683	2022-11-17 17:07:49.86665	38f4f6cd-877a-4107-b290-9c80f961aeac	1556
1558	uri://ed-fi.org/LanguageDescriptor	sma	Southern Sami	Southern Sami	\N	\N	\N	2022-11-17 17:07:49.874446	2022-11-17 17:07:49.87441	ab6e7ad3-1a88-447f-b447-799f937898a7	1558
1560	uri://ed-fi.org/LanguageDescriptor	smn	Inari Sami	Inari Sami	\N	\N	\N	2022-11-17 17:07:49.882074	2022-11-17 17:07:49.882041	6d775acc-9efe-464b-8db4-d737677ed4f4	1560
1561	uri://ed-fi.org/LanguageDescriptor	sms	Skolt Sami	Skolt Sami	\N	\N	\N	2022-11-17 17:07:49.890358	2022-11-17 17:07:49.890143	6fa77131-429a-409a-9872-5b511f4ef2ea	1561
1563	uri://ed-fi.org/LanguageDescriptor	sog	Sogdian	Sogdian	\N	\N	\N	2022-11-17 17:07:49.898651	2022-11-17 17:07:49.898555	f0aa76ed-b6e6-4ec9-9175-93060fb24685	1563
1565	uri://ed-fi.org/LanguageDescriptor	srn	Sranan Tongo	Sranan Tongo	\N	\N	\N	2022-11-17 17:07:49.906512	2022-11-17 17:07:49.906479	87c26dbc-7778-4dbc-8426-4d12abcd37f3	1565
1567	uri://ed-fi.org/LanguageDescriptor	ssw	Swati	Swati	\N	\N	\N	2022-11-17 17:07:49.914289	2022-11-17 17:07:49.914255	946205c0-40af-4355-8272-5dd9d910b9ff	1567
1570	uri://ed-fi.org/LanguageDescriptor	swe	Swedish	Swedish	\N	\N	\N	2022-11-17 17:07:49.925273	2022-11-17 17:07:49.925242	5f01e4ae-8431-484f-b8d3-5b49a7144505	1570
1571	uri://ed-fi.org/LanguageDescriptor	syr	Syriac	Syriac	\N	\N	\N	2022-11-17 17:07:49.930418	2022-11-17 17:07:49.930375	f4dde22e-61e4-4eb5-a50f-4a39c3796318	1571
1573	uri://ed-fi.org/LanguageDescriptor	tat	Tatar	Tatar	\N	\N	\N	2022-11-17 17:07:49.938873	2022-11-17 17:07:49.938777	12fd1f68-a9d9-4b43-99a0-1c934c004472	1573
1576	uri://ed-fi.org/LanguageDescriptor	tgl	Tagalog	Tagalog	\N	\N	\N	2022-11-17 17:07:49.951858	2022-11-17 17:07:49.951757	7fbee80d-c958-42ad-8d85-711de62aa4c4	1576
1578	uri://ed-fi.org/LanguageDescriptor	tir	Tigrinya	Tigrinya	\N	\N	\N	2022-11-17 17:07:49.960074	2022-11-17 17:07:49.959977	53bd9973-1cd2-4fe3-97c5-df09a732c871	1578
1581	uri://ed-fi.org/LanguageDescriptor	tog	Tonga (Nyasa)	Tonga (Nyasa)	\N	\N	\N	2022-11-17 17:07:49.97165	2022-11-17 17:07:49.971615	a097f0b9-d48c-4d19-979b-9fe68c995d1c	1581
1583	uri://ed-fi.org/LanguageDescriptor	tsn	Tswana	Tswana	\N	\N	\N	2022-11-17 17:07:49.980722	2022-11-17 17:07:49.980668	4ebbddd4-2138-4b71-9a7e-8076e758b5f6	1583
1585	uri://ed-fi.org/LanguageDescriptor	tup	Tupi languages	Tupi languages	\N	\N	\N	2022-11-17 17:07:49.989399	2022-11-17 17:07:49.989248	357a0fd4-6a82-4db9-90a9-9d6a89c5c990	1585
1588	uri://ed-fi.org/LanguageDescriptor	udm	Udmurt	Udmurt	\N	\N	\N	2022-11-17 17:07:50.004294	2022-11-17 17:07:50.004245	0677c3ae-b138-43f7-848b-7c249811d9e0	1588
1590	uri://ed-fi.org/LanguageDescriptor	urd	Urdu	Urdu	\N	\N	\N	2022-11-17 17:07:50.014021	2022-11-17 17:07:50.01398	d28de116-4545-468e-b07c-093200cf9792	1590
1591	uri://ed-fi.org/LanguageDescriptor	vai	Vai	Vai	\N	\N	\N	2022-11-17 17:07:50.019086	2022-11-17 17:07:50.019051	73c4b2e9-79c5-4638-bff4-8e80344fd1f6	1591
1593	uri://ed-fi.org/LanguageDescriptor	vot	Votic	Votic	\N	\N	\N	2022-11-17 17:07:50.029083	2022-11-17 17:07:50.028402	5ab2393d-e9e6-4cdf-ab99-ecbb30d62949	1593
1595	uri://ed-fi.org/LanguageDescriptor	wen	Sorbian languages	Sorbian languages	\N	\N	\N	2022-11-17 17:07:50.038017	2022-11-17 17:07:50.037975	c7876092-3253-4331-a237-3b1676acf95a	1595
1596	uri://ed-fi.org/LanguageDescriptor	wol	Wolof	Wolof	\N	\N	\N	2022-11-17 17:07:50.043057	2022-11-17 17:07:50.042975	d1a9afcf-9e0c-4271-bdb6-26bbcb853301	1596
1599	uri://ed-fi.org/LanguageDescriptor	yor	Yoruba	Yoruba	\N	\N	\N	2022-11-17 17:07:50.056172	2022-11-17 17:07:50.056138	471785d6-1f21-4191-9a44-96edb16c549f	1599
1602	uri://ed-fi.org/LanguageDescriptor	zul	Zulu	Zulu	\N	\N	\N	2022-11-17 17:07:50.070191	2022-11-17 17:07:50.070157	862df6f5-decd-4a07-8d6e-9bc03c455027	1602
1603	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content Classes with integrated ESL support	Content Classes with integrated ESL support	Content Classes with integrated ESL support	\N	\N	\N	2022-11-17 17:07:50.106928	2022-11-17 17:07:50.105547	5fda438f-46a3-4c7f-b195-164dfdf69b21	1603
1605	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	ESL or ELD	ESL or ELD	ESL or ELD	\N	\N	\N	2022-11-17 17:07:50.116526	2022-11-17 17:07:50.116282	2f3e33fe-b512-429e-913c-7fa748d62fad	1605
1607	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Newcomer programs	Newcomer programs	Newcomer programs	\N	\N	\N	2022-11-17 17:07:50.124649	2022-11-17 17:07:50.124557	87868350-fd81-42a7-a500-a6420dd59787	1607
1610	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Dual Language	DEPRECATED: Dual Language	DEPRECATED: Dual Language	\N	\N	\N	2022-11-17 17:07:50.136066	2022-11-17 17:07:50.136032	66e5dc4c-023b-4b3c-9f10-0ac13b63aca6	1610
1611	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Two-Way Immersion	DEPRECATED: Two-Way Immersion	DEPRECATED: Two-Way Immersion	\N	\N	\N	2022-11-17 17:07:50.140873	2022-11-17 17:07:50.140782	8f0ba9f8-31cd-4105-acc2-df9d0e21a345	1611
1613	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Developmental Bilingual	DEPRECATED: Developmental Bilingual	DEPRECATED: Developmental Bilingual	\N	\N	\N	2022-11-17 17:07:50.149193	2022-11-17 17:07:50.149142	b31891a5-0100-4199-ba87-b78dd380a7cf	1613
1615	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Sheltered English Instruction	DEPRECATED: Sheltered English Instruction	DEPRECATED: Sheltered English Instruction	\N	\N	\N	2022-11-17 17:07:50.156688	2022-11-17 17:07:50.156586	b34571ef-c194-4fd0-90e6-aceaa703c608	1615
1617	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	SDAIE	DEPRECATED: Specially Designed Academic Instruction Delivered In English	DEPRECATED: SDAIE - Specially Designed Academic Instruction Delivered In English	\N	\N	\N	2022-11-17 17:07:50.164892	2022-11-17 17:07:50.164857	3f79ea0d-a3de-46d3-9042-c1086f63c0bc	1617
1618	uri://ed-fi.org/LanguageInstructionProgramServiceDescriptor	Content-Based ESL	DEPRECATED: Content-Based ESL	DEPRECATED: Content-Based ESL	\N	\N	\N	2022-11-17 17:07:50.169616	2022-11-17 17:07:50.169562	8e452ef9-dc81-487b-a7c9-09d9924fc474	1618
1620	uri://ed-fi.org/LanguageUseDescriptor	Correspondence language	Correspondence language	Correspondence language	\N	\N	\N	2022-11-17 17:07:50.205621	2022-11-17 17:07:50.20431	e0985c9a-23b8-45d0-9c17-c2a1df42a300	1620
1623	uri://ed-fi.org/LanguageUseDescriptor	Native language	Native language	Native language	\N	\N	\N	2022-11-17 17:07:50.218944	2022-11-17 17:07:50.218909	6d6d9f4e-865a-432d-a06f-3abfeac59428	1623
1625	uri://ed-fi.org/LanguageUseDescriptor	Other language proficiency	Other language proficiency	Other language proficiency	\N	\N	\N	2022-11-17 17:07:50.226928	2022-11-17 17:07:50.226894	edc763b2-1050-47dd-af9a-e143d73a32a8	1625
1624	uri://ed-fi.org/LanguageUseDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:50.223642	2022-11-17 17:07:50.223353	c98bbafe-d398-4549-bb4b-61d016b985af	1624
1627	uri://ed-fi.org/LanguageUseDescriptor	Written language	Written language	Written language	\N	\N	\N	2022-11-17 17:07:50.234742	2022-11-17 17:07:50.234706	4d498cbc-f8c8-4ede-90de-acd3c036172d	1627
1629	uri://ed-fi.org/LearningStandardCategoryDescriptor	Practices	Practices	Practices	\N	\N	\N	2022-11-17 17:07:50.268872	2022-11-17 17:07:50.267292	87cfb06f-0e70-4d23-8d15-3024e89e3902	1629
1630	uri://ed-fi.org/LearningStandardCategoryDescriptor	Crosscutting Concepts	Crosscutting Concepts	Crosscutting Concepts	\N	\N	\N	2022-11-17 17:07:50.279269	2022-11-17 17:07:50.27922	3cb10dc0-f983-45fd-aaf4-a6bf1f83ce5c	1630
1632	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Mostly equivalent	Mostly equivalent	Mostly equivalent	\N	\N	\N	2022-11-17 17:07:50.309058	2022-11-17 17:07:50.307493	16a57551-4132-4ac2-bb57-917b7fcbcaf9	1632
1633	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Partially equivalent	Partially equivalent	Partially equivalent	\N	\N	\N	2022-11-17 17:07:50.319339	2022-11-17 17:07:50.319313	4bf0b0a7-cbb1-434f-ab47-a03599334bf7	1633
1636	uri://ed-fi.org/LearningStandardScopeDescriptor	Local education agency	Local education agency	Local education agency	\N	\N	\N	2022-11-17 17:07:50.354782	2022-11-17 17:07:50.353444	f4f59a2f-74f5-464a-944f-c4a95e155e14	1636
1637	uri://ed-fi.org/LearningStandardScopeDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:50.365618	2022-11-17 17:07:50.36448	c17e3a06-59be-408f-837a-a2cec53d8815	1637
1640	uri://ed-fi.org/LearningStandardScopeDescriptor	International	International	International	\N	\N	\N	2022-11-17 17:07:50.377298	2022-11-17 17:07:50.377264	13398768-8db6-4edf-84d7-22c22a578f9d	1640
1641	uri://ed-fi.org/LevelOfEducationDescriptor	Bachelor's	Bachelor's	Bachelor's	\N	\N	\N	2022-11-17 17:07:50.409976	2022-11-17 17:07:50.408697	eaf3ab93-4023-40e2-9646-0a3e28779424	1641
1643	uri://ed-fi.org/LevelOfEducationDescriptor	Did Not Graduate High School	Did Not Graduate High School	Did Not Graduate High School	\N	\N	\N	2022-11-17 17:07:50.420606	2022-11-17 17:07:50.420513	9254022f-d364-4700-b257-dca17e8d7904	1643
1645	uri://ed-fi.org/LevelOfEducationDescriptor	High School Diploma	High School Diploma	High School Diploma	\N	\N	\N	2022-11-17 17:07:50.428582	2022-11-17 17:07:50.428517	6a67efb2-4ab0-4370-8b19-fe2125ed3990	1645
1647	uri://ed-fi.org/LevelOfEducationDescriptor	Some College No Degree	Some College No Degree	Some College No Degree	\N	\N	\N	2022-11-17 17:07:50.436564	2022-11-17 17:07:50.436413	f5e90c47-7fda-44ba-8b72-9ca1c7ba0c10	1647
1649	uri://ed-fi.org/LicenseStatusDescriptor	Exempt	Exempt	Exempt	\N	\N	\N	2022-11-17 17:07:50.467927	2022-11-17 17:07:50.46654	c38936a9-483c-4cf3-ba96-23b0344ae0c1	1649
1650	uri://ed-fi.org/LicenseStatusDescriptor	Unregulated	Unregulated	Unregulated	\N	\N	\N	2022-11-17 17:07:50.478349	2022-11-17 17:07:50.478299	5bebefe8-7c54-4345-b8bb-6d1d8aad96f2	1650
1652	uri://ed-fi.org/LicenseTypeDescriptor	Before- and After-School Programs	Before- and After-School Programs	Before- and After-School Programs	\N	\N	\N	2022-11-17 17:07:50.50845	2022-11-17 17:07:50.506847	9a6ae149-cda5-49f6-8acf-7980af0ba9b5	1652
1653	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Program	Child Care Program	Child Care Program	\N	\N	\N	2022-11-17 17:07:50.518567	2022-11-17 17:07:50.518524	a45f34a7-0f03-4598-a162-e98fcce7013d	1653
1655	uri://ed-fi.org/LicenseTypeDescriptor	Day Treatment Program	Day Treatment Program	Day Treatment Program	\N	\N	\N	2022-11-17 17:07:50.526824	2022-11-17 17:07:50.526729	04a87a5d-bfec-4ef9-be27-8dc215e3b18b	1655
1657	uri://ed-fi.org/LicenseTypeDescriptor	Independent Foster Home	Independent Foster Home	Independent Foster Home	\N	\N	\N	2022-11-17 17:07:50.535577	2022-11-17 17:07:50.535522	9e4081fd-af5b-42d9-93ae-656b4021a3e8	1657
1659	uri://ed-fi.org/LicenseTypeDescriptor	Night Care	Night Care	Night Care	\N	\N	\N	2022-11-17 17:07:50.543492	2022-11-17 17:07:50.543458	24c4c327-d072-497c-8d16-30b8f34879fc	1659
1661	uri://ed-fi.org/LicenseTypeDescriptor	Residential Child Care	Residential Child Care	Residential Child Care	\N	\N	\N	2022-11-17 17:07:50.551173	2022-11-17 17:07:50.551141	d1fa5eea-fce7-48db-8308-844bf4f4d9a0	1661
1662	uri://ed-fi.org/LicenseTypeDescriptor	School Age Program	School Age Program	School Age Program	\N	\N	\N	2022-11-17 17:07:50.556324	2022-11-17 17:07:50.556214	cd9b1cc5-a001-44ab-8386-ac8083581bfd	1662
1664	uri://ed-fi.org/LicenseTypeDescriptor	Specialized Day Care	Specialized Day Care	Specialized Day Care	\N	\N	\N	2022-11-17 17:07:50.564549	2022-11-17 17:07:50.563948	a191ea5f-e7d2-4af8-8f79-16d022e3794a	1664
1667	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 1	Limited Monitored 1	Limited Monitored 1	\N	\N	\N	2022-11-17 17:07:50.601073	2022-11-17 17:07:50.599705	3fa47d72-01fe-4550-8608-989343ecbd27	1667
1669	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	NotLimited	NotLimited	NotLimited	\N	\N	\N	2022-11-17 17:07:50.612576	2022-11-17 17:07:50.612528	f4ece91b-03f6-4f5e-95c6-6786e0cbe422	1669
1671	uri://ed-fi.org/LocaleDescriptor	City-Large	City-Large	City-Large	\N	\N	\N	2022-11-17 17:07:50.650198	2022-11-17 17:07:50.648604	fdf99851-d165-424a-a175-b7b8d47eb205	1671
1673	uri://ed-fi.org/LocaleDescriptor	Suburban-Large	Suburban-Large	Suburban-Large	\N	\N	\N	2022-11-17 17:07:50.664455	2022-11-17 17:07:50.664421	dac0c0ef-1640-4d8c-b8b6-0dcf908a3d15	1673
1675	uri://ed-fi.org/LocaleDescriptor	Suburban-Small	Suburban-Small	Suburban-Small	\N	\N	\N	2022-11-17 17:07:50.672606	2022-11-17 17:07:50.672563	b0e1b136-1693-42da-a62e-a28fa67601c5	1675
1677	uri://ed-fi.org/LocaleDescriptor	Town-Distant	Town-Distant	Town-Distant	\N	\N	\N	2022-11-17 17:07:50.682832	2022-11-17 17:07:50.682765	4a359b64-7e89-4378-aaf3-fcc5e7773e01	1677
1679	uri://ed-fi.org/LocaleDescriptor	Rural-Fringe	Rural-Fringe	Rural-Fringe	\N	\N	\N	2022-11-17 17:07:50.690674	2022-11-17 17:07:50.690548	4c528a8a-57db-4f5b-8a16-809896847568	1679
1681	uri://ed-fi.org/LocaleDescriptor	Rural-Remote	Rural-Remote	Rural-Remote	\N	\N	\N	2022-11-17 17:07:50.698813	2022-11-17 17:07:50.698709	cc44150a-a788-4c09-8d4c-922cd5e56392	1681
1683	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Federal operated agency	Federal operated agency	Federal operated agency	\N	\N	\N	2022-11-17 17:07:50.729485	2022-11-17 17:07:50.728162	ac19d61b-ef05-4445-9be1-bd008a51a474	1683
1685	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Public school district part of a supervisory union	Public school district part of a supervisory union	Regular public school district that is a component of a supervisory union	\N	\N	\N	2022-11-17 17:07:50.740992	2022-11-17 17:07:50.740779	ff0e712d-b01a-4c66-989b-d713d1c57957	1685
1686	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Regular public school district	Regular public school district	Regular public school district that is not a component of a supervisory union	\N	\N	\N	2022-11-17 17:07:50.747575	2022-11-17 17:07:50.747488	bec5bc6a-56e7-4214-bb9b-dea18f3f743d	1686
1689	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	State operated agency	State operated agency	State operated agency	\N	\N	\N	2022-11-17 17:07:50.758597	2022-11-17 17:07:50.758566	967b296d-d4f2-4b29-b6fc-b6f0ec879ad2	1689
1690	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Supervisory union	Supervisory union	Supervisory union	\N	\N	\N	2022-11-17 17:07:50.763598	2022-11-17 17:07:50.763415	9d696552-c71f-4292-81b2-a795ab9817e9	1690
1694	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	All students participate	All students participate	All students participate	\N	\N	\N	2022-11-17 17:07:50.810038	2022-11-17 17:07:50.808681	2af605a3-4c98-4064-9f59-eeebbb080fa3	1694
1695	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	Some, but not all, students participate	Some, but not all, students participate	Some, but not all, students participate	\N	\N	\N	2022-11-17 17:07:50.81971	2022-11-17 17:07:50.819599	88858985-c251-4c01-935e-454e705d99f6	1695
1696	uri://ed-fi.org/MediumOfInstructionDescriptor	Correspondence instruction	Correspondence instruction	Correspondence instruction	\N	\N	\N	2022-11-17 17:07:50.850915	2022-11-17 17:07:50.849339	00c727ee-c65f-4e3a-a9f0-2166864b92e0	1696
1699	uri://ed-fi.org/MediumOfInstructionDescriptor	Face-to-face instruction	Face-to-face instruction	Face-to-face instruction	\N	\N	\N	2022-11-17 17:07:50.86379	2022-11-17 17:07:50.863758	c58db58b-d22a-4503-9491-9a862f413222	1699
1700	uri://ed-fi.org/MediumOfInstructionDescriptor	Independent study	Independent study	Independent study	\N	\N	\N	2022-11-17 17:07:50.869998	2022-11-17 17:07:50.869819	eb3b0495-2781-46bb-9fb1-5ec8e7ba01c9	1700
1703	uri://ed-fi.org/MediumOfInstructionDescriptor	Other technology-based instruction	Other technology-based instruction	Other technology-based instruction	\N	\N	\N	2022-11-17 17:07:50.880619	2022-11-17 17:07:50.880586	e1544456-3061-4bb8-bdb8-a0d8fa06ad7e	1703
1626	uri://ed-fi.org/LanguageUseDescriptor	Spoken language	Spoken language	Spoken language	\N	\N	\N	2022-11-17 17:07:50.231892	2022-11-17 17:07:50.231807	c3eac21a-6809-4821-bf88-30a1e4f5665c	1626
1628	uri://ed-fi.org/LearningStandardCategoryDescriptor	Core Ideas	Core Ideas	Core Ideas	\N	\N	\N	2022-11-17 17:07:50.268872	2022-11-17 17:07:50.267289	746d0a7e-03c1-40f2-b997-7517a2fc8a5a	1628
1631	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Equivalent	Equivalent	Equivalent	\N	\N	\N	2022-11-17 17:07:50.309059	2022-11-17 17:07:50.307491	a8f18921-8baa-4d0b-8460-bc8f5791026f	1631
1634	uri://ed-fi.org/LearningStandardEquivalenceStrengthDescriptor	Minimally equivalent	Minimally equivalent	Minimally equivalent	\N	\N	\N	2022-11-17 17:07:50.321911	2022-11-17 17:07:50.321877	e1bd933e-4ed6-4083-bb42-018093ef775f	1634
1635	uri://ed-fi.org/LearningStandardScopeDescriptor	State	State	State	\N	\N	\N	2022-11-17 17:07:50.354774	2022-11-17 17:07:50.353447	24a5e649-8c58-4b79-bcc4-d7110309b802	1635
1638	uri://ed-fi.org/LearningStandardScopeDescriptor	Classroom	Classroom	Classroom	\N	\N	\N	2022-11-17 17:07:50.367026	2022-11-17 17:07:50.366984	49e82322-12a1-44af-ab66-48fabc329e2e	1638
1639	uri://ed-fi.org/LearningStandardScopeDescriptor	Multi-state or National	Multi-state or National	Multi-state or National	\N	\N	\N	2022-11-17 17:07:50.374415	2022-11-17 17:07:50.374237	84af9f7a-e4a7-4a0f-ba98-82150865a71c	1639
1642	uri://ed-fi.org/LevelOfEducationDescriptor	Associate's Degree (two years or more)	Associate's Degree (two years or more)	Associate's Degree (two years or more)	\N	\N	\N	2022-11-17 17:07:50.410044	2022-11-17 17:07:50.408694	3b953c87-8cd3-43a4-909b-ac2d5d25bc72	1642
1644	uri://ed-fi.org/LevelOfEducationDescriptor	Doctorate	Doctorate	Doctorate	\N	\N	\N	2022-11-17 17:07:50.423396	2022-11-17 17:07:50.423364	31395de5-8439-42d6-8d32-bd6c20f1818c	1644
1646	uri://ed-fi.org/LevelOfEducationDescriptor	Master's	Master's	Master's	\N	\N	\N	2022-11-17 17:07:50.431102	2022-11-17 17:07:50.43107	f04b1611-015d-4c29-ad34-96029a6958b2	1646
1648	uri://ed-fi.org/LicenseStatusDescriptor	Regulated	Regulated	Regulated	\N	\N	\N	2022-11-17 17:07:50.467923	2022-11-17 17:07:50.466538	b06344f0-8920-4bf4-af2e-d81d5c0f75b0	1648
1651	uri://ed-fi.org/LicenseTypeDescriptor	Child Care Center	Child Care Center	Child Care Center	\N	\N	\N	2022-11-17 17:07:50.508442	2022-11-17 17:07:50.50685	501d1e54-4e49-4359-8356-4f2450c35a2b	1651
1654	uri://ed-fi.org/LicenseTypeDescriptor	Child Placing Agency	Child Placing Agency	Child Placing Agency	\N	\N	\N	2022-11-17 17:07:50.521409	2022-11-17 17:07:50.521377	7709eaed-7522-48cd-8788-ceb8e7beb2af	1654
1656	uri://ed-fi.org/LicenseTypeDescriptor	Family Child Care Home	Family Child Care Home	Family Child Care Home	\N	\N	\N	2022-11-17 17:07:50.530908	2022-11-17 17:07:50.530875	cd40a30a-3d61-431b-b45f-544b086abf07	1656
1658	uri://ed-fi.org/LicenseTypeDescriptor	Large Family Child Care Home	Large Family Child Care Home	Large Family Child Care Home	\N	\N	\N	2022-11-17 17:07:50.538866	2022-11-17 17:07:50.538833	1823b1dc-a4f5-4931-a365-7ac40351a2cb	1658
1660	uri://ed-fi.org/LicenseTypeDescriptor	Purchase of Care	Purchase of Care	Purchase of Care	\N	\N	\N	2022-11-17 17:07:50.547658	2022-11-17 17:07:50.547564	61a59510-7e1d-47e5-b8e6-da00d998e143	1660
1663	uri://ed-fi.org/LicenseTypeDescriptor	Shelter Care	Shelter Care	Shelter Care	\N	\N	\N	2022-11-17 17:07:50.55955	2022-11-17 17:07:50.559518	c1df8501-31bd-4886-8e87-e24da3b0abb7	1663
1665	uri://ed-fi.org/LicenseTypeDescriptor	Temporary Shelter Care	Temporary Shelter Care	Temporary Shelter Care	\N	\N	\N	2022-11-17 17:07:50.567424	2022-11-17 17:07:50.56739	7cc1617e-9685-4d50-88cd-53ec73854a58	1665
1666	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited	Limited	Limited	\N	\N	\N	2022-11-17 17:07:50.60106	2022-11-17 17:07:50.599709	c87c1fe8-1bbb-4e5d-b8d5-24fcf8488e42	1666
1668	uri://ed-fi.org/LimitedEnglishProficiencyDescriptor	Limited Monitored 2	Limited Monitored 2	Limited Monitored 2	\N	\N	\N	2022-11-17 17:07:50.612521	2022-11-17 17:07:50.611528	f08a3508-c74c-4ac8-8aa4-4a90d9dc0bca	1668
1670	uri://ed-fi.org/LocaleDescriptor	City-Midsize	City-Midsize	City-Midsize	\N	\N	\N	2022-11-17 17:07:50.650198	2022-11-17 17:07:50.648597	b92a40bd-8fa6-49e2-ac2a-311b9a210ef4	1670
1672	uri://ed-fi.org/LocaleDescriptor	City-Small	City-Small	City-Small	\N	\N	\N	2022-11-17 17:07:50.660931	2022-11-17 17:07:50.66088	11f711c3-9bf4-4a5c-8cee-e60278ed7a8b	1672
1674	uri://ed-fi.org/LocaleDescriptor	Suburban-Midsize	Suburban-Midsize	Suburban-Midsize	\N	\N	\N	2022-11-17 17:07:50.668624	2022-11-17 17:07:50.668587	91c22ac5-52af-492c-b5f4-fa42ed3976a3	1674
1676	uri://ed-fi.org/LocaleDescriptor	Town-Fringe	Town-Fringe	Town-Fringe	\N	\N	\N	2022-11-17 17:07:50.676736	2022-11-17 17:07:50.676705	56242e33-d185-4892-9440-1e628db5ff17	1676
1678	uri://ed-fi.org/LocaleDescriptor	Town-Remote	Town-Remote	Town-Remote	\N	\N	\N	2022-11-17 17:07:50.685427	2022-11-17 17:07:50.685397	d78bd161-6a25-44e2-a125-6cb50b3f3296	1678
1680	uri://ed-fi.org/LocaleDescriptor	Rural-Distant	Rural-Distant	Rural-Distant	\N	\N	\N	2022-11-17 17:07:50.693434	2022-11-17 17:07:50.693399	99b671c4-a42a-4ca2-81dd-2677f61f2be9	1680
1682	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent charter district	Independent charter district	Independent charter district	\N	\N	\N	2022-11-17 17:07:50.729466	2022-11-17 17:07:50.728165	405e9ed9-f336-4f99-9387-0d23ac62e326	1682
1684	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Other local education agency	Other local education agency	Other local education agency	\N	\N	\N	2022-11-17 17:07:50.73966	2022-11-17 17:07:50.739433	b260d7b1-7fe4-4612-ae7e-c7df3f66e72a	1684
1687	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Service agency	Service agency	Service agency	\N	\N	\N	2022-11-17 17:07:50.750802	2022-11-17 17:07:50.750769	5f294916-d773-4f75-9e1b-dfaa2ea4875e	1687
1688	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Specialized public school district	Specialized public school district	Specialized public school district	\N	\N	\N	2022-11-17 17:07:50.755542	2022-11-17 17:07:50.755492	31e2349d-782a-4a05-908a-ea29266e3f14	1688
1691	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Charter	DEPRECATED: Charter	DEPRECATED: Charter	\N	\N	\N	2022-11-17 17:07:50.766423	2022-11-17 17:07:50.766392	eb7971c5-8d79-48de-a034-19706c759673	1691
1692	uri://ed-fi.org/LocalEducationAgencyCategoryDescriptor	Independent	DEPRECATED: Independent	DEPRECATED: Independent	\N	\N	\N	2022-11-17 17:07:50.771326	2022-11-17 17:07:50.771285	cba974fa-7ff5-46ff-bba6-6565e85a2464	1692
1693	uri://ed-fi.org/MagnetSpecialProgramEmphasisSchoolDescriptor	No students participate	No students participate	No students participate	\N	\N	\N	2022-11-17 17:07:50.810021	2022-11-17 17:07:50.808684	67a61ed5-189e-4d3c-a8c7-c66f3af1cea7	1693
1697	uri://ed-fi.org/MediumOfInstructionDescriptor	Center-based instruction	Center-based instruction	Center-based instruction	\N	\N	\N	2022-11-17 17:07:50.850913	2022-11-17 17:07:50.849342	7da9c88c-b859-43e3-83d7-6d4be2fe4f4f	1697
1698	uri://ed-fi.org/MediumOfInstructionDescriptor	Distance Learning (other than online)	Distance Learning (other than online)	Distance Learning (other than online)	\N	\N	\N	2022-11-17 17:07:50.861379	2022-11-17 17:07:50.861336	7363f147-925e-42cb-a18d-4cd95b1ba3ca	1698
1701	uri://ed-fi.org/MediumOfInstructionDescriptor	Internship	Internship	Internship	\N	\N	\N	2022-11-17 17:07:50.872824	2022-11-17 17:07:50.872794	b87c89a0-60f8-4324-9fa9-78815302ebad	1701
1702	uri://ed-fi.org/MediumOfInstructionDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:50.877947	2022-11-17 17:07:50.877726	222599c1-9df2-49ed-adea-884585e23e1a	1702
1705	uri://ed-fi.org/MediumOfInstructionDescriptor	Telepresence/video conference	Telepresence/video conference	Telepresence/video conference	\N	\N	\N	2022-11-17 17:07:50.888706	2022-11-17 17:07:50.888677	ec81a5f3-c8da-4a6c-8212-cfe15816db00	1705
1706	uri://ed-fi.org/MediumOfInstructionDescriptor	Televised	Televised	Televised	\N	\N	\N	2022-11-17 17:07:50.894177	2022-11-17 17:07:50.893898	eca7e2f4-cb07-4b0e-8071-1533e1e41cbc	1706
1710	uri://ed-fi.org/MethodCreditEarnedDescriptor	Classroom credit	Classroom credit	Classroom credit	\N	\N	\N	2022-11-17 17:07:50.933366	2022-11-17 17:07:50.931808	72c57b59-259d-4d55-a24f-36b374dd4553	1710
1712	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit by examination	Credit by examination	Credit by examination	\N	\N	\N	2022-11-17 17:07:50.94708	2022-11-17 17:07:50.947048	325218fb-5532-40a3-a679-c619d509d978	1712
1713	uri://ed-fi.org/MethodCreditEarnedDescriptor	Credit recovery	Credit recovery	Credit recovery	\N	\N	\N	2022-11-17 17:07:50.951997	2022-11-17 17:07:50.951958	2511e809-e811-42b7-8967-4a21f83be895	1713
1715	uri://ed-fi.org/MethodCreditEarnedDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:50.960052	2022-11-17 17:07:50.959959	6e5a461a-6197-46c0-8a68-5a84fa816185	1715
1718	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	2022-11-17 17:07:50.995998	2022-11-17 17:07:50.994413	f5ffcd59-b557-4050-9fb7-825d5c7ee7d3	1718
1704	uri://ed-fi.org/MediumOfInstructionDescriptor	Technology-based instruction in classroom	Technology-based instruction in classroom	Technology-based instruction in classroom	\N	\N	\N	2022-11-17 17:07:50.885764	2022-11-17 17:07:50.885671	2eaee5fb-424b-4562-8c31-0b515bed7df8	1704
1707	uri://ed-fi.org/MediumOfInstructionDescriptor	Videotaped/prerecorded video	Videotaped/prerecorded video	Videotaped/prerecorded video	\N	\N	\N	2022-11-17 17:07:50.897001	2022-11-17 17:07:50.896969	b42bebed-b1be-483e-8c5f-2240b8985fca	1707
1708	uri://ed-fi.org/MediumOfInstructionDescriptor	Virtual/On-line Distance learning	Virtual/On-line Distance learning	Virtual/On-line Distance learning	\N	\N	\N	2022-11-17 17:07:50.902199	2022-11-17 17:07:50.902046	f859db30-4956-444e-8647-dc244253c558	1708
1709	uri://ed-fi.org/MethodCreditEarnedDescriptor	Converted occupational experience credit	Converted occupational experience credit	Converted occupational experience credit	\N	\N	\N	2022-11-17 17:07:50.933366	2022-11-17 17:07:50.931805	44defcf4-1815-4732-a0a1-8396cfd33e61	1709
1711	uri://ed-fi.org/MethodCreditEarnedDescriptor	Correspondence credit	Correspondence credit	Correspondence credit	\N	\N	\N	2022-11-17 17:07:50.94381	2022-11-17 17:07:50.943758	6f26ea64-1e04-4e82-b19a-e2ec59414c44	1711
1714	uri://ed-fi.org/MethodCreditEarnedDescriptor	Online credit	Online credit	Online credit	\N	\N	\N	2022-11-17 17:07:50.955321	2022-11-17 17:07:50.955289	41f0f635-9a15-4ca6-be14-0cae3620460e	1714
1716	uri://ed-fi.org/MethodCreditEarnedDescriptor	Transfer credit	Transfer credit	Transfer credit	\N	\N	\N	2022-11-17 17:07:50.963382	2022-11-17 17:07:50.96335	38c9f79d-6ab2-49de-bdd7-556b927b0fa3	1716
1717	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	High School Accrual	High School Accrual	High School Accrual	\N	\N	\N	2022-11-17 17:07:50.995988	2022-11-17 17:07:50.994411	da112277-8aef-4840-b078-0138dd44b778	1717
1719	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Instructional Services	Instructional Services	Instructional Services	\N	\N	\N	2022-11-17 17:07:51.012337	2022-11-17 17:07:51.012288	fdb6f211-2d96-4e56-9d09-cfabfe6eab1c	1719
1721	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Reading Instruction	Reading Instruction	Reading Instruction	\N	\N	\N	2022-11-17 17:07:51.021897	2022-11-17 17:07:51.021851	7b4192c5-f771-417e-b520-83b104b17609	1721
1723	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Support Services	Support Services	Support Services	\N	\N	\N	2022-11-17 17:07:51.031559	2022-11-17 17:07:51.031519	f6f322f6-fca1-425e-9a89-10d1ca32b5b2	1723
1724	uri://ed-fi.org/MonitoredDescriptor	Year 1	Year 1	Year 1	\N	\N	\N	2022-11-17 17:07:51.066939	2022-11-17 17:07:51.06534	6906712d-f4f9-4481-ae69-49dbf6d10d63	1724
1726	uri://ed-fi.org/MonitoredDescriptor	Not Monitored	Not Monitored	Not Monitored	\N	\N	\N	2022-11-17 17:07:51.077276	2022-11-17 17:07:51.07723	beebe67b-f80f-41b4-af21-184712907e8b	1726
1727	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	2022-11-17 17:07:51.106754	2022-11-17 17:07:51.105157	5124953c-7f8f-4c5b-a1ab-70b560ed3437	1727
1729	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Detention Facilities	Juvenile Detention Facilities	Juvenile Detention Facilities	\N	\N	\N	2022-11-17 17:07:51.118639	2022-11-17 17:07:51.117755	7aa52429-4dcb-4b50-b30a-add2beb75f76	1729
1732	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	2022-11-17 17:07:51.130207	2022-11-17 17:07:51.130171	e3f579e1-fa3f-490a-bdad-9b451123b3b1	1732
1734	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Adult Correction	Adult Correction	Adult Correction	\N	\N	\N	2022-11-17 17:07:51.17154	2022-11-17 17:07:51.16997	e535cf06-ea5c-4f40-9f32-d1796c791aeb	1734
1736	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Missing	Missing	Missing	\N	\N	\N	2022-11-17 17:07:51.184538	2022-11-17 17:07:51.184501	fc417405-8ebb-46a7-8035-2433e580407e	1736
1738	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Other Programs	Other Programs	Other Programs	\N	\N	\N	2022-11-17 17:07:51.192423	2022-11-17 17:07:51.192387	153ddea5-8d08-478a-aa8e-a5a3c97b41a6	1738
1740	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Dropout Prevention Programs	DEPRECATED: Dropout Prevention Programs	DEPRECATED: Dropout Prevention Programs	\N	\N	\N	2022-11-17 17:07:51.200631	2022-11-17 17:07:51.200596	de9f435b-f828-4d3f-a123-b1fcff7589d6	1740
1742	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Special Programs	DEPRECATED: Special Programs	DEPRECATED: Special Programs	\N	\N	\N	2022-11-17 17:07:51.209056	2022-11-17 17:07:51.209019	2c1765a4-eb11-4885-bd68-ca2371e42a04	1742
1745	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Pay For Success Initiatives	DEPRECATED: Pay For Success Initiatives	DEPRECATED: Pay For Success Initiatives	\N	\N	\N	2022-11-17 17:07:51.220926	2022-11-17 17:07:51.220892	6a3f416b-8d29-4ebc-a6a8-1785cef44d52	1745
1747	uri://ed-fi.org/NetworkPurposeDescriptor	Collective Procurement	Collective Procurement	Collective Procurement	\N	\N	\N	2022-11-17 17:07:51.253993	2022-11-17 17:07:51.252442	374c4073-b0cb-4dff-a643-4248e8ee27a8	1747
1748	uri://ed-fi.org/OldEthnicityDescriptor	American Indian Or Alaskan Native	American Indian Or Alaskan Native	American Indian Or Alaskan Native	\N	\N	\N	2022-11-17 17:07:51.292296	2022-11-17 17:07:51.290728	964b5169-1a1b-4391-a775-bfbaa77b068a	1748
1751	uri://ed-fi.org/OldEthnicityDescriptor	Hispanic	Hispanic	Hispanic	\N	\N	\N	2022-11-17 17:07:51.305332	2022-11-17 17:07:51.304818	8c94d5a0-f7d4-4939-8de9-44e555128b30	1751
1752	uri://ed-fi.org/OldEthnicityDescriptor	White, Not Of Hispanic Origin	White, Not Of Hispanic Origin	White, Not Of Hispanic Origin	\N	\N	\N	2022-11-17 17:07:51.313116	2022-11-17 17:07:51.3131	9530988b-022b-453c-ad1f-9006a5973f44	1752
1753	uri://ed-fi.org/OperationalStatusDescriptor	Added	Added	Added	\N	\N	\N	2022-11-17 17:07:51.344941	2022-11-17 17:07:51.343323	35454955-4e1c-4d3f-8a40-c29328409a41	1753
1755	uri://ed-fi.org/OperationalStatusDescriptor	Changed	Changed	Changed	\N	\N	\N	2022-11-17 17:07:51.355622	2022-11-17 17:07:51.355428	67c448b5-8983-4d93-9e0a-e16a6edfe159	1755
1758	uri://ed-fi.org/OperationalStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	2022-11-17 17:07:51.367424	2022-11-17 17:07:51.367391	5027d5bf-bb77-41f4-b0b2-69ef730c9c37	1758
1759	uri://ed-fi.org/OperationalStatusDescriptor	New	New	New	\N	\N	\N	2022-11-17 17:07:51.372466	2022-11-17 17:07:51.372192	fe0a3fb5-a6d8-4644-8ec3-7e7639984a34	1759
1762	uri://ed-fi.org/OtherNameTypeDescriptor	Nickname	Nickname	Nickname	\N	\N	\N	2022-11-17 17:07:51.408053	2022-11-17 17:07:51.406465	4b772b92-a8fa-4360-9680-a4aafcc4b86a	1762
1764	uri://ed-fi.org/OtherNameTypeDescriptor	Previous Legal Name	Previous Legal Name	Previous Legal Name	\N	\N	\N	2022-11-17 17:07:51.419994	2022-11-17 17:07:51.419949	0c3f6c7c-b0c7-4b87-a96b-2fac57f7ff71	1764
1766	uri://ed-fi.org/ParticipationDescriptor	Attempted	Attempted	Attempted but did not complete	\N	\N	\N	2022-11-17 17:07:51.454816	2022-11-17 17:07:51.453216	0c2b0df1-c81b-4753-9da6-21e4643f1f87	1766
1768	uri://ed-fi.org/ParticipationDescriptor	Unable Due To Medical Emergency	Unable Due To Medical Emergency	Unable Due To Medical Emergency	\N	\N	\N	2022-11-17 17:07:51.467046	2022-11-17 17:07:51.467014	8e7811f4-2d6c-404e-85d9-f6818fd7b6ef	1768
1769	uri://ed-fi.org/ParticipationStatusDescriptor	Eligible	Eligible	Eligible	\N	\N	\N	2022-11-17 17:07:51.500153	2022-11-17 17:07:51.498818	23f29d68-d779-4d1b-ba85-c27c6e11bc19	1769
1772	uri://ed-fi.org/ParticipationStatusDescriptor	Active in Program	Active in Program	Active in Program	\N	\N	\N	2022-11-17 17:07:51.513664	2022-11-17 17:07:51.513635	0dc8b161-ac05-4066-b0fc-4ca3a7cfde26	1772
1774	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Basic	Basic	Basic	\N	\N	\N	2022-11-17 17:07:51.550264	2022-11-17 17:07:51.548951	8f6c5660-3f83-4b9b-9cb1-0f58e71da793	1774
1777	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-11-17 17:07:51.564155	2022-11-17 17:07:51.564122	c45ad2b3-24f5-4aef-8b52-808d1efa76bd	1777
1779	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2022-11-17 17:07:51.572471	2022-11-17 17:07:51.572439	2a251d7f-29ad-4586-b47e-28d04beafae2	1779
1781	uri://ed-fi.org/PerformanceLevelDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2022-11-17 17:07:51.60841	2022-11-17 17:07:51.60702	076aa7ad-0d84-4ce3-a448-e86077769e88	1781
1784	uri://ed-fi.org/PerformanceLevelDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	2022-11-17 17:07:51.621618	2022-11-17 17:07:51.621584	5bdd4f86-3c26-497e-9277-cfe771822d57	1784
1786	uri://ed-fi.org/PerformanceLevelDescriptor	Did Not Meet Standard	Did Not Meet Standard	Did Not Meet Standard	\N	\N	\N	2022-11-17 17:07:51.629809	2022-11-17 17:07:51.629777	f055b99e-137e-45f0-b181-36094ac262c0	1786
1788	uri://ed-fi.org/PerformanceLevelDescriptor	Fail	Fail	Fail	\N	\N	\N	2022-11-17 17:07:51.63714	2022-11-17 17:07:51.637093	d4198ce8-f7f0-43df-bcbb-8575adb89e62	1788
1720	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Mathematics Instruction	Mathematics Instruction	Mathematics Instruction	\N	\N	\N	2022-11-17 17:07:51.015933	2022-11-17 17:07:51.015892	24539abc-ca44-4ea8-9398-041478190b64	1720
1722	uri://ed-fi.org/MigrantEducationProgramServiceDescriptor	Referral Services	Referral Services	Referral Services	\N	\N	\N	2022-11-17 17:07:51.028746	2022-11-17 17:07:51.028504	681f17a8-a98b-42f4-94b4-640e1ec6f4d7	1722
1725	uri://ed-fi.org/MonitoredDescriptor	Year 2	Year 2	Year 2	\N	\N	\N	2022-11-17 17:07:51.066938	2022-11-17 17:07:51.065343	f22e3b90-1aef-4fa9-a452-57666ea0c0e8	1725
1728	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	At-Risk Programs	At-Risk Programs	At-Risk Programs	\N	\N	\N	2022-11-17 17:07:51.106756	2022-11-17 17:07:51.105153	35f92ce6-43c0-405f-a45b-568b47ffafa7	1728
1730	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Juvenile Corrections	Juvenile Corrections	Juvenile Corrections	\N	\N	\N	2022-11-17 17:07:51.122092	2022-11-17 17:07:51.122054	f2330698-a978-49ad-b717-bb8fbb178c8d	1730
1731	uri://ed-fi.org/NeglectedOrDelinquentProgramDescriptor	Adult Corrections	Adult Corrections	Adult Corrections	\N	\N	\N	2022-11-17 17:07:51.126838	2022-11-17 17:07:51.126739	6b5b230e-42a2-4fc3-ba80-076522f7abe5	1731
1733	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Juvenile Correction	Juvenile Correction	Juvenile Correction	\N	\N	\N	2022-11-17 17:07:51.17154	2022-11-17 17:07:51.169969	59e0a6d9-9c62-456b-a533-817ca173def5	1733
1735	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Juvenile Detention	Juvenile Detention	Juvenile Detention	\N	\N	\N	2022-11-17 17:07:51.181089	2022-11-17 17:07:51.181039	a7713e21-66a9-41a8-a51e-25297bec31b7	1735
1737	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Neglected Programs	Neglected Programs	Neglected Programs	\N	\N	\N	2022-11-17 17:07:51.188835	2022-11-17 17:07:51.188738	1aabfb86-094c-4048-a6b8-33253e371480	1737
1739	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Transition Programs	DEPRECATED: Transition Programs	DEPRECATED: Transition Programs	\N	\N	\N	2022-11-17 17:07:51.197096	2022-11-17 17:07:51.196985	54a33afa-9abe-4c58-a3d0-92e1a9e3e72d	1739
1741	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Health And Social Services	DEPRECATED: Health And Social Services	DEPRECATED: Health And Social Services	\N	\N	\N	2022-11-17 17:07:51.205421	2022-11-17 17:07:51.20532	f5172262-1bbb-4886-a347-c7b871ad3b45	1741
1743	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	Mentoring Programs	DEPRECATED: Mentoring Programs	DEPRECATED: Mentoring Programs	\N	\N	\N	2022-11-17 17:07:51.213196	2022-11-17 17:07:51.213161	c3bc29f0-0983-488f-b996-7a3aef5f037d	1743
1744	uri://ed-fi.org/NeglectedOrDelinquentProgramServiceDescriptor	At-Risk Indian Youth Programs	DEPRECATED: At-Risk Indian Youth Programs	DEPRECATED: At-Risk Indian Youth Programs	\N	\N	\N	2022-11-17 17:07:51.218315	2022-11-17 17:07:51.217991	00f6afbf-bc16-484d-bcfe-d22b9eb15f38	1744
1746	uri://ed-fi.org/NetworkPurposeDescriptor	Shared Services	Shared Services	Shared Services	\N	\N	\N	2022-11-17 17:07:51.253992	2022-11-17 17:07:51.252438	4e589c96-4d58-45fd-93c7-0c5581f6fa7e	1746
1749	uri://ed-fi.org/OldEthnicityDescriptor	Asian Or Pacific Islander	Asian Or Pacific Islander	Asian Or Pacific Islander	\N	\N	\N	2022-11-17 17:07:51.292295	2022-11-17 17:07:51.290732	1f8c14c8-64dc-4dc7-a5f7-a5ef98b065a4	1749
1750	uri://ed-fi.org/OldEthnicityDescriptor	Black, Not Of Hispanic Origin	Black, Not Of Hispanic Origin	Black, Not Of Hispanic Origin	\N	\N	\N	2022-11-17 17:07:51.30291	2022-11-17 17:07:51.302871	7b5f7768-ec12-4028-a300-1b702c3d53fa	1750
1754	uri://ed-fi.org/OperationalStatusDescriptor	Active	Active	Active	\N	\N	\N	2022-11-17 17:07:51.345034	2022-11-17 17:07:51.343323	e4607143-80a1-4502-8167-bdf44525e445	1754
1756	uri://ed-fi.org/OperationalStatusDescriptor	Closed	Closed	Closed	\N	\N	\N	2022-11-17 17:07:51.356967	2022-11-17 17:07:51.356759	616e9c32-4c60-4381-96c2-74185cc81498	1756
1757	uri://ed-fi.org/OperationalStatusDescriptor	Future	Future	Future	\N	\N	\N	2022-11-17 17:07:51.364506	2022-11-17 17:07:51.364364	4b1b0c51-f294-4305-b626-e6ab43b754ad	1757
1760	uri://ed-fi.org/OperationalStatusDescriptor	Reopened	Reopened	Reopened	\N	\N	\N	2022-11-17 17:07:51.37531	2022-11-17 17:07:51.375278	ef58f0e7-88ac-463f-b09c-f537bc4e12c1	1760
1761	uri://ed-fi.org/OtherNameTypeDescriptor	Alias	Alias	Alias	\N	\N	\N	2022-11-17 17:07:51.408053	2022-11-17 17:07:51.406461	0d9571aa-31d2-4c48-9b98-ac4831ff268a	1761
1763	uri://ed-fi.org/OtherNameTypeDescriptor	Other Name	Other Name	Other Name	\N	\N	\N	2022-11-17 17:07:51.41993	2022-11-17 17:07:51.418885	54ba1e88-7fdc-4da2-bf91-4426de2e6359	1763
1765	uri://ed-fi.org/ParticipationDescriptor	Completed	Completed	Completed	\N	\N	\N	2022-11-17 17:07:51.454794	2022-11-17 17:07:51.45322	1035f4c1-2080-4a96-8397-f9cc5b75cb60	1765
1767	uri://ed-fi.org/ParticipationDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	2022-11-17 17:07:51.465206	2022-11-17 17:07:51.464972	65d76eb0-6184-41f1-8206-8306404ce9c5	1767
1770	uri://ed-fi.org/ParticipationStatusDescriptor	Referred	Referred	Referred	\N	\N	\N	2022-11-17 17:07:51.500144	2022-11-17 17:07:51.498821	59dce373-0289-4dc3-8b1f-b4d9228428b5	1770
1771	uri://ed-fi.org/ParticipationStatusDescriptor	Not Eligible	Not Eligible	Not Eligible	\N	\N	\N	2022-11-17 17:07:51.510094	2022-11-17 17:07:51.510059	92ad14d2-d406-46a1-ad2f-c8fa2540d27f	1771
1773	uri://ed-fi.org/ParticipationStatusDescriptor	Refused	Refused	Refused	\N	\N	\N	2022-11-17 17:07:51.518229	2022-11-17 17:07:51.518128	2eb7c980-f37c-4760-9d05-5b02cd8cd375	1773
1775	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Advanced	Advanced	Advanced	\N	\N	\N	2022-11-17 17:07:51.550284	2022-11-17 17:07:51.548948	675e8942-81f1-4505-8b01-bdea8e83e0bc	1775
1776	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	2022-11-17 17:07:51.561561	2022-11-17 17:07:51.561531	699c25f0-a536-41e6-bbcd-9e9d37a7c2e8	1776
1778	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-11-17 17:07:51.569644	2022-11-17 17:07:51.569582	8af48f16-9c2c-40a3-926a-e4cf1c2151ad	1778
1780	uri://ed-fi.org/PerformanceBaseConversionDescriptor	Well Below Basic	Well Below Basic	Well Below Basic	\N	\N	\N	2022-11-17 17:07:51.577882	2022-11-17 17:07:51.577816	006296bc-ca74-4605-aa1d-585d283f52ad	1780
1782	uri://ed-fi.org/PerformanceLevelDescriptor	Basic	Basic	Basic	\N	\N	\N	2022-11-17 17:07:51.608391	2022-11-17 17:07:51.607016	f47ae51b-b201-49cd-a86f-f9975cd55d1a	1782
1783	uri://ed-fi.org/PerformanceLevelDescriptor	Below Basic	Below Basic	Below Basic	\N	\N	\N	2022-11-17 17:07:51.618188	2022-11-17 17:07:51.618124	e463d57e-d564-49b1-bb28-6203b65135d2	1783
1785	uri://ed-fi.org/PerformanceLevelDescriptor	Met Standard	Met Standard	Met Standard	\N	\N	\N	2022-11-17 17:07:51.626173	2022-11-17 17:07:51.626141	9da0281d-083a-4bb9-a2c6-456ef042b1b8	1785
1787	uri://ed-fi.org/PerformanceLevelDescriptor	Pass	Pass	Pass	\N	\N	\N	2022-11-17 17:07:51.633425	2022-11-17 17:07:51.63339	d8b421f6-fb86-4911-8da1-f3bcbc59ca24	1787
1789	uri://ed-fi.org/PerformanceLevelDescriptor	Commended Performance	DEPRECATED: Commended Performance	DEPRECATED: Commended Performance	\N	\N	\N	2022-11-17 17:07:51.640852	2022-11-17 17:07:51.640819	dd19b8a5-7324-439b-aee1-9193c8c735c7	1789
1791	uri://ed-fi.org/PerformanceLevelDescriptor	Proficient	DEPRECATED: Proficient	DEPRECATED: Proficient	\N	\N	\N	2022-11-17 17:07:51.648497	2022-11-17 17:07:51.648454	743b1b47-4810-4250-82c1-5dc5cd3b1ed9	1791
1793	uri://ed-fi.org/PerformanceLevelDescriptor	Satisfactory	DEPRECATED: Satisfactory	DEPRECATED: Satisfactory	\N	\N	\N	2022-11-17 17:07:51.656676	2022-11-17 17:07:51.656566	101b5587-d28e-417c-82d5-82814fa07001	1793
1796	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Birth certificate	Birth certificate	Birth certificate	\N	\N	\N	2022-11-17 17:07:51.693063	2022-11-17 17:07:51.691438	ae697c73-4730-4e17-aa07-1b58141326e5	1796
1798	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Entry in family Bible	Entry in family Bible	Entry in family Bible	\N	\N	\N	2022-11-17 17:07:51.70524	2022-11-17 17:07:51.705053	e3b14d25-aae5-4d46-98bc-8e2c33c064b8	1798
1800	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Immigration document/visa	Immigration document/visa	Immigration document/visa	\N	\N	\N	2022-11-17 17:07:51.715346	2022-11-17 17:07:51.71531	42111141-7bd2-4b4d-90a4-5aa4af14750d	1800
1801	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Life insurance policy	Life insurance policy	Life insurance policy	\N	\N	\N	2022-11-17 17:07:51.720476	2022-11-17 17:07:51.720426	57377b78-b4bd-4fad-8eba-f84a45293278	1801
1804	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other official document	Other official document	Other official document	\N	\N	\N	2022-11-17 17:07:51.731757	2022-11-17 17:07:51.731717	8d074ec0-639e-45ef-9f66-1548d15f7c09	1804
1805	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Parents affidavit	Parents affidavit	Parents affidavit	\N	\N	\N	2022-11-17 17:07:51.737559	2022-11-17 17:07:51.737243	b9dd675a-e3ed-4ad8-8967-addf2234354c	1805
1790	uri://ed-fi.org/PerformanceLevelDescriptor	Above Benchmark	DEPRECATED: Above Benchmark	DEPRECATED: Above Benchmark	\N	\N	\N	2022-11-17 17:07:51.64453	2022-11-17 17:07:51.644498	eee92b98-a0e2-4f31-8e67-cd8632222484	1790
1792	uri://ed-fi.org/PerformanceLevelDescriptor	Minimum	DEPRECATED: Minimum	DEPRECATED: Minimum	\N	\N	\N	2022-11-17 17:07:51.652224	2022-11-17 17:07:51.652192	8312eeff-58f7-4e35-9594-6c50545f1083	1792
1794	uri://ed-fi.org/PerformanceLevelDescriptor	Unsatisfactory	DEPRECATED: Unsatisfactory	DEPRECATED: Unsatisfactory	\N	\N	\N	2022-11-17 17:07:51.660263	2022-11-17 17:07:51.660231	de58cc8a-2db7-4260-9440-a1c5d6ce36b5	1794
1795	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Baptismal or church certificate	Baptismal or church certificate	Baptismal or church certificate	\N	\N	\N	2022-11-17 17:07:51.69305	2022-11-17 17:07:51.691435	40f2b474-31ba-413c-8434-735786d06fbb	1795
1797	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Drivers license	Drivers license	Drivers license	\N	\N	\N	2022-11-17 17:07:51.70358	2022-11-17 17:07:51.703487	94372c80-dc54-46e6-adbd-c9275902bef4	1797
1799	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Hospital certificate	Hospital certificate	Hospital certificate	\N	\N	\N	2022-11-17 17:07:51.712285	2022-11-17 17:07:51.712163	b6f76488-1d9d-499f-a215-fa671714ea5e	1799
1802	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:51.723506	2022-11-17 17:07:51.723473	add26ea3-3999-4702-b753-e5f9dfa0415c	1802
1803	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Other non-official document	Other non-official document	Other non-official document	\N	\N	\N	2022-11-17 17:07:51.7288	2022-11-17 17:07:51.728752	00834c5b-e098-4463-9c2c-3ad6194aae86	1803
1806	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Passport	Passport	Passport	\N	\N	\N	2022-11-17 17:07:51.740517	2022-11-17 17:07:51.740484	05741f89-0b1e-4dcd-8ca5-453436905886	1806
1808	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Previously verified school records	Previously verified school records	Previously verified school records	\N	\N	\N	2022-11-17 17:07:51.748471	2022-11-17 17:07:51.748441	bbc6ea24-7c28-4df6-9e67-45e48517f109	1808
1809	uri://ed-fi.org/PersonalInformationVerificationDescriptor	State-issued ID	State-issued ID	State-issued ID	\N	\N	\N	2022-11-17 17:07:51.754117	2022-11-17 17:07:51.753926	d03cba95-8d77-4c88-a104-5e0d27023508	1809
1811	uri://ed-fi.org/PlatformTypeDescriptor	Computer-based	Computer-based	Computer-based	\N	\N	\N	2022-11-17 17:07:51.786343	2022-11-17 17:07:51.784751	044b77cc-fa1f-4735-af1c-2924cdebb6d3	1811
1812	uri://ed-fi.org/PopulationServedDescriptor	Bilingual Students	Bilingual Students	Bilingual Students	\N	\N	\N	2022-11-17 17:07:51.823655	2022-11-17 17:07:51.822087	e8097bd1-9879-4f2b-b6a7-d93b31826360	1812
1815	uri://ed-fi.org/PopulationServedDescriptor	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	Compensatory/Remedial Education Students	\N	\N	\N	2022-11-17 17:07:51.83745	2022-11-17 17:07:51.837418	c632cc98-fca2-4d42-b6d9-68af22c4ed9b	1815
1817	uri://ed-fi.org/PopulationServedDescriptor	ESL Students	ESL Students	ESL Students	\N	\N	\N	2022-11-17 17:07:51.847622	2022-11-17 17:07:51.84759	7d235561-7f74-41c4-b76b-96a807a12460	1817
1818	uri://ed-fi.org/PopulationServedDescriptor	Gifted and Talented Students	Gifted and Talented Students	Gifted and Talented Students	\N	\N	\N	2022-11-17 17:07:51.852453	2022-11-17 17:07:51.85242	f488b741-9bb9-448d-8c88-31ce1f649ce5	1818
1820	uri://ed-fi.org/PopulationServedDescriptor	Migrant Students	Migrant Students	Migrant Students	\N	\N	\N	2022-11-17 17:07:51.860474	2022-11-17 17:07:51.860449	d79900e9-9781-4bc4-8605-f7c08184071f	1820
1824	uri://ed-fi.org/PostingResultDescriptor	Position Filled	Position Filled	Position Filled	\N	\N	\N	2022-11-17 17:07:51.903813	2022-11-17 17:07:51.902241	3a057a61-1ca1-48c5-8942-c543adf3cfb5	1824
1825	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Acceptance	College Acceptance	College Acceptance	\N	\N	\N	2022-11-17 17:07:51.941416	2022-11-17 17:07:51.940083	2cc0f137-eb5f-430c-8bd6-17992bdf2af8	1825
1828	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Degree Received	College Degree Received	College Degree Received	\N	\N	\N	2022-11-17 17:07:51.954409	2022-11-17 17:07:51.954376	6b256341-96dd-4624-b6e2-aba3d63666a9	1828
1830	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Exit Date	College Exit Date	College Exit Date	\N	\N	\N	2022-11-17 17:07:51.962803	2022-11-17 17:07:51.962768	8458ad9e-d622-4260-9f40-4db9643f0712	1830
1831	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Selection	College Selection	College Selection	\N	\N	\N	2022-11-17 17:07:51.968853	2022-11-17 17:07:51.9688	6bb268d7-4886-497c-9648-65a5afb79c16	1831
1834	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - Math	Remedial Enrollment - Math	Remedial Enrollment - Math	\N	\N	\N	2022-11-17 17:07:51.980093	2022-11-17 17:07:51.980058	d724f7e4-ca37-4ac0-8c0f-bdc4b51be60a	1834
1835	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Student Interest	Student Interest	Student Interest	\N	\N	\N	2022-11-17 17:07:51.985477	2022-11-17 17:07:51.985189	80f55f1b-d5ac-4a60-9e36-551240d84ad7	1835
1836	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Master's College or University	Master's College or University	Generally includes institutions that awarded at least 50 master's degrees and fewer than 20 doctoral degrees during the update year (with occasional exceptions). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	2022-11-17 17:07:52.017305	2022-11-17 17:07:52.015972	366d9fba-7b98-40fd-9ef6-cc59178778e0	1836
1838	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate College	Baccalaureate College	Includes institutions where baccalaureate or higher degrees represent at least 50 percent of all degrees but where fewer than 50 master's degrees or 20 doctoral degrees were awarded during the update year. (Some institutions above the master's degree threshold are also included.) Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	2022-11-17 17:07:52.027917	2022-11-17 17:07:52.026818	e0641ade-4600-4fe9-92bd-2a57ceed5b5f	1838
1840	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Associate's College	Associate's College	Institutions at which the highest level degree awarded is an associate's degree. The institutions are sorted into nine categories based on the intersection of two factors: disciplinary focus (transfer, career and technical or mixed) and dominant student type (traditional, nontraditional or mixed). Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	2022-11-17 17:07:52.039704	2022-11-17 17:07:52.039646	92bb0a6f-2219-4f4e-8f8f-26d1bf79f966	1840
1842	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Four-Year	Special Focus Institution/Four-Year	Four-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	2022-11-17 17:07:52.047637	2022-11-17 17:07:52.047603	f67554a3-7e8e-4a68-aaab-efdda29ca0cf	1842
1844	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	DEPRECATED: At least 2 but less than 4 years	\N	\N	\N	2022-11-17 17:07:52.05577	2022-11-17 17:07:52.055735	5acf7af8-5523-4f08-8e9f-e8d9663dd8ed	1844
1845	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Four or more years	DEPRECATED: Four or more years	DEPRECATED: Four or more years	\N	\N	\N	2022-11-17 17:07:52.061206	2022-11-17 17:07:52.061092	d08d3ef0-f920-4052-8ecc-10c6b1371370	1845
1847	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Not Shared	Not Shared	The primary learning device is not shared with another individual.	\N	\N	\N	2022-11-17 17:07:52.098648	2022-11-17 17:07:52.097057	da29dbb5-3075-454c-9810-fe05012e3f37	1847
1849	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Unknown	Unknown	It is not known whether the primary learning device is shared with another individual.	\N	\N	\N	2022-11-17 17:07:52.109896	2022-11-17 17:07:52.109758	a87e627c-44a9-4157-a949-360f81cf76b1	1849
1850	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Desktop Computer	Desktop Computer	A desktop computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-11-17 17:07:52.143925	2022-11-17 17:07:52.142592	e3162844-aa29-4fa6-b07c-c004dc43e69b	1850
1852	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Tablet	Tablet	A Tablet is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-11-17 17:07:52.155206	2022-11-17 17:07:52.154369	69e058e6-a518-48c3-8b72-51de0ba8b572	1852
1807	uri://ed-fi.org/PersonalInformationVerificationDescriptor	Physicians certificate	Physicians certificate	Physicians certificate	\N	\N	\N	2022-11-17 17:07:51.745629	2022-11-17 17:07:51.745565	dacc5965-ddfe-4aeb-a0d1-4861e91c0120	1807
1810	uri://ed-fi.org/PlatformTypeDescriptor	Paper-based	Paper-based	Paper-based	\N	\N	\N	2022-11-17 17:07:51.786351	2022-11-17 17:07:51.784747	eb7e6f18-7305-4469-b33d-58a692af69c9	1810
1813	uri://ed-fi.org/PopulationServedDescriptor	Adult Basic Education Students	Adult Basic Education Students	Adult Basic Education Students	\N	\N	\N	2022-11-17 17:07:51.823655	2022-11-17 17:07:51.82209	b452e45f-2485-46b0-a0de-df7fe5a3fc71	1813
1814	uri://ed-fi.org/PopulationServedDescriptor	Career and Technical Education Students	Career and Technical Education Students	Career and Technical Education Students	\N	\N	\N	2022-11-17 17:07:51.834054	2022-11-17 17:07:51.833978	f4ec3514-1c26-40fe-af52-4d61f762ecc0	1814
1816	uri://ed-fi.org/PopulationServedDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	2022-11-17 17:07:51.844114	2022-11-17 17:07:51.844017	5d179181-caf2-404d-9a07-344c614f3cde	1816
1819	uri://ed-fi.org/PopulationServedDescriptor	Honors Students	Honors Students	Honors Students	\N	\N	\N	2022-11-17 17:07:51.855785	2022-11-17 17:07:51.855752	58ec6b9f-531b-4d2e-bc62-f7128dd71221	1819
1821	uri://ed-fi.org/PopulationServedDescriptor	Regular Students	Regular Students	Regular Students	\N	\N	\N	2022-11-17 17:07:51.864725	2022-11-17 17:07:51.864692	ef57da2a-06d9-4439-bd27-cbf41805740d	1821
1822	uri://ed-fi.org/PopulationServedDescriptor	Special Education Students	Special Education Students	Special Education Students	\N	\N	\N	2022-11-17 17:07:51.872409	2022-11-17 17:07:51.872213	60884864-99bc-4e49-9d1d-51e9dec9fd7f	1822
1823	uri://ed-fi.org/PostingResultDescriptor	Posting Cancelled	Posting Cancelled	Posting Cancelled	\N	\N	\N	2022-11-17 17:07:51.903802	2022-11-17 17:07:51.902237	7bf4a70e-f288-4f0c-960c-f24b6b391d01	1823
1826	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Certification Received	Certification Received	Certification Received	\N	\N	\N	2022-11-17 17:07:51.941397	2022-11-17 17:07:51.940079	0b94b30b-2a5e-471f-aa19-f4042621df5e	1826
1827	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Application	College Application	College Application	\N	\N	\N	2022-11-17 17:07:51.95204	2022-11-17 17:07:51.951992	2f9a1da7-d9ca-472e-85ab-60fd3510e2a3	1827
1829	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	College Enrollment	College Enrollment	College Enrollment	\N	\N	\N	2022-11-17 17:07:51.959949	2022-11-17 17:07:51.959881	8db0778e-b46f-4dd8-8e05-96ab6357cc2d	1829
1832	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	FAFSA Application	FAFSA Application	FAFSA Application	\N	\N	\N	2022-11-17 17:07:51.972033	2022-11-17 17:07:51.971998	99b25fc1-ff62-4616-a606-7a2afc2dd9c7	1832
1833	uri://ed-fi.org/PostSecondaryEventCategoryDescriptor	Remedial Enrollment - ELA	Remedial Enrollment - ELA	Remedial Enrollment - ELA	\N	\N	\N	2022-11-17 17:07:51.977165	2022-11-17 17:07:51.976916	9cd28906-5315-4155-a6e4-3576e06d189c	1833
1837	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Doctoral University	Doctoral University	Includes institutions that awarded at least 20 research/scholarship doctoral degrees during the update year and also institutions with below 20 research/scholarship doctoral degrees that awarded at least 30 professional practice doctoral degrees in at least 2 programs. Excludes Special Focus Institutions and Tribal Colleges.	\N	\N	\N	2022-11-17 17:07:52.017294	2022-11-17 17:07:52.015969	a8d97779-b5cc-4d3a-bf29-318f1286e661	1837
1839	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Baccalaureate/Associate's College	Baccalaureate/Associate's College	Includes four-year colleges (by virtue of having at least one baccalaureate degree program) that conferred more than 50 percent of degrees at the associate's level . Excludes Special Focus Institutions, Tribal Colleges, and institutions that have sufficient master's or doctoral degrees to fall into those categories.	\N	\N	\N	2022-11-17 17:07:52.031175	2022-11-17 17:07:52.031141	be481ed7-169c-4d26-bd4a-afda408ebcea	1839
1841	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Special Focus Institution/Two-Year	Special Focus Institution/Two-Year	Two-year institutions where a high concentration of degrees is in a single field or set of related fields. Excludes Tribal Colleges.	\N	\N	\N	2022-11-17 17:07:52.04237	2022-11-17 17:07:52.042337	580345e6-2d35-41e3-ad8b-ef91c0f5c1d3	1841
1843	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Tribal College	Tribal College	Colleges and universities that are members of the American Indian Higher Education Consortium, as identified in IPEDS Institutional Characteristics.	\N	\N	\N	2022-11-17 17:07:52.052026	2022-11-17 17:07:52.051981	f46ee812-75c3-4f6e-bd96-1ebbce09aa6e	1843
1846	uri://ed-fi.org/PostSecondaryInstitutionLevelDescriptor	Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	DEPRECATED: Less than 2 years (below associate)	\N	\N	\N	2022-11-17 17:07:52.064292	2022-11-17 17:07:52.064253	6ab0bcb4-d80d-4aee-9843-b33fff1e037a	1846
1848	uri://ed-fi.org/PrimaryLearningDeviceAccessDescriptor	Shared	Shared	The primary learning device is shared with another individual.	\N	\N	\N	2022-11-17 17:07:52.098644	2022-11-17 17:07:52.097061	1b49561f-7e63-42b6-b68b-90de43da9e5f	1848
1851	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Laptop Computer	Laptop Computer	A Laptop Computer is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-11-17 17:07:52.143944	2022-11-17 17:07:52.142599	a2b0d1f1-26ad-4706-8e83-a482d2a2dfa3	1851
1853	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Chromebook	Chromebook	A Chromebook is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-11-17 17:07:52.155657	2022-11-17 17:07:52.155588	3bd67f7d-9e2f-4708-b48a-26c40bfb8673	1853
1855	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	None	None	There is not a device the student uses to complete learning activities away from school.	\N	\N	\N	2022-11-17 17:07:52.167437	2022-11-17 17:07:52.167383	a8c96ac4-413b-4f84-9dca-2ce460fd65cc	1855
1857	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	School	School	The provider of the primary learning device is the school.	\N	\N	\N	2022-11-17 17:07:52.205026	2022-11-17 17:07:52.20342	fd4e18fc-a757-4a10-a3bc-8bce60f1e3c3	1857
1859	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Other	Other	The provider of the primary learning device is not yet defined.	\N	\N	\N	2022-11-17 17:07:52.218939	2022-11-17 17:07:52.215555	d4901ddf-8be2-4c3d-b1af-279ffe31bdcd	1859
1860	uri://ed-fi.org/ProficiencyDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2022-11-17 17:07:52.24434	2022-11-17 17:07:52.243038	a6f1d7cf-b3c1-4157-9615-198b42dd51a9	1860
1862	uri://ed-fi.org/ProgramAssignmentDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:52.285071	2022-11-17 17:07:52.283452	12b91dbf-c2f6-4f0c-adc5-7380ed6afb42	1862
1864	uri://ed-fi.org/ProgramAssignmentDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	2022-11-17 17:07:52.296099	2022-11-17 17:07:52.296045	a9a2a13b-92f9-4a06-aebf-1f190dbf3ce7	1864
1866	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Academic	Title I-Academic	Title I-Academic	\N	\N	\N	2022-11-17 17:07:52.305322	2022-11-17 17:07:52.305256	e2256f9b-fec6-4a9e-a3a2-6fcb49513c06	1866
1868	uri://gbisd.edu/ProgramCharacteristicDescriptor	After School	After School	After School	\N	\N	\N	2022-11-17 17:07:52.341383	2022-11-17 17:07:52.339532	7f2ab4b5-59e3-4485-964d-800279439596	1868
1870	uri://ed-fi.org/ProgramSponsorDescriptor	Education organization network	Education organization network	Education organization network	\N	\N	\N	2022-11-17 17:07:52.351822	2022-11-17 17:07:52.351789	8b5bb31e-e4ee-4100-af31-f2d84b60a9dc	1870
1871	uri://ed-fi.org/ProgramSponsorDescriptor	Education Service Center	Education Service Center	Education Service Center	\N	\N	\N	2022-11-17 17:07:52.357305	2022-11-17 17:07:52.357165	28c39be0-bee5-4a89-bf12-dba7018f440a	1871
1873	uri://ed-fi.org/ProgramSponsorDescriptor	Local Education Agency	Local Education Agency	Local Education Agency	\N	\N	\N	2022-11-17 17:07:52.365134	2022-11-17 17:07:52.365022	7b5e996f-e54e-4c5d-b2cf-ca1a5903c769	1873
1875	uri://ed-fi.org/ProgramSponsorDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:52.373592	2022-11-17 17:07:52.373491	d7241453-7017-4892-a76d-c25188023789	1875
1877	uri://ed-fi.org/ProgramSponsorDescriptor	Private organization	Private organization	Private organization	\N	\N	\N	2022-11-17 17:07:52.381951	2022-11-17 17:07:52.381913	668e3a8d-f1a6-493e-9a0b-83e30ccd58e1	1877
1879	uri://ed-fi.org/ProgramSponsorDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:52.38985	2022-11-17 17:07:52.389752	fc9560ba-acd4-4808-b2f0-84d069acf960	1879
1854	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Smartphone	Smartphone	A Smartphone is the type of device the student uses most often to complete learning activities away from school.	\N	\N	\N	2022-11-17 17:07:52.163685	2022-11-17 17:07:52.163627	d50e155a-d26f-4b6e-ad96-e1eec4320fe4	1854
1856	uri://ed-fi.org/PrimaryLearningDeviceAwayFromSchoolDescriptor	Other	Other	The type of device the student uses most often to complete learning activities away from school is not yet defined.	\N	\N	\N	2022-11-17 17:07:52.171308	2022-11-17 17:07:52.171275	ff0d5d49-a84d-4e93-ace4-9b70cb8b18a4	1856
1858	uri://ed-fi.org/PrimaryLearningDeviceProviderDescriptor	Personal	Personal	The provider of the primary learning device is the student or guardian.	\N	\N	\N	2022-11-17 17:07:52.205026	2022-11-17 17:07:52.203414	3f98cc81-977f-4281-ad76-32bbdab1f307	1858
1861	uri://ed-fi.org/ProficiencyDescriptor	Not Proficient	Not Proficient	Not Proficient	\N	\N	\N	2022-11-17 17:07:52.244352	2022-11-17 17:07:52.243035	54cde6c5-1aeb-499d-927c-b3fb9758a71f	1861
1863	uri://ed-fi.org/ProgramAssignmentDescriptor	Bilingual/English as a Second Language	Bilingual/English as a Second Language	Bilingual/English as a Second Language	\N	\N	\N	2022-11-17 17:07:52.285071	2022-11-17 17:07:52.283455	0b64dda9-809a-437f-a2b0-0b4ca536b77d	1863
1865	uri://ed-fi.org/ProgramAssignmentDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2022-11-17 17:07:52.298929	2022-11-17 17:07:52.298885	81c64031-799b-4249-a18d-2e046a92cc6f	1865
1867	uri://ed-fi.org/ProgramAssignmentDescriptor	Title I-Non-Academic	Title I-Non-Academic	Title I-Non-Academic	\N	\N	\N	2022-11-17 17:07:52.30813	2022-11-17 17:07:52.308097	0864ad9d-55b1-4cb0-a805-348c4d71e455	1867
1869	uri://ed-fi.org/ProgramSponsorDescriptor	Business	Business	Business	\N	\N	\N	2022-11-17 17:07:52.347581	2022-11-17 17:07:52.346186	f2b866a1-20c8-43ce-9478-8b78902f853b	1869
1872	uri://ed-fi.org/ProgramSponsorDescriptor	Federal government	Federal government	Federal government	\N	\N	\N	2022-11-17 17:07:52.360329	2022-11-17 17:07:52.360296	92ad5a20-ca47-4200-9c72-7ac039cb41af	1872
1874	uri://ed-fi.org/ProgramSponsorDescriptor	Non-profit organization	Non-profit organization	Non-profit organization	\N	\N	\N	2022-11-17 17:07:52.368789	2022-11-17 17:07:52.368758	ce158c7a-884a-41c2-a460-4b8e1cca8c3d	1874
1876	uri://ed-fi.org/ProgramSponsorDescriptor	Postsecondary institution	Postsecondary institution	Postsecondary institution	\N	\N	\N	2022-11-17 17:07:52.377341	2022-11-17 17:07:52.377308	5e35e087-29b6-4f2d-a52d-ddfb961f89c6	1876
1878	uri://ed-fi.org/ProgramSponsorDescriptor	Religious organization	Religious organization	Religious organization	\N	\N	\N	2022-11-17 17:07:52.385371	2022-11-17 17:07:52.385338	e6fa94f4-cd79-419b-9a3a-05a003bd3298	1878
1880	uri://ed-fi.org/ProgramSponsorDescriptor	State Education Agency	State Education Agency	State Education Agency	\N	\N	\N	2022-11-17 17:07:52.393399	2022-11-17 17:07:52.393366	fb132c81-be5f-4903-a0ab-471dbefabd99	1880
1882	uri://ed-fi.org/ProgramTypeDescriptor	Adult/Continuing Education	Adult/Continuing Education	Adult/Continuing Education	\N	\N	\N	2022-11-17 17:07:52.426279	2022-11-17 17:07:52.424683	bb797925-b9e6-4157-9a5d-c7463c81ff26	1882
1883	uri://ed-fi.org/ProgramTypeDescriptor	Athletics	Athletics	Athletics	\N	\N	\N	2022-11-17 17:07:52.437839	2022-11-17 17:07:52.437121	daeb31db-aad8-46d3-b2d8-7bdc5c39e8e5	1883
1886	uri://ed-fi.org/ProgramTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-11-17 17:07:52.44919	2022-11-17 17:07:52.449157	bb3ebb34-74f1-4934-959e-c3e9b2ee375d	1886
1887	uri://ed-fi.org/ProgramTypeDescriptor	Cocurricular Programs	Cocurricular Programs	Cocurricular Programs	\N	\N	\N	2022-11-17 17:07:52.454527	2022-11-17 17:07:52.454436	b5b24cf6-87b4-4433-814c-a034ea870d4d	1887
1889	uri://ed-fi.org/ProgramTypeDescriptor	Community Service Program	Community Service Program	Community Service Program	\N	\N	\N	2022-11-17 17:07:52.46266	2022-11-17 17:07:52.46262	9da2b8d8-e511-4fcd-b979-80f89f5a453a	1889
1891	uri://ed-fi.org/ProgramTypeDescriptor	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	Compensatory Services for Disadvantaged Students	\N	\N	\N	2022-11-17 17:07:52.470965	2022-11-17 17:07:52.470864	a5ba4fdf-9265-428a-ac9b-d9a211e6aa54	1891
1893	uri://ed-fi.org/ProgramTypeDescriptor	District-Funded GED	District-Funded GED	District-Funded GED	\N	\N	\N	2022-11-17 17:07:52.479301	2022-11-17 17:07:52.479192	0cf912e8-2846-43e7-9f06-5097d5bcc372	1893
1895	uri://ed-fi.org/ProgramTypeDescriptor	Early Intervention Services Part C	Early Intervention Services Part C	Early Intervention Services Part C	\N	\N	\N	2022-11-17 17:07:52.487525	2022-11-17 17:07:52.487428	f107dae3-f2e6-4fc2-9817-63e72c6102cd	1895
1898	uri://ed-fi.org/ProgramTypeDescriptor	Expelled Education	Expelled Education	Expelled Education	\N	\N	\N	2022-11-17 17:07:52.49972	2022-11-17 17:07:52.499688	3c5d8869-0398-4ab4-b5cf-7469da4730b2	1898
1900	uri://ed-fi.org/ProgramTypeDescriptor	Fee For Service	Fee For Service	Fee For Service	\N	\N	\N	2022-11-17 17:07:52.508058	2022-11-17 17:07:52.508026	b4c62fe5-7b70-453d-bdd7-cd48d8eee297	1900
1902	uri://ed-fi.org/ProgramTypeDescriptor	Gifted and Talented	Gifted and Talented	Gifted and Talented	\N	\N	\N	2022-11-17 17:07:52.51846	2022-11-17 17:07:52.518388	46f631e5-ed8f-4222-a43e-a1b362b013e5	1902
1905	uri://ed-fi.org/ProgramTypeDescriptor	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	High School Equivalency Program (HSEP)	\N	\N	\N	2022-11-17 17:07:52.52981	2022-11-17 17:07:52.529774	331196b5-a9e0-4f64-a07a-27cb50c1d81a	1905
1907	uri://ed-fi.org/ProgramTypeDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	2022-11-17 17:07:52.5379	2022-11-17 17:07:52.537865	87d5e6a7-b718-4627-adb8-7e77e1e55bb2	1907
1909	uri://ed-fi.org/ProgramTypeDescriptor	Immigrant Education	Immigrant Education	Immigrant Education	\N	\N	\N	2022-11-17 17:07:52.546195	2022-11-17 17:07:52.546157	23881f34-3c07-41ef-9a89-d71d88a510ff	1909
1911	uri://ed-fi.org/ProgramTypeDescriptor	Indian Education	Indian Education	Indian Education	\N	\N	\N	2022-11-17 17:07:52.554304	2022-11-17 17:07:52.554269	a5db8f69-f83f-4055-92b0-844a32598144	1911
1913	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Extended Day	Kindergarten - Extended Day	Kindergarten - Extended Day	\N	\N	\N	2022-11-17 17:07:52.562084	2022-11-17 17:07:52.561909	fb0d63ef-d15d-4611-a8aa-8d6b39dd3d47	1913
1914	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Full Day	Kindergarten - Full Day	Kindergarten - Full Day	\N	\N	\N	2022-11-17 17:07:52.56723	2022-11-17 17:07:52.567192	97a61f95-75fc-4df9-81ea-40a179318b2c	1914
1915	uri://ed-fi.org/ProgramTypeDescriptor	Kindergarten - Half Day	Kindergarten - Half Day	Kindergarten - Half Day	\N	\N	\N	2022-11-17 17:07:52.572134	2022-11-17 17:07:52.571943	60e16f14-f181-4be3-b317-31f55222d28c	1915
1917	uri://ed-fi.org/ProgramTypeDescriptor	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	Magnet/Special Program Emphasis	\N	\N	\N	2022-11-17 17:07:52.580122	2022-11-17 17:07:52.580088	b93316d3-9251-4432-b63a-46654094b2b6	1917
1918	uri://ed-fi.org/ProgramTypeDescriptor	Migrant Education	Migrant Education	Migrant Education	\N	\N	\N	2022-11-17 17:07:52.585314	2022-11-17 17:07:52.585162	938be429-bf6b-42fe-883c-381178f32459	1918
1920	uri://ed-fi.org/ProgramTypeDescriptor	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	Optional Flexible School Day Program (OFSDP)	\N	\N	\N	2022-11-17 17:07:52.59662	2022-11-17 17:07:52.596569	544a058b-a82c-4320-af0e-ebc871e2c96e	1920
1923	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Full Day	Prekindergarten - Full Day	Prekindergarten - Full Day	\N	\N	\N	2022-11-17 17:07:52.608045	2022-11-17 17:07:52.608013	66a4bc26-f9f1-4c7e-8109-ab81b54f6411	1923
1925	uri://ed-fi.org/ProgramTypeDescriptor	Preschool Special Education	Preschool Special Education	Preschool Special Education	\N	\N	\N	2022-11-17 17:07:52.616305	2022-11-17 17:07:52.61627	3f15e3dd-a3f0-406f-b1ff-89002f020a6c	1925
1926	uri://ed-fi.org/ProgramTypeDescriptor	Public Preschool	Public Preschool	Public Preschool	\N	\N	\N	2022-11-17 17:07:52.621305	2022-11-17 17:07:52.621007	b053b809-8095-49d2-b2ee-dd66606d86c1	1926
1929	uri://ed-fi.org/ProgramTypeDescriptor	Section 504 Placement	Section 504 Placement	Section 504 Placement	\N	\N	\N	2022-11-17 17:07:52.638205	2022-11-17 17:07:52.638155	4f5f0516-1e17-4581-922f-0de5ade7aa70	1929
1931	uri://ed-fi.org/ProgramTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2022-11-17 17:07:52.646484	2022-11-17 17:07:52.646413	055447b2-bda9-4994-9e08-15dd2a6a099b	1931
1933	uri://ed-fi.org/ProgramTypeDescriptor	Student School Food Service	Student School Food Service	Student School Food Service	\N	\N	\N	2022-11-17 17:07:52.656074	2022-11-17 17:07:52.655992	6fc915ea-3f89-487a-8a42-0f4434da1d72	1933
1936	uri://ed-fi.org/ProgramTypeDescriptor	Technical Preparatory	Technical Preparatory	Technical Preparatory	\N	\N	\N	2022-11-17 17:07:52.667313	2022-11-17 17:07:52.667278	bb9be4c1-b04a-4986-a78a-8725f8bbcb4d	1936
1881	uri://ed-fi.org/ProgramTypeDescriptor	Alternative Education	Alternative Education	Alternative Education	\N	\N	\N	2022-11-17 17:07:52.426279	2022-11-17 17:07:52.42468	d84599c4-35a8-4d16-b048-a00b146ed9d4	1881
1884	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual	Bilingual	Bilingual	\N	\N	\N	2022-11-17 17:07:52.438314	2022-11-17 17:07:52.438247	90ba748a-4138-4af8-8419-e1f68957486e	1884
1885	uri://ed-fi.org/ProgramTypeDescriptor	Bilingual Summer	Bilingual Summer	Bilingual Summer	\N	\N	\N	2022-11-17 17:07:52.446157	2022-11-17 17:07:52.446048	4e03efb5-63f6-4d9d-b673-b5b4eafdfc69	1885
1888	uri://ed-fi.org/ProgramTypeDescriptor	College Preparatory	College Preparatory	College Preparatory	\N	\N	\N	2022-11-17 17:07:52.458046	2022-11-17 17:07:52.458013	010df277-e25b-451c-a519-b5f7b00b8587	1888
1890	uri://ed-fi.org/ProgramTypeDescriptor	Community/Junior College Education Program	Community/Junior College Education Program	Community/Junior College Education Program	\N	\N	\N	2022-11-17 17:07:52.466051	2022-11-17 17:07:52.466018	b236f670-c2a6-4a7d-b8c6-6389264af0aa	1890
1892	uri://ed-fi.org/ProgramTypeDescriptor	Counseling Services	Counseling Services	Counseling Services	\N	\N	\N	2022-11-17 17:07:52.474689	2022-11-17 17:07:52.474657	1b09510d-d36b-487e-a6e6-fe02a562274d	1892
1894	uri://ed-fi.org/ProgramTypeDescriptor	Early Head Start	Early Head Start	Early Head Start	\N	\N	\N	2022-11-17 17:07:52.483249	2022-11-17 17:07:52.483219	97553b21-abb4-48d5-b72a-5387ada7bfd8	1894
1896	uri://ed-fi.org/ProgramTypeDescriptor	English as a Second Language (ESL)	English as a Second Language (ESL)	English as a Second Language (ESL)	\N	\N	\N	2022-11-17 17:07:52.49127	2022-11-17 17:07:52.491237	425d87a9-7c69-4b3c-a850-3765559e9c80	1896
1897	uri://ed-fi.org/ProgramTypeDescriptor	Even Start	Even Start	Even Start	\N	\N	\N	2022-11-17 17:07:52.496754	2022-11-17 17:07:52.496687	99a82c92-ab2b-4edd-8570-daebd59bcc25	1897
1899	uri://ed-fi.org/ProgramTypeDescriptor	Extended Day/Child Care Services	Extended Day/Child Care Services	Extended Day/Child Care Services	\N	\N	\N	2022-11-17 17:07:52.505108	2022-11-17 17:07:52.505041	90c7522d-18e8-4f64-9633-506dd1f58796	1899
1901	uri://ed-fi.org/ProgramTypeDescriptor	Foreign Exchange	Foreign Exchange	Foreign Exchange	\N	\N	\N	2022-11-17 17:07:52.512845	2022-11-17 17:07:52.512813	1a5d8144-bf38-4153-ac64-e52c77395ce1	1901
1903	uri://ed-fi.org/ProgramTypeDescriptor	Head Start	Head Start	Head Start	\N	\N	\N	2022-11-17 17:07:52.521404	2022-11-17 17:07:52.521368	513999ec-0728-488e-9ef7-e706a485a6dc	1903
1904	uri://ed-fi.org/ProgramTypeDescriptor	Health Services Program	Health Services Program	Health Services Program	\N	\N	\N	2022-11-17 17:07:52.526357	2022-11-17 17:07:52.526321	6fc1c2ae-4fac-4fd3-8593-31f94a4901cd	1904
1906	uri://ed-fi.org/ProgramTypeDescriptor	Home Visiting	Home Visiting	Home Visiting	\N	\N	\N	2022-11-17 17:07:52.534362	2022-11-17 17:07:52.534258	554c8899-ebe7-4cbe-b4c0-1f28ab9aac65	1906
1908	uri://ed-fi.org/ProgramTypeDescriptor	IDEA	IDEA	IDEA	\N	\N	\N	2022-11-17 17:07:52.542613	2022-11-17 17:07:52.542575	a059bf56-3c79-4313-baa8-91322031ef72	1908
1910	uri://ed-fi.org/ProgramTypeDescriptor	Independent Study	Independent Study	Independent Study	\N	\N	\N	2022-11-17 17:07:52.5507	2022-11-17 17:07:52.550603	be2d1f04-b2d1-4bac-89d4-65c60cacd789	1910
1912	uri://ed-fi.org/ProgramTypeDescriptor	International Baccalaureate	International Baccalaureate	International Baccalaureate	\N	\N	\N	2022-11-17 17:07:52.558049	2022-11-17 17:07:52.558012	626ea9d9-627d-418d-808f-937590282024	1912
1916	uri://ed-fi.org/ProgramTypeDescriptor	Library/Media Services Program	Library/Media Services Program	Library/Media Services Program	\N	\N	\N	2022-11-17 17:07:52.575475	2022-11-17 17:07:52.575439	16a60c97-73d1-4588-a0e4-7810f075ffaf	1916
1919	uri://ed-fi.org/ProgramTypeDescriptor	Neglected and Delinquent Program	Neglected and Delinquent Program	Neglected and Delinquent Program	\N	\N	\N	2022-11-17 17:07:52.588304	2022-11-17 17:07:52.588265	b10de8e7-5582-436c-8093-fc7505ea6c47	1919
1921	uri://ed-fi.org/ProgramTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:52.599662	2022-11-17 17:07:52.599627	92b615af-33ec-497b-bca7-7a11e034745f	1921
1922	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Extended Day	Prekindergarten - Extended Day	Prekindergarten - Extended Day	\N	\N	\N	2022-11-17 17:07:52.604816	2022-11-17 17:07:52.60473	f0886f04-6196-4b6b-8d1d-f3d3f6f186af	1922
1924	uri://ed-fi.org/ProgramTypeDescriptor	Prekindergarten - Half Day	Prekindergarten - Half Day	Prekindergarten - Half Day	\N	\N	\N	2022-11-17 17:07:52.613324	2022-11-17 17:07:52.613147	3331dbbe-6a31-40c9-9a5e-de9808658919	1924
1927	uri://ed-fi.org/ProgramTypeDescriptor	Regular Education	Regular Education	Regular Education	\N	\N	\N	2022-11-17 17:07:52.624121	2022-11-17 17:07:52.624086	28db2249-bce1-4e01-b9a7-9be5c26f4fd5	1927
1928	uri://ed-fi.org/ProgramTypeDescriptor	Remedial Education	Remedial Education	Remedial Education	\N	\N	\N	2022-11-17 17:07:52.629155	2022-11-17 17:07:52.62911	03dc71a6-99ec-476c-b7aa-2f03af1dd804	1928
1930	uri://ed-fi.org/ProgramTypeDescriptor	Service Learning	Service Learning	Service Learning	\N	\N	\N	2022-11-17 17:07:52.640075	2022-11-17 17:07:52.640041	ac29ca1c-ac03-4762-9fa9-1a2e0d8bf6e1	1930
1932	uri://ed-fi.org/ProgramTypeDescriptor	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	Student Retention/Dropout Prevention	\N	\N	\N	2022-11-17 17:07:52.649334	2022-11-17 17:07:52.649299	bf60cf13-819d-49d0-a79c-752179bf79a9	1932
1934	uri://ed-fi.org/ProgramTypeDescriptor	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	Substance Abuse Education/Prevention	\N	\N	\N	2022-11-17 17:07:52.658776	2022-11-17 17:07:52.658741	c0e90ad3-c8b2-42d1-8b6c-24dd6246ab64	1934
1935	uri://ed-fi.org/ProgramTypeDescriptor	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	Teacher Professional Development/Mentoring	\N	\N	\N	2022-11-17 17:07:52.664022	2022-11-17 17:07:52.663987	ed74fb10-7084-40a5-ba9a-ff3be51f8138	1935
1938	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 1	Title I Part D Subpart 1	Title I Part D Subpart 1	\N	\N	\N	2022-11-17 17:07:52.72714	2022-11-17 17:07:52.727068	4ea5b34a-a317-4867-9017-1211567cd0c5	1938
1940	uri://ed-fi.org/ProgramTypeDescriptor	Vocational Education	Vocational Education	Vocational Education	\N	\N	\N	2022-11-17 17:07:52.736385	2022-11-17 17:07:52.736351	1be7d4ab-e366-4fd1-9e2e-4b0478ba6bd5	1940
1941	uri://ed-fi.org/ProgressDescriptor	Progress	Progress	Progress	\N	\N	\N	2022-11-17 17:07:52.770428	2022-11-17 17:07:52.769095	c5ec68d4-3d5f-4152-845f-96589e638f35	1941
1943	uri://ed-fi.org/ProgressDescriptor	Proficient	Proficient	Proficient	\N	\N	\N	2022-11-17 17:07:52.781086	2022-11-17 17:07:52.779715	59153756-6df0-4a26-8d1c-31539d4cfac1	1943
1944	uri://ed-fi.org/ProgressLevelDescriptor	Negative Grade	Negative Grade	Negative Grade	\N	\N	\N	2022-11-17 17:07:52.811074	2022-11-17 17:07:52.809738	1aa0e34f-28e5-464e-ad23-885c4e03e6b9	1944
1946	uri://ed-fi.org/ProgressLevelDescriptor	Up One Grade	Up One Grade	Up One Grade	\N	\N	\N	2022-11-17 17:07:52.821349	2022-11-17 17:07:52.821304	f0032224-489e-4bc4-b060-7c39b8c73187	1946
1949	uri://ed-fi.org/ProviderCategoryDescriptor	Child care center	Child care center	Child care center	\N	\N	\N	2022-11-17 17:07:52.856485	2022-11-17 17:07:52.854891	7de49dd9-4dd0-4b8a-8a1f-e25a7be01eb1	1949
1950	uri://ed-fi.org/ProviderCategoryDescriptor	Community care	Community care	Community care	\N	\N	\N	2022-11-17 17:07:52.866671	2022-11-17 17:07:52.866614	b2d72543-d917-4583-8ca9-f6af0d02ffe7	1950
1952	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home - large	Family child care home - large	Family child care home - large	\N	\N	\N	2022-11-17 17:07:52.879992	2022-11-17 17:07:52.879945	c2123a4d-baba-4951-82a5-1e9d8bd1b964	1952
1954	uri://ed-fi.org/ProviderCategoryDescriptor	Ministry care	Ministry care	Ministry care	\N	\N	\N	2022-11-17 17:07:52.893729	2022-11-17 17:07:52.893675	ce1741fa-64b9-4da6-996f-4a5847ecc81b	1954
1956	uri://ed-fi.org/ProviderCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:52.905015	2022-11-17 17:07:52.904949	dee91247-0b0c-45cb-9ee9-d24a9d380a0d	1956
1958	uri://ed-fi.org/ProviderCategoryDescriptor	Resident camps	Resident camps	Resident camps	\N	\N	\N	2022-11-17 17:07:52.918933	2022-11-17 17:07:52.91889	78658ee3-f19f-4bc9-a3f2-799275f6e6b2	1958
1959	uri://ed-fi.org/ProviderCategoryDescriptor	Residential treatment care	Residential treatment care	Residential treatment care	\N	\N	\N	2022-11-17 17:07:52.924859	2022-11-17 17:07:52.924803	0d4f4048-db3f-4011-ac63-6f88e6d340c7	1959
1960	uri://ed-fi.org/ProviderCategoryDescriptor	School-age child care	School-age child care	School-age child care	\N	\N	\N	2022-11-17 17:07:52.931161	2022-11-17 17:07:52.931107	4c6f8ac2-15cc-4aea-8c6b-b8ad2dae8c25	1960
1962	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC	DEPRECATED: Center-EC	DEPRECATED: Center-EC	\N	\N	\N	2022-11-17 17:07:52.943377	2022-11-17 17:07:52.943323	9220a063-0eeb-4cd7-ada4-ebdb50e4e048	1962
2061	uri://ed-fi.org/RelationDescriptor	Mother	Mother	Mother	\N	\N	\N	2022-11-17 17:07:53.661453	2022-11-17 17:07:53.661419	992e3b82-a29f-48bc-a312-3173ee184a74	2061
1937	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part A	Title I Part A	Title I Part A	\N	\N	\N	2022-11-17 17:07:52.673719	2022-11-17 17:07:52.673675	6dfa4699-e111-4605-83e6-dbb70795367f	1937
1939	uri://ed-fi.org/ProgramTypeDescriptor	Title I Part D Subpart 2	Title I Part D Subpart 2	Title I Part D Subpart 2	\N	\N	\N	2022-11-17 17:07:52.733727	2022-11-17 17:07:52.73368	5663bb18-ae3b-4e93-98f5-72d613985b87	1939
1942	uri://ed-fi.org/ProgressDescriptor	No Progress	No Progress	No Progress	\N	\N	\N	2022-11-17 17:07:52.770436	2022-11-17 17:07:52.769092	e1f36401-1b2f-41ea-8a5a-041be0029b5c	1942
1945	uri://ed-fi.org/ProgressLevelDescriptor	No Change	No Change	No Change	\N	\N	\N	2022-11-17 17:07:52.811081	2022-11-17 17:07:52.809734	df714952-5aa7-48ec-a7ba-a7894b7a66af	1945
1947	uri://ed-fi.org/ProgressLevelDescriptor	Up More Than One Grade	Up More Than One Grade	Up More Than One Grade	\N	\N	\N	2022-11-17 17:07:52.823342	2022-11-17 17:07:52.82331	5f6416e5-b7a9-4fa5-85f4-f1035ea3e844	1947
1948	uri://ed-fi.org/ProviderCategoryDescriptor	Care in your own home	Care in your own home	Care in your own home	\N	\N	\N	2022-11-17 17:07:52.85628	2022-11-17 17:07:52.854888	19d3dab4-bfd0-4788-ac28-39c15f047911	1948
1951	uri://ed-fi.org/ProviderCategoryDescriptor	Family child care home	Family child care home	Family child care home	\N	\N	\N	2022-11-17 17:07:52.876119	2022-11-17 17:07:52.873923	8d151290-47a2-475c-b0d7-1493a405f322	1951
1953	uri://ed-fi.org/ProviderCategoryDescriptor	Head Start and Early Head Start	Head Start and Early Head Start	Head Start and Early Head Start	\N	\N	\N	2022-11-17 17:07:52.887806	2022-11-17 17:07:52.887754	0ff5bc55-72ab-4f3b-afef-bdb212c703b5	1953
1955	uri://ed-fi.org/ProviderCategoryDescriptor	On-premise child care	On-premise child care	On-premise child care	\N	\N	\N	2022-11-17 17:07:52.899436	2022-11-17 17:07:52.899389	253ea611-5ecf-4476-bce2-9a5303a03987	1955
1957	uri://ed-fi.org/ProviderCategoryDescriptor	Preschool	Preschool	Preschool	\N	\N	\N	2022-11-17 17:07:52.911536	2022-11-17 17:07:52.911479	c95c54c1-7e75-42ce-a518-f6e59c650352	1957
1961	uri://ed-fi.org/ProviderCategoryDescriptor	School-based child care	School-based child care	School-based child care	\N	\N	\N	2022-11-17 17:07:52.937595	2022-11-17 17:07:52.937541	b7e84889-d86e-41ee-9159-cfb0fa6f0201	1961
1963	uri://ed-fi.org/ProviderCategoryDescriptor	Center-EC with SA	DEPRECATED: Center-EC with SA	DEPRECATED: Center-EC with SA	\N	\N	\N	2022-11-17 17:07:52.950472	2022-11-17 17:07:52.950418	fb24588e-b28a-484c-ba58-fbf2b2278b09	1963
1965	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	DEPRECATED: Licensed Day Care Center	\N	\N	\N	2022-11-17 17:07:52.965524	2022-11-17 17:07:52.963372	87e70ea5-a693-4b7a-9ac5-474da7bb0507	1965
1967	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	DEPRECATED: Licensed Large Family Child Care	\N	\N	\N	2022-11-17 17:07:52.976742	2022-11-17 17:07:52.976696	ea6616bb-29a1-465f-a14a-b608204cb35c	1967
1969	uri://ed-fi.org/ProviderProfitabilityDescriptor	Government Run	Government Run	Government Run	\N	\N	\N	2022-11-17 17:07:53.031109	2022-11-17 17:07:53.029095	9ee8c8ef-03ed-487d-9b04-eca1e3e18ebf	1969
1971	uri://ed-fi.org/ProviderProfitabilityDescriptor	Nonprofit	Nonprofit	Nonprofit	\N	\N	\N	2022-11-17 17:07:53.046446	2022-11-17 17:07:53.046394	cf06716f-a2d2-4572-90a7-5b9086ecc955	1971
1972	uri://ed-fi.org/ProviderStatusDescriptor	Active	Active	Active	\N	\N	\N	2022-11-17 17:07:53.083752	2022-11-17 17:07:53.082138	3d2b2511-01d2-4296-b14f-2a82219af0ac	1972
1976	uri://ed-fi.org/PublicationStatusDescriptor	Adopted	Adopted	Adopted	\N	\N	\N	2022-11-17 17:07:53.125415	2022-11-17 17:07:53.124039	82c3c074-1019-49ee-a51b-801d47277dc2	1976
1978	uri://ed-fi.org/PublicationStatusDescriptor	Published	Published	Published	\N	\N	\N	2022-11-17 17:07:53.13825	2022-11-17 17:07:53.138234	26c168d7-00e3-4955-9123-e3a7e0f094bc	1978
1979	uri://ed-fi.org/PublicationStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-11-17 17:07:53.144729	2022-11-17 17:07:53.144441	e4ae5ff0-ad73-4910-8d16-a116dbe131c4	1979
1981	uri://ed-fi.org/QuestionFormDescriptor	Radio box	Radio box	Radio box	\N	\N	\N	2022-11-17 17:07:53.175666	2022-11-17 17:07:53.174326	deb118b4-108d-429c-89c9-dc68c481c0a7	1981
1982	uri://ed-fi.org/QuestionFormDescriptor	Dropdown	Dropdown	Dropdown	\N	\N	\N	2022-11-17 17:07:53.185549	2022-11-17 17:07:53.185513	cf7b7648-9821-4aad-a8d6-a9e7a765ac75	1982
1984	uri://ed-fi.org/QuestionFormDescriptor	Matrix of dropdowns	Matrix of dropdowns	Matrix of dropdowns	\N	\N	\N	2022-11-17 17:07:53.193739	2022-11-17 17:07:53.193694	ca25e2ec-38ee-49f2-96c9-7032f03a2abc	1984
1986	uri://ed-fi.org/QuestionFormDescriptor	Textbox	Textbox	Textbox	\N	\N	\N	2022-11-17 17:07:53.201944	2022-11-17 17:07:53.201841	bcfb4c36-7e92-4be3-8045-751c029c2503	1986
1988	uri://ed-fi.org/RaceDescriptor	American Indian - Alaska Native	American Indian - Alaska Native	American Indian - Alaska Native	\N	\N	\N	2022-11-17 17:07:53.237318	2022-11-17 17:07:53.235729	fa05e2ca-bc52-4603-90a7-43f7a966d695	1988
1990	uri://ed-fi.org/RaceDescriptor	Black - African American	Black - African American	Black - African American	\N	\N	\N	2022-11-17 17:07:53.247223	2022-11-17 17:07:53.247154	2c91a1cd-8462-45b8-93dc-1adbc7c2add5	1990
1992	uri://ed-fi.org/RaceDescriptor	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	Native Hawaiian - Pacific Islander	\N	\N	\N	2022-11-17 17:07:53.254404	2022-11-17 17:07:53.254369	4ce546ec-43da-4f65-b255-b83556ddba7c	1992
1994	uri://ed-fi.org/RaceDescriptor	White	White	White	\N	\N	\N	2022-11-17 17:07:53.261837	2022-11-17 17:07:53.261783	3ea169a7-593a-4e6d-ba29-066272ee021d	1994
1996	uri://ed-fi.org/ReasonExitedDescriptor	Died or is permanently incapacitated	Died or is permanently incapacitated	Died or is permanently incapacitated	\N	\N	\N	2022-11-17 17:07:53.293175	2022-11-17 17:07:53.291594	ba7cd999-c814-46e5-9597-993874e021bb	1996
1997	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with a high school diploma	Graduated with a high school diploma	Graduated with a high school diploma	\N	\N	\N	2022-11-17 17:07:53.303563	2022-11-17 17:07:53.303519	bcc703f7-fe83-461e-bd07-bef2895af103	1997
1999	uri://ed-fi.org/ReasonExitedDescriptor	Moved out of state	Moved out of state	Moved out of state	\N	\N	\N	2022-11-17 17:07:53.312197	2022-11-17 17:07:53.312161	57381694-c438-46c6-a828-4ac2c2d88596	1999
2001	uri://ed-fi.org/ReasonExitedDescriptor	Reached maximum age	Reached maximum age	Reached maximum age	\N	\N	\N	2022-11-17 17:07:53.320149	2022-11-17 17:07:53.320114	e8642f9b-acd1-4e57-afd8-3a05a43fbbb1	2001
2002	uri://ed-fi.org/ReasonExitedDescriptor	Received certificate of completion or equivalent	Received completion certificate, modified diploma, or met IEP requirements	Received certificate of completion, modified diploma, or finished IEP requirements	\N	\N	\N	2022-11-17 17:07:53.324787	2022-11-17 17:07:53.324748	964301d2-0855-4e6f-b296-e5c355637661	2002
2004	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to another district or school	Transferred to another district or school	Transferred to another district or school	\N	\N	\N	2022-11-17 17:07:53.332647	2022-11-17 17:07:53.33261	f6c95267-1ead-4b3e-8d87-d24ae947b5de	2004
2005	uri://ed-fi.org/ReasonExitedDescriptor	Transferred to regular education	Transferred to regular education	Transferred to regular education	\N	\N	\N	2022-11-17 17:07:53.33807	2022-11-17 17:07:53.337857	d57bce76-f668-4ad8-b1bc-938c09e44990	2005
2007	uri://ed-fi.org/ReasonExitedDescriptor	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	Withdrawal by a parent (or guardian)	\N	\N	\N	2022-11-17 17:07:53.34613	2022-11-17 17:07:53.346071	1d3c6190-b096-45b5-acb1-ef48579db123	2007
2009	uri://ed-fi.org/ReasonNotTestedDescriptor	Alternate assessment administered	Alternate assessment administered	Alternate assessment administered	\N	\N	\N	2022-11-17 17:07:53.377197	2022-11-17 17:07:53.375854	69d75371-5a8a-41ec-ae55-b54cd3c407f8	2009
2011	uri://ed-fi.org/ReasonNotTestedDescriptor	Foreign exchange student waiver	Foreign exchange student waiver	Foreign exchange student waiver	\N	\N	\N	2022-11-17 17:07:53.389663	2022-11-17 17:07:53.389631	b9097c77-21b3-4055-a051-05f6077e5f35	2011
2012	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP exempt	LEP exempt	LEP exempt	\N	\N	\N	2022-11-17 17:07:53.39516	2022-11-17 17:07:53.395105	41d9d0e1-f60b-468a-bc1c-f61382d74e21	2012
2015	uri://ed-fi.org/ReasonNotTestedDescriptor	Not appropriate (ARD decision)	Not appropriate (ARD decision)	Not appropriate (ARD decision)	\N	\N	\N	2022-11-17 17:07:53.406208	2022-11-17 17:07:53.406177	155b6769-fa52-410e-8dee-d1f764878924	2015
2018	uri://ed-fi.org/ReasonNotTestedDescriptor	Parental waiver	Parental waiver	Parental waiver	\N	\N	\N	2022-11-17 17:07:53.419036	2022-11-17 17:07:53.419002	626c8604-12b2-4e85-bd96-d4978d9892dd	2018
2019	uri://ed-fi.org/ReasonNotTestedDescriptor	Previously passed the examination	Previously passed the examination	Previously passed the examination	\N	\N	\N	2022-11-17 17:07:53.423976	2022-11-17 17:07:53.423872	3ee138b5-b6d8-4140-858f-3e29ee2446be	2019
1964	uri://ed-fi.org/ProviderCategoryDescriptor	Center-SA Only	DEPRECATED: Center-SA Only	DEPRECATED: Center-SA Only	\N	\N	\N	2022-11-17 17:07:52.956242	2022-11-17 17:07:52.956189	19ba6124-098b-4410-a541-5abe4ecaa6d0	1964
1966	uri://ed-fi.org/ProviderCategoryDescriptor	Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	DEPRECATED: Licensed Family Child Care	\N	\N	\N	2022-11-17 17:07:52.968543	2022-11-17 17:07:52.968336	e9dc5261-4151-43ea-99cd-f3b53abe848b	1966
1968	uri://ed-fi.org/ProviderCategoryDescriptor	Not Applicable	DEPRECATED: Not Applicable	DEPRECATED: Not Applicable	\N	\N	\N	2022-11-17 17:07:52.982835	2022-11-17 17:07:52.982782	fd6c0bd0-5efb-4c38-9d3d-27212095dfb0	1968
1970	uri://ed-fi.org/ProviderProfitabilityDescriptor	ForProfit	ForProfit	ForProfit	\N	\N	\N	2022-11-17 17:07:53.038922	2022-11-17 17:07:53.038863	5989b462-974f-4da3-952f-e01a7ed9ecfc	1970
1973	uri://ed-fi.org/ProviderStatusDescriptor	Inactive	Inactive	Inactive	\N	\N	\N	2022-11-17 17:07:53.083752	2022-11-17 17:07:53.08214	04110c34-b8a9-4fca-8170-9eabdeb4380d	1973
1974	uri://ed-fi.org/ProviderStatusDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-11-17 17:07:53.095069	2022-11-17 17:07:53.094174	54ab5d06-f472-4ca0-a71b-dba07d665508	1974
1975	uri://ed-fi.org/PublicationStatusDescriptor	Deprecated	Deprecated	Deprecated	\N	\N	\N	2022-11-17 17:07:53.125431	2022-11-17 17:07:53.124056	48f74a0f-b5e5-4fbd-9a74-bd6d5a01a716	1975
1977	uri://ed-fi.org/PublicationStatusDescriptor	Draft	Draft	Draft	\N	\N	\N	2022-11-17 17:07:53.135589	2022-11-17 17:07:53.135558	1bf78512-9c4b-4fd6-97be-51f8e624c597	1977
1980	uri://ed-fi.org/QuestionFormDescriptor	Checkbox	Checkbox	Checkbox	\N	\N	\N	2022-11-17 17:07:53.175647	2022-11-17 17:07:53.174329	fcf82051-8032-4610-ac93-82907332a991	1980
1983	uri://ed-fi.org/QuestionFormDescriptor	Matrix of numeric ratings	Matrix of numeric ratings	Matrix of numeric ratings	\N	\N	\N	2022-11-17 17:07:53.189885	2022-11-17 17:07:53.18985	4d5508f2-3542-4ecb-b457-c602bc1d6c3c	1983
1985	uri://ed-fi.org/QuestionFormDescriptor	Ranking	Ranking	Ranking	\N	\N	\N	2022-11-17 17:07:53.197361	2022-11-17 17:07:53.197326	dc1b59a1-8540-4e85-ab7e-84acea313683	1985
1987	uri://ed-fi.org/QuestionFormDescriptor	Matrix of textboxes	Matrix of textboxes	Matrix of textboxes	\N	\N	\N	2022-11-17 17:07:53.205285	2022-11-17 17:07:53.20525	959a4457-8a32-4cdd-ba36-562d2851ef90	1987
1989	uri://ed-fi.org/RaceDescriptor	Asian	Asian	Asian	\N	\N	\N	2022-11-17 17:07:53.237315	2022-11-17 17:07:53.235733	08560e39-547b-42fb-8b25-db41076c5917	1989
1991	uri://ed-fi.org/RaceDescriptor	Choose Not to Respond	Choose Not to Respond	Choose Not to Respond	\N	\N	\N	2022-11-17 17:07:53.250564	2022-11-17 17:07:53.250527	d5169a27-85b5-42ce-a0a9-8466a85a898b	1991
1993	uri://ed-fi.org/RaceDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:53.258062	2022-11-17 17:07:53.258027	0c0a6517-3305-41d2-8ef7-a739a160832c	1993
1995	uri://ed-fi.org/ReasonExitedDescriptor	Discontinued schooling	Discontinued schooling	Discontinued schooling	\N	\N	\N	2022-11-17 17:07:53.293173	2022-11-17 17:07:53.291597	88a8f66a-4231-428a-9498-8606ce434e87	1995
1998	uri://ed-fi.org/ReasonExitedDescriptor	Graduated with an alternate diploma	Graduated with an alternate diploma	Graduated with an alternate diploma	\N	\N	\N	2022-11-17 17:07:53.305436	2022-11-17 17:07:53.305402	6e42b4e5-ed73-40e8-bf9b-167df454d184	1998
2000	uri://ed-fi.org/ReasonExitedDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:53.316781	2022-11-17 17:07:53.31668	18f64386-be50-4d1b-b1bd-c24c80f82dbe	2000
2003	uri://ed-fi.org/ReasonExitedDescriptor	Suspended or expelled from school	Suspended or expelled from school	Suspended or expelled from school	\N	\N	\N	2022-11-17 17:07:53.328026	2022-11-17 17:07:53.327991	972edcaa-737b-486c-a2b7-8a8b532c0f36	2003
2006	uri://ed-fi.org/ReasonExitedDescriptor	Unknown reason	Unknown reason	Unknown reason	\N	\N	\N	2022-11-17 17:07:53.340921	2022-11-17 17:07:53.340886	162fd9e7-a3bf-4a00-80e0-863377ee3ce3	2006
2008	uri://ed-fi.org/ReasonNotTestedDescriptor	Absent	Absent	Absent	\N	\N	\N	2022-11-17 17:07:53.377188	2022-11-17 17:07:53.375856	159c8954-11be-4da6-9a26-f658ce509540	2008
2010	uri://ed-fi.org/ReasonNotTestedDescriptor	Disruptive behavior	Disruptive behavior	Disruptive behavior	\N	\N	\N	2022-11-17 17:07:53.38736	2022-11-17 17:07:53.387317	d613439e-4ed6-4fc5-a248-ddb26a587133	2010
2013	uri://ed-fi.org/ReasonNotTestedDescriptor	LEP postponement	LEP postponement	LEP postponement	\N	\N	\N	2022-11-17 17:07:53.397981	2022-11-17 17:07:53.397945	3d0da4d6-5202-4a7a-a6c3-806b9c79390e	2013
2014	uri://ed-fi.org/ReasonNotTestedDescriptor	Medical waiver	Medical waiver	Medical waiver	\N	\N	\N	2022-11-17 17:07:53.403087	2022-11-17 17:07:53.403037	c5b8ea55-4b9b-4fc2-8b9b-cba2de1ee003	2014
2016	uri://ed-fi.org/ReasonNotTestedDescriptor	Not tested (ARD decision)	Not tested (ARD decision)	Not tested (ARD decision)	\N	\N	\N	2022-11-17 17:07:53.410621	2022-11-17 17:07:53.410588	18dd9949-2ef2-4dab-ab5e-245f295b3487	2016
2017	uri://ed-fi.org/ReasonNotTestedDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:53.415958	2022-11-17 17:07:53.415905	21d7a0c2-5519-4ae9-8ad1-11b1e8a65c8f	2017
2020	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by parent	Refusal by parent	Refusal by parent	\N	\N	\N	2022-11-17 17:07:53.42725	2022-11-17 17:07:53.427216	e51e61c3-032b-410a-96d6-288e35e4a7a6	2020
2021	uri://ed-fi.org/ReasonNotTestedDescriptor	Refusal by student	Refusal by student	Refusal by student	\N	\N	\N	2022-11-17 17:07:53.435161	2022-11-17 17:07:53.43511	03e5ffd7-5c21-42d0-9b20-e7a0c1a2c403	2021
2023	uri://ed-fi.org/RecognitionTypeDescriptor	Athletic awards	Athletic awards	Athletic awards	\N	\N	\N	2022-11-17 17:07:53.466294	2022-11-17 17:07:53.464676	5d95e581-ff16-4234-bc38-ae19494d8ec6	2023
2025	uri://ed-fi.org/RecognitionTypeDescriptor	Citizenship award/recognition	Citizenship award/recognition	Citizenship award/recognition	\N	\N	\N	2022-11-17 17:07:53.483179	2022-11-17 17:07:53.483147	ab20e091-0b35-4cb4-94e2-eebe62b12e68	2025
2026	uri://ed-fi.org/RecognitionTypeDescriptor	Completion of requirement, but no units awarded	Completion of requirement, but no units of value awarded	Completion of requirement, but no units of value awarded	\N	\N	\N	2022-11-17 17:07:53.488007	2022-11-17 17:07:53.487972	ce671119-8e82-45d3-b20c-2fab6cb02ab2	2026
2028	uri://ed-fi.org/RecognitionTypeDescriptor	Letter of commendation	Letter of commendation	Letter of commendation	\N	\N	\N	2022-11-17 17:07:53.498782	2022-11-17 17:07:53.49875	e9d9f7bb-a4be-4329-ac37-b750b33f1b2f	2028
2030	uri://ed-fi.org/RecognitionTypeDescriptor	Monogram/letter	Monogram/letter	Monogram/letter	\N	\N	\N	2022-11-17 17:07:53.506479	2022-11-17 17:07:53.506442	cd32868d-3a45-4a4d-af0c-31d49016f2dc	2030
2032	uri://ed-fi.org/RecognitionTypeDescriptor	Points	Points	Points	\N	\N	\N	2022-11-17 17:07:53.513984	2022-11-17 17:07:53.51395	1059bdc8-e845-49f7-8f27-032c0a789dab	2032
2035	uri://ed-fi.org/RelationDescriptor	Brother	Brother	Brother	\N	\N	\N	2022-11-17 17:07:53.552081	2022-11-17 17:07:53.550749	99e80e3b-dc93-4eff-b70f-8dc3e7a45b49	2035
2037	uri://ed-fi.org/RelationDescriptor	CourtAppointedGuardian	CourtAppointedGuardian	CourtAppointedGuardian	\N	\N	\N	2022-11-17 17:07:53.563926	2022-11-17 17:07:53.563713	6033b10b-a373-45dc-b3b9-9efe9430704c	2037
2039	uri://ed-fi.org/RelationDescriptor	Daughter	Daughter	Daughter	\N	\N	\N	2022-11-17 17:07:53.573456	2022-11-17 17:07:53.573422	e5a3c463-8a49-4322-b555-4e70b9d854a7	2039
2041	uri://ed-fi.org/RelationDescriptor	Emergency	DEPRECATED: Emergency	DEPRECATED: Emergency	\N	\N	\N	2022-11-17 17:07:53.581491	2022-11-17 17:07:53.581458	708ba508-f81c-4320-a546-69554cc837bb	2041
2042	uri://ed-fi.org/RelationDescriptor	Employer	Employer	Employer	\N	\N	\N	2022-11-17 17:07:53.587198	2022-11-17 17:07:53.58689	7bd9ac22-1b0f-4d01-9125-cd117a4dc0c9	2042
2044	uri://ed-fi.org/RelationDescriptor	Father, step	Father, step	Father, step	\N	\N	\N	2022-11-17 17:07:53.595086	2022-11-17 17:07:53.595026	8dd370e8-f702-40fb-823d-86612edc56fb	2044
2046	uri://ed-fi.org/RelationDescriptor	FathersCivilPartner	FathersCivilPartner	FathersCivilPartner	\N	\N	\N	2022-11-17 17:07:53.602915	2022-11-17 17:07:53.602852	f3df9c33-f4cd-4b95-892d-303f6ad4979c	2046
2048	uri://ed-fi.org/RelationDescriptor	Fiance	Fiance	Fiance	\N	\N	\N	2022-11-17 17:07:53.610801	2022-11-17 17:07:53.61065	447ea4a8-f651-4d0b-aae4-26fafe996968	2048
2051	uri://ed-fi.org/RelationDescriptor	Friend	Friend	Friend	\N	\N	\N	2022-11-17 17:07:53.621966	2022-11-17 17:07:53.621933	d89a7893-b626-4e7b-b79b-b0a24c80dfd0	2051
2053	uri://ed-fi.org/RelationDescriptor	Grandfather	Grandfather	Grandfather	\N	\N	\N	2022-11-17 17:07:53.629965	2022-11-17 17:07:53.629933	556604d5-0920-4b8b-94b4-a90f7a8abfe6	2053
2054	uri://ed-fi.org/RelationDescriptor	Grandmother	Grandmother	Grandmother	\N	\N	\N	2022-11-17 17:07:53.635022	2022-11-17 17:07:53.63475	33e06ea2-bb6e-4675-850d-13969d0ef7a9	2054
2057	uri://ed-fi.org/RelationDescriptor	Great Grandparent	Great Grandparent	Great Grandparent	\N	\N	\N	2022-11-17 17:07:53.64563	2022-11-17 17:07:53.645595	52a269bf-3970-4f76-9257-e14febb8d9cf	2057
2059	uri://ed-fi.org/RelationDescriptor	Guardian	DEPRECATED: Guardian	DEPRECATED: Guardian	\N	\N	\N	2022-11-17 17:07:53.653475	2022-11-17 17:07:53.653441	8caef1f9-6bf2-4041-8491-5e305f16741d	2059
2022	uri://ed-fi.org/RecognitionTypeDescriptor	Awarding of units of value	Awarding of units of value	Awarding of units of value	\N	\N	\N	2022-11-17 17:07:53.466299	2022-11-17 17:07:53.464672	205d9011-1cb3-4c98-9603-302112ef97e5	2022
2024	uri://ed-fi.org/RecognitionTypeDescriptor	Certificate	Certificate	Certificate	\N	\N	\N	2022-11-17 17:07:53.479525	2022-11-17 17:07:53.47948	56ac7042-8f18-4384-87b6-3a2b4ce9b426	2024
2027	uri://ed-fi.org/RecognitionTypeDescriptor	Honor award	Honor award	Honor award	\N	\N	\N	2022-11-17 17:07:53.491176	2022-11-17 17:07:53.491143	11983c30-e747-46fa-8131-d7114dc261e4	2027
2029	uri://ed-fi.org/RecognitionTypeDescriptor	Medals	Medals	Medals	\N	\N	\N	2022-11-17 17:07:53.502353	2022-11-17 17:07:53.502321	7799031a-ec79-4f08-b46e-ddeb9e591593	2029
2031	uri://ed-fi.org/RecognitionTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:53.510324	2022-11-17 17:07:53.510288	18984b3b-43e3-45b9-b251-286795963fe6	2031
2033	uri://ed-fi.org/RecognitionTypeDescriptor	Promotion or advancement	Promotion or advancement	Promotion or advancement	\N	\N	\N	2022-11-17 17:07:53.520933	2022-11-17 17:07:53.520776	9c9bee8c-278b-4ba2-bab4-9301f022fa69	2033
2034	uri://ed-fi.org/RelationDescriptor	Aunt	Aunt	Aunt	\N	\N	\N	2022-11-17 17:07:53.552072	2022-11-17 17:07:53.550745	bb997043-5f33-4deb-b3f2-537901afc2e7	2034
2036	uri://ed-fi.org/RelationDescriptor	BrotherInLaw	BrotherInLaw	BrotherInLaw	\N	\N	\N	2022-11-17 17:07:53.562576	2022-11-17 17:07:53.562486	8933186e-4888-4561-918a-f358a5eea0e2	2036
2038	uri://ed-fi.org/RelationDescriptor	Cousin	Cousin	Cousin	\N	\N	\N	2022-11-17 17:07:53.570713	2022-11-17 17:07:53.570646	ddd4eb46-0836-4bca-8aa3-20e87fb48280	2038
2040	uri://ed-fi.org/RelationDescriptor	DaughterInLaw	DaughterInLaw	DaughterInLaw	\N	\N	\N	2022-11-17 17:07:53.57891	2022-11-17 17:07:53.578779	1befdb6d-39c2-4e38-a89e-6bc6550f798f	2040
2043	uri://ed-fi.org/RelationDescriptor	Father	Father	Father	\N	\N	\N	2022-11-17 17:07:53.589769	2022-11-17 17:07:53.589737	9217975f-d692-4eaf-b9ed-446d46930cba	2043
2045	uri://ed-fi.org/RelationDescriptor	FatherInLaw	FatherInLaw	FatherInLaw	\N	\N	\N	2022-11-17 17:07:53.597816	2022-11-17 17:07:53.597784	af3c4d4a-cb56-400d-b3c5-7e704519631d	2045
2047	uri://ed-fi.org/RelationDescriptor	FathersSignificantOther	FathersSignificantOther	FathersSignificantOther	\N	\N	\N	2022-11-17 17:07:53.605667	2022-11-17 17:07:53.605635	ec95a763-0566-40aa-abd0-d3ab059cedc9	2047
2049	uri://ed-fi.org/RelationDescriptor	Fiancee	Fiancee	Fiancee	\N	\N	\N	2022-11-17 17:07:53.613673	2022-11-17 17:07:53.613641	6fa5d056-86b4-41de-b34a-f87cbf30a322	2049
2050	uri://ed-fi.org/RelationDescriptor	Foster parent	Foster parent	Foster parent	\N	\N	\N	2022-11-17 17:07:53.618595	2022-11-17 17:07:53.618546	31fef453-7339-4690-93c7-7fc01d72e529	2050
2052	uri://ed-fi.org/RelationDescriptor	Godparent	Godparent	Godparent	\N	\N	\N	2022-11-17 17:07:53.626633	2022-11-17 17:07:53.626538	00ce0fcc-971d-4952-9bbb-a46e2d7d859c	2052
2055	uri://ed-fi.org/RelationDescriptor	Grandparent	Grandparent	Grandparent	\N	\N	\N	2022-11-17 17:07:53.637686	2022-11-17 17:07:53.637651	8f6c139d-9bd4-49e6-9c82-3f04156c3615	2055
2056	uri://ed-fi.org/RelationDescriptor	Great aunt	Great aunt	Great aunt	\N	\N	\N	2022-11-17 17:07:53.642769	2022-11-17 17:07:53.642617	164f8eba-3d5c-4436-8966-f61263886aa1	2056
2058	uri://ed-fi.org/RelationDescriptor	Great uncle	Great uncle	Great uncle	\N	\N	\N	2022-11-17 17:07:53.650627	2022-11-17 17:07:53.650562	eaeb10ed-6fe1-4078-bc26-85b45fda5e42	2058
2060	uri://ed-fi.org/RelationDescriptor	Husband	Husband	Husband	\N	\N	\N	2022-11-17 17:07:53.658616	2022-11-17 17:07:53.658475	28198835-01f5-494b-a999-c1330f6ba20d	2060
2063	uri://ed-fi.org/RelationDescriptor	MotherInLaw	MotherInLaw	MotherInLaw	\N	\N	\N	2022-11-17 17:07:53.669297	2022-11-17 17:07:53.669264	785bda34-050b-4448-8782-c53fd62bbff9	2063
2064	uri://ed-fi.org/RelationDescriptor	MothersCivilPartner	MothersCivilPartner	MothersCivilPartner	\N	\N	\N	2022-11-17 17:07:53.674734	2022-11-17 17:07:53.674405	5ae63f30-b620-4275-9154-a5f01e5f30d1	2064
2067	uri://ed-fi.org/RelationDescriptor	Nephew	Nephew	Nephew	\N	\N	\N	2022-11-17 17:07:53.685698	2022-11-17 17:07:53.685663	96328fc8-77d3-41b5-af1b-133be5608fc1	2067
2068	uri://ed-fi.org/RelationDescriptor	Niece	Niece	Niece	\N	\N	\N	2022-11-17 17:07:53.690954	2022-11-17 17:07:53.69074	1e411880-584f-4103-8b48-d9a28201d169	2068
2071	uri://ed-fi.org/RelationDescriptor	Parent, step	Parent, step	Parent, step	\N	\N	\N	2022-11-17 17:07:53.701996	2022-11-17 17:07:53.701961	1d74d681-9039-455c-9359-9cef08f5b6c0	2071
2073	uri://ed-fi.org/RelationDescriptor	Sibling	Sibling	Sibling	\N	\N	\N	2022-11-17 17:07:53.712869	2022-11-17 17:07:53.712823	41f08abf-9695-4eef-a771-b3a95c501a9b	2073
2074	uri://ed-fi.org/RelationDescriptor	SignificantOther	SignificantOther	SignificantOther	\N	\N	\N	2022-11-17 17:07:53.718314	2022-11-17 17:07:53.718271	2d6b84e6-f615-4679-a263-c9abf3ce867e	2074
2076	uri://ed-fi.org/RelationDescriptor	SisterInLaw	SisterInLaw	SisterInLaw	\N	\N	\N	2022-11-17 17:07:53.727497	2022-11-17 17:07:53.72746	fafdbaad-0545-4d64-871b-9582a7bc8584	2076
2078	uri://ed-fi.org/RelationDescriptor	SonInLaw	SonInLaw	SonInLaw	\N	\N	\N	2022-11-17 17:07:53.737281	2022-11-17 17:07:53.737246	76c5d65c-8dae-4f83-af09-945a1a0873aa	2078
2080	uri://ed-fi.org/RelationDescriptor	Uncle	Uncle	Uncle	\N	\N	\N	2022-11-17 17:07:53.746137	2022-11-17 17:07:53.746094	4bd8622a-0f3c-477c-a2c4-416d5f8e2840	2080
2082	uri://ed-fi.org/RelationDescriptor	Ward	Ward	Ward	\N	\N	\N	2022-11-17 17:07:53.758331	2022-11-17 17:07:53.758288	893684fd-425e-48d0-8c89-dbfc917c5b43	2082
2083	uri://ed-fi.org/RelationDescriptor	Wife	Wife	Wife	\N	\N	\N	2022-11-17 17:07:53.763535	2022-11-17 17:07:53.763498	be8b6160-c5fb-41f9-ab13-86bae034aa47	2083
2085	uri://ed-fi.org/RepeatIdentifierDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:53.797207	2022-11-17 17:07:53.795545	36a745e0-3741-41e9-834c-8f154013033d	2085
2087	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, counted in grade point average	Repeated, counted in grade point average	Repeated, counted in grade point average	\N	\N	\N	2022-11-17 17:07:53.810049	2022-11-17 17:07:53.810016	612ddb7b-fb5b-4402-ba89-f031e7a0a7e2	2087
2089	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, other institution	Repeated, other institution	Repeated, other institution	\N	\N	\N	2022-11-17 17:07:53.818906	2022-11-17 17:07:53.818873	9583c4df-eeff-4a6c-be45-d6bc1abfb6aa	2089
2091	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement not counted	Replacement not counted	Replacement not counted	\N	\N	\N	2022-11-17 17:07:53.82682	2022-11-17 17:07:53.826785	c49b9d0d-9288-4b83-a687-fa3ca8e7f675	2091
2092	uri://ed-fi.org/ReporterDescriptionDescriptor	Law enforcement officer	Law enforcement officer	Law enforcement officer	\N	\N	\N	2022-11-17 17:07:53.862656	2022-11-17 17:07:53.861064	2710b79a-105f-4ed1-8239-aae38868fc9d	2092
2095	uri://ed-fi.org/ReporterDescriptionDescriptor	Parent/guardian	Parent/guardian	Parent/guardian	\N	\N	\N	2022-11-17 17:07:53.875765	2022-11-17 17:07:53.875731	a14ce25e-aafb-4094-8856-ed3bd4897610	2095
2096	uri://ed-fi.org/ReporterDescriptionDescriptor	Staff	Staff	Staff	\N	\N	\N	2022-11-17 17:07:53.880969	2022-11-17 17:07:53.880926	bdc4e7fc-7abc-4837-b3e8-ff9470074db0	2096
2098	uri://ed-fi.org/ReportingTagDescriptor	ESSA	Every Student Succeeds Act	Every Student Succeeds Act	\N	\N	\N	2022-11-17 17:07:53.920906	2022-11-17 17:07:53.919318	b5a9e71d-2fc9-40bc-8e93-33d237e20c39	2098
2101	uri://ed-fi.org/ReportingTagDescriptor	LEA	Local Education Agency	Local Education Agency	\N	\N	\N	2022-11-17 17:07:53.93348	2022-11-17 17:07:53.933449	d3e8a307-1692-4053-9d5a-bc5158576d94	2101
2103	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit and school area	Resident of administrative unit and usual school attendance area	Resident of administrative unit and usual school attendance area	\N	\N	\N	2022-11-17 17:07:53.970329	2022-11-17 17:07:53.968768	c1afa2ef-860f-4c2f-8c9b-8788017b1f06	2103
2106	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of another state	Resident of another state	Resident of another state	\N	\N	\N	2022-11-17 17:07:53.982865	2022-11-17 17:07:53.982832	984fd37c-dc2b-4f6c-be44-bc8707b53845	2106
2108	uri://ed-fi.org/ResponseIndicatorDescriptor	Ineffective response	Ineffective response	Ineffective response	\N	\N	\N	2022-11-17 17:07:54.018971	2022-11-17 17:07:54.017395	c9442344-24a8-4a89-a9e9-56393cac5b9f	2108
2111	uri://ed-fi.org/ResponseIndicatorDescriptor	Partial response	Partial response	Partial response	\N	\N	\N	2022-11-17 17:07:54.030022	2022-11-17 17:07:54.029967	53fb2075-2fd8-462d-832f-4dcca580a021	2111
2113	uri://ed-fi.org/ResponsibilityDescriptor	Accountability	Accountability	Accountability	\N	\N	\N	2022-11-17 17:07:54.069811	2022-11-17 17:07:54.06856	474cb99f-9588-41d0-bb59-ec1939b2c364	2113
2114	uri://ed-fi.org/ResponsibilityDescriptor	Discipline	Discipline	Discipline	\N	\N	\N	2022-11-17 17:07:54.080185	2022-11-17 17:07:54.079616	97a25e55-32f2-49f9-9bd2-5407d8c6ee2d	2114
2116	uri://ed-fi.org/ResponsibilityDescriptor	Graduation	Graduation	Graduation	\N	\N	\N	2022-11-17 17:07:54.088055	2022-11-17 17:07:54.087988	04364840-0394-4668-8c12-68d087fd4b74	2116
2118	uri://ed-fi.org/ResponsibilityDescriptor	Transportation	Transportation	Transportation	\N	\N	\N	2022-11-17 17:07:54.095781	2022-11-17 17:07:54.095666	b4aa4ebe-ddb2-40a2-9f28-66dbfcd1857e	2118
2062	uri://ed-fi.org/RelationDescriptor	Mother, step	Mother, step	Mother, step	\N	\N	\N	2022-11-17 17:07:53.666716	2022-11-17 17:07:53.666379	ca780a69-24dd-408b-9140-68e97714ee9b	2062
2065	uri://ed-fi.org/RelationDescriptor	MothersSignificantOther	MothersSignificantOther	MothersSignificantOther	\N	\N	\N	2022-11-17 17:07:53.677296	2022-11-17 17:07:53.677263	c5fad147-6121-4d85-a916-65c8f2729f78	2065
2066	uri://ed-fi.org/RelationDescriptor	Neighbor	Neighbor	Neighbor	\N	\N	\N	2022-11-17 17:07:53.682987	2022-11-17 17:07:53.68269	ec051e30-cd79-4cb0-bf0d-429057531046	2066
2069	uri://ed-fi.org/RelationDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:53.69367	2022-11-17 17:07:53.693636	fbef0b38-23f8-49f9-8c64-c194e1d8d7d2	2069
2070	uri://ed-fi.org/RelationDescriptor	Parent	Parent	Parent	\N	\N	\N	2022-11-17 17:07:53.698766	2022-11-17 17:07:53.698713	a3e96ae4-94b4-4f0f-8de0-d9c2a4800572	2070
2072	uri://ed-fi.org/RelationDescriptor	Relative	Relative	Relative	\N	\N	\N	2022-11-17 17:07:53.707416	2022-11-17 17:07:53.707371	7628cae3-07cc-406a-a15d-e09cf6c3d0d9	2072
2075	uri://ed-fi.org/RelationDescriptor	Sister	Sister	Sister	\N	\N	\N	2022-11-17 17:07:53.72182	2022-11-17 17:07:53.721778	edefffdd-0008-4c3c-ab50-51f896c10eee	2075
2077	uri://ed-fi.org/RelationDescriptor	Son	Son	Son	\N	\N	\N	2022-11-17 17:07:53.732999	2022-11-17 17:07:53.732966	372bbd1f-d866-415b-9e42-abf2a2bd3015	2077
2079	uri://ed-fi.org/RelationDescriptor	Spouse	Spouse	Spouse	\N	\N	\N	2022-11-17 17:07:53.743373	2022-11-17 17:07:53.743331	5d2d7f80-92c3-42cb-a6ec-06e87a19dff9	2079
2081	uri://ed-fi.org/RelationDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-11-17 17:07:53.754929	2022-11-17 17:07:53.754885	e66c8911-6868-40cb-af02-c7c4b8f17acd	2081
2084	uri://ed-fi.org/RepeatIdentifierDescriptor	Not repeated	Not repeated	Not repeated	\N	\N	\N	2022-11-17 17:07:53.796916	2022-11-17 17:07:53.795541	115f0818-378f-4614-9c79-2037acfd5010	2084
2086	uri://ed-fi.org/RepeatIdentifierDescriptor	Other, not counted in GPA	Other, not counted in GPA	Other, not counted in GPA	\N	\N	\N	2022-11-17 17:07:53.808232	2022-11-17 17:07:53.808189	8f567d79-65a9-4435-bf71-e8d5f103829e	2086
2088	uri://ed-fi.org/RepeatIdentifierDescriptor	Repeated, not counted in grade point average	Repeated, not counted in grade point average	Repeated, not counted in grade point average	\N	\N	\N	2022-11-17 17:07:53.816364	2022-11-17 17:07:53.816295	bea2f8d7-57f8-43a7-af72-a25fc3e49c6a	2088
2090	uri://ed-fi.org/RepeatIdentifierDescriptor	Replacement counted	Replacement counted	Replacement counted	\N	\N	\N	2022-11-17 17:07:53.824116	2022-11-17 17:07:53.824058	20349623-1bc8-4e8b-9508-7d468cdb552b	2090
2093	uri://ed-fi.org/ReporterDescriptionDescriptor	Non-school personnel	Non-school personnel	Non-school personnel	\N	\N	\N	2022-11-17 17:07:53.862655	2022-11-17 17:07:53.86107	179d687b-2650-4925-a1c2-071d4a77fc00	2093
2094	uri://ed-fi.org/ReporterDescriptionDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:53.872679	2022-11-17 17:07:53.872654	4fe47b98-62fd-494a-9667-ef23d1919976	2094
2097	uri://ed-fi.org/ReporterDescriptionDescriptor	Student	Student	Student	\N	\N	\N	2022-11-17 17:07:53.884183	2022-11-17 17:07:53.884147	51090c6d-ad3b-43fa-99a0-4dcce7e850c9	2097
2099	uri://ed-fi.org/ReportingTagDescriptor	CMO	Charter Management Organization	Charter Management Organization	\N	\N	\N	2022-11-17 17:07:53.920903	2022-11-17 17:07:53.919321	fa906f4e-f399-44b9-9e8c-85332928818a	2099
2100	uri://ed-fi.org/ReportingTagDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-11-17 17:07:53.931442	2022-11-17 17:07:53.931395	803f0ff5-1e51-4773-83a8-b62611c51212	2100
2102	uri://ed-fi.org/ReportingTagDescriptor	SEA	State Education Agency	State Education Agency	\N	\N	\N	2022-11-17 17:07:53.939688	2022-11-17 17:07:53.939468	53d86706-a6a1-4f34-8b96-6b39c3dcc433	2102
2104	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit, but other school area	Resident of administrative unit, but of other school attendance area	Resident of administrative unit, but of other school attendance area	\N	\N	\N	2022-11-17 17:07:53.970328	2022-11-17 17:07:53.968772	7004495f-73c4-47ab-91f4-f8b2c2217d4e	2104
2105	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of admin unit that crosses states	Resident of an administrative unit that crosses state boundaries	Resident of an administrative unit that crosses state boundaries	\N	\N	\N	2022-11-17 17:07:53.98148	2022-11-17 17:07:53.980554	2753aff7-ccae-43ae-843d-8e99d798817c	2105
2107	uri://ed-fi.org/ResidencyStatusDescriptor	Resident of this state, but not of this admin unit	Resident of this state, but not of this administrative unit	Resident of this state, but not of this administrative unit	\N	\N	\N	2022-11-17 17:07:53.989255	2022-11-17 17:07:53.989192	ed571fd0-93fc-4c90-b690-56bf66a7fc26	2107
2109	uri://ed-fi.org/ResponseIndicatorDescriptor	Effective response	Effective response	Effective response	\N	\N	\N	2022-11-17 17:07:54.018974	2022-11-17 17:07:54.017398	170dda1a-3051-4811-83a0-95f0ea21fe77	2109
2110	uri://ed-fi.org/ResponseIndicatorDescriptor	Nonscorable response	Nonscorable response	Nonscorable response	\N	\N	\N	2022-11-17 17:07:54.03001	2022-11-17 17:07:54.029066	7197ea0e-eec3-467c-903d-97ab5f1a02d8	2110
2112	uri://ed-fi.org/ResponsibilityDescriptor	Attendance	Attendance	Attendance	\N	\N	\N	2022-11-17 17:07:54.069915	2022-11-17 17:07:54.068563	e6161ab9-5b89-425f-bd24-2a853179ba3b	2112
2115	uri://ed-fi.org/ResponsibilityDescriptor	Funding	Funding	Funding	\N	\N	\N	2022-11-17 17:07:54.081569	2022-11-17 17:07:54.08155	025f3d50-70be-4b29-aea9-ff3e7189f2f0	2115
2117	uri://ed-fi.org/ResponsibilityDescriptor	Individualized Education Program	Individualized Education Program	Individualized Education Program	\N	\N	\N	2022-11-17 17:07:54.090731	2022-11-17 17:07:54.090698	c2890581-3d90-44a7-b288-035bc69649db	2117
2119	uri://ed-fi.org/ResponsibilityDescriptor	Residency	Residency	Residency	\N	\N	\N	2022-11-17 17:07:54.098598	2022-11-17 17:07:54.098562	893125f9-4b88-4001-b2c1-ac5e9859dd7e	2119
2121	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	Imminent Serious Physical Harm To Themselves	\N	\N	\N	2022-11-17 17:07:54.131368	2022-11-17 17:07:54.129791	fed73851-4c2d-4bf7-9c61-bcd6b3d187ff	2121
2123	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Decimal	Decimal	Decimal	\N	\N	\N	2022-11-17 17:07:54.171583	2022-11-17 17:07:54.17	c2711ab2-1436-4dd8-9ac1-fee14969f023	2123
2126	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentage	Percentage	Percentage	\N	\N	\N	2022-11-17 17:07:54.184452	2022-11-17 17:07:54.184419	5a52d999-4e1c-49bc-b3bf-c242d0e1164d	2126
2128	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Range	Range	Range	\N	\N	\N	2022-11-17 17:07:54.193428	2022-11-17 17:07:54.193395	c53c7ce2-22f3-4e83-90da-6f731aa27f0f	2128
2129	uri://ed-fi.org/RetestIndicatorDescriptor	2nd Retest	2nd Retest	2nd Retest	\N	\N	\N	2022-11-17 17:07:54.225669	2022-11-17 17:07:54.224085	0335b756-7f3b-478d-b0b9-2a3fa1f74bfb	2129
2132	uri://ed-fi.org/RetestIndicatorDescriptor	Primary Administration	Primary Administration	Primary Administration	\N	\N	\N	2022-11-17 17:07:54.237429	2022-11-17 17:07:54.237396	aa874867-9c6f-47c7-931f-70f5b2f0aa2a	2132
2133	uri://ed-fi.org/SchoolCategoryDescriptor	Preschool/early childhood	Preschool/early childhood	Preschool/early childhood	\N	\N	\N	2022-11-17 17:07:54.270104	2022-11-17 17:07:54.268531	0b1276ff-d360-4c69-8097-01aeeea8637b	2133
2136	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary School	Elementary School	Elementary School	\N	\N	\N	2022-11-17 17:07:54.283614	2022-11-17 17:07:54.28358	f980dc11-877c-4d45-a23a-afb01c85b6fa	2136
2137	uri://ed-fi.org/SchoolCategoryDescriptor	Middle School	Middle School	Middle School	\N	\N	\N	2022-11-17 17:07:54.288847	2022-11-17 17:07:54.288793	033aceea-4e94-41bc-9154-81131583c691	2137
2140	uri://ed-fi.org/SchoolCategoryDescriptor	High School	High School	High School	\N	\N	\N	2022-11-17 17:07:54.300101	2022-11-17 17:07:54.300068	7d76f759-4dfa-4f16-8280-60b24ae4cf4a	2140
2142	uri://ed-fi.org/SchoolCategoryDescriptor	Other Secondary	Other Secondary	Other Secondary	\N	\N	\N	2022-11-17 17:07:54.307949	2022-11-17 17:07:54.307917	c6cd3e23-ba5b-4a87-897a-ccfb6e2181f9	2142
2145	uri://ed-fi.org/SchoolCategoryDescriptor	Adult School	Adult School	Adult School	\N	\N	\N	2022-11-17 17:07:54.325423	2022-11-17 17:07:54.325389	5f7f899d-cf68-4d86-a1bc-b0ce0027e353	2145
2146	uri://ed-fi.org/SchoolCategoryDescriptor	All Levels	All Levels	All Levels	\N	\N	\N	2022-11-17 17:07:54.330989	2022-11-17 17:07:54.330815	bcc77df9-d768-4948-b75a-770a326d2603	2146
2148	uri://ed-fi.org/SchoolCategoryDescriptor	Elementary/Secondary School	DEPRECATED: Elementary/Secondary School	DEPRECATED: Elementary/Secondary School	\N	\N	\N	2022-11-17 17:07:54.34047	2022-11-17 17:07:54.340438	4f12db5f-fb4f-4273-b62f-33574356a848	2148
2150	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at some but not all grade levels	Implemented at some but not all grade levels	Implemented at some but not all grade levels	\N	\N	\N	2022-11-17 17:07:54.374485	2022-11-17 17:07:54.373123	001deb19-5425-4849-9b17-3707b08be2ea	2150
2120	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	Imminent Serious Physical Harm To Others	\N	\N	\N	2022-11-17 17:07:54.131371	2022-11-17 17:07:54.129795	b7e47593-47af-4e99-b4eb-85dd9962aedd	2120
2122	uri://ed-fi.org/RestraintEventReasonDescriptor	Imminent Serious Property Destruction	Imminent Serious Property Destruction	Imminent Serious Property Destruction	\N	\N	\N	2022-11-17 17:07:54.141631	2022-11-17 17:07:54.141425	52f6db9e-a858-42ca-b0a4-c0d6112b00b8	2122
2124	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Integer	Integer	Integer	\N	\N	\N	2022-11-17 17:07:54.171581	2022-11-17 17:07:54.169997	fb2c52bb-d1e0-4e51-b9dd-e9c6faa22305	2124
2125	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Level	Level	Level	\N	\N	\N	2022-11-17 17:07:54.181456	2022-11-17 17:07:54.181412	9780041f-286a-474d-b048-8c125463c9e7	2125
2127	uri://ed-fi.org/ResultDatatypeTypeDescriptor	Percentile	Percentile	Percentile	\N	\N	\N	2022-11-17 17:07:54.190983	2022-11-17 17:07:54.190942	3b854b3c-17e5-4726-b91f-3438b2e591dc	2127
2130	uri://ed-fi.org/RetestIndicatorDescriptor	1st Retest	1st Retest	1st Retest	\N	\N	\N	2022-11-17 17:07:54.225672	2022-11-17 17:07:54.224088	fd29df26-ef6a-4927-9253-75fb0dccd1ec	2130
2131	uri://ed-fi.org/RetestIndicatorDescriptor	3rd or more Retest	3rd or more Retest	3rd or more Retest	\N	\N	\N	2022-11-17 17:07:54.235651	2022-11-17 17:07:54.235609	5bc467bf-fc8a-460c-a0e4-f60fa32690f0	2131
2134	uri://ed-fi.org/SchoolCategoryDescriptor	Infant/toddler School	Infant/toddler School	Infant/toddler School	\N	\N	\N	2022-11-17 17:07:54.270103	2022-11-17 17:07:54.268535	5912b601-dd70-4b8b-8591-6fde623f789c	2134
2135	uri://ed-fi.org/SchoolCategoryDescriptor	Primary School	Primary School	Primary School	\N	\N	\N	2022-11-17 17:07:54.281018	2022-11-17 17:07:54.280977	e49bc516-ca9d-4b46-b1a6-ad9c1159e869	2135
2138	uri://ed-fi.org/SchoolCategoryDescriptor	Junior High School	Junior High School	Junior High School	\N	\N	\N	2022-11-17 17:07:54.291896	2022-11-17 17:07:54.29186	eec6074b-a3f0-43bc-86d1-7a932be7362d	2138
2139	uri://ed-fi.org/SchoolCategoryDescriptor	Intermediate School	Intermediate School	Intermediate School	\N	\N	\N	2022-11-17 17:07:54.296982	2022-11-17 17:07:54.296947	b9172785-9b4a-4b8c-a89f-e0795efa12a5	2139
2141	uri://ed-fi.org/SchoolCategoryDescriptor	Secondary School	Secondary School	Secondary School	\N	\N	\N	2022-11-17 17:07:54.304592	2022-11-17 17:07:54.304557	4a2c50a4-1d9d-42a3-a136-1cb81ddd0acf	2141
2143	uri://ed-fi.org/SchoolCategoryDescriptor	Joint Secondary and Postsecondary School	Joint Secondary and Postsecondary School	Joint Secondary and Postsecondary School	\N	\N	\N	2022-11-17 17:07:54.312408	2022-11-17 17:07:54.312378	522d31e1-84c1-47c1-8241-15f998bd0401	2143
2144	uri://ed-fi.org/SchoolCategoryDescriptor	Other Combination	Other Combination	Other Combination	\N	\N	\N	2022-11-17 17:07:54.322781	2022-11-17 17:07:54.322554	0d75501c-e535-4175-921f-afc1bb1793f2	2144
2147	uri://ed-fi.org/SchoolCategoryDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	2022-11-17 17:07:54.333866	2022-11-17 17:07:54.333834	e3816b22-b1d0-4644-a647-34247faea7d4	2147
2149	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Implemented at all grade levels	Implemented at all grade levels	Implemented at all grade levels	\N	\N	\N	2022-11-17 17:07:54.374475	2022-11-17 17:07:54.37312	0bdf3828-1b21-49d4-bb49-98d5b8eab76b	2149
2152	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Unable to implement at any grades levels	Unable to implement at any grades levels	Unable to implement at any grades levels	\N	\N	\N	2022-11-17 17:07:54.388126	2022-11-17 17:07:54.388094	1815eb8f-a7fb-4ecc-95d6-a970d250d1fa	2152
2154	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Lunch	Free Lunch	Free Lunch	\N	\N	\N	2022-11-17 17:07:54.423228	2022-11-17 17:07:54.421554	2299cdaa-25e7-4154-a36e-6ab26a5554ca	2154
2156	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Snack	Free Snack	Free Snack	\N	\N	\N	2022-11-17 17:07:54.436175	2022-11-17 17:07:54.436143	c5d8c0d6-bd2e-4e04-b4e2-f4b6d2b878ae	2156
2158	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Breakfast	Full Price Breakfast	Full Price Breakfast	\N	\N	\N	2022-11-17 17:07:54.445597	2022-11-17 17:07:54.445563	579509a9-a9ef-4b6c-a46d-eb7e5c110d7c	2158
2160	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Milk	Full Price Milk	Full Price Milk	\N	\N	\N	2022-11-17 17:07:54.457091	2022-11-17 17:07:54.457058	a70e53e6-3d8c-4277-8824-a2d0beb7fe42	2160
2161	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Snack	Full Price Snack	Full Price Snack	\N	\N	\N	2022-11-17 17:07:54.462124	2022-11-17 17:07:54.462039	de1730a5-a9a7-4456-96eb-11a591e3c3d7	2161
2163	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Breakfast	Reduced Price Breakfast	Reduced Price Breakfast	\N	\N	\N	2022-11-17 17:07:54.469931	2022-11-17 17:07:54.469899	edf0b388-7e91-4597-b307-b9e5e877b16c	2163
2164	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Lunch	Reduced Price Lunch	Reduced Price Lunch	\N	\N	\N	2022-11-17 17:07:54.476852	2022-11-17 17:07:54.476701	7722eae6-d647-4bef-b95b-0267f8ab98b2	2164
2167	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:54.487779	2022-11-17 17:07:54.487747	575f7827-2c65-4d25-bab8-251976482108	2167
2168	uri://ed-fi.org/SchoolTypeDescriptor	Alternative	Alternative	Alternative	\N	\N	\N	2022-11-17 17:07:54.521063	2022-11-17 17:07:54.519469	d346020a-f58b-4870-a94e-7fcb7fd4e1ab	2168
2171	uri://ed-fi.org/SchoolTypeDescriptor	Special Education	Special Education	Special Education	\N	\N	\N	2022-11-17 17:07:54.534201	2022-11-17 17:07:54.534165	03b7f2da-f1e1-41fc-a4c6-bae02304239b	2171
2172	uri://ed-fi.org/SchoolTypeDescriptor	Reportable Program	Reportable Program	Reportable Program	\N	\N	\N	2022-11-17 17:07:54.539038	2022-11-17 17:07:54.538987	d9bcb0df-09d5-4e1c-ac8c-42dad7b4a86a	2172
2173	uri://ed-fi.org/SectionCharacteristicDescriptor	Graded Credit Available	Graded Credit Available	Graded Credit Available	\N	\N	\N	2022-11-17 17:07:54.569779	2022-11-17 17:07:54.568192	8fedb4ed-76cb-4412-870a-24904acc08ce	2173
2176	uri://ed-fi.org/SeparationDescriptor	Mutual agreement	Mutual agreement	Mutual agreement	\N	\N	\N	2022-11-17 17:07:54.606464	2022-11-17 17:07:54.604834	3c7b5e69-e257-4a4e-a981-70dbf0749a5a	2176
2177	uri://ed-fi.org/SeparationDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:54.617137	2022-11-17 17:07:54.617098	c46638c1-a71d-4f70-9c92-955cfa0c84ba	2177
2179	uri://ed-fi.org/SeparationReasonDescriptor	Change of assignment	Change of assignment	Change of assignment	\N	\N	\N	2022-11-17 17:07:54.654408	2022-11-17 17:07:54.653136	83382404-d74c-439a-80ee-8f79266f5d11	2179
2181	uri://ed-fi.org/SeparationReasonDescriptor	Family/personal relocation	Family/personal relocation	Family/personal relocation	\N	\N	\N	2022-11-17 17:07:54.664188	2022-11-17 17:07:54.66415	4cd02583-019c-46b5-acc9-e526cd934fab	2181
2183	uri://ed-fi.org/SeparationReasonDescriptor	Illness/disability/death	Illness/disability/death	Illness/disability/death	\N	\N	\N	2022-11-17 17:07:54.672218	2022-11-17 17:07:54.672082	e34428d3-7ba9-40dd-b24d-3abf5e5bcd10	2183
2186	uri://ed-fi.org/SeparationReasonDescriptor	Personal reason	Personal reason	Personal reason	\N	\N	\N	2022-11-17 17:07:54.683863	2022-11-17 17:07:54.683829	2d987ebd-e7be-43c6-9d2c-4b756e79003f	2186
2187	uri://ed-fi.org/SeparationReasonDescriptor	Retirement	Retirement	Retirement	\N	\N	\N	2022-11-17 17:07:54.688864	2022-11-17 17:07:54.688824	d0b7ce37-26af-4da6-80a8-5a8b02c0460d	2187
2189	uri://ed-fi.org/SeparationReasonDescriptor	Discharge	Discharge	Discharge	\N	\N	\N	2022-11-17 17:07:54.696467	2022-11-17 17:07:54.696413	a4dcb240-20dd-4571-a85a-d7fd9ffe622f	2189
2190	uri://ed-fi.org/ServiceDescriptor	Counseling services	Counseling services	Counseling services	\N	\N	\N	2022-11-17 17:07:54.727912	2022-11-17 17:07:54.726558	e0f22885-8bd1-4757-a83b-19530aaa2db7	2190
2192	uri://ed-fi.org/ServiceDescriptor	Interpreting services	Interpreting services	Interpreting services	\N	\N	\N	2022-11-17 17:07:54.737899	2022-11-17 17:07:54.737825	467afb12-4e56-4d85-b819-faccdb089879	2192
2195	uri://ed-fi.org/ServiceDescriptor	Orientation and mobility training services	Orientation and mobility training services	Orientation and mobility training services	\N	\N	\N	2022-11-17 17:07:54.74929	2022-11-17 17:07:54.749256	d7bbb8d3-f601-4025-8bd3-d694cc50d608	2195
2197	uri://ed-fi.org/ServiceDescriptor	Preschool children with disabilites program	Preschool children with disabilites program	Preschool children with disabilites program	\N	\N	\N	2022-11-17 17:07:54.758102	2022-11-17 17:07:54.758068	957ae1fd-f30a-44f8-ab3c-15a8bc8defb9	2197
2199	uri://ed-fi.org/ServiceDescriptor	Recreational services	Recreational services	Recreational services	\N	\N	\N	2022-11-17 17:07:54.766092	2022-11-17 17:07:54.766059	aadcb530-1d16-4c42-89b2-e7459bbebd72	2199
2201	uri://ed-fi.org/ServiceDescriptor	Dyslexia	Dyslexia	Dyslexia	\N	\N	\N	2022-11-17 17:07:54.773946	2022-11-17 17:07:54.773911	9dc97b45-7977-40f2-a5ba-0627cce39c72	2201
2151	uri://ed-fi.org/SchoolChoiceImplementStatusDescriptor	Not required to implement public school choice	Not required to implement public school choice	Not required to implement public school choice	\N	\N	\N	2022-11-17 17:07:54.384672	2022-11-17 17:07:54.384604	f478d8a6-c126-4fc9-a674-9fd31db20cbc	2151
2153	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Breakfast	Free Breakfast	Free Breakfast	\N	\N	\N	2022-11-17 17:07:54.423225	2022-11-17 17:07:54.421561	d5c84c63-b6b5-49fb-b60e-ef46e46b4926	2153
2155	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Milk	Free Milk	Free Milk	\N	\N	\N	2022-11-17 17:07:54.434402	2022-11-17 17:07:54.434359	de9cdddc-b747-499a-ba9c-e024c34810cd	2155
2157	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Free Supper	Free Supper	Free Supper	\N	\N	\N	2022-11-17 17:07:54.44305	2022-11-17 17:07:54.442983	e536afbb-234b-479f-93b3-e3660a6b0d95	2157
2159	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Lunch	Full Price Lunch	Full Price Lunch	\N	\N	\N	2022-11-17 17:07:54.454145	2022-11-17 17:07:54.454078	bc6fb049-62c3-421a-a46d-5baaf1310ac3	2159
2162	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Full Price Supper	Full Price Supper	Full Price Supper	\N	\N	\N	2022-11-17 17:07:54.464923	2022-11-17 17:07:54.464889	0b2358b4-0b31-4465-87c1-d6f4e1884129	2162
2165	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Snack	Reduced Price Snack	Reduced Price Snack	\N	\N	\N	2022-11-17 17:07:54.479758	2022-11-17 17:07:54.479725	16500da3-d215-4025-b211-560494ff4974	2165
2166	uri://ed-fi.org/SchoolFoodServiceProgramServiceDescriptor	Reduced Price Supper	Reduced Price Supper	Reduced Price Supper	\N	\N	\N	2022-11-17 17:07:54.484579	2022-11-17 17:07:54.484526	8486fbd3-72bc-4186-a76a-9e762ac4bb41	2166
2169	uri://ed-fi.org/SchoolTypeDescriptor	Career and Technical Education	Career and Technical Education	Career and Technical Education	\N	\N	\N	2022-11-17 17:07:54.521056	2022-11-17 17:07:54.519466	3a782cf4-db8f-4cf9-bbf6-2e78da22e99a	2169
2170	uri://ed-fi.org/SchoolTypeDescriptor	Regular	Regular	Regular	\N	\N	\N	2022-11-17 17:07:54.531176	2022-11-17 17:07:54.531003	10fab5ec-b7dd-490d-9185-ce6a71e46649	2170
2174	uri://ed-fi.org/SectionCharacteristicDescriptor	Attendance Tracked	Attendance Tracked	Attendance Tracked	\N	\N	\N	2022-11-17 17:07:54.56978	2022-11-17 17:07:54.568195	f2ff7b25-6a86-4857-bdee-1c3697996792	2174
2175	uri://ed-fi.org/SeparationDescriptor	Involuntary separation	Involuntary separation	Involuntary separation	\N	\N	\N	2022-11-17 17:07:54.606465	2022-11-17 17:07:54.604834	7b6150d8-9ad4-4d28-9836-e526d6433df2	2175
2178	uri://ed-fi.org/SeparationDescriptor	Voluntary separation	Voluntary separation	Voluntary separation	\N	\N	\N	2022-11-17 17:07:54.623097	2022-11-17 17:07:54.623054	d31eb5e9-a9ed-4c64-a0a8-dfec8e34f443	2178
2180	uri://ed-fi.org/SeparationReasonDescriptor	Employment elsewhere	Employment elsewhere	Employment elsewhere	\N	\N	\N	2022-11-17 17:07:54.659958	2022-11-17 17:07:54.659916	392ef4c7-6967-4664-b056-95a07272e6cc	2180
2182	uri://ed-fi.org/SeparationReasonDescriptor	Formal study or research	Formal study or research	Formal study or research	\N	\N	\N	2022-11-17 17:07:54.667863	2022-11-17 17:07:54.667827	0c37fc0b-9c16-4286-b860-1d7d3b4e45eb	2182
2184	uri://ed-fi.org/SeparationReasonDescriptor	Layoff	Layoff	Layoff	\N	\N	\N	2022-11-17 17:07:54.675782	2022-11-17 17:07:54.675747	854fdf8f-1aea-4f4e-b246-f5bb97b8bfbe	2184
2185	uri://ed-fi.org/SeparationReasonDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:54.680505	2022-11-17 17:07:54.680409	98228250-a832-4f51-bd8b-8507d3e357f3	2185
2188	uri://ed-fi.org/SeparationReasonDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-11-17 17:07:54.691972	2022-11-17 17:07:54.691935	65e49db2-f832-4d47-8e84-9a2b44d8ab0d	2188
2191	uri://ed-fi.org/ServiceDescriptor	Assistive technology device or service	Assistive technology device or service	Assistive technology device or service	\N	\N	\N	2022-11-17 17:07:54.727917	2022-11-17 17:07:54.726561	2d1e145f-4e21-4484-b4f4-60aed6da2d0f	2191
2193	uri://ed-fi.org/ServiceDescriptor	Medical diagnostic services	Medical diagnostic services	Medical diagnostic services	\N	\N	\N	2022-11-17 17:07:54.741176	2022-11-17 17:07:54.74114	33a6d228-3952-4149-8e11-9bf93e14624f	2193
2194	uri://ed-fi.org/ServiceDescriptor	Physical therapy	Physical therapy	Physical therapy	\N	\N	\N	2022-11-17 17:07:54.746186	2022-11-17 17:07:54.746091	fc3269e5-e07d-40f2-b0b1-565454d421cb	2194
2196	uri://ed-fi.org/ServiceDescriptor	Occupational therapy	Occupational therapy	Occupational therapy	\N	\N	\N	2022-11-17 17:07:54.754732	2022-11-17 17:07:54.754694	4b5c496c-054f-409f-bb06-81c067f42898	2196
2198	uri://ed-fi.org/ServiceDescriptor	Psychological services	Psychological services	Psychological services	\N	\N	\N	2022-11-17 17:07:54.7625	2022-11-17 17:07:54.762401	827d7819-78d7-481e-a55d-74c46558b086	2198
2200	uri://ed-fi.org/ServiceDescriptor	Audiological Impairment	Audiological Impairment	Audiological Impairment	\N	\N	\N	2022-11-17 17:07:54.770626	2022-11-17 17:07:54.770569	a1322728-7b58-4128-bcea-40f86e86b8ab	2200
2202	uri://ed-fi.org/ServiceDescriptor	Disgraphia	Disgraphia	Disgraphia	\N	\N	\N	2022-11-17 17:07:54.779717	2022-11-17 17:07:54.779667	137acf06-9c50-44d3-84ef-9d447aeb49c6	2202
2204	uri://ed-fi.org/ServiceDescriptor	Speech therapy	Speech therapy	Speech therapy	\N	\N	\N	2022-11-17 17:07:54.787469	2022-11-17 17:07:54.787416	d226f6c6-a703-4cc3-a0d2-a772b03eda19	2204
2205	uri://ed-fi.org/SexDescriptor	Male	Male	Male	\N	\N	\N	2022-11-17 17:07:54.819614	2022-11-17 17:07:54.818248	aef9ec5e-c899-48bc-941b-64a37e63d66b	2205
2208	uri://ed-fi.org/SexDescriptor	Not Selected	Not Selected	Not Selected	\N	\N	\N	2022-11-17 17:07:54.832419	2022-11-17 17:07:54.832386	c8496b59-0d33-4fca-bfa0-67308928548e	2208
2209	uri://ed-fi.org/SourceSystemDescriptor	District	District	District	\N	\N	\N	2022-11-17 17:07:54.866324	2022-11-17 17:07:54.865005	6ca44937-b3f4-4f8c-a0f7-1cc9704ab890	2209
2211	uri://ed-fi.org/SourceSystemDescriptor	State	State	State	\N	\N	\N	2022-11-17 17:07:54.876711	2022-11-17 17:07:54.876609	9728bcd0-9ea3-4c7c-acc1-89346f32f90e	2211
2213	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Interpreting Services	Interpreting Services	Interpreting Services	\N	\N	\N	2022-11-17 17:07:54.912466	2022-11-17 17:07:54.910895	4af7bcdb-9a2d-4ef7-9894-74f84dfd3247	2213
2216	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Occupational And Physical Therapy	Occupational And Physical Therapy	Occupational And Physical Therapy	\N	\N	\N	2022-11-17 17:07:54.926357	2022-11-17 17:07:54.926324	f8d950c0-94a1-4af8-9132-30f94bd925e6	2216
2218	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Early Identification And Evaluation	Early Identification And Evaluation	Early Identification And Evaluation	\N	\N	\N	2022-11-17 17:07:54.9345	2022-11-17 17:07:54.934468	efbd27a3-b99d-45f2-8b22-0f2d61f04e5b	2218
2220	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Orientation And Mobility	Orientation And Mobility	Orientation And Mobility	\N	\N	\N	2022-11-17 17:07:54.942649	2022-11-17 17:07:54.942616	23adc967-b5f5-4776-8b7e-b1a6415aa512	2220
2222	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	School Health and/or School Nurse Services	School Health and/or School Nurse Services	School Health and/or School Nurse Services	\N	\N	\N	2022-11-17 17:07:54.950738	2022-11-17 17:07:54.950706	30165c8c-a86d-4f3c-bd74-d0ca44a8098d	2222
2223	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Social Work Services	Social Work Services	Social Work Services	\N	\N	\N	2022-11-17 17:07:54.955474	2022-11-17 17:07:54.955381	b9a0bbb6-d886-45d3-9866-0d2c3a5ac86d	2223
2226	uri://ed-fi.org/SpecialEducationSettingDescriptor	Correctional facilities	Correctional facilities	Correctional facilities	\N	\N	\N	2022-11-17 17:07:54.995358	2022-11-17 17:07:54.993778	514ad7df-8a9f-4d1b-94ef-77e27012bae3	2226
2227	uri://ed-fi.org/SpecialEducationSettingDescriptor	Homebound/Hospital	Homebound/Hospital	Homebound/Hospital	\N	\N	\N	2022-11-17 17:07:55.005893	2022-11-17 17:07:55.005855	9d98029e-b4ad-408a-b033-d76b3a662778	2227
2229	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	Inside regular class less than 40% of the day	\N	\N	\N	2022-11-17 17:07:55.015508	2022-11-17 17:07:55.015314	ad0a5c1c-187e-43b2-a691-3508ab388c86	2229
2232	uri://ed-fi.org/SpecialEducationSettingDescriptor	Other early childhood location (< 10 hours)	Other early childhood location (< 10 hours)	Other early childhood location (< 10 hours)	\N	\N	\N	2022-11-17 17:07:55.026505	2022-11-17 17:07:55.026471	e7006637-fdde-497b-9334-59c51e5957ea	2232
2234	uri://ed-fi.org/SpecialEducationSettingDescriptor	Residential facility	Residential facility	Residential facility	\N	\N	\N	2022-11-17 17:07:55.034505	2022-11-17 17:07:55.03447	719142ea-2c4d-4900-8a54-8c2f236e3fc2	2234
2235	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate class	Separate class	Separate class	\N	\N	\N	2022-11-17 17:07:55.042416	2022-11-17 17:07:55.042231	87b73474-ee6e-41ac-9791-1a89212020fb	2235
2203	uri://ed-fi.org/ServiceDescriptor	Audiological services	Audiological services	Audiological services	\N	\N	\N	2022-11-17 17:07:54.782716	2022-11-17 17:07:54.782681	819d2a63-8e1a-445e-9567-45e3106790cf	2203
2206	uri://ed-fi.org/SexDescriptor	Female	Female	Female	\N	\N	\N	2022-11-17 17:07:54.819607	2022-11-17 17:07:54.818245	4c8f0b20-0f72-4d0b-8ff2-057d0d7efb96	2206
2207	uri://ed-fi.org/SexDescriptor	Non-binary	Non-binary	Non-binary	\N	\N	\N	2022-11-17 17:07:54.830638	2022-11-17 17:07:54.830595	91e2a854-4868-49a7-b3db-21bc52ff1e8c	2207
2210	uri://ed-fi.org/SourceSystemDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:54.86633	2022-11-17 17:07:54.865001	5ea1f7e6-d960-4b43-a993-01d9cbb79c20	2210
2212	uri://ed-fi.org/SourceSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-11-17 17:07:54.879259	2022-11-17 17:07:54.879237	0db93e4c-1837-493a-90d3-69def871572c	2212
2214	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Speech-Language And Audiology Services	Speech-Language And Audiology Services	Speech-Language And Audiology Services	\N	\N	\N	2022-11-17 17:07:54.912462	2022-11-17 17:07:54.910898	a871abd6-ac0c-44ba-a5fa-c8685a88a84f	2214
2215	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Psychological Services	Psychological Services	Psychological Services	\N	\N	\N	2022-11-17 17:07:54.922988	2022-11-17 17:07:54.922906	b41be5ea-1728-4b96-b0b9-6056d8cc7105	2215
2217	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	Recreation, Including Therapeutic Recreation	\N	\N	\N	2022-11-17 17:07:54.930862	2022-11-17 17:07:54.930825	6e8f0669-3e1c-416a-b658-011cdb419a80	2217
2219	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Counseling Services	Counseling Services (Including Rehabilitation Counseling)	Counseling Services (Including Rehabilitation Counseling)	\N	\N	\N	2022-11-17 17:07:54.939035	2022-11-17 17:07:54.938938	40c7b244-aa58-4ae2-a0d1-34433a34bee5	2219
2221	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Medical Services	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	Medical Services (Diagnostic or evaluation only - not ongoing treatment)	\N	\N	\N	2022-11-17 17:07:54.947408	2022-11-17 17:07:54.947356	ebf60e9d-9d31-468b-b56e-5259534f2794	2221
2224	uri://ed-fi.org/SpecialEducationProgramServiceDescriptor	Parent Counseling And Training	Parent Counseling And Training	Parent Counseling And Training	\N	\N	\N	2022-11-17 17:07:54.958826	2022-11-17 17:07:54.958794	613fcf51-e5b0-43b0-b313-d2858ccb7b18	2224
2225	uri://ed-fi.org/SpecialEducationSettingDescriptor	Home	Home	Home	\N	\N	\N	2022-11-17 17:07:54.995358	2022-11-17 17:07:54.993774	6b92347f-1001-4584-89a8-4585e78683ac	2225
2228	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	Inside regular class 80% or more of the day	\N	\N	\N	2022-11-17 17:07:55.007941	2022-11-17 17:07:55.007909	ab379f46-b14e-4000-ba92-3cecd44e3b4a	2228
2230	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside regular class between 40-79% of the day	Inside regular class between 40-79% of the day	Inside regular class no more than 79% of day and no less than 40% of the day	\N	\N	\N	2022-11-17 17:07:55.018338	2022-11-17 17:07:55.018306	0ad111e2-87d5-4176-942a-87084fea35b7	2230
2231	uri://ed-fi.org/SpecialEducationSettingDescriptor	Other early childhood location (10+ hrs)	Other early childhood location (10+ hrs)	Other early childhood location (10+ hrs)	\N	\N	\N	2022-11-17 17:07:55.023219	2022-11-17 17:07:55.023165	33fdbbe6-fafa-4743-b493-4f47ea510f1b	2231
2233	uri://ed-fi.org/SpecialEducationSettingDescriptor	Parentally-placed in private schools	Parentally-placed in private schools	Parentally-placed in private schools	\N	\N	\N	2022-11-17 17:07:55.031149	2022-11-17 17:07:55.031099	5d2dab47-dba7-4878-8af4-a15a42a065ba	2233
2236	uri://ed-fi.org/SpecialEducationSettingDescriptor	Separate school	Separate school	Separate school	\N	\N	\N	2022-11-17 17:07:55.045251	2022-11-17 17:07:55.045219	645bac9c-d263-4611-8938-ac5272096271	2236
2237	uri://ed-fi.org/SpecialEducationSettingDescriptor	Regular early childhood program (10+ hrs)	Regular early childhood program (10+ hrs)	Services in regular early childhood program (at least 10 hours)	\N	\N	\N	2022-11-17 17:07:55.054238	2022-11-17 17:07:55.054106	9d507fd8-5de3-467f-8c73-63d686e0169f	2237
2240	uri://ed-fi.org/SpecialEducationSettingDescriptor	Inside reg class between 40-79% of the day	DEPRECATED: Inside reg class 40-79% of the day	DEPRECATED: Inside reg class 40-79% of the day	\N	\N	\N	2022-11-17 17:07:55.067548	2022-11-17 17:07:55.067516	56059fda-26b4-4950-847a-aa3b2d5eeedd	2240
2242	uri://ed-fi.org/StaffClassificationDescriptor	Pre-Kindergarten Teacher	Pre-Kindergarten Teacher	Pre-Kindergarten Teacher	\N	\N	\N	2022-11-17 17:07:55.102332	2022-11-17 17:07:55.100713	c314d75f-5ab3-4529-ba82-9495c8cd5d1c	2242
2244	uri://ed-fi.org/StaffClassificationDescriptor	Secondary Teacher	Secondary Teacher	Secondary Teacher	\N	\N	\N	2022-11-17 17:07:55.115505	2022-11-17 17:07:55.115485	c37b9216-25aa-4d1a-a606-4c32e9c1478a	2244
2246	uri://ed-fi.org/StaffClassificationDescriptor	Paraprofessional/Instructional Aide	Paraprofessional/Instructional Aide	Paraprofessional/Instructional Aide	\N	\N	\N	2022-11-17 17:07:55.124986	2022-11-17 17:07:55.124953	6e787d71-d5b1-47d2-9fb1-17a78facbe69	2246
2247	uri://ed-fi.org/StaffClassificationDescriptor	Elementary School Counselor	Elementary School Counselor	Elementary School Counselor	\N	\N	\N	2022-11-17 17:07:55.133158	2022-11-17 17:07:55.13297	962aeecb-8deb-41c0-8026-fd53fd97fb33	2247
2249	uri://ed-fi.org/StaffClassificationDescriptor	School Counselor	School Counselor	School Counselor	\N	\N	\N	2022-11-17 17:07:55.141016	2022-11-17 17:07:55.140985	dde2235d-b49f-409e-8836-7fa9eeb6da73	2249
2250	uri://ed-fi.org/StaffClassificationDescriptor	Librarian/Media Specialist	Librarian/Media Specialist	Librarian/Media Specialist	\N	\N	\N	2022-11-17 17:07:55.146876	2022-11-17 17:07:55.14666	77d9fbc2-8c72-4ace-be49-b572a4f33b52	2250
2253	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrative Support Staff	LEA Administrative Support Staff	LEA Administrative Support Staff	\N	\N	\N	2022-11-17 17:07:55.158091	2022-11-17 17:07:55.158058	84b68604-0451-4f88-8167-40cf61b20eb1	2253
2256	uri://ed-fi.org/StaffClassificationDescriptor	School Psychologist	School Psychologist	School Psychologist	\N	\N	\N	2022-11-17 17:07:55.170488	2022-11-17 17:07:55.170454	ff5c3687-e13d-4c16-80e5-7fe75ea54cfd	2256
2257	uri://ed-fi.org/StaffClassificationDescriptor	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	Student Support Services Staff (w/o Psychology)	\N	\N	\N	2022-11-17 17:07:55.179927	2022-11-17 17:07:55.179732	067893b0-4f95-412e-bf7f-78a5ee4aa381	2257
2260	uri://ed-fi.org/StaffClassificationDescriptor	Missing	Missing	Missing	\N	\N	\N	2022-11-17 17:07:55.190786	2022-11-17 17:07:55.190755	6c99581f-16e3-440b-806c-b37d29cb0a85	2260
2261	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Principal	DEPRECATED: Assistant Principal	DEPRECATED: Assistant Principal	\N	\N	\N	2022-11-17 17:07:55.19724	2022-11-17 17:07:55.19716	88b6bab0-3ce4-478b-b683-aca34f9c7b4a	2261
2264	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Aide	DEPRECATED: Instructional Aide	DEPRECATED: Instructional Aide	\N	\N	\N	2022-11-17 17:07:55.209366	2022-11-17 17:07:55.209325	50712e49-3626-4a6c-b8d0-8f0e403b6662	2264
2265	uri://ed-fi.org/StaffClassificationDescriptor	Instructional Coordinator	DEPRECATED: Instructional Coordinator	DEPRECATED: Instructional Coordinator	\N	\N	\N	2022-11-17 17:07:55.215486	2022-11-17 17:07:55.214319	0cd33a36-d906-48cb-a337-398d14cf0439	2265
2268	uri://ed-fi.org/StaffClassificationDescriptor	Operational Support	DEPRECATED: Operational Support	DEPRECATED: Operational Support	\N	\N	\N	2022-11-17 17:07:55.228542	2022-11-17 17:07:55.228488	d66d775d-4588-4f7a-9c36-3710c1107f3d	2268
2271	uri://ed-fi.org/StaffClassificationDescriptor	School Leader	DEPRECATED: School Leader	DEPRECATED: School Leader	\N	\N	\N	2022-11-17 17:07:55.242993	2022-11-17 17:07:55.242951	2bde5d79-8d03-4bd9-9156-83728ed3c25a	2271
2273	uri://ed-fi.org/StaffClassificationDescriptor	State Administrator	DEPRECATED: State Administrator	DEPRECATED: State Administrator	\N	\N	\N	2022-11-17 17:07:55.254649	2022-11-17 17:07:55.254196	13f1a54c-8af0-4631-b3ed-0ba08ecec026	2273
2274	uri://ed-fi.org/StaffClassificationDescriptor	Substitute Teacher	DEPRECATED: Substitute Teacher	DEPRECATED: Substitute Teacher	\N	\N	\N	2022-11-17 17:07:55.260228	2022-11-17 17:07:55.260186	a7b81a2a-ea66-468e-8d22-b4202f3285f6	2274
2276	uri://ed-fi.org/StaffClassificationDescriptor	Support Services Staff	DEPRECATED: Support Services Staff	DEPRECATED: Support Services Staff	\N	\N	\N	2022-11-17 17:07:55.271398	2022-11-17 17:07:55.271066	8ce9bf06-76ad-48e1-8c18-ea8b8743547e	2276
2238	uri://ed-fi.org/SpecialEducationSettingDescriptor	Regular early childhood program (less than 10 hrs)	Regular early childhood program (less than 10 hrs)	Services in regular early childhood program (less than 10 hours)	\N	\N	\N	2022-11-17 17:07:55.057135	2022-11-17 17:07:55.057103	80f52125-b04e-48c8-b7f0-f702e94810a9	2238
2239	uri://ed-fi.org/SpecialEducationSettingDescriptor	Service provider location	Service provider location	Service provider location	\N	\N	\N	2022-11-17 17:07:55.064624	2022-11-17 17:07:55.064489	a1fe5cfa-7793-4e36-8324-d95a0d44674a	2239
2241	uri://ed-fi.org/StaffClassificationDescriptor	Kindergarten Teacher	Kindergarten Teacher	Kindergarten Teacher	\N	\N	\N	2022-11-17 17:07:55.102334	2022-11-17 17:07:55.10071	4e1c9bb6-5e48-46ec-872b-9585f65ef0b4	2241
2243	uri://ed-fi.org/StaffClassificationDescriptor	Elementary Teacher	Elementary Teacher	Elementary Teacher	\N	\N	\N	2022-11-17 17:07:55.11396	2022-11-17 17:07:55.113112	e87049bb-bef6-4109-a7af-02f195307a68	2243
2245	uri://ed-fi.org/StaffClassificationDescriptor	Ungraded Teacher	Ungraded Teacher	Ungraded Teacher	\N	\N	\N	2022-11-17 17:07:55.122235	2022-11-17 17:07:55.122166	20ff7cbd-333b-461b-a56a-dc17c132a145	2245
2248	uri://ed-fi.org/StaffClassificationDescriptor	Secondary School Counselor	Secondary School Counselor	Secondary School Counselor	\N	\N	\N	2022-11-17 17:07:55.135963	2022-11-17 17:07:55.135932	7b5e8b50-f231-4d87-a92d-525f7a9a5149	2248
2251	uri://ed-fi.org/StaffClassificationDescriptor	Library/Media Support Staff	Library/Media Support Staff	Library/Media Support Staff	\N	\N	\N	2022-11-17 17:07:55.149636	2022-11-17 17:07:55.149604	0e1ca3b1-55d6-45b1-8a2e-6201f0405598	2251
2252	uri://ed-fi.org/StaffClassificationDescriptor	LEA Administrator	LEA Administrator	LEA Administrator	\N	\N	\N	2022-11-17 17:07:55.155272	2022-11-17 17:07:55.155154	ac41f628-44fe-49f7-a226-5e61a29d7c64	2252
2254	uri://ed-fi.org/StaffClassificationDescriptor	School Administrator	School Administrator	School Administrator	\N	\N	\N	2022-11-17 17:07:55.162886	2022-11-17 17:07:55.162855	92c94685-933b-4178-882e-29cb3fbcca3d	2254
2255	uri://ed-fi.org/StaffClassificationDescriptor	School Administrative Support Staff	School Administrative Support Staff	School Administrative Support Staff	\N	\N	\N	2022-11-17 17:07:55.167654	2022-11-17 17:07:55.167559	ec281c72-8783-4f93-8052-4409ec0d4bec	2255
2258	uri://ed-fi.org/StaffClassificationDescriptor	All Other Support Staff	All Other Support Staff	All Other Support Staff	\N	\N	\N	2022-11-17 17:07:55.182768	2022-11-17 17:07:55.182735	b03845b8-123c-4b86-b5d8-5a4a25db8c29	2258
2259	uri://ed-fi.org/StaffClassificationDescriptor	Instr Coordinator and Supervisor to the Staff	Instructional Coordinator and Supervisor to the Staff	Instructional Coordinator and Supervisor to the Staff	\N	\N	\N	2022-11-17 17:07:55.187908	2022-11-17 17:07:55.187695	8710c592-1820-430e-b6a4-5f2a54810aa9	2259
2262	uri://ed-fi.org/StaffClassificationDescriptor	Assistant Superintendent	DEPRECATED: Assistant Superintendent	DEPRECATED: Assistant Superintendent	\N	\N	\N	2022-11-17 17:07:55.20019	2022-11-17 17:07:55.200157	d1c6a5e8-7038-40ae-88ff-797acc8a3729	2262
2263	uri://ed-fi.org/StaffClassificationDescriptor	Counselor	DEPRECATED: Counselor	DEPRECATED: Counselor	\N	\N	\N	2022-11-17 17:07:55.205649	2022-11-17 17:07:55.205548	7aed30d6-ce91-40c4-8831-41ef3e955f1b	2263
2266	uri://ed-fi.org/StaffClassificationDescriptor	LEA Specialist	DEPRECATED: LEA Specialist	DEPRECATED: LEA Specialist	\N	\N	\N	2022-11-17 17:07:55.218343	2022-11-17 17:07:55.218265	11ff93f7-4d99-4699-9bfd-8caf0e6da276	2266
2267	uri://ed-fi.org/StaffClassificationDescriptor	LEA System Administrator	DEPRECATED: LEA System Administrator	DEPRECATED: LEA System Administrator	\N	\N	\N	2022-11-17 17:07:55.223647	2022-11-17 17:07:55.223604	8ee18af4-9ca1-4a9c-ad5c-71986b91758a	2267
2269	uri://ed-fi.org/StaffClassificationDescriptor	Other	DEPRECATED: Other	DEPRECATED: Other	\N	\N	\N	2022-11-17 17:07:55.23428	2022-11-17 17:07:55.234221	43dedf51-dc11-42a7-bdc0-f5de7bf0ee99	2269
2270	uri://ed-fi.org/StaffClassificationDescriptor	Principal	DEPRECATED: Principal	DEPRECATED: Principal	\N	\N	\N	2022-11-17 17:07:55.240192	2022-11-17 17:07:55.239832	5f4b078b-c74d-47d5-99c4-b332ea351dcd	2270
2272	uri://ed-fi.org/StaffClassificationDescriptor	School Specialist	DEPRECATED: School Specialist	DEPRECATED: School Specialist	\N	\N	\N	2022-11-17 17:07:55.25135	2022-11-17 17:07:55.251161	5dd98cfc-d121-46ef-b750-0b1355f962ec	2272
2275	uri://ed-fi.org/StaffClassificationDescriptor	Superintendent	DEPRECATED: Superintendent	DEPRECATED: Superintendent	\N	\N	\N	2022-11-17 17:07:55.263762	2022-11-17 17:07:55.26372	399a7484-95b2-4e28-a2d4-59bf4ac3688b	2275
2277	uri://ed-fi.org/StaffClassificationDescriptor	Teacher	DEPRECATED: Teacher	DEPRECATED: Teacher	\N	\N	\N	2022-11-17 17:07:55.27403	2022-11-17 17:07:55.273996	7f5f617c-d593-42b0-be80-a4d7a19290db	2277
2278	uri://ed-fi.org/StaffIdentificationSystemDescriptor	District	District	District	\N	\N	\N	2022-11-17 17:07:55.309861	2022-11-17 17:07:55.308242	f8d1e820-90c8-40e4-ad83-49a235bb9775	2278
2280	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Drivers License	Drivers License	Drivers License	\N	\N	\N	2022-11-17 17:07:55.32047	2022-11-17 17:07:55.32023	734b992b-c8ea-451e-828b-28554a98eeb3	2280
2282	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Health Record	Health Record	Health Record	\N	\N	\N	2022-11-17 17:07:55.330486	2022-11-17 17:07:55.33039	10aced1e-51d2-476d-9708-592f8c7f1189	2282
2284	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:55.340023	2022-11-17 17:07:55.339926	9d315783-fe84-481e-ad94-d6f4e28b187e	2284
2286	uri://ed-fi.org/StaffIdentificationSystemDescriptor	PIN	PIN	PIN	\N	\N	\N	2022-11-17 17:07:55.3485	2022-11-17 17:07:55.348469	6364e39c-d941-4cbf-880d-8c801742e9a7	2286
2287	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Professional Certificate	Professional Certificate	Professional Certificate	\N	\N	\N	2022-11-17 17:07:55.353932	2022-11-17 17:07:55.35384	12a9eff1-e7fa-4518-92bb-f3d9d37db09e	2287
2290	uri://ed-fi.org/StaffIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	2022-11-17 17:07:55.365297	2022-11-17 17:07:55.365266	f3f8c40d-6d0d-4242-932a-c57c0d98af66	2290
2292	uri://ed-fi.org/StaffIdentificationSystemDescriptor	US Visa	US Visa	US Visa	\N	\N	\N	2022-11-17 17:07:55.373094	2022-11-17 17:07:55.373062	ed78a355-f36a-458f-8fc1-6d845d287409	2292
2293	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Administrative	Administrative	Administrative	\N	\N	\N	2022-11-17 17:07:55.40681	2022-11-17 17:07:55.405182	8fa7482a-397d-453d-8831-fe97c409f51e	2293
2296	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Compensatory leave time	Compensatory leave time	Compensatory leave time	\N	\N	\N	2022-11-17 17:07:55.422231	2022-11-17 17:07:55.422199	ba3e3354-458e-4d13-b7db-f2421b1f99f2	2296
2298	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Flex time	Flex time	Flex time	\N	\N	\N	2022-11-17 17:07:55.430537	2022-11-17 17:07:55.430506	dc3779fe-49d5-4f6d-aeb8-7fbe1f94c45e	2298
2299	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Government-requested	Government-requested	Government-requested	\N	\N	\N	2022-11-17 17:07:55.435595	2022-11-17 17:07:55.435373	35097e0a-8984-48eb-8d9e-828c68d89f23	2299
2302	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:55.446165	2022-11-17 17:07:55.44613	608ef6d9-a067-4b32-bc5b-3c065846b1ee	2302
2303	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Personal	Personal	Personal	\N	\N	\N	2022-11-17 17:07:55.45199	2022-11-17 17:07:55.451938	3cc973d2-f5d1-4c89-817d-7b01e2bfaaac	2303
2305	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Release time	Release time	Release time	\N	\N	\N	2022-11-17 17:07:55.459825	2022-11-17 17:07:55.459766	a7d5e316-2b12-45e3-97cd-c1e73b46de31	2305
2307	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sick leave	Sick leave	Sick leave	\N	\N	\N	2022-11-17 17:07:55.467781	2022-11-17 17:07:55.467727	33fd6e9c-c468-4c9c-9abb-70e017ada7b0	2307
2309	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Vacation	Vacation	Vacation	\N	\N	\N	2022-11-17 17:07:55.478222	2022-11-17 17:07:55.478052	b18964af-f842-4862-9e6f-7b1c248cb001	2309
2311	uri://ed-fi.org/StateAbbreviationDescriptor	AA	AA	AA	\N	\N	\N	2022-11-17 17:07:55.529949	2022-11-17 17:07:55.528341	2b0d6f3c-be73-45d7-9c64-2401964bc0cd	2311
2314	uri://ed-fi.org/StateAbbreviationDescriptor	AL	AL	AL	\N	\N	\N	2022-11-17 17:07:55.55131	2022-11-17 17:07:55.551248	2a32c2a4-9d36-49f7-a66f-044587866d4d	2314
2315	uri://ed-fi.org/StateAbbreviationDescriptor	AP	AP	AP	\N	\N	\N	2022-11-17 17:07:55.558213	2022-11-17 17:07:55.558176	e8fd8127-2083-48d1-ad3b-9ddf084bafca	2315
2317	uri://ed-fi.org/StateAbbreviationDescriptor	AS	AS	AS	\N	\N	\N	2022-11-17 17:07:55.56849	2022-11-17 17:07:55.568222	74e713b6-f6fa-416e-a988-5e7efd4b0331	2317
2320	uri://ed-fi.org/StateAbbreviationDescriptor	CO	CO	CO	\N	\N	\N	2022-11-17 17:07:55.579823	2022-11-17 17:07:55.579788	3f490713-7fb4-4fc8-9b39-1393ec27f338	2320
2322	uri://ed-fi.org/StateAbbreviationDescriptor	DC	DC	DC	\N	\N	\N	2022-11-17 17:07:55.599529	2022-11-17 17:07:55.599494	fd299e84-b740-448e-94d2-84a63eaf9c76	2322
2279	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	2022-11-17 17:07:55.30986	2022-11-17 17:07:55.308234	d4f7a31a-8843-4623-ab2f-dee6a12aa583	2279
2281	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-11-17 17:07:55.323514	2022-11-17 17:07:55.323482	f8e7331d-2825-42a8-b558-2fc4fef3e8c4	2281
2283	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Medicaid	Medicaid	Medicaid	\N	\N	\N	2022-11-17 17:07:55.33383	2022-11-17 17:07:55.333797	674cdc8e-23d3-4e55-8505-01668bf5bfb0	2283
2285	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Other Federal	Other Federal	Other Federal	\N	\N	\N	2022-11-17 17:07:55.343715	2022-11-17 17:07:55.343683	58231a4c-08f6-4969-8fda-cccb91866799	2285
2288	uri://ed-fi.org/StaffIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:55.35713	2022-11-17 17:07:55.357098	f6183a14-abba-4cb6-9933-ddbf0fef681b	2288
2289	uri://ed-fi.org/StaffIdentificationSystemDescriptor	Selective Service	Selective Service	Selective Service	\N	\N	\N	2022-11-17 17:07:55.361944	2022-11-17 17:07:55.36185	86f81094-579c-40d2-ab0f-d7143314eb03	2289
2291	uri://ed-fi.org/StaffIdentificationSystemDescriptor	State	State	State	\N	\N	\N	2022-11-17 17:07:55.369708	2022-11-17 17:07:55.369675	1ea6ae09-f3e6-4cd1-8745-2a7ae7e5de66	2291
2294	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Annual leave	Annual leave	Annual leave	\N	\N	\N	2022-11-17 17:07:55.406811	2022-11-17 17:07:55.405186	dc74dfbb-cf7a-4f38-8237-c4bf1f7cd177	2294
2295	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Bereavement	Bereavement	Bereavement	\N	\N	\N	2022-11-17 17:07:55.41916	2022-11-17 17:07:55.419016	5467720f-1c92-4210-bd56-b5458ca47d38	2295
2297	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Family and medical leave	Family and medical leave	Family and medical leave	\N	\N	\N	2022-11-17 17:07:55.427133	2022-11-17 17:07:55.427082	69fbfdec-2c2f-432a-beb9-2b43de037378	2297
2300	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Jury duty	Jury duty	Jury duty	\N	\N	\N	2022-11-17 17:07:55.438434	2022-11-17 17:07:55.438406	ec6e70ef-5b0e-44c2-8ab9-e305fa6941ef	2300
2301	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Military leave	Military leave	Military leave	\N	\N	\N	2022-11-17 17:07:55.443344	2022-11-17 17:07:55.443248	c3249d18-4142-4977-b420-a23f295a8073	2301
2304	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Professional development	Professional development	Professional development	\N	\N	\N	2022-11-17 17:07:55.454968	2022-11-17 17:07:55.454934	40c72d24-8107-472d-9746-0f992a6ef6cf	2304
2306	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Sabbatical leave	Sabbatical leave	Sabbatical leave	\N	\N	\N	2022-11-17 17:07:55.46322	2022-11-17 17:07:55.463185	057eab2f-fef9-4332-8b1b-9fb1f8fede34	2306
2308	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Suspension	Suspension	Suspension	\N	\N	\N	2022-11-17 17:07:55.471063	2022-11-17 17:07:55.471028	a5ae5643-0184-478e-953f-2b56d3b93fbe	2308
2310	uri://ed-fi.org/StaffLeaveEventCategoryDescriptor	Work compensation	Work compensation	Work compensation	\N	\N	\N	2022-11-17 17:07:55.481036	2022-11-17 17:07:55.481002	bcc9dd9c-ab4e-462a-91b5-9c4cf2c7c801	2310
2312	uri://ed-fi.org/StateAbbreviationDescriptor	AE	AE	AE	\N	\N	\N	2022-11-17 17:07:55.52995	2022-11-17 17:07:55.528343	adf8f928-e613-4e74-9c28-7a66be442ccc	2312
2313	uri://ed-fi.org/StateAbbreviationDescriptor	AK	AK	AK	\N	\N	\N	2022-11-17 17:07:55.550003	2022-11-17 17:07:55.549961	58d26efd-0e5c-4e51-af7a-ade23676d1f2	2313
2316	uri://ed-fi.org/StateAbbreviationDescriptor	AR	AR	AR	\N	\N	\N	2022-11-17 17:07:55.561285	2022-11-17 17:07:55.56125	1cc58fb6-2ed7-400c-9ae6-78fac3681b7a	2316
2318	uri://ed-fi.org/StateAbbreviationDescriptor	AZ	AZ	AZ	\N	\N	\N	2022-11-17 17:07:55.570692	2022-11-17 17:07:55.570659	11ffc49c-4f40-4b38-b3bc-040030f6e5b3	2318
2319	uri://ed-fi.org/StateAbbreviationDescriptor	CA	CA	CA	\N	\N	\N	2022-11-17 17:07:55.576987	2022-11-17 17:07:55.576762	389c89bc-0390-476f-a37e-7e9ddfefa172	2319
2321	uri://ed-fi.org/StateAbbreviationDescriptor	CT	CT	CT	\N	\N	\N	2022-11-17 17:07:55.596644	2022-11-17 17:07:55.596493	10a7717b-995e-4cc9-8421-ceffe7545574	2321
2324	uri://ed-fi.org/StateAbbreviationDescriptor	FL	FL	FL	\N	\N	\N	2022-11-17 17:07:55.607185	2022-11-17 17:07:55.607152	f218d9cc-41a1-4f75-88f5-c3c0a354f5dc	2324
2326	uri://ed-fi.org/StateAbbreviationDescriptor	GA	GA	GA	\N	\N	\N	2022-11-17 17:07:55.615685	2022-11-17 17:07:55.615649	5cd5e808-6646-47c4-85b4-9068c06f665b	2326
2329	uri://ed-fi.org/StateAbbreviationDescriptor	IA	IA	IA	\N	\N	\N	2022-11-17 17:07:55.631354	2022-11-17 17:07:55.631319	54c579a9-4df4-4317-bf55-b0af2e5017cb	2329
2331	uri://ed-fi.org/StateAbbreviationDescriptor	IL	IL	IL	\N	\N	\N	2022-11-17 17:07:55.639475	2022-11-17 17:07:55.639441	dfdd4f2c-ca87-477a-9ac8-618fe276e14f	2331
2332	uri://ed-fi.org/StateAbbreviationDescriptor	IN	IN	IN	\N	\N	\N	2022-11-17 17:07:55.644114	2022-11-17 17:07:55.644077	a99abae4-1252-40da-a425-6123c33a5530	2332
2335	uri://ed-fi.org/StateAbbreviationDescriptor	LA	LA	LA	\N	\N	\N	2022-11-17 17:07:55.655043	2022-11-17 17:07:55.655008	1ead12bb-ddfd-465f-a1ce-b62f164e9d40	2335
2337	uri://ed-fi.org/StateAbbreviationDescriptor	MD	MD	MD	\N	\N	\N	2022-11-17 17:07:55.663109	2022-11-17 17:07:55.663074	94e61afc-fed9-472a-907e-3c3598ff40d3	2337
2340	uri://ed-fi.org/StateAbbreviationDescriptor	MI	MI	MI	\N	\N	\N	2022-11-17 17:07:55.675406	2022-11-17 17:07:55.675371	c555c8de-c0b5-4f8f-a02c-0e3eeb27f9e4	2340
2342	uri://ed-fi.org/StateAbbreviationDescriptor	MO	MO	MO	\N	\N	\N	2022-11-17 17:07:55.685413	2022-11-17 17:07:55.685377	451424d2-dfe5-4334-a86c-a6901a8d5423	2342
2344	uri://ed-fi.org/StateAbbreviationDescriptor	MS	MS	MS	\N	\N	\N	2022-11-17 17:07:55.702447	2022-11-17 17:07:55.702389	67c4e7e0-05da-4aed-96ef-fea04683d850	2344
2346	uri://ed-fi.org/StateAbbreviationDescriptor	NC	NC	NC	\N	\N	\N	2022-11-17 17:07:55.710261	2022-11-17 17:07:55.710219	f7b20fba-9de7-4bc8-ad9f-bb961172bd2a	2346
2348	uri://ed-fi.org/StateAbbreviationDescriptor	NE	NE	NE	\N	\N	\N	2022-11-17 17:07:55.720557	2022-11-17 17:07:55.720523	c784abb4-ac91-485f-80ff-0e6ec231b14f	2348
2351	uri://ed-fi.org/StateAbbreviationDescriptor	NM	NM	NM	\N	\N	\N	2022-11-17 17:07:55.736446	2022-11-17 17:07:55.736405	b1bbae43-bdf7-4d42-a224-44ccd2188ebe	2351
2354	uri://ed-fi.org/StateAbbreviationDescriptor	OH	OH	OH	\N	\N	\N	2022-11-17 17:07:55.754569	2022-11-17 17:07:55.754358	11213070-0bc5-4cdd-b58b-a347b8ae4cc2	2354
2356	uri://ed-fi.org/StateAbbreviationDescriptor	OR	OR	OR	\N	\N	\N	2022-11-17 17:07:55.763789	2022-11-17 17:07:55.763721	b79c6d0f-57fc-47da-b499-ebbcf9e92ee1	2356
2358	uri://ed-fi.org/StateAbbreviationDescriptor	PR	PR	PR	\N	\N	\N	2022-11-17 17:07:55.772866	2022-11-17 17:07:55.772783	0b924736-cb14-41c0-aa16-48a029900a57	2358
2360	uri://ed-fi.org/StateAbbreviationDescriptor	RI	RI	RI	\N	\N	\N	2022-11-17 17:07:55.782595	2022-11-17 17:07:55.782502	092e583f-3a7f-430b-98ce-41908dc5a8dd	2360
2362	uri://ed-fi.org/StateAbbreviationDescriptor	SD	SD	SD	\N	\N	\N	2022-11-17 17:07:55.791194	2022-11-17 17:07:55.791123	c2584ca8-0e35-4ba9-8cd5-01ac0a076837	2362
2364	uri://ed-fi.org/StateAbbreviationDescriptor	TX	TX	TX	\N	\N	\N	2022-11-17 17:07:55.80068	2022-11-17 17:07:55.800639	0ef083d1-471b-4a40-9679-55ee76636f5e	2364
2366	uri://ed-fi.org/StateAbbreviationDescriptor	VA	VA	VA	\N	\N	\N	2022-11-17 17:07:55.825422	2022-11-17 17:07:55.825229	14a51177-2adf-4614-ba09-6a54d51b7922	2366
2368	uri://ed-fi.org/StateAbbreviationDescriptor	VT	VT	VT	\N	\N	\N	2022-11-17 17:07:55.900354	2022-11-17 17:07:55.900286	8367c770-e313-485b-a412-2d67388e4cff	2368
2371	uri://ed-fi.org/StateAbbreviationDescriptor	WV	WV	WV	\N	\N	\N	2022-11-17 17:07:55.913483	2022-11-17 17:07:55.913451	d4c64dcd-7947-4360-a3b1-5bff749c9b1a	2371
2372	uri://ed-fi.org/StateAbbreviationDescriptor	WY	WY	WY	\N	\N	\N	2022-11-17 17:07:55.918195	2022-11-17 17:07:55.9181	2fed268a-2730-4fe5-8ba1-deacd0ce483c	2372
2373	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced Homemaker	Displaced Homemaker	Displaced Homemaker	\N	\N	\N	2022-11-17 17:07:55.953331	2022-11-17 17:07:55.951713	7b45e587-e747-46d8-919f-d1bb669d32ac	2373
2375	uri://ed-fi.org/StudentCharacteristicDescriptor	Foster Care	Foster Care	Foster Care	\N	\N	\N	2022-11-17 17:07:55.963635	2022-11-17 17:07:55.963586	f9304160-aa4d-46c6-b76f-1a0ed5361361	2375
2378	uri://ed-fi.org/StudentCharacteristicDescriptor	Parent in Military	Parent in Military	Parent in Military	\N	\N	\N	2022-11-17 17:07:55.977235	2022-11-17 17:07:55.977203	93fe85ea-cdd5-4109-9d49-d601b131ff8b	2378
2380	uri://ed-fi.org/StudentCharacteristicDescriptor	Refugee	Refugee	Refugee	\N	\N	\N	2022-11-17 17:07:55.988371	2022-11-17 17:07:55.988338	56195006-56f8-4af1-b535-a4e30e7deec9	2380
2382	uri://ed-fi.org/StudentCharacteristicDescriptor	Single Parent	Single Parent	Single Parent	\N	\N	\N	2022-11-17 17:07:55.996446	2022-11-17 17:07:55.996415	9928ccc4-3113-4bf1-bdc1-f5a1d7e387e0	2382
2384	uri://ed-fi.org/StudentCharacteristicDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:56.004433	2022-11-17 17:07:56.004401	1b669abd-6cf8-467d-a8e8-51ff220d9c1f	2384
2385	uri://ed-fi.org/StudentCharacteristicDescriptor	Displaced	Displaced	Displaced	\N	\N	\N	2022-11-17 17:07:56.009328	2022-11-17 17:07:56.009213	743f334f-3bef-41cb-8a4b-8898cb811c91	2385
2323	uri://ed-fi.org/StateAbbreviationDescriptor	DE	DE	DE	\N	\N	\N	2022-11-17 17:07:55.60466	2022-11-17 17:07:55.604333	c2ce92a4-c13e-4615-89e1-3604fa0236a2	2323
2325	uri://ed-fi.org/StateAbbreviationDescriptor	FM	FM	FM	\N	\N	\N	2022-11-17 17:07:55.612825	2022-11-17 17:07:55.612684	f8740d6b-f009-4911-854d-3da893f14cb5	2325
2327	uri://ed-fi.org/StateAbbreviationDescriptor	GU	GU	GU	\N	\N	\N	2022-11-17 17:07:55.623133	2022-11-17 17:07:55.623098	07f4c2d2-654b-411d-a501-8ada4bedf5cd	2327
2328	uri://ed-fi.org/StateAbbreviationDescriptor	HI	HI	HI	\N	\N	\N	2022-11-17 17:07:55.628161	2022-11-17 17:07:55.628076	98b797a7-dfa1-4ec2-b970-061ce1d14458	2328
2330	uri://ed-fi.org/StateAbbreviationDescriptor	ID	ID	ID	\N	\N	\N	2022-11-17 17:07:55.635938	2022-11-17 17:07:55.635837	ddf00416-63a6-4879-b7fe-595eb2e0875a	2330
2333	uri://ed-fi.org/StateAbbreviationDescriptor	KS	KS	KS	\N	\N	\N	2022-11-17 17:07:55.647292	2022-11-17 17:07:55.647256	7280dd3f-055d-454a-9e9f-97c01c06d5de	2333
2334	uri://ed-fi.org/StateAbbreviationDescriptor	KY	KY	KY	\N	\N	\N	2022-11-17 17:07:55.651817	2022-11-17 17:07:55.651714	ab5c6755-1c96-4d35-b85f-37fdcb023a45	2334
2336	uri://ed-fi.org/StateAbbreviationDescriptor	MA	MA	MA	\N	\N	\N	2022-11-17 17:07:55.659768	2022-11-17 17:07:55.65971	15b95b90-172f-4052-8480-17c5c20c198d	2336
2338	uri://ed-fi.org/StateAbbreviationDescriptor	ME	ME	ME	\N	\N	\N	2022-11-17 17:07:55.667864	2022-11-17 17:07:55.667829	fe7f9c74-7b88-4855-9453-6a2c77e9ebf3	2338
2339	uri://ed-fi.org/StateAbbreviationDescriptor	MH	MH	MH	\N	\N	\N	2022-11-17 17:07:55.672662	2022-11-17 17:07:55.672373	4f9c771b-f804-4438-b450-d43a39a38c01	2339
2341	uri://ed-fi.org/StateAbbreviationDescriptor	MN	MN	MN	\N	\N	\N	2022-11-17 17:07:55.682778	2022-11-17 17:07:55.682737	34aaa9a8-1bf7-4d5a-9928-0d87d517c318	2341
2343	uri://ed-fi.org/StateAbbreviationDescriptor	MP	MP	MP	\N	\N	\N	2022-11-17 17:07:55.693053	2022-11-17 17:07:55.693018	7c68d341-de29-4e31-8b1c-d02aee9d8cab	2343
2345	uri://ed-fi.org/StateAbbreviationDescriptor	MT	MT	MT	\N	\N	\N	2022-11-17 17:07:55.70529	2022-11-17 17:07:55.705251	4fddbad4-35b5-4b18-9db4-1a91d97a9a3d	2345
2347	uri://ed-fi.org/StateAbbreviationDescriptor	ND	ND	ND	\N	\N	\N	2022-11-17 17:07:55.715192	2022-11-17 17:07:55.715134	df254de8-766c-4876-8993-bd290a521a1a	2347
2349	uri://ed-fi.org/StateAbbreviationDescriptor	NH	NH	NH	\N	\N	\N	2022-11-17 17:07:55.726066	2022-11-17 17:07:55.726024	2c4e8309-f5ee-450d-b896-ed3a1d9ef59a	2349
2350	uri://ed-fi.org/StateAbbreviationDescriptor	NJ	NJ	NJ	\N	\N	\N	2022-11-17 17:07:55.731895	2022-11-17 17:07:55.731853	9d5dedc0-9ae3-477c-8815-64a0ed4fbda7	2350
2352	uri://ed-fi.org/StateAbbreviationDescriptor	NV	NV	NV	\N	\N	\N	2022-11-17 17:07:55.741532	2022-11-17 17:07:55.74147	21887db4-1e7d-40e0-b5a8-fd964bb53c2c	2352
2353	uri://ed-fi.org/StateAbbreviationDescriptor	NY	NY	NY	\N	\N	\N	2022-11-17 17:07:55.751255	2022-11-17 17:07:55.750823	55e92727-1ddc-4419-bd39-4549836f0176	2353
2355	uri://ed-fi.org/StateAbbreviationDescriptor	OK	OK	OK	\N	\N	\N	2022-11-17 17:07:55.761046	2022-11-17 17:07:55.759504	c40b6e74-e0a1-4c7b-8a9a-c027672fbaf7	2355
2357	uri://ed-fi.org/StateAbbreviationDescriptor	PA	PA	PA	\N	\N	\N	2022-11-17 17:07:55.769905	2022-11-17 17:07:55.769864	44ea79b0-5f93-41a1-8a64-b21d7de73b48	2357
2359	uri://ed-fi.org/StateAbbreviationDescriptor	PW	PW	PW	\N	\N	\N	2022-11-17 17:07:55.779729	2022-11-17 17:07:55.779442	9fcee348-ce1d-4790-ab0b-e7ed6c7d165d	2359
2361	uri://ed-fi.org/StateAbbreviationDescriptor	SC	SC	SC	\N	\N	\N	2022-11-17 17:07:55.788409	2022-11-17 17:07:55.788368	2ee10a2c-f392-4904-b8fb-3a5be073fc94	2361
2363	uri://ed-fi.org/StateAbbreviationDescriptor	TN	TN	TN	\N	\N	\N	2022-11-17 17:07:55.797226	2022-11-17 17:07:55.796824	3fe5b48b-9175-48ff-b560-6b14037d6c3f	2363
2365	uri://ed-fi.org/StateAbbreviationDescriptor	UT	UT	UT	\N	\N	\N	2022-11-17 17:07:55.810548	2022-11-17 17:07:55.810494	ec8fadbf-fb09-4cd4-88c7-0ef102eeb3df	2365
2367	uri://ed-fi.org/StateAbbreviationDescriptor	VI	VI	VI	\N	\N	\N	2022-11-17 17:07:55.828064	2022-11-17 17:07:55.827975	9de6cf07-7855-4628-9a36-f33a161090af	2367
2369	uri://ed-fi.org/StateAbbreviationDescriptor	WA	WA	WA	\N	\N	\N	2022-11-17 17:07:55.902892	2022-11-17 17:07:55.902859	46c4d61d-42c9-4059-be4e-6c544e4b28c9	2369
2370	uri://ed-fi.org/StateAbbreviationDescriptor	WI	WI	WI	\N	\N	\N	2022-11-17 17:07:55.910369	2022-11-17 17:07:55.910316	f5bd952f-f5c8-4889-b2b7-b48913a72078	2370
2374	uri://ed-fi.org/StudentCharacteristicDescriptor	Asylee	Asylee	Asylee	\N	\N	\N	2022-11-17 17:07:55.953329	2022-11-17 17:07:55.951716	6ec15815-074a-445e-8126-1d5feea9a631	2374
2376	uri://ed-fi.org/StudentCharacteristicDescriptor	Homeless	Homeless	Homeless	\N	\N	\N	2022-11-17 17:07:55.966542	2022-11-17 17:07:55.966507	f14587f9-9b42-449c-be6c-28feec4739cf	2376
2377	uri://ed-fi.org/StudentCharacteristicDescriptor	Immigrant	Immigrant	Immigrant	\N	\N	\N	2022-11-17 17:07:55.974701	2022-11-17 17:07:55.974477	d33c533b-1b15-4286-9e78-53f04d868770	2377
2379	uri://ed-fi.org/StudentCharacteristicDescriptor	Pregnant	Pregnant	Pregnant	\N	\N	\N	2022-11-17 17:07:55.985753	2022-11-17 17:07:55.985687	ee7b6c7f-3949-4086-8b7a-96cfe8731603	2379
2381	uri://ed-fi.org/StudentCharacteristicDescriptor	Runaway	Runaway	Runaway	\N	\N	\N	2022-11-17 17:07:55.993702	2022-11-17 17:07:55.993496	da2ccb94-54ad-4992-a3d5-d8f438040dcc	2381
2383	uri://ed-fi.org/StudentCharacteristicDescriptor	Unaccompanied Youth	Unaccompanied Youth	Unaccompanied Youth	\N	\N	\N	2022-11-17 17:07:56.00163	2022-11-17 17:07:56.001573	5cb221c3-e3c3-4140-b134-e3dca83d5c44	2383
2386	uri://ed-fi.org/StudentCharacteristicDescriptor	Economic Disadvantaged	Economic Disadvantaged	Economic Disadvantaged	\N	\N	\N	2022-11-17 17:07:56.012139	2022-11-17 17:07:56.012107	7b6f0777-9a65-4069-9459-c046604a9acd	2386
2387	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Canadian SIN	Canadian SIN	Canadian SIN	\N	\N	\N	2022-11-17 17:07:56.046101	2022-11-17 17:07:56.044778	203d4123-d301-4eca-b7e2-50a5a57bda68	2387
2390	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Federal	Federal	Federal	\N	\N	\N	2022-11-17 17:07:56.060016	2022-11-17 17:07:56.059932	b13b34ae-18d3-48ca-8f08-32f076848f1c	2390
2392	uri://ed-fi.org/StudentIdentificationSystemDescriptor	National Migrant	National Migrant	National Migrant	\N	\N	\N	2022-11-17 17:07:56.067812	2022-11-17 17:07:56.06778	e4405b45-0837-4c17-88bf-e7a8070ab7c9	2392
2394	uri://ed-fi.org/StudentIdentificationSystemDescriptor	School	School	School	\N	\N	\N	2022-11-17 17:07:56.085773	2022-11-17 17:07:56.085741	b3d9d742-411a-4c88-a5c7-6cf5d6094991	2394
2395	uri://ed-fi.org/StudentIdentificationSystemDescriptor	SSN	SSN	SSN	\N	\N	\N	2022-11-17 17:07:56.095329	2022-11-17 17:07:56.095279	e5f91e4a-60d2-4b27-95b8-f457d0516e7e	2395
2397	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State Migrant	State Migrant	State Migrant	\N	\N	\N	2022-11-17 17:07:56.102986	2022-11-17 17:07:56.10289	6fcdf90e-90a5-459d-bf30-51a13ed17b32	2397
2400	uri://ed-fi.org/StudentParticipationCodeDescriptor	Reporter	Reporter	Reporter	\N	\N	\N	2022-11-17 17:07:56.140949	2022-11-17 17:07:56.13933	6de22986-9928-44aa-ace2-c787ee6018f3	2400
2402	uri://ed-fi.org/StudentParticipationCodeDescriptor	Witness	Witness	Witness	\N	\N	\N	2022-11-17 17:07:56.153606	2022-11-17 17:07:56.153573	87f79363-ea09-448a-914b-045fc00e24c8	2402
2403	uri://ed-fi.org/SubmissionStatusDescriptor	Graded	Graded	Assignment has been graded by the teacher.	\N	\N	\N	2022-11-17 17:07:56.189745	2022-11-17 17:07:56.188073	b884e3c9-7477-4ba8-8df2-aa7853dbe75e	2403
2406	uri://ed-fi.org/SubmissionStatusDescriptor	Returned	Returned	Assignment is returned by the teacher or reclaimed by the student for revision. Assignment needs to be submitted again after revisions have been made.	\N	\N	\N	2022-11-17 17:07:56.202463	2022-11-17 17:07:56.20243	048a68a2-99db-4b2d-894b-f8cea9bc7840	2406
2407	uri://ed-fi.org/SubmissionStatusDescriptor	Submitted	Submitted	The assignment has been submitted by the student but has not been graded.	\N	\N	\N	2022-11-17 17:07:56.207852	2022-11-17 17:07:56.2078	04c2f6d0-f7ac-49de-a5fa-644762cf53b8	2407
2408	uri://ed-fi.org/SurveyCategoryDescriptor	Administrator	Administrator	Administrator	\N	\N	\N	2022-11-17 17:07:56.238069	2022-11-17 17:07:56.236759	e3d9da19-46ad-4905-a6b9-87adf533cce0	2408
2410	uri://ed-fi.org/SurveyCategoryDescriptor	Community	Community	Community	\N	\N	\N	2022-11-17 17:07:56.249396	2022-11-17 17:07:56.249372	0d8a86e6-b5ea-4396-92ff-1fc7de3460e8	2410
2412	uri://ed-fi.org/SurveyCategoryDescriptor	Exit	Exit	Exiting staff	\N	\N	\N	2022-11-17 17:07:56.257332	2022-11-17 17:07:56.257265	4238ad24-3f9a-4303-83dc-322c0315f44c	2412
2414	uri://ed-fi.org/SurveyCategoryDescriptor	Parent	Parent	Parent	\N	\N	\N	2022-11-17 17:07:56.268889	2022-11-17 17:07:56.268833	918a4a78-3753-4018-8115-677938195d58	2414
2417	uri://ed-fi.org/SurveyCategoryDescriptor	Teacher	Teacher	Teacher	\N	\N	\N	2022-11-17 17:07:56.279332	2022-11-17 17:07:56.279297	533b0ee2-b638-4bed-9a4f-5e1aeab22edc	2417
2418	uri://ed-fi.org/SurveyLevelDescriptor	Infant/toddler	Infant/toddler	Infant/toddler	\N	\N	\N	2022-11-17 17:07:56.316319	2022-11-17 17:07:56.314692	56d0f0f2-463b-4fdd-bea6-a3b13787ed7a	2418
2420	uri://ed-fi.org/SurveyLevelDescriptor	Preschool/Prekindergarten	Preschool/Prekindergarten	Preschool/Prekindergarten	\N	\N	\N	2022-11-17 17:07:56.346051	2022-11-17 17:07:56.345937	acbb4b3d-9b8c-4ba5-9874-db16d22754de	2420
2388	uri://ed-fi.org/StudentIdentificationSystemDescriptor	District	District	The student identification system for the student at the district level, generally managed by the district student information system, and the one that assigns the principal IDs used to join student data for district operations.	\N	\N	\N	2022-11-17 17:07:56.04612	2022-11-17 17:07:56.044775	811092b3-7465-498f-9bb2-263d3fba4b88	2388
2389	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Family	Family	Family	\N	\N	\N	2022-11-17 17:07:56.05581	2022-11-17 17:07:56.055778	f006a172-129f-480e-96cb-34b72f8dc53b	2389
2391	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Local	DEPRECATED: Local	DEPRECATED: Local	\N	\N	\N	2022-11-17 17:07:56.063391	2022-11-17 17:07:56.063363	7bde8dc5-d127-4fa8-95b4-5eea0dbb4226	2391
2393	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:56.071553	2022-11-17 17:07:56.07152	574138c9-40b2-4987-80af-2df640328089	2393
2396	uri://ed-fi.org/StudentIdentificationSystemDescriptor	State	State	The state identification system for students that assigns a state ID to each student.	\N	\N	\N	2022-11-17 17:07:56.09864	2022-11-17 17:07:56.098607	f908c28f-129f-4f92-a2b8-7376a9e3c795	2396
2398	uri://ed-fi.org/StudentIdentificationSystemDescriptor	Student Number	Student Number	A category of IDs often provided to enable students and others to remember and use in daily operations. If none exists, the Student Number system is generally equivalent to the District system.	\N	\N	\N	2022-11-17 17:07:56.106436	2022-11-17 17:07:56.106404	01b93f0c-c83b-4655-9a20-66636bce2be1	2398
2399	uri://ed-fi.org/StudentParticipationCodeDescriptor	Perpetrator	Perpetrator	Perpetrator	\N	\N	\N	2022-11-17 17:07:56.140948	2022-11-17 17:07:56.139327	ba8a4fd7-bfb2-47e3-96de-bbd6df7b7bcf	2399
2401	uri://ed-fi.org/StudentParticipationCodeDescriptor	Victim	Victim	Victim	\N	\N	\N	2022-11-17 17:07:56.151228	2022-11-17 17:07:56.151185	c641b2e0-3c12-469f-a9c5-512bd8462d12	2401
2404	uri://ed-fi.org/SubmissionStatusDescriptor	Exempt	Exempt	The student is exempted from the assignment and the assignment's score will not affect the student's grade calculations.	\N	\N	\N	2022-11-17 17:07:56.189745	2022-11-17 17:07:56.18807	fcf467e6-009c-4dce-8480-82d2667baad3	2404
2405	uri://ed-fi.org/SubmissionStatusDescriptor	Not Submitted	Not Submitted	The assignment has not been submitted by the student/received by the teacher.	\N	\N	\N	2022-11-17 17:07:56.200006	2022-11-17 17:07:56.199964	13af9a5c-2980-4bdd-835e-ca49282783d4	2405
2409	uri://ed-fi.org/SurveyCategoryDescriptor	Applicant	Applicant	Applicant	\N	\N	\N	2022-11-17 17:07:56.23835	2022-11-17 17:07:56.236762	ebd1d2b6-5ddf-43d5-a0f4-de8d805e3cb3	2409
2411	uri://ed-fi.org/SurveyCategoryDescriptor	District	District	District	\N	\N	\N	2022-11-17 17:07:56.251455	2022-11-17 17:07:56.251422	b5671839-4c0f-4b96-8fca-2b49b69c0269	2411
2413	uri://ed-fi.org/SurveyCategoryDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:56.260073	2022-11-17 17:07:56.260038	6fd2bd5b-b20f-4aae-8a2f-dccce9fb0482	2413
2415	uri://ed-fi.org/SurveyCategoryDescriptor	Principal	Principal	Principal	\N	\N	\N	2022-11-17 17:07:56.2717	2022-11-17 17:07:56.271666	cb824f58-3480-4e8e-a02c-c03f7e2d931c	2415
2416	uri://ed-fi.org/SurveyCategoryDescriptor	Student	Student	Student	\N	\N	\N	2022-11-17 17:07:56.276578	2022-11-17 17:07:56.276289	ee966d90-4a9e-4408-9cf2-faba9e7922cb	2416
2419	uri://ed-fi.org/SurveyLevelDescriptor	Early Education	Early Education	Early Education	\N	\N	\N	2022-11-17 17:07:56.316314	2022-11-17 17:07:56.314696	716e204b-93e8-4f9e-b1b1-15a2623ad585	2419
2421	uri://ed-fi.org/SurveyLevelDescriptor	Kindergarten	Kindergarten	Kindergarten	\N	\N	\N	2022-11-17 17:07:56.34767	2022-11-17 17:07:56.347655	8dcedbe7-c14b-4a96-839c-3c5cea1a58d0	2421
2423	uri://ed-fi.org/SurveyLevelDescriptor	Second grade	Second grade	Second grade	\N	\N	\N	2022-11-17 17:07:56.367946	2022-11-17 17:07:56.367889	ff21b36c-0f14-41b8-a2ad-3326eb1402bc	2423
2426	uri://ed-fi.org/SurveyLevelDescriptor	Fifth grade	Fifth grade	Fifth grade	\N	\N	\N	2022-11-17 17:07:56.399578	2022-11-17 17:07:56.399544	ff7e356b-8c31-43ae-8bd7-4407062467d0	2426
2427	uri://ed-fi.org/SurveyLevelDescriptor	Sixth grade	Sixth grade	Sixth grade	\N	\N	\N	2022-11-17 17:07:56.404489	2022-11-17 17:07:56.404453	999ac3c9-f129-4e79-8a5d-ffd78dfce2cc	2427
2430	uri://ed-fi.org/SurveyLevelDescriptor	Ninth grade	Ninth grade	Ninth grade	\N	\N	\N	2022-11-17 17:07:56.415754	2022-11-17 17:07:56.415719	077ab14b-8294-45be-9b37-08cbafa372f3	2430
2431	uri://ed-fi.org/SurveyLevelDescriptor	Tenth grade	Tenth grade	Tenth grade	\N	\N	\N	2022-11-17 17:07:56.420466	2022-11-17 17:07:56.420366	a26f1354-bac0-4b50-8bc4-b2e711282df9	2431
2434	uri://ed-fi.org/SurveyLevelDescriptor	Grade 13	Grade 13	Grade 13	\N	\N	\N	2022-11-17 17:07:56.431651	2022-11-17 17:07:56.431616	63b744c7-d466-42b7-9147-ad44405bea5f	2434
2436	uri://ed-fi.org/SurveyLevelDescriptor	Undergraduate	Undergraduate	Undergraduate	\N	\N	\N	2022-11-17 17:07:56.439237	2022-11-17 17:07:56.439205	fb005140-078b-40a6-a723-c5e83efa0292	2436
2438	uri://ed-fi.org/SurveyLevelDescriptor	Professional Certification	Professional Certification	Professional Certification	\N	\N	\N	2022-11-17 17:07:56.447093	2022-11-17 17:07:56.447058	82b1319d-a349-4d94-9a96-389bece00587	2438
2440	uri://ed-fi.org/SurveyLevelDescriptor	No grade level	No grade level	No grade level	\N	\N	\N	2022-11-17 17:07:56.457511	2022-11-17 17:07:56.457477	7c975b08-8e87-4a0f-949e-63232e1d9fe6	2440
2442	uri://ed-fi.org/SurveyLevelDescriptor	Ungraded	Ungraded	Ungraded	\N	\N	\N	2022-11-17 17:07:56.466182	2022-11-17 17:07:56.466147	513cd18b-2014-42f0-ab09-4505090ebd6b	2442
2443	uri://ed-fi.org/TeachingCredentialBasisDescriptor	5-year bachelor's degree	5-year bachelor's degree	5-year bachelor's degree	\N	\N	\N	2022-11-17 17:07:56.49987	2022-11-17 17:07:56.498254	2aa75637-da02-4d9b-8838-5d36ad15d495	2443
2445	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Reciprocation with another state	Credentials based on reciprocation with another state	Credentials based on reciprocation with another state	\N	\N	\N	2022-11-17 17:07:56.509765	2022-11-17 17:07:56.509707	3dfee583-b95e-47c2-a20e-eeb6ed931b76	2445
2447	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Master's degree	Master's degree	Master's degree	\N	\N	\N	2022-11-17 17:07:56.517828	2022-11-17 17:07:56.517762	94aec07f-0b1f-4ed7-a518-144a1e81cb04	2447
2450	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Special/alternative program completion	Special/alternative program completion	Special/alternative program completion	\N	\N	\N	2022-11-17 17:07:56.540027	2022-11-17 17:07:56.539993	c26f1773-905b-4deb-85c6-419fe8f1e807	2450
2451	uri://ed-fi.org/TeachingCredentialDescriptor	Intern	Intern	Intern	\N	\N	\N	2022-11-17 17:07:56.576318	2022-11-17 17:07:56.574715	38271f85-1b6d-4156-a53c-5538b60b273e	2451
2454	uri://ed-fi.org/TeachingCredentialDescriptor	Nonrenewable	Nonrenewable	Nonrenewable	\N	\N	\N	2022-11-17 17:07:56.58797	2022-11-17 17:07:56.587836	ce95ea6c-7d35-4c65-9fb6-3d6d034fb0cd	2454
2455	uri://ed-fi.org/TeachingCredentialDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:56.603392	2022-11-17 17:07:56.603294	10a4e69b-236e-415a-9787-150a938658cc	2455
2457	uri://ed-fi.org/TeachingCredentialDescriptor	Probationary/Initial	Probationary/Initial	Probationary/Initial	\N	\N	\N	2022-11-17 17:07:56.611024	2022-11-17 17:07:56.610988	c981f0b2-ab65-4b92-b22f-c8977359fe5d	2457
2459	uri://ed-fi.org/TeachingCredentialDescriptor	Provisional	Provisional	Provisional	\N	\N	\N	2022-11-17 17:07:56.618399	2022-11-17 17:07:56.618367	24b21778-bbd7-4869-9e72-af27d63df3c7	2459
2461	uri://ed-fi.org/TeachingCredentialDescriptor	Retired	Retired	Retired	\N	\N	\N	2022-11-17 17:07:56.625858	2022-11-17 17:07:56.625825	e1d59d41-7c76-48ea-b48e-df1073ba8964	2461
2463	uri://ed-fi.org/TeachingCredentialDescriptor	Substitute	Substitute	Substitute	\N	\N	\N	2022-11-17 17:07:56.634453	2022-11-17 17:07:56.634418	111f95ec-a9e8-419a-8e6e-054b6202019d	2463
2465	uri://ed-fi.org/TeachingCredentialDescriptor	Temporary	Temporary	Temporary	\N	\N	\N	2022-11-17 17:07:56.642201	2022-11-17 17:07:56.642169	5872c582-d518-459b-af60-eaabc303c042	2465
2466	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Not Passed	Not Passed	Not Passed	\N	\N	\N	2022-11-17 17:07:56.673449	2022-11-17 17:07:56.671829	a7289eb4-b93e-4a8f-8656-398df0d335bc	2466
2470	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 1	Emergency 1	Emergency 1	\N	\N	\N	2022-11-17 17:07:56.712783	2022-11-17 17:07:56.711186	d3a89522-d541-4202-af8f-240e0ed27f2c	2470
2471	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Fax	Fax	Fax	\N	\N	\N	2022-11-17 17:07:56.72303	2022-11-17 17:07:56.722951	810145cc-84cf-43fb-b250-2a8b005f0a90	2471
2473	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Mobile	Mobile	Mobile	\N	\N	\N	2022-11-17 17:07:56.730961	2022-11-17 17:07:56.730925	3b17eb14-ba0c-4edd-9b1f-6fd1dcddb44b	2473
2475	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Unlisted	Unlisted	Unlisted	\N	\N	\N	2022-11-17 17:07:56.738612	2022-11-17 17:07:56.738579	1f450772-7108-4507-ae85-dbb71d69c319	2475
2476	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Work	Work	Work	\N	\N	\N	2022-11-17 17:07:56.743537	2022-11-17 17:07:56.743418	e7873b9d-e5f0-44e6-be4e-0c5d7e815981	2476
2422	uri://ed-fi.org/SurveyLevelDescriptor	First grade	First grade	First grade	\N	\N	\N	2022-11-17 17:07:56.353843	2022-11-17 17:07:56.353809	59d67dfc-970c-4d26-a10e-0a911b14bbcc	2422
2424	uri://ed-fi.org/SurveyLevelDescriptor	Third grade	Third grade	Third grade	\N	\N	\N	2022-11-17 17:07:56.3707	2022-11-17 17:07:56.370664	d25cba4b-2b52-4046-a0e9-7de04fd9854f	2424
2425	uri://ed-fi.org/SurveyLevelDescriptor	Fourth grade	Fourth grade	Fourth grade	\N	\N	\N	2022-11-17 17:07:56.396709	2022-11-17 17:07:56.396549	66400c54-5835-45db-8fa0-3554cf800c08	2425
2428	uri://ed-fi.org/SurveyLevelDescriptor	Seventh grade	Seventh grade	Seventh grade	\N	\N	\N	2022-11-17 17:07:56.407792	2022-11-17 17:07:56.40776	63eb43ba-a76e-4b18-9246-32db01aaaa9b	2428
2429	uri://ed-fi.org/SurveyLevelDescriptor	Eighth grade	Eighth grade	Eighth grade	\N	\N	\N	2022-11-17 17:07:56.412498	2022-11-17 17:07:56.412446	a836d91d-344f-44b2-af3b-ace05c64429e	2429
2432	uri://ed-fi.org/SurveyLevelDescriptor	Eleventh grade	Eleventh grade	Eleventh grade	\N	\N	\N	2022-11-17 17:07:56.423598	2022-11-17 17:07:56.423566	b8d403b6-4ffd-4d43-bdbf-5b2f21f75e34	2432
2433	uri://ed-fi.org/SurveyLevelDescriptor	Twelfth grade	Twelfth grade	Twelfth grade	\N	\N	\N	2022-11-17 17:07:56.428527	2022-11-17 17:07:56.42849	02178ab9-d99f-4db2-813d-4cae6ac5f806	2433
2435	uri://ed-fi.org/SurveyLevelDescriptor	Postsecondary	Postsecondary	Postsecondary	\N	\N	\N	2022-11-17 17:07:56.435999	2022-11-17 17:07:56.435963	de8cef1a-f81c-4453-a4d3-68bd4e3b097a	2435
2437	uri://ed-fi.org/SurveyLevelDescriptor	Master's	Master's	Master's	\N	\N	\N	2022-11-17 17:07:56.443505	2022-11-17 17:07:56.443467	e5bc58fb-7591-41a6-8bfd-1e095f3fbb30	2437
2439	uri://ed-fi.org/SurveyLevelDescriptor	Adult Education	Adult Education	Adult Education	\N	\N	\N	2022-11-17 17:07:56.455111	2022-11-17 17:07:56.455069	af3fae18-b2be-4387-aeff-68ed7c22bb4f	2439
2441	uri://ed-fi.org/SurveyLevelDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:56.463517	2022-11-17 17:07:56.46346	828e5981-6c7b-440a-962c-67926586e2c0	2441
2444	uri://ed-fi.org/TeachingCredentialBasisDescriptor	4-year bachelor's degree	4-year bachelor's degree	4-year bachelor's degree	\N	\N	\N	2022-11-17 17:07:56.499866	2022-11-17 17:07:56.498256	a5aae94b-b1d5-44d4-8c84-40407c261fe0	2444
2446	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Doctoral degree	Doctoral degree	Doctoral degree	\N	\N	\N	2022-11-17 17:07:56.512704	2022-11-17 17:07:56.512671	167de9d5-3d34-4811-b6ba-6b1b13573687	2446
2448	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Met state testing requirement	Met state testing requirement	Met state testing requirement	\N	\N	\N	2022-11-17 17:07:56.520323	2022-11-17 17:07:56.520291	305ba69d-36c7-4895-a5d9-3a5267adba9c	2448
2449	uri://ed-fi.org/TeachingCredentialBasisDescriptor	Relevant experience	Relevant experience	Relevant experience	\N	\N	\N	2022-11-17 17:07:56.537498	2022-11-17 17:07:56.537066	85d54ecb-dc5b-4f46-979e-c66a5fb91d29	2449
2452	uri://ed-fi.org/TeachingCredentialDescriptor	Emergency	Emergency	Emergency	\N	\N	\N	2022-11-17 17:07:56.576316	2022-11-17 17:07:56.574718	f94af5c7-800d-40cc-b1ea-1f01a22545e5	2452
2453	uri://ed-fi.org/TeachingCredentialDescriptor	Master	Master	Master	\N	\N	\N	2022-11-17 17:07:56.58788	2022-11-17 17:07:56.58708	3aa2181a-9e82-43f0-af7b-b7883fae5288	2453
2456	uri://ed-fi.org/TeachingCredentialDescriptor	Paraprofessional	Paraprofessional	Paraprofessional	\N	\N	\N	2022-11-17 17:07:56.607287	2022-11-17 17:07:56.607254	4644d8c9-7286-4f05-b3e3-dda146afbe57	2456
2458	uri://ed-fi.org/TeachingCredentialDescriptor	Professional	Professional	Professional	\N	\N	\N	2022-11-17 17:07:56.614724	2022-11-17 17:07:56.614692	49508dc1-5a1e-4cf4-bd06-ba994345f957	2458
2460	uri://ed-fi.org/TeachingCredentialDescriptor	Regular/Standard	Regular/Standard	Regular/Standard	\N	\N	\N	2022-11-17 17:07:56.622291	2022-11-17 17:07:56.622256	b5717a51-8866-4952-b5ce-42f484945a64	2460
2462	uri://ed-fi.org/TeachingCredentialDescriptor	Specialist	Specialist	Specialist	\N	\N	\N	2022-11-17 17:07:56.630047	2022-11-17 17:07:56.630015	f2b7b858-edc0-4a56-ad43-fd126a1b3de6	2462
2464	uri://ed-fi.org/TeachingCredentialDescriptor	Teacher Assistant	Teacher Assistant	Teacher Assistant	\N	\N	\N	2022-11-17 17:07:56.637701	2022-11-17 17:07:56.637668	1e27b3bc-5ff4-4f19-a841-1a995018b736	2464
2467	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Passed	Passed	Passed	\N	\N	\N	2022-11-17 17:07:56.67345	2022-11-17 17:07:56.671833	0a73ad4f-bedd-47a7-aee6-6f6bb8d0743d	2467
2468	uri://ed-fi.org/TechnicalSkillsAssessmentDescriptor	Did Not Take	Did Not Take	Did Not Take	\N	\N	\N	2022-11-17 17:07:56.685561	2022-11-17 17:07:56.684873	7d25de7d-1cc0-4f24-a773-17390ca08009	2468
2469	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Emergency 2	Emergency 2	Emergency 2	\N	\N	\N	2022-11-17 17:07:56.712785	2022-11-17 17:07:56.711183	d7d2bc5c-83aa-4c94-a07f-0ec484ab0ecc	2469
2472	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Home	Home	Home	\N	\N	\N	2022-11-17 17:07:56.725462	2022-11-17 17:07:56.725427	8da97fa0-49d1-4719-8ce2-e4770268beac	2472
2474	uri://ed-fi.org/TelephoneNumberTypeDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:56.735742	2022-11-17 17:07:56.735638	bd08b77c-a664-44d8-90ba-8b0566a64b7e	2474
2478	uri://ed-fi.org/TermDescriptor	Fall Semester	Fall Semester	Fall Semester	\N	\N	\N	2022-11-17 17:07:56.774522	2022-11-17 17:07:56.773181	357a5af3-c0f3-463c-be9a-f5162c52e5dd	2478
2480	uri://ed-fi.org/TermDescriptor	Summer Semester	Summer Semester	Summer Semester	\N	\N	\N	2022-11-17 17:07:56.7873	2022-11-17 17:07:56.787272	4de01865-58d0-4009-8278-e9c62c10425a	2480
2481	uri://ed-fi.org/TermDescriptor	Quarter	Quarter	Quarter	\N	\N	\N	2022-11-17 17:07:56.800805	2022-11-17 17:07:56.800494	a2e96663-d617-47cc-8730-84a392f3615b	2481
2483	uri://ed-fi.org/TermDescriptor	Second Quarter	Second Quarter	Second Quarter	\N	\N	\N	2022-11-17 17:07:56.808766	2022-11-17 17:07:56.808731	a2dc2582-9a7e-4446-81f1-9a8c0efae087	2483
2484	uri://ed-fi.org/TermDescriptor	Third Quarter	Third Quarter	Third Quarter	\N	\N	\N	2022-11-17 17:07:56.818373	2022-11-17 17:07:56.818325	14aa6f08-bfa6-4740-a015-b2f232c7b60b	2484
2487	uri://ed-fi.org/TermDescriptor	First Trimester	First Trimester	First Trimester	\N	\N	\N	2022-11-17 17:07:56.828964	2022-11-17 17:07:56.828929	98034f7e-7a4e-495f-b9d9-b3d5eff0a994	2487
2488	uri://ed-fi.org/TermDescriptor	Second Trimester	Second Trimester	Second Trimester	\N	\N	\N	2022-11-17 17:07:56.834317	2022-11-17 17:07:56.834095	34b2c19d-5efb-4f80-8308-7ba9ec8654b4	2488
2490	uri://ed-fi.org/TermDescriptor	MiniTerm	MiniTerm	MiniTerm	\N	\N	\N	2022-11-17 17:07:56.842831	2022-11-17 17:07:56.842774	03c3efee-a194-4980-95c1-472c45d4c37f	2490
2492	uri://ed-fi.org/TermDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:07:56.850875	2022-11-17 17:07:56.850839	722b5907-c8f1-4fe2-a56e-f0546009d4a6	2492
2493	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Private school students participating	Private school students participating	Private school students participating	\N	\N	\N	2022-11-17 17:07:56.892201	2022-11-17 17:07:56.890514	7568ce01-7741-4454-8ff1-5c5e71b309b5	2493
2495	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Schoolwide Program	Public Schoolwide Program	Public Schoolwide Program	\N	\N	\N	2022-11-17 17:07:56.902643	2022-11-17 17:07:56.902619	69bc7135-d3e2-4615-8e5d-1f301c8e1fee	2495
2497	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Was not served	Was not served	Was not served	\N	\N	\N	2022-11-17 17:07:56.919933	2022-11-17 17:07:56.919881	d7e4d319-872e-46f8-a66f-cbd7e589b493	2497
2499	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Reading/Language Instructional Services	Reading/Language Instructional Services	Reading/Language Instructional Services	\N	\N	\N	2022-11-17 17:07:56.950562	2022-11-17 17:07:56.948958	9feffbe4-7997-4126-b86b-9fd41b5eaa3a	2499
2501	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Social Studies Instructional Services	Social Studies Instructional Services	Social Studies Instructional Services	\N	\N	\N	2022-11-17 17:07:56.963316	2022-11-17 17:07:56.963281	846dddb4-a92d-452c-add7-c4e9d4d7ea5a	2501
2503	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Instructional Services	Other Instructional Services	Other Instructional Services	\N	\N	\N	2022-11-17 17:07:56.971458	2022-11-17 17:07:56.97142	d9c46b10-a257-441d-85fe-37d50bb13e8c	2503
2505	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	Supporting Guidance/Advocacy Support Services	\N	\N	\N	2022-11-17 17:07:56.979175	2022-11-17 17:07:56.979138	dff48d22-9d60-4957-b487-ac6f6d079e71	2505
2508	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	Title I Schoolwide Eligible School-No Program	\N	\N	\N	2022-11-17 17:07:57.015223	2022-11-17 17:07:57.013621	e8c36af0-f5d4-498d-a436-0715d37934ee	2508
2510	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide School	Title I Schoolwide School	Title I Schoolwide School	\N	\N	\N	2022-11-17 17:07:57.027547	2022-11-17 17:07:57.027515	1e824c7a-c28d-42ca-971d-8e3263970e4c	2510
3143	uri://ed-fi.org/WeaponDescriptor	Knife	Knife	Knife	\N	\N	\N	2022-11-17 17:08:00.675466	2022-11-17 17:08:00.675401	d38709b5-7fe8-4ab3-a97a-be5be7466685	3143
2477	uri://ed-fi.org/TermDescriptor	Semester	Semester	Semester	\N	\N	\N	2022-11-17 17:07:56.774501	2022-11-17 17:07:56.773176	e47469fa-49b2-478e-9fc8-de6401eac593	2477
2479	uri://ed-fi.org/TermDescriptor	Spring Semester	Spring Semester	Spring Semester	\N	\N	\N	2022-11-17 17:07:56.784772	2022-11-17 17:07:56.784728	12db70f6-fe22-4492-8649-ba51d6e166c7	2479
2482	uri://ed-fi.org/TermDescriptor	First Quarter	First Quarter	First Quarter	\N	\N	\N	2022-11-17 17:07:56.803534	2022-11-17 17:07:56.803498	99ee2ec9-49e0-4a18-bfa8-07f55ceeff91	2482
2485	uri://ed-fi.org/TermDescriptor	Fourth Quarter	Fourth Quarter	Fourth Quarter	\N	\N	\N	2022-11-17 17:07:56.82138	2022-11-17 17:07:56.821346	85737ab6-8b92-4bc0-bd5f-d6f1f50cc4ff	2485
2486	uri://ed-fi.org/TermDescriptor	Trimester	Trimester	Trimester	\N	\N	\N	2022-11-17 17:07:56.826302	2022-11-17 17:07:56.825973	900435ca-2492-4544-8e63-5793da77ec59	2486
2489	uri://ed-fi.org/TermDescriptor	Third Trimester	Third Trimester	Third Trimester	\N	\N	\N	2022-11-17 17:07:56.836503	2022-11-17 17:07:56.836486	700a26c2-89cd-45e6-a86c-18b7b9402224	2489
2491	uri://ed-fi.org/TermDescriptor	Year Round	Year Round	Year Round	\N	\N	\N	2022-11-17 17:07:56.845705	2022-11-17 17:07:56.845672	050e01b7-8333-4c54-92c2-65cdddad39c5	2491
2494	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Local Neglected Program	DEPRECATED: Local Neglected Program	DEPRECATED: Local Neglected Program	\N	\N	\N	2022-11-17 17:07:56.892204	2022-11-17 17:07:56.890516	7d8a1398-bbb3-4085-a03d-6431ee075e10	2494
2496	uri://ed-fi.org/TitleIPartAParticipantDescriptor	Public Targeted Assistance Program	Public Targeted Assistance Program	Public Targeted Assistance Program	\N	\N	\N	2022-11-17 17:07:56.905373	2022-11-17 17:07:56.905339	644ffaf1-127e-4f14-8ea8-b6b4d0d16723	2496
2498	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Mathematics Instructional Services	Mathematics Instructional Services	Mathematics Instructional Services	\N	\N	\N	2022-11-17 17:07:56.950562	2022-11-17 17:07:56.948954	d3e5cadd-36c4-46c7-8da4-09f65c442999	2498
2500	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Science Instructional Services	Science Instructional Services	Science Instructional Services	\N	\N	\N	2022-11-17 17:07:56.960682	2022-11-17 17:07:56.960658	2a0e4630-f910-43b6-a94d-cc4bdc3bc13d	2500
2502	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	CTE Instructional Services	Career and Technical Education Instructional Services	Career and Technical Education Instructional Services	\N	\N	\N	2022-11-17 17:07:56.968082	2022-11-17 17:07:56.968027	30ab8bff-9a15-4047-95d6-41c268b98c24	2502
2504	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	Health, Dental, and Eye Care Support Services	\N	\N	\N	2022-11-17 17:07:56.975624	2022-11-17 17:07:56.975565	a6229035-4027-4ff1-aed7-24b06697368a	2504
2506	uri://ed-fi.org/TitleIPartAProgramServiceDescriptor	Other Support Services	Other Support Services	Other Support Services	\N	\N	\N	2022-11-17 17:07:56.983765	2022-11-17 17:07:56.98367	a52a3357-9867-426f-ad22-a9df7f34a158	2506
2507	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Not A Title I School	Not A Title I School	Not A Title I School	\N	\N	\N	2022-11-17 17:07:57.015229	2022-11-17 17:07:57.013626	ac984228-a750-43b3-b0fe-a020eff7f4af	2507
2509	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	Title I Schoolwide Eligible-Target Assist Program	\N	\N	\N	2022-11-17 17:07:57.025097	2022-11-17 17:07:57.025056	99fee932-8c46-40e6-8da0-d9f8a36c3c25	2509
2512	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance School	Title I Targeted Assistance School	Title I Targeted Assistance School	\N	\N	\N	2022-11-17 17:07:57.036473	2022-11-17 17:07:57.036442	540d2028-a098-4e96-961c-17eedd850400	2512
2514	uri://ed-fi.org/TribalAffiliationDescriptor	Absentee-Shawnee	Absentee-Shawnee	Absentee-Shawnee Tribe of Indians of Oklahoma	\N	\N	\N	2022-11-17 17:07:57.072154	2022-11-17 17:07:57.070545	5a8ea41f-3aa0-41a1-ab30-e1f5782c8d6c	2514
2516	uri://ed-fi.org/TribalAffiliationDescriptor	Agdaagux	Agdaagux	Agdaagux Tribe of King Cove	\N	\N	\N	2022-11-17 17:07:57.085008	2022-11-17 17:07:57.084985	2a6c7390-512b-410a-8942-aed34fd0013a	2516
2518	uri://ed-fi.org/TribalAffiliationDescriptor	Ak Chin	Ak Chin	Ak-Chin Indian Community	\N	\N	\N	2022-11-17 17:07:57.093123	2022-11-17 17:07:57.093092	d99d3838-aada-423b-9058-fccaf653ad08	2518
2520	uri://ed-fi.org/TribalAffiliationDescriptor	Akiachak	Akiachak	Akiachak Native Community	\N	\N	\N	2022-11-17 17:07:57.101172	2022-11-17 17:07:57.101138	4887068d-bf11-4c40-a823-76664b863a32	2520
2522	uri://ed-fi.org/TribalAffiliationDescriptor	Akutan	Akutan	Native Village of Akutan	\N	\N	\N	2022-11-17 17:07:57.109273	2022-11-17 17:07:57.109239	9933b9c9-6e89-46f1-a9c0-3723277f83d6	2522
2524	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Quassarte	Alabama-Quassarte	Alabama-Quassarte Tribal Town	\N	\N	\N	2022-11-17 17:07:57.117152	2022-11-17 17:07:57.117118	6cfe9be7-e27c-44f6-9b66-3cece2144c97	2524
2526	uri://ed-fi.org/TribalAffiliationDescriptor	Alatna	Alatna	Alatna Village	\N	\N	\N	2022-11-17 17:07:57.141984	2022-11-17 17:07:57.14195	905b170f-dfee-4f5e-acbb-36fb931ab73a	2526
2528	uri://ed-fi.org/TribalAffiliationDescriptor	Algaaciq	Algaaciq	Algaaciq Native Village (St. Mary's)	\N	\N	\N	2022-11-17 17:07:57.158771	2022-11-17 17:07:57.158742	0e8388e3-789a-4d4f-bd5f-1976d21e36d0	2528
2529	uri://ed-fi.org/TribalAffiliationDescriptor	Allakaket	Allakaket	Allakaket Village	\N	\N	\N	2022-11-17 17:07:57.163337	2022-11-17 17:07:57.163299	b79683a6-401e-4f47-ac50-20e727faec2f	2529
2531	uri://ed-fi.org/TribalAffiliationDescriptor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	Alutiiq Tribe of Old Harbor	\N	\N	\N	2022-11-17 17:07:57.170685	2022-11-17 17:07:57.17065	0dae56a8-5cfd-4861-b8bc-c7ce4c5e9154	2531
2533	uri://ed-fi.org/TribalAffiliationDescriptor	Anaktuvuk Pass	Anaktuvuk Pass	Village of Anaktuvuk Pass	\N	\N	\N	2022-11-17 17:07:57.17848	2022-11-17 17:07:57.178384	e85739f9-9031-4a09-a6f8-b722455607aa	2533
2536	uri://ed-fi.org/TribalAffiliationDescriptor	Aniak	Aniak	Village of Aniak	\N	\N	\N	2022-11-17 17:07:57.198649	2022-11-17 17:07:57.198614	5580f7b4-aa2f-4485-84e5-7dd816f70df2	2536
2538	uri://ed-fi.org/TribalAffiliationDescriptor	Apache	Apache	Apache Tribe of Oklahoma	\N	\N	\N	2022-11-17 17:07:57.209171	2022-11-17 17:07:57.209134	c3c57421-3d9d-4b6e-a198-fc971715e4ad	2538
2539	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Village	Arctic Village	Arctic Village	\N	\N	\N	2022-11-17 17:07:57.227403	2022-11-17 17:07:57.227057	d2062f85-3041-4957-b108-c73e13732586	2539
2542	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Sioux	Assiniboine and Sioux	Assiniboine & Sioux Tribes of the Fort Peck Indian Reservation, Montana	\N	\N	\N	2022-11-17 17:07:57.238419	2022-11-17 17:07:57.238381	d7f37978-6c37-4f67-b87e-b323d1bc0d35	2542
2543	uri://ed-fi.org/TribalAffiliationDescriptor	Atka	Atka	Native Village of Atka	\N	\N	\N	2022-11-17 17:07:57.243769	2022-11-17 17:07:57.243722	47e4f52a-d229-49c0-a360-7f90cca2004f	2543
2545	uri://ed-fi.org/TribalAffiliationDescriptor	Augustine	Augustine	Augustine Band of Cahuilla Indians, California	\N	\N	\N	2022-11-17 17:07:57.252452	2022-11-17 17:07:57.252419	e34a294b-e270-4972-be18-ccac10d7f9a0	2545
2547	uri://ed-fi.org/TribalAffiliationDescriptor	Barrow	Barrow	Native Village of Barrow Inupiat Traditional Government	\N	\N	\N	2022-11-17 17:07:57.264112	2022-11-17 17:07:57.264072	28706ab1-cb2b-43fc-8af1-9dfb21f17d34	2547
2549	uri://ed-fi.org/TribalAffiliationDescriptor	Bear River	Bear River	Bear River Band of the Rohnerville Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.275028	2022-11-17 17:07:57.274749	8e537e32-71d8-463e-ac1e-06cf94005f1e	2549
2551	uri://ed-fi.org/TribalAffiliationDescriptor	Belkofski	Belkofski	Native Village of Belkofski	\N	\N	\N	2022-11-17 17:07:57.283487	2022-11-17 17:07:57.283438	6cea90ae-9bd1-4d54-bfdc-c79d48e42098	2551
2553	uri://ed-fi.org/TribalAffiliationDescriptor	Berry Creek	Berry Creek	Berry Creek Rancheria of Maidu Indians of California	\N	\N	\N	2022-11-17 17:07:57.293038	2022-11-17 17:07:57.293002	734cc1d1-68aa-49f1-a774-d77b6c8387ff	2553
2555	uri://ed-fi.org/TribalAffiliationDescriptor	Big Pine	Big Pine	Big Pine Paiute Tribe of the Owens Valley	\N	\N	\N	2022-11-17 17:07:57.300748	2022-11-17 17:07:57.300715	cbf23167-d990-445f-9242-545e79c5b4d2	2555
2557	uri://ed-fi.org/TribalAffiliationDescriptor	Big Valley Rancheria	Big Valley Rancheria	Big Valley Band of Pomo Indians of the Big Valley Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.308417	2022-11-17 17:07:57.308382	9c22ced3-a015-4546-913f-ceb2d55eac84	2557
2559	uri://ed-fi.org/TribalAffiliationDescriptor	Birch Creek	Birch Creek	Birch Creek Tribe	\N	\N	\N	2022-11-17 17:07:57.316193	2022-11-17 17:07:57.316157	da3fe89c-71c0-4aee-a30b-d285f290444c	2559
2561	uri://ed-fi.org/TribalAffiliationDescriptor	Blackfeet	Blackfeet	Blackfeet Tribe of the Blackfeet Indian Reservation of Montana	\N	\N	\N	2022-11-17 17:07:57.32331	2022-11-17 17:07:57.323275	e06ac8fe-2d88-4f63-a8a0-466d32463dea	2561
2511	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	Title I Targeted Assistance Eligible-No Program	\N	\N	\N	2022-11-17 17:07:57.033621	2022-11-17 17:07:57.033517	d996823a-dc4c-44b8-b236-5c73c0f08b29	2511
2513	uri://ed-fi.org/TitleIPartASchoolDesignationDescriptor	Missing	Missing	Missing	\N	\N	\N	2022-11-17 17:07:57.041739	2022-11-17 17:07:57.041676	225b4347-17b3-4ce2-8cb5-ef6158cea94a	2513
2515	uri://ed-fi.org/TribalAffiliationDescriptor	Afognak	Afognak	Native Village of Afognak	\N	\N	\N	2022-11-17 17:07:57.072158	2022-11-17 17:07:57.070548	b9c65d43-322c-47c0-9bc2-5bb655351e73	2515
2517	uri://ed-fi.org/TribalAffiliationDescriptor	Agua Caliente	Agua Caliente	Agua Caliente Band of Cahuilla Indians of the Agua Caliente Indian Reservation, California	\N	\N	\N	2022-11-17 17:07:57.087945	2022-11-17 17:07:57.087914	756def2c-ea74-4ec8-a1cf-79fdd990fcef	2517
2519	uri://ed-fi.org/TribalAffiliationDescriptor	Akhiok	Akhiok	Native Village of Akhiok	\N	\N	\N	2022-11-17 17:07:57.097846	2022-11-17 17:07:57.097791	09bf44d3-3c44-4ec8-968e-768dcdf014ec	2519
2521	uri://ed-fi.org/TribalAffiliationDescriptor	Akiak	Akiak	Akiak Native Community	\N	\N	\N	2022-11-17 17:07:57.105728	2022-11-17 17:07:57.105626	81ec8ad2-2cd1-4c52-abb4-b8028eebe6aa	2521
2523	uri://ed-fi.org/TribalAffiliationDescriptor	Alabama-Coushatta	Alabama-Coushatta	Alabama-Coushatta Tribe of Texas	\N	\N	\N	2022-11-17 17:07:57.113868	2022-11-17 17:07:57.113818	0725e5ba-28d3-48cf-a9b0-6c58666fcaea	2523
2525	uri://ed-fi.org/TribalAffiliationDescriptor	Alakanuk	Alakanuk	Village of Alakanuk	\N	\N	\N	2022-11-17 17:07:57.122622	2022-11-17 17:07:57.122588	131c69c8-b4a2-4d36-97a3-0f0466f8135f	2525
2527	uri://ed-fi.org/TribalAffiliationDescriptor	Aleknagik	Aleknagik	Native Village of Aleknagik	\N	\N	\N	2022-11-17 17:07:57.151703	2022-11-17 17:07:57.151668	333a0000-6430-49b0-be6c-17e5b30b1d5d	2527
2530	uri://ed-fi.org/TribalAffiliationDescriptor	Alturas	Alturas	Alturas Indian Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.166556	2022-11-17 17:07:57.166522	9fb2dc91-86b2-4d9a-bb98-4956c3682515	2530
2532	uri://ed-fi.org/TribalAffiliationDescriptor	Ambler	Ambler	Native Village of Ambler	\N	\N	\N	2022-11-17 17:07:57.174212	2022-11-17 17:07:57.17418	121a7f4a-d04b-4772-9813-966d5141a00a	2532
2534	uri://ed-fi.org/TribalAffiliationDescriptor	Andreafski	Andreafski	Yupiit of Andreafski	\N	\N	\N	2022-11-17 17:07:57.181984	2022-11-17 17:07:57.181951	6d928b1b-63f4-4a41-a9ff-ff9091ec6c41	2534
2535	uri://ed-fi.org/TribalAffiliationDescriptor	Angoon	Angoon	Angoon Community Association	\N	\N	\N	2022-11-17 17:07:57.195368	2022-11-17 17:07:57.195329	6a7f62d4-46ac-43c9-983c-8d4270b812ce	2535
2537	uri://ed-fi.org/TribalAffiliationDescriptor	Anvik	Anvik	Anvik Village	\N	\N	\N	2022-11-17 17:07:57.205689	2022-11-17 17:07:57.205674	d4ce2e6d-84b6-49d2-899a-c3d291605be5	2537
2540	uri://ed-fi.org/TribalAffiliationDescriptor	Asa'carsarmiut	Asa'carsarmiut	Asa'carsarmiut Tribe	\N	\N	\N	2022-11-17 17:07:57.230094	2022-11-17 17:07:57.230059	823da2c8-dee6-4128-9fb9-c56aacc4e66c	2540
2541	uri://ed-fi.org/TribalAffiliationDescriptor	Assiniboine and Gros Ventre Tribes	Assiniboine and Gros Ventre Tribes	Fort Belknap Indian Community of the Fort Belknap Reservation of Montana	\N	\N	\N	2022-11-17 17:07:57.235128	2022-11-17 17:07:57.235091	58982810-0194-4b69-beb5-79b29d2d500c	2541
2544	uri://ed-fi.org/TribalAffiliationDescriptor	Atmautluak	Atmautluak	Village of Atmautluak	\N	\N	\N	2022-11-17 17:07:57.247296	2022-11-17 17:07:57.247147	0d8c44dd-73cb-4270-9c02-95abc46a1986	2544
2546	uri://ed-fi.org/TribalAffiliationDescriptor	Bad River Band	Bad River Band	Bad River Band of the Lake Superior Tribe of Chippewa Indians of the Bad River Reservation, Wisconsin	\N	\N	\N	2022-11-17 17:07:57.26012	2022-11-17 17:07:57.260074	1a53caf5-bed2-49ea-835f-bd91315f4e89	2546
2548	uri://ed-fi.org/TribalAffiliationDescriptor	Bay Mills	Bay Mills	Bay Mills Indian Community, Michigan	\N	\N	\N	2022-11-17 17:07:57.269184	2022-11-17 17:07:57.269136	2984ff47-3642-4b43-b4a0-7c982b17bb2e	2548
2550	uri://ed-fi.org/TribalAffiliationDescriptor	Beaver	Beaver	Beaver Village	\N	\N	\N	2022-11-17 17:07:57.276983	2022-11-17 17:07:57.276949	0915da6f-c825-4a82-81d4-033d00a3fcd6	2550
2552	uri://ed-fi.org/TribalAffiliationDescriptor	Benton	Benton	Utu Utu Gwaitu Paiute Tribe of the Benton Paiute Reservation, California	\N	\N	\N	2022-11-17 17:07:57.288605	2022-11-17 17:07:57.288578	d73215ca-9450-492a-a7a6-6afdcb898a76	2552
2554	uri://ed-fi.org/TribalAffiliationDescriptor	Big Lagoon	Big Lagoon	Big Lagoon Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.297418	2022-11-17 17:07:57.297399	bfa022e6-d3e3-46cd-a8a3-14b7d246de7b	2554
2556	uri://ed-fi.org/TribalAffiliationDescriptor	Big Sandy	Big Sandy	Big Sandy Rancheria of Western Mono Indians of California	\N	\N	\N	2022-11-17 17:07:57.305165	2022-11-17 17:07:57.30513	0a17d004-b915-493e-90d7-5eed15cef028	2556
2558	uri://ed-fi.org/TribalAffiliationDescriptor	Bill Moore's Slough	Bill Moore's Slough	Village of Bill Moore's Slough	\N	\N	\N	2022-11-17 17:07:57.312797	2022-11-17 17:07:57.312744	7ad74f9c-be39-423b-8613-614d61f4a78e	2558
2560	uri://ed-fi.org/TribalAffiliationDescriptor	Bishop Paiute	Bishop Paiute	Bishop Paiute Tribe	\N	\N	\N	2022-11-17 17:07:57.319892	2022-11-17 17:07:57.319856	ac5a241f-3140-48ac-adf6-12c790cdfe39	2560
2562	uri://ed-fi.org/TribalAffiliationDescriptor	Blue Lake	Blue Lake	Blue Lake Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.327752	2022-11-17 17:07:57.327715	c94f7250-93e5-4dcc-ba22-70239f86e129	2562
2565	uri://ed-fi.org/TribalAffiliationDescriptor	Bridgeport Indian Colony	Bridgeport Indian Colony	Bridgeport Indian Colony	\N	\N	\N	2022-11-17 17:07:57.339203	2022-11-17 17:07:57.339168	6b18becd-d4a6-4a50-aa93-c5ab9fea2e3d	2565
2567	uri://ed-fi.org/TribalAffiliationDescriptor	Buena Vista Rancheria	Buena Vista Rancheria	Buena Vista Rancheria of Me-Wuk Indians of California	\N	\N	\N	2022-11-17 17:07:57.354585	2022-11-17 17:07:57.354551	f8b6eba9-097e-4b29-8ca6-90e4d1091be0	2567
2569	uri://ed-fi.org/TribalAffiliationDescriptor	Cabazon	Cabazon	Cabazon Band of Mission Indians, California	\N	\N	\N	2022-11-17 17:07:57.365461	2022-11-17 17:07:57.365422	0715ae1a-4b71-4dfc-b47a-98d61257b019	2569
2572	uri://ed-fi.org/TribalAffiliationDescriptor	Cahto	Cahto	Cahto Tribe of the Laytonville Rancheria	\N	\N	\N	2022-11-17 17:07:57.376762	2022-11-17 17:07:57.376729	cb6072c3-1f2b-44eb-b9f4-06ef09691460	2572
2573	uri://ed-fi.org/TribalAffiliationDescriptor	Cahuilla	Cahuilla	Cahuilla Band of Indians	\N	\N	\N	2022-11-17 17:07:57.382104	2022-11-17 17:07:57.38185	82fe5340-81c7-47d5-9b62-b97fb50ed138	2573
2576	uri://ed-fi.org/TribalAffiliationDescriptor	Cantwell	Cantwell	Native Village of Cantwell	\N	\N	\N	2022-11-17 17:07:57.392825	2022-11-17 17:07:57.39271	ced92da5-c507-459c-9680-9791343fbc39	2576
2577	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande	Capitan Grande	Capitan Grande Band of Diegueno Mission Indians of California (Barona Group of Capitan Grande Band of Mission Indians of the Barona Reservation, California)	\N	\N	\N	2022-11-17 17:07:57.399772	2022-11-17 17:07:57.399685	7ab40ac2-e5cc-4ff0-a724-8e454d7319ce	2577
2579	uri://ed-fi.org/TribalAffiliationDescriptor	Catawba	Catawba	Catawba Indian Nation (aka Catawba Indian Tribe of South Carolina)	\N	\N	\N	2022-11-17 17:07:57.407507	2022-11-17 17:07:57.407441	ac34aa26-bb9b-41c3-994c-063b15262831	2579
2581	uri://ed-fi.org/TribalAffiliationDescriptor	Cedarville	Cedarville	Cedarville Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.428075	2022-11-17 17:07:57.428007	c1ef7739-7744-4f90-8369-7cc9432e1927	2581
2583	uri://ed-fi.org/TribalAffiliationDescriptor	Cheesh-Na	Cheesh-Na	Cheesh-Na Tribe	\N	\N	\N	2022-11-17 17:07:57.438557	2022-11-17 17:07:57.43852	fa8d729a-8727-4a5f-9966-eb3e4e61e063	2583
2585	uri://ed-fi.org/TribalAffiliationDescriptor	Chehalis	Chehalis	Confederated Tribes of the Chehalis Reservation	\N	\N	\N	2022-11-17 17:07:57.449564	2022-11-17 17:07:57.449511	faef7f5e-1800-4c35-b497-2e1702c93c03	2585
2588	uri://ed-fi.org/TribalAffiliationDescriptor	Cher-Ae Heights	Cher-Ae Heights	Cher-Ae Heights Indian Community of the Trinidad Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.46196	2022-11-17 17:07:57.461908	ea17bca1-6ee9-4b7c-9b74-2e28bf3f5789	2588
2589	uri://ed-fi.org/TribalAffiliationDescriptor	Cherokee	Cherokee	Cherokee Nation	\N	\N	\N	2022-11-17 17:07:57.467134	2022-11-17 17:07:57.466795	dc3d5be4-b07c-410b-8fc8-0ca358c7341e	2589
2592	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River Sioux Tribe	Cheyenne River Sioux Tribe	Cheyenne River Sioux Tribe of the Cheyenne River Reservation, South Dakota	\N	\N	\N	2022-11-17 17:07:57.484708	2022-11-17 17:07:57.483885	bedeb290-293a-4eac-9b88-170ab4a06444	2592
2594	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indians-Eastern Division	Chickahominy Indians-Eastern Division	Chickahominy Indian Tribe - Eastern Division	\N	\N	\N	2022-11-17 17:07:57.49354	2022-11-17 17:07:57.493109	6959faf5-c5a3-4b08-9666-d759a8c5747b	2594
2563	uri://ed-fi.org/TribalAffiliationDescriptor	Bois Forte	Bois Forte	Minnesota Chippewa Tribe - Bois Forte Band (Nett Lake)	\N	\N	\N	2022-11-17 17:07:57.331041	2022-11-17 17:07:57.331007	485b41a6-54dc-4612-82bf-daf764b817a6	2563
2564	uri://ed-fi.org/TribalAffiliationDescriptor	Brevig Mission	Brevig Mission	Native Village of Brevig Mission	\N	\N	\N	2022-11-17 17:07:57.336017	2022-11-17 17:07:57.335969	05b17ccf-b528-4f3d-ae64-7513797d1d73	2564
2566	uri://ed-fi.org/TribalAffiliationDescriptor	Buckland	Buckland	Native Village of Buckland	\N	\N	\N	2022-11-17 17:07:57.350239	2022-11-17 17:07:57.350203	eb1cac75-5478-4e33-b03c-8353b93e9224	2566
2568	uri://ed-fi.org/TribalAffiliationDescriptor	Burns Paiute	Burns Paiute	Burns Paiute Tribe	\N	\N	\N	2022-11-17 17:07:57.358637	2022-11-17 17:07:57.358603	8dbcd86b-b1fc-4542-985a-8fad05da1b6f	2568
2570	uri://ed-fi.org/TribalAffiliationDescriptor	Cachil DeHe	Cachil DeHe	Cachil DeHe Band of Wintun Indians of the Colusa Indian Community of the Colusa Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.367708	2022-11-17 17:07:57.367674	dffc25de-b938-44c9-bdd5-509f45d70726	2570
2571	uri://ed-fi.org/TribalAffiliationDescriptor	Caddo	Caddo	Caddo Nation of Oklahoma	\N	\N	\N	2022-11-17 17:07:57.373991	2022-11-17 17:07:57.373799	d321f003-f664-4500-98df-d1c0a9dc8183	2571
2574	uri://ed-fi.org/TribalAffiliationDescriptor	California Valley	California Valley	California Valley Miwok Tribe, California	\N	\N	\N	2022-11-17 17:07:57.38479	2022-11-17 17:07:57.384755	f63db179-eee2-43ba-a2bf-20ebc53be77e	2574
2575	uri://ed-fi.org/TribalAffiliationDescriptor	Campo	Campo	Campo Band of Diegueno Mission Indians of the Campo Indian Reservation, California	\N	\N	\N	2022-11-17 17:07:57.389625	2022-11-17 17:07:57.389578	02dd7d27-0c83-4925-ac09-537c2463ef5c	2575
2578	uri://ed-fi.org/TribalAffiliationDescriptor	Capitan Grande Band	Capitan Grande Band	Capitan Grande Band of Diegueno Mission Indians of California	\N	\N	\N	2022-11-17 17:07:57.402936	2022-11-17 17:07:57.4029	08176138-b30e-4aff-aea1-67904f328c00	2578
2580	uri://ed-fi.org/TribalAffiliationDescriptor	Cayuga Nation of New York	Cayuga Nation of New York	Cayuga Nation	\N	\N	\N	2022-11-17 17:07:57.411491	2022-11-17 17:07:57.411451	8d92e9db-1683-4f13-a4cf-84af3bc0d3d9	2580
2582	uri://ed-fi.org/TribalAffiliationDescriptor	Chalkyitsik	Chalkyitsik	Chalkyitsik Village	\N	\N	\N	2022-11-17 17:07:57.430803	2022-11-17 17:07:57.430763	1be22243-f1ea-4ed6-be63-d9dcf2e16ba9	2582
2584	uri://ed-fi.org/TribalAffiliationDescriptor	Chefornak	Chefornak	Village of Chefornak	\N	\N	\N	2022-11-17 17:07:57.443509	2022-11-17 17:07:57.443475	a1293673-1b82-4e21-b27e-d141b071fdb1	2584
2586	uri://ed-fi.org/TribalAffiliationDescriptor	Chemehuevi	Chemehuevi	Chemehuevi Indian Tribe of the Chemehuevi Reservation, California	\N	\N	\N	2022-11-17 17:07:57.452917	2022-11-17 17:07:57.452863	0d7a9dd0-24b6-4217-b431-ddea87e0b88f	2586
2587	uri://ed-fi.org/TribalAffiliationDescriptor	Chenega	Chenega	Native Village of Chenega (aka Chanega)	\N	\N	\N	2022-11-17 17:07:57.458807	2022-11-17 17:07:57.457954	60dfa63f-9628-4c75-8cbb-c5b6bf405c7d	2587
2590	uri://ed-fi.org/TribalAffiliationDescriptor	Chevak	Chevak	Chevak Native Village	\N	\N	\N	2022-11-17 17:07:57.470983	2022-11-17 17:07:57.470938	f72e7815-d64e-4562-bf6d-36685dbae68d	2590
2591	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne River	Cheyenne River	Cheyenne and Arapaho Tribes, Oklahoma	\N	\N	\N	2022-11-17 17:07:57.479746	2022-11-17 17:07:57.479707	29883658-0843-4338-892c-1f5818e47b01	2591
2593	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe, Inc.	Chickahominy Indian Tribe, Inc.	Chickahominy Indian Tribe	\N	\N	\N	2022-11-17 17:07:57.487852	2022-11-17 17:07:57.487788	920b2b24-4584-4f0a-8d0c-ac594545740c	2593
2595	uri://ed-fi.org/TribalAffiliationDescriptor	Chickaloon	Chickaloon	Chickaloon Native Village	\N	\N	\N	2022-11-17 17:07:57.496142	2022-11-17 17:07:57.496075	4110cb05-5f08-4d37-bf7f-2031d16bc1ca	2595
2597	uri://ed-fi.org/TribalAffiliationDescriptor	Chicken Ranch	Chicken Ranch	Chicken Ranch Rancheria of Me-Wuk Indians of California	\N	\N	\N	2022-11-17 17:07:57.506519	2022-11-17 17:07:57.506277	2a0c7360-f12e-42fe-bae4-3f5a2a4ea56e	2597
2599	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lagoon	Chignik Lagoon	Native Village of Chignik Lagoon	\N	\N	\N	2022-11-17 17:07:57.515053	2022-11-17 17:07:57.515013	1d1afe66-a974-4cf5-abef-b9bb4fa53448	2599
2601	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkat	Chilkat	Chilkat Indian Village (Klukwan)	\N	\N	\N	2022-11-17 17:07:57.524362	2022-11-17 17:07:57.524279	0aae8793-d796-4bb6-80b0-7e5dbd32df20	2601
2602	uri://ed-fi.org/TribalAffiliationDescriptor	Chilkoot	Chilkoot	Chilkoot Indian Association (Haines)	\N	\N	\N	2022-11-17 17:07:57.529849	2022-11-17 17:07:57.529809	9fc69da9-9604-4ba7-a19b-f5b622ab9cde	2602
2604	uri://ed-fi.org/TribalAffiliationDescriptor	Chippewa-Cree	Chippewa-Cree	Chippewa Cree Indians of the Rocky Boy's Reservation, Montana	\N	\N	\N	2022-11-17 17:07:57.539844	2022-11-17 17:07:57.539813	1ec41d3f-abc2-4557-a102-e25ef2a35f13	2604
2606	uri://ed-fi.org/TribalAffiliationDescriptor	Chitina	Chitina	Native Village of Chitina	\N	\N	\N	2022-11-17 17:07:57.548804	2022-11-17 17:07:57.548771	bcd74ef9-68a4-489f-90ff-839b328680a8	2606
2608	uri://ed-fi.org/TribalAffiliationDescriptor	Chuathbaluk	Chuathbaluk	Native Village of Chuathbaluk (Russian Mission, Kuskokwim)	\N	\N	\N	2022-11-17 17:07:57.560421	2022-11-17 17:07:57.560383	e29f3b13-9851-483d-ae4c-69608bd774d0	2608
2610	uri://ed-fi.org/TribalAffiliationDescriptor	Circle	Circle	Circle Native Community	\N	\N	\N	2022-11-17 17:07:57.568507	2022-11-17 17:07:57.568464	6da539ec-2e84-4873-bc23-b2dfda14c0a2	2610
2612	uri://ed-fi.org/TribalAffiliationDescriptor	Clark's Point	Clark's Point	Village of Clarks Point	\N	\N	\N	2022-11-17 17:07:57.576117	2022-11-17 17:07:57.576086	a558d228-886a-4803-9d24-089c4879dea6	2612
2615	uri://ed-fi.org/TribalAffiliationDescriptor	Coeur D'Alene	Coeur D'Alene	Coeur D'Alene Tribe	\N	\N	\N	2022-11-17 17:07:57.59049	2022-11-17 17:07:57.590422	faaaa532-e6e1-41ad-bacf-7e048f661382	2615
2617	uri://ed-fi.org/TribalAffiliationDescriptor	Colorado River	Colorado River	Colorado River Indian Tribes of the Colorado River Indian Reservation, Arizona and California	\N	\N	\N	2022-11-17 17:07:57.59893	2022-11-17 17:07:57.59886	671a6787-87e0-43ea-9420-ebf303e9f5e6	2617
2618	uri://ed-fi.org/TribalAffiliationDescriptor	Comanche	Comanche	Comanche Nation, Oklahoma	\N	\N	\N	2022-11-17 17:07:57.604406	2022-11-17 17:07:57.604366	a066f4ed-6e6c-4ccd-9954-9ae48ef13c64	2618
2620	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Coos	Confederated Coos	Confederated Tribes of the Coos, Lower Umpqua and Siuslaw Indians	\N	\N	\N	2022-11-17 17:07:57.612463	2022-11-17 17:07:57.612406	9d20567a-3e22-446d-a334-fac81edcd5a7	2620
2622	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Salish	Confederated Salish	Confederated Salish and Kootenai Tribes of the Flathead Reservation	\N	\N	\N	2022-11-17 17:07:57.630331	2022-11-17 17:07:57.630299	1f599172-4251-4a26-961f-84ea0f5a87ea	2622
2624	uri://ed-fi.org/TribalAffiliationDescriptor	Coquille	Coquille	Coquille Indian Tribe	\N	\N	\N	2022-11-17 17:07:57.643108	2022-11-17 17:07:57.643069	2866c098-c24a-4c51-ba23-01e301e93ece	2624
2626	uri://ed-fi.org/TribalAffiliationDescriptor	Council	Council	Native Village of Council	\N	\N	\N	2022-11-17 17:07:57.651014	2022-11-17 17:07:57.650885	8bf9bab5-8629-4a33-89c6-2ceeaf3f8723	2626
2627	uri://ed-fi.org/TribalAffiliationDescriptor	Coushatta	Coushatta	Coushatta Tribe of Louisiana	\N	\N	\N	2022-11-17 17:07:57.656592	2022-11-17 17:07:57.656551	623c99a3-079f-4053-9fc1-6cd2cbea29f6	2627
2631	uri://ed-fi.org/TribalAffiliationDescriptor	Craig	Craig	Craig Tribal Association	\N	\N	\N	2022-11-17 17:07:57.675737	2022-11-17 17:07:57.675692	886addc0-5bf6-4674-a021-f84e18cf6756	2631
2632	uri://ed-fi.org/TribalAffiliationDescriptor	Crooked Creek	Crooked Creek	Village of Crooked Creek	\N	\N	\N	2022-11-17 17:07:57.682117	2022-11-17 17:07:57.681308	911751a4-e44a-48cc-9f98-ffa975332fb3	2632
2634	uri://ed-fi.org/TribalAffiliationDescriptor	Crow Creek	Crow Creek	Crow Creek Sioux Tribe of the Crow Creek Reservation, South Dakota	\N	\N	\N	2022-11-17 17:07:57.689989	2022-11-17 17:07:57.689927	4bf6c95d-32f3-4071-a702-0bb10fb086da	2634
2636	uri://ed-fi.org/TribalAffiliationDescriptor	Deering	Deering	Native Village of Deering	\N	\N	\N	2022-11-17 17:07:57.710493	2022-11-17 17:07:57.710468	2a22e37c-6431-45eb-97c0-ee29650f734f	2636
2639	uri://ed-fi.org/TribalAffiliationDescriptor	Diomede	Diomede	Native Village of Diomede (aka Inalik)	\N	\N	\N	2022-11-17 17:07:57.727923	2022-11-17 17:07:57.727886	389d998f-2895-4c40-8850-4b40f0b21993	2639
2641	uri://ed-fi.org/TribalAffiliationDescriptor	Douglas	Douglas	Douglas Indian Association	\N	\N	\N	2022-11-17 17:07:57.738502	2022-11-17 17:07:57.738462	f6a9c6e6-2ad9-41ce-8b11-ad6ac14887a2	2641
2642	uri://ed-fi.org/TribalAffiliationDescriptor	Dry Creek	Dry Creek	Dry Creek Rancheria Band of Pomo Indians, California	\N	\N	\N	2022-11-17 17:07:57.743812	2022-11-17 17:07:57.743775	8dc374d9-9617-42e5-a738-af6075864cf1	2642
2596	uri://ed-fi.org/TribalAffiliationDescriptor	Chickasaw	Chickasaw	The Chickasaw Nation	\N	\N	\N	2022-11-17 17:07:57.501272	2022-11-17 17:07:57.50121	99437c04-a34c-4c93-9458-801278df410e	2596
2598	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Bay	Chignik Bay	Chignik Bay Tribal Council	\N	\N	\N	2022-11-17 17:07:57.510256	2022-11-17 17:07:57.510109	dfe14619-cf23-43c6-8fc5-5ccb2bfc40df	2598
2600	uri://ed-fi.org/TribalAffiliationDescriptor	Chignik Lake	Chignik Lake	Chignik Lake Village	\N	\N	\N	2022-11-17 17:07:57.519494	2022-11-17 17:07:57.519463	4c8d0092-7b6d-4bc6-b219-bd6a658b8785	2600
2603	uri://ed-fi.org/TribalAffiliationDescriptor	Chinik	Chinik	Chinik Eskimo Community (Golovin)	\N	\N	\N	2022-11-17 17:07:57.534948	2022-11-17 17:07:57.534909	25c192dc-b764-4e5e-83ec-95d4eac85773	2603
2605	uri://ed-fi.org/TribalAffiliationDescriptor	Chitimacha	Chitimacha	Chitimacha Tribe of Louisiana	\N	\N	\N	2022-11-17 17:07:57.546335	2022-11-17 17:07:57.544788	62ba3f39-b6f0-4087-820d-09d2b668dc63	2605
2607	uri://ed-fi.org/TribalAffiliationDescriptor	Choctaw	Choctaw	The Choctaw Nation of Oklahoma	\N	\N	\N	2022-11-17 17:07:57.554206	2022-11-17 17:07:57.554041	5839e95c-3ad2-44dd-a51d-7dc44df1cc06	2607
2609	uri://ed-fi.org/TribalAffiliationDescriptor	Chuloonawick	Chuloonawick	Chuloonawick Native Village	\N	\N	\N	2022-11-17 17:07:57.563101	2022-11-17 17:07:57.563028	f5f6a05f-9387-4a8c-bc57-1c30a1e05e7b	2609
2611	uri://ed-fi.org/TribalAffiliationDescriptor	Citizen Potawatomi	Citizen Potawatomi	Citizen Potawatomi Nation, Oklahoma	\N	\N	\N	2022-11-17 17:07:57.573093	2022-11-17 17:07:57.573053	18d6cc09-8a40-420b-97df-caea43daff46	2611
2613	uri://ed-fi.org/TribalAffiliationDescriptor	Cloverdale	Cloverdale	Cloverdale Rancheria of Pomo Indians of California	\N	\N	\N	2022-11-17 17:07:57.581219	2022-11-17 17:07:57.581173	30b881dc-455d-4529-9472-ce0d7c94b7a0	2613
2614	uri://ed-fi.org/TribalAffiliationDescriptor	Cocopah	Cocopah	Cocopah Tribe of Arizona	\N	\N	\N	2022-11-17 17:07:57.587063	2022-11-17 17:07:57.587018	c0690fc7-14e4-472e-8179-be6c9a8ba7f8	2614
2616	uri://ed-fi.org/TribalAffiliationDescriptor	Cold Springs	Cold Springs	Cold Springs Rancheria of Mono Indians of California	\N	\N	\N	2022-11-17 17:07:57.596487	2022-11-17 17:07:57.596444	a811a24b-6ce7-4e86-8224-e8e9d2ba8b9b	2616
2619	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Colville	Confederated Colville	Confederated Tribes of the Colville Reservation	\N	\N	\N	2022-11-17 17:07:57.610124	2022-11-17 17:07:57.60866	f46e8703-07db-4b8f-b1ea-cf2f4d33be2e	2619
2621	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Goshute	Confederated Goshute	Confederated Tribes of the Goshute Reservation, Nevada and Utah	\N	\N	\N	2022-11-17 17:07:57.627935	2022-11-17 17:07:57.627897	591cdb4d-3b00-449d-86bd-609b1830d0ef	2621
2623	uri://ed-fi.org/TribalAffiliationDescriptor	Confederated Yakama	Confederated Yakama	Confederated Tribes and Bands of the Yakama Nation	\N	\N	\N	2022-11-17 17:07:57.636184	2022-11-17 17:07:57.636142	9f166a2b-3320-4057-bdf8-3856ee2766c3	2623
2625	uri://ed-fi.org/TribalAffiliationDescriptor	Cortina	Cortina	Kletsel Dehe Band of Wintun Indians	\N	\N	\N	2022-11-17 17:07:57.646516	2022-11-17 17:07:57.646474	0ae4422f-a54a-4a2b-ae92-a6178d8db128	2625
2628	uri://ed-fi.org/TribalAffiliationDescriptor	Cow Creek	Cow Creek	Cow Creek Band of Umpqua Tribe of Indians	\N	\N	\N	2022-11-17 17:07:57.660689	2022-11-17 17:07:57.660659	5c18bdc1-3da6-4820-b139-442b53a77f4f	2628
2629	uri://ed-fi.org/TribalAffiliationDescriptor	Cowlitz	Cowlitz	Cowlitz Indian Tribe	\N	\N	\N	2022-11-17 17:07:57.667077	2022-11-17 17:07:57.667036	4353e255-6863-43f9-81ec-01766cb4e362	2629
2630	uri://ed-fi.org/TribalAffiliationDescriptor	Coyote Valley	Coyote Valley	Coyote Valley Band of Pomo Indians of California	\N	\N	\N	2022-11-17 17:07:57.672844	2022-11-17 17:07:57.671811	b2187844-5dd0-45e0-b41f-fea516a91b1d	2630
2633	uri://ed-fi.org/TribalAffiliationDescriptor	Crow	Crow	Crow Tribe of Montana	\N	\N	\N	2022-11-17 17:07:57.685164	2022-11-17 17:07:57.685103	72205469-ae92-4804-8127-32d051bc2dd4	2633
2635	uri://ed-fi.org/TribalAffiliationDescriptor	Curyung	Curyung	Curyung Tribal Council	\N	\N	\N	2022-11-17 17:07:57.701497	2022-11-17 17:07:57.70147	3c7ddd28-4a63-4019-91e7-f5841df3395f	2635
2637	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Nation	Delaware Nation	Delaware Nation, Oklahoma	\N	\N	\N	2022-11-17 17:07:57.715601	2022-11-17 17:07:57.715561	c7f7bcbe-6caf-4c10-8bb4-63d37cb2adfb	2637
2638	uri://ed-fi.org/TribalAffiliationDescriptor	Delaware Tribe	Delaware Tribe	Delaware Tribe of Indians	\N	\N	\N	2022-11-17 17:07:57.724595	2022-11-17 17:07:57.724167	7519c247-a0f7-49bb-a7a7-75278f288a13	2638
2640	uri://ed-fi.org/TribalAffiliationDescriptor	Dot Lake	Dot Lake	Village of Dot Lake	\N	\N	\N	2022-11-17 17:07:57.732593	2022-11-17 17:07:57.732556	64ff5996-3724-4807-8002-887d3835dc3e	2640
2643	uri://ed-fi.org/TribalAffiliationDescriptor	Duckwater	Duckwater	Duckwater Shoshone Tribe of the Duckwater Reservation, Nevada	\N	\N	\N	2022-11-17 17:07:57.747071	2022-11-17 17:07:57.747042	2b8327f0-451f-4dc6-9471-28fd6b5a2ec3	2643
2644	uri://ed-fi.org/TribalAffiliationDescriptor	Eagle	Eagle	Native Village of Eagle	\N	\N	\N	2022-11-17 17:07:57.753835	2022-11-17 17:07:57.751571	3ca08b22-73e5-4814-a341-aae0ed1678f8	2644
2647	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shoshone	Eastern Shoshone	Eastern Shoshone Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	2022-11-17 17:07:57.76742	2022-11-17 17:07:57.767388	d27d4c49-44d7-4fc6-bdbf-5e1b0331d84b	2647
2649	uri://ed-fi.org/TribalAffiliationDescriptor	Egegik	Egegik	Egegik Village	\N	\N	\N	2022-11-17 17:07:57.777264	2022-11-17 17:07:57.777229	decbb394-5a48-49d4-b882-0a03b0b7e404	2649
2651	uri://ed-fi.org/TribalAffiliationDescriptor	Ekuk	Ekuk	Native Village of Ekuk	\N	\N	\N	2022-11-17 17:07:57.788799	2022-11-17 17:07:57.788763	e25de4a1-52e8-457d-ba32-4e9d15cf3e0b	2651
2654	uri://ed-fi.org/TribalAffiliationDescriptor	Elim IRA	Elim IRA	Native Village of Elim	\N	\N	\N	2022-11-17 17:07:57.803557	2022-11-17 17:07:57.801993	9e6f8b1d-fcb1-49f0-ad1c-f9f5784d8192	2654
2656	uri://ed-fi.org/TribalAffiliationDescriptor	Ely Shoshone	Ely Shoshone	Ely Shoshone Tribe of Nevada	\N	\N	\N	2022-11-17 17:07:57.811815	2022-11-17 17:07:57.811523	45ccdd23-9991-4623-86dd-faafe456acbb	2656
2659	uri://ed-fi.org/TribalAffiliationDescriptor	Evansville	Evansville	Evansville Village (aka Bettles Field)	\N	\N	\N	2022-11-17 17:07:57.823596	2022-11-17 17:07:57.823533	004efc4e-1cf4-4144-95c1-656feb61debe	2659
2661	uri://ed-fi.org/TribalAffiliationDescriptor	Eyak	Eyak	Native Village of Eyak (Cordova)	\N	\N	\N	2022-11-17 17:07:57.833729	2022-11-17 17:07:57.833667	abcf4af3-d538-48f8-abc5-11e42c2b1208	2661
2662	uri://ed-fi.org/TribalAffiliationDescriptor	False Pass	False Pass	Native Village of False Pass	\N	\N	\N	2022-11-17 17:07:57.840512	2022-11-17 17:07:57.838929	046f4e07-47b3-4455-bbb9-f4538eede95f	2662
2665	uri://ed-fi.org/TribalAffiliationDescriptor	Fond du Lac	Fond du Lac	Minnesota Chippewa Tribe - Fond du Lac Band	\N	\N	\N	2022-11-17 17:07:57.859034	2022-11-17 17:07:57.858879	e19d62d9-01cb-4cc3-9894-958966615c80	2665
2667	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Bidwell	Fort Bidwell	Fort Bidwell Indian Community of the Fort Bidwell Reservation of California	\N	\N	\N	2022-11-17 17:07:57.868614	2022-11-17 17:07:57.868575	30f2108b-0f4d-4e5d-9516-6f2a77082fe2	2667
2668	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Independence	Fort Independence	Fort Independence Indian Community of Paiute Indians of the Fort Independence Reservation, California	\N	\N	\N	2022-11-17 17:07:57.873969	2022-11-17 17:07:57.87393	ad3fa9b7-59a2-4a24-8fe2-d8ae372ffad0	2668
2670	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDowell	Fort McDowell	Fort McDowell Yavapai Nation, Arizona	\N	\N	\N	2022-11-17 17:07:57.885081	2022-11-17 17:07:57.883508	5062cd3f-cbce-46ec-99f0-ded293f17db2	2670
2672	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Sill	Fort Sill	Fort Sill Apache Tribe of Oklahoma	\N	\N	\N	2022-11-17 17:07:57.894867	2022-11-17 17:07:57.894839	ae296920-e83d-4ce2-a126-772c4351e71d	2672
2675	uri://ed-fi.org/TribalAffiliationDescriptor	Galena	Galena	Galena Village (aka Louden Village)	\N	\N	\N	2022-11-17 17:07:57.908857	2022-11-17 17:07:57.908821	34fafeb3-24b3-486f-8130-e8109ff7894b	2675
2676	uri://ed-fi.org/TribalAffiliationDescriptor	Gambell	Gambell	Native Village of Gambell	\N	\N	\N	2022-11-17 17:07:57.914669	2022-11-17 17:07:57.913666	5ef525d6-a022-41b0-8a08-707c098182b4	2676
2678	uri://ed-fi.org/TribalAffiliationDescriptor	Gila River	Gila River	Gila River Indian Community of the Gila River Indian Reservation, Arizona	\N	\N	\N	2022-11-17 17:07:57.92283	2022-11-17 17:07:57.922643	6c688006-14d9-4a37-93f0-76c7f133646e	2678
2680	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Portage	Grand Portage	Minnesota Chippewa Tribe - Grand Portage Band	\N	\N	\N	2022-11-17 17:07:57.930489	2022-11-17 17:07:57.930453	6b86bbe0-f821-4c23-a704-25c70b3ec5ad	2680
2681	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Ronde Tribes	Grand Ronde Tribes	Confederated Tribes of the Grand Ronde Community of Oregon	\N	\N	\N	2022-11-17 17:07:57.937181	2022-11-17 17:07:57.937146	7d1ee4e4-fce8-4c0c-a8b3-b904f10882c2	2681
2645	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Cherokee	Eastern Cherokee	Eastern Band of Cherokee Indians	\N	\N	\N	2022-11-17 17:07:57.758199	2022-11-17 17:07:57.756486	b83f4d3b-f5a9-4de9-8ff2-e4a35677bec9	2645
2646	uri://ed-fi.org/TribalAffiliationDescriptor	Eastern Shawnee	Eastern Shawnee	Eastern Shawnee Tribe of Oklahoma	\N	\N	\N	2022-11-17 17:07:57.763984	2022-11-17 17:07:57.7637	6b5a2322-8488-48c2-8ab9-dc3b6fa51c9e	2646
2648	uri://ed-fi.org/TribalAffiliationDescriptor	Eek	Eek	Native Village of Eek	\N	\N	\N	2022-11-17 17:07:57.772815	2022-11-17 17:07:57.772782	8b1dc5bc-5013-4779-b2a8-244af112a015	2648
2650	uri://ed-fi.org/TribalAffiliationDescriptor	Eklutna	Eklutna	Eklutna Native Village	\N	\N	\N	2022-11-17 17:07:57.781902	2022-11-17 17:07:57.781876	03022caf-4c31-4b47-9b00-c7a96920c989	2650
2652	uri://ed-fi.org/TribalAffiliationDescriptor	Ekwok	Ekwok	Native Village of Ekwok	\N	\N	\N	2022-11-17 17:07:57.791632	2022-11-17 17:07:57.791602	8a9642af-b910-4e82-9f3e-c131249ead94	2652
2653	uri://ed-fi.org/TribalAffiliationDescriptor	Elem	Elem	Elem Indian Colony of Pomo Indians of the Sulphur Bank Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.797691	2022-11-17 17:07:57.797651	a0fca658-b845-4e8f-9c8a-5d1972957f47	2653
2655	uri://ed-fi.org/TribalAffiliationDescriptor	Elk Valley	Elk Valley	Elk Valley Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.805981	2022-11-17 17:07:57.805954	0ccc9eac-6cb3-441c-968c-66ff4424323c	2655
2657	uri://ed-fi.org/TribalAffiliationDescriptor	Emmonak	Emmonak	Emmonak Village	\N	\N	\N	2022-11-17 17:07:57.814675	2022-11-17 17:07:57.814612	419db827-d968-45e0-a9e2-bd18158f97d6	2657
2658	uri://ed-fi.org/TribalAffiliationDescriptor	Enterprise	Enterprise	Enterprise Rancheria of Maidu Indians of California	\N	\N	\N	2022-11-17 17:07:57.821091	2022-11-17 17:07:57.819725	56389615-e75f-4720-94c6-2ae6d8948ec6	2658
2660	uri://ed-fi.org/TribalAffiliationDescriptor	Ewiiaapaayp	Ewiiaapaayp	Ewiiaapaayp Band of Kumeyaay Indians, California	\N	\N	\N	2022-11-17 17:07:57.828856	2022-11-17 17:07:57.82882	d8e23152-6716-45ed-b337-21f67e6ce046	2660
2663	uri://ed-fi.org/TribalAffiliationDescriptor	Federated Indians of Graton	Federated Indians of Graton	Federated Indians of Graton Rancheria, California	\N	\N	\N	2022-11-17 17:07:57.84294	2022-11-17 17:07:57.842915	3da2236f-f1c6-4cd4-aebc-b271fc6ddf98	2663
2664	uri://ed-fi.org/TribalAffiliationDescriptor	Flandreau	Flandreau	Flandreau Santee Sioux Tribe of South Dakota	\N	\N	\N	2022-11-17 17:07:57.855654	2022-11-17 17:07:57.85546	af0bedef-243c-4aa6-b040-4dbf4f3083e9	2664
2666	uri://ed-fi.org/TribalAffiliationDescriptor	Forest County	Forest County	Forest County Potawatomi Community, Wisconsin	\N	\N	\N	2022-11-17 17:07:57.864914	2022-11-17 17:07:57.864728	a4be9f77-9508-4a1d-94d5-a1e51061d2c3	2666
2669	uri://ed-fi.org/TribalAffiliationDescriptor	Fort McDermitt	Fort McDermitt	Fort McDermitt Paiute and Shoshone Tribes of the Fort McDermitt Indian Reservation, Nevada and Oregon	\N	\N	\N	2022-11-17 17:07:57.878561	2022-11-17 17:07:57.878525	a28736ee-fcad-4294-8801-4e065364f4b5	2669
2671	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Mojave	Fort Mojave	Fort Mojave Indian Tribe of Arizona, California & Nevada	\N	\N	\N	2022-11-17 17:07:57.887339	2022-11-17 17:07:57.887287	d49027a3-940e-4244-99e7-16d3ac53212a	2671
2673	uri://ed-fi.org/TribalAffiliationDescriptor	Fort Yukon	Fort Yukon	Native Village of Fort Yukon	\N	\N	\N	2022-11-17 17:07:57.899407	2022-11-17 17:07:57.899303	af19872f-e376-44ac-81bc-c2d3683122ce	2673
2674	uri://ed-fi.org/TribalAffiliationDescriptor	Gakona	Gakona	Native Village of Gakona	\N	\N	\N	2022-11-17 17:07:57.905113	2022-11-17 17:07:57.904459	7b185166-091e-4fae-a583-607e0ccc88c0	2674
2677	uri://ed-fi.org/TribalAffiliationDescriptor	Georgetown	Georgetown	Native Village of Georgetown	\N	\N	\N	2022-11-17 17:07:57.917607	2022-11-17 17:07:57.917565	6cddffbb-72cd-4344-83ad-d7c3c6863737	2677
2679	uri://ed-fi.org/TribalAffiliationDescriptor	Goodnews Bay	Goodnews Bay	Native Village of Goodnews Bay	\N	\N	\N	2022-11-17 17:07:57.92534	2022-11-17 17:07:57.925314	e83a4d1d-ac68-4168-a5a1-a78b5e8af410	2679
2682	uri://ed-fi.org/TribalAffiliationDescriptor	Grand Traverse	Grand Traverse	Grand Traverse Band of Ottawa and Chippewa Indians, Michigan	\N	\N	\N	2022-11-17 17:07:57.939924	2022-11-17 17:07:57.939895	19e5f63d-ae45-46a8-89e7-1040ac92fa0c	2682
2685	uri://ed-fi.org/TribalAffiliationDescriptor	Grindstone	Grindstone	Grindstone Indian Rancheria of Wintun-Wailaki Indians of California	\N	\N	\N	2022-11-17 17:07:57.959298	2022-11-17 17:07:57.959264	445948ea-b4f0-401e-b8db-fb99ba6ac7b2	2685
2688	uri://ed-fi.org/TribalAffiliationDescriptor	Habematolel	Habematolel	Habematolel Pomo of Upper Lake, California	\N	\N	\N	2022-11-17 17:07:57.977036	2022-11-17 17:07:57.977002	778866af-f8e5-4b99-8dc8-df95650187cb	2688
2690	uri://ed-fi.org/TribalAffiliationDescriptor	Hannahville	Hannahville	Hannahville Indian Community, Michigan	\N	\N	\N	2022-11-17 17:07:57.985899	2022-11-17 17:07:57.985557	5d0891de-3f7d-48d3-a6df-a65a20a3ae7f	2690
2693	uri://ed-fi.org/TribalAffiliationDescriptor	Ho-Chunk	Ho-Chunk	Ho-Chunk Nation of Wisconsin	\N	\N	\N	2022-11-17 17:07:57.997227	2022-11-17 17:07:57.997173	4b8e0d50-63cf-43ac-b719-c4c911c837fc	2693
2694	uri://ed-fi.org/TribalAffiliationDescriptor	Hoh	Hoh	Hoh Indian Tribe	\N	\N	\N	2022-11-17 17:07:58.002436	2022-11-17 17:07:58.002401	e5f3a14b-a31e-4e1a-bc69-b64bdabc6d35	2694
2696	uri://ed-fi.org/TribalAffiliationDescriptor	Hoonah	Hoonah	Hoonah Indian Association	\N	\N	\N	2022-11-17 17:07:58.011887	2022-11-17 17:07:58.01186	911f31e3-2f87-4ff7-b57b-e7f5f54be4be	2696
2698	uri://ed-fi.org/TribalAffiliationDescriptor	Hooper Bay	Hooper Bay	Native Village of Hooper Bay	\N	\N	\N	2022-11-17 17:07:58.022997	2022-11-17 17:07:58.022966	104bbd48-234d-4002-b25f-442f934727a9	2698
2700	uri://ed-fi.org/TribalAffiliationDescriptor	Hopland	Hopland	Hopland Band of Pomo Indians, California	\N	\N	\N	2022-11-17 17:07:58.033815	2022-11-17 17:07:58.033786	5207f371-aa5d-4a7f-a9a5-bec05d1a6218	2700
2701	uri://ed-fi.org/TribalAffiliationDescriptor	Houlton	Houlton	Houlton Band of Maliseet Indians	\N	\N	\N	2022-11-17 17:07:58.04164	2022-11-17 17:07:58.04148	dc4db47c-93be-4806-8922-46c06162b059	2701
2703	uri://ed-fi.org/TribalAffiliationDescriptor	Hughes	Hughes	Hughes Village	\N	\N	\N	2022-11-17 17:07:58.049903	2022-11-17 17:07:58.049867	865e3084-1756-40c3-8cbd-fbf837b85623	2703
2705	uri://ed-fi.org/TribalAffiliationDescriptor	Hydaburg	Hydaburg	Hydaburg Cooperative Association	\N	\N	\N	2022-11-17 17:07:58.057868	2022-11-17 17:07:58.057781	75fa31da-12cf-411a-afcf-0e7623ccaf45	2705
2708	uri://ed-fi.org/TribalAffiliationDescriptor	Iliamna	Iliamna	Village of Iliamna	\N	\N	\N	2022-11-17 17:07:58.072537	2022-11-17 17:07:58.072508	894a0c94-29e3-4f76-8fb8-b972dfb9d71c	2708
2709	uri://ed-fi.org/TribalAffiliationDescriptor	Inaja	Inaja	Inaja Band of Diegueno Mission Indians of the Inaja and Cosmit Reservation, California	\N	\N	\N	2022-11-17 17:07:58.077467	2022-11-17 17:07:58.077375	f504bd28-d543-4ded-8aee-1f59d2411424	2709
2711	uri://ed-fi.org/TribalAffiliationDescriptor	Ione	Ione	Ione Band of Miwok Indians of California	\N	\N	\N	2022-11-17 17:07:58.085123	2022-11-17 17:07:58.085095	d876af10-c351-4f02-8a5b-edb80c100e7b	2711
2713	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Oklahoma	Iowa of Oklahoma	Iowa Tribe of Oklahoma	\N	\N	\N	2022-11-17 17:07:58.102408	2022-11-17 17:07:58.102379	185ee1fc-bd5e-4ede-92cf-04fdd7382700	2713
2714	uri://ed-fi.org/TribalAffiliationDescriptor	Iqugmiut	Iqugmiut	Iqugmiut Traditional Council	\N	\N	\N	2022-11-17 17:07:58.107481	2022-11-17 17:07:58.107424	6f1b9d54-52bd-48fa-9627-ca47634f920b	2714
2717	uri://ed-fi.org/TribalAffiliationDescriptor	Jamestown	Jamestown	Jamestown S'Klallam Tribe	\N	\N	\N	2022-11-17 17:07:58.119692	2022-11-17 17:07:58.119666	fc0034cb-b729-4c1a-b04a-943f3e7dac78	2717
2718	uri://ed-fi.org/TribalAffiliationDescriptor	Jamul	Jamul	Jamul Indian Village of California	\N	\N	\N	2022-11-17 17:07:58.12955	2022-11-17 17:07:58.129499	1cf61b02-9786-4460-a5fa-2526913c436a	2718
2720	uri://ed-fi.org/TribalAffiliationDescriptor	Jicarilla	Jicarilla	Jicarilla Apache Nation, New Mexico	\N	\N	\N	2022-11-17 17:07:58.137451	2022-11-17 17:07:58.137247	8636ee8c-89b3-45e0-8563-d6b49cc8fe72	2720
2722	uri://ed-fi.org/TribalAffiliationDescriptor	Kaibab	Kaibab	Kaibab Band of Paiute Indians of the Kaibab Indian Reservation, Arizona	\N	\N	\N	2022-11-17 17:07:58.148138	2022-11-17 17:07:58.146061	a1d91b94-1cb9-41f0-bf97-f2d752c23756	2722
2725	uri://ed-fi.org/TribalAffiliationDescriptor	Kalispel	Kalispel	Kalispel Indian Community of the Kalispel Reservation	\N	\N	\N	2022-11-17 17:07:58.16236	2022-11-17 17:07:58.162307	565c6ec6-67b8-4d05-9332-fd161813d21a	2725
2727	uri://ed-fi.org/TribalAffiliationDescriptor	Kaltag	Kaltag	Village of Kaltag	\N	\N	\N	2022-11-17 17:07:58.174575	2022-11-17 17:07:58.174544	01a94b2f-ae5b-44db-b63d-7644a6cf3e40	2727
2729	uri://ed-fi.org/TribalAffiliationDescriptor	Karluk	Karluk	Native Village of Karluk	\N	\N	\N	2022-11-17 17:07:58.18382	2022-11-17 17:07:58.183788	01834f25-aa30-4074-bee3-75be62c83f97	2729
2683	uri://ed-fi.org/TribalAffiliationDescriptor	Grayling	Grayling	Organized Village of Grayling (aka Holikachuk)	\N	\N	\N	2022-11-17 17:07:57.946517	2022-11-17 17:07:57.946478	4edea11a-b919-46ba-8bb4-65381bfb3b96	2683
2684	uri://ed-fi.org/TribalAffiliationDescriptor	Greenville	Greenville	Greenville Rancheria	\N	\N	\N	2022-11-17 17:07:57.955143	2022-11-17 17:07:57.9551	3167fd3b-81fa-4155-a79f-16fdd1fe1bd1	2684
2686	uri://ed-fi.org/TribalAffiliationDescriptor	Guidiville	Guidiville	Guidiville Rancheria of California	\N	\N	\N	2022-11-17 17:07:57.964035	2022-11-17 17:07:57.964008	0b081a79-64d2-42b6-8b88-678f7358e1bb	2686
2687	uri://ed-fi.org/TribalAffiliationDescriptor	Gulkana	Gulkana	Gulkana Village Council	\N	\N	\N	2022-11-17 17:07:57.972246	2022-11-17 17:07:57.972217	26c08ae2-0212-445c-81d8-1a9ea229a9a9	2687
2689	uri://ed-fi.org/TribalAffiliationDescriptor	Hamilton	Hamilton	Native Village of Hamilton	\N	\N	\N	2022-11-17 17:07:57.98077	2022-11-17 17:07:57.980735	a701f42f-d524-4fe4-8871-f9cda4df8784	2689
2691	uri://ed-fi.org/TribalAffiliationDescriptor	Havasupai	Havasupai	Havasupai Tribe of the Havasupai Reservation, Arizona	\N	\N	\N	2022-11-17 17:07:57.989283	2022-11-17 17:07:57.989245	697df4e1-f7e8-4785-a33d-db632d1e0b26	2691
2692	uri://ed-fi.org/TribalAffiliationDescriptor	Healy Lake	Healy Lake	Healy Lake Village	\N	\N	\N	2022-11-17 17:07:57.993984	2022-11-17 17:07:57.993936	fdc03d92-4182-446e-a01f-9b0bc618f5db	2692
2695	uri://ed-fi.org/TribalAffiliationDescriptor	Holy Cross	Holy Cross	Holy Cross Tribe	\N	\N	\N	2022-11-17 17:07:58.00712	2022-11-17 17:07:58.007092	472e4819-f86f-4e81-a3c5-b44dcc3dcd2e	2695
2697	uri://ed-fi.org/TribalAffiliationDescriptor	Hoopa	Hoopa	Hoopa Valley Tribe, California	\N	\N	\N	2022-11-17 17:07:58.019558	2022-11-17 17:07:58.019432	5540afb3-8fae-47ed-9bc2-a07be5cfbca0	2697
2699	uri://ed-fi.org/TribalAffiliationDescriptor	Hopi	Hopi	Hopi Tribe of Arizona	\N	\N	\N	2022-11-17 17:07:58.027953	2022-11-17 17:07:58.027918	9847725c-a566-4ed8-bb9e-d7affab73869	2699
2702	uri://ed-fi.org/TribalAffiliationDescriptor	Hualapai	Hualapai	Hualapai Indian Tribe of the Hualapai Indian Reservation, Arizona	\N	\N	\N	2022-11-17 17:07:58.04439	2022-11-17 17:07:58.044362	51985bc1-78e2-446c-b6b2-97bb2a874c48	2702
2704	uri://ed-fi.org/TribalAffiliationDescriptor	Huslia	Huslia	Huslia Village	\N	\N	\N	2022-11-17 17:07:58.053401	2022-11-17 17:07:58.053371	95aa3f2d-a0e4-4696-b92b-28931a93aeac	2704
2706	uri://ed-fi.org/TribalAffiliationDescriptor	Igiugig	Igiugig	Igiugig Village	\N	\N	\N	2022-11-17 17:07:58.061151	2022-11-17 17:07:58.061121	7e95131a-c1a6-447a-9243-e8d07ceabba9	2706
2707	uri://ed-fi.org/TribalAffiliationDescriptor	Iipay	Iipay	Iipay Nation of Santa Ysabel, California	\N	\N	\N	2022-11-17 17:07:58.069819	2022-11-17 17:07:58.069738	cb62ee43-47b6-4f0b-8dc1-cf09fc7e79b7	2707
2710	uri://ed-fi.org/TribalAffiliationDescriptor	Inupiat Community of the Arctic Slope	Inupiat Community of the Arctic Slope	Inupiat Community of the Arctic Slope	\N	\N	\N	2022-11-17 17:07:58.080474	2022-11-17 17:07:58.080447	11301b38-8466-4904-bd24-023a7b7df238	2710
2712	uri://ed-fi.org/TribalAffiliationDescriptor	Iowa of Kansas	Iowa of Kansas	Iowa Tribe of Kansas and Nebraska	\N	\N	\N	2022-11-17 17:07:58.099135	2022-11-17 17:07:58.099044	e7265bc2-8765-41a6-9594-adc837ad98d5	2712
2715	uri://ed-fi.org/TribalAffiliationDescriptor	Ivanof Bay Tribe	Ivanof Bay Tribe	Ivanof Bay Tribe	\N	\N	\N	2022-11-17 17:07:58.110187	2022-11-17 17:07:58.110158	e7b4fc73-8591-4115-9780-28cc4d80ed42	2715
2716	uri://ed-fi.org/TribalAffiliationDescriptor	Jackson	Jackson	Jackson Band of Miwuk Indians	\N	\N	\N	2022-11-17 17:07:58.115035	2022-11-17 17:07:58.115006	18aaa692-de4f-40ad-ac0e-ba567808de8b	2716
2719	uri://ed-fi.org/TribalAffiliationDescriptor	Jena	Jena	Jena Band of Choctaw Indians	\N	\N	\N	2022-11-17 17:07:58.132754	2022-11-17 17:07:58.132728	52e005df-4abd-4c67-802c-e5c911567df2	2719
2721	uri://ed-fi.org/TribalAffiliationDescriptor	Kaguyuk	Kaguyuk	Kaguyak Village	\N	\N	\N	2022-11-17 17:07:58.141517	2022-11-17 17:07:58.141376	d2530a52-0420-4941-8da1-7c138d8594ec	2721
2723	uri://ed-fi.org/TribalAffiliationDescriptor	Kake	Kake	Organized Village of Kake	\N	\N	\N	2022-11-17 17:07:58.150799	2022-11-17 17:07:58.150764	7d4743cc-cab5-4773-928e-3d2d10974376	2723
2724	uri://ed-fi.org/TribalAffiliationDescriptor	Kaktovik	Kaktovik	Kaktovik Village (aka Barter Island)	\N	\N	\N	2022-11-17 17:07:58.157858	2022-11-17 17:07:58.157827	6704f189-afe6-4034-9541-5a9eb48b6b32	2724
2726	uri://ed-fi.org/TribalAffiliationDescriptor	Kalskag	Kalskag	Village of Kalskag	\N	\N	\N	2022-11-17 17:07:58.167235	2022-11-17 17:07:58.167206	f01506e3-b16e-4a21-871b-fb2bd78923e0	2726
2728	uri://ed-fi.org/TribalAffiliationDescriptor	Kanatak	Kanatak	Native Village of Kanatak	\N	\N	\N	2022-11-17 17:07:58.177972	2022-11-17 17:07:58.177944	915a05d1-77a8-4379-aa29-8ecb16632d79	2728
2730	uri://ed-fi.org/TribalAffiliationDescriptor	Karuk	Karuk	Karuk Tribe	\N	\N	\N	2022-11-17 17:07:58.188321	2022-11-17 17:07:58.188287	fcad9276-f154-4da8-9a42-c578cfd3a1cb	2730
2732	uri://ed-fi.org/TribalAffiliationDescriptor	Kashia	Kashia	Kashia Band of Pomo Indians of the Stewarts Point Rancheria, California	\N	\N	\N	2022-11-17 17:07:58.196208	2022-11-17 17:07:58.196157	9b098716-b4a3-4e2e-9f35-742b4e197d67	2732
2736	uri://ed-fi.org/TribalAffiliationDescriptor	Ketchikan	Ketchikan	Ketchikan Indian Community	\N	\N	\N	2022-11-17 17:07:58.233076	2022-11-17 17:07:58.233042	63378fec-22be-4fe8-9272-5c05868fb77a	2736
2737	uri://ed-fi.org/TribalAffiliationDescriptor	Keweenaw	Keweenaw	Keweenaw Bay Indian Community, Michigan	\N	\N	\N	2022-11-17 17:07:58.238263	2022-11-17 17:07:58.238238	786efc36-9259-485c-848c-91ef5e54e94c	2737
2740	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Kansas	Kickapoo of Kansas	Kickapoo Tribe of Indians of the Kickapoo Reservation in Kansas	\N	\N	\N	2022-11-17 17:07:58.252455	2022-11-17 17:07:58.252421	305f112a-8405-42cc-b10b-532451aeb02e	2740
2742	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Texas	Kickapoo of Texas	Kickapoo Traditional Tribe of Texas	\N	\N	\N	2022-11-17 17:07:58.262292	2022-11-17 17:07:58.262266	48ec7d3e-8e03-4e11-b7e8-8b856a3b2c5f	2742
2744	uri://ed-fi.org/TribalAffiliationDescriptor	King Salmon	King Salmon	King Salmon Tribe	\N	\N	\N	2022-11-17 17:07:58.273922	2022-11-17 17:07:58.273909	090cd9ac-4ac6-4862-8ef5-47ba1e259544	2744
2746	uri://ed-fi.org/TribalAffiliationDescriptor	Kipnuk	Kipnuk	Native Village of Kipnuk	\N	\N	\N	2022-11-17 17:07:58.297789	2022-11-17 17:07:58.297751	91a47c59-10eb-478b-b30a-c4c5bd85d0a6	2746
2747	uri://ed-fi.org/TribalAffiliationDescriptor	Kivalina	Kivalina	Native Village of Kivalina	\N	\N	\N	2022-11-17 17:07:58.303209	2022-11-17 17:07:58.303118	018367f7-b3f3-4660-a7fb-1de92963c0fa	2747
2749	uri://ed-fi.org/TribalAffiliationDescriptor	Klawock	Klawock	Klawock Cooperative Association	\N	\N	\N	2022-11-17 17:07:58.311398	2022-11-17 17:07:58.311364	e7d82d9c-0876-41b9-8b2a-2228fb961d85	2749
2751	uri://ed-fi.org/TribalAffiliationDescriptor	Knik	Knik	Knik Tribe	\N	\N	\N	2022-11-17 17:07:58.319613	2022-11-17 17:07:58.319587	f68fe14c-b9cc-48f6-9e7f-cb83ede04c69	2751
2752	uri://ed-fi.org/TribalAffiliationDescriptor	Kobuk	Kobuk	Native Village of Kobuk	\N	\N	\N	2022-11-17 17:07:58.324607	2022-11-17 17:07:58.324435	7171ed8a-937a-4e48-8efb-abb92c7e49b2	2752
2754	uri://ed-fi.org/TribalAffiliationDescriptor	Kokhanok	Kokhanok	Kokhanok Village	\N	\N	\N	2022-11-17 17:07:58.332966	2022-11-17 17:07:58.332923	4fcf200e-0fcb-4e37-bbc2-2b80a03fec90	2754
2757	uri://ed-fi.org/TribalAffiliationDescriptor	Kotlik	Kotlik	Village of Kotlik	\N	\N	\N	2022-11-17 17:07:58.362468	2022-11-17 17:07:58.362439	b6bbcc24-2b65-4677-8480-6b6dc5fad5a2	2757
2758	uri://ed-fi.org/TribalAffiliationDescriptor	Kotzebue	Kotzebue	Native Village of Kotzebue	\N	\N	\N	2022-11-17 17:07:58.370834	2022-11-17 17:07:58.3708	361d1c22-7df6-4390-b684-bc7074e50b03	2758
2760	uri://ed-fi.org/TribalAffiliationDescriptor	Koyukuk	Koyukuk	Koyukuk Native Village	\N	\N	\N	2022-11-17 17:07:58.379404	2022-11-17 17:07:58.379376	93ec35bb-cf99-4a16-99fa-e17ea65153d3	2760
2762	uri://ed-fi.org/TribalAffiliationDescriptor	Kwigillingok	Kwigillingok	Native Village of Kwigillingok	\N	\N	\N	2022-11-17 17:07:58.396471	2022-11-17 17:07:58.3963	972edd02-a171-4d84-82a2-ed5211be1c46	2762
2765	uri://ed-fi.org/TribalAffiliationDescriptor	La Posta	La Posta	La Posta Band of Diegueno Mission Indians of the La Posta Indian Reservation, California	\N	\N	\N	2022-11-17 17:07:58.408005	2022-11-17 17:07:58.40794	623f3dcc-e775-43ee-aadf-8e0c751b3bae	2765
2766	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Courte Oreilles	Lac Courte Oreilles	Lac Courte Oreilles Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	2022-11-17 17:07:58.413029	2022-11-17 17:07:58.413002	7a821391-6b68-413c-ae6c-78f6d9566119	2766
2768	uri://ed-fi.org/TribalAffiliationDescriptor	Lac Vieux	Lac Vieux	Lac Vieux Desert Band of Lake Superior Chippewa Indians of Michigan	\N	\N	\N	2022-11-17 17:07:58.421223	2022-11-17 17:07:58.421209	8ff8ed45-f64e-45d1-a10f-cd6661c06799	2768
2771	uri://ed-fi.org/TribalAffiliationDescriptor	Leech Lake	Leech Lake	Minnesota Chippewa Tribe - Leech Lake Band	\N	\N	\N	2022-11-17 17:07:58.43328	2022-11-17 17:07:58.433246	03d00927-5164-42d0-a1b1-689490f3bd1d	2771
2731	uri://ed-fi.org/TribalAffiliationDescriptor	Kasaan	Kasaan	Organized Village of Kasaan	\N	\N	\N	2022-11-17 17:07:58.191787	2022-11-17 17:07:58.191772	d9bc5b9f-4be0-4739-8683-0c9337a607dd	2731
2733	uri://ed-fi.org/TribalAffiliationDescriptor	Kasigluk	Kasigluk	Kasigluk Traditional Elders Council	\N	\N	\N	2022-11-17 17:07:58.211545	2022-11-17 17:07:58.211508	fcb55318-eff5-4631-915f-a58bca93b787	2733
2734	uri://ed-fi.org/TribalAffiliationDescriptor	Kaw	Kaw	Kaw Nation, Oklahoma	\N	\N	\N	2022-11-17 17:07:58.22366	2022-11-17 17:07:58.223632	ba9b3b1c-36b2-416b-a2b9-c01795ec5359	2734
2735	uri://ed-fi.org/TribalAffiliationDescriptor	Kenaitze	Kenaitze	Kenaitze Indian Tribe	\N	\N	\N	2022-11-17 17:07:58.228796	2022-11-17 17:07:58.228759	69369295-0d85-4edb-aab0-d825b90f9fa9	2735
2738	uri://ed-fi.org/TribalAffiliationDescriptor	Kialegee	Kialegee	Kialegee Tribal Town	\N	\N	\N	2022-11-17 17:07:58.242581	2022-11-17 17:07:58.242555	6b609afc-9461-416c-844b-0a327b335a77	2738
2739	uri://ed-fi.org/TribalAffiliationDescriptor	Kiana	Kiana	Native Village of Kiana	\N	\N	\N	2022-11-17 17:07:58.247419	2022-11-17 17:07:58.247392	827a8626-ab5e-49ba-82c4-f62306ce6c21	2739
2741	uri://ed-fi.org/TribalAffiliationDescriptor	Kickapoo of Oklahoma	Kickapoo of Oklahoma	Kickapoo Tribe of Oklahoma	\N	\N	\N	2022-11-17 17:07:58.258274	2022-11-17 17:07:58.258262	42462f7d-ae98-4566-80bb-cbc9d2f29c9c	2741
2743	uri://ed-fi.org/TribalAffiliationDescriptor	King Island	King Island	King Island Native Community	\N	\N	\N	2022-11-17 17:07:58.269221	2022-11-17 17:07:58.269193	e9e18ed9-17c0-4a1c-93a5-4d8b96562c31	2743
2745	uri://ed-fi.org/TribalAffiliationDescriptor	Kiowa	Kiowa	Kiowa Indian Tribe of Oklahoma	\N	\N	\N	2022-11-17 17:07:58.278431	2022-11-17 17:07:58.27839	a7b49eec-212a-4004-a2fd-d49400ae40e2	2745
2748	uri://ed-fi.org/TribalAffiliationDescriptor	Klamath	Klamath	Klamath Tribes	\N	\N	\N	2022-11-17 17:07:58.306034	2022-11-17 17:07:58.306009	e505528a-0a0a-4e58-b504-cf9dec2ceb39	2748
2750	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti Kaah	Kluti Kaah	Native Village of Kluti Kaah (aka Copper Center)	\N	\N	\N	2022-11-17 17:07:58.314636	2022-11-17 17:07:58.314596	3eefa2ca-10b4-4217-84f3-d5688d7ef2c8	2750
2753	uri://ed-fi.org/TribalAffiliationDescriptor	Koi	Koi	Koi Nation of Northern California	\N	\N	\N	2022-11-17 17:07:58.32768	2022-11-17 17:07:58.327653	5df9bcbf-4996-4a48-9c75-b0327e034bc6	2753
2755	uri://ed-fi.org/TribalAffiliationDescriptor	Kongiganak	Kongiganak	Native Village of Kongiganak	\N	\N	\N	2022-11-17 17:07:58.349159	2022-11-17 17:07:58.349116	1604bb2f-4110-4a4f-86f2-558bbb624cfd	2755
2756	uri://ed-fi.org/TribalAffiliationDescriptor	Kootenai	Kootenai	Kootenai Tribe of Idaho	\N	\N	\N	2022-11-17 17:07:58.359964	2022-11-17 17:07:58.359924	1bd85987-f6c3-4325-ac7b-e1359c75185b	2756
2759	uri://ed-fi.org/TribalAffiliationDescriptor	Koyuk	Koyuk	Native Village of Koyuk	\N	\N	\N	2022-11-17 17:07:58.373691	2022-11-17 17:07:58.373664	df161625-4848-47db-bf74-0935df5065f9	2759
2761	uri://ed-fi.org/TribalAffiliationDescriptor	Kwethluk	Kwethluk	Organized Village of Kwethluk	\N	\N	\N	2022-11-17 17:07:58.383791	2022-11-17 17:07:58.383766	346f406a-5307-4d07-adb2-0aece1fa1957	2761
2763	uri://ed-fi.org/TribalAffiliationDescriptor	Kwinhagak	Kwinhagak	Native Village of Kwinhagak (aka Quinhagak)	\N	\N	\N	2022-11-17 17:07:58.399481	2022-11-17 17:07:58.399456	e28f9b06-9c91-49b6-921b-64612fbced6d	2763
2764	uri://ed-fi.org/TribalAffiliationDescriptor	La Jolla	La Jolla	La Jolla Band of Luiseno Indians, California	\N	\N	\N	2022-11-17 17:07:58.404675	2022-11-17 17:07:58.40464	e0fbfa95-e413-4d60-bcdf-297623cde342	2764
2767	uri://ed-fi.org/TribalAffiliationDescriptor	Lac du Flambeau	Lac du Flambeau	Lac du Flambeau Band of Lake Superior Chippewa Indians of the Lac du Flambeau Reservation of Wisconsin	\N	\N	\N	2022-11-17 17:07:58.416296	2022-11-17 17:07:58.41627	f0dea533-9e00-4dbf-8e82-e9c3a60ed42d	2767
2769	uri://ed-fi.org/TribalAffiliationDescriptor	Larsen Bay	Larsen Bay	Native Village of Larsen Bay	\N	\N	\N	2022-11-17 17:07:58.424888	2022-11-17 17:07:58.424823	0b600eca-c53e-4cb5-a5d4-1decbd80d95c	2769
2770	uri://ed-fi.org/TribalAffiliationDescriptor	Las Vegas	Las Vegas	Las Vegas Tribe of Paiute Indians of the Las Vegas Indian Colony, Nevada	\N	\N	\N	2022-11-17 17:07:58.429778	2022-11-17 17:07:58.429539	2fb48d17-9b45-4b7f-9725-0df0078c7a69	2770
2772	uri://ed-fi.org/TribalAffiliationDescriptor	Levelock	Levelock	Levelock Village	\N	\N	\N	2022-11-17 17:07:58.441536	2022-11-17 17:07:58.441508	8bd278fb-755f-4f58-b52b-6a055a8780e8	2772
2773	uri://ed-fi.org/TribalAffiliationDescriptor	Lime	Lime	Lime Village	\N	\N	\N	2022-11-17 17:07:58.446372	2022-11-17 17:07:58.446345	9a65d73c-a6d1-4e82-a552-0d6e924b5cc2	2773
2775	uri://ed-fi.org/TribalAffiliationDescriptor	Little Shell Tribe 	Little Shell Tribe 	Little Shell Tribe of Chippewa Indians of Montana	\N	\N	\N	2022-11-17 17:07:58.455462	2022-11-17 17:07:58.455291	67fabfd8-c7e7-4626-a01a-5c165b923f0c	2775
2777	uri://ed-fi.org/TribalAffiliationDescriptor	Lone Pine	Lone Pine	Lone Pine Paiute-Shoshone Tribe	\N	\N	\N	2022-11-17 17:07:58.463503	2022-11-17 17:07:58.463438	f54ae601-285a-457c-ba1f-b40fde8d794a	2777
2780	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Brule	Lower Brule	Lower Brule Sioux Tribe of the Lower Brule Reservation, South Dakota	\N	\N	\N	2022-11-17 17:07:58.476482	2022-11-17 17:07:58.476451	ffba2e63-0461-47e8-9dde-bea4afcd87c5	2780
2781	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Elwha	Lower Elwha	Lower Elwha Tribal Community	\N	\N	\N	2022-11-17 17:07:58.48116	2022-11-17 17:07:58.481108	0c070f51-cba2-41d2-b167-f4ef929fe11f	2781
2784	uri://ed-fi.org/TribalAffiliationDescriptor	Lummi	Lummi	Lummi Tribe of the Lummi Reservation	\N	\N	\N	2022-11-17 17:07:58.492792	2022-11-17 17:07:58.492761	2b8cb99f-bb0b-4026-8941-0d498d412a65	2784
2786	uri://ed-fi.org/TribalAffiliationDescriptor	Makah	Makah	Makah Indian Tribe of the Makah Indian Reservation	\N	\N	\N	2022-11-17 17:07:58.501746	2022-11-17 17:07:58.501714	c2118508-280f-48de-a618-d9ffab8ea588	2786
2788	uri://ed-fi.org/TribalAffiliationDescriptor	Manley Hot Springs	Manley Hot Springs	Manley Hot Springs Village	\N	\N	\N	2022-11-17 17:07:58.511036	2022-11-17 17:07:58.511002	0bbf036f-3014-4f97-b0bb-d62ed07c88a0	2788
2790	uri://ed-fi.org/TribalAffiliationDescriptor	Manzanita	Manzanita	Manzanita Band of Diegueno Mission Indians of the Manzanita Reservation, California	\N	\N	\N	2022-11-17 17:07:58.522348	2022-11-17 17:07:58.522318	ca46d8da-1ef1-42cb-9675-9fee69accf8b	2790
2792	uri://ed-fi.org/TribalAffiliationDescriptor	Mary's Igloo	Mary's Igloo	Native Village of Mary's Igloo	\N	\N	\N	2022-11-17 17:07:58.531111	2022-11-17 17:07:58.531082	aede6d9b-154e-4283-b8c3-b10420bf8cb9	2792
2793	uri://ed-fi.org/TribalAffiliationDescriptor	Mashantucket Pequot	Mashantucket Pequot	Mashantucket Pequot Indian Tribe	\N	\N	\N	2022-11-17 17:07:58.53634	2022-11-17 17:07:58.536248	3582d5d7-415e-4533-a77a-fe48533e442b	2793
2795	uri://ed-fi.org/TribalAffiliationDescriptor	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band	Match-e-be-nash-she-wish Band of Pottawatomi Indians of Michigan	\N	\N	\N	2022-11-17 17:07:58.544159	2022-11-17 17:07:58.54413	1e0c5228-0a74-461b-a3d5-bd1bd52e172d	2795
2797	uri://ed-fi.org/TribalAffiliationDescriptor	Mechoopda	Mechoopda	Mechoopda Indian Tribe of Chico Rancheria, California	\N	\N	\N	2022-11-17 17:07:58.55392	2022-11-17 17:07:58.553887	5ea927fd-6134-45bd-a8a5-57480966ed49	2797
2800	uri://ed-fi.org/TribalAffiliationDescriptor	Mentasta	Mentasta	Mentasta Traditional Council	\N	\N	\N	2022-11-17 17:07:58.573786	2022-11-17 17:07:58.573752	f9483649-c970-4aa1-bdd8-ad5afe70ff21	2800
2802	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero Apache	Mescalero Apache	Mescalero Apache Tribe of the Mescalero Reservation, New Mexico	\N	\N	\N	2022-11-17 17:07:58.584298	2022-11-17 17:07:58.584269	df7cf662-cf60-4317-9f93-016e10d00391	2802
2804	uri://ed-fi.org/TribalAffiliationDescriptor	Miami of Oklahoma	Miami of Oklahoma	Miami Tribe of Oklahoma	\N	\N	\N	2022-11-17 17:07:58.596329	2022-11-17 17:07:58.596302	a3a56e94-e815-4ed6-bfbd-c2baa61ad721	2804
2806	uri://ed-fi.org/TribalAffiliationDescriptor	Middletown	Middletown	Middletown Rancheria of Pomo Indians of California	\N	\N	\N	2022-11-17 17:07:58.614838	2022-11-17 17:07:58.614807	d047f42c-b2de-4f98-9087-ec08786e7aee	2806
2807	uri://ed-fi.org/TribalAffiliationDescriptor	Mi'kmaq Nation	Mi'kmaq Nation	Mi'kmaq Nation	\N	\N	\N	2022-11-17 17:07:58.620632	2022-11-17 17:07:58.620582	4a1d1950-90c9-48d4-ac92-74f5a89dad7e	2807
2810	uri://ed-fi.org/TribalAffiliationDescriptor	Minto	Minto	Native Village of Minto	\N	\N	\N	2022-11-17 17:07:58.631135	2022-11-17 17:07:58.631103	a01f878a-501f-4279-b888-8e1282dbfe39	2810
2812	uri://ed-fi.org/TribalAffiliationDescriptor	Moapa	Moapa	Moapa Band of Paiute Indians of the Moapa River Indian Reservation, Nevada	\N	\N	\N	2022-11-17 17:07:58.639044	2022-11-17 17:07:58.639011	87577471-f637-4299-b017-a74f8472eefd	2812
2813	uri://ed-fi.org/TribalAffiliationDescriptor	Modoc	Modoc	Modoc Nation	\N	\N	\N	2022-11-17 17:07:58.643842	2022-11-17 17:07:58.643742	04f3d153-ccfc-4081-b556-e538f95e3e2b	2813
2774	uri://ed-fi.org/TribalAffiliationDescriptor	Little River	Little River	Little River Band of Ottawa Indians, Michigan	\N	\N	\N	2022-11-17 17:07:58.450702	2022-11-17 17:07:58.450673	587041b8-89cd-4d27-8155-6e3f56e984dd	2774
2776	uri://ed-fi.org/TribalAffiliationDescriptor	Little Traverse	Little Traverse	Little Traverse Bay Bands of Odawa Indians, Michigan	\N	\N	\N	2022-11-17 17:07:58.460592	2022-11-17 17:07:58.459653	1c6be841-08a2-43fd-8096-ebd960b24499	2776
2778	uri://ed-fi.org/TribalAffiliationDescriptor	Los Coyotes	Los Coyotes	Los Coyotes Band of Cahuilla and Cupeno Indians, California	\N	\N	\N	2022-11-17 17:07:58.468747	2022-11-17 17:07:58.468714	de2d67c3-ef44-4de9-b1dd-21497dc308f5	2778
2779	uri://ed-fi.org/TribalAffiliationDescriptor	Lovelock	Lovelock	Lovelock Paiute Tribe of the Lovelock Indian Colony, Nevada	\N	\N	\N	2022-11-17 17:07:58.473563	2022-11-17 17:07:58.473514	3303254d-60cb-420e-875a-35a750733fc0	2779
2782	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Kalskag	Lower Kalskag	Village of Lower Kalskag	\N	\N	\N	2022-11-17 17:07:58.484069	2022-11-17 17:07:58.484037	ee1ddc04-ffd9-4638-9c17-d193d6678a30	2782
2783	uri://ed-fi.org/TribalAffiliationDescriptor	Lower Sioux	Lower Sioux	Lower Sioux Indian Community in the State of Minnesota	\N	\N	\N	2022-11-17 17:07:58.489742	2022-11-17 17:07:58.489677	fa4a64f1-c497-4c99-a2ae-39fe56a585cf	2783
2785	uri://ed-fi.org/TribalAffiliationDescriptor	Lytton	Lytton	Lytton Rancheria of California	\N	\N	\N	2022-11-17 17:07:58.499254	2022-11-17 17:07:58.499205	c8621b04-43fd-40b7-b174-0427d5b1993c	2785
2787	uri://ed-fi.org/TribalAffiliationDescriptor	Manchester	Manchester	Manchester Band of Pomo Indians of the Manchester Rancheria, California	\N	\N	\N	2022-11-17 17:07:58.508423	2022-11-17 17:07:58.508376	72da0fad-ab8c-4b0d-a89c-dee5817da000	2787
2789	uri://ed-fi.org/TribalAffiliationDescriptor	Manokotak	Manokotak	Manokotak Village	\N	\N	\N	2022-11-17 17:07:58.519164	2022-11-17 17:07:58.519106	d8799adc-6bf7-466f-8e88-81cb8d193b3d	2789
2791	uri://ed-fi.org/TribalAffiliationDescriptor	Marshall	Marshall	Native Village of Marshall (aka Fortuna Ledge)	\N	\N	\N	2022-11-17 17:07:58.527757	2022-11-17 17:07:58.527631	67059dc4-bba8-4ab9-b2c7-059cef43b088	2791
2794	uri://ed-fi.org/TribalAffiliationDescriptor	Mashpee	Mashpee	Mashpee Wampanoag Tribe	\N	\N	\N	2022-11-17 17:07:58.539383	2022-11-17 17:07:58.539355	f25a0f93-9516-4176-8942-e12f96865b3f	2794
2796	uri://ed-fi.org/TribalAffiliationDescriptor	Mcgrath	Mcgrath	McGrath Native Village	\N	\N	\N	2022-11-17 17:07:58.550688	2022-11-17 17:07:58.549613	de634635-7a3e-4f4b-94dd-9d41b2240ca3	2796
2798	uri://ed-fi.org/TribalAffiliationDescriptor	Mekoryuk	Mekoryuk	Native Village of Mekoryuk	\N	\N	\N	2022-11-17 17:07:58.55897	2022-11-17 17:07:58.558936	c47e517e-b6ae-499e-83de-a1a3bc9fc46c	2798
2799	uri://ed-fi.org/TribalAffiliationDescriptor	Menominee	Menominee	Menominee Indian Tribe of Wisconsin	\N	\N	\N	2022-11-17 17:07:58.573281	2022-11-17 17:07:58.572594	569ec20f-f943-48ee-bb5d-77f8be41c6b0	2799
2801	uri://ed-fi.org/TribalAffiliationDescriptor	Mesa Grande	Mesa Grande	Mesa Grande Band of Diegueno Mission Indians of the Mesa Grande Reservation, California	\N	\N	\N	2022-11-17 17:07:58.581545	2022-11-17 17:07:58.581485	60ff7cb9-9ba5-4961-adf9-fa1d591c4ea2	2801
2803	uri://ed-fi.org/TribalAffiliationDescriptor	Metlakatla	Metlakatla	Metlakatla Indian Community, Annette Island Reserve	\N	\N	\N	2022-11-17 17:07:58.591431	2022-11-17 17:07:58.591402	58f372a9-d62f-475f-a8b2-0b0c53c6a9a0	2803
2805	uri://ed-fi.org/TribalAffiliationDescriptor	Miccosukee	Miccosukee	Miccosukee Tribe of Indians	\N	\N	\N	2022-11-17 17:07:58.612213	2022-11-17 17:07:58.612169	6c60950d-4f35-4476-93bc-a30666ba17b7	2805
2808	uri://ed-fi.org/TribalAffiliationDescriptor	Mille Lacs	Mille Lacs	Minnesota Chippewa Tribe - Mille Lacs Band	\N	\N	\N	2022-11-17 17:07:58.623346	2022-11-17 17:07:58.623314	32dc249d-75e4-4d8e-bab0-cce88de56c72	2808
2809	uri://ed-fi.org/TribalAffiliationDescriptor	Minnesota Chippewa	Minnesota Chippewa	Minnesota Chippewa Tribe, Minnesota	\N	\N	\N	2022-11-17 17:07:58.628162	2022-11-17 17:07:58.628113	f9969919-dc82-44c1-be88-d298229e8a40	2809
2811	uri://ed-fi.org/TribalAffiliationDescriptor	Mississippi Choctaw	Mississippi Choctaw	Mississippi Band of Choctaw Indians	\N	\N	\N	2022-11-17 17:07:58.636319	2022-11-17 17:07:58.63627	4167a35f-dea4-4c45-89d0-3d29fef6a032	2811
2814	uri://ed-fi.org/TribalAffiliationDescriptor	Mohegan	Mohegan	Mohegan Tribe of Indians of Connecticut	\N	\N	\N	2022-11-17 17:07:58.646648	2022-11-17 17:07:58.646616	48bd9578-f867-407a-80ce-01448ec6ad56	2814
2815	uri://ed-fi.org/TribalAffiliationDescriptor	Monacan Indian Nation	Monacan Indian Nation	Monacan Indian Nation	\N	\N	\N	2022-11-17 17:07:58.655357	2022-11-17 17:07:58.655307	ace9397f-29e7-41c8-84ef-6565cdbbb437	2815
2818	uri://ed-fi.org/TribalAffiliationDescriptor	Muckleshoot	Muckleshoot	Muckleshoot Indian Tribe	\N	\N	\N	2022-11-17 17:07:58.666949	2022-11-17 17:07:58.666917	366f7e66-f7fb-48be-a222-5e85a5e93305	2818
2819	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee (Creek) Nation	Muscogee (Creek) Nation	The Muscogee (Creek) Nation	\N	\N	\N	2022-11-17 17:07:58.671441	2022-11-17 17:07:58.671411	9f6f41c0-353b-4709-b8bc-5e79bf53187f	2819
2822	uri://ed-fi.org/TribalAffiliationDescriptor	Nanwalek	Nanwalek	Native Village of Nanwalek (aka English Bay)	\N	\N	\N	2022-11-17 17:07:58.682167	2022-11-17 17:07:58.682136	bf9bfd46-1f8c-450c-bbc0-005fb38c0f37	2822
2824	uri://ed-fi.org/TribalAffiliationDescriptor	Napakiak	Napakiak	Native Village of Napakiak	\N	\N	\N	2022-11-17 17:07:58.689914	2022-11-17 17:07:58.689885	2db52400-e36c-4be1-a966-e6166a42adf7	2824
2826	uri://ed-fi.org/TribalAffiliationDescriptor	Narragansett	Narragansett	Narragansett Indian Tribe	\N	\N	\N	2022-11-17 17:07:58.697205	2022-11-17 17:07:58.697176	7c270246-d3ea-469e-8b8b-23cce5db91b9	2826
2828	uri://ed-fi.org/TribalAffiliationDescriptor	Navajo	Navajo	Navajo Nation, Arizona, New Mexico & Utah	\N	\N	\N	2022-11-17 17:07:58.705787	2022-11-17 17:07:58.70576	44e2f7b6-0a17-4d83-8886-feb8219c300f	2828
2831	uri://ed-fi.org/TribalAffiliationDescriptor	New Koliganek	New Koliganek	New Koliganek Village Council	\N	\N	\N	2022-11-17 17:07:58.720018	2022-11-17 17:07:58.719988	c4a9a46c-9660-47d0-abc6-1468cc77acbb	2831
2834	uri://ed-fi.org/TribalAffiliationDescriptor	Newtok	Newtok	Newtok Village	\N	\N	\N	2022-11-17 17:07:58.733949	2022-11-17 17:07:58.733921	d7d0abf8-9459-400a-ba0c-c68d6b846d5a	2834
2835	uri://ed-fi.org/TribalAffiliationDescriptor	Nez Perce	Nez Perce	Nez Perce Tribe	\N	\N	\N	2022-11-17 17:07:58.738673	2022-11-17 17:07:58.738585	f686bb66-8c12-4a76-93d1-02cd4574c387	2835
2837	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolai	Nikolai	Nikolai Village	\N	\N	\N	2022-11-17 17:07:58.74663	2022-11-17 17:07:58.746533	618d44fd-de21-40b4-a2d3-cf23ca18fe6a	2837
2839	uri://ed-fi.org/TribalAffiliationDescriptor	Ninilchik	Ninilchik	Ninilchik Village	\N	\N	\N	2022-11-17 17:07:58.757924	2022-11-17 17:07:58.75787	218750c0-ee2f-4e88-b7b3-fad8493dba98	2839
2842	uri://ed-fi.org/TribalAffiliationDescriptor	Nome	Nome	Nome Eskimo Community	\N	\N	\N	2022-11-17 17:07:58.768257	2022-11-17 17:07:58.768231	da10c20f-faec-475c-9d88-6e5786b2e4c1	2842
2843	uri://ed-fi.org/TribalAffiliationDescriptor	Nondalton	Nondalton	Nondalton Village	\N	\N	\N	2022-11-17 17:07:58.773534	2022-11-17 17:07:58.773373	6b70535b-8d00-44d7-8124-c98584ad6b1c	2843
2845	uri://ed-fi.org/TribalAffiliationDescriptor	Noorvik	Noorvik	Noorvik Native Community	\N	\N	\N	2022-11-17 17:07:58.782203	2022-11-17 17:07:58.782116	110774cd-d6cb-4679-97df-903c0730d40a	2845
2847	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Arapaho	Northern Arapaho	Northern Arapaho Tribe of the Wind River Reservation, Wyoming	\N	\N	\N	2022-11-17 17:07:58.790038	2022-11-17 17:07:58.789952	e45e782f-2d77-407d-b03f-acaba3523d31	2847
2849	uri://ed-fi.org/TribalAffiliationDescriptor	Northway	Northway	Northway Village	\N	\N	\N	2022-11-17 17:07:58.821576	2022-11-17 17:07:58.821547	ecd0574b-5eb7-496c-bac9-92292173d3c0	2849
2852	uri://ed-fi.org/TribalAffiliationDescriptor	Nuiqsut	Nuiqsut	Native Village of Nuiqsut (aka Nooiksut)	\N	\N	\N	2022-11-17 17:07:58.838043	2022-11-17 17:07:58.838015	a61990c3-2190-424b-8817-58df8b983227	2852
2854	uri://ed-fi.org/TribalAffiliationDescriptor	Nunakauyarmiut	Nunakauyarmiut	Nunakauyarmiut Tribe	\N	\N	\N	2022-11-17 17:07:58.849079	2022-11-17 17:07:58.84905	857b3d35-891f-4590-a529-107307745f71	2854
2857	uri://ed-fi.org/TribalAffiliationDescriptor	Oglala Sioux	Oglala Sioux	Oglala Sioux Tribe	\N	\N	\N	2022-11-17 17:07:58.87603	2022-11-17 17:07:58.876	a29e65bc-feb8-4567-8715-f6d445f93200	2857
2858	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay Owingeh	Ohkay Owingeh	Ohkay Owingeh, New Mexico	\N	\N	\N	2022-11-17 17:07:58.881063	2022-11-17 17:07:58.881034	bf3406ed-0b82-45dc-9d82-27c1407d28d1	2858
2861	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida	Oneida	Oneida Indian Nation	\N	\N	\N	2022-11-17 17:07:58.891616	2022-11-17 17:07:58.891584	a5fa79f1-9377-463e-a3d0-25269669d647	2861
2864	uri://ed-fi.org/TribalAffiliationDescriptor	Orutsararmiut	Orutsararmiut	Orutsararmiut Traditional Native Council	\N	\N	\N	2022-11-17 17:07:58.91428	2022-11-17 17:07:58.914247	4e6d8d05-2ebd-45a5-9915-a60a45f1a548	2864
2816	uri://ed-fi.org/TribalAffiliationDescriptor	Mooretown	Mooretown	Mooretown Rancheria of Maidu Indians of California	\N	\N	\N	2022-11-17 17:07:58.65808	2022-11-17 17:07:58.658048	7cf3d6c6-70bf-4f79-b7b1-f937fea4f48a	2816
2817	uri://ed-fi.org/TribalAffiliationDescriptor	Morongo	Morongo	Morongo Band of Mission Indians, California	\N	\N	\N	2022-11-17 17:07:58.664009	2022-11-17 17:07:58.663973	f6401884-e6a6-4d3d-8df8-e777ca9157dd	2817
2820	uri://ed-fi.org/TribalAffiliationDescriptor	Naknek	Naknek	Naknek Native Village	\N	\N	\N	2022-11-17 17:07:58.674494	2022-11-17 17:07:58.674473	222045ce-9afe-4149-bf87-70414eea3a5b	2820
2821	uri://ed-fi.org/TribalAffiliationDescriptor	Nansemond Indian Tribe	Nansemond Indian Tribe	Nansemond Indian Nation	\N	\N	\N	2022-11-17 17:07:58.679208	2022-11-17 17:07:58.679162	4f5c3791-7a54-4de0-a056-2e5be90ab95f	2821
2823	uri://ed-fi.org/TribalAffiliationDescriptor	Napaimute	Napaimute	Native Village of Napaimute	\N	\N	\N	2022-11-17 17:07:58.686674	2022-11-17 17:07:58.686646	7a5c50db-759a-40d8-8234-33c6e42cbd2f	2823
2825	uri://ed-fi.org/TribalAffiliationDescriptor	Napaskiak	Napaskiak	Native Village of Napaskiak	\N	\N	\N	2022-11-17 17:07:58.69378	2022-11-17 17:07:58.693748	3c7fa8b8-4421-4131-843e-508f8f37156d	2825
2827	uri://ed-fi.org/TribalAffiliationDescriptor	Native Village of Atqasuk	Native Village of Atqasuk	Native Village of Atqasuk	\N	\N	\N	2022-11-17 17:07:58.70119	2022-11-17 17:07:58.701161	b148b245-5fd2-4090-a212-043be016aa90	2827
2829	uri://ed-fi.org/TribalAffiliationDescriptor	Nelson Lagoon	Nelson Lagoon	Native Village of Nelson Lagoon	\N	\N	\N	2022-11-17 17:07:58.709317	2022-11-17 17:07:58.709289	3dbd51d1-2c24-4795-90a3-5771cf13fe11	2829
2830	uri://ed-fi.org/TribalAffiliationDescriptor	Nenana	Nenana	Nenana Native Association	\N	\N	\N	2022-11-17 17:07:58.71721	2022-11-17 17:07:58.717122	2f102b24-edf2-4c72-b70b-0ad6e9adf787	2830
2832	uri://ed-fi.org/TribalAffiliationDescriptor	New Stuyahok	New Stuyahok	New Stuyahok Village	\N	\N	\N	2022-11-17 17:07:58.724814	2022-11-17 17:07:58.724784	b61bdd44-0438-4015-b675-891f03b55b9c	2832
2833	uri://ed-fi.org/TribalAffiliationDescriptor	Newhalen	Newhalen	Newhalen Village	\N	\N	\N	2022-11-17 17:07:58.731239	2022-11-17 17:07:58.731184	477e4dd3-ee8b-49f8-9585-8baa25db8687	2833
2836	uri://ed-fi.org/TribalAffiliationDescriptor	Nightmute	Nightmute	Native Village of Nightmute	\N	\N	\N	2022-11-17 17:07:58.741522	2022-11-17 17:07:58.741494	44a8bd8d-bd5a-4931-a438-088f4e6c0a4d	2836
2838	uri://ed-fi.org/TribalAffiliationDescriptor	Nikolski	Nikolski	Native Village of Nikolski	\N	\N	\N	2022-11-17 17:07:58.74994	2022-11-17 17:07:58.749911	30f2068d-eece-43ee-9690-c9f39781c738	2838
2840	uri://ed-fi.org/TribalAffiliationDescriptor	Nisqually	Nisqually	Nisqually Indian Tribe	\N	\N	\N	2022-11-17 17:07:58.760413	2022-11-17 17:07:58.760384	cab31aba-60ed-4a87-bcf4-2ea399e55580	2840
2841	uri://ed-fi.org/TribalAffiliationDescriptor	Noatak	Noatak	Native Village of Noatak	\N	\N	\N	2022-11-17 17:07:58.765487	2022-11-17 17:07:58.765427	a5b47a90-201d-4173-bdae-f1dad569d527	2841
2844	uri://ed-fi.org/TribalAffiliationDescriptor	Nooksack	Nooksack	Nooksack Indian Tribe	\N	\N	\N	2022-11-17 17:07:58.776405	2022-11-17 17:07:58.776376	aec55348-110c-44f7-b3bc-2265b9f5c573	2844
2846	uri://ed-fi.org/TribalAffiliationDescriptor	North Fork	North Fork	Northfork Rancheria of Mono Indians of California	\N	\N	\N	2022-11-17 17:07:58.785523	2022-11-17 17:07:58.785493	603cf429-0021-43b0-aa12-3a30e3fa5a40	2846
2848	uri://ed-fi.org/TribalAffiliationDescriptor	Northern Cheyenne	Northern Cheyenne	Northern Cheyenne Tribe of the Northern Cheyenne Indian Reservation, Montana	\N	\N	\N	2022-11-17 17:07:58.793145	2022-11-17 17:07:58.793116	65c33a22-9045-41ff-a29c-c0759ef79af8	2848
2850	uri://ed-fi.org/TribalAffiliationDescriptor	Northwestern Shoshone	Northwestern Shoshone	Northwestern Band of the Shoshone Nation	\N	\N	\N	2022-11-17 17:07:58.826287	2022-11-17 17:07:58.826253	2790585a-ed96-405a-9f71-d8a3031839ca	2850
2851	uri://ed-fi.org/TribalAffiliationDescriptor	Nottawaseppi Potawatomi	Nottawaseppi Potawatomi	Nottawaseppi Huron Band of the Potawatomi, Michigan	\N	\N	\N	2022-11-17 17:07:58.835286	2022-11-17 17:07:58.835196	00f66769-ad21-437f-a3d6-5d21c7eb3ee9	2851
2853	uri://ed-fi.org/TribalAffiliationDescriptor	Nulato	Nulato	Nulato Village	\N	\N	\N	2022-11-17 17:07:58.846097	2022-11-17 17:07:58.846008	9b292926-a562-495f-99d9-49cd38f267e5	2853
2855	uri://ed-fi.org/TribalAffiliationDescriptor	Nunam Iqua	Nunam Iqua	Native Village of Nunam Iqua	\N	\N	\N	2022-11-17 17:07:58.853806	2022-11-17 17:07:58.853777	e6195ae4-fad0-4dbd-946f-cba21f96595f	2855
2856	uri://ed-fi.org/TribalAffiliationDescriptor	Nunapitchuk	Nunapitchuk	Native Village of Nunapitchuk	\N	\N	\N	2022-11-17 17:07:58.873398	2022-11-17 17:07:58.873265	c5b22c18-f5d9-4cc9-8d24-b91a28cc837f	2856
2859	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamiut	Ohogamiut	Village of Ohogamiut	\N	\N	\N	2022-11-17 17:07:58.883977	2022-11-17 17:07:58.883946	b271de21-77d4-49d3-ab24-e7161b7c2716	2859
2860	uri://ed-fi.org/TribalAffiliationDescriptor	Omaha	Omaha	Omaha Tribe of Nebraska	\N	\N	\N	2022-11-17 17:07:58.888736	2022-11-17 17:07:58.888707	e416aff2-be88-44a6-8f3a-ed34a801a377	2860
2862	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida Nation (Wisconsin)	Oneida Nation (Wisconsin)	Oneida Nation	\N	\N	\N	2022-11-17 17:07:58.89615	2022-11-17 17:07:58.896119	11503850-fcd1-421b-b4fd-392fdf9ca52d	2862
2863	uri://ed-fi.org/TribalAffiliationDescriptor	Onondaga	Onondaga	Onondaga Nation	\N	\N	\N	2022-11-17 17:07:58.911115	2022-11-17 17:07:58.911086	f1d1d6de-ccbb-44c2-a5f6-ba87018fc658	2863
2866	uri://ed-fi.org/TribalAffiliationDescriptor	Oscarville	Oscarville	Oscarville Traditional Village	\N	\N	\N	2022-11-17 17:07:58.922258	2022-11-17 17:07:58.922226	e889b3ab-28ae-4118-be70-8d160509772f	2866
2869	uri://ed-fi.org/TribalAffiliationDescriptor	Ouzinkie	Ouzinkie	Native Village of Ouzinkie	\N	\N	\N	2022-11-17 17:07:58.951648	2022-11-17 17:07:58.951616	0be2ee06-0b6e-425d-9d2a-48bdd1f536d3	2869
2872	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute-Shoshone	Paiute-Shoshone	Paiute-Shoshone Tribe of the Fallon Reservation and Colony, Nevada	\N	\N	\N	2022-11-17 17:07:58.985176	2022-11-17 17:07:58.985145	e07ddf8f-c1d3-4e7b-ac10-9d39fb5c0cf2	2872
2873	uri://ed-fi.org/TribalAffiliationDescriptor	Pala	Pala	Pala Band of Mission Indians	\N	\N	\N	2022-11-17 17:07:58.989931	2022-11-17 17:07:58.989903	41266950-a3cb-4ea5-96c4-d2164475f458	2873
2875	uri://ed-fi.org/TribalAffiliationDescriptor	Pascua Yaqui	Pascua Yaqui	Pascua Yaqui Tribe of Arizona	\N	\N	\N	2022-11-17 17:07:58.997395	2022-11-17 17:07:58.997364	47b66c31-5987-49b2-a987-2becda39a90d	2875
2876	uri://ed-fi.org/TribalAffiliationDescriptor	Paskenta	Paskenta	Paskenta Band of Nomlaki Indians of California	\N	\N	\N	2022-11-17 17:07:59.004926	2022-11-17 17:07:59.004872	2a5c377a-9e6c-4fc1-b213-f261598f61cd	2876
2878	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Pleasant Point	Passamaquoddy Pleasant Point	Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	2022-11-17 17:07:59.012222	2022-11-17 17:07:59.012193	0522315b-2f93-489c-879d-d31ab4aa4ad5	2878
2880	uri://ed-fi.org/TribalAffiliationDescriptor	Pauloff Harbor	Pauloff Harbor	Pauloff Harbor Village	\N	\N	\N	2022-11-17 17:07:59.019941	2022-11-17 17:07:59.019909	b8b9fa69-a4d4-4b38-acca-c31a19c2be80	2880
2881	uri://ed-fi.org/TribalAffiliationDescriptor	Pauma	Pauma	Pauma Band of Luiseno Mission Indians of the Pauma & Yuima Reservation, California	\N	\N	\N	2022-11-17 17:07:59.040733	2022-11-17 17:07:59.040666	99de1162-e540-499e-a8a8-a1499635877a	2881
2883	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga Band of Indians 	Pechanga Band of Indians 	Pechanga Band of Indians	\N	\N	\N	2022-11-17 17:07:59.048234	2022-11-17 17:07:59.048203	ba7c11fc-1d45-4e57-a277-8f6295a833e3	2883
2885	uri://ed-fi.org/TribalAffiliationDescriptor	Penobscot	Penobscot	Penobscot Nation	\N	\N	\N	2022-11-17 17:07:59.058476	2022-11-17 17:07:59.058445	0fec8308-b459-4845-bba8-11a8b794329b	2885
2886	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria Tribe of Oklahoma	Peoria Tribe of Oklahoma	Peoria Tribe of Indians of Oklahoma	\N	\N	\N	2022-11-17 17:07:59.063943	2022-11-17 17:07:59.06388	b276eaf0-df58-4848-8c34-f89fd1923e34	2886
2889	uri://ed-fi.org/TribalAffiliationDescriptor	Picayune	Picayune	Picayune Rancheria of Chukchansi Indians of California	\N	\N	\N	2022-11-17 17:07:59.09422	2022-11-17 17:07:59.094188	1fbda07f-956b-4f56-8458-1a6089b8b189	2889
2891	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Station	Pilot Station	Pilot Station Traditional Village	\N	\N	\N	2022-11-17 17:07:59.110924	2022-11-17 17:07:59.110893	edc46e47-854b-4506-a3f7-9f81085c32b0	2891
2892	uri://ed-fi.org/TribalAffiliationDescriptor	Pinoleville	Pinoleville	Pinoleville Pomo Nation, California	\N	\N	\N	2022-11-17 17:07:59.142582	2022-11-17 17:07:59.142517	03b47e88-e562-495b-ae34-85e183c27c75	2892
2894	uri://ed-fi.org/TribalAffiliationDescriptor	Pitka's Point	Pitka's Point	Pitka's Point Traditional Council	\N	\N	\N	2022-11-17 17:07:59.150279	2022-11-17 17:07:59.150252	ea38cc3d-d435-4839-a556-365dfbd2d94c	2894
3145	uri://ed-fi.org/WeaponDescriptor	Other Firearm	Other Firearm	Other Firearm	\N	\N	\N	2022-11-17 17:08:00.682761	2022-11-17 17:08:00.682729	f2364301-5911-469f-85f9-573ff8640d11	3145
2865	uri://ed-fi.org/TribalAffiliationDescriptor	Osage Nation	Osage Nation	The Osage Nation	\N	\N	\N	2022-11-17 17:07:58.91937	2022-11-17 17:07:58.919341	0b9de9ef-c732-43d2-baba-9d2af287753d	2865
2867	uri://ed-fi.org/TribalAffiliationDescriptor	Otoe-Missouria	Otoe-Missouria	Otoe-Missouria Tribe of Indians, Oklahoma	\N	\N	\N	2022-11-17 17:07:58.926801	2022-11-17 17:07:58.92677	3213d1d8-21a2-4da2-849d-6feb2ea44572	2867
2868	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa Tribe of Oklahoma	Ottawa Tribe of Oklahoma	Ottawa Tribe of Oklahoma	\N	\N	\N	2022-11-17 17:07:58.948955	2022-11-17 17:07:58.948905	26b7523e-d928-4536-bf0b-0434c6dc98eb	2868
2870	uri://ed-fi.org/TribalAffiliationDescriptor	Paimiut	Paimiut	Native Village of Paimiut	\N	\N	\N	2022-11-17 17:07:58.961104	2022-11-17 17:07:58.961073	1eafd0b5-9bc6-49fb-bde5-ae4afc393161	2870
2871	uri://ed-fi.org/TribalAffiliationDescriptor	Paiute of Utah	Paiute of Utah	Paiute Indian Tribe of Utah (Cedar Band of Paiutes, Kanosh Band of Paiutes, Koosharem Band of Paiutes, Indian Peaks Band of Paiutes, and Shivwits Band of Paiutes)	\N	\N	\N	2022-11-17 17:07:58.982484	2022-11-17 17:07:58.982432	af7dca74-8930-4cc2-b674-4b20f35cc974	2871
2874	uri://ed-fi.org/TribalAffiliationDescriptor	Pamunkey Indian Tribe	Pamunkey Indian Tribe	Pamunkey Indian Tribe	\N	\N	\N	2022-11-17 17:07:58.992866	2022-11-17 17:07:58.992834	6d7e39b7-0f9b-49eb-8aa5-fe3c91cc4ca5	2874
2877	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Indian Township	Passamaquoddy Indian Township	Passamaquoddy Tribe - Indian Township	\N	\N	\N	2022-11-17 17:07:59.007725	2022-11-17 17:07:59.007695	1a0e8bf8-265b-40b2-9940-59463c005239	2877
2879	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquoddy Tribe	Passamaquoddy Tribe	Passamaquoddy Tribe	\N	\N	\N	2022-11-17 17:07:59.015311	2022-11-17 17:07:59.015279	34f395db-37c5-4f56-99e8-561a1f18b503	2879
2882	uri://ed-fi.org/TribalAffiliationDescriptor	Pawnee	Pawnee	Pawnee Nation of Oklahoma	\N	\N	\N	2022-11-17 17:07:59.043486	2022-11-17 17:07:59.043453	7b7e025d-2a91-465a-ba01-a7918146c513	2882
2884	uri://ed-fi.org/TribalAffiliationDescriptor	Pedro Bay	Pedro Bay	Pedro Bay Village	\N	\N	\N	2022-11-17 17:07:59.056338	2022-11-17 17:07:59.056304	5da96cba-64bd-4d13-bff7-7d4f0df46139	2884
2887	uri://ed-fi.org/TribalAffiliationDescriptor	Perryville	Perryville	Native Village of Perryville	\N	\N	\N	2022-11-17 17:07:59.066763	2022-11-17 17:07:59.066731	59dcba62-2889-46b9-913c-c1f203a42973	2887
2888	uri://ed-fi.org/TribalAffiliationDescriptor	Petersburg	Petersburg	Petersburg Indian Association	\N	\N	\N	2022-11-17 17:07:59.091341	2022-11-17 17:07:59.091292	aba86136-9daf-417c-b539-6b85e51abda2	2888
2890	uri://ed-fi.org/TribalAffiliationDescriptor	Pilot Point	Pilot Point	Native Village of Pilot Point	\N	\N	\N	2022-11-17 17:07:59.099129	2022-11-17 17:07:59.099098	4c215365-6f86-4f06-919d-61e4e381b228	2890
2893	uri://ed-fi.org/TribalAffiliationDescriptor	Pit River	Pit River	Pit River Tribe, California	\N	\N	\N	2022-11-17 17:07:59.145688	2022-11-17 17:07:59.145656	f95611eb-c4c2-4d76-9d8c-09f5f73f861c	2893
2895	uri://ed-fi.org/TribalAffiliationDescriptor	Platinum	Platinum	Platinum Traditional Village	\N	\N	\N	2022-11-17 17:07:59.153413	2022-11-17 17:07:59.15338	2a3769dc-0cf5-443a-80c4-4636a4db214b	2895
2897	uri://ed-fi.org/TribalAffiliationDescriptor	Point Hope IRA	Point Hope IRA	Native Village of Point Hope	\N	\N	\N	2022-11-17 17:07:59.161271	2022-11-17 17:07:59.161239	699fe8bc-3469-4ca7-aed6-c1251c30c148	2897
2899	uri://ed-fi.org/TribalAffiliationDescriptor	Pokagon	Pokagon	Pokagon Band of Potawatomi Indians, Michigan and Indiana	\N	\N	\N	2022-11-17 17:07:59.185747	2022-11-17 17:07:59.185716	f367c194-20ef-4d89-a83b-69e0a48ea08d	2899
2902	uri://ed-fi.org/TribalAffiliationDescriptor	Port Gamble	Port Gamble	Port Gamble S'Klallam Tribe	\N	\N	\N	2022-11-17 17:07:59.21736	2022-11-17 17:07:59.217331	eec325c1-f546-4202-aa02-d0a09748818c	2902
2905	uri://ed-fi.org/TribalAffiliationDescriptor	Port Lions	Port Lions	Native Village of Port Lions	\N	\N	\N	2022-11-17 17:07:59.239836	2022-11-17 17:07:59.239804	59ae1923-7ba3-4e87-afb1-1b3d964e1629	2905
2906	uri://ed-fi.org/TribalAffiliationDescriptor	Portage Creek	Portage Creek	Portage Creek Village (aka Ohgsenakale)	\N	\N	\N	2022-11-17 17:07:59.244728	2022-11-17 17:07:59.244611	4596077b-7d56-40bd-a720-bfb99747b415	2906
2909	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Island	Prairie Island	Prairie Island Indian Community in the State of Minnesota	\N	\N	\N	2022-11-17 17:07:59.25573	2022-11-17 17:07:59.255698	bd520041-858e-4cf1-84da-cdadf3307a94	2909
2910	uri://ed-fi.org/TribalAffiliationDescriptor	Pribilof Islands Aleut Communities	Pribilof Islands Aleut Communities	Pribilof Islands Aleut Communities	\N	\N	\N	2022-11-17 17:07:59.260399	2022-11-17 17:07:59.26037	2eb4b1d5-b40d-443a-b20f-54b077e89519	2910
2912	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Cochiti	Pueblo of Cochiti	Pueblo of Cochiti, New Mexico	\N	\N	\N	2022-11-17 17:07:59.267963	2022-11-17 17:07:59.267912	4405d43d-e054-47ce-99cf-0be1efab1ef2	2912
2915	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Laguna	Pueblo of Laguna	Pueblo of Laguna, New Mexico	\N	\N	\N	2022-11-17 17:07:59.282336	2022-11-17 17:07:59.282305	9d4f55fd-bcb2-4a77-9cb4-0d74be5a9edb	2915
2916	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Nambe	Pueblo of Nambe	Pueblo of Nambe, New Mexico	\N	\N	\N	2022-11-17 17:07:59.286971	2022-11-17 17:07:59.286883	b3192031-3441-407f-a915-565ad626586b	2916
2918	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Pojoaque	Pueblo of Pojoaque	Pueblo of Pojoaque, New Mexico	\N	\N	\N	2022-11-17 17:07:59.294698	2022-11-17 17:07:59.29465	e2ef6d65-b222-4349-b898-5559f372514d	2918
2920	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Ildefonso	Pueblo of San Ildefonso	Pueblo of San Ildefonso, New Mexico	\N	\N	\N	2022-11-17 17:07:59.302123	2022-11-17 17:07:59.302092	839c670b-dd08-44f5-8567-f52d2553667d	2920
2922	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Ana	Pueblo of Santa Ana	Pueblo of Santa Ana, New Mexico	\N	\N	\N	2022-11-17 17:07:59.312542	2022-11-17 17:07:59.31251	4ef1c1bb-e981-4f82-81b1-50be5d2bb76d	2922
2925	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Tesuque	Pueblo of Tesuque	Pueblo of Tesuque, New Mexico	\N	\N	\N	2022-11-17 17:07:59.33295	2022-11-17 17:07:59.332919	cd565e4b-8d0b-42b9-a427-63ef906bed3d	2925
2926	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zia	Pueblo of Zia	Pueblo of Zia, New Mexico	\N	\N	\N	2022-11-17 17:07:59.337633	2022-11-17 17:07:59.33759	cbb0ffd8-4142-4120-8799-e345d12565dd	2926
2929	uri://ed-fi.org/TribalAffiliationDescriptor	Pyramid Lake	Pyramid Lake	Pyramid Lake Paiute Tribe of the Pyramid Lake Reservation, Nevada	\N	\N	\N	2022-11-17 17:07:59.348078	2022-11-17 17:07:59.348046	dfb6ec2c-cf82-48c0-8693-8684bbd501e2	2929
2931	uri://ed-fi.org/TribalAffiliationDescriptor	Qawalangin	Qawalangin	Qawalangin Tribe of Unalaska	\N	\N	\N	2022-11-17 17:07:59.355534	2022-11-17 17:07:59.355503	0e15f28c-2589-4b5b-bd82-7b4bdf877c17	2931
2934	uri://ed-fi.org/TribalAffiliationDescriptor	Quechan	Quechan	Quechan Tribe of the Fort Yuma Indian Reservation, California & Arizona	\N	\N	\N	2022-11-17 17:07:59.392753	2022-11-17 17:07:59.392721	2f7b0d8f-f652-440d-864d-c64d59ab7888	2934
2936	uri://ed-fi.org/TribalAffiliationDescriptor	Quinault	Quinault	Quinault Indian Nation	\N	\N	\N	2022-11-17 17:07:59.4039	2022-11-17 17:07:59.403866	c4b7e4ea-aeb0-46c1-ba2f-67133ca029ef	2936
2938	uri://ed-fi.org/TribalAffiliationDescriptor	Ramona	Ramona	Ramona Band of Cahuilla, California	\N	\N	\N	2022-11-17 17:07:59.411668	2022-11-17 17:07:59.411621	e8e7c7e5-4c48-4a1d-91e1-a0f3ff7fdb4b	2938
2940	uri://ed-fi.org/TribalAffiliationDescriptor	Rappahannock Tribe, Inc.	Rappahannock Tribe, Inc.	Rappahannock Tribe, Inc.	\N	\N	\N	2022-11-17 17:07:59.419304	2022-11-17 17:07:59.419279	bca0e346-547c-4cca-8fe6-04bd42e1050e	2940
2943	uri://ed-fi.org/TribalAffiliationDescriptor	Red Lake	Red Lake	Red Lake Band of Chippewa Indians, Minnesota	\N	\N	\N	2022-11-17 17:07:59.430214	2022-11-17 17:07:59.430184	74a76a6f-a038-489f-a7f2-f5698e32917b	2943
2944	uri://ed-fi.org/TribalAffiliationDescriptor	Redding	Redding	Redding Rancheria, California	\N	\N	\N	2022-11-17 17:07:59.434835	2022-11-17 17:07:59.434746	429fb5da-ea63-4493-afb1-9c71e22cc642	2944
2946	uri://ed-fi.org/TribalAffiliationDescriptor	Reno-Sparks	Reno-Sparks	Reno-Sparks Indian Colony, Nevada	\N	\N	\N	2022-11-17 17:07:59.442575	2022-11-17 17:07:59.442522	11953a3d-b6b2-47f4-aa2f-2ebd015509c0	2946
2949	uri://ed-fi.org/TribalAffiliationDescriptor	Robinson	Robinson	Robinson Rancheria	\N	\N	\N	2022-11-17 17:07:59.452951	2022-11-17 17:07:59.452922	dd98b92d-a284-4c02-b79b-332f1615bb9c	2949
2950	uri://ed-fi.org/TribalAffiliationDescriptor	Rosebud	Rosebud	Rosebud Sioux Tribe of the Rosebud Indian Reservation, South Dakota	\N	\N	\N	2022-11-17 17:07:59.45809	2022-11-17 17:07:59.458034	5a22f9e6-6889-494c-8fcc-e40bb1c8fc99	2950
2952	uri://ed-fi.org/TribalAffiliationDescriptor	Ruby	Ruby	Native Village of Ruby	\N	\N	\N	2022-11-17 17:07:59.466047	2022-11-17 17:07:59.465984	397026a5-9609-43e7-862e-12501e3f742a	2952
2896	uri://ed-fi.org/TribalAffiliationDescriptor	Poarch	Poarch	Poarch Band of Creek Indians	\N	\N	\N	2022-11-17 17:07:59.157945	2022-11-17 17:07:59.157895	d5f61aed-b32e-41f8-b8ce-04c1604a54cd	2896
2898	uri://ed-fi.org/TribalAffiliationDescriptor	Point Lay IRA	Point Lay IRA	Native Village of Point Lay	\N	\N	\N	2022-11-17 17:07:59.181367	2022-11-17 17:07:59.181335	d0a1212d-9d2c-42e8-a37f-952022ac516f	2898
2900	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Nebraska	Ponca of Nebraska	Ponca Tribe of Nebraska	\N	\N	\N	2022-11-17 17:07:59.188927	2022-11-17 17:07:59.188895	ca07a1a3-fec5-4da9-b338-7a58f5a80298	2900
2901	uri://ed-fi.org/TribalAffiliationDescriptor	Ponca of Oklahoma	Ponca of Oklahoma	Ponca Tribe of Indians of Oklahoma	\N	\N	\N	2022-11-17 17:07:59.214621	2022-11-17 17:07:59.214571	3f576328-b675-4f82-9d39-9786fda44c18	2901
2903	uri://ed-fi.org/TribalAffiliationDescriptor	Port Graham	Port Graham	Native Village of Port Graham	\N	\N	\N	2022-11-17 17:07:59.222812	2022-11-17 17:07:59.222781	91d958a9-7dfd-41af-9dc8-43979a640ea1	2903
2904	uri://ed-fi.org/TribalAffiliationDescriptor	Port Heiden	Port Heiden	Native Village of Port Heiden	\N	\N	\N	2022-11-17 17:07:59.237038	2022-11-17 17:07:59.236946	49e59b8c-5791-4928-aaac-c6a1e3d6c187	2904
2907	uri://ed-fi.org/TribalAffiliationDescriptor	Potter Valley	Potter Valley	Potter Valley Tribe, California	\N	\N	\N	2022-11-17 17:07:59.247486	2022-11-17 17:07:59.247453	ebf9e4d4-d432-48ce-97a1-db190ba8d2e5	2907
2908	uri://ed-fi.org/TribalAffiliationDescriptor	Prairie Band	Prairie Band	Prairie Band Potawatomi Nation	\N	\N	\N	2022-11-17 17:07:59.252693	2022-11-17 17:07:59.252665	277509dd-3fdc-42ae-b1fe-14b330001ba7	2908
2911	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Acoma	Pueblo of Acoma	Pueblo of Acoma, New Mexico	\N	\N	\N	2022-11-17 17:07:59.263332	2022-11-17 17:07:59.2633	c76999e5-ff4c-42dc-b215-583ed0aee669	2911
2913	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Isleta	Pueblo of Isleta	Pueblo of Isleta, New Mexico	\N	\N	\N	2022-11-17 17:07:59.271291	2022-11-17 17:07:59.271259	cdd2ac83-0930-4de6-a83c-2ed861bbd8a6	2913
2914	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Jemez	Pueblo of Jemez	Pueblo of Jemez, New Mexico	\N	\N	\N	2022-11-17 17:07:59.279443	2022-11-17 17:07:59.279415	e361f3e9-562c-4744-b359-8936ecebc340	2914
2917	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Picuris	Pueblo of Picuris	Pueblo of Picuris, New Mexico	\N	\N	\N	2022-11-17 17:07:59.28982	2022-11-17 17:07:59.289787	0b904e6d-f74b-4798-9adb-d5c1dda45cf8	2917
2919	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of San Felipe	Pueblo of San Felipe	Pueblo of San Felipe, New Mexico	\N	\N	\N	2022-11-17 17:07:59.297335	2022-11-17 17:07:59.297301	cd4b3e16-9131-4288-8256-fbdcc7aae557	2919
2921	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Sandia	Pueblo of Sandia	Pueblo of Sandia, New Mexico	\N	\N	\N	2022-11-17 17:07:59.309145	2022-11-17 17:07:59.309117	15957883-01ab-4ffd-8f79-af9294d5cd4c	2921
2923	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Santa Clara	Pueblo of Santa Clara	Pueblo of Santa Clara, New Mexico	\N	\N	\N	2022-11-17 17:07:59.316911	2022-11-17 17:07:59.316877	e4a94822-4aa1-47ae-9d4d-24b660865fa9	2923
2924	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Taos	Pueblo of Taos	Pueblo of Taos, New Mexico	\N	\N	\N	2022-11-17 17:07:59.329984	2022-11-17 17:07:59.329954	fc8ee363-49c0-4779-861e-e32d96afdeab	2924
2927	uri://ed-fi.org/TribalAffiliationDescriptor	Pueblo of Zuni	Pueblo of Zuni	Zuni Tribe of the Zuni Reservation, New Mexico	\N	\N	\N	2022-11-17 17:07:59.340378	2022-11-17 17:07:59.340345	df64f206-0d4c-4fcd-be43-15511606f25f	2927
2928	uri://ed-fi.org/TribalAffiliationDescriptor	Puyallup	Puyallup	Puyallup Tribe of the Puyallup Reservation	\N	\N	\N	2022-11-17 17:07:59.345163	2022-11-17 17:07:59.345134	79a84f10-4c5e-4741-959c-f7902af97f85	2928
2930	uri://ed-fi.org/TribalAffiliationDescriptor	Qagan Tayagungin	Qagan Tayagungin	Qagan Tayagungin Tribe of Sand Point	\N	\N	\N	2022-11-17 17:07:59.352336	2022-11-17 17:07:59.352244	674288d7-87bd-4ff2-b4e0-ad8e4bafa060	2930
2932	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw Tribe	Quapaw Tribe	Quapaw Nation	\N	\N	\N	2022-11-17 17:07:59.382025	2022-11-17 17:07:59.381994	3bb3f231-6cf0-4f57-8542-8d8a583335d7	2932
2933	uri://ed-fi.org/TribalAffiliationDescriptor	Quartz Valley	Quartz Valley	Quartz Valley Indian Community of the Quartz Valley Reservation of California	\N	\N	\N	2022-11-17 17:07:59.390001	2022-11-17 17:07:59.389956	382fb7f3-050b-48f1-89d3-5ea6dea70c22	2933
2935	uri://ed-fi.org/TribalAffiliationDescriptor	Quileute	Quileute	Quileute Tribe of the Quileute Reservation	\N	\N	\N	2022-11-17 17:07:59.398036	2022-11-17 17:07:59.398007	203b5f40-679d-4c67-beb1-3ff1a0f2850f	2935
2937	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah Navajo Chapter	Ramah Navajo Chapter	Ramah Navajo Chapter of the Navajo Nation	\N	\N	\N	2022-11-17 17:07:59.407851	2022-11-17 17:07:59.407826	94a514c6-09f5-4fce-86ee-9c744002fd2d	2937
2939	uri://ed-fi.org/TribalAffiliationDescriptor	Rampart	Rampart	Rampart Village	\N	\N	\N	2022-11-17 17:07:59.415027	2022-11-17 17:07:59.414997	4e8c4f53-e6ea-473c-8dd1-ec70a73d0f0a	2939
2941	uri://ed-fi.org/TribalAffiliationDescriptor	Red Cliff	Red Cliff	Red Cliff Band of Lake Superior Chippewa Indians of Wisconsin	\N	\N	\N	2022-11-17 17:07:59.422461	2022-11-17 17:07:59.422432	fd49555c-b4aa-49aa-a997-0c923b152342	2941
2942	uri://ed-fi.org/TribalAffiliationDescriptor	Red Devil	Red Devil	Village of Red Devil	\N	\N	\N	2022-11-17 17:07:59.427197	2022-11-17 17:07:59.427151	773199a3-1d13-40d9-b93e-34b78e63077c	2942
2945	uri://ed-fi.org/TribalAffiliationDescriptor	Redwood Valley	Redwood Valley	Redwood Valley or Little River Band of Pomo Indians of the Redwood Valley Rancheria California	\N	\N	\N	2022-11-17 17:07:59.437569	2022-11-17 17:07:59.43754	db822fad-6049-43b3-9feb-e29dcd97edaa	2945
2947	uri://ed-fi.org/TribalAffiliationDescriptor	Resighini	Resighini	Resighini Rancheria, California	\N	\N	\N	2022-11-17 17:07:59.445116	2022-11-17 17:07:59.445085	74229505-20d5-4503-8301-0563544a82ff	2947
2948	uri://ed-fi.org/TribalAffiliationDescriptor	Rincon	Rincon	Rincon Band of Luiseno Mission Indians of the Rincon Reservation, California	\N	\N	\N	2022-11-17 17:07:59.450218	2022-11-17 17:07:59.450138	2567ef94-e464-460e-9c9f-d755e6f18087	2948
2951	uri://ed-fi.org/TribalAffiliationDescriptor	Round Valley	Round Valley	Round Valley Indian Tribes, Round Valley Reservation, California	\N	\N	\N	2022-11-17 17:07:59.460834	2022-11-17 17:07:59.460803	c70b69a4-4957-4a24-b351-d2dc6fbb7b21	2951
2953	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox Nation of Missouri in KS & NE	Sac & Fox Nation of Missouri in Kansas and Nebraska	Sac & Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	2022-11-17 17:07:59.468548	2022-11-17 17:07:59.468516	aaca652f-ab36-4192-a314-613345026e03	2953
2954	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox Nation, Oklahoma	Sac & Fox Nation, Oklahoma	Sac & Fox Nation, Oklahoma	\N	\N	\N	2022-11-17 17:07:59.473958	2022-11-17 17:07:59.47387	d0107152-3f6e-4a7c-88fb-77eb01572126	2954
2957	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Paul	Saint Paul	Saint Paul Island	\N	\N	\N	2022-11-17 17:07:59.484666	2022-11-17 17:07:59.484637	3dcd263d-35dc-4b9f-b5a7-15ee9e3fc707	2957
2959	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatof	Salamatof	Salamatof Tribe	\N	\N	\N	2022-11-17 17:07:59.492601	2022-11-17 17:07:59.492538	a3447aab-ba27-4086-b0d1-33a128ac91c0	2959
2961	uri://ed-fi.org/TribalAffiliationDescriptor	Samish	Samish	Samish Indian Nation	\N	\N	\N	2022-11-17 17:07:59.501529	2022-11-17 17:07:59.501496	7470ab9b-7190-4731-860c-da98d2ecce40	2961
2963	uri://ed-fi.org/TribalAffiliationDescriptor	San Juan	San Juan	San Juan Southern Paiute Tribe of Arizona	\N	\N	\N	2022-11-17 17:07:59.510319	2022-11-17 17:07:59.51029	be6a048a-5431-40af-9cad-ef36ef180625	2963
2965	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa	Santa Rosa	Santa Rosa Indian Community of the Santa Rosa Rancheria, California	\N	\N	\N	2022-11-17 17:07:59.517865	2022-11-17 17:07:59.517836	42c26455-16cc-4b65-a41f-fdb6c327483a	2965
2967	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Ynez	Santa Ynez	Santa Ynez Band of Chumash Mission Indians of the Santa Ynez Reservation, California	\N	\N	\N	2022-11-17 17:07:59.525904	2022-11-17 17:07:59.525875	9c1a1da4-27ad-4669-a926-ba3a0ec0ba6a	2967
2969	uri://ed-fi.org/TribalAffiliationDescriptor	Santo Domingo	Santo Domingo	Santo Domingo Pueblo	\N	\N	\N	2022-11-17 17:07:59.533996	2022-11-17 17:07:59.53397	ed94191f-54c6-4a4d-bc00-be0a31a629de	2969
2971	uri://ed-fi.org/TribalAffiliationDescriptor	Sault Ste. Marie	Sault Ste. Marie	Sault Ste. Marie Tribe of Chippewa Indians, Michigan	\N	\N	\N	2022-11-17 17:07:59.54197	2022-11-17 17:07:59.541941	4ab4d0ed-1825-4e79-8974-d1620baa940b	2971
2972	uri://ed-fi.org/TribalAffiliationDescriptor	Savoonga	Savoonga	Native Village of Savoonga	\N	\N	\N	2022-11-17 17:07:59.549535	2022-11-17 17:07:59.549475	f863dcc2-4433-4d98-b5b2-7a108a6d2656	2972
2955	uri://ed-fi.org/TribalAffiliationDescriptor	Sac & Fox of Mississippi	Sac & Fox of Mississippi	Sac & Fox Tribe of the Mississippi in Iowa	\N	\N	\N	2022-11-17 17:07:59.476886	2022-11-17 17:07:59.476856	cb36fcda-edbd-43a5-9ce9-fbb21ad9def1	2955
2956	uri://ed-fi.org/TribalAffiliationDescriptor	Saginaw Chippewa	Saginaw Chippewa	Saginaw Chippewa Indian Tribe of Michigan	\N	\N	\N	2022-11-17 17:07:59.481851	2022-11-17 17:07:59.481786	0e3b3ef0-7965-4f8f-8244-15a472136f56	2956
2958	uri://ed-fi.org/TribalAffiliationDescriptor	Saint Regis	Saint Regis	Saint Regis Mohawk Tribe	\N	\N	\N	2022-11-17 17:07:59.491534	2022-11-17 17:07:59.491457	acb6176b-e2d2-4abc-bd74-c2ccfa0674c9	2958
2960	uri://ed-fi.org/TribalAffiliationDescriptor	Salt River	Salt River	Salt River Pima-Maricopa Indian Community of the Salt River Reservation, Arizona	\N	\N	\N	2022-11-17 17:07:59.499369	2022-11-17 17:07:59.499122	cc2cd892-f366-4f69-b954-762aecb18e9f	2960
2962	uri://ed-fi.org/TribalAffiliationDescriptor	San Carlos	San Carlos	San Carlos Apache Tribe of the San Carlos Reservation, Arizona	\N	\N	\N	2022-11-17 17:07:59.507181	2022-11-17 17:07:59.507096	b07ae178-544a-46d3-9c8d-6d242cb1c392	2962
2964	uri://ed-fi.org/TribalAffiliationDescriptor	San Pasqual	San Pasqual	San Pasqual Band of Diegueno Mission Indians of California	\N	\N	\N	2022-11-17 17:07:59.514607	2022-11-17 17:07:59.514577	5046a65b-2575-4262-898c-f99e60e94895	2964
2966	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Cahuilla	Santa Rosa of Cahuilla	Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	2022-11-17 17:07:59.523239	2022-11-17 17:07:59.523185	42b33b96-2ddc-408f-a442-40f10b2100ef	2966
2968	uri://ed-fi.org/TribalAffiliationDescriptor	Santee Sioux	Santee Sioux	Santee Sioux Nation, Nebraska	\N	\N	\N	2022-11-17 17:07:59.531207	2022-11-17 17:07:59.531147	a649dbe5-5196-4bb8-8a72-36d8990bdb78	2968
2970	uri://ed-fi.org/TribalAffiliationDescriptor	Sauk-Suiattle	Sauk-Suiattle	Sauk-Suiattle Indian Tribe	\N	\N	\N	2022-11-17 17:07:59.538663	2022-11-17 17:07:59.538565	45d5a4b5-24ec-42f4-bc39-fd6b3f5ecb4e	2970
2973	uri://ed-fi.org/TribalAffiliationDescriptor	Saxman	Saxman	Organized Village of Saxman	\N	\N	\N	2022-11-17 17:07:59.552407	2022-11-17 17:07:59.552377	5c38e0ff-1767-4ff4-8350-779e8e95592b	2973
2975	uri://ed-fi.org/TribalAffiliationDescriptor	Scotts Valley	Scotts Valley	Scotts Valley Band of Pomo Indians of California	\N	\N	\N	2022-11-17 17:07:59.564244	2022-11-17 17:07:59.564168	ca9fc835-53cf-44b7-8730-e00398591db5	2975
2978	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole	Seminole	Seminole Tribe of Florida	\N	\N	\N	2022-11-17 17:07:59.575278	2022-11-17 17:07:59.575248	c5a30503-3f64-4a04-ab49-38c8c735fa61	2978
2979	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole Nation of Oklahoma	Seminole Nation of Oklahoma	The Seminole Nation of Oklahoma	\N	\N	\N	2022-11-17 17:07:59.580544	2022-11-17 17:07:59.580375	d7385256-2072-4e80-874e-4f3e978b0cdd	2979
2981	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga Nation	Seneca-Cayuga Nation	Seneca-Cayuga Nation	\N	\N	\N	2022-11-17 17:07:59.600127	2022-11-17 17:07:59.600081	38794b5d-8ef1-4100-8411-77e4697bf90b	2981
2984	uri://ed-fi.org/TribalAffiliationDescriptor	Shaktoolik	Shaktoolik	Native Village of Shaktoolik	\N	\N	\N	2022-11-17 17:07:59.61071	2022-11-17 17:07:59.610681	80321fb7-9c3c-423b-82fa-d49defbd6e11	2984
2986	uri://ed-fi.org/TribalAffiliationDescriptor	Sherwood Valley	Sherwood Valley	Sherwood Valley Rancheria of Pomo Indians of California	\N	\N	\N	2022-11-17 17:07:59.632817	2022-11-17 17:07:59.632787	ca28666f-5dfe-40d8-891f-d7f80e0b88f3	2986
2988	uri://ed-fi.org/TribalAffiliationDescriptor	Shinnecock	Shinnecock	Shinnecock Indian Nation	\N	\N	\N	2022-11-17 17:07:59.664093	2022-11-17 17:07:59.664036	1280839c-7b1e-4f4e-b798-c87012f87640	2988
2990	uri://ed-fi.org/TribalAffiliationDescriptor	Shoalwater	Shoalwater	Shoalwater Bay Indian Tribe of the Shoalwater Bay Indian Reservation	\N	\N	\N	2022-11-17 17:07:59.671913	2022-11-17 17:07:59.671855	edf2ce18-2934-4eff-a42f-10f20746b2e1	2990
2992	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Paiute	Shoshone-Paiute	Shoshone-Paiute Tribes of the Duck Valley Reservation, Nevada	\N	\N	\N	2022-11-17 17:07:59.680065	2022-11-17 17:07:59.680003	da692124-16de-4bbb-a4a5-4935c1f94cfe	2992
2994	uri://ed-fi.org/TribalAffiliationDescriptor	Siletz Tribe	Siletz Tribe	Confederated Tribes of Siletz Indians of Oregon	\N	\N	\N	2022-11-17 17:07:59.687723	2022-11-17 17:07:59.687637	8ebe3f1c-b59a-458f-9639-20e4361dba5a	2994
2996	uri://ed-fi.org/TribalAffiliationDescriptor	Sitka	Sitka	Sitka Tribe of Alaska	\N	\N	\N	2022-11-17 17:07:59.697717	2022-11-17 17:07:59.697661	e5f1e1a5-81d8-4003-9e55-83c95cd8a741	2996
2998	uri://ed-fi.org/TribalAffiliationDescriptor	Skokomish	Skokomish	Skokomish Indian Tribe	\N	\N	\N	2022-11-17 17:07:59.705831	2022-11-17 17:07:59.705773	c6176f62-cc42-46bc-857d-faec083c52ec	2998
3001	uri://ed-fi.org/TribalAffiliationDescriptor	Snoqualmie	Snoqualmie	Snoqualmie Indian Tribe	\N	\N	\N	2022-11-17 17:07:59.716053	2022-11-17 17:07:59.716024	72911373-ca80-41c6-a5f5-7c8e8b97fda7	3001
3004	uri://ed-fi.org/TribalAffiliationDescriptor	Solomon	Solomon	Village of Solomon	\N	\N	\N	2022-11-17 17:07:59.744553	2022-11-17 17:07:59.74452	4d5ad0e4-4581-443a-ad87-6f49a3c014e6	3004
3005	uri://ed-fi.org/TribalAffiliationDescriptor	South Naknek	South Naknek	South Naknek Village	\N	\N	\N	2022-11-17 17:07:59.751213	2022-11-17 17:07:59.751042	0172e8e6-086c-4022-bdfb-017e099bdd69	3005
3007	uri://ed-fi.org/TribalAffiliationDescriptor	Spirit Lake	Spirit Lake	Spirit Lake Tribe, North Dakota	\N	\N	\N	2022-11-17 17:07:59.758617	2022-11-17 17:07:59.758531	7b0cef83-7371-46af-96a2-48ea0db58272	3007
3010	uri://ed-fi.org/TribalAffiliationDescriptor	St. Croix	St. Croix	St. Croix Chippewa Indians of Wisconsin	\N	\N	\N	2022-11-17 17:07:59.769799	2022-11-17 17:07:59.76977	0b70c878-f99d-4b4f-a5e4-e5ef3f1dea6a	3010
3011	uri://ed-fi.org/TribalAffiliationDescriptor	St. George	St. George	Saint George Island	\N	\N	\N	2022-11-17 17:07:59.774443	2022-11-17 17:07:59.77439	6edfb5fa-aa85-4cb2-aafb-66b6e89d43f2	3011
3014	uri://ed-fi.org/TribalAffiliationDescriptor	Stebbins	Stebbins	Stebbins Community Association	\N	\N	\N	2022-11-17 17:07:59.78502	2022-11-17 17:07:59.784992	f84910f8-6c5c-40a2-a41d-fe713dc0869d	3014
3016	uri://ed-fi.org/TribalAffiliationDescriptor	Stillaguamish	Stillaguamish	Stillaguamish Tribe of Indians of Washington	\N	\N	\N	2022-11-17 17:07:59.797855	2022-11-17 17:07:59.797807	43f9e170-4d97-4fdc-8ab1-3ffc989d2cfd	3016
3018	uri://ed-fi.org/TribalAffiliationDescriptor	Stony River	Stony River	Village of Stony River	\N	\N	\N	2022-11-17 17:07:59.813689	2022-11-17 17:07:59.813659	338b2f40-f901-4143-8955-7289f4a1651b	3018
3020	uri://ed-fi.org/TribalAffiliationDescriptor	Sun'aq	Sun'aq	Sun'aq Tribe of Kodiak	\N	\N	\N	2022-11-17 17:07:59.848062	2022-11-17 17:07:59.848029	7e58fa1c-ec5f-4754-b62b-abe5d36ca749	3020
3021	uri://ed-fi.org/TribalAffiliationDescriptor	Suquamish	Suquamish	Suquamish Indian Tribe of the Port Madison Reservation	\N	\N	\N	2022-11-17 17:07:59.871818	2022-11-17 17:07:59.871768	de5d8067-328f-41e8-807e-2cdcc908edb9	3021
3023	uri://ed-fi.org/TribalAffiliationDescriptor	Swinomish	Swinomish	Swinomish Indian Tribal Community	\N	\N	\N	2022-11-17 17:07:59.880257	2022-11-17 17:07:59.880201	30f00170-fbd2-4691-96e9-9feb77088037	3023
3025	uri://ed-fi.org/TribalAffiliationDescriptor	Table Mountain	Table Mountain	Table Mountain Rancheria 	\N	\N	\N	2022-11-17 17:07:59.888004	2022-11-17 17:07:59.887954	b84a59db-a906-4611-834d-0facb4632fe5	3025
3027	uri://ed-fi.org/TribalAffiliationDescriptor	Tanacross	Tanacross	Native Village of Tanacross	\N	\N	\N	2022-11-17 17:07:59.895372	2022-11-17 17:07:59.895324	b3c1a2ee-1461-4b5c-9f8b-ab4c1592791c	3027
3030	uri://ed-fi.org/TribalAffiliationDescriptor	Tatitlek	Tatitlek	Native Village of Tatitlek	\N	\N	\N	2022-11-17 17:07:59.905621	2022-11-17 17:07:59.90559	59c24c6c-387f-4258-91e3-49aa77bcd672	3030
3031	uri://ed-fi.org/TribalAffiliationDescriptor	Tazlina	Tazlina	Native Village of Tazlina	\N	\N	\N	2022-11-17 17:07:59.910208	2022-11-17 17:07:59.910181	fb21c07d-8156-45b2-9d2e-302f0b5c8eb8	3031
3033	uri://ed-fi.org/TribalAffiliationDescriptor	Telida	Telida	Telida Village	\N	\N	\N	2022-11-17 17:07:59.917261	2022-11-17 17:07:59.917218	6e1d2c35-6a54-457a-9789-c47e3ebd5112	3033
3036	uri://ed-fi.org/TribalAffiliationDescriptor	Tetlin	Tetlin	Native Village of Tetlin	\N	\N	\N	2022-11-17 17:07:59.928556	2022-11-17 17:07:59.928523	6d3af47f-95eb-4e68-b843-3737bf541fa4	3036
3037	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco Tribal Town	Thlopthlocco Tribal Town	Thlopthlocco Tribal Town	\N	\N	\N	2022-11-17 17:07:59.933159	2022-11-17 17:07:59.933115	50a51567-98a0-4894-9abb-5a0847dff345	3037
3039	uri://ed-fi.org/TribalAffiliationDescriptor	Timbi-sha Shoshone	Timbi-sha Shoshone	Timbisha Shoshone Tribe	\N	\N	\N	2022-11-17 17:07:59.959603	2022-11-17 17:07:59.959572	5b6ea4de-f119-4c95-a45a-ff917b9aaac3	3039
3041	uri://ed-fi.org/TribalAffiliationDescriptor	Togiak	Togiak	Traditional Village of Togiak	\N	\N	\N	2022-11-17 17:07:59.970679	2022-11-17 17:07:59.970649	4e7da71c-60ac-4b32-9c58-702a48503c3e	3041
2974	uri://ed-fi.org/TribalAffiliationDescriptor	Scammon Bay	Scammon Bay	Native Village of Scammon Bay	\N	\N	\N	2022-11-17 17:07:59.55969	2022-11-17 17:07:59.559662	03e00bc9-11c1-48e0-b0db-578f713f92bc	2974
2976	uri://ed-fi.org/TribalAffiliationDescriptor	Selawik	Selawik	Native Village of Selawik	\N	\N	\N	2022-11-17 17:07:59.567634	2022-11-17 17:07:59.567605	058c7a12-35c6-4321-82d9-879d9b92bb66	2976
2977	uri://ed-fi.org/TribalAffiliationDescriptor	Seldovia	Seldovia	Seldovia Village Tribe	\N	\N	\N	2022-11-17 17:07:59.572386	2022-11-17 17:07:59.572262	adedd30e-0335-4496-8b6b-784e3e5de84e	2977
2980	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca	Seneca	Seneca Nation of Indians	\N	\N	\N	2022-11-17 17:07:59.583346	2022-11-17 17:07:59.583317	18f70881-6c25-427a-89d3-5801c3cad1db	2980
2982	uri://ed-fi.org/TribalAffiliationDescriptor	Shageluk	Shageluk	Shageluk Native Village	\N	\N	\N	2022-11-17 17:07:59.602772	2022-11-17 17:07:59.602743	20427ba4-ddb4-41c6-91cf-4c01d83ab2b4	2982
2983	uri://ed-fi.org/TribalAffiliationDescriptor	Shakopee	Shakopee	Shakopee Mdewakanton Sioux Community of Minnesota	\N	\N	\N	2022-11-17 17:07:59.607839	2022-11-17 17:07:59.607807	b3019476-c833-406e-8f0e-1fe378fad7f6	2983
2985	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee Tribe	Shawnee Tribe	Shawnee Tribe	\N	\N	\N	2022-11-17 17:07:59.615524	2022-11-17 17:07:59.615495	d36428ac-e046-4f41-bb4e-b68c4181f0b3	2985
2987	uri://ed-fi.org/TribalAffiliationDescriptor	Shingle Springs	Shingle Springs	Shingle Springs Band of Miwok Indians, Shingle Springs Rancheria (Verona Tract), California	\N	\N	\N	2022-11-17 17:07:59.649008	2022-11-17 17:07:59.64898	0aeafc2d-0eba-447d-839c-de32ab570217	2987
2989	uri://ed-fi.org/TribalAffiliationDescriptor	Shishmaref IRA	Shishmaref IRA	Native Village of Shishmaref	\N	\N	\N	2022-11-17 17:07:59.666907	2022-11-17 17:07:59.666878	2a955d7f-2eaf-4b4c-ac2a-e628c317305e	2989
2991	uri://ed-fi.org/TribalAffiliationDescriptor	Shoshone-Bannock	Shoshone-Bannock	Shoshone-Bannock Tribes of the Fort Hall Reservation	\N	\N	\N	2022-11-17 17:07:59.674526	2022-11-17 17:07:59.6745	97d1b531-db3a-4303-8841-333f672aac2d	2991
2993	uri://ed-fi.org/TribalAffiliationDescriptor	Shungnak	Shungnak	Native Village of Shungnak	\N	\N	\N	2022-11-17 17:07:59.682694	2022-11-17 17:07:59.682665	8ce36d2d-da94-4528-b72c-c24ce9616233	2993
2995	uri://ed-fi.org/TribalAffiliationDescriptor	Sisseton-Wahpeton	Sisseton-Wahpeton	Sisseton-Wahpeton Oyate of the Lake Traverse Reservation, South Dakota	\N	\N	\N	2022-11-17 17:07:59.690892	2022-11-17 17:07:59.690861	62724671-5228-440e-86b4-84a31f21d522	2995
2997	uri://ed-fi.org/TribalAffiliationDescriptor	Skagway	Skagway	Skagway Village	\N	\N	\N	2022-11-17 17:07:59.700564	2022-11-17 17:07:59.700535	2a418a57-0db5-4d7a-a55b-1737239a68c1	2997
2999	uri://ed-fi.org/TribalAffiliationDescriptor	Skull Valley	Skull Valley	Skull Valley Band of Goshute Indians of Utah	\N	\N	\N	2022-11-17 17:07:59.708454	2022-11-17 17:07:59.708425	47d752da-af63-4249-903e-979ca39e7ad0	2999
3000	uri://ed-fi.org/TribalAffiliationDescriptor	Sleetmute	Sleetmute	Village of Sleetmute	\N	\N	\N	2022-11-17 17:07:59.713284	2022-11-17 17:07:59.713215	884634ac-aedd-47f3-a86c-4a00f2901898	3000
3002	uri://ed-fi.org/TribalAffiliationDescriptor	Soboba	Soboba	Soboba Band of Luiseno Indians, California	\N	\N	\N	2022-11-17 17:07:59.729905	2022-11-17 17:07:59.729876	793f230b-bffa-4d3f-b948-7ef5b4210f03	3002
3003	uri://ed-fi.org/TribalAffiliationDescriptor	Sokaogon	Sokaogon	Sokaogon Chippewa Community, Wisconsin	\N	\N	\N	2022-11-17 17:07:59.741711	2022-11-17 17:07:59.741591	3e89bd9c-df61-46ef-ab5f-3a1c43706803	3003
3006	uri://ed-fi.org/TribalAffiliationDescriptor	Southern Ute	Southern Ute	Southern Ute Indian Tribe of the Southern Ute Reservation, Colorado	\N	\N	\N	2022-11-17 17:07:59.753972	2022-11-17 17:07:59.753942	c75f4595-f235-4ce3-bc87-62b5f9e5fa2c	3006
3008	uri://ed-fi.org/TribalAffiliationDescriptor	Spokane	Spokane	Spokane Tribe of the Spokane Reservation	\N	\N	\N	2022-11-17 17:07:59.762185	2022-11-17 17:07:59.762157	f49b220d-97f1-4c58-b564-2bb7e35d78da	3008
3009	uri://ed-fi.org/TribalAffiliationDescriptor	Squaxin	Squaxin	Squaxin Island Tribe of the Squaxin Island Reservation	\N	\N	\N	2022-11-17 17:07:59.766858	2022-11-17 17:07:59.766811	6f1d6a5e-0bf1-47d5-891a-664ed8d0e0d3	3009
3012	uri://ed-fi.org/TribalAffiliationDescriptor	St. Michael IRA	St. Michael IRA	Native Village of Saint Michael	\N	\N	\N	2022-11-17 17:07:59.777428	2022-11-17 17:07:59.777399	ee370013-2de3-4211-95c1-494b41de7e6a	3012
3013	uri://ed-fi.org/TribalAffiliationDescriptor	Standing Rock	Standing Rock	Standing Rock Sioux Tribe of North & South Dakota	\N	\N	\N	2022-11-17 17:07:59.782207	2022-11-17 17:07:59.782149	13c8b63a-5be6-47cf-9e53-a3a17f3ae85a	3013
3015	uri://ed-fi.org/TribalAffiliationDescriptor	Stevens Village	Stevens Village	Native Village of Stevens	\N	\N	\N	2022-11-17 17:07:59.789644	2022-11-17 17:07:59.789605	2ef6170d-78b6-4ae2-ac5a-b59ee5843ca5	3015
3017	uri://ed-fi.org/TribalAffiliationDescriptor	Stockbridge	Stockbridge	Stockbridge Munsee Community, Wisconsin	\N	\N	\N	2022-11-17 17:07:59.800536	2022-11-17 17:07:59.800504	94023db6-08bd-431a-90da-b01b7c4ec503	3017
3019	uri://ed-fi.org/TribalAffiliationDescriptor	Summit Lake	Summit Lake	Summit Lake Paiute Tribe of Nevada	\N	\N	\N	2022-11-17 17:07:59.827203	2022-11-17 17:07:59.827172	69d2b8af-a880-497e-96b2-c4702d47e4f7	3019
3022	uri://ed-fi.org/TribalAffiliationDescriptor	Susanville	Susanville	Susanville Indian Rancheria, California	\N	\N	\N	2022-11-17 17:07:59.874737	2022-11-17 17:07:59.8747	d431c797-3db7-46bb-987b-8bc444382837	3022
3024	uri://ed-fi.org/TribalAffiliationDescriptor	Sycuan	Sycuan	Sycuan Band of the Kumeyaay Nation	\N	\N	\N	2022-11-17 17:07:59.882785	2022-11-17 17:07:59.882754	8a085007-fba5-4e1d-acb8-b273ccc2cbf1	3024
3026	uri://ed-fi.org/TribalAffiliationDescriptor	Takotna	Takotna	Takotna Village	\N	\N	\N	2022-11-17 17:07:59.890506	2022-11-17 17:07:59.890473	92e49533-e2bd-4a20-bc1d-25b4324139f2	3026
3028	uri://ed-fi.org/TribalAffiliationDescriptor	Tanana	Tanana	Native Village of Tanana	\N	\N	\N	2022-11-17 17:07:59.898057	2022-11-17 17:07:59.898025	da42ff3a-9c39-4558-a8e8-8de0f5b59757	3028
3029	uri://ed-fi.org/TribalAffiliationDescriptor	Tangirnaq	Tangirnaq	Tangirnaq Native Village 	\N	\N	\N	2022-11-17 17:07:59.902786	2022-11-17 17:07:59.902736	2d13c85e-9add-44df-9215-861d26f11442	3029
3032	uri://ed-fi.org/TribalAffiliationDescriptor	Tejon	Tejon	Tejon Indian Tribe	\N	\N	\N	2022-11-17 17:07:59.913146	2022-11-17 17:07:59.913116	09fe0813-d0c3-46c5-af30-641fb6f8b707	3032
3034	uri://ed-fi.org/TribalAffiliationDescriptor	Teller	Teller	Native Village of Teller	\N	\N	\N	2022-11-17 17:07:59.920795	2022-11-17 17:07:59.920758	7582f6da-035a-4ff4-912a-6652d2d9fba1	3034
3035	uri://ed-fi.org/TribalAffiliationDescriptor	Te-Moak	Te-Moak	Te-Moak Tribe of Western Shoshone Indians of Nevada (Four constituent bands: Battle Mountain Band, Elko Band, South Fork Band and Wells Band)	\N	\N	\N	2022-11-17 17:07:59.92552	2022-11-17 17:07:59.925456	4ecff91a-6ec5-41a4-aba5-fe12383b50c3	3035
3038	uri://ed-fi.org/TribalAffiliationDescriptor	Three Affiliated	Three Affiliated	Three Affiliated Tribes of the Fort Berthold Reservation, North Dakota	\N	\N	\N	2022-11-17 17:07:59.936145	2022-11-17 17:07:59.936113	eb3d4b54-353e-4f5b-841d-ced6805c25b8	3038
3040	uri://ed-fi.org/TribalAffiliationDescriptor	Tlingit & Haida	Tlingit & Haida	Central Council of the Tlingit & Haida Indian Tribes	\N	\N	\N	2022-11-17 17:07:59.968275	2022-11-17 17:07:59.968228	46b57754-8dc7-4dd0-b97f-053fc111525c	3040
3042	uri://ed-fi.org/TribalAffiliationDescriptor	Tohono O'odham	Tohono O'odham	Tohono O'odham Nation of Arizona	\N	\N	\N	2022-11-17 17:07:59.976265	2022-11-17 17:07:59.976235	5105a325-f03a-439a-804f-5361aae87abe	3042
3044	uri://ed-fi.org/TribalAffiliationDescriptor	Tonawanda	Tonawanda	Tonawanda Band of Seneca	\N	\N	\N	2022-11-17 17:07:59.987172	2022-11-17 17:07:59.987144	968197e0-8d1e-4886-bcd2-c950ac74ddbb	3044
3046	uri://ed-fi.org/TribalAffiliationDescriptor	Tonto Apache	Tonto Apache	Tonto Apache Tribe of Arizona	\N	\N	\N	2022-11-17 17:07:59.995493	2022-11-17 17:07:59.995461	cdb42493-4bfc-43c1-98e1-8de933cb6766	3046
3048	uri://ed-fi.org/TribalAffiliationDescriptor	Tulalip	Tulalip	Tulalip Tribes of Washington	\N	\N	\N	2022-11-17 17:08:00.008259	2022-11-17 17:08:00.00306	b377d3aa-85f5-4db6-86f0-894eab93f4f2	3048
3050	uri://ed-fi.org/TribalAffiliationDescriptor	Tuluksak	Tuluksak	Tuluksak Native Community	\N	\N	\N	2022-11-17 17:08:00.019408	2022-11-17 17:08:00.019376	cbd02659-a49a-4f44-ad6e-6d203d2dfee1	3050
3053	uri://ed-fi.org/TribalAffiliationDescriptor	Tununak	Tununak	Native Village of Tununak	\N	\N	\N	2022-11-17 17:08:00.032159	2022-11-17 17:08:00.032123	3fed5d38-a73d-4f2b-af3b-86c77d0e2ca4	3053
3055	uri://ed-fi.org/TribalAffiliationDescriptor	Turtle Mountain	Turtle Mountain	Turtle Mountain Band of Chippewa Indians of North Dakota	\N	\N	\N	2022-11-17 17:08:00.039895	2022-11-17 17:08:00.039866	3d133111-7fe8-4327-aa0f-ab19f6871279	3055
3057	uri://ed-fi.org/TribalAffiliationDescriptor	Twenty-Nine Palms	Twenty-Nine Palms	Twenty-Nine Palms Band of Mission Indians of California	\N	\N	\N	2022-11-17 17:08:00.048114	2022-11-17 17:08:00.048085	dab9a5bb-b652-46a0-81b7-59cd41503437	3057
3043	uri://ed-fi.org/TribalAffiliationDescriptor	Tolowa Dee-ni'	Tolowa Dee-ni'	Tolowa Dee-ni' Nation	\N	\N	\N	2022-11-17 17:07:59.984413	2022-11-17 17:07:59.984363	e40d6b81-71de-407e-9cc1-d172ba129b4e	3043
3045	uri://ed-fi.org/TribalAffiliationDescriptor	Tonkawa	Tonkawa	Tonkawa Tribe of Indians of Oklahoma	\N	\N	\N	2022-11-17 17:07:59.99284	2022-11-17 17:07:59.992777	ae649d5a-04df-4fbd-b7d8-0cdd6f130094	3045
3047	uri://ed-fi.org/TribalAffiliationDescriptor	Torres Martinez	Torres Martinez	Torres Martinez Desert Cahuilla Indians, California	\N	\N	\N	2022-11-17 17:08:00.000491	2022-11-17 17:08:00.000443	62a6ab73-5e67-4d01-a722-910d11d84e3f	3047
3049	uri://ed-fi.org/TribalAffiliationDescriptor	Tule River	Tule River	Tule River Indian Tribe of the Tule River Reservation, California	\N	\N	\N	2022-11-17 17:08:00.013644	2022-11-17 17:08:00.013606	88fd01f7-b884-4a1b-b2b8-56cea8d24454	3049
3051	uri://ed-fi.org/TribalAffiliationDescriptor	Tunica-Biloxi	Tunica-Biloxi	Tunica-Biloxi Indian Tribe	\N	\N	\N	2022-11-17 17:08:00.021456	2022-11-17 17:08:00.021446	dac64e3b-33c0-4cbb-998c-766a7167859f	3051
3052	uri://ed-fi.org/TribalAffiliationDescriptor	Tuntutuliak	Tuntutuliak	Native Village of Tuntutuliak	\N	\N	\N	2022-11-17 17:08:00.029342	2022-11-17 17:08:00.029292	504bbae1-7bb7-401d-b99b-dd5743e63641	3052
3054	uri://ed-fi.org/TribalAffiliationDescriptor	Tuolumne	Tuolumne	Tuolumne Band of Me-Wuk Indians of the Tuolumne Rancheria of California	\N	\N	\N	2022-11-17 17:08:00.037032	2022-11-17 17:08:00.036983	4e28d892-5842-4f42-84f1-2f6eb9489f63	3054
3056	uri://ed-fi.org/TribalAffiliationDescriptor	Tuscarora	Tuscarora	Tuscarora Nation	\N	\N	\N	2022-11-17 17:08:00.044663	2022-11-17 17:08:00.044618	9b61a25b-795d-4910-b012-61c79ce47406	3056
3059	uri://ed-fi.org/TribalAffiliationDescriptor	Tyonek	Tyonek	Native Village of Tyonek	\N	\N	\N	2022-11-17 17:08:00.056164	2022-11-17 17:08:00.056132	c3e6ed51-8e88-47ce-bb4a-2314ae953137	3059
3061	uri://ed-fi.org/TribalAffiliationDescriptor	Umatilla Tribe	Umatilla Tribe	Confederated Tribes of the Umatilla Indian Reservation	\N	\N	\N	2022-11-17 17:08:00.068108	2022-11-17 17:08:00.068055	b828270f-a25e-409d-8376-f0ca39043b62	3061
3063	uri://ed-fi.org/TribalAffiliationDescriptor	Unalakleet	Unalakleet	Native Village of Unalakleet	\N	\N	\N	2022-11-17 17:08:00.076068	2022-11-17 17:08:00.076037	4999e51a-6010-400d-9a51-80c7f234e9b6	3063
3065	uri://ed-fi.org/TribalAffiliationDescriptor	United Auburn	United Auburn	United Auburn Indian Community of the Auburn Rancheria of California	\N	\N	\N	2022-11-17 17:08:00.083409	2022-11-17 17:08:00.08338	e8193e1c-1238-439d-9dc0-31f2a7ead7bc	3065
3067	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Mattaponi Tribe	Upper Mattaponi Tribe	Upper Mattaponi Tribe	\N	\N	\N	2022-11-17 17:08:00.093408	2022-11-17 17:08:00.093362	dbfaae4b-9b79-411b-a3cc-0c6f0075108a	3067
3069	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Skagit	Upper Skagit	Upper Skagit Indian Tribe	\N	\N	\N	2022-11-17 17:08:00.101203	2022-11-17 17:08:00.101143	eed4cd4a-416d-4374-9c8b-4f4ecf7ab90a	3069
3071	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain Ute	Ute Mountain Ute	Ute Mountain Ute Tribe	\N	\N	\N	2022-11-17 17:08:00.108629	2022-11-17 17:08:00.108593	8cd7d9f7-9030-4a7f-8a0d-28b7e9ea8d1e	3071
3073	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie IRA	Venetie IRA	Native Village of Venetie Tribal Government (Arctic Village and Village of Venetie)	\N	\N	\N	2022-11-17 17:08:00.11887	2022-11-17 17:08:00.118841	793a8da7-c9b8-4f0e-a862-7535757f0278	3073
3075	uri://ed-fi.org/TribalAffiliationDescriptor	Wainwright	Wainwright	Village of Wainwright	\N	\N	\N	2022-11-17 17:08:00.126616	2022-11-17 17:08:00.126586	1105d230-fb27-4183-a5c7-414410573659	3075
3077	uri://ed-fi.org/TribalAffiliationDescriptor	Walker River	Walker River	Walker River Paiute Tribe of the Walker River Reservation, Nevada	\N	\N	\N	2022-11-17 17:08:00.134975	2022-11-17 17:08:00.134946	b9d491eb-e1bd-42ab-9572-b6ae9043a8e6	3077
3079	uri://ed-fi.org/TribalAffiliationDescriptor	Warms Springs Tribe	Warms Springs Tribe	Confederated Tribes of the Warm Springs Reservation of Oregon	\N	\N	\N	2022-11-17 17:08:00.142196	2022-11-17 17:08:00.142168	756ba493-4f1a-4563-be70-c0e373410c04	3079
3080	uri://ed-fi.org/TribalAffiliationDescriptor	Washoe	Washoe	Washoe Tribe of Nevada & California (Carson Colony, Dresslerville Colony, Woodfords Community, Stewart Community, & Washoe Ranches)	\N	\N	\N	2022-11-17 17:08:00.146961	2022-11-17 17:08:00.146934	3bddc9a7-7f7b-4f10-8dcc-95fc346cc0bf	3080
3082	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain	White Mountain	White Mountain Apache Tribe of the Fort Apache Reservation, Arizona	\N	\N	\N	2022-11-17 17:08:00.156311	2022-11-17 17:08:00.156283	83dd6654-4405-485e-9f08-5c77c88e246f	3082
3084	uri://ed-fi.org/TribalAffiliationDescriptor	Wichita	Wichita	Wichita and Affiliated Tribes (Wichita, Keechi, Waco & Tawakonie), Oklahoma	\N	\N	\N	2022-11-17 17:08:00.16639	2022-11-17 17:08:00.166361	b4b41f36-7ebe-4e52-b3f8-2b21fd6881b1	3084
3086	uri://ed-fi.org/TribalAffiliationDescriptor	Winnebago	Winnebago	Winnebago Tribe of Nebraska	\N	\N	\N	2022-11-17 17:08:00.174361	2022-11-17 17:08:00.174332	285a9279-dd4c-4a2f-b560-bb17264eb2a9	3086
3087	uri://ed-fi.org/TribalAffiliationDescriptor	Winnemucca	Winnemucca	Winnemucca Indian Colony of Nevada	\N	\N	\N	2022-11-17 17:08:00.179197	2022-11-17 17:08:00.179141	a676f372-c5af-4892-b2c7-ce5d34ddb3e8	3087
3090	uri://ed-fi.org/TribalAffiliationDescriptor	Wyandotte	Wyandotte	Wyandotte Nation	\N	\N	\N	2022-11-17 17:08:00.190271	2022-11-17 17:08:00.190238	a01b3c77-6b02-4912-864f-56b68d4d8afa	3090
3091	uri://ed-fi.org/TribalAffiliationDescriptor	Yakutat	Yakutat	Yakutat Tlingit Tribe	\N	\N	\N	2022-11-17 17:08:00.194964	2022-11-17 17:08:00.194876	cc4c1ab7-f19f-4588-9d71-22f53c836739	3091
3093	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Apache	Yavapai-Apache	Yavapai-Apache Nation of the Camp Verde Indian Reservation, Arizona	\N	\N	\N	2022-11-17 17:08:00.202843	2022-11-17 17:08:00.202814	6af8cfc4-6c03-4763-b333-4118bffaf6c5	3093
3095	uri://ed-fi.org/TribalAffiliationDescriptor	Yerington	Yerington	Yerington Paiute Tribe of the Yerington Colony and Campbell Ranch, Nevada	\N	\N	\N	2022-11-17 17:08:00.323384	2022-11-17 17:08:00.322534	0c5b5160-2430-428d-b9fc-b92a2c8a993a	3095
3098	uri://ed-fi.org/TribalAffiliationDescriptor	Ysleta Del Sur	Ysleta Del Sur	Ysleta del Sur Pueblo	\N	\N	\N	2022-11-17 17:08:00.334825	2022-11-17 17:08:00.334797	2c0cf84c-5d8e-4ac7-baba-c833d1d92b04	3098
3100	uri://ed-fi.org/TribalAffiliationDescriptor	Yurok	Yurok	Yurok Tribe of the Yurok Reservation, California	\N	\N	\N	2022-11-17 17:08:00.342974	2022-11-17 17:08:00.342945	5ac6ea9d-5e91-4185-88d4-7f3deed2fe01	3100
3102	uri://ed-fi.org/TribalAffiliationDescriptor	Aroostok	DEPRECATED: Aroostok	DEPRECATED: Aroostook Band of Micmacs	\N	\N	\N	2022-11-17 17:08:00.350263	2022-11-17 17:08:00.350235	c0082701-f9b9-43f9-81bc-801e64abf16a	3102
3103	uri://ed-fi.org/TribalAffiliationDescriptor	Atqasuk	DEPRECATED: Atqasuk	DEPRECATED: Atqasuk Village (Atkasook)	\N	\N	\N	2022-11-17 17:08:00.355921	2022-11-17 17:08:00.355818	b894764c-91cc-4618-858f-68413046c640	3103
3105	uri://ed-fi.org/TribalAffiliationDescriptor	Chickahominy Indian Tribe	DEPRECATED: Inc.	DEPRECATED: Chickahominy Indian Tribe, Inc.	\N	\N	\N	2022-11-17 17:08:00.365165	2022-11-17 17:08:00.36511	42ab57ef-68ef-4ce5-b092-16a87ff136e4	3105
3108	uri://ed-fi.org/TribalAffiliationDescriptor	Kluti-Kaah	DEPRECATED: Kluti-Kaah	DEPRECATED: Native Village of Kluti-Kaah (aka Copper Center)	\N	\N	\N	2022-11-17 17:08:00.376913	2022-11-17 17:08:00.376884	d215c849-c2db-4bfa-ad9d-84533184bd85	3108
3110	uri://ed-fi.org/TribalAffiliationDescriptor	Muscogee	DEPRECATED: Muscogee	DEPRECATED: The Muscogee (Creek) Nation	\N	\N	\N	2022-11-17 17:08:00.386617	2022-11-17 17:08:00.386561	66a82e27-49c4-4ed7-b6f6-17a1bec91dfe	3110
3112	uri://ed-fi.org/TribalAffiliationDescriptor	Ohkay	DEPRECATED: Ohkay	DEPRECATED: Ohkay Owingeh	\N	\N	\N	2022-11-17 17:08:00.397531	2022-11-17 17:08:00.397503	0f832add-7414-4899-ab36-bcbcd2c3ef82	3112
3113	uri://ed-fi.org/TribalAffiliationDescriptor	Ohogamuit	DEPRECATED: Ohogamuit	DEPRECATED: Village of Ohogamiut	\N	\N	\N	2022-11-17 17:08:00.404768	2022-11-17 17:08:00.404713	81e27a36-bad6-479a-adb7-4fd2f2c844b2	3113
3115	uri://ed-fi.org/TribalAffiliationDescriptor	Osage	DEPRECATED: Osage	DEPRECATED: The Osage Nation	\N	\N	\N	2022-11-17 17:08:00.412822	2022-11-17 17:08:00.412774	9445e558-5d03-4f6e-b6eb-d9d416077c57	3115
3117	uri://ed-fi.org/TribalAffiliationDescriptor	Passamaquaddy Pleasant Point	DEPRECATED: Passamaquaddy Pleasant Point	DEPRECATED: Passamaquoddy Tribe - Pleasant Point	\N	\N	\N	2022-11-17 17:08:00.419929	2022-11-17 17:08:00.4199	a6a281e0-c323-4bd6-bf7a-d1cecded95e2	3117
3118	uri://ed-fi.org/TribalAffiliationDescriptor	Pechanga	DEPRECATED: Pechanga	DEPRECATED: Pechanga Band of Luiseno Mission Indians of the Pechanga Reservation, California	\N	\N	\N	2022-11-17 17:08:00.43111	2022-11-17 17:08:00.431039	3828e02a-78c0-4da3-8088-c30d125ef4cb	3118
3058	uri://ed-fi.org/TribalAffiliationDescriptor	Twin Hills	Twin Hills	Twin Hills Village	\N	\N	\N	2022-11-17 17:08:00.053006	2022-11-17 17:08:00.052946	c49ee000-c53c-401d-9953-d3e3c76e8e26	3058
3060	uri://ed-fi.org/TribalAffiliationDescriptor	Ugashik	Ugashik	Ugashik Village	\N	\N	\N	2022-11-17 17:08:00.060945	2022-11-17 17:08:00.060912	531543a9-bb27-4de0-ad49-c4d1125dd37b	3060
3062	uri://ed-fi.org/TribalAffiliationDescriptor	Umkumiut	Umkumiut	Umkumiut Native Village	\N	\N	\N	2022-11-17 17:08:00.070592	2022-11-17 17:08:00.070563	34ccb3d2-c936-4a52-aa49-7108d78ff9e0	3062
3064	uri://ed-fi.org/TribalAffiliationDescriptor	Unga	Unga	Native Village of Unga	\N	\N	\N	2022-11-17 17:08:00.079893	2022-11-17 17:08:00.079858	efa427cc-15e8-4130-b175-0387826d8269	3064
3066	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah Band	United Keetoowah Band	United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	2022-11-17 17:08:00.087856	2022-11-17 17:08:00.087828	926def1d-e5f1-4d9c-abcb-986bc2ba7dc1	3066
3068	uri://ed-fi.org/TribalAffiliationDescriptor	Upper Sioux	Upper Sioux	Upper Sioux Community, Minnesota	\N	\N	\N	2022-11-17 17:08:00.096056	2022-11-17 17:08:00.096028	be48c244-2a54-4e08-b910-55fd1450949d	3068
3070	uri://ed-fi.org/TribalAffiliationDescriptor	Ute	Ute	Ute Indian Tribe of the Uintah & Ouray Reservation, Utah	\N	\N	\N	2022-11-17 17:08:00.103808	2022-11-17 17:08:00.10378	d2f89c71-843e-408b-9289-3f9e5bb52205	3070
3072	uri://ed-fi.org/TribalAffiliationDescriptor	Venetie	Venetie	Village of Venetie	\N	\N	\N	2022-11-17 17:08:00.116176	2022-11-17 17:08:00.116116	403bd3fd-dc7d-4367-8ec3-a1f86a7e1741	3072
3074	uri://ed-fi.org/TribalAffiliationDescriptor	Viejas	Viejas	Capitan Grande Band of Diegueno Mission Indians of California: Viejas (Baron Long) Group of Capitan Grande Band of Mission Indians of the Viejas Reservation, California	\N	\N	\N	2022-11-17 17:08:00.124107	2022-11-17 17:08:00.124045	8d3c43a9-0251-4429-ac9e-17cf70b0782d	3074
3076	uri://ed-fi.org/TribalAffiliationDescriptor	Wales	Wales	Native Village of Wales	\N	\N	\N	2022-11-17 17:08:00.131668	2022-11-17 17:08:00.131583	d280476b-deb5-4797-ad2c-f8ab312dbdce	3076
3078	uri://ed-fi.org/TribalAffiliationDescriptor	Wampanoag	Wampanoag	Wampanoag Tribe of Gay Head (Aquinnah)	\N	\N	\N	2022-11-17 17:08:00.139007	2022-11-17 17:08:00.138983	ed9b3fc9-eeeb-4ccc-8e33-f7e9e9b2c2c7	3078
3081	uri://ed-fi.org/TribalAffiliationDescriptor	White Earth	White Earth	Minnesota Chippewa Tribe - White Earth Band	\N	\N	\N	2022-11-17 17:08:00.150189	2022-11-17 17:08:00.150156	356788c4-34d7-4f66-8b2b-fb80cb11a75f	3081
3083	uri://ed-fi.org/TribalAffiliationDescriptor	White Mountain AK	White Mountain AK	Native Village of White Mountain	\N	\N	\N	2022-11-17 17:08:00.16366	2022-11-17 17:08:00.163601	cb1837f4-cdf0-4151-aa82-426543ea26a8	3083
3085	uri://ed-fi.org/TribalAffiliationDescriptor	Wilton	Wilton	Wilton Rancheria, California	\N	\N	\N	2022-11-17 17:08:00.171409	2022-11-17 17:08:00.171353	66c7f333-045b-458a-9ab8-dc1db310cb97	3085
3088	uri://ed-fi.org/TribalAffiliationDescriptor	Wiyot	Wiyot	Wiyot Tribe, California	\N	\N	\N	2022-11-17 17:08:00.182074	2022-11-17 17:08:00.182045	e64695c1-4cfd-434c-8656-64bfee503c5e	3088
3089	uri://ed-fi.org/TribalAffiliationDescriptor	Wrangell	Wrangell	Wrangell Cooperative Association	\N	\N	\N	2022-11-17 17:08:00.187109	2022-11-17 17:08:00.187065	0aeb04af-3b94-4c6d-b923-36e3678c2338	3089
3092	uri://ed-fi.org/TribalAffiliationDescriptor	Yankton	Yankton	Yankton Sioux Tribe of South Dakota	\N	\N	\N	2022-11-17 17:08:00.198388	2022-11-17 17:08:00.19836	f9ee0fc4-6616-4a35-b4f1-8f2f5005f10b	3092
3094	uri://ed-fi.org/TribalAffiliationDescriptor	Yavapai-Prescott	Yavapai-Prescott	Yavapai-Prescott Indian Tribe	\N	\N	\N	2022-11-17 17:08:00.206251	2022-11-17 17:08:00.206223	a81bdf46-b48c-422e-84b0-01b8affb560b	3094
3096	uri://ed-fi.org/TribalAffiliationDescriptor	Yocha Dehe	Yocha Dehe	Yocha Dehe Wintun Nation, California	\N	\N	\N	2022-11-17 17:08:00.326469	2022-11-17 17:08:00.32644	3a82c723-502d-4476-b122-a192535aa0c4	3096
3097	uri://ed-fi.org/TribalAffiliationDescriptor	Yomba Shoshone	Yomba Shoshone	Yomba Shoshone Tribe of the Yomba Reservation, Nevada	\N	\N	\N	2022-11-17 17:08:00.332086	2022-11-17 17:08:00.332002	c92cff8f-1923-421b-8ebb-483db534a818	3097
3099	uri://ed-fi.org/TribalAffiliationDescriptor	Yuhaaviatam of San Manuel Nation 	Yuhaaviatam of San Manuel Nation 	Yuhaaviatam of San Manuel Nation 	\N	\N	\N	2022-11-17 17:08:00.340279	2022-11-17 17:08:00.34024	7c130d74-4b7e-47a1-acff-2488b9a7163e	3099
3101	uri://ed-fi.org/TribalAffiliationDescriptor	Arctic Slope	DEPRECATED: Arctic Slope	DEPRECATED: Inupiat Community of the Arctic Slope	\N	\N	\N	2022-11-17 17:08:00.348244	2022-11-17 17:08:00.347986	7cd08910-05f2-4837-84ce-7b466df52c45	3101
3104	uri://ed-fi.org/TribalAffiliationDescriptor	Cheyenne-Arapaho	DEPRECATED: Cheyenne-Arapaho	DEPRECATED: Cheyenne River Sioux Tribe of the Cheyenne River Reservation, SD	\N	\N	\N	2022-11-17 17:08:00.358964	2022-11-17 17:08:00.358936	575f6ca2-5881-494d-973a-956ac6bb657a	3104
3106	uri://ed-fi.org/TribalAffiliationDescriptor	Iqurmuit	DEPRECATED: Iqurmuit	DEPRECATED: Iqurmuit Traditional Council	\N	\N	\N	2022-11-17 17:08:00.367661	2022-11-17 17:08:00.367632	d57ba5ce-94c6-4c63-8636-2cca5c36bad0	3106
3107	uri://ed-fi.org/TribalAffiliationDescriptor	Kewa Pueblo	DEPRECATED: Kewa Pueblo	DEPRECATED: Kewa Pueblo	\N	\N	\N	2022-11-17 17:08:00.374171	2022-11-17 17:08:00.374092	a210702d-d74a-41af-a9da-72b40b24c509	3107
3109	uri://ed-fi.org/TribalAffiliationDescriptor	Mescalero	DEPRECATED: Mescalero	DEPRECATED: Mescalero Apache Tribe	\N	\N	\N	2022-11-17 17:08:00.381584	2022-11-17 17:08:00.381555	df1286e8-f1e5-4411-a7f3-b43f0b7b81f6	3109
3111	uri://ed-fi.org/TribalAffiliationDescriptor	Northfork	DEPRECATED: Northfork	DEPRECATED: Northfork Rancheria of Mono Indians of California	\N	\N	\N	2022-11-17 17:08:00.389375	2022-11-17 17:08:00.389346	1d799ff2-5bb7-4602-bffe-ab82c140ac64	3111
3114	uri://ed-fi.org/TribalAffiliationDescriptor	Oneida  Nation of New York	DEPRECATED: Oneida  Nation of New York	DEPRECATED: Oneida  Nation of New York	\N	\N	\N	2022-11-17 17:08:00.407439	2022-11-17 17:08:00.407411	762448cd-3676-4183-8bd1-9031c0ff239c	3114
3116	uri://ed-fi.org/TribalAffiliationDescriptor	Ottawa of Oklahoma	DEPRECATED: Ottawa of Oklahoma	DEPRECATED: Ottawa Tribe of Oklahoma	\N	\N	\N	2022-11-17 17:08:00.41526	2022-11-17 17:08:00.415234	ac630db2-795b-4774-bfe1-924d410bf546	3116
3119	uri://ed-fi.org/TribalAffiliationDescriptor	Peoria	DEPRECATED: Peoria	DEPRECATED: Peoria Tribe of Indians of Oklahoma	\N	\N	\N	2022-11-17 17:08:00.433733	2022-11-17 17:08:00.433704	841d5059-3e3e-4cf0-b89c-d591b32a5ca9	3119
3122	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation	DEPRECATED: Oklahoma	DEPRECATED: Sac and Fox Nation, Oklahoma	\N	\N	\N	2022-11-17 17:08:00.461277	2022-11-17 17:08:00.461248	ebb22a85-2d91-4e4b-822e-0b9bcf90a24a	3122
3124	uri://ed-fi.org/TribalAffiliationDescriptor	Salamatoff	DEPRECATED: Salamatoff	DEPRECATED: Village of Salamatoff	\N	\N	\N	2022-11-17 17:08:00.471696	2022-11-17 17:08:00.47167	9dda5990-e952-48d2-bc7b-8269c641c507	3124
3125	uri://ed-fi.org/TribalAffiliationDescriptor	San Manuel	DEPRECATED: San Manuel	DEPRECATED: San Manuel Band of Mission Indians, California	\N	\N	\N	2022-11-17 17:08:00.486281	2022-11-17 17:08:00.486254	30e49edb-1ca7-4e6a-a443-c4a7d7170081	3125
3128	uri://ed-fi.org/TribalAffiliationDescriptor	Seneca-Cayuga	DEPRECATED: Seneca-Cayuga	DEPRECATED: Seneca-Cayuga Nation	\N	\N	\N	2022-11-17 17:08:00.496802	2022-11-17 17:08:00.496774	79255703-1b3f-47c7-9da2-cb280c9987e9	3128
3129	uri://ed-fi.org/TribalAffiliationDescriptor	Shawnee	DEPRECATED: Shawnee	DEPRECATED: Shawnee Tribe	\N	\N	\N	2022-11-17 17:08:00.50159	2022-11-17 17:08:00.501557	09ed2b45-6267-458b-83a2-7960c2cae243	3129
3132	uri://ed-fi.org/TribalAffiliationDescriptor	Ute Mountain	DEPRECATED: Ute Mountain	DEPRECATED: Ute Mountain Ute Tribe	\N	\N	\N	2022-11-17 17:08:00.511766	2022-11-17 17:08:00.511737	9e761952-4cb0-4620-b222-a5a75d02396a	3132
3134	uri://ed-fi.org/VisaDescriptor	B2 - Tourist Visa	B2 - Tourist Visa	B2 - Tourist Visa	\N	\N	\N	2022-11-17 17:08:00.565774	2022-11-17 17:08:00.564068	438f9a73-1394-4d1d-ae71-70b63a06b2fb	3134
3136	uri://ed-fi.org/VisaDescriptor	F1 - Foreign Student Visa	F1 - Foreign Student Visa	F1 - Foreign Student Visa	\N	\N	\N	2022-11-17 17:08:00.575816	2022-11-17 17:08:00.575785	da7d38ca-13a1-4f73-97b4-bab17690f439	3136
3138	uri://ed-fi.org/VisaDescriptor	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	J1 - Exchange Scholar Visa	\N	\N	\N	2022-11-17 17:08:00.586354	2022-11-17 17:08:00.586323	c280dc65-51d6-4a53-adfb-5b492039a1e0	3138
3139	uri://ed-fi.org/VisaDescriptor	M1 - Foreign Student vocational/non-academic Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	M1 - Foreign Student pursuing vocational or non-academic studies Visa	\N	\N	\N	2022-11-17 17:08:00.615858	2022-11-17 17:08:00.615781	8e0882e9-7901-407b-8621-ef543f06afeb	3139
3141	uri://ed-fi.org/WeaponDescriptor	Handgun	Handgun	Handgun	\N	\N	\N	2022-11-17 17:08:00.666298	2022-11-17 17:08:00.664978	33611551-9297-452e-8e35-82dbb0bddbbb	3141
3120	uri://ed-fi.org/TribalAffiliationDescriptor	Quapaw	DEPRECATED: Quapaw	DEPRECATED: The Quapaw Tribe of Indians	\N	\N	\N	2022-11-17 17:08:00.439149	2022-11-17 17:08:00.43912	84672a8c-383b-4f69-b3df-9608d78c5a14	3120
3121	uri://ed-fi.org/TribalAffiliationDescriptor	Ramah	DEPRECATED: Ramah	DEPRECATED: Ramah Navajo Chapter	\N	\N	\N	2022-11-17 17:08:00.458273	2022-11-17 17:08:00.458235	1b1fe44b-c93d-4608-9cdb-fe474105920d	3121
3123	uri://ed-fi.org/TribalAffiliationDescriptor	Sac and Fox Nation of Missouri in KS and NE	DEPRECATED: Sac and Fox Nation of Missouri in Kansas and Nebraska	DEPRECATED: Sac and Fox Nation of Missouri in Kansas and Nebraska	\N	\N	\N	2022-11-17 17:08:00.465668	2022-11-17 17:08:00.465639	a2dee648-93d4-4f90-9e7a-1282f0ca13ec	3123
3126	uri://ed-fi.org/TribalAffiliationDescriptor	Santa Rosa of Chuilla	DEPRECATED: Santa Rosa of Chuilla	DEPRECATED: Santa Rosa Band of Cahuilla Indians, California	\N	\N	\N	2022-11-17 17:08:00.489344	2022-11-17 17:08:00.489315	38059e39-c170-49f7-bb41-064a51987a3c	3126
3127	uri://ed-fi.org/TribalAffiliationDescriptor	Seminole of Oklahoma	DEPRECATED: Seminole of Oklahoma	DEPRECATED: The Seminole Nation of Oklahoma	\N	\N	\N	2022-11-17 17:08:00.494127	2022-11-17 17:08:00.49407	befe9f6e-e75f-4b8b-9852-102641e4886c	3127
3130	uri://ed-fi.org/TribalAffiliationDescriptor	Thlopthlocco	DEPRECATED: Thlopthlocco	DEPRECATED: Thlopthlocco Tribal Town	\N	\N	\N	2022-11-17 17:08:00.504462	2022-11-17 17:08:00.504434	a3ec8231-19cb-45b3-b7a0-f333bd3c6652	3130
3131	uri://ed-fi.org/TribalAffiliationDescriptor	United Keetoowah	DEPRECATED: United Keetoowah	DEPRECATED: United Keetoowah Band of Cherokee Indians in Oklahoma	\N	\N	\N	2022-11-17 17:08:00.509022	2022-11-17 17:08:00.508939	40a21a40-1d8b-403c-8d33-4911ad11f578	3131
3133	uri://ed-fi.org/TribalAffiliationDescriptor	Zuni	DEPRECATED: Zuni	DEPRECATED: Zuni Tribe of the Zuni Reservation	\N	\N	\N	2022-11-17 17:08:00.516274	2022-11-17 17:08:00.516245	58b3648e-033a-4eac-9f0b-2d2e87cc9399	3133
3135	uri://ed-fi.org/VisaDescriptor	B1 - Business Visa	B1 - Business Visa	B1 - Business Visa	\N	\N	\N	2022-11-17 17:08:00.565774	2022-11-17 17:08:00.564071	98138762-fdbd-472f-b5bb-8274ab71ddba	3135
3137	uri://ed-fi.org/VisaDescriptor	H1 - Employment Visa	H1 - Employment Visa	H1 - Employment Visa	\N	\N	\N	2022-11-17 17:08:00.584194	2022-11-17 17:08:00.584135	e14b3b1d-030e-4dfd-b83d-6625e56e6c4c	3137
3140	uri://ed-fi.org/VisaDescriptor	Other Visa	Other Visa	Other Visa	\N	\N	\N	2022-11-17 17:08:00.618669	2022-11-17 17:08:00.618636	1b043005-dc51-4562-aced-46c34c428b29	3140
3142	uri://ed-fi.org/WeaponDescriptor	Club	Club	Club	\N	\N	\N	2022-11-17 17:08:00.666309	2022-11-17 17:08:00.664975	22b69483-4161-46e4-909e-253dd058c1b1	3142
3144	uri://ed-fi.org/WeaponDescriptor	Other	Other	Other	\N	\N	\N	2022-11-17 17:08:00.678788	2022-11-17 17:08:00.678755	1139520a-f581-44e0-a919-d1a88baf1589	3144
3146	uri://ed-fi.org/WeaponDescriptor	Other Object	Other Object	Other Object	\N	\N	\N	2022-11-17 17:08:00.68816	2022-11-17 17:08:00.688108	e458681a-8059-479e-bf9e-eaabf60b8697	3146
3149	uri://ed-fi.org/WeaponDescriptor	Substance Used as Weapon	Substance Used as Weapon	Substance Used as Weapon	\N	\N	\N	2022-11-17 17:08:00.698956	2022-11-17 17:08:00.698924	22b12987-e977-4f9e-9c5a-43729133753c	3149
3150	uri://ed-fi.org/WeaponDescriptor	Unknown	Unknown	Unknown	\N	\N	\N	2022-11-17 17:08:00.703473	2022-11-17 17:08:00.703439	644a7ec8-3cd6-48a1-bcd2-1b9e7ad2da50	3150
3147	uri://ed-fi.org/WeaponDescriptor	Other Sharp Objects	Other Sharp Objects	Other Sharp Objects	\N	\N	\N	2022-11-17 17:08:00.690955	2022-11-17 17:08:00.690923	e41c5018-6255-40eb-a1dd-707b324beeab	3147
3148	uri://ed-fi.org/WeaponDescriptor	Rifle/Shotgun	Rifle/Shotgun	Rifle/Shotgun	\N	\N	\N	2022-11-17 17:08:00.696212	2022-11-17 17:08:00.696102	f39c2e96-2b7c-4a3c-82bb-d2847e4654d6	3148
\.


--
-- Data for Name: descriptormapping; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptormapping (mappednamespace, mappedvalue, namespace, value, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: descriptormappingmodelentity; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.descriptormappingmodelentity (mappednamespace, mappedvalue, modelentitydescriptorid, namespace, value, createdate) FROM stdin;
\.


--
-- Data for Name: diagnosisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diagnosisdescriptor (diagnosisdescriptorid) FROM stdin;
740
741
\.


--
-- Data for Name: diplomaleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomaleveldescriptor (diplomaleveldescriptorid) FROM stdin;
743
742
744
745
746
747
748
\.


--
-- Data for Name: diplomatypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.diplomatypedescriptor (diplomatypedescriptorid) FROM stdin;
750
749
751
752
753
754
755
756
757
758
759
760
761
762
763
764
765
\.


--
-- Data for Name: disabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydescriptor (disabilitydescriptorid) FROM stdin;
766
767
768
769
770
771
772
773
774
775
776
777
778
779
780
781
782
783
784
785
\.


--
-- Data for Name: disabilitydesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydesignationdescriptor (disabilitydesignationdescriptorid) FROM stdin;
786
787
788
\.


--
-- Data for Name: disabilitydeterminationsourcetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disabilitydeterminationsourcetypedescriptor (disabilitydeterminationsourcetypedescriptorid) FROM stdin;
789
790
791
792
793
794
795
796
797
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineaction (disciplineactionidentifier, disciplinedate, studentusi, disciplineactionlength, actualdisciplineactionlength, disciplineactionlengthdifferencereasondescriptorid, relatedtozerotolerancepolicy, responsibilityschoolid, assignmentschoolid, receivededucationservicesduringexpulsion, iepplacementmeetingindicator, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineactiondiscipline; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactiondiscipline (disciplineactionidentifier, disciplinedate, disciplinedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionlengthdifferencereasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionlengthdifferencereasondescriptor (disciplineactionlengthdifferencereasondescriptorid) FROM stdin;
799
798
800
801
802
803
804
805
806
807
808
809
\.


--
-- Data for Name: disciplineactionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstaff (disciplineactionidentifier, disciplinedate, staffusi, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionstudentdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstudentdisciplineincidentassociation (disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineactionstudentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation (behaviordescriptorid, disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: disciplinedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplinedescriptor (disciplinedescriptorid) FROM stdin;
811
810
812
813
814
815
816
817
818
819
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincident (incidentidentifier, schoolid, incidentdate, incidenttime, incidentlocationdescriptorid, incidentdescription, reporterdescriptiondescriptorid, reportername, reportedtolawenforcement, casenumber, incidentcost, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: disciplineincidentbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentbehavior (behaviordescriptorid, incidentidentifier, schoolid, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentexternalparticipant; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentexternalparticipant (disciplineincidentparticipationcodedescriptorid, firstname, incidentidentifier, lastsurname, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincidentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentparticipationcodedescriptor (disciplineincidentparticipationcodedescriptorid) FROM stdin;
821
820
822
823
\.


--
-- Data for Name: disciplineincidentweapon; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.disciplineincidentweapon (incidentidentifier, schoolid, weapondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationalenvironmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationalenvironmentdescriptor (educationalenvironmentdescriptorid) FROM stdin;
825
824
826
827
828
829
830
831
832
833
834
835
836
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontent (contentidentifier, learningresourcemetadatauri, shortdescription, description, additionalauthorsindicator, publisher, timerequired, interactivitystyledescriptorid, contentclassdescriptorid, userightsurl, publicationdate, publicationyear, version, learningstandardid, cost, costratedescriptorid, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriategradelevel (contentidentifier, gradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentappropriatesex (contentidentifier, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentauthor (author, contentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceeducationcontent (contentidentifier, derivativesourcecontentidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourcelearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourcelearningresourcemetadatauri (contentidentifier, derivativesourcelearningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentderivativesourceuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentderivativesourceuri (contentidentifier, derivativesourceuri, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationcontentlanguage (contentidentifier, languagedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganization (educationorganizationid, nameofinstitution, shortnameofinstitution, website, operationalstatusdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddress (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationaddressperiod (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationassociationtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationassociationtypedescriptor (educationorganizationassociationtypedescriptorid) FROM stdin;
838
839
837
\.


--
-- Data for Name: educationorganizationcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategory (educationorganizationcategorydescriptorid, educationorganizationid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationcategorydescriptor (educationorganizationcategorydescriptorid) FROM stdin;
840
842
844
846
841
843
845
847
\.


--
-- Data for Name: educationorganizationidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationcode (educationorganizationid, educationorganizationidentificationsystemdescriptorid, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationidentificationsystemdescriptor (educationorganizationidentificationsystemdescriptorid) FROM stdin;
849
848
850
851
852
853
854
855
856
857
858
\.


--
-- Data for Name: educationorganizationindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicator (educationorganizationid, indicatordescriptorid, designatedby, indicatorvalue, indicatorleveldescriptorid, indicatorgroupdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationindicatorperiod (begindate, educationorganizationid, indicatordescriptorid, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinstitutiontelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinstitutiontelephone (educationorganizationid, institutiontelephonenumbertypedescriptorid, telephonenumber, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinternationaladdress (addresstypedescriptorid, educationorganizationid, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationinterventionprescriptionassociation (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, begindate, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetwork; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetwork (educationorganizationnetworkid, networkpurposedescriptorid) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationnetworkassociation (educationorganizationnetworkid, membereducationorganizationid, begindate, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationorganizationpeerassociation (educationorganizationid, peereducationorganizationid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: educationplandescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationplandescriptor (educationplandescriptorid) FROM stdin;
860
859
861
862
863
864
865
866
867
868
869
870
\.


--
-- Data for Name: educationservicecenter; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.educationservicecenter (educationservicecenterid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: electronicmailtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.electronicmailtypedescriptor (electronicmailtypedescriptorid) FROM stdin;
871
872
873
874
\.


--
-- Data for Name: employmentstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.employmentstatusdescriptor (employmentstatusdescriptorid) FROM stdin;
876
878
879
881
883
875
877
880
882
884
\.


--
-- Data for Name: entrygradelevelreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrygradelevelreasondescriptor (entrygradelevelreasondescriptorid) FROM stdin;
885
888
890
892
893
896
897
886
887
889
891
894
895
\.


--
-- Data for Name: entrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.entrytypedescriptor (entrytypedescriptorid) FROM stdin;
898
901
899
900
902
\.


--
-- Data for Name: eventcircumstancedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.eventcircumstancedescriptor (eventcircumstancedescriptorid) FROM stdin;
904
905
907
909
912
913
915
917
920
922
924
926
928
930
932
934
903
906
908
910
911
914
916
918
919
921
923
925
927
929
931
933
\.


--
-- Data for Name: exitwithdrawtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.exitwithdrawtypedescriptor (exitwithdrawtypedescriptorid) FROM stdin;
936
937
940
941
944
945
947
949
935
938
939
942
943
946
948
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.feederschoolassociation (begindate, feederschoolid, schoolid, enddate, feederrelationshipdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: financialcollectiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.financialcollectiondescriptor (financialcollectiondescriptorid) FROM stdin;
950
952
951
953
954
\.


--
-- Data for Name: functiondimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.functiondimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: functiondimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.functiondimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: funddimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.funddimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: funddimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.funddimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, enddate, reasonexiteddescriptorid, servedoutsideofregularsession, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociationparticipationstatus; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociationparticipationstatus (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, participationstatusdescriptorid, statusbegindate, statusenddate, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociationprogramparticipationstatus; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.generalstudentprogramassociationprogramparticipationstatus (begindate, educationorganizationid, participationstatusdescriptorid, programeducationorganizationid, programname, programtypedescriptorid, statusbegindate, studentusi, statusenddate, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.grade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, lettergradeearned, numericgradeearned, diagnosticstatement, performancebaseconversiondescriptorid, currentgradeindicator, currentgradeasofdate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentry (gradebookentryidentifier, namespace, sourcesectionidentifier, sectionidentifier, localcoursecode, sessionname, schoolid, dateassigned, title, description, duedate, duetime, gradebookentrytypedescriptorid, maxpoints, gradingperioddescriptorid, periodsequence, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradebookentrylearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrylearningstandard (gradebookentryidentifier, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentrytypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradebookentrytypedescriptor (gradebookentrytypedescriptorid) FROM stdin;
956
957
960
962
955
958
959
961
\.


--
-- Data for Name: gradelearningstandardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradelearningstandardgrade (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, lettergradeearned, numericgradeearned, diagnosticstatement, performancebaseconversiondescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: gradeleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradeleveldescriptor (gradeleveldescriptorid) FROM stdin;
963
964
965
966
967
968
969
970
971
972
973
974
975
976
977
978
979
980
981
982
983
984
985
986
987
988
\.


--
-- Data for Name: gradepointaveragetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradepointaveragetypedescriptor (gradepointaveragetypedescriptorid) FROM stdin;
989
990
\.


--
-- Data for Name: gradetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradetypedescriptor (gradetypedescriptorid) FROM stdin;
992
991
993
994
995
996
997
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperiod (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, begindate, enddate, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: gradingperioddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gradingperioddescriptor (gradingperioddescriptorid) FROM stdin;
999
998
1000
1001
1002
1003
1004
1005
1006
1007
1008
1009
1010
1011
1012
1013
1014
1015
1016
1017
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplan (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, individualplan, totalrequiredcredits, totalrequiredcredittypedescriptorid, totalrequiredcreditconversion, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycourse (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, credits, credittypedescriptorid, creditconversion, whentakengradeleveldescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycoursecourse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycoursecourse (coursecode, courseeducationorganizationid, coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbycreditcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbycreditcategory (creditcategorydescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, credits, credittypedescriptorid, creditconversion, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplancreditsbysubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplancreditsbysubject (academicsubjectdescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, credits, credittypedescriptorid, creditconversion, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessment (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentperformancelevel (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace, performanceleveldescriptorid, assessmentreportingmethoddescriptorid, minimumscore, maximumscore, resultdatatypetypedescriptorid, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplanrequiredassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplanrequiredassessmentscore (assessmentidentifier, assessmentreportingmethoddescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplantypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.graduationplantypedescriptor (graduationplantypedescriptorid) FROM stdin;
1019
1018
1020
1021
1022
\.


--
-- Data for Name: gunfreeschoolsactreportingstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.gunfreeschoolsactreportingstatusdescriptor (gunfreeschoolsactreportingstatusdescriptorid) FROM stdin;
1023
1024
1025
1026
\.


--
-- Data for Name: homelessprimarynighttimeresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprimarynighttimeresidencedescriptor (homelessprimarynighttimeresidencedescriptorid) FROM stdin;
1027
1028
1029
1030
\.


--
-- Data for Name: homelessprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.homelessprogramservicedescriptor (homelessprogramservicedescriptorid) FROM stdin;
1032
1033
1035
1037
1038
1031
1034
1036
\.


--
-- Data for Name: identificationdocumentusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.identificationdocumentusedescriptor (identificationdocumentusedescriptorid) FROM stdin;
1039
1040
1041
\.


--
-- Data for Name: incidentlocationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.incidentlocationdescriptor (incidentlocationdescriptorid) FROM stdin;
1043
1045
1047
1048
1050
1053
1055
1057
1059
1060
1063
1065
1042
1044
1046
1049
1051
1052
1054
1056
1058
1061
1062
1064
1066
\.


--
-- Data for Name: indicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatordescriptor (indicatordescriptorid) FROM stdin;
1067
\.


--
-- Data for Name: indicatorgroupdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorgroupdescriptor (indicatorgroupdescriptorid) FROM stdin;
1068
\.


--
-- Data for Name: indicatorleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.indicatorleveldescriptor (indicatorleveldescriptorid) FROM stdin;
1070
1069
1071
\.


--
-- Data for Name: institutiontelephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.institutiontelephonenumbertypedescriptor (institutiontelephonenumbertypedescriptorid) FROM stdin;
1072
1073
1074
1075
1076
1077
1078
\.


--
-- Data for Name: interactivitystyledescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interactivitystyledescriptor (interactivitystyledescriptorid) FROM stdin;
1079
1081
1080
1082
\.


--
-- Data for Name: internetaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccessdescriptor (internetaccessdescriptorid) FROM stdin;
1083
1085
1087
1089
1091
1093
1095
1084
1086
1088
1090
1092
1094
\.


--
-- Data for Name: internetaccesstypeinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetaccesstypeinresidencedescriptor (internetaccesstypeinresidencedescriptorid) FROM stdin;
1096
1097
1098
1099
1100
1101
1102
1103
1104
\.


--
-- Data for Name: internetperformanceinresidencedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.internetperformanceinresidencedescriptor (internetperformanceinresidencedescriptorid) FROM stdin;
1106
1105
1107
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.intervention (educationorganizationid, interventionidentificationcode, interventionclassdescriptorid, deliverymethoddescriptorid, begindate, enddate, mindosage, maxdosage, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriategradelevel (educationorganizationid, gradeleveldescriptorid, interventionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionappropriatesex (educationorganizationid, interventionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionclassdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionclassdescriptor (interventionclassdescriptorid) FROM stdin;
1109
1110
1108
1111
\.


--
-- Data for Name: interventiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventiondiagnosis (diagnosisdescriptorid, educationorganizationid, interventionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneducationcontent (contentidentifier, educationorganizationid, interventionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventioneffectivenessratingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioneffectivenessratingdescriptor (interventioneffectivenessratingdescriptorid) FROM stdin;
1113
1112
1114
1115
1116
1117
1118
\.


--
-- Data for Name: interventioninterventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventioninterventionprescription (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionlearningresourcemetadatauri (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionmeetingtime; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionmeetingtime (educationorganizationid, endtime, interventionidentificationcode, starttime, createdate) FROM stdin;
\.


--
-- Data for Name: interventionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionpopulationserved (educationorganizationid, interventionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescription (educationorganizationid, interventionprescriptionidentificationcode, interventionclassdescriptorid, deliverymethoddescriptorid, mindosage, maxdosage, namespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriategradelevel (educationorganizationid, gradeleveldescriptorid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionappropriatesex (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptiondiagnosis; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptiondiagnosis (diagnosisdescriptorid, educationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptioneducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptioneducationcontent (contentidentifier, educationorganizationid, interventionprescriptionidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionlearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionlearningresourcemetadatauri (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionpopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionpopulationserved (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescriptionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionprescriptionuri (educationorganizationid, interventionprescriptionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstaff (educationorganizationid, interventionidentificationcode, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudy (educationorganizationid, interventionstudyidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode, participants, deliverymethoddescriptorid, interventionclassdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriategradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriategradelevel (educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyappropriatesex; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyappropriatesex (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyeducationcontent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyeducationcontent (contentidentifier, educationorganizationid, interventionstudyidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyinterventioneffectiveness (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode, populationserveddescriptorid, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudylearningresourcemetadatauri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudylearningresourcemetadatauri (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudypopulationserved; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudypopulationserved (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudystateabbreviation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudystateabbreviation (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudyuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionstudyuri (educationorganizationid, interventionstudyidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: interventionuri; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.interventionuri (educationorganizationid, interventionidentificationcode, uri, createdate) FROM stdin;
\.


--
-- Data for Name: languagedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languagedescriptor (languagedescriptorid) FROM stdin;
1119
1120
1121
1122
1123
1124
1125
1126
1127
1128
1129
1130
1131
1132
1133
1134
1135
1136
1137
1138
1139
1140
1141
1142
1143
1144
1145
1146
1147
1148
1149
1150
1151
1152
1153
1154
1155
1156
1157
1158
1159
1160
1161
1162
1163
1164
1165
1166
1167
1168
1169
1170
1171
1172
1173
1174
1175
1176
1177
1178
1179
1180
1181
1182
1183
1184
1185
1186
1187
1188
1189
1190
1191
1192
1193
1194
1195
1196
1197
1198
1199
1200
1201
1202
1203
1204
1205
1206
1207
1208
1209
1210
1211
1212
1213
1214
1215
1216
1217
1218
1219
1220
1221
1222
1223
1224
1225
1226
1227
1228
1229
1230
1231
1232
1233
1234
1235
1236
1237
1238
1239
1240
1241
1242
1243
1244
1245
1246
1247
1248
1249
1250
1251
1252
1253
1254
1255
1256
1257
1258
1259
1260
1261
1262
1263
1264
1265
1266
1267
1268
1269
1270
1271
1272
1273
1274
1275
1276
1277
1278
1279
1280
1281
1282
1283
1284
1285
1286
1287
1288
1289
1290
1291
1292
1293
1294
1295
1296
1297
1298
1299
1300
1301
1302
1303
1304
1305
1306
1307
1308
1309
1310
1311
1312
1313
1314
1315
1316
1317
1318
1319
1320
1321
1322
1323
1324
1325
1326
1327
1328
1329
1330
1331
1332
1333
1334
1335
1336
1337
1338
1339
1340
1341
1342
1343
1344
1345
1347
1349
1351
1352
1354
1357
1359
1361
1363
1364
1366
1368
1370
1372
1374
1376
1378
1381
1382
1384
1385
1387
1388
1390
1392
1394
1396
1398
1399
1401
1403
1405
1407
1409
1411
1413
1415
1418
1420
1421
1424
1425
1427
1430
1432
1434
1437
1439
1441
1443
1445
1446
1448
1451
1452
1454
1456
1458
1460
1461
1463
1464
1466
1468
1471
1472
1474
1476
1477
1479
1481
1483
1484
1486
1488
1490
1492
1493
1495
1497
1499
1501
1504
1505
1507
1509
1511
1513
1514
1516
1518
1520
1523
1525
1526
1529
1531
1533
1536
1537
1539
1541
1543
1546
1549
1551
1553
1555
1557
1559
1562
1564
1566
1568
1569
1572
1574
1575
1577
1579
1580
1582
1584
1586
1587
1589
1592
1594
1597
1598
1600
1601
1346
1348
1350
1353
1355
1356
1358
1360
1362
1365
1367
1369
1371
1373
1375
1377
1379
1380
1383
1386
1389
1391
1393
1395
1397
1400
1402
1404
1406
1408
1410
1412
1414
1416
1417
1419
1422
1423
1426
1428
1429
1431
1433
1435
1436
1438
1440
1442
1444
1447
1449
1450
1453
1455
1457
1459
1462
1465
1467
1469
1470
1473
1475
1478
1480
1482
1485
1487
1489
1491
1494
1496
1498
1500
1502
1503
1506
1508
1510
1512
1515
1517
1519
1521
1522
1524
1527
1528
1530
1532
1534
1535
1538
1540
1542
1544
1545
1547
1548
1550
1552
1554
1556
1558
1560
1561
1563
1565
1567
1570
1571
1573
1576
1578
1581
1583
1585
1588
1590
1591
1593
1595
1596
1599
1602
\.


--
-- Data for Name: languageinstructionprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageinstructionprogramservicedescriptor (languageinstructionprogramservicedescriptorid) FROM stdin;
1603
1604
1605
1606
1607
1608
1609
1610
1611
1612
1613
1614
1615
1616
1617
1618
1619
\.


--
-- Data for Name: languageusedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.languageusedescriptor (languageusedescriptorid) FROM stdin;
1621
1620
1622
1623
1624
1625
1626
1627
\.


--
-- Data for Name: learningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjective (learningobjectiveid, namespace, objective, description, nomenclature, successcriteria, parentlearningobjectiveid, parentnamespace, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningobjectiveacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectiveacademicsubject (academicsubjectdescriptorid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivecontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivecontentstandard (learningobjectiveid, namespace, title, version, uri, publicationdate, publicationyear, publicationstatusdescriptorid, mandatingeducationorganizationid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivecontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivecontentstandardauthor (author, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivegradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivegradelevel (gradeleveldescriptorid, learningobjectiveid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjectivelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningobjectivelearningstandard (learningobjectiveid, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandard (learningstandardid, description, learningstandarditemcode, uri, coursetitle, successcriteria, parentlearningstandardid, namespace, learningstandardcategorydescriptorid, learningstandardscopedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardacademicsubject (academicsubjectdescriptorid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcategorydescriptor (learningstandardcategorydescriptorid) FROM stdin;
1628
1629
1630
\.


--
-- Data for Name: learningstandardcontentstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandard (learningstandardid, title, version, uri, publicationdate, publicationyear, publicationstatusdescriptorid, mandatingeducationorganizationid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardcontentstandardauthor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardcontentstandardauthor (author, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalenceassociation (namespace, sourcelearningstandardid, targetlearningstandardid, effectivedate, learningstandardequivalencestrengthdescriptorid, learningstandardequivalencestrengthdescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalencestrengthdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardequivalencestrengthdescriptor (learningstandardequivalencestrengthdescriptorid) FROM stdin;
1632
1633
1631
1634
\.


--
-- Data for Name: learningstandardgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardgradelevel (gradeleveldescriptorid, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardidentificationcode (contentstandardname, identificationcode, learningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardprerequisitelearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardprerequisitelearningstandard (learningstandardid, prerequisitelearningstandardid, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardscopedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.learningstandardscopedescriptor (learningstandardscopedescriptorid) FROM stdin;
1636
1635
1637
1638
1639
1640
\.


--
-- Data for Name: levelofeducationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.levelofeducationdescriptor (levelofeducationdescriptorid) FROM stdin;
1642
1641
1643
1644
1645
1646
1647
\.


--
-- Data for Name: licensestatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensestatusdescriptor (licensestatusdescriptorid) FROM stdin;
1649
1648
1650
\.


--
-- Data for Name: licensetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.licensetypedescriptor (licensetypedescriptorid) FROM stdin;
1652
1653
1655
1657
1659
1661
1662
1664
1651
1654
1656
1658
1660
1663
1665
\.


--
-- Data for Name: limitedenglishproficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.limitedenglishproficiencydescriptor (limitedenglishproficiencydescriptorid) FROM stdin;
1667
1666
1668
1669
\.


--
-- Data for Name: localaccount; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localaccount (accountidentifier, educationorganizationid, fiscalyear, accountname, chartofaccountidentifier, chartofaccounteducationorganizationid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localaccountreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localaccountreportingtag (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid, tagvalue, createdate) FROM stdin;
\.


--
-- Data for Name: localactual; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localactual (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localbudget; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localbudget (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localcontractedstaff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localcontractedstaff (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localedescriptor (localedescriptorid) FROM stdin;
1670
1672
1674
1676
1678
1680
1671
1673
1675
1677
1679
1681
\.


--
-- Data for Name: localeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagency (localeducationagencyid, localeducationagencycategorydescriptorid, charterstatusdescriptorid, parentlocaleducationagencyid, educationservicecenterid, stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: localeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyaccountability (localeducationagencyid, schoolyear, gunfreeschoolsactreportingstatusdescriptorid, schoolchoiceimplementstatusdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: localeducationagencycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencycategorydescriptor (localeducationagencycategorydescriptorid) FROM stdin;
1683
1685
1686
1689
1690
1682
1684
1687
1688
1691
1692
\.


--
-- Data for Name: localeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localeducationagencyfederalfunds (fiscalyear, localeducationagencyid, innovativedollarsspent, innovativedollarsspentstrategicpriorities, innovativeprogramsfundsreceived, schoolimprovementallocation, schoolimprovementreservedfundspercentage, supplementaleducationalservicesfundsspent, supplementaleducationalservicesperpupilexpenditure, stateassessmentadministrationfunding, createdate) FROM stdin;
\.


--
-- Data for Name: localencumbrance; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localencumbrance (accountidentifier, asofdate, educationorganizationid, fiscalyear, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: localpayroll; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.localpayroll (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi, amount, financialcollectiondescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.location (classroomidentificationcode, schoolid, maximumnumberofseats, optimalnumberofseats, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: magnetspecialprogramemphasisschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.magnetspecialprogramemphasisschooldescriptor (magnetspecialprogramemphasisschooldescriptorid) FROM stdin;
1693
1694
1695
\.


--
-- Data for Name: mediumofinstructiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.mediumofinstructiondescriptor (mediumofinstructiondescriptorid) FROM stdin;
1696
1697
1698
1699
1700
1701
1702
1703
1704
1705
1706
1707
1708
\.


--
-- Data for Name: methodcreditearneddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.methodcreditearneddescriptor (methodcreditearneddescriptorid) FROM stdin;
1709
1711
1714
1716
1710
1712
1713
1715
\.


--
-- Data for Name: migranteducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.migranteducationprogramservicedescriptor (migranteducationprogramservicedescriptorid) FROM stdin;
1718
1717
1719
1720
1721
1723
1722
\.


--
-- Data for Name: modelentitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.modelentitydescriptor (modelentitydescriptorid) FROM stdin;
\.


--
-- Data for Name: monitoreddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.monitoreddescriptor (monitoreddescriptorid) FROM stdin;
1724
1725
1726
\.


--
-- Data for Name: neglectedordelinquentprogramdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramdescriptor (neglectedordelinquentprogramdescriptorid) FROM stdin;
1727
1728
1729
1730
1731
1732
\.


--
-- Data for Name: neglectedordelinquentprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.neglectedordelinquentprogramservicedescriptor (neglectedordelinquentprogramservicedescriptorid) FROM stdin;
1733
1735
1737
1739
1741
1743
1744
1734
1736
1738
1740
1742
1745
\.


--
-- Data for Name: networkpurposedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.networkpurposedescriptor (networkpurposedescriptorid) FROM stdin;
1747
1746
\.


--
-- Data for Name: objectdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessment (assessmentidentifier, identificationcode, namespace, maxrawscore, percentofassessment, nomenclature, description, parentidentificationcode, academicsubjectdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentassessmentitem (assessmentidentifier, assessmentitemidentificationcode, identificationcode, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentlearningstandard (assessmentidentifier, identificationcode, learningstandardid, namespace, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid, minimumscore, maximumscore, resultdatatypetypedescriptorid, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessmentscore; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.objectiveassessmentscore (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, minimumscore, maximumscore, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: oldethnicitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.oldethnicitydescriptor (oldethnicitydescriptorid) FROM stdin;
1749
1750
1748
1751
1752
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffposition (educationorganizationid, requisitionnumber, employmentstatusdescriptorid, staffclassificationdescriptorid, positiontitle, programassignmentdescriptorid, dateposted, datepostingremoved, postingresultdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: openstaffpositionacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositionacademicsubject (academicsubjectdescriptorid, educationorganizationid, requisitionnumber, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffpositioninstructionalgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.openstaffpositioninstructionalgradelevel (educationorganizationid, gradeleveldescriptorid, requisitionnumber, createdate) FROM stdin;
\.


--
-- Data for Name: operationalstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalstatusdescriptor (operationalstatusdescriptorid) FROM stdin;
1754
1753
1755
1756
1757
1758
1759
1760
\.


--
-- Data for Name: operationalunitdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalunitdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: operationalunitdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.operationalunitdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: organizationdepartment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.organizationdepartment (organizationdepartmentid, academicsubjectdescriptorid, parenteducationorganizationid) FROM stdin;
\.


--
-- Data for Name: othernametypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.othernametypedescriptor (othernametypedescriptorid) FROM stdin;
1761
1762
1763
1764
\.


--
-- Data for Name: parent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parent (parentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, sexdescriptorid, loginid, personid, sourcesystemdescriptorid, highestcompletedlevelofeducationdescriptorid, parentuniqueid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: parentaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentaddress (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: parentaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentaddressperiod (addresstypedescriptorid, begindate, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: parentelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentelectronicmail (electronicmailaddress, electronicmailtypedescriptorid, parentusi, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: parentinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentinternationaladdress (addresstypedescriptorid, parentusi, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: parentlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentlanguage (languagedescriptorid, parentusi, createdate) FROM stdin;
\.


--
-- Data for Name: parentlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentlanguageuse (languagedescriptorid, languageusedescriptorid, parentusi, createdate) FROM stdin;
\.


--
-- Data for Name: parentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentothername (othernametypedescriptorid, parentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: parentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parentpersonalidentificationdocument (identificationdocumentusedescriptorid, parentusi, personalinformationverificationdescriptorid, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: parenttelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.parenttelephone (parentusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: participationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationdescriptor (participationdescriptorid) FROM stdin;
1765
1766
1767
1768
\.


--
-- Data for Name: participationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.participationstatusdescriptor (participationstatusdescriptorid) FROM stdin;
1769
1770
1771
1772
1773
\.


--
-- Data for Name: performancebaseconversiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performancebaseconversiondescriptor (performancebaseconversiondescriptorid) FROM stdin;
1775
1776
1778
1780
1774
1777
1779
\.


--
-- Data for Name: performanceleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.performanceleveldescriptor (performanceleveldescriptorid) FROM stdin;
1782
1783
1785
1787
1789
1791
1793
1781
1784
1786
1788
1790
1792
1794
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.person (personid, sourcesystemdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: personalinformationverificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.personalinformationverificationdescriptor (personalinformationverificationdescriptorid) FROM stdin;
1796
1798
1800
1801
1804
1805
1807
1795
1797
1799
1802
1803
1806
1808
1809
\.


--
-- Data for Name: platformtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.platformtypedescriptor (platformtypedescriptorid) FROM stdin;
1810
1811
\.


--
-- Data for Name: populationserveddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.populationserveddescriptor (populationserveddescriptorid) FROM stdin;
1813
1812
1814
1815
1816
1817
1818
1819
1820
1821
1822
\.


--
-- Data for Name: postingresultdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postingresultdescriptor (postingresultdescriptorid) FROM stdin;
1823
1824
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryevent (eventdate, postsecondaryeventcategorydescriptorid, studentusi, postsecondaryinstitutionid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: postsecondaryeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryeventcategorydescriptor (postsecondaryeventcategorydescriptorid) FROM stdin;
1826
1827
1829
1832
1833
1825
1828
1830
1831
1834
1835
\.


--
-- Data for Name: postsecondaryinstitution; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitution (postsecondaryinstitutionid, postsecondaryinstitutionleveldescriptorid, administrativefundingcontroldescriptorid) FROM stdin;
\.


--
-- Data for Name: postsecondaryinstitutionleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionleveldescriptor (postsecondaryinstitutionleveldescriptorid) FROM stdin;
1836
1837
1838
1839
1840
1841
1842
1843
1844
1845
1846
\.


--
-- Data for Name: postsecondaryinstitutionmediumofinstruction; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.postsecondaryinstitutionmediumofinstruction (mediumofinstructiondescriptorid, postsecondaryinstitutionid, createdate) FROM stdin;
\.


--
-- Data for Name: primarylearningdeviceaccessdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceaccessdescriptor (primarylearningdeviceaccessdescriptorid) FROM stdin;
1847
1848
1849
\.


--
-- Data for Name: primarylearningdeviceawayfromschooldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceawayfromschooldescriptor (primarylearningdeviceawayfromschooldescriptorid) FROM stdin;
1851
1850
1852
1853
1854
1855
1856
\.


--
-- Data for Name: primarylearningdeviceproviderdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.primarylearningdeviceproviderdescriptor (primarylearningdeviceproviderdescriptorid) FROM stdin;
1857
1859
1858
\.


--
-- Data for Name: proficiencydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.proficiencydescriptor (proficiencydescriptorid) FROM stdin;
1860
1861
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.program (educationorganizationid, programname, programtypedescriptorid, programid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programassignmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programassignmentdescriptor (programassignmentdescriptorid) FROM stdin;
1862
1864
1866
1863
1865
1867
\.


--
-- Data for Name: programcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristic (educationorganizationid, programcharacteristicdescriptorid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programcharacteristicdescriptor (programcharacteristicdescriptorid) FROM stdin;
1868
\.


--
-- Data for Name: programdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: programdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningobjective (educationorganizationid, learningobjectiveid, namespace, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programlearningstandard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programlearningstandard (educationorganizationid, learningstandardid, programname, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programservice (educationorganizationid, programname, programtypedescriptorid, servicedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsor (educationorganizationid, programname, programsponsordescriptorid, programtypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: programsponsordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programsponsordescriptor (programsponsordescriptorid) FROM stdin;
1869
1870
1871
1872
1873
1874
1875
1876
1877
1878
1879
1880
\.


--
-- Data for Name: programtypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.programtypedescriptor (programtypedescriptorid) FROM stdin;
1881
1882
1883
1884
1885
1886
1887
1888
1889
1890
1891
1892
1893
1894
1895
1896
1897
1898
1899
1900
1901
1902
1903
1904
1905
1906
1907
1908
1909
1910
1911
1912
1913
1914
1915
1916
1917
1918
1919
1920
1921
1922
1923
1924
1925
1926
1927
1928
1929
1930
1931
1932
1933
1934
1935
1936
1937
1938
1939
1940
\.


--
-- Data for Name: progressdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressdescriptor (progressdescriptorid) FROM stdin;
1942
1941
1943
\.


--
-- Data for Name: progressleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.progressleveldescriptor (progressleveldescriptorid) FROM stdin;
1945
1944
1946
1947
\.


--
-- Data for Name: projectdimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.projectdimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: projectdimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.projectdimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: providercategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providercategorydescriptor (providercategorydescriptorid) FROM stdin;
1949
1948
1950
1951
1952
1953
1954
1955
1956
1957
1958
1959
1960
1961
1962
1963
1964
1965
1966
1967
1968
\.


--
-- Data for Name: providerprofitabilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerprofitabilitydescriptor (providerprofitabilitydescriptorid) FROM stdin;
1969
1970
1971
\.


--
-- Data for Name: providerstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.providerstatusdescriptor (providerstatusdescriptorid) FROM stdin;
1972
1973
1974
\.


--
-- Data for Name: publicationstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.publicationstatusdescriptor (publicationstatusdescriptorid) FROM stdin;
1975
1976
1977
1978
1979
\.


--
-- Data for Name: questionformdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.questionformdescriptor (questionformdescriptorid) FROM stdin;
1981
1982
1984
1986
1980
1983
1985
1987
\.


--
-- Data for Name: racedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.racedescriptor (racedescriptorid) FROM stdin;
1989
1991
1993
1988
1990
1992
1994
\.


--
-- Data for Name: reasonexiteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonexiteddescriptor (reasonexiteddescriptorid) FROM stdin;
1996
1997
1999
2001
2002
2004
2005
2007
1995
1998
2000
2003
2006
\.


--
-- Data for Name: reasonnottesteddescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reasonnottesteddescriptor (reasonnottesteddescriptorid) FROM stdin;
2009
2008
2010
2011
2012
2013
2014
2015
2016
2017
2018
2019
2020
2021
\.


--
-- Data for Name: recognitiontypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.recognitiontypedescriptor (recognitiontypedescriptorid) FROM stdin;
2023
2022
2024
2025
2026
2027
2028
2029
2030
2031
2032
2033
\.


--
-- Data for Name: relationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.relationdescriptor (relationdescriptorid) FROM stdin;
2034
2036
2038
2040
2043
2045
2047
2049
2050
2052
2055
2056
2058
2060
2063
2064
2067
2068
2071
2073
2074
2076
2078
2080
2082
2083
2035
2037
2039
2041
2042
2044
2046
2048
2051
2053
2054
2057
2059
2061
2062
2065
2066
2069
2070
2072
2075
2077
2079
2081
\.


--
-- Data for Name: repeatidentifierdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.repeatidentifierdescriptor (repeatidentifierdescriptorid) FROM stdin;
2084
2086
2088
2090
2085
2087
2089
2091
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi, gpagivengradingperiod, gpacumulative, numberofdaysabsent, numberofdaysinattendance, numberofdaystardy, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: reportcardgrade; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgrade (begindate, educationorganizationid, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardgradepointaverage (educationorganizationid, gradepointaveragetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi, iscumulative, gradepointaveragevalue, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentcompetencyobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: reportcardstudentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportcardstudentlearningobjective (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: reporterdescriptiondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reporterdescriptiondescriptor (reporterdescriptiondescriptorid) FROM stdin;
2092
2093
2094
2095
2096
2097
\.


--
-- Data for Name: reportingtagdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.reportingtagdescriptor (reportingtagdescriptorid) FROM stdin;
2099
2100
2102
2098
2101
\.


--
-- Data for Name: residencystatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.residencystatusdescriptor (residencystatusdescriptorid) FROM stdin;
2103
2104
2105
2106
2107
\.


--
-- Data for Name: responseindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responseindicatordescriptor (responseindicatordescriptorid) FROM stdin;
2108
2109
2110
2111
\.


--
-- Data for Name: responsibilitydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.responsibilitydescriptor (responsibilitydescriptorid) FROM stdin;
2113
2114
2116
2118
2112
2115
2117
2119
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restraintevent (restrainteventidentifier, schoolid, studentusi, eventdate, educationalenvironmentdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: restrainteventprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventprogram (educationorganizationid, programname, programtypedescriptorid, restrainteventidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreason; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreason (restrainteventidentifier, restrainteventreasondescriptorid, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: restrainteventreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.restrainteventreasondescriptor (restrainteventreasondescriptorid) FROM stdin;
2121
2120
2122
\.


--
-- Data for Name: resultdatatypetypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.resultdatatypetypedescriptor (resultdatatypetypedescriptorid) FROM stdin;
2123
2124
2125
2126
2127
2128
\.


--
-- Data for Name: retestindicatordescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.retestindicatordescriptor (retestindicatordescriptorid) FROM stdin;
2129
2130
2131
2132
\.


--
-- Data for Name: school; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.school (schoolid, schooltypedescriptorid, charterstatusdescriptorid, titleipartaschooldesignationdescriptorid, magnetspecialprogramemphasisschooldescriptorid, administrativefundingcontroldescriptorid, internetaccessdescriptorid, localeducationagencyid, charterapprovalagencytypedescriptorid, charterapprovalschoolyear) FROM stdin;
\.


--
-- Data for Name: schoolcategory; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategory (schoolcategorydescriptorid, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: schoolcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolcategorydescriptor (schoolcategorydescriptorid) FROM stdin;
2133
2134
2135
2136
2137
2138
2139
2140
2141
2142
2143
2144
2145
2146
2147
2148
\.


--
-- Data for Name: schoolchoiceimplementstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolchoiceimplementstatusdescriptor (schoolchoiceimplementstatusdescriptorid) FROM stdin;
2150
2149
2151
2152
\.


--
-- Data for Name: schoolfoodserviceprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolfoodserviceprogramservicedescriptor (schoolfoodserviceprogramservicedescriptorid) FROM stdin;
2153
2155
2157
2159
2162
2165
2166
2154
2156
2158
2160
2161
2163
2164
2167
\.


--
-- Data for Name: schoolgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolgradelevel (gradeleveldescriptorid, schoolid, createdate) FROM stdin;
\.


--
-- Data for Name: schooltypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schooltypedescriptor (schooltypedescriptorid) FROM stdin;
2168
2169
2170
2171
2172
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.schoolyeartype (schoolyear, schoolyeardescription, currentschoolyear, createdate, lastmodifieddate, id, changeversion) FROM stdin;
2023	2022-2023	t	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	389f6e32-3d61-4eb2-968e-7c2687b1fe96	0
1991	1990-1991	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	6bbaec96-7abf-4a33-9559-88c3d345c084	0
1992	1991-1992	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	a9268cca-a599-4c4f-a1cd-97b58be7a9e2	0
1993	1992-1993	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	b0d2e6a4-8386-48d8-b65b-3c6d6290200e	0
1994	1993-1994	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	8882464b-6d22-4a1c-bac9-d748c26d8781	0
1995	1994-1995	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	3f9d96ca-1fa1-435a-966f-b3c1626e940a	0
1996	1995-1996	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	f73b31c4-e8e4-4060-a2e8-616dd9f5c9de	0
1997	1996-1997	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	7f159482-e57d-48a2-b3c8-97c112110e46	0
1998	1997-1998	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	4b1e96d6-9f98-41dd-a0f7-0f76a065476c	0
1999	1998-1999	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	096f8fb6-2029-403c-9859-22f2f1a7557d	0
2000	1999-2000	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	40630c15-7403-400f-9c3a-26aeaeb1d33e	0
2001	2000-2001	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	884f0a4d-a679-442b-b91a-77d3b4b68d95	0
2002	2001-2002	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	5716ebd4-50dc-44b6-9445-924ac551de75	0
2003	2002-2003	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	8c61dc49-1b75-47ce-b17f-004a3269b4cf	0
2004	2003-2004	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	aff9b66f-410a-432d-80d9-6903fe2da00b	0
2005	2004-2005	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	7abfe74c-35ca-44e6-b628-372bea2875dd	0
2006	2005-2006	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	c1d2b1fd-25db-405f-bb4a-ce1c02da600e	0
2007	2006-2007	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	cea757a8-bfca-4a29-bf0e-8c39ae03ef95	0
2008	2007-2008	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	817d5f6d-f92e-48d2-af6f-0ee1aa6518f4	0
2009	2008-2009	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	e5eea070-069a-4bc0-9cc2-ec7bcf600503	0
2010	2009-2010	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	93aae3d6-0376-4136-bb5c-5d05fc47e2a6	0
2011	2010-2011	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	bfed9352-0e71-4d13-8284-25f31bb90ac5	0
2012	2011-2012	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	7a4fc0c2-ba0d-4028-a55f-ede046dd8f3e	0
2013	2012-2013	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	89bf9a70-0a70-4312-9ae7-3895c344d3ee	0
2014	2013-2014	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	4a6b3ada-207a-467f-a8de-5cf6f00a7477	0
2015	2014-2015	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	dd32ddc6-2e02-4e02-b907-040d1dda54e7	0
2016	2015-2016	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	6334462a-6dc9-46eb-a030-a759339b5b49	0
2017	2016-2017	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	60ba8795-7384-4ced-b23f-30b6d9ef8dda	0
2018	2017-2018	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	e8346196-175c-4d7b-9252-ab0fdaed1710	0
2019	2018-2019	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	99c6093d-256e-46b6-8fa1-f44e33d28568	0
2020	2019-2020	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	48b0ba08-ba8b-42f0-a0ac-b6a638b4231d	0
2021	2020-2021	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	692d7901-7bdd-4910-a674-efa69525f7da	0
2022	2021-2022	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	d93941b1-d74f-40fa-8817-ccc506c41ce4	0
2024	2023-2024	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	8ce5f256-a80c-48b5-9790-7f0df3bb06db	0
2025	2024-2025	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	61504d11-7f0b-4044-a048-4a20b5e54ecb	0
2026	2025-2026	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	db304be3-0894-44da-aaad-0b835225662c	0
2027	2026-2027	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	c118cd6a-af53-4e9c-aad2-cd3be58eabf3	0
2028	2027-2028	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	7aa8f142-9a06-4a94-b08e-b4654ea8e181	0
2029	2028-2029	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	fc936122-d094-4fc0-947e-c9a251704561	0
2030	2029-2030	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	b18cdc6b-9bfb-4e3a-8b7d-83457b15e45a	0
2031	2030-2031	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	7bb807e4-5ca1-47dd-8979-6b8478449809	0
2032	2031-2032	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	24e47c5a-78b9-4af1-97c3-59ce8a2c859c	0
2033	2032-2033	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	40a0cb21-2d24-4ba4-bd3b-b289a40ae9f6	0
2034	2033-2034	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	7006b5f9-4beb-497e-bc31-63a113f570c4	0
2035	2034-2035	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	a54fa37b-c43c-457b-80d1-4aa2fe8c8586	0
2036	2035-2036	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	37e5f902-29d1-482e-ac06-a979d5606413	0
2037	2036-2037	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	0861df3b-89fd-41bc-8970-abe19cd436f5	0
2038	2037-2038	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	f22072f0-d95e-4a2b-adbd-7801d0499640	0
2039	2038-2039	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	4e9a35ce-b73b-4a98-899a-271c4af280f6	0
2040	2039-2040	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	2934d914-2acf-461c-a0a5-a212b57620d1	0
2041	2040-2041	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	65852b3d-f356-4dc7-8849-d0437dae662a	0
2042	2041-2042	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	4fd20140-4e9b-49b7-8cb2-308ba3af9a47	0
2043	2042-2043	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	2c18f966-7542-4cc1-bdcb-30f3d6ef06bb	0
2044	2043-2044	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	f93f076e-ccfa-4fb4-9897-b1a90c3025c7	0
2045	2044-2045	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	10418d52-8646-44e6-b574-4ee9a631ab35	0
2046	2045-2046	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	85d2082d-128b-4ca2-8654-47e599e4fa85	0
2047	2046-2047	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	30fe8508-63a5-41bf-b9dc-8071b5339ab9	0
2048	2047-2048	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	58c52c11-4abb-4b9d-890c-84614c905584	0
2049	2048-2049	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	b639b6e0-ea07-483f-8a8e-68d2699e388c	0
2050	2049-2050	f	2022-11-17 17:07:15.466751	2022-11-17 17:07:15.466751	8a465b92-377b-4d15-85da-aa678d49fb01	0
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.section (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, sequenceofcourse, educationalenvironmentdescriptorid, mediumofinstructiondescriptorid, populationserveddescriptorid, availablecredits, availablecredittypedescriptorid, availablecreditconversion, instructionlanguagedescriptorid, locationschoolid, locationclassroomidentificationcode, officialattendanceperiod, sectionname, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionattendancetakenevent (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, eventdate, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristic (localcoursecode, schoolid, schoolyear, sectioncharacteristicdescriptorid, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncharacteristicdescriptor (sectioncharacteristicdescriptorid) FROM stdin;
2173
2174
\.


--
-- Data for Name: sectionclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionclassperiod (classperiodname, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectioncourselevelcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectioncourselevelcharacteristic (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectionofferedgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionofferedgradelevel (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sectionprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sectionprogram (educationorganizationid, localcoursecode, programname, programtypedescriptorid, schoolid, schoolyear, sectionidentifier, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: separationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationdescriptor (separationdescriptorid) FROM stdin;
2176
2177
2175
2178
\.


--
-- Data for Name: separationreasondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.separationreasondescriptor (separationreasondescriptorid) FROM stdin;
2179
2180
2181
2182
2183
2184
2185
2186
2187
2188
2189
\.


--
-- Data for Name: servicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.servicedescriptor (servicedescriptorid) FROM stdin;
2191
2190
2192
2193
2194
2195
2196
2197
2198
2199
2200
2201
2202
2203
2204
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.session (schoolid, schoolyear, sessionname, begindate, enddate, termdescriptorid, totalinstructionaldays, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sessionacademicweek; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessionacademicweek (schoolid, schoolyear, sessionname, weekidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: sessiongradingperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sessiongradingperiod (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, sessionname, createdate) FROM stdin;
\.


--
-- Data for Name: sexdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sexdescriptor (sexdescriptorid) FROM stdin;
2205
2206
2207
2208
\.


--
-- Data for Name: sourcedimension; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcedimension (code, fiscalyear, codename, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: sourcedimensionreportingtag; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcedimensionreportingtag (code, fiscalyear, reportingtagdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: sourcesystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.sourcesystemdescriptor (sourcesystemdescriptorid) FROM stdin;
2210
2209
2211
2212
\.


--
-- Data for Name: specialeducationprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationprogramservicedescriptor (specialeducationprogramservicedescriptorid) FROM stdin;
2214
2213
2215
2216
2217
2218
2219
2220
2221
2222
2223
2224
\.


--
-- Data for Name: specialeducationsettingdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.specialeducationsettingdescriptor (specialeducationsettingdescriptorid) FROM stdin;
2226
2225
2227
2228
2229
2230
2231
2232
2233
2234
2235
2236
2237
2238
2239
2240
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staff (staffusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, sexdescriptorid, birthdate, hispaniclatinoethnicity, oldethnicitydescriptorid, citizenshipstatusdescriptorid, highestcompletedlevelofeducationdescriptorid, yearsofpriorprofessionalexperience, yearsofpriorteachingexperience, loginid, highlyqualifiedteacher, personid, sourcesystemdescriptorid, staffuniqueid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffabsenceevent (absenceeventcategorydescriptorid, eventdate, staffusi, absenceeventreason, hoursabsent, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddress (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffaddressperiod (addresstypedescriptorid, begindate, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffancestryethnicorigin (ancestryethnicorigindescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffclassificationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffclassificationdescriptor (staffclassificationdescriptorid) FROM stdin;
2241
2243
2245
2248
2251
2252
2254
2255
2258
2259
2262
2263
2266
2267
2269
2270
2272
2275
2277
2242
2244
2246
2247
2249
2250
2253
2256
2257
2260
2261
2264
2265
2268
2271
2273
2274
2276
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcohortassociation (begindate, cohortidentifier, educationorganizationid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffcredential; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffcredential (credentialidentifier, staffusi, stateofissuestateabbreviationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociation (incidentidentifier, schoolid, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationassignmentassociation (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi, positiontitle, enddate, orderofassignment, employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, credentialidentifier, stateofissuestateabbreviationdescriptorid, fulltimeequivalency, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociation (contacttitle, educationorganizationid, staffusi, contacttypedescriptorid, electronicmailaddress, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddress (contacttitle, educationorganizationid, staffusi, streetnumbername, apartmentroomsuitenumber, buildingsitenumber, city, stateabbreviationdescriptorid, postalcode, nameofcounty, countyfipscode, latitude, longitude, addresstypedescriptorid, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationaddressperiod (begindate, contacttitle, educationorganizationid, staffusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationcontactassociationtelephone (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffeducationorganizationemploymentassociation (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi, enddate, separationdescriptorid, separationreasondescriptorid, department, fulltimeequivalency, offerdate, hourlywage, credentialidentifier, stateofissuestateabbreviationdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffelectronicmail (electronicmailaddress, electronicmailtypedescriptorid, staffusi, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationcode; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationcode (staffidentificationsystemdescriptorid, staffusi, identificationcode, assigningorganizationidentificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffidentificationsystemdescriptor (staffidentificationsystemdescriptorid) FROM stdin;
2279
2278
2280
2281
2282
2283
2284
2285
2286
2287
2288
2289
2290
2291
2292
\.


--
-- Data for Name: staffinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffinternationaladdress (addresstypedescriptorid, staffusi, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguage (languagedescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: stafflanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafflanguageuse (languagedescriptorid, languageusedescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleave (begindate, staffleaveeventcategorydescriptorid, staffusi, enddate, reason, substituteassigned, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffleaveeventcategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffleaveeventcategorydescriptor (staffleaveeventcategorydescriptorid) FROM stdin;
2293
2294
2295
2296
2297
2298
2299
2300
2301
2302
2303
2304
2305
2306
2307
2308
2309
2310
\.


--
-- Data for Name: staffothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffothername (othernametypedescriptorid, staffusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: staffpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffpersonalidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffprogramassociation (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi, enddate, studentrecordaccess, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrace (racedescriptorid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffrecognition (recognitiontypedescriptorid, staffusi, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, recognitiondescription, recognitionawarddate, recognitionawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociation (programassignmentdescriptorid, schoolid, staffusi, calendarcode, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationacademicsubject; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationacademicsubject (academicsubjectdescriptorid, programassignmentdescriptorid, schoolid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociationgradelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffschoolassociationgradelevel (gradeleveldescriptorid, programassignmentdescriptorid, schoolid, staffusi, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffsectionassociation (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi, classroompositiondescriptorid, begindate, enddate, highlyqualifiedteacher, teacherstudentdatalinkexclusion, percentagecontribution, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: stafftelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftelephone (staffusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: stafftribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stafftribalaffiliation (staffusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: staffvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.staffvisa (staffusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: stateabbreviationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateabbreviationdescriptor (stateabbreviationdescriptorid) FROM stdin;
2311
2312
2313
2314
2315
2316
2317
2318
2319
2320
2321
2322
2323
2324
2325
2326
2327
2328
2329
2330
2331
2332
2333
2334
2335
2336
2337
2338
2339
2340
2341
2342
2343
2344
2345
2346
2347
2348
2349
2350
2351
2352
2353
2354
2355
2356
2357
2358
2359
2360
2361
2362
2363
2364
2365
2366
2367
2368
2369
2370
2371
2372
\.


--
-- Data for Name: stateeducationagency; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagency (stateeducationagencyid) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyaccountability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyaccountability (schoolyear, stateeducationagencyid, ctegraduationrateinclusion, createdate) FROM stdin;
\.


--
-- Data for Name: stateeducationagencyfederalfunds; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.stateeducationagencyfederalfunds (fiscalyear, stateeducationagencyid, federalprogramsfundingallocation, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.student (studentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, maidenname, birthdate, birthcity, birthstateabbreviationdescriptorid, birthinternationalprovince, birthcountrydescriptorid, dateenteredus, multiplebirthstatus, birthsexdescriptorid, citizenshipstatusdescriptorid, personid, sourcesystemdescriptorid, studentuniqueid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecord (educationorganizationid, schoolyear, studentusi, termdescriptorid, cumulativeearnedcredits, cumulativeearnedcredittypedescriptorid, cumulativeearnedcreditconversion, cumulativeattemptedcredits, cumulativeattemptedcredittypedescriptorid, cumulativeattemptedcreditconversion, cumulativegradepointsearned, cumulativegradepointaverage, gradevaluequalifier, projectedgraduationdate, sessionearnedcredits, sessionearnedcredittypedescriptorid, sessionearnedcreditconversion, sessionattemptedcredits, sessionattemptedcredittypedescriptorid, sessionattemptedcreditconversion, sessiongradepointsearned, sessiongradepointaverage, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordacademichonor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordacademichonor (academichonorcategorydescriptorid, educationorganizationid, honordescription, schoolyear, studentusi, termdescriptorid, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, honorawarddate, honorawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordclassranking; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordclassranking (educationorganizationid, schoolyear, studentusi, termdescriptorid, classrank, totalnumberinclass, percentageranking, classrankingdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecorddiploma; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecorddiploma (diplomaawarddate, diplomatypedescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, diplomaleveldescriptorid, ctecompleter, diplomadescription, diplomaawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordgradepointaverage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordgradepointaverage (educationorganizationid, gradepointaveragetypedescriptorid, schoolyear, studentusi, termdescriptorid, iscumulative, gradepointaveragevalue, maxgradepointaveragevalue, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordrecognition; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordrecognition (educationorganizationid, recognitiontypedescriptorid, schoolyear, studentusi, termdescriptorid, achievementtitle, achievementcategorydescriptorid, achievementcategorysystem, issuername, issueroriginurl, criteria, criteriaurl, evidencestatement, imageurl, recognitiondescription, recognitionawarddate, recognitionawardexpiresdate, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecordreportcard; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentacademicrecordreportcard (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessment (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, administrationdate, administrationenddate, serialnumber, administrationlanguagedescriptorid, administrationenvironmentdescriptorid, retestindicatordescriptorid, reasonnottesteddescriptorid, whenassessedgradeleveldescriptorid, eventcircumstancedescriptorid, eventdescription, schoolyear, platformtypedescriptorid, assessedminutes, reportedschoolid, reportedschoolidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessmentaccommodation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentaccommodation (accommodationdescriptorid, assessmentidentifier, namespace, studentassessmentidentifier, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmenteducationorganizationassociation (assessmentidentifier, educationorganizationassociationtypedescriptorid, educationorganizationid, namespace, studentassessmentidentifier, studentusi, schoolyear, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentassessmentitem; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentitem (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi, assessmentresponse, descriptivefeedback, responseindicatordescriptorid, assessmentitemresultdescriptorid, rawscoreresult, timeassessed, itemnumber, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentperiod (assessmentidentifier, namespace, studentassessmentidentifier, studentusi, assessmentperioddescriptorid, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentscoreresult (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, studentassessmentidentifier, studentusi, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessment; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessment (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi, assessedminutes, administrationdate, administrationenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentperformancelevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentperformancelevel (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi, performancelevelindicatorname, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmentstudentobjectiveassessmentscoreresult; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentassessmentstudentobjectiveassessmentscoreresult (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, studentassessmentidentifier, studentusi, result, resultdatatypetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentcharacteristicdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcharacteristicdescriptor (studentcharacteristicdescriptorid) FROM stdin;
2373
2375
2378
2380
2382
2384
2385
2374
2376
2377
2379
2381
2383
2386
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociation (begindate, cohortidentifier, educationorganizationid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcohortassociationsection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcohortassociationsection (begindate, cohortidentifier, educationorganizationid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjective (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivegeneralstudentprogramassociation (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcompetencyobjectivestudentsectionassociation (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, nontraditionalgenderstatus, privatecteprogram, technicalskillsassessmentdescriptorid) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogram; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogram (begindate, careerpathwaydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, cipcode, primarycteprogramindicator, cteprogramcompletionindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationcteprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationcteprogramservice (begindate, cteprogramservicedescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, cipcode, createdate) FROM stdin;
\.


--
-- Data for Name: studentcteprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentcteprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentassociation (incidentidentifier, schoolid, studentusi, studentparticipationcodedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociationbehavior; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentassociationbehavior (behaviordescriptorid, incidentidentifier, schoolid, studentusi, behaviordetaileddescription, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociation (behaviordescriptorid, incidentidentifier, schoolid, studentusi, behaviordetaileddescription, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 (behaviordescriptorid, disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociation (incidentidentifier, schoolid, studentusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociation (educationorganizationid, studentusi, sexdescriptorid, profilethumbnail, hispaniclatinoethnicity, oldethnicitydescriptorid, limitedenglishproficiencydescriptorid, loginid, primarylearningdeviceawayfromschooldescriptorid, primarylearningdeviceaccessdescriptorid, primarylearningdeviceproviderdescriptorid, internetaccessinresidence, barriertointernetaccessinresidencedescriptorid, internetaccesstypeinresidencedescriptorid, internetperformanceinresidencedescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddress (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi, apartmentroomsuitenumber, buildingsitenumber, nameofcounty, countyfipscode, latitude, longitude, donotpublishindicator, congressionaldistrict, localedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationaddressperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationaddressperiod (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationancestryethnicorigin; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationancestryethnicorigin (ancestryethnicorigindescriptorid, educationorganizationid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationcohortyear; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationcohortyear (cohortyeartypedescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisability (disabilitydescriptorid, educationorganizationid, studentusi, disabilitydiagnosis, orderofdisability, disabilitydeterminationsourcetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationdisabilitydesignation (disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationelectronicmail; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationelectronicmail (educationorganizationid, electronicmailaddress, electronicmailtypedescriptorid, studentusi, primaryemailaddressindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationinternationaladdress; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationinternationaladdress (addresstypedescriptorid, educationorganizationid, studentusi, addressline1, addressline2, addressline3, addressline4, countrydescriptorid, latitude, longitude, begindate, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguage; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguage (educationorganizationid, languagedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationlanguageuse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationlanguageuse (educationorganizationid, languagedescriptorid, languageusedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationprogramparticipat_810575; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationprogramparticipat_810575 (educationorganizationid, programcharacteristicdescriptorid, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationprogramparticipation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationprogramparticipation (educationorganizationid, programtypedescriptorid, studentusi, begindate, enddate, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationrace; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationrace (educationorganizationid, racedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteri_a18fcf; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf (begindate, educationorganizationid, studentcharacteristicdescriptorid, studentusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentcharacteristic; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentcharacteristic (educationorganizationid, studentcharacteristicdescriptorid, studentusi, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentidentifica_c15030; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentidentifica_c15030 (assigningorganizationidentificationcode, educationorganizationid, studentidentificationsystemdescriptorid, studentusi, identificationcode, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicator; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicator (educationorganizationid, indicatorname, studentusi, indicatorgroup, indicator, designatedby, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationstudentindicatorperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationstudentindicatorperiod (begindate, educationorganizationid, indicatorname, studentusi, enddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtelephone; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtelephone (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid, orderofpriority, textmessagecapabilityindicator, donotpublishindicator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociationtribalaffiliation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationassociationtribalaffiliation (educationorganizationid, studentusi, tribalaffiliationdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenteducationorganizationresponsibilityassociation (begindate, educationorganizationid, responsibilitydescriptorid, studentusi, enddate, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentgradebookentry (gradebookentryidentifier, namespace, studentusi, competencyleveldescriptorid, datefulfilled, timefulfilled, diagnosticstatement, pointsearned, lettergradeearned, numericgradeearned, submissionstatusdescriptorid, assignmentlatestatusdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, homelessprimarynighttimeresidencedescriptorid, awaitingfostercare, homelessunaccompaniedyouth) FROM stdin;
\.


--
-- Data for Name: studenthomelessprogramassociationhomelessprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenthomelessprogramassociationhomelessprogramservice (begindate, educationorganizationid, homelessprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentidentificationsystemdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentidentificationsystemdescriptor (studentidentificationsystemdescriptorid) FROM stdin;
2387
2388
2389
2390
2391
2392
2393
2394
2395
2396
2397
2398
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociation (educationorganizationid, interventionidentificationcode, studentusi, cohortidentifier, cohorteducationorganizationid, diagnosticstatement, dosage, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociationinterventioneffectiveness; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionassociationinterventioneffectiveness (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionidentificationcode, populationserveddescriptorid, studentusi, improvementindex, interventioneffectivenessratingdescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentinterventionattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, interventionduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, englishlearnerparticipation, dosage) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolyear, studentusi, participationdescriptorid, proficiencydescriptorid, progressdescriptorid, monitoreddescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentlanguageinstructionprogramassociationlanguageinst_268e07; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 (begindate, educationorganizationid, languageinstructionprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjective; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjective (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi, competencyleveldescriptorid, diagnosticstatement, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentlearningobjectivegeneralstudentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjectivegeneralstudentprogramassociation (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, programeducationorganizationid, programname, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjectivestudentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentlearningobjectivestudentsectionassociation (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, priorityforservices, lastqualifyingmove, continuationofservicesreasondescriptorid, usinitialentry, usmostrecententry, usinitialschoolentry, qualifyingarrivaldate, stateresidencydate, eligibilityexpirationdate) FROM stdin;
\.


--
-- Data for Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 (begindate, educationorganizationid, migranteducationprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, neglectedordelinquentprogramdescriptorid, elaprogressleveldescriptorid, mathematicsprogressleveldescriptorid) FROM stdin;
\.


--
-- Data for Name: studentneglectedordelinquentprogramassociationneglectedo_520251; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 (begindate, educationorganizationid, neglectedordelinquentprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentothername; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentothername (othernametypedescriptorid, studentusi, personaltitleprefix, firstname, middlename, lastsurname, generationcodesuffix, createdate) FROM stdin;
\.


--
-- Data for Name: studentparentassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparentassociation (parentusi, studentusi, relationdescriptorid, primarycontactstatus, liveswith, emergencycontactstatus, contactpriority, contactrestrictions, legalguardian, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentparticipationcodedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentparticipationcodedescriptor (studentparticipationcodedescriptorid) FROM stdin;
2399
2401
2400
2402
\.


--
-- Data for Name: studentpersonalidentificationdocument; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentpersonalidentificationdocument (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi, documenttitle, documentexpirationdate, issuerdocumentidentificationcode, issuername, issuercountrydescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) FROM stdin;
\.


--
-- Data for Name: studentprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentprogramattendanceevent (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, programattendanceduration, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociation (entrydate, schoolid, studentusi, primaryschool, entrygradeleveldescriptorid, entrygradelevelreasondescriptorid, entrytypedescriptorid, repeatgradeindicator, classofschoolyear, schoolchoicetransfer, exitwithdrawdate, exitwithdrawtypedescriptorid, residencystatusdescriptorid, graduationplantypedescriptorid, educationorganizationid, graduationschoolyear, employedwhileenrolled, calendarcode, schoolyear, fulltimeequivalency, termcompletionindicator, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationalternativegraduationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationalternativegraduationplan (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear, entrydate, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociationeducationplan; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolassociationeducationplan (educationplandescriptorid, entrydate, schoolid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolattendanceevent (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, schoolattendanceduration, arrivaltime, departuretime, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, directcertification) FROM stdin;
\.


--
-- Data for Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolfoodserviceprogramservicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionassociation (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, enddate, homeroomindicator, repeatidentifierdescriptorid, teacherstudentdatalinkexclusion, attemptstatusdescriptorid, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceevent (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, attendanceeventreason, educationalenvironmentdescriptorid, eventduration, sectionattendanceduration, arrivaltime, departuretime, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceeventclassperiod; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentsectionattendanceeventclassperiod (attendanceeventcategorydescriptorid, classperiodname, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, ideaeligibility, specialeducationsettingdescriptorid, specialeducationhoursperweek, schoolhoursperweek, multiplydisabled, medicallyfragile, lastevaluationdate, iepreviewdate, iepbegindate, iependdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisability; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisability (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, disabilitydiagnosis, orderofdisability, disabilitydeterminationsourcetypedescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationdisabilitydesignation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationdisabilitydesignation (begindate, disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationserviceprovider; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationserviceprovider (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, staffusi, studentusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, staffusi, studentusi, primaryprovider, createdate) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociation (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaparticipantdescriptorid) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studenttitleipartaprogramassociationtitleipartaprogramservice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid, primaryindicator, servicebegindate, serviceenddate, createdate) FROM stdin;
\.


--
-- Data for Name: studentvisa; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.studentvisa (studentusi, visadescriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: submissionstatusdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.submissionstatusdescriptor (submissionstatusdescriptorid) FROM stdin;
2403
2404
2405
2406
2407
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.survey (namespace, surveyidentifier, educationorganizationid, surveytitle, sessionname, schoolyear, schoolid, surveycategorydescriptorid, numberadministered, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveycategorydescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycategorydescriptor (surveycategorydescriptorid) FROM stdin;
2409
2408
2410
2411
2412
2413
2414
2415
2416
2417
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveycourseassociation (coursecode, educationorganizationid, namespace, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyleveldescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyleveldescriptor (surveyleveldescriptorid) FROM stdin;
2418
2419
2420
2421
2422
2423
2424
2425
2426
2427
2428
2429
2430
2431
2432
2433
2434
2435
2436
2437
2438
2439
2440
2441
2442
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyprogramassociation (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestion (namespace, questioncode, surveyidentifier, questionformdescriptorid, questiontext, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionmatrix; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionmatrix (matrixelement, namespace, questioncode, surveyidentifier, minrawscore, maxrawscore, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponse (namespace, questioncode, surveyidentifier, surveyresponseidentifier, noresponse, comment, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsechoice; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsechoice (namespace, questioncode, sortorder, surveyidentifier, numericvalue, textvalue, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsesurveyquestionmatrixelementresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse (matrixelement, namespace, questioncode, surveyidentifier, surveyresponseidentifier, numericresponse, textresponse, noresponse, minnumericresponse, maxnumericresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponsevalue; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyquestionresponsevalue (namespace, questioncode, surveyidentifier, surveyquestionresponsevalueidentifier, surveyresponseidentifier, numericresponse, textresponse, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponse (namespace, surveyidentifier, surveyresponseidentifier, responsedate, responsetime, electronicmailaddress, fullname, location, studentusi, parentusi, staffusi, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveyresponsesurveylevel; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveyresponsesurveylevel (namespace, surveyidentifier, surveyleveldescriptorid, surveyresponseidentifier, createdate) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysection (namespace, surveyidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionassociation (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponse (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, sectionrating, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponseeducationorganizationtargetassociation (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.surveysectionresponsestafftargetassociation (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle, discriminator, createdate, lastmodifieddate, id, changeversion) FROM stdin;
\.


--
-- Data for Name: teachingcredentialbasisdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialbasisdescriptor (teachingcredentialbasisdescriptorid) FROM stdin;
2443
2445
2447
2450
2444
2446
2448
2449
\.


--
-- Data for Name: teachingcredentialdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.teachingcredentialdescriptor (teachingcredentialdescriptorid) FROM stdin;
2452
2451
2453
2454
2455
2456
2457
2458
2459
2460
2461
2462
2463
2464
2465
\.


--
-- Data for Name: technicalskillsassessmentdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.technicalskillsassessmentdescriptor (technicalskillsassessmentdescriptorid) FROM stdin;
2466
2467
2468
\.


--
-- Data for Name: telephonenumbertypedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.telephonenumbertypedescriptor (telephonenumbertypedescriptorid) FROM stdin;
2470
2469
2471
2472
2473
2474
2475
2476
\.


--
-- Data for Name: termdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.termdescriptor (termdescriptorid) FROM stdin;
2477
2478
2479
2480
2481
2482
2483
2484
2485
2486
2487
2488
2489
2490
2491
2492
\.


--
-- Data for Name: titleipartaparticipantdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaparticipantdescriptor (titleipartaparticipantdescriptorid) FROM stdin;
2494
2493
2495
2496
2497
\.


--
-- Data for Name: titleipartaprogramservicedescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaprogramservicedescriptor (titleipartaprogramservicedescriptorid) FROM stdin;
2498
2499
2500
2501
2502
2503
2504
2505
2506
\.


--
-- Data for Name: titleipartaschooldesignationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.titleipartaschooldesignationdescriptor (titleipartaschooldesignationdescriptorid) FROM stdin;
2508
2507
2509
2510
2511
2512
2513
\.


--
-- Data for Name: tribalaffiliationdescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.tribalaffiliationdescriptor (tribalaffiliationdescriptorid) FROM stdin;
2514
2515
2516
2517
2518
2519
2520
2521
2522
2523
2524
2525
2526
2527
2528
2529
2530
2531
2532
2533
2534
2535
2536
2537
2538
2539
2540
2541
2542
2543
2544
2545
2546
2547
2548
2549
2550
2551
2552
2553
2554
2555
2556
2557
2558
2559
2560
2561
2562
2563
2564
2565
2566
2567
2568
2569
2570
2571
2572
2573
2574
2575
2576
2577
2578
2579
2580
2581
2582
2583
2584
2585
2586
2587
2588
2589
2590
2591
2592
2593
2594
2595
2596
2597
2598
2599
2600
2601
2602
2603
2604
2605
2606
2607
2608
2609
2610
2611
2612
2613
2614
2615
2616
2617
2618
2619
2620
2621
2622
2623
2624
2625
2626
2627
2628
2629
2630
2631
2632
2633
2634
2635
2636
2637
2638
2639
2640
2641
2642
2643
2644
2645
2646
2647
2648
2649
2650
2651
2652
2653
2654
2655
2656
2657
2658
2659
2660
2661
2662
2663
2664
2665
2666
2667
2668
2669
2670
2671
2672
2673
2674
2675
2676
2677
2678
2679
2680
2681
2682
2683
2684
2685
2686
2687
2688
2689
2690
2691
2692
2693
2694
2695
2696
2697
2698
2699
2700
2701
2702
2703
2704
2705
2706
2707
2708
2709
2710
2711
2712
2713
2714
2715
2716
2717
2718
2719
2720
2721
2722
2723
2724
2725
2726
2727
2728
2729
2730
2731
2732
2733
2734
2735
2736
2737
2738
2739
2740
2742
2744
2746
2747
2749
2751
2752
2754
2757
2758
2760
2762
2765
2766
2768
2771
2774
2776
2778
2779
2782
2783
2785
2787
2789
2791
2794
2796
2798
2799
2801
2803
2805
2808
2809
2811
2814
2815
2818
2819
2822
2824
2826
2828
2831
2834
2835
2837
2839
2842
2843
2845
2847
2849
2852
2854
2857
2858
2861
2864
2865
2867
2868
2870
2871
2874
2877
2879
2882
2884
2887
2888
2890
2893
2895
2897
2899
2902
2905
2906
2909
2910
2912
2915
2916
2918
2920
2922
2925
2926
2929
2931
2934
2936
2938
2940
2943
2944
2946
2949
2950
2952
2955
2956
2958
2960
2962
2964
2966
2968
2970
2973
2975
2978
2979
2981
2984
2986
2988
2990
2992
2994
2996
2998
3001
3004
3005
3007
3010
3011
3014
3016
3018
3020
3021
3023
3025
3027
3030
3031
3033
3036
3037
3039
3041
3043
3045
3047
3049
3051
3052
3054
3056
3059
3061
3063
3065
3067
3069
3071
3073
3075
3077
3079
3080
3082
3084
3086
3087
3090
3091
3093
3095
3098
3100
3102
3103
3105
3108
3110
3112
3113
3115
3117
3118
3120
3121
3123
3126
3127
3130
3131
3133
2741
2743
2745
2748
2750
2753
2755
2756
2759
2761
2763
2764
2767
2769
2770
2772
2773
2775
2777
2780
2781
2784
2786
2788
2790
2792
2793
2795
2797
2800
2802
2804
2806
2807
2810
2812
2813
2816
2817
2820
2821
2823
2825
2827
2829
2830
2832
2833
2836
2838
2840
2841
2844
2846
2848
2850
2851
2853
2855
2856
2859
2860
2862
2863
2866
2869
2872
2873
2875
2876
2878
2880
2881
2883
2885
2886
2889
2891
2892
2894
2896
2898
2900
2901
2903
2904
2907
2908
2911
2913
2914
2917
2919
2921
2923
2924
2927
2928
2930
2932
2933
2935
2937
2939
2941
2942
2945
2947
2948
2951
2953
2954
2957
2959
2961
2963
2965
2967
2969
2971
2972
2974
2976
2977
2980
2982
2983
2985
2987
2989
2991
2993
2995
2997
2999
3000
3002
3003
3006
3008
3009
3012
3013
3015
3017
3019
3022
3024
3026
3028
3029
3032
3034
3035
3038
3040
3042
3044
3046
3048
3050
3053
3055
3057
3058
3060
3062
3064
3066
3068
3070
3072
3074
3076
3078
3081
3083
3085
3088
3089
3092
3094
3096
3097
3099
3101
3104
3106
3107
3109
3111
3114
3116
3119
3122
3124
3125
3128
3129
3132
\.


--
-- Data for Name: visadescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.visadescriptor (visadescriptorid) FROM stdin;
3135
3134
3136
3137
3138
3139
3140
\.


--
-- Data for Name: weapondescriptor; Type: TABLE DATA; Schema: edfi; Owner: postgres
--

COPY edfi.weapondescriptor (weapondescriptorid) FROM stdin;
3142
3141
3143
3144
3145
3146
3147
3148
3149
3150
\.


--
-- Data for Name: descriptorequivalencegroup; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroup (descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupassignment; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupassignment (descriptorid, descriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: descriptorequivalencegroupgeneralization; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.descriptorequivalencegroupgeneralization (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid, createdate, lastmodifieddate, id) FROM stdin;
\.


--
-- Data for Name: operationalcontext; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontext (operationalcontexturi, displayname, organizationname, createdate, lastmodifieddate, id) FROM stdin;
uri://ed-fi-api-host.org	Default	Ed-Fi	2022-11-17 17:07:15.479491	2022-11-17 17:07:15.479491	fc13d306-bccd-49f7-bef4-c6d1b9de20b3
\.


--
-- Data for Name: operationalcontextdescriptorusage; Type: TABLE DATA; Schema: interop; Owner: postgres
--

COPY interop.operationalcontextdescriptorusage (operationalcontexturi, descriptorid, createdate) FROM stdin;
\.


--
-- Data for Name: DeployJournal; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public."DeployJournal" (schemaversionsid, scriptname, applied) FROM stdin;
1	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0010-Schemas.sql	2022-11-17 17:06:48.657689
2	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0011-Extensions.sql	2022-11-17 17:06:48.698546
3	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0020-Tables.sql	2022-11-17 17:06:55.192487
4	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0030-ForeignKeys.sql	2022-11-17 17:07:14.033501
5	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0040-IdColumnUniqueIndexes.sql	2022-11-17 17:07:14.904872
6	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.0050-ExtendedProperties.sql	2022-11-17 17:07:15.000108
7	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1002-AuthViews.sql	2022-11-17 17:07:15.030131
8	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1003-CompositesHierarchicalViews.sql	2022-11-17 17:07:15.046658
9	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1020-Interoperability-Extension.sql	2022-11-17 17:07:15.115627
10	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1021-OperationalContextView.sql	2022-11-17 17:07:15.125963
11	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1022-SetVersion.sql	2022-11-17 17:07:15.13398
12	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1030-AddSessionCascadeSupport.sql	2022-11-17 17:07:15.149306
13	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1031-Create-SetSchoolYear-stored-procedure.sql	2022-11-17 17:07:15.155427
14	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1040-MissingSecurityViews.sql	2022-11-17 17:07:15.163264
15	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1100-AddMoreContextToEducationIdentifiersView.sql	2022-11-17 17:07:15.176123
16	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1100-CorrectCommunityOrganizationAuthViews.sql	2022-11-17 17:07:15.183895
17	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1120-RemoveCompositesHierarchicalViews.sql	2022-11-17 17:07:15.191799
18	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1150-UpdatedAuthViewsToPreventDuplicatesFromStaffEdOrgAssignmentsAndEmployments.sql	2022-11-17 17:07:15.204274
19	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1160-UpdateVersionTo510.sql	2022-11-17 17:07:15.211069
20	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1170-UpdatedAuthViewsToRemoveJoin.sql	2022-11-17 17:07:15.218445
21	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1180-Add-OrgDeptId-to-EdOrgIdentifiers.sql	2022-11-17 17:07:15.231449
22	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1190-UpdateVersionTo520.sql	2022-11-17 17:07:15.239087
23	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1200-AuthViewsSupportOrgDeptId.sql	2022-11-17 17:07:15.256274
24	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1290-RemoveAllUnusedAuthorizationViews.sql	2022-11-17 17:07:15.272698
25	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1300-CreateEdOrgToEdOrgTable.sql	2022-11-17 17:07:15.290546
26	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1302-CreateEdOrgToEdOrgTriggers.sql	2022-11-17 17:07:15.314746
27	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1303-AuthViewEducationOrganizationIdToStudentUSI.sql	2022-11-17 17:07:15.321178
28	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1304-AuthViewEducationOrganizationIdToParentUSI.sql	2022-11-17 17:07:15.327842
29	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1305-AuthViewsEducationOrganizationIdToStaffUSI.sql	2022-11-17 17:07:15.334897
30	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1306-AuthViewEducationOrganizationIdToStudentUSIThroughResponsibility.sql	2022-11-17 17:07:15.340889
31	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1320-UpdateVersionTo53.sql	2022-11-17 17:07:15.349725
32	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1340-UpdateVersionTo60.sql	2022-11-17 17:07:15.371266
33	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.1350-UpdateVersionTo61.sql	2022-11-17 17:07:15.377258
34	EdFi.Ods.Standard.Artifacts.PgSql.Data.Ods.0020-SchoolYears.sql	2022-11-17 17:07:15.476431
35	EdFi.Ods.Standard.Artifacts.PgSql.Data.Ods.1010-OperationalContexts.sql	2022-11-17 17:07:15.483046
36	EdFi.Ods.Standard.Artifacts.PgSql.Data.Ods.1040-Set-Default-SchoolYear.sql	2022-11-17 17:07:15.490847
37	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0010-CreateChangesSchema.sql	2022-11-17 17:07:15.543111
38	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0020-CreateChangeVersionSequence.sql	2022-11-17 17:07:15.550303
39	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0030-AddColumnChangeVersionForTables.sql	2022-11-17 17:07:15.95299
40	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0070-AddIndexChangeVersionForTables.sql	2022-11-17 17:07:16.782229
41	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0110-AddSnapshot-Tables.sql	2022-11-17 17:07:16.79574
42	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0120-AddSnapshotIdColumnUniqueIndexes.sql	2022-11-17 17:07:16.810736
43	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0130-AddSnapshotExtendedProperties.sql	2022-11-17 17:07:16.816404
44	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0200-CreateTrackedChangeTables.sql	2022-11-17 17:07:18.356047
45	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0210-CreateTriggersForChangeVersionAndKeyChanges.sql	2022-11-17 17:07:18.490369
46	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.0220-CreateTriggersForDeleteTracking.sql	2022-11-17 17:07:18.821468
47	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.1010-CreateGetMaxChangeVersionFunction.sql	2022-11-17 17:07:18.829223
48	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.1020-AuthViewsIncludingDeletes.sql	2022-11-17 17:07:18.841232
49	EdFi.Ods.Standard.Artifacts.PgSql.Structure.Ods.Changes.1370-AddEducationOrganizationIdToEducationOrganizationIdIndex.sql	2022-11-17 17:07:18.857128
\.


--
-- Data for Name: academicweek; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.academicweek (oldschoolid, oldweekidentifier, newschoolid, newweekidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: accountabilityrating; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.accountabilityrating (oldeducationorganizationid, oldratingtitle, oldschoolyear, neweducationorganizationid, newratingtitle, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessment (oldassessmentidentifier, oldnamespace, newassessmentidentifier, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentitem; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessmentitem (oldassessmentidentifier, oldidentificationcode, oldnamespace, newassessmentidentifier, newidentificationcode, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: assessmentscorerangelearningstandard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.assessmentscorerangelearningstandard (oldassessmentidentifier, oldnamespace, oldscorerangeid, newassessmentidentifier, newnamespace, newscorerangeid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: balancesheetdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.balancesheetdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: bellschedule; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.bellschedule (oldbellschedulename, oldschoolid, newbellschedulename, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: calendar; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.calendar (oldcalendarcode, oldschoolid, oldschoolyear, newcalendarcode, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: calendardate; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.calendardate (oldcalendarcode, olddate, oldschoolid, oldschoolyear, newcalendarcode, newdate, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: chartofaccount; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.chartofaccount (oldaccountidentifier, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: classperiod; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.classperiod (oldclassperiodname, oldschoolid, newclassperiodname, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: cohort; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.cohort (oldcohortidentifier, oldeducationorganizationid, newcohortidentifier, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: communityproviderlicense; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.communityproviderlicense (oldcommunityproviderid, oldlicenseidentifier, oldlicensingorganization, newcommunityproviderid, newlicenseidentifier, newlicensingorganization, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: competencyobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.competencyobjective (oldeducationorganizationid, oldobjective, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, neweducationorganizationid, newobjective, newobjectivegradeleveldescriptorid, newobjectivegradeleveldescriptornamespace, newobjectivegradeleveldescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: course; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.course (oldcoursecode, oldeducationorganizationid, newcoursecode, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: courseoffering; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.courseoffering (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsessionname, newlocalcoursecode, newschoolid, newschoolyear, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: coursetranscript; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.coursetranscript (oldcourseattemptresultdescriptorid, oldcourseattemptresultdescriptornamespace, oldcourseattemptresultdescriptorcodevalue, oldcoursecode, oldcourseeducationorganizationid, oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, newcourseattemptresultdescriptorid, newcourseattemptresultdescriptornamespace, newcourseattemptresultdescriptorcodevalue, newcoursecode, newcourseeducationorganizationid, neweducationorganizationid, newschoolyear, newstudentusi, newstudentuniqueid, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: credential; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.credential (oldcredentialidentifier, oldstateofissuestateabbreviationdescriptorid, oldstateofissuestateabbreviationdescriptornamespace, oldstateofissuestateabbreviationdescriptorcodevalue, newcredentialidentifier, newstateofissuestateabbreviationdescriptorid, newstateofissuestateabbreviationdescriptornamespace, newstateofissuestateabbreviationdescriptorcodevalue, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: descriptor; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.descriptor (olddescriptorid, oldcodevalue, oldnamespace, newdescriptorid, newcodevalue, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: descriptormapping; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.descriptormapping (oldmappednamespace, oldmappedvalue, oldnamespace, oldvalue, newmappednamespace, newmappedvalue, newnamespace, newvalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineaction; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.disciplineaction (olddisciplineactionidentifier, olddisciplinedate, oldstudentusi, oldstudentuniqueid, oldresponsibilityschoolid, newdisciplineactionidentifier, newdisciplinedate, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: disciplineincident; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.disciplineincident (oldincidentidentifier, oldschoolid, newincidentidentifier, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationcontent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationcontent (oldcontentidentifier, newcontentidentifier, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganization; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganization (oldeducationorganizationid, neweducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationinterventionprescriptionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationinterventionprescriptionassociation (oldeducationorganizationid, oldinterventionprescriptioneducationorganizationid, oldinterventionprescriptionidentificationcode, neweducationorganizationid, newinterventionprescriptioneducationorganizationid, newinterventionprescriptionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationnetworkassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationnetworkassociation (oldeducationorganizationnetworkid, oldmembereducationorganizationid, neweducationorganizationnetworkid, newmembereducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: educationorganizationpeerassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.educationorganizationpeerassociation (oldeducationorganizationid, oldpeereducationorganizationid, neweducationorganizationid, newpeereducationorganizationid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: feederschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.feederschoolassociation (oldbegindate, oldfeederschoolid, oldschoolid, newbegindate, newfeederschoolid, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: functiondimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.functiondimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: funddimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.funddimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: generalstudentprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.generalstudentprogramassociation (oldbegindate, oldeducationorganizationid, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newbegindate, neweducationorganizationid, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: grade; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.grade (oldbegindate, oldgradetypedescriptorid, oldgradetypedescriptornamespace, oldgradetypedescriptorcodevalue, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodschoolyear, oldgradingperiodsequence, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newbegindate, newgradetypedescriptorid, newgradetypedescriptornamespace, newgradetypedescriptorcodevalue, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodschoolyear, newgradingperiodsequence, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: gradebookentry; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.gradebookentry (oldgradebookentryidentifier, oldnamespace, newgradebookentryidentifier, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: gradingperiod; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.gradingperiod (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldperiodsequence, oldschoolid, oldschoolyear, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newperiodsequence, newschoolid, newschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: graduationplan; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.graduationplan (oldeducationorganizationid, oldgraduationplantypedescriptorid, oldgraduationplantypedescriptornamespace, oldgraduationplantypedescriptorcodevalue, oldgraduationschoolyear, neweducationorganizationid, newgraduationplantypedescriptorid, newgraduationplantypedescriptornamespace, newgraduationplantypedescriptorcodevalue, newgraduationschoolyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: intervention; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.intervention (oldeducationorganizationid, oldinterventionidentificationcode, neweducationorganizationid, newinterventionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: interventionprescription; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.interventionprescription (oldeducationorganizationid, oldinterventionprescriptionidentificationcode, neweducationorganizationid, newinterventionprescriptionidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: interventionstudy; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.interventionstudy (oldeducationorganizationid, oldinterventionstudyidentificationcode, neweducationorganizationid, newinterventionstudyidentificationcode, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningobjective (oldlearningobjectiveid, oldnamespace, newlearningobjectiveid, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningstandard (oldlearningstandardid, newlearningstandardid, id, oldnamespace, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: learningstandardequivalenceassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.learningstandardequivalenceassociation (oldnamespace, oldsourcelearningstandardid, oldtargetlearningstandardid, newnamespace, newsourcelearningstandardid, newtargetlearningstandardid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localaccount; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localaccount (oldaccountidentifier, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localactual; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localactual (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localbudget; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localbudget (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localcontractedstaff; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localcontractedstaff (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localencumbrance; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localencumbrance (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: localpayroll; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.localpayroll (oldaccountidentifier, oldasofdate, oldeducationorganizationid, oldfiscalyear, oldstaffusi, oldstaffuniqueid, newaccountidentifier, newasofdate, neweducationorganizationid, newfiscalyear, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: location; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.location (oldclassroomidentificationcode, oldschoolid, newclassroomidentificationcode, newschoolid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: objectdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.objectdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: objectiveassessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.objectiveassessment (oldassessmentidentifier, oldidentificationcode, oldnamespace, newassessmentidentifier, newidentificationcode, newnamespace, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: openstaffposition; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.openstaffposition (oldeducationorganizationid, oldrequisitionnumber, neweducationorganizationid, newrequisitionnumber, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: operationalunitdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.operationalunitdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: parent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.parent (oldparentusi, oldparentuniqueid, newparentusi, newparentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.person (oldpersonid, oldsourcesystemdescriptorid, oldsourcesystemdescriptornamespace, oldsourcesystemdescriptorcodevalue, newpersonid, newsourcesystemdescriptorid, newsourcesystemdescriptornamespace, newsourcesystemdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: postsecondaryevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.postsecondaryevent (oldeventdate, oldpostsecondaryeventcategorydescriptorid, oldpostsecondaryeventcategorydescriptornamespace, oldpostsecondaryeventcategorydescriptorcodevalue, oldstudentusi, oldstudentuniqueid, neweventdate, newpostsecondaryeventcategorydescriptorid, newpostsecondaryeventcategorydescriptornamespace, newpostsecondaryeventcategorydescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: program; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.program (oldeducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, neweducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: programdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.programdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: projectdimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.projectdimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: reportcard; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.reportcard (oldeducationorganizationid, oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldgradingperiodsequence, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodschoolid, newgradingperiodschoolyear, newgradingperiodsequence, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: restraintevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.restraintevent (oldrestrainteventidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newrestrainteventidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: schoolyeartype; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.schoolyeartype (oldschoolyear, newschoolyear, id, changeversion, createdate) FROM stdin;
\.


--
-- Data for Name: section; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.section (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: sectionattendancetakenevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.sectionattendancetakenevent (oldcalendarcode, olddate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, newcalendarcode, newdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: session; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.session (oldschoolid, oldschoolyear, oldsessionname, newschoolid, newschoolyear, newsessionname, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: sourcedimension; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.sourcedimension (oldcode, oldfiscalyear, newcode, newfiscalyear, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staff; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staff (oldstaffusi, oldstaffuniqueid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffabsenceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffabsenceevent (oldabsenceeventcategorydescriptorid, oldabsenceeventcategorydescriptornamespace, oldabsenceeventcategorydescriptorcodevalue, oldeventdate, oldstaffusi, oldstaffuniqueid, newabsenceeventcategorydescriptorid, newabsenceeventcategorydescriptornamespace, newabsenceeventcategorydescriptorcodevalue, neweventdate, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffcohortassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffcohortassociation (oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid, newbegindate, newcohortidentifier, neweducationorganizationid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffdisciplineincidentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffdisciplineincidentassociation (oldincidentidentifier, oldschoolid, oldstaffusi, oldstaffuniqueid, newincidentidentifier, newschoolid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationassignmentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationassignmentassociation (oldbegindate, oldeducationorganizationid, oldstaffclassificationdescriptorid, oldstaffclassificationdescriptornamespace, oldstaffclassificationdescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, neweducationorganizationid, newstaffclassificationdescriptorid, newstaffclassificationdescriptornamespace, newstaffclassificationdescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationcontactassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationcontactassociation (oldcontacttitle, oldeducationorganizationid, oldstaffusi, oldstaffuniqueid, newcontacttitle, neweducationorganizationid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffeducationorganizationemploymentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffeducationorganizationemploymentassociation (oldeducationorganizationid, oldemploymentstatusdescriptorid, oldemploymentstatusdescriptornamespace, oldemploymentstatusdescriptorcodevalue, oldhiredate, oldstaffusi, oldstaffuniqueid, neweducationorganizationid, newemploymentstatusdescriptorid, newemploymentstatusdescriptornamespace, newemploymentstatusdescriptorcodevalue, newhiredate, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffleave; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffleave (oldbegindate, oldstaffleaveeventcategorydescriptorid, oldstaffleaveeventcategorydescriptornamespace, oldstaffleaveeventcategorydescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, newstaffleaveeventcategorydescriptorid, newstaffleaveeventcategorydescriptornamespace, newstaffleaveeventcategorydescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffprogramassociation (oldbegindate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstaffusi, oldstaffuniqueid, newbegindate, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffschoolassociation (oldprogramassignmentdescriptorid, oldprogramassignmentdescriptornamespace, oldprogramassignmentdescriptorcodevalue, oldschoolid, oldstaffusi, oldstaffuniqueid, newprogramassignmentdescriptorid, newprogramassignmentdescriptornamespace, newprogramassignmentdescriptorcodevalue, newschoolid, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: staffsectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.staffsectionassociation (oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstaffusi, oldstaffuniqueid, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstaffusi, newstaffuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: student; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.student (oldstudentusi, oldstudentuniqueid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentacademicrecord; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentacademicrecord (oldeducationorganizationid, oldschoolyear, oldstudentusi, oldstudentuniqueid, oldtermdescriptorid, oldtermdescriptornamespace, oldtermdescriptorcodevalue, neweducationorganizationid, newschoolyear, newstudentusi, newstudentuniqueid, newtermdescriptorid, newtermdescriptornamespace, newtermdescriptorcodevalue, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessment; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentassessment (oldassessmentidentifier, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid, newassessmentidentifier, newnamespace, newstudentassessmentidentifier, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentassessmenteducationorganizationassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentassessmenteducationorganizationassociation (oldassessmentidentifier, oldeducationorganizationassociationtypedescriptorid, oldeducationorganizationassociationtypedescriptornamespace, oldeducationorganizationassociationtypedescriptorcodevalue, oldeducationorganizationid, oldnamespace, oldstudentassessmentidentifier, oldstudentusi, oldstudentuniqueid, newassessmentidentifier, neweducationorganizationassociationtypedescriptorid, neweducationorganizationassociationtypedescriptornamespace, neweducationorganizationassociationtypedescriptorcodevalue, neweducationorganizationid, newnamespace, newstudentassessmentidentifier, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcohortassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcohortassociation (oldbegindate, oldcohortidentifier, oldeducationorganizationid, oldstudentusi, oldstudentuniqueid, newbegindate, newcohortidentifier, neweducationorganizationid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentcompetencyobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentcompetencyobjective (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldgradingperiodsequence, oldobjective, oldobjectiveeducationorganizationid, oldobjectivegradeleveldescriptorid, oldobjectivegradeleveldescriptornamespace, oldobjectivegradeleveldescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodschoolid, newgradingperiodschoolyear, newgradingperiodsequence, newobjective, newobjectiveeducationorganizationid, newobjectivegradeleveldescriptorid, newobjectivegradeleveldescriptornamespace, newobjectivegradeleveldescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentassociation (oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentbehaviorassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentbehaviorassociation (oldbehaviordescriptorid, oldbehaviordescriptornamespace, oldbehaviordescriptorcodevalue, oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newbehaviordescriptorid, newbehaviordescriptornamespace, newbehaviordescriptorcodevalue, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentdisciplineincidentnonoffenderassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation (oldincidentidentifier, oldschoolid, oldstudentusi, oldstudentuniqueid, newincidentidentifier, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studenteducationorganizationassociation (oldeducationorganizationid, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studenteducationorganizationresponsibilityassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studenteducationorganizationresponsibilityassociation (oldbegindate, oldeducationorganizationid, oldresponsibilitydescriptorid, oldresponsibilitydescriptornamespace, oldresponsibilitydescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newbegindate, neweducationorganizationid, newresponsibilitydescriptorid, newresponsibilitydescriptornamespace, newresponsibilitydescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentgradebookentry; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentgradebookentry (oldgradebookentryidentifier, oldnamespace, oldstudentusi, oldstudentuniqueid, newgradebookentryidentifier, newnamespace, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentinterventionassociation (oldeducationorganizationid, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid, neweducationorganizationid, newinterventionidentificationcode, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentinterventionattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentinterventionattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldinterventionidentificationcode, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweducationorganizationid, neweventdate, newinterventionidentificationcode, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentlearningobjective; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentlearningobjective (oldgradingperioddescriptorid, oldgradingperioddescriptornamespace, oldgradingperioddescriptorcodevalue, oldgradingperiodschoolid, oldgradingperiodschoolyear, oldgradingperiodsequence, oldlearningobjectiveid, oldnamespace, oldstudentusi, oldstudentuniqueid, newgradingperioddescriptorid, newgradingperioddescriptornamespace, newgradingperioddescriptorcodevalue, newgradingperiodschoolid, newgradingperiodschoolyear, newgradingperiodsequence, newlearningobjectiveid, newnamespace, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentparentassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentparentassociation (oldparentusi, oldparentuniqueid, oldstudentusi, oldstudentuniqueid, newparentusi, newparentuniqueid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentprogramattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentprogramattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeducationorganizationid, oldeventdate, oldprogrameducationorganizationid, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweducationorganizationid, neweventdate, newprogrameducationorganizationid, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentschoolassociation (oldentrydate, oldschoolid, oldstudentusi, oldstudentuniqueid, newentrydate, newschoolid, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentschoolattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentschoolattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldschoolid, oldschoolyear, oldsessionname, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newschoolid, newschoolyear, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentsectionassociation (oldbegindate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newbegindate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: studentsectionattendanceevent; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.studentsectionattendanceevent (oldattendanceeventcategorydescriptorid, oldattendanceeventcategorydescriptornamespace, oldattendanceeventcategorydescriptorcodevalue, oldeventdate, oldlocalcoursecode, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldstudentusi, oldstudentuniqueid, newattendanceeventcategorydescriptorid, newattendanceeventcategorydescriptornamespace, newattendanceeventcategorydescriptorcodevalue, neweventdate, newlocalcoursecode, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newstudentusi, newstudentuniqueid, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: survey; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.survey (oldnamespace, oldsurveyidentifier, newnamespace, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveycourseassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveycourseassociation (oldcoursecode, oldeducationorganizationid, oldnamespace, oldsurveyidentifier, newcoursecode, neweducationorganizationid, newnamespace, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyprogramassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyprogramassociation (oldeducationorganizationid, oldnamespace, oldprogramname, oldprogramtypedescriptorid, oldprogramtypedescriptornamespace, oldprogramtypedescriptorcodevalue, oldsurveyidentifier, neweducationorganizationid, newnamespace, newprogramname, newprogramtypedescriptorid, newprogramtypedescriptornamespace, newprogramtypedescriptorcodevalue, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestion; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyquestion (oldnamespace, oldquestioncode, oldsurveyidentifier, newnamespace, newquestioncode, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyquestionresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyquestionresponse (oldnamespace, oldquestioncode, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newquestioncode, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponse (oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation (oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, neweducationorganizationid, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveyresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveyresponsestafftargetassociation (oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, newnamespace, newstaffusi, newstaffuniqueid, newsurveyidentifier, newsurveyresponseidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysection; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysection (oldnamespace, oldsurveyidentifier, oldsurveysectiontitle, newnamespace, newsurveyidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionassociation (oldlocalcoursecode, oldnamespace, oldschoolid, oldschoolyear, oldsectionidentifier, oldsessionname, oldsurveyidentifier, newlocalcoursecode, newnamespace, newschoolid, newschoolyear, newsectionidentifier, newsessionname, newsurveyidentifier, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponse; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponse (oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponseeducationorganizationtargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation (oldeducationorganizationid, oldnamespace, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, neweducationorganizationid, newnamespace, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Data for Name: surveysectionresponsestafftargetassociation; Type: TABLE DATA; Schema: tracked_changes_edfi; Owner: postgres
--

COPY tracked_changes_edfi.surveysectionresponsestafftargetassociation (oldnamespace, oldstaffusi, oldstaffuniqueid, oldsurveyidentifier, oldsurveyresponseidentifier, oldsurveysectiontitle, newnamespace, newstaffusi, newstaffuniqueid, newsurveyidentifier, newsurveyresponseidentifier, newsurveysectiontitle, id, changeversion, discriminator, createdate) FROM stdin;
\.


--
-- Name: changeversionsequence; Type: SEQUENCE SET; Schema: changes; Owner: postgres
--

SELECT pg_catalog.setval('changes.changeversionsequence', 3150, true);


--
-- Name: descriptor_descriptorid_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.descriptor_descriptorid_seq', 3150, true);


--
-- Name: parent_parentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.parent_parentusi_seq', 1, false);


--
-- Name: staff_staffusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.staff_staffusi_seq', 1, false);


--
-- Name: student_studentusi_seq; Type: SEQUENCE SET; Schema: edfi; Owner: postgres
--

SELECT pg_catalog.setval('edfi.student_studentusi_seq', 1, false);


--
-- Name: DeployJournal_schemaversionsid_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public."DeployJournal_schemaversionsid_seq"', 49, true);


--
-- Name: educationorganizationidtoeducationorganizationid educationorganizationidtoeducationorganizationid_pk; Type: CONSTRAINT; Schema: auth; Owner: postgres
--

ALTER TABLE ONLY auth.educationorganizationidtoeducationorganizationid
    ADD CONSTRAINT educationorganizationidtoeducationorganizationid_pk PRIMARY KEY (sourceeducationorganizationid, targeteducationorganizationid);


--
-- Name: snapshot snapshot_pk; Type: CONSTRAINT; Schema: changes; Owner: postgres
--

ALTER TABLE ONLY changes.snapshot
    ADD CONSTRAINT snapshot_pk PRIMARY KEY (snapshotidentifier);


--
-- Name: absenceeventcategorydescriptor absenceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT absenceeventcategorydescriptor_pk PRIMARY KEY (absenceeventcategorydescriptorid);


--
-- Name: academichonorcategorydescriptor academichonorcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT academichonorcategorydescriptor_pk PRIMARY KEY (academichonorcategorydescriptorid);


--
-- Name: academicsubjectdescriptor academicsubjectdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT academicsubjectdescriptor_pk PRIMARY KEY (academicsubjectdescriptorid);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (schoolid, weekidentifier);


--
-- Name: accommodationdescriptor accommodationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT accommodationdescriptor_pk PRIMARY KEY (accommodationdescriptorid);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (educationorganizationid, ratingtitle, schoolyear);


--
-- Name: accounttypedescriptor accounttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accounttypedescriptor
    ADD CONSTRAINT accounttypedescriptor_pk PRIMARY KEY (accounttypedescriptorid);


--
-- Name: achievementcategorydescriptor achievementcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT achievementcategorydescriptor_pk PRIMARY KEY (achievementcategorydescriptorid);


--
-- Name: additionalcredittypedescriptor additionalcredittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT additionalcredittypedescriptor_pk PRIMARY KEY (additionalcredittypedescriptorid);


--
-- Name: addresstypedescriptor addresstypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT addresstypedescriptor_pk PRIMARY KEY (addresstypedescriptorid);


--
-- Name: administrationenvironmentdescriptor administrationenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT administrationenvironmentdescriptor_pk PRIMARY KEY (administrationenvironmentdescriptorid);


--
-- Name: administrativefundingcontroldescriptor administrativefundingcontroldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT administrativefundingcontroldescriptor_pk PRIMARY KEY (administrativefundingcontroldescriptorid);


--
-- Name: ancestryethnicorigindescriptor ancestryethnicorigindescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT ancestryethnicorigindescriptor_pk PRIMARY KEY (ancestryethnicorigindescriptorid);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentacademicsubject assessmentacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT assessmentacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, assessmentidentifier, namespace);


--
-- Name: assessmentassessedgradelevel assessmentassessedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT assessmentassessedgradelevel_pk PRIMARY KEY (assessmentidentifier, gradeleveldescriptorid, namespace);


--
-- Name: assessmentcategorydescriptor assessmentcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT assessmentcategorydescriptor_pk PRIMARY KEY (assessmentcategorydescriptorid);


--
-- Name: assessmentcontentstandard assessmentcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT assessmentcontentstandard_pk PRIMARY KEY (assessmentidentifier, namespace);


--
-- Name: assessmentcontentstandardauthor assessmentcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT assessmentcontentstandardauthor_pk PRIMARY KEY (assessmentidentifier, author, namespace);


--
-- Name: assessmentidentificationcode assessmentidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT assessmentidentificationcode_pk PRIMARY KEY (assessmentidentificationsystemdescriptorid, assessmentidentifier, namespace);


--
-- Name: assessmentidentificationsystemdescriptor assessmentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT assessmentidentificationsystemdescriptor_pk PRIMARY KEY (assessmentidentificationsystemdescriptorid);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: assessmentitemcategorydescriptor assessmentitemcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT assessmentitemcategorydescriptor_pk PRIMARY KEY (assessmentitemcategorydescriptorid);


--
-- Name: assessmentitemlearningstandard assessmentitemlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT assessmentitemlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, learningstandardid, namespace);


--
-- Name: assessmentitempossibleresponse assessmentitempossibleresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT assessmentitempossibleresponse_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, responsevalue);


--
-- Name: assessmentitemresultdescriptor assessmentitemresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT assessmentitemresultdescriptor_pk PRIMARY KEY (assessmentitemresultdescriptorid);


--
-- Name: assessmentlanguage assessmentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT assessmentlanguage_pk PRIMARY KEY (assessmentidentifier, languagedescriptorid, namespace);


--
-- Name: assessmentperformancelevel assessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT assessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid);


--
-- Name: assessmentperiod assessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT assessmentperiod_pk PRIMARY KEY (assessmentidentifier, assessmentperioddescriptorid, namespace);


--
-- Name: assessmentperioddescriptor assessmentperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT assessmentperioddescriptor_pk PRIMARY KEY (assessmentperioddescriptorid);


--
-- Name: assessmentplatformtype assessmentplatformtype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT assessmentplatformtype_pk PRIMARY KEY (assessmentidentifier, namespace, platformtypedescriptorid);


--
-- Name: assessmentprogram assessmentprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT assessmentprogram_pk PRIMARY KEY (assessmentidentifier, educationorganizationid, namespace, programname, programtypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor assessmentreportingmethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT assessmentreportingmethoddescriptor_pk PRIMARY KEY (assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore assessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT assessmentscore_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (assessmentidentifier, namespace, scorerangeid);


--
-- Name: assessmentscorerangelearningstandardlearningstandard assessmentscorerangelearningstandardlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandardlearningstandard_pk PRIMARY KEY (assessmentidentifier, learningstandardid, namespace, scorerangeid);


--
-- Name: assessmentsection assessmentsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT assessmentsection_pk PRIMARY KEY (assessmentidentifier, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: assignmentlatestatusdescriptor assignmentlatestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assignmentlatestatusdescriptor
    ADD CONSTRAINT assignmentlatestatusdescriptor_pk PRIMARY KEY (assignmentlatestatusdescriptorid);


--
-- Name: attemptstatusdescriptor attemptstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT attemptstatusdescriptor_pk PRIMARY KEY (attemptstatusdescriptorid);


--
-- Name: attendanceeventcategorydescriptor attendanceeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT attendanceeventcategorydescriptor_pk PRIMARY KEY (attendanceeventcategorydescriptorid);


--
-- Name: balancesheetdimension balancesheetdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimension
    ADD CONSTRAINT balancesheetdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: balancesheetdimensionreportingtag balancesheetdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT balancesheetdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: barriertointernetaccessinresidencedescriptor barriertointernetaccessinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT barriertointernetaccessinresidencedescriptor_pk PRIMARY KEY (barriertointernetaccessinresidencedescriptorid);


--
-- Name: behaviordescriptor behaviordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT behaviordescriptor_pk PRIMARY KEY (behaviordescriptorid);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (bellschedulename, schoolid);


--
-- Name: bellscheduleclassperiod bellscheduleclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT bellscheduleclassperiod_pk PRIMARY KEY (bellschedulename, classperiodname, schoolid);


--
-- Name: bellscheduledate bellscheduledate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT bellscheduledate_pk PRIMARY KEY (bellschedulename, date, schoolid);


--
-- Name: bellschedulegradelevel bellschedulegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT bellschedulegradelevel_pk PRIMARY KEY (bellschedulename, gradeleveldescriptorid, schoolid);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (calendarcode, schoolid, schoolyear);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (calendarcode, date, schoolid, schoolyear);


--
-- Name: calendardatecalendarevent calendardatecalendarevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT calendardatecalendarevent_pk PRIMARY KEY (calendarcode, calendareventdescriptorid, date, schoolid, schoolyear);


--
-- Name: calendareventdescriptor calendareventdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT calendareventdescriptor_pk PRIMARY KEY (calendareventdescriptorid);


--
-- Name: calendargradelevel calendargradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT calendargradelevel_pk PRIMARY KEY (calendarcode, gradeleveldescriptorid, schoolid, schoolyear);


--
-- Name: calendartypedescriptor calendartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT calendartypedescriptor_pk PRIMARY KEY (calendartypedescriptorid);


--
-- Name: careerpathwaydescriptor careerpathwaydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT careerpathwaydescriptor_pk PRIMARY KEY (careerpathwaydescriptorid);


--
-- Name: charterapprovalagencytypedescriptor charterapprovalagencytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT charterapprovalagencytypedescriptor_pk PRIMARY KEY (charterapprovalagencytypedescriptorid);


--
-- Name: charterstatusdescriptor charterstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT charterstatusdescriptor_pk PRIMARY KEY (charterstatusdescriptorid);


--
-- Name: chartofaccount chartofaccount_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT chartofaccount_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: chartofaccountreportingtag chartofaccountreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT chartofaccountreportingtag_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid);


--
-- Name: citizenshipstatusdescriptor citizenshipstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT citizenshipstatusdescriptor_pk PRIMARY KEY (citizenshipstatusdescriptorid);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (classperiodname, schoolid);


--
-- Name: classperiodmeetingtime classperiodmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT classperiodmeetingtime_pk PRIMARY KEY (classperiodname, endtime, schoolid, starttime);


--
-- Name: classroompositiondescriptor classroompositiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT classroompositiondescriptor_pk PRIMARY KEY (classroompositiondescriptorid);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (cohortidentifier, educationorganizationid);


--
-- Name: cohortprogram cohortprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT cohortprogram_pk PRIMARY KEY (cohortidentifier, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: cohortscopedescriptor cohortscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT cohortscopedescriptor_pk PRIMARY KEY (cohortscopedescriptorid);


--
-- Name: cohorttypedescriptor cohorttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT cohorttypedescriptor_pk PRIMARY KEY (cohorttypedescriptorid);


--
-- Name: cohortyeartypedescriptor cohortyeartypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT cohortyeartypedescriptor_pk PRIMARY KEY (cohortyeartypedescriptorid);


--
-- Name: communityorganization communityorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT communityorganization_pk PRIMARY KEY (communityorganizationid);


--
-- Name: communityprovider communityprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT communityprovider_pk PRIMARY KEY (communityproviderid);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (communityproviderid, licenseidentifier, licensingorganization);


--
-- Name: competencyleveldescriptor competencyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT competencyleveldescriptor_pk PRIMARY KEY (competencyleveldescriptorid);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: contacttypedescriptor contacttypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT contacttypedescriptor_pk PRIMARY KEY (contacttypedescriptorid);


--
-- Name: contentclassdescriptor contentclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT contentclassdescriptor_pk PRIMARY KEY (contentclassdescriptorid);


--
-- Name: continuationofservicesreasondescriptor continuationofservicesreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT continuationofservicesreasondescriptor_pk PRIMARY KEY (continuationofservicesreasondescriptorid);


--
-- Name: costratedescriptor costratedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT costratedescriptor_pk PRIMARY KEY (costratedescriptorid);


--
-- Name: countrydescriptor countrydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT countrydescriptor_pk PRIMARY KEY (countrydescriptorid);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (coursecode, educationorganizationid);


--
-- Name: courseattemptresultdescriptor courseattemptresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT courseattemptresultdescriptor_pk PRIMARY KEY (courseattemptresultdescriptorid);


--
-- Name: coursecompetencylevel coursecompetencylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT coursecompetencylevel_pk PRIMARY KEY (competencyleveldescriptorid, coursecode, educationorganizationid);


--
-- Name: coursedefinedbydescriptor coursedefinedbydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT coursedefinedbydescriptor_pk PRIMARY KEY (coursedefinedbydescriptorid);


--
-- Name: coursegpaapplicabilitydescriptor coursegpaapplicabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT coursegpaapplicabilitydescriptor_pk PRIMARY KEY (coursegpaapplicabilitydescriptorid);


--
-- Name: courseidentificationcode courseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT courseidentificationcode_pk PRIMARY KEY (coursecode, courseidentificationsystemdescriptorid, educationorganizationid);


--
-- Name: courseidentificationsystemdescriptor courseidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT courseidentificationsystemdescriptor_pk PRIMARY KEY (courseidentificationsystemdescriptorid);


--
-- Name: courselearningobjective courselearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT courselearningobjective_pk PRIMARY KEY (coursecode, educationorganizationid, learningobjectiveid, namespace);


--
-- Name: courselearningstandard courselearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT courselearningstandard_pk PRIMARY KEY (coursecode, educationorganizationid, learningstandardid);


--
-- Name: courselevelcharacteristic courselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT courselevelcharacteristic_pk PRIMARY KEY (coursecode, courselevelcharacteristicdescriptorid, educationorganizationid);


--
-- Name: courselevelcharacteristicdescriptor courselevelcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT courselevelcharacteristicdescriptor_pk PRIMARY KEY (courselevelcharacteristicdescriptorid);


--
-- Name: courseofferedgradelevel courseofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT courseofferedgradelevel_pk PRIMARY KEY (coursecode, educationorganizationid, gradeleveldescriptorid);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingcourselevelcharacteristic courseofferingcourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT courseofferingcourselevelcharacteristic_pk PRIMARY KEY (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingcurriculumused courseofferingcurriculumused_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT courseofferingcurriculumused_pk PRIMARY KEY (curriculumuseddescriptorid, localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courseofferingofferedgradelevel courseofferingofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT courseofferingofferedgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: courserepeatcodedescriptor courserepeatcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT courserepeatcodedescriptor_pk PRIMARY KEY (courserepeatcodedescriptorid);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptacademicsubject coursetranscriptacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT coursetranscriptacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode coursetranscriptalternativecourseidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT coursetranscriptalternativecourseidentificationcode_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, courseidentificationsystemdescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptcreditcategory coursetranscriptcreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT coursetranscriptcreditcategory_pk PRIMARY KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, creditcategorydescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits coursetranscriptearnedadditionalcredits_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT coursetranscriptearnedadditionalcredits_pk PRIMARY KEY (additionalcredittypedescriptorid, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: coursetranscriptpartialcoursetranscriptawards coursetranscriptpartialcoursetranscriptawards_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT coursetranscriptpartialcoursetranscriptawards_pk PRIMARY KEY (awarddate, courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialacademicsubject credentialacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT credentialacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialendorsement credentialendorsement_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT credentialendorsement_pk PRIMARY KEY (credentialendorsement, credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialfielddescriptor credentialfielddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT credentialfielddescriptor_pk PRIMARY KEY (credentialfielddescriptorid);


--
-- Name: credentialgradelevel credentialgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT credentialgradelevel_pk PRIMARY KEY (credentialidentifier, gradeleveldescriptorid, stateofissuestateabbreviationdescriptorid);


--
-- Name: credentialtypedescriptor credentialtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT credentialtypedescriptor_pk PRIMARY KEY (credentialtypedescriptorid);


--
-- Name: creditcategorydescriptor creditcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT creditcategorydescriptor_pk PRIMARY KEY (creditcategorydescriptorid);


--
-- Name: credittypedescriptor credittypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT credittypedescriptor_pk PRIMARY KEY (credittypedescriptorid);


--
-- Name: cteprogramservicedescriptor cteprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT cteprogramservicedescriptor_pk PRIMARY KEY (cteprogramservicedescriptorid);


--
-- Name: curriculumuseddescriptor curriculumuseddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT curriculumuseddescriptor_pk PRIMARY KEY (curriculumuseddescriptorid);


--
-- Name: deliverymethoddescriptor deliverymethoddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT deliverymethoddescriptor_pk PRIMARY KEY (deliverymethoddescriptorid);


--
-- Name: descriptor descriptor_ak; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_ak UNIQUE (codevalue, namespace);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (descriptorid);


--
-- Name: descriptormapping descriptormapping_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormapping
    ADD CONSTRAINT descriptormapping_pk PRIMARY KEY (mappednamespace, mappedvalue, namespace, value);


--
-- Name: descriptormappingmodelentity descriptormappingmodelentity_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT descriptormappingmodelentity_pk PRIMARY KEY (mappednamespace, mappedvalue, modelentitydescriptorid, namespace, value);


--
-- Name: diagnosisdescriptor diagnosisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT diagnosisdescriptor_pk PRIMARY KEY (diagnosisdescriptorid);


--
-- Name: diplomaleveldescriptor diplomaleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT diplomaleveldescriptor_pk PRIMARY KEY (diplomaleveldescriptorid);


--
-- Name: diplomatypedescriptor diplomatypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT diplomatypedescriptor_pk PRIMARY KEY (diplomatypedescriptorid);


--
-- Name: disabilitydescriptor disabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT disabilitydescriptor_pk PRIMARY KEY (disabilitydescriptorid);


--
-- Name: disabilitydesignationdescriptor disabilitydesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT disabilitydesignationdescriptor_pk PRIMARY KEY (disabilitydesignationdescriptorid);


--
-- Name: disabilitydeterminationsourcetypedescriptor disabilitydeterminationsourcetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT disabilitydeterminationsourcetypedescriptor_pk PRIMARY KEY (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: disciplineactiondiscipline disciplineactiondiscipline_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT disciplineactiondiscipline_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, disciplinedescriptorid, studentusi);


--
-- Name: disciplineactionlengthdifferencereasondescriptor disciplineactionlengthdifferencereasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT disciplineactionlengthdifferencereasondescriptor_pk PRIMARY KEY (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineactionstaff disciplineactionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT disciplineactionstaff_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, staffusi, studentusi);


--
-- Name: disciplineactionstudentdisciplineincidentassociation disciplineactionstudentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT disciplineactionstudentdisciplineincidentassociation_pk PRIMARY KEY (disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi);


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation disciplineactionstudentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT disciplineactionstudentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (behaviordescriptorid, disciplineactionidentifier, disciplinedate, incidentidentifier, schoolid, studentusi);


--
-- Name: disciplinedescriptor disciplinedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT disciplinedescriptor_pk PRIMARY KEY (disciplinedescriptorid);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (incidentidentifier, schoolid);


--
-- Name: disciplineincidentbehavior disciplineincidentbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT disciplineincidentbehavior_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid);


--
-- Name: disciplineincidentexternalparticipant disciplineincidentexternalparticipant_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT disciplineincidentexternalparticipant_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid, firstname, incidentidentifier, lastsurname, schoolid);


--
-- Name: disciplineincidentparticipationcodedescriptor disciplineincidentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT disciplineincidentparticipationcodedescriptor_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid);


--
-- Name: disciplineincidentweapon disciplineincidentweapon_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT disciplineincidentweapon_pk PRIMARY KEY (incidentidentifier, schoolid, weapondescriptorid);


--
-- Name: educationalenvironmentdescriptor educationalenvironmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT educationalenvironmentdescriptor_pk PRIMARY KEY (educationalenvironmentdescriptorid);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (contentidentifier);


--
-- Name: educationcontentappropriategradelevel educationcontentappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT educationcontentappropriategradelevel_pk PRIMARY KEY (contentidentifier, gradeleveldescriptorid);


--
-- Name: educationcontentappropriatesex educationcontentappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT educationcontentappropriatesex_pk PRIMARY KEY (contentidentifier, sexdescriptorid);


--
-- Name: educationcontentauthor educationcontentauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT educationcontentauthor_pk PRIMARY KEY (author, contentidentifier);


--
-- Name: educationcontentderivativesourceeducationcontent educationcontentderivativesourceeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT educationcontentderivativesourceeducationcontent_pk PRIMARY KEY (contentidentifier, derivativesourcecontentidentifier);


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri educationcontentderivativesourcelearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT educationcontentderivativesourcelearningresourcemetadatauri_pk PRIMARY KEY (contentidentifier, derivativesourcelearningresourcemetadatauri);


--
-- Name: educationcontentderivativesourceuri educationcontentderivativesourceuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT educationcontentderivativesourceuri_pk PRIMARY KEY (contentidentifier, derivativesourceuri);


--
-- Name: educationcontentlanguage educationcontentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT educationcontentlanguage_pk PRIMARY KEY (contentidentifier, languagedescriptorid);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (educationorganizationid);


--
-- Name: educationorganizationaddress educationorganizationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT educationorganizationaddress_pk PRIMARY KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: educationorganizationaddressperiod educationorganizationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT educationorganizationaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: educationorganizationassociationtypedescriptor educationorganizationassociationtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationassociationtypedescriptor
    ADD CONSTRAINT educationorganizationassociationtypedescriptor_pk PRIMARY KEY (educationorganizationassociationtypedescriptorid);


--
-- Name: educationorganizationcategory educationorganizationcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT educationorganizationcategory_pk PRIMARY KEY (educationorganizationcategorydescriptorid, educationorganizationid);


--
-- Name: educationorganizationcategorydescriptor educationorganizationcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT educationorganizationcategorydescriptor_pk PRIMARY KEY (educationorganizationcategorydescriptorid);


--
-- Name: educationorganizationidentificationcode educationorganizationidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT educationorganizationidentificationcode_pk PRIMARY KEY (educationorganizationid, educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor educationorganizationidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT educationorganizationidentificationsystemdescriptor_pk PRIMARY KEY (educationorganizationidentificationsystemdescriptorid);


--
-- Name: educationorganizationindicator educationorganizationindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT educationorganizationindicator_pk PRIMARY KEY (educationorganizationid, indicatordescriptorid);


--
-- Name: educationorganizationindicatorperiod educationorganizationindicatorperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT educationorganizationindicatorperiod_pk PRIMARY KEY (begindate, educationorganizationid, indicatordescriptorid);


--
-- Name: educationorganizationinstitutiontelephone educationorganizationinstitutiontelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT educationorganizationinstitutiontelephone_pk PRIMARY KEY (educationorganizationid, institutiontelephonenumbertypedescriptorid);


--
-- Name: educationorganizationinternationaladdress educationorganizationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT educationorganizationinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, educationorganizationid);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (educationorganizationid, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: educationorganizationnetwork educationorganizationnetwork_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT educationorganizationnetwork_pk PRIMARY KEY (educationorganizationnetworkid);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (educationorganizationnetworkid, membereducationorganizationid);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (educationorganizationid, peereducationorganizationid);


--
-- Name: educationplandescriptor educationplandescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT educationplandescriptor_pk PRIMARY KEY (educationplandescriptorid);


--
-- Name: educationservicecenter educationservicecenter_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT educationservicecenter_pk PRIMARY KEY (educationservicecenterid);


--
-- Name: electronicmailtypedescriptor electronicmailtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT electronicmailtypedescriptor_pk PRIMARY KEY (electronicmailtypedescriptorid);


--
-- Name: employmentstatusdescriptor employmentstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT employmentstatusdescriptor_pk PRIMARY KEY (employmentstatusdescriptorid);


--
-- Name: entrygradelevelreasondescriptor entrygradelevelreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT entrygradelevelreasondescriptor_pk PRIMARY KEY (entrygradelevelreasondescriptorid);


--
-- Name: entrytypedescriptor entrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT entrytypedescriptor_pk PRIMARY KEY (entrytypedescriptorid);


--
-- Name: eventcircumstancedescriptor eventcircumstancedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT eventcircumstancedescriptor_pk PRIMARY KEY (eventcircumstancedescriptorid);


--
-- Name: exitwithdrawtypedescriptor exitwithdrawtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT exitwithdrawtypedescriptor_pk PRIMARY KEY (exitwithdrawtypedescriptorid);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (begindate, feederschoolid, schoolid);


--
-- Name: financialcollectiondescriptor financialcollectiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.financialcollectiondescriptor
    ADD CONSTRAINT financialcollectiondescriptor_pk PRIMARY KEY (financialcollectiondescriptorid);


--
-- Name: functiondimension functiondimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimension
    ADD CONSTRAINT functiondimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: functiondimensionreportingtag functiondimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT functiondimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: funddimension funddimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimension
    ADD CONSTRAINT funddimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: funddimensionreportingtag funddimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT funddimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: generalstudentprogramassociationparticipationstatus generalstudentprogramassociationparticipationstatus_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT generalstudentprogramassociationparticipationstatus_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus generalstudentprogramassociationprogramparticipationstatus_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT generalstudentprogramassociationprogramparticipationstatus_pk PRIMARY KEY (begindate, educationorganizationid, participationstatusdescriptorid, programeducationorganizationid, programname, programtypedescriptorid, statusbegindate, studentusi);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (gradebookentryidentifier, namespace);


--
-- Name: gradebookentrylearningstandard gradebookentrylearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT gradebookentrylearningstandard_pk PRIMARY KEY (gradebookentryidentifier, learningstandardid, namespace);


--
-- Name: gradebookentrytypedescriptor gradebookentrytypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT gradebookentrytypedescriptor_pk PRIMARY KEY (gradebookentrytypedescriptorid);


--
-- Name: gradelearningstandardgrade gradelearningstandardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT gradelearningstandardgrade_pk PRIMARY KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, learningstandardid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: gradeleveldescriptor gradeleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT gradeleveldescriptor_pk PRIMARY KEY (gradeleveldescriptorid);


--
-- Name: gradepointaveragetypedescriptor gradepointaveragetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT gradepointaveragetypedescriptor_pk PRIMARY KEY (gradepointaveragetypedescriptorid);


--
-- Name: gradetypedescriptor gradetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT gradetypedescriptor_pk PRIMARY KEY (gradetypedescriptorid);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: gradingperioddescriptor gradingperioddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT gradingperioddescriptor_pk PRIMARY KEY (gradingperioddescriptorid);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycourse graduationplancreditsbycourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT graduationplancreditsbycourse_pk PRIMARY KEY (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycoursecourse graduationplancreditsbycoursecourse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT graduationplancreditsbycoursecourse_pk PRIMARY KEY (coursecode, courseeducationorganizationid, coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbycreditcategory graduationplancreditsbycreditcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT graduationplancreditsbycreditcategory_pk PRIMARY KEY (creditcategorydescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplancreditsbysubject graduationplancreditsbysubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT graduationplancreditsbysubject_pk PRIMARY KEY (academicsubjectdescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: graduationplanrequiredassessment graduationplanrequiredassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT graduationplanrequiredassessment_pk PRIMARY KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: graduationplanrequiredassessmentperformancelevel graduationplanrequiredassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT graduationplanrequiredassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: graduationplanrequiredassessmentscore graduationplanrequiredassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT graduationplanrequiredassessmentscore_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: graduationplantypedescriptor graduationplantypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT graduationplantypedescriptor_pk PRIMARY KEY (graduationplantypedescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor gunfreeschoolsactreportingstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT gunfreeschoolsactreportingstatusdescriptor_pk PRIMARY KEY (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: homelessprimarynighttimeresidencedescriptor homelessprimarynighttimeresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT homelessprimarynighttimeresidencedescriptor_pk PRIMARY KEY (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: homelessprogramservicedescriptor homelessprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT homelessprogramservicedescriptor_pk PRIMARY KEY (homelessprogramservicedescriptorid);


--
-- Name: identificationdocumentusedescriptor identificationdocumentusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT identificationdocumentusedescriptor_pk PRIMARY KEY (identificationdocumentusedescriptorid);


--
-- Name: incidentlocationdescriptor incidentlocationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT incidentlocationdescriptor_pk PRIMARY KEY (incidentlocationdescriptorid);


--
-- Name: indicatordescriptor indicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT indicatordescriptor_pk PRIMARY KEY (indicatordescriptorid);


--
-- Name: indicatorgroupdescriptor indicatorgroupdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT indicatorgroupdescriptor_pk PRIMARY KEY (indicatorgroupdescriptorid);


--
-- Name: indicatorleveldescriptor indicatorleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT indicatorleveldescriptor_pk PRIMARY KEY (indicatorleveldescriptorid);


--
-- Name: institutiontelephonenumbertypedescriptor institutiontelephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT institutiontelephonenumbertypedescriptor_pk PRIMARY KEY (institutiontelephonenumbertypedescriptorid);


--
-- Name: interactivitystyledescriptor interactivitystyledescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT interactivitystyledescriptor_pk PRIMARY KEY (interactivitystyledescriptorid);


--
-- Name: internetaccessdescriptor internetaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT internetaccessdescriptor_pk PRIMARY KEY (internetaccessdescriptorid);


--
-- Name: internetaccesstypeinresidencedescriptor internetaccesstypeinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT internetaccesstypeinresidencedescriptor_pk PRIMARY KEY (internetaccesstypeinresidencedescriptorid);


--
-- Name: internetperformanceinresidencedescriptor internetperformanceinresidencedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT internetperformanceinresidencedescriptor_pk PRIMARY KEY (internetperformanceinresidencedescriptorid);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode);


--
-- Name: interventionappropriategradelevel interventionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT interventionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, interventionidentificationcode);


--
-- Name: interventionappropriatesex interventionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT interventionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, sexdescriptorid);


--
-- Name: interventionclassdescriptor interventionclassdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT interventionclassdescriptor_pk PRIMARY KEY (interventionclassdescriptorid);


--
-- Name: interventiondiagnosis interventiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT interventiondiagnosis_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, interventionidentificationcode);


--
-- Name: interventioneducationcontent interventioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT interventioneducationcontent_pk PRIMARY KEY (contentidentifier, educationorganizationid, interventionidentificationcode);


--
-- Name: interventioneffectivenessratingdescriptor interventioneffectivenessratingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT interventioneffectivenessratingdescriptor_pk PRIMARY KEY (interventioneffectivenessratingdescriptorid);


--
-- Name: interventioninterventionprescription interventioninterventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT interventioninterventionprescription_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionlearningresourcemetadatauri interventionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT interventionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionmeetingtime interventionmeetingtime_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT interventionmeetingtime_pk PRIMARY KEY (educationorganizationid, endtime, interventionidentificationcode, starttime);


--
-- Name: interventionpopulationserved interventionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT interventionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionappropriategradelevel interventionprescriptionappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT interventionprescriptionappropriategradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionappropriatesex interventionprescriptionappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT interventionprescriptionappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, sexdescriptorid);


--
-- Name: interventionprescriptiondiagnosis interventionprescriptiondiagnosis_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT interventionprescriptiondiagnosis_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptioneducationcontent interventionprescriptioneducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT interventionprescriptioneducationcontent_pk PRIMARY KEY (contentidentifier, educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: interventionprescriptionlearningresourcemetadatauri interventionprescriptionlearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT interventionprescriptionlearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionprescriptionpopulationserved interventionprescriptionpopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT interventionprescriptionpopulationserved_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, populationserveddescriptorid);


--
-- Name: interventionprescriptionuri interventionprescriptionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT interventionprescriptionuri_pk PRIMARY KEY (educationorganizationid, interventionprescriptionidentificationcode, uri);


--
-- Name: interventionstaff interventionstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT interventionstaff_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, staffusi);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: interventionstudyappropriategradelevel interventionstudyappropriategradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT interventionstudyappropriategradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode);


--
-- Name: interventionstudyappropriatesex interventionstudyappropriatesex_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT interventionstudyappropriatesex_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, sexdescriptorid);


--
-- Name: interventionstudyeducationcontent interventionstudyeducationcontent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT interventionstudyeducationcontent_pk PRIMARY KEY (contentidentifier, educationorganizationid, interventionstudyidentificationcode);


--
-- Name: interventionstudyinterventioneffectiveness interventionstudyinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT interventionstudyinterventioneffectiveness_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionstudyidentificationcode, populationserveddescriptorid);


--
-- Name: interventionstudylearningresourcemetadatauri interventionstudylearningresourcemetadatauri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT interventionstudylearningresourcemetadatauri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, learningresourcemetadatauri);


--
-- Name: interventionstudypopulationserved interventionstudypopulationserved_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT interventionstudypopulationserved_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, populationserveddescriptorid);


--
-- Name: interventionstudystateabbreviation interventionstudystateabbreviation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT interventionstudystateabbreviation_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, stateabbreviationdescriptorid);


--
-- Name: interventionstudyuri interventionstudyuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT interventionstudyuri_pk PRIMARY KEY (educationorganizationid, interventionstudyidentificationcode, uri);


--
-- Name: interventionuri interventionuri_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT interventionuri_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, uri);


--
-- Name: languagedescriptor languagedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT languagedescriptor_pk PRIMARY KEY (languagedescriptorid);


--
-- Name: languageinstructionprogramservicedescriptor languageinstructionprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT languageinstructionprogramservicedescriptor_pk PRIMARY KEY (languageinstructionprogramservicedescriptorid);


--
-- Name: languageusedescriptor languageusedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT languageusedescriptor_pk PRIMARY KEY (languageusedescriptorid);


--
-- Name: learningobjective learningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjective
    ADD CONSTRAINT learningobjective_pk PRIMARY KEY (learningobjectiveid, namespace);


--
-- Name: learningobjectiveacademicsubject learningobjectiveacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT learningobjectiveacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, learningobjectiveid, namespace);


--
-- Name: learningobjectivecontentstandard learningobjectivecontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT learningobjectivecontentstandard_pk PRIMARY KEY (learningobjectiveid, namespace);


--
-- Name: learningobjectivecontentstandardauthor learningobjectivecontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandardauthor
    ADD CONSTRAINT learningobjectivecontentstandardauthor_pk PRIMARY KEY (author, learningobjectiveid, namespace);


--
-- Name: learningobjectivegradelevel learningobjectivegradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT learningobjectivegradelevel_pk PRIMARY KEY (gradeleveldescriptorid, learningobjectiveid, namespace);


--
-- Name: learningobjectivelearningstandard learningobjectivelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT learningobjectivelearningstandard_pk PRIMARY KEY (learningobjectiveid, learningstandardid, namespace);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardacademicsubject learningstandardacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT learningstandardacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, learningstandardid);


--
-- Name: learningstandardcategorydescriptor learningstandardcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT learningstandardcategorydescriptor_pk PRIMARY KEY (learningstandardcategorydescriptorid);


--
-- Name: learningstandardcontentstandard learningstandardcontentstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT learningstandardcontentstandard_pk PRIMARY KEY (learningstandardid);


--
-- Name: learningstandardcontentstandardauthor learningstandardcontentstandardauthor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT learningstandardcontentstandardauthor_pk PRIMARY KEY (author, learningstandardid);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (namespace, sourcelearningstandardid, targetlearningstandardid);


--
-- Name: learningstandardequivalencestrengthdescriptor learningstandardequivalencestrengthdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT learningstandardequivalencestrengthdescriptor_pk PRIMARY KEY (learningstandardequivalencestrengthdescriptorid);


--
-- Name: learningstandardgradelevel learningstandardgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT learningstandardgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, learningstandardid);


--
-- Name: learningstandardidentificationcode learningstandardidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT learningstandardidentificationcode_pk PRIMARY KEY (contentstandardname, identificationcode, learningstandardid);


--
-- Name: learningstandardprerequisitelearningstandard learningstandardprerequisitelearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT learningstandardprerequisitelearningstandard_pk PRIMARY KEY (learningstandardid, prerequisitelearningstandardid);


--
-- Name: learningstandardscopedescriptor learningstandardscopedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT learningstandardscopedescriptor_pk PRIMARY KEY (learningstandardscopedescriptorid);


--
-- Name: levelofeducationdescriptor levelofeducationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT levelofeducationdescriptor_pk PRIMARY KEY (levelofeducationdescriptorid);


--
-- Name: licensestatusdescriptor licensestatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT licensestatusdescriptor_pk PRIMARY KEY (licensestatusdescriptorid);


--
-- Name: licensetypedescriptor licensetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT licensetypedescriptor_pk PRIMARY KEY (licensetypedescriptorid);


--
-- Name: limitedenglishproficiencydescriptor limitedenglishproficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT limitedenglishproficiencydescriptor_pk PRIMARY KEY (limitedenglishproficiencydescriptorid);


--
-- Name: localaccount localaccount_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT localaccount_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localaccountreportingtag localaccountreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT localaccountreportingtag_pk PRIMARY KEY (accountidentifier, educationorganizationid, fiscalyear, reportingtagdescriptorid);


--
-- Name: localactual localactual_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT localactual_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localbudget localbudget_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT localbudget_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localcontractedstaff localcontractedstaff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT localcontractedstaff_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: localedescriptor localedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT localedescriptor_pk PRIMARY KEY (localedescriptorid);


--
-- Name: localeducationagency localeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT localeducationagency_pk PRIMARY KEY (localeducationagencyid);


--
-- Name: localeducationagencyaccountability localeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT localeducationagencyaccountability_pk PRIMARY KEY (localeducationagencyid, schoolyear);


--
-- Name: localeducationagencycategorydescriptor localeducationagencycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT localeducationagencycategorydescriptor_pk PRIMARY KEY (localeducationagencycategorydescriptorid);


--
-- Name: localeducationagencyfederalfunds localeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT localeducationagencyfederalfunds_pk PRIMARY KEY (fiscalyear, localeducationagencyid);


--
-- Name: localencumbrance localencumbrance_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT localencumbrance_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear);


--
-- Name: localpayroll localpayroll_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT localpayroll_pk PRIMARY KEY (accountidentifier, asofdate, educationorganizationid, fiscalyear, staffusi);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (classroomidentificationcode, schoolid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor magnetspecialprogramemphasisschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT magnetspecialprogramemphasisschooldescriptor_pk PRIMARY KEY (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: mediumofinstructiondescriptor mediumofinstructiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT mediumofinstructiondescriptor_pk PRIMARY KEY (mediumofinstructiondescriptorid);


--
-- Name: methodcreditearneddescriptor methodcreditearneddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT methodcreditearneddescriptor_pk PRIMARY KEY (methodcreditearneddescriptorid);


--
-- Name: migranteducationprogramservicedescriptor migranteducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT migranteducationprogramservicedescriptor_pk PRIMARY KEY (migranteducationprogramservicedescriptorid);


--
-- Name: modelentitydescriptor modelentitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.modelentitydescriptor
    ADD CONSTRAINT modelentitydescriptor_pk PRIMARY KEY (modelentitydescriptorid);


--
-- Name: monitoreddescriptor monitoreddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT monitoreddescriptor_pk PRIMARY KEY (monitoreddescriptorid);


--
-- Name: neglectedordelinquentprogramdescriptor neglectedordelinquentprogramdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT neglectedordelinquentprogramdescriptor_pk PRIMARY KEY (neglectedordelinquentprogramdescriptorid);


--
-- Name: neglectedordelinquentprogramservicedescriptor neglectedordelinquentprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT neglectedordelinquentprogramservicedescriptor_pk PRIMARY KEY (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: networkpurposedescriptor networkpurposedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT networkpurposedescriptor_pk PRIMARY KEY (networkpurposedescriptorid);


--
-- Name: objectdimension objectdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimension
    ADD CONSTRAINT objectdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: objectdimensionreportingtag objectdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT objectdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem objectiveassessmentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT objectiveassessmentassessmentitem_pk PRIMARY KEY (assessmentidentifier, assessmentitemidentificationcode, identificationcode, namespace);


--
-- Name: objectiveassessmentlearningstandard objectiveassessmentlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT objectiveassessmentlearningstandard_pk PRIMARY KEY (assessmentidentifier, identificationcode, learningstandardid, namespace);


--
-- Name: objectiveassessmentperformancelevel objectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT objectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid);


--
-- Name: objectiveassessmentscore objectiveassessmentscore_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT objectiveassessmentscore_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace);


--
-- Name: oldethnicitydescriptor oldethnicitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.oldethnicitydescriptor
    ADD CONSTRAINT oldethnicitydescriptor_pk PRIMARY KEY (oldethnicitydescriptorid);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (educationorganizationid, requisitionnumber);


--
-- Name: openstaffpositionacademicsubject openstaffpositionacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT openstaffpositionacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, educationorganizationid, requisitionnumber);


--
-- Name: openstaffpositioninstructionalgradelevel openstaffpositioninstructionalgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT openstaffpositioninstructionalgradelevel_pk PRIMARY KEY (educationorganizationid, gradeleveldescriptorid, requisitionnumber);


--
-- Name: operationalstatusdescriptor operationalstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT operationalstatusdescriptor_pk PRIMARY KEY (operationalstatusdescriptorid);


--
-- Name: operationalunitdimension operationalunitdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimension
    ADD CONSTRAINT operationalunitdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: operationalunitdimensionreportingtag operationalunitdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT operationalunitdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: organizationdepartment organizationdepartment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT organizationdepartment_pk PRIMARY KEY (organizationdepartmentid);


--
-- Name: othernametypedescriptor othernametypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT othernametypedescriptor_pk PRIMARY KEY (othernametypedescriptorid);


--
-- Name: parent parent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT parent_pk PRIMARY KEY (parentusi);


--
-- Name: parentaddress parentaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT parentaddress_pk PRIMARY KEY (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: parentaddressperiod parentaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddressperiod
    ADD CONSTRAINT parentaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: parentelectronicmail parentelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT parentelectronicmail_pk PRIMARY KEY (electronicmailaddress, electronicmailtypedescriptorid, parentusi);


--
-- Name: parentinternationaladdress parentinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT parentinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, parentusi);


--
-- Name: parentlanguage parentlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT parentlanguage_pk PRIMARY KEY (languagedescriptorid, parentusi);


--
-- Name: parentlanguageuse parentlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT parentlanguageuse_pk PRIMARY KEY (languagedescriptorid, languageusedescriptorid, parentusi);


--
-- Name: parentothername parentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT parentothername_pk PRIMARY KEY (othernametypedescriptorid, parentusi);


--
-- Name: parentpersonalidentificationdocument parentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT parentpersonalidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, parentusi, personalinformationverificationdescriptorid);


--
-- Name: parenttelephone parenttelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT parenttelephone_pk PRIMARY KEY (parentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: participationdescriptor participationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT participationdescriptor_pk PRIMARY KEY (participationdescriptorid);


--
-- Name: participationstatusdescriptor participationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT participationstatusdescriptor_pk PRIMARY KEY (participationstatusdescriptorid);


--
-- Name: performancebaseconversiondescriptor performancebaseconversiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT performancebaseconversiondescriptor_pk PRIMARY KEY (performancebaseconversiondescriptorid);


--
-- Name: performanceleveldescriptor performanceleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT performanceleveldescriptor_pk PRIMARY KEY (performanceleveldescriptorid);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (personid, sourcesystemdescriptorid);


--
-- Name: personalinformationverificationdescriptor personalinformationverificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT personalinformationverificationdescriptor_pk PRIMARY KEY (personalinformationverificationdescriptorid);


--
-- Name: platformtypedescriptor platformtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT platformtypedescriptor_pk PRIMARY KEY (platformtypedescriptorid);


--
-- Name: populationserveddescriptor populationserveddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT populationserveddescriptor_pk PRIMARY KEY (populationserveddescriptorid);


--
-- Name: postingresultdescriptor postingresultdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT postingresultdescriptor_pk PRIMARY KEY (postingresultdescriptorid);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (eventdate, postsecondaryeventcategorydescriptorid, studentusi);


--
-- Name: postsecondaryeventcategorydescriptor postsecondaryeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT postsecondaryeventcategorydescriptor_pk PRIMARY KEY (postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryinstitution postsecondaryinstitution_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT postsecondaryinstitution_pk PRIMARY KEY (postsecondaryinstitutionid);


--
-- Name: postsecondaryinstitutionleveldescriptor postsecondaryinstitutionleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT postsecondaryinstitutionleveldescriptor_pk PRIMARY KEY (postsecondaryinstitutionleveldescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction postsecondaryinstitutionmediumofinstruction_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT postsecondaryinstitutionmediumofinstruction_pk PRIMARY KEY (mediumofinstructiondescriptorid, postsecondaryinstitutionid);


--
-- Name: primarylearningdeviceaccessdescriptor primarylearningdeviceaccessdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT primarylearningdeviceaccessdescriptor_pk PRIMARY KEY (primarylearningdeviceaccessdescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor primarylearningdeviceawayfromschooldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT primarylearningdeviceawayfromschooldescriptor_pk PRIMARY KEY (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: primarylearningdeviceproviderdescriptor primarylearningdeviceproviderdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT primarylearningdeviceproviderdescriptor_pk PRIMARY KEY (primarylearningdeviceproviderdescriptorid);


--
-- Name: proficiencydescriptor proficiencydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT proficiencydescriptor_pk PRIMARY KEY (proficiencydescriptorid);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: programassignmentdescriptor programassignmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT programassignmentdescriptor_pk PRIMARY KEY (programassignmentdescriptorid);


--
-- Name: programcharacteristic programcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT programcharacteristic_pk PRIMARY KEY (educationorganizationid, programcharacteristicdescriptorid, programname, programtypedescriptorid);


--
-- Name: programcharacteristicdescriptor programcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT programcharacteristicdescriptor_pk PRIMARY KEY (programcharacteristicdescriptorid);


--
-- Name: programdimension programdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimension
    ADD CONSTRAINT programdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: programdimensionreportingtag programdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT programdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: programlearningobjective programlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT programlearningobjective_pk PRIMARY KEY (educationorganizationid, learningobjectiveid, namespace, programname, programtypedescriptorid);


--
-- Name: programlearningstandard programlearningstandard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT programlearningstandard_pk PRIMARY KEY (educationorganizationid, learningstandardid, programname, programtypedescriptorid);


--
-- Name: programservice programservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT programservice_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, servicedescriptorid);


--
-- Name: programsponsor programsponsor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT programsponsor_pk PRIMARY KEY (educationorganizationid, programname, programsponsordescriptorid, programtypedescriptorid);


--
-- Name: programsponsordescriptor programsponsordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT programsponsordescriptor_pk PRIMARY KEY (programsponsordescriptorid);


--
-- Name: programtypedescriptor programtypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT programtypedescriptor_pk PRIMARY KEY (programtypedescriptorid);


--
-- Name: progressdescriptor progressdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT progressdescriptor_pk PRIMARY KEY (progressdescriptorid);


--
-- Name: progressleveldescriptor progressleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT progressleveldescriptor_pk PRIMARY KEY (progressleveldescriptorid);


--
-- Name: projectdimension projectdimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimension
    ADD CONSTRAINT projectdimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: projectdimensionreportingtag projectdimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT projectdimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: providercategorydescriptor providercategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT providercategorydescriptor_pk PRIMARY KEY (providercategorydescriptorid);


--
-- Name: providerprofitabilitydescriptor providerprofitabilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT providerprofitabilitydescriptor_pk PRIMARY KEY (providerprofitabilitydescriptorid);


--
-- Name: providerstatusdescriptor providerstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT providerstatusdescriptor_pk PRIMARY KEY (providerstatusdescriptorid);


--
-- Name: publicationstatusdescriptor publicationstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT publicationstatusdescriptor_pk PRIMARY KEY (publicationstatusdescriptorid);


--
-- Name: questionformdescriptor questionformdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT questionformdescriptor_pk PRIMARY KEY (questionformdescriptorid);


--
-- Name: racedescriptor racedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT racedescriptor_pk PRIMARY KEY (racedescriptorid);


--
-- Name: reasonexiteddescriptor reasonexiteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT reasonexiteddescriptor_pk PRIMARY KEY (reasonexiteddescriptorid);


--
-- Name: reasonnottesteddescriptor reasonnottesteddescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT reasonnottesteddescriptor_pk PRIMARY KEY (reasonnottesteddescriptorid);


--
-- Name: recognitiontypedescriptor recognitiontypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT recognitiontypedescriptor_pk PRIMARY KEY (recognitiontypedescriptorid);


--
-- Name: relationdescriptor relationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT relationdescriptor_pk PRIMARY KEY (relationdescriptorid);


--
-- Name: repeatidentifierdescriptor repeatidentifierdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT repeatidentifierdescriptor_pk PRIMARY KEY (repeatidentifierdescriptorid);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: reportcardgrade reportcardgrade_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT reportcardgrade_pk PRIMARY KEY (begindate, educationorganizationid, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: reportcardgradepointaverage reportcardgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT reportcardgradepointaverage_pk PRIMARY KEY (educationorganizationid, gradepointaveragetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: reportcardstudentcompetencyobjective reportcardstudentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT reportcardstudentcompetencyobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: reportcardstudentlearningobjective reportcardstudentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT reportcardstudentlearningobjective_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: reporterdescriptiondescriptor reporterdescriptiondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT reporterdescriptiondescriptor_pk PRIMARY KEY (reporterdescriptiondescriptorid);


--
-- Name: reportingtagdescriptor reportingtagdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportingtagdescriptor
    ADD CONSTRAINT reportingtagdescriptor_pk PRIMARY KEY (reportingtagdescriptorid);


--
-- Name: residencystatusdescriptor residencystatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT residencystatusdescriptor_pk PRIMARY KEY (residencystatusdescriptorid);


--
-- Name: responseindicatordescriptor responseindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT responseindicatordescriptor_pk PRIMARY KEY (responseindicatordescriptorid);


--
-- Name: responsibilitydescriptor responsibilitydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT responsibilitydescriptor_pk PRIMARY KEY (responsibilitydescriptorid);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (restrainteventidentifier, schoolid, studentusi);


--
-- Name: restrainteventprogram restrainteventprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT restrainteventprogram_pk PRIMARY KEY (educationorganizationid, programname, programtypedescriptorid, restrainteventidentifier, schoolid, studentusi);


--
-- Name: restrainteventreason restrainteventreason_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT restrainteventreason_pk PRIMARY KEY (restrainteventidentifier, restrainteventreasondescriptorid, schoolid, studentusi);


--
-- Name: restrainteventreasondescriptor restrainteventreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT restrainteventreasondescriptor_pk PRIMARY KEY (restrainteventreasondescriptorid);


--
-- Name: resultdatatypetypedescriptor resultdatatypetypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT resultdatatypetypedescriptor_pk PRIMARY KEY (resultdatatypetypedescriptorid);


--
-- Name: retestindicatordescriptor retestindicatordescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT retestindicatordescriptor_pk PRIMARY KEY (retestindicatordescriptorid);


--
-- Name: school school_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT school_pk PRIMARY KEY (schoolid);


--
-- Name: schoolcategory schoolcategory_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT schoolcategory_pk PRIMARY KEY (schoolcategorydescriptorid, schoolid);


--
-- Name: schoolcategorydescriptor schoolcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT schoolcategorydescriptor_pk PRIMARY KEY (schoolcategorydescriptorid);


--
-- Name: schoolchoiceimplementstatusdescriptor schoolchoiceimplementstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT schoolchoiceimplementstatusdescriptor_pk PRIMARY KEY (schoolchoiceimplementstatusdescriptorid);


--
-- Name: schoolfoodserviceprogramservicedescriptor schoolfoodserviceprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT schoolfoodserviceprogramservicedescriptor_pk PRIMARY KEY (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: schoolgradelevel schoolgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT schoolgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, schoolid);


--
-- Name: schooltypedescriptor schooltypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT schooltypedescriptor_pk PRIMARY KEY (schooltypedescriptorid);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (schoolyear);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectioncharacteristic sectioncharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT sectioncharacteristic_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectioncharacteristicdescriptorid, sectionidentifier, sessionname);


--
-- Name: sectioncharacteristicdescriptor sectioncharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT sectioncharacteristicdescriptor_pk PRIMARY KEY (sectioncharacteristicdescriptorid);


--
-- Name: sectionclassperiod sectionclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT sectionclassperiod_pk PRIMARY KEY (classperiodname, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectioncourselevelcharacteristic sectioncourselevelcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT sectioncourselevelcharacteristic_pk PRIMARY KEY (courselevelcharacteristicdescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionofferedgradelevel sectionofferedgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT sectionofferedgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: sectionprogram sectionprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT sectionprogram_pk PRIMARY KEY (educationorganizationid, localcoursecode, programname, programtypedescriptorid, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: separationdescriptor separationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT separationdescriptor_pk PRIMARY KEY (separationdescriptorid);


--
-- Name: separationreasondescriptor separationreasondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT separationreasondescriptor_pk PRIMARY KEY (separationreasondescriptorid);


--
-- Name: servicedescriptor servicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT servicedescriptor_pk PRIMARY KEY (servicedescriptorid);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (schoolid, schoolyear, sessionname);


--
-- Name: sessionacademicweek sessionacademicweek_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT sessionacademicweek_pk PRIMARY KEY (schoolid, schoolyear, sessionname, weekidentifier);


--
-- Name: sessiongradingperiod sessiongradingperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT sessiongradingperiod_pk PRIMARY KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear, sessionname);


--
-- Name: sexdescriptor sexdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT sexdescriptor_pk PRIMARY KEY (sexdescriptorid);


--
-- Name: sourcedimension sourcedimension_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimension
    ADD CONSTRAINT sourcedimension_pk PRIMARY KEY (code, fiscalyear);


--
-- Name: sourcedimensionreportingtag sourcedimensionreportingtag_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT sourcedimensionreportingtag_pk PRIMARY KEY (code, fiscalyear, reportingtagdescriptorid);


--
-- Name: sourcesystemdescriptor sourcesystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT sourcesystemdescriptor_pk PRIMARY KEY (sourcesystemdescriptorid);


--
-- Name: specialeducationprogramservicedescriptor specialeducationprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT specialeducationprogramservicedescriptor_pk PRIMARY KEY (specialeducationprogramservicedescriptorid);


--
-- Name: specialeducationsettingdescriptor specialeducationsettingdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT specialeducationsettingdescriptor_pk PRIMARY KEY (specialeducationsettingdescriptorid);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (staffusi);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (absenceeventcategorydescriptorid, eventdate, staffusi);


--
-- Name: staffaddress staffaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT staffaddress_pk PRIMARY KEY (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: staffaddressperiod staffaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT staffaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: staffancestryethnicorigin staffancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT staffancestryethnicorigin_pk PRIMARY KEY (ancestryethnicorigindescriptorid, staffusi);


--
-- Name: staffclassificationdescriptor staffclassificationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT staffclassificationdescriptor_pk PRIMARY KEY (staffclassificationdescriptorid);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, staffusi);


--
-- Name: staffcredential staffcredential_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT staffcredential_pk PRIMARY KEY (credentialidentifier, staffusi, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, staffusi);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be staffdisciplineincidentassociationdisciplineincide_7fa4be_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT staffdisciplineincidentassociationdisciplineincide_7fa4be_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, staffusi);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (begindate, educationorganizationid, staffclassificationdescriptorid, staffusi);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddress staffeducationorganizationcontactassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddress_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod staffeducationorganizationcontactassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT staffeducationorganizationcontactassociationaddressperiod_pk PRIMARY KEY (begindate, contacttitle, educationorganizationid, staffusi);


--
-- Name: staffeducationorganizationcontactassociationtelephone staffeducationorganizationcontactassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT staffeducationorganizationcontactassociationtelephone_pk PRIMARY KEY (contacttitle, educationorganizationid, staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: staffelectronicmail staffelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT staffelectronicmail_pk PRIMARY KEY (electronicmailaddress, electronicmailtypedescriptorid, staffusi);


--
-- Name: staffidentificationcode staffidentificationcode_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT staffidentificationcode_pk PRIMARY KEY (staffidentificationsystemdescriptorid, staffusi);


--
-- Name: staffidentificationdocument staffidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT staffidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi);


--
-- Name: staffidentificationsystemdescriptor staffidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT staffidentificationsystemdescriptor_pk PRIMARY KEY (staffidentificationsystemdescriptorid);


--
-- Name: staffinternationaladdress staffinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT staffinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, staffusi);


--
-- Name: stafflanguage stafflanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT stafflanguage_pk PRIMARY KEY (languagedescriptorid, staffusi);


--
-- Name: stafflanguageuse stafflanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT stafflanguageuse_pk PRIMARY KEY (languagedescriptorid, languageusedescriptorid, staffusi);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (begindate, staffleaveeventcategorydescriptorid, staffusi);


--
-- Name: staffleaveeventcategorydescriptor staffleaveeventcategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT staffleaveeventcategorydescriptor_pk PRIMARY KEY (staffleaveeventcategorydescriptorid);


--
-- Name: staffothername staffothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT staffothername_pk PRIMARY KEY (othernametypedescriptorid, staffusi);


--
-- Name: staffpersonalidentificationdocument staffpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT staffpersonalidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, staffusi);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (begindate, programeducationorganizationid, programname, programtypedescriptorid, staffusi);


--
-- Name: staffrace staffrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT staffrace_pk PRIMARY KEY (racedescriptorid, staffusi);


--
-- Name: staffrecognition staffrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT staffrecognition_pk PRIMARY KEY (recognitiontypedescriptorid, staffusi);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffschoolassociationacademicsubject staffschoolassociationacademicsubject_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT staffschoolassociationacademicsubject_pk PRIMARY KEY (academicsubjectdescriptorid, programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffschoolassociationgradelevel staffschoolassociationgradelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT staffschoolassociationgradelevel_pk PRIMARY KEY (gradeleveldescriptorid, programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi);


--
-- Name: stafftelephone stafftelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT stafftelephone_pk PRIMARY KEY (staffusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: stafftribalaffiliation stafftribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT stafftribalaffiliation_pk PRIMARY KEY (staffusi, tribalaffiliationdescriptorid);


--
-- Name: staffvisa staffvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT staffvisa_pk PRIMARY KEY (staffusi, visadescriptorid);


--
-- Name: stateabbreviationdescriptor stateabbreviationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT stateabbreviationdescriptor_pk PRIMARY KEY (stateabbreviationdescriptorid);


--
-- Name: stateeducationagency stateeducationagency_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT stateeducationagency_pk PRIMARY KEY (stateeducationagencyid);


--
-- Name: stateeducationagencyaccountability stateeducationagencyaccountability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT stateeducationagencyaccountability_pk PRIMARY KEY (schoolyear, stateeducationagencyid);


--
-- Name: stateeducationagencyfederalfunds stateeducationagencyfederalfunds_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT stateeducationagencyfederalfunds_pk PRIMARY KEY (fiscalyear, stateeducationagencyid);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (studentusi);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordacademichonor studentacademicrecordacademichonor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT studentacademicrecordacademichonor_pk PRIMARY KEY (academichonorcategorydescriptorid, educationorganizationid, honordescription, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordclassranking studentacademicrecordclassranking_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT studentacademicrecordclassranking_pk PRIMARY KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecorddiploma studentacademicrecorddiploma_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT studentacademicrecorddiploma_pk PRIMARY KEY (diplomaawarddate, diplomatypedescriptorid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordgradepointaverage studentacademicrecordgradepointaverage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT studentacademicrecordgradepointaverage_pk PRIMARY KEY (educationorganizationid, gradepointaveragetypedescriptorid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordrecognition studentacademicrecordrecognition_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT studentacademicrecordrecognition_pk PRIMARY KEY (educationorganizationid, recognitiontypedescriptorid, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentacademicrecordreportcard studentacademicrecordreportcard_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT studentacademicrecordreportcard_pk PRIMARY KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, schoolyear, studentusi, termdescriptorid);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentaccommodation studentassessmentaccommodation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT studentassessmentaccommodation_pk PRIMARY KEY (accommodationdescriptorid, assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmenteducationorganizationassociation studentassessmenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT studentassessmenteducationorganizationassociation_pk PRIMARY KEY (assessmentidentifier, educationorganizationassociationtypedescriptorid, educationorganizationid, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentitem studentassessmentitem_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT studentassessmentitem_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentperformancelevel studentassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT studentassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentperiod studentassessmentperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT studentassessmentperiod_pk PRIMARY KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentscoreresult studentassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT studentassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentstudentobjectiveassessment studentassessmentstudentobjectiveassessment_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT studentassessmentstudentobjectiveassessment_pk PRIMARY KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel studentassessmentstudentobjectiveassessmentperformancelevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentperformancelevel_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, performanceleveldescriptorid, studentassessmentidentifier, studentusi);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult studentassessmentstudentobjectiveassessmentscoreresult_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT studentassessmentstudentobjectiveassessmentscoreresult_pk PRIMARY KEY (assessmentidentifier, assessmentreportingmethoddescriptorid, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: studentcharacteristicdescriptor studentcharacteristicdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT studentcharacteristicdescriptor_pk PRIMARY KEY (studentcharacteristicdescriptorid);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, studentusi);


--
-- Name: studentcohortassociationsection studentcohortassociationsection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT studentcohortassociationsection_pk PRIMARY KEY (begindate, cohortidentifier, educationorganizationid, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation studentcompetencyobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentcompetencyobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivestudentsectionassociation studentcompetencyobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT studentcompetencyobjectivestudentsectionassociation_pk PRIMARY KEY (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentcteprogramassociation studentcteprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT studentcteprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationcteprogram studentcteprogramassociationcteprogram_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT studentcteprogramassociationcteprogram_pk PRIMARY KEY (begindate, careerpathwaydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationcteprogramservice studentcteprogramassociationcteprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT studentcteprogramassociationcteprogramservice_pk PRIMARY KEY (begindate, cteprogramservicedescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcteprogramassociationservice studentcteprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT studentcteprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi);


--
-- Name: studentdisciplineincidentassociation studentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT studentdisciplineincidentassociation_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentassociationbehavior studentdisciplineincidentassociationbehavior_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT studentdisciplineincidentassociationbehavior_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociationdiscip_ae6a21_pk PRIMARY KEY (behaviordescriptorid, disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (incidentidentifier, schoolid, studentusi);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a studentdisciplineincidentnonoffenderassociationdis_4c979a_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociationdis_4c979a_pk PRIMARY KEY (disciplineincidentparticipationcodedescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationaddress studenteducationorganizationassociationaddress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT studenteducationorganizationassociationaddress_pk PRIMARY KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi);


--
-- Name: studenteducationorganizationassociationaddressperiod studenteducationorganizationassociationaddressperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT studenteducationorganizationassociationaddressperiod_pk PRIMARY KEY (addresstypedescriptorid, begindate, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin studenteducationorganizationassociationancestryethnicorigin_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT studenteducationorganizationassociationancestryethnicorigin_pk PRIMARY KEY (ancestryethnicorigindescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationcohortyear studenteducationorganizationassociationcohortyear_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT studenteducationorganizationassociationcohortyear_pk PRIMARY KEY (cohortyeartypedescriptorid, educationorganizationid, schoolyear, studentusi);


--
-- Name: studenteducationorganizationassociationdisability studenteducationorganizationassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT studenteducationorganizationassociationdisability_pk PRIMARY KEY (disabilitydescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation studenteducationorganizationassociationdisabilitydesignation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT studenteducationorganizationassociationdisabilitydesignation_pk PRIMARY KEY (disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationelectronicmail studenteducationorganizationassociationelectronicmail_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT studenteducationorganizationassociationelectronicmail_pk PRIMARY KEY (educationorganizationid, electronicmailaddress, electronicmailtypedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationinternationaladdress studenteducationorganizationassociationinternationaladdress_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT studenteducationorganizationassociationinternationaladdress_pk PRIMARY KEY (addresstypedescriptorid, educationorganizationid, studentusi);


--
-- Name: studenteducationorganizationassociationlanguage studenteducationorganizationassociationlanguage_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT studenteducationorganizationassociationlanguage_pk PRIMARY KEY (educationorganizationid, languagedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationlanguageuse studenteducationorganizationassociationlanguageuse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT studenteducationorganizationassociationlanguageuse_pk PRIMARY KEY (educationorganizationid, languagedescriptorid, languageusedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 studenteducationorganizationassociationprogrampart_810575_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT studenteducationorganizationassociationprogrampart_810575_pk PRIMARY KEY (educationorganizationid, programcharacteristicdescriptorid, programtypedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationprogramparticipation studenteducationorganizationassociationprogramparticipation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT studenteducationorganizationassociationprogramparticipation_pk PRIMARY KEY (educationorganizationid, programtypedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationrace studenteducationorganizationassociationrace_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT studenteducationorganizationassociationrace_pk PRIMARY KEY (educationorganizationid, racedescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf studenteducationorganizationassociationstudentchar_a18fcf_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT studenteducationorganizationassociationstudentchar_a18fcf_pk PRIMARY KEY (begindate, educationorganizationid, studentcharacteristicdescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic studenteducationorganizationassociationstudentcharacteristic_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT studenteducationorganizationassociationstudentcharacteristic_pk PRIMARY KEY (educationorganizationid, studentcharacteristicdescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 studenteducationorganizationassociationstudentiden_c15030_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT studenteducationorganizationassociationstudentiden_c15030_pk PRIMARY KEY (assigningorganizationidentificationcode, educationorganizationid, studentidentificationsystemdescriptorid, studentusi);


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod studenteducationorganizationassociationstudentindi_a61b72_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT studenteducationorganizationassociationstudentindi_a61b72_pk PRIMARY KEY (begindate, educationorganizationid, indicatorname, studentusi);


--
-- Name: studenteducationorganizationassociationstudentindicator studenteducationorganizationassociationstudentindicator_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT studenteducationorganizationassociationstudentindicator_pk PRIMARY KEY (educationorganizationid, indicatorname, studentusi);


--
-- Name: studenteducationorganizationassociationtelephone studenteducationorganizationassociationtelephone_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT studenteducationorganizationassociationtelephone_pk PRIMARY KEY (educationorganizationid, studentusi, telephonenumber, telephonenumbertypedescriptorid);


--
-- Name: studenteducationorganizationassociationtribalaffiliation studenteducationorganizationassociationtribalaffiliation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT studenteducationorganizationassociationtribalaffiliation_pk PRIMARY KEY (educationorganizationid, studentusi, tribalaffiliationdescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (begindate, educationorganizationid, responsibilitydescriptorid, studentusi);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (gradebookentryidentifier, namespace, studentusi);


--
-- Name: studenthomelessprogramassociation studenthomelessprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT studenthomelessprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice studenthomelessprogramassociationhomelessprogramservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT studenthomelessprogramassociationhomelessprogramservice_pk PRIMARY KEY (begindate, educationorganizationid, homelessprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentidentificationdocument studentidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT studentidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi);


--
-- Name: studentidentificationsystemdescriptor studentidentificationsystemdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT studentidentificationsystemdescriptor_pk PRIMARY KEY (studentidentificationsystemdescriptorid);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (educationorganizationid, interventionidentificationcode, studentusi);


--
-- Name: studentinterventionassociationinterventioneffectiveness studentinterventionassociationinterventioneffectiveness_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT studentinterventionassociationinterventioneffectiveness_pk PRIMARY KEY (diagnosisdescriptorid, educationorganizationid, gradeleveldescriptorid, interventionidentificationcode, populationserveddescriptorid, studentusi);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, interventionidentificationcode, studentusi);


--
-- Name: studentlanguageinstructionprogramassociation studentlanguageinstructionprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT studentlanguageinstructionprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 studentlanguageinstructionprogramassociationenglis_1ac620_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT studentlanguageinstructionprogramassociationenglis_1ac620_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolyear, studentusi);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 studentlanguageinstructionprogramassociationlangua_268e07_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT studentlanguageinstructionprogramassociationlangua_268e07_pk PRIMARY KEY (begindate, educationorganizationid, languageinstructionprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjective studentlearningobjective_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT studentlearningobjective_pk PRIMARY KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation studentlearningobjectivegeneralstudentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT studentlearningobjectivegeneralstudentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjectivestudentsectionassociation studentlearningobjectivestudentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT studentlearningobjectivestudentsectionassociation_pk PRIMARY KEY (begindate, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentmigranteducationprogramassociation studentmigranteducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT studentmigranteducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 studentmigranteducationprogramassociationmigranted_d9dcd7_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT studentmigranteducationprogramassociationmigranted_d9dcd7_pk PRIMARY KEY (begindate, educationorganizationid, migranteducationprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentneglectedordelinquentprogramassociation studentneglectedordelinquentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT studentneglectedordelinquentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 studentneglectedordelinquentprogramassociationnegl_520251_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT studentneglectedordelinquentprogramassociationnegl_520251_pk PRIMARY KEY (begindate, educationorganizationid, neglectedordelinquentprogramservicedescriptorid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentothername studentothername_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT studentothername_pk PRIMARY KEY (othernametypedescriptorid, studentusi);


--
-- Name: studentparentassociation studentparentassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT studentparentassociation_pk PRIMARY KEY (parentusi, studentusi);


--
-- Name: studentparticipationcodedescriptor studentparticipationcodedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT studentparticipationcodedescriptor_pk PRIMARY KEY (studentparticipationcodedescriptorid);


--
-- Name: studentpersonalidentificationdocument studentpersonalidentificationdocument_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT studentpersonalidentificationdocument_pk PRIMARY KEY (identificationdocumentusedescriptorid, personalinformationverificationdescriptorid, studentusi);


--
-- Name: studentprogramassociation studentprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT studentprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentprogramassociationservice studentprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT studentprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, educationorganizationid, eventdate, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (entrydate, schoolid, studentusi);


--
-- Name: studentschoolassociationalternativegraduationplan studentschoolassociationalternativegraduationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT studentschoolassociationalternativegraduationplan_pk PRIMARY KEY (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear, entrydate, schoolid, studentusi);


--
-- Name: studentschoolassociationeducationplan studentschoolassociationeducationplan_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT studentschoolassociationeducationplan_pk PRIMARY KEY (educationplandescriptorid, entrydate, schoolid, studentusi);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociation studentschoolfoodserviceprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT studentschoolfoodserviceprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT studentschoolfoodserviceprogramassociationschoolfo_85a0eb_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, schoolfoodserviceprogramservicedescriptorid, studentusi);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentsectionattendanceeventclassperiod studentsectionattendanceeventclassperiod_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT studentsectionattendanceeventclassperiod_pk PRIMARY KEY (attendanceeventcategorydescriptorid, classperiodname, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: studentspecialeducationprogramassociation studentspecialeducationprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT studentspecialeducationprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation studentspecialeducationprogramassociationdisabilit_a2fd20_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT studentspecialeducationprogramassociationdisabilit_a2fd20_pk PRIMARY KEY (begindate, disabilitydescriptorid, disabilitydesignationdescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationdisability studentspecialeducationprogramassociationdisability_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT studentspecialeducationprogramassociationdisability_pk PRIMARY KEY (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationserviceprovider studentspecialeducationprogramassociationserviceprovider_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT studentspecialeducationprogramassociationserviceprovider_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, staffusi, studentusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 studentspecialeducationprogramassociationspecialed_a51ff9_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_a51ff9_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c studentspecialeducationprogramassociationspecialed_bcba5c_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT studentspecialeducationprogramassociationspecialed_bcba5c_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, staffusi, studentusi);


--
-- Name: studenttitleipartaprogramassociation studenttitleipartaprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT studenttitleipartaprogramassociation_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociationservice studenttitleipartaprogramassociationservice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT studenttitleipartaprogramassociationservice_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, servicedescriptorid, studentusi);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice studenttitleipartaprogramassociationtitleipartapro_8adb29_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT studenttitleipartaprogramassociationtitleipartapro_8adb29_pk PRIMARY KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi, titleipartaprogramservicedescriptorid);


--
-- Name: studentvisa studentvisa_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT studentvisa_pk PRIMARY KEY (studentusi, visadescriptorid);


--
-- Name: submissionstatusdescriptor submissionstatusdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.submissionstatusdescriptor
    ADD CONSTRAINT submissionstatusdescriptor_pk PRIMARY KEY (submissionstatusdescriptorid);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (namespace, surveyidentifier);


--
-- Name: surveycategorydescriptor surveycategorydescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT surveycategorydescriptor_pk PRIMARY KEY (surveycategorydescriptorid);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (coursecode, educationorganizationid, namespace, surveyidentifier);


--
-- Name: surveyleveldescriptor surveyleveldescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT surveyleveldescriptor_pk PRIMARY KEY (surveyleveldescriptorid);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (educationorganizationid, namespace, programname, programtypedescriptorid, surveyidentifier);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionmatrix surveyquestionmatrix_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT surveyquestionmatrix_pk PRIMARY KEY (matrixelement, namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyquestionresponsechoice surveyquestionresponsechoice_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT surveyquestionresponsechoice_pk PRIMARY KEY (namespace, questioncode, sortorder, surveyidentifier);


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse surveyquestionresponsesurveyquestionmatrixelementresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT surveyquestionresponsesurveyquestionmatrixelementresponse_pk PRIMARY KEY (matrixelement, namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyquestionresponsevalue surveyquestionresponsevalue_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT surveyquestionresponsevalue_pk PRIMARY KEY (namespace, questioncode, surveyidentifier, surveyquestionresponsevalueidentifier, surveyresponseidentifier);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveyresponsesurveylevel surveyresponsesurveylevel_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT surveyresponsesurveylevel_pk PRIMARY KEY (namespace, surveyidentifier, surveyleveldescriptorid, surveyresponseidentifier);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (educationorganizationid, namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (namespace, staffusi, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: teachingcredentialbasisdescriptor teachingcredentialbasisdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT teachingcredentialbasisdescriptor_pk PRIMARY KEY (teachingcredentialbasisdescriptorid);


--
-- Name: teachingcredentialdescriptor teachingcredentialdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT teachingcredentialdescriptor_pk PRIMARY KEY (teachingcredentialdescriptorid);


--
-- Name: technicalskillsassessmentdescriptor technicalskillsassessmentdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT technicalskillsassessmentdescriptor_pk PRIMARY KEY (technicalskillsassessmentdescriptorid);


--
-- Name: telephonenumbertypedescriptor telephonenumbertypedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT telephonenumbertypedescriptor_pk PRIMARY KEY (telephonenumbertypedescriptorid);


--
-- Name: termdescriptor termdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT termdescriptor_pk PRIMARY KEY (termdescriptorid);


--
-- Name: titleipartaparticipantdescriptor titleipartaparticipantdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT titleipartaparticipantdescriptor_pk PRIMARY KEY (titleipartaparticipantdescriptorid);


--
-- Name: titleipartaprogramservicedescriptor titleipartaprogramservicedescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT titleipartaprogramservicedescriptor_pk PRIMARY KEY (titleipartaprogramservicedescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor titleipartaschooldesignationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT titleipartaschooldesignationdescriptor_pk PRIMARY KEY (titleipartaschooldesignationdescriptorid);


--
-- Name: tribalaffiliationdescriptor tribalaffiliationdescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT tribalaffiliationdescriptor_pk PRIMARY KEY (tribalaffiliationdescriptorid);


--
-- Name: visadescriptor visadescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT visadescriptor_pk PRIMARY KEY (visadescriptorid);


--
-- Name: weapondescriptor weapondescriptor_pk; Type: CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT weapondescriptor_pk PRIMARY KEY (weapondescriptorid);


--
-- Name: descriptorequivalencegroupassignment pk_descequivgroupassign; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT pk_descequivgroupassign PRIMARY KEY (descriptorid);


--
-- Name: descriptorequivalencegroupgeneralization pk_descequivgroupgeneral; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT pk_descequivgroupgeneral PRIMARY KEY (descriptorequivalencegroupid, generalizationdescriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroup pk_descriptorequivalencegroup; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroup
    ADD CONSTRAINT pk_descriptorequivalencegroup PRIMARY KEY (descriptorequivalencegroupid);


--
-- Name: operationalcontext pk_operationalcontext; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontext
    ADD CONSTRAINT pk_operationalcontext PRIMARY KEY (operationalcontexturi);


--
-- Name: operationalcontextdescriptorusage pk_operationalcontextdescriptorusage; Type: CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT pk_operationalcontextdescriptorusage PRIMARY KEY (operationalcontexturi, descriptorid);


--
-- Name: DeployJournal PK_DeployJournal_Id; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."DeployJournal"
    ADD CONSTRAINT "PK_DeployJournal_Id" PRIMARY KEY (schemaversionsid);


--
-- Name: academicweek academicweek_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.academicweek
    ADD CONSTRAINT academicweek_pk PRIMARY KEY (changeversion);


--
-- Name: accountabilityrating accountabilityrating_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.accountabilityrating
    ADD CONSTRAINT accountabilityrating_pk PRIMARY KEY (changeversion);


--
-- Name: assessment assessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessment
    ADD CONSTRAINT assessment_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentitem assessmentitem_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessmentitem
    ADD CONSTRAINT assessmentitem_pk PRIMARY KEY (changeversion);


--
-- Name: assessmentscorerangelearningstandard assessmentscorerangelearningstandard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT assessmentscorerangelearningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: balancesheetdimension balancesheetdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.balancesheetdimension
    ADD CONSTRAINT balancesheetdimension_pk PRIMARY KEY (changeversion);


--
-- Name: bellschedule bellschedule_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.bellschedule
    ADD CONSTRAINT bellschedule_pk PRIMARY KEY (changeversion);


--
-- Name: calendar calendar_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.calendar
    ADD CONSTRAINT calendar_pk PRIMARY KEY (changeversion);


--
-- Name: calendardate calendardate_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.calendardate
    ADD CONSTRAINT calendardate_pk PRIMARY KEY (changeversion);


--
-- Name: chartofaccount chartofaccount_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.chartofaccount
    ADD CONSTRAINT chartofaccount_pk PRIMARY KEY (changeversion);


--
-- Name: classperiod classperiod_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.classperiod
    ADD CONSTRAINT classperiod_pk PRIMARY KEY (changeversion);


--
-- Name: cohort cohort_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.cohort
    ADD CONSTRAINT cohort_pk PRIMARY KEY (changeversion);


--
-- Name: communityproviderlicense communityproviderlicense_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.communityproviderlicense
    ADD CONSTRAINT communityproviderlicense_pk PRIMARY KEY (changeversion);


--
-- Name: competencyobjective competencyobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.competencyobjective
    ADD CONSTRAINT competencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: course course_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.course
    ADD CONSTRAINT course_pk PRIMARY KEY (changeversion);


--
-- Name: courseoffering courseoffering_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.courseoffering
    ADD CONSTRAINT courseoffering_pk PRIMARY KEY (changeversion);


--
-- Name: coursetranscript coursetranscript_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.coursetranscript
    ADD CONSTRAINT coursetranscript_pk PRIMARY KEY (changeversion);


--
-- Name: credential credential_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.credential
    ADD CONSTRAINT credential_pk PRIMARY KEY (changeversion);


--
-- Name: descriptor descriptor_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.descriptor
    ADD CONSTRAINT descriptor_pk PRIMARY KEY (changeversion);


--
-- Name: descriptormapping descriptormapping_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.descriptormapping
    ADD CONSTRAINT descriptormapping_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineaction disciplineaction_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.disciplineaction
    ADD CONSTRAINT disciplineaction_pk PRIMARY KEY (changeversion);


--
-- Name: disciplineincident disciplineincident_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.disciplineincident
    ADD CONSTRAINT disciplineincident_pk PRIMARY KEY (changeversion);


--
-- Name: educationcontent educationcontent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationcontent
    ADD CONSTRAINT educationcontent_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganization educationorganization_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganization
    ADD CONSTRAINT educationorganization_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationinterventionprescriptionassociation educationorganizationinterventionprescriptionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT educationorganizationinterventionprescriptionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationnetworkassociation educationorganizationnetworkassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT educationorganizationnetworkassociation_pk PRIMARY KEY (changeversion);


--
-- Name: educationorganizationpeerassociation educationorganizationpeerassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.educationorganizationpeerassociation
    ADD CONSTRAINT educationorganizationpeerassociation_pk PRIMARY KEY (changeversion);


--
-- Name: feederschoolassociation feederschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.feederschoolassociation
    ADD CONSTRAINT feederschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: functiondimension functiondimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.functiondimension
    ADD CONSTRAINT functiondimension_pk PRIMARY KEY (changeversion);


--
-- Name: funddimension funddimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.funddimension
    ADD CONSTRAINT funddimension_pk PRIMARY KEY (changeversion);


--
-- Name: generalstudentprogramassociation generalstudentprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.generalstudentprogramassociation
    ADD CONSTRAINT generalstudentprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: grade grade_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.grade
    ADD CONSTRAINT grade_pk PRIMARY KEY (changeversion);


--
-- Name: gradebookentry gradebookentry_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.gradebookentry
    ADD CONSTRAINT gradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: gradingperiod gradingperiod_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.gradingperiod
    ADD CONSTRAINT gradingperiod_pk PRIMARY KEY (changeversion);


--
-- Name: graduationplan graduationplan_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.graduationplan
    ADD CONSTRAINT graduationplan_pk PRIMARY KEY (changeversion);


--
-- Name: intervention intervention_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.intervention
    ADD CONSTRAINT intervention_pk PRIMARY KEY (changeversion);


--
-- Name: interventionprescription interventionprescription_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.interventionprescription
    ADD CONSTRAINT interventionprescription_pk PRIMARY KEY (changeversion);


--
-- Name: interventionstudy interventionstudy_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.interventionstudy
    ADD CONSTRAINT interventionstudy_pk PRIMARY KEY (changeversion);


--
-- Name: learningobjective learningobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningobjective
    ADD CONSTRAINT learningobjective_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandard learningstandard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningstandard
    ADD CONSTRAINT learningstandard_pk PRIMARY KEY (changeversion);


--
-- Name: learningstandardequivalenceassociation learningstandardequivalenceassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT learningstandardequivalenceassociation_pk PRIMARY KEY (changeversion);


--
-- Name: localaccount localaccount_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localaccount
    ADD CONSTRAINT localaccount_pk PRIMARY KEY (changeversion);


--
-- Name: localactual localactual_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localactual
    ADD CONSTRAINT localactual_pk PRIMARY KEY (changeversion);


--
-- Name: localbudget localbudget_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localbudget
    ADD CONSTRAINT localbudget_pk PRIMARY KEY (changeversion);


--
-- Name: localcontractedstaff localcontractedstaff_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localcontractedstaff
    ADD CONSTRAINT localcontractedstaff_pk PRIMARY KEY (changeversion);


--
-- Name: localencumbrance localencumbrance_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localencumbrance
    ADD CONSTRAINT localencumbrance_pk PRIMARY KEY (changeversion);


--
-- Name: localpayroll localpayroll_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.localpayroll
    ADD CONSTRAINT localpayroll_pk PRIMARY KEY (changeversion);


--
-- Name: location location_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.location
    ADD CONSTRAINT location_pk PRIMARY KEY (changeversion);


--
-- Name: objectdimension objectdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.objectdimension
    ADD CONSTRAINT objectdimension_pk PRIMARY KEY (changeversion);


--
-- Name: objectiveassessment objectiveassessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.objectiveassessment
    ADD CONSTRAINT objectiveassessment_pk PRIMARY KEY (changeversion);


--
-- Name: openstaffposition openstaffposition_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.openstaffposition
    ADD CONSTRAINT openstaffposition_pk PRIMARY KEY (changeversion);


--
-- Name: operationalunitdimension operationalunitdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.operationalunitdimension
    ADD CONSTRAINT operationalunitdimension_pk PRIMARY KEY (changeversion);


--
-- Name: parent parent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.parent
    ADD CONSTRAINT parent_pk PRIMARY KEY (changeversion);


--
-- Name: person person_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.person
    ADD CONSTRAINT person_pk PRIMARY KEY (changeversion);


--
-- Name: postsecondaryevent postsecondaryevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.postsecondaryevent
    ADD CONSTRAINT postsecondaryevent_pk PRIMARY KEY (changeversion);


--
-- Name: program program_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.program
    ADD CONSTRAINT program_pk PRIMARY KEY (changeversion);


--
-- Name: programdimension programdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.programdimension
    ADD CONSTRAINT programdimension_pk PRIMARY KEY (changeversion);


--
-- Name: projectdimension projectdimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.projectdimension
    ADD CONSTRAINT projectdimension_pk PRIMARY KEY (changeversion);


--
-- Name: reportcard reportcard_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.reportcard
    ADD CONSTRAINT reportcard_pk PRIMARY KEY (changeversion);


--
-- Name: restraintevent restraintevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.restraintevent
    ADD CONSTRAINT restraintevent_pk PRIMARY KEY (changeversion);


--
-- Name: schoolyeartype schoolyeartype_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.schoolyeartype
    ADD CONSTRAINT schoolyeartype_pk PRIMARY KEY (changeversion);


--
-- Name: section section_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.section
    ADD CONSTRAINT section_pk PRIMARY KEY (changeversion);


--
-- Name: sectionattendancetakenevent sectionattendancetakenevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.sectionattendancetakenevent
    ADD CONSTRAINT sectionattendancetakenevent_pk PRIMARY KEY (changeversion);


--
-- Name: session session_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.session
    ADD CONSTRAINT session_pk PRIMARY KEY (changeversion);


--
-- Name: sourcedimension sourcedimension_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.sourcedimension
    ADD CONSTRAINT sourcedimension_pk PRIMARY KEY (changeversion);


--
-- Name: staff staff_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staff
    ADD CONSTRAINT staff_pk PRIMARY KEY (changeversion);


--
-- Name: staffabsenceevent staffabsenceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffabsenceevent
    ADD CONSTRAINT staffabsenceevent_pk PRIMARY KEY (changeversion);


--
-- Name: staffcohortassociation staffcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffcohortassociation
    ADD CONSTRAINT staffcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffdisciplineincidentassociation staffdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT staffdisciplineincidentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationassignmentassociation staffeducationorganizationassignmentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT staffeducationorganizationassignmentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationcontactassociation staffeducationorganizationcontactassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT staffeducationorganizationcontactassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffeducationorganizationemploymentassociation staffeducationorganizationemploymentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT staffeducationorganizationemploymentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffleave staffleave_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffleave
    ADD CONSTRAINT staffleave_pk PRIMARY KEY (changeversion);


--
-- Name: staffprogramassociation staffprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffprogramassociation
    ADD CONSTRAINT staffprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffschoolassociation staffschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffschoolassociation
    ADD CONSTRAINT staffschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: staffsectionassociation staffsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.staffsectionassociation
    ADD CONSTRAINT staffsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: student student_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.student
    ADD CONSTRAINT student_pk PRIMARY KEY (changeversion);


--
-- Name: studentacademicrecord studentacademicrecord_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentacademicrecord
    ADD CONSTRAINT studentacademicrecord_pk PRIMARY KEY (changeversion);


--
-- Name: studentassessment studentassessment_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentassessment
    ADD CONSTRAINT studentassessment_pk PRIMARY KEY (changeversion);


--
-- Name: studentassessmenteducationorganizationassociation studentassessmenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT studentassessmenteducationorganizationassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentcohortassociation studentcohortassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcohortassociation
    ADD CONSTRAINT studentcohortassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentcompetencyobjective studentcompetencyobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentcompetencyobjective
    ADD CONSTRAINT studentcompetencyobjective_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentassociation studentdisciplineincidentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT studentdisciplineincidentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentbehaviorassociation studentdisciplineincidentbehaviorassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT studentdisciplineincidentbehaviorassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentdisciplineincidentnonoffenderassociation studentdisciplineincidentnonoffenderassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT studentdisciplineincidentnonoffenderassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationassociation studenteducationorganizationassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studenteducationorganizationassociation
    ADD CONSTRAINT studenteducationorganizationassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studenteducationorganizationresponsibilityassociation studenteducationorganizationresponsibilityassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT studenteducationorganizationresponsibilityassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentgradebookentry studentgradebookentry_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentgradebookentry
    ADD CONSTRAINT studentgradebookentry_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionassociation studentinterventionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentinterventionassociation
    ADD CONSTRAINT studentinterventionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentinterventionattendanceevent studentinterventionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentinterventionattendanceevent
    ADD CONSTRAINT studentinterventionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentlearningobjective studentlearningobjective_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentlearningobjective
    ADD CONSTRAINT studentlearningobjective_pk PRIMARY KEY (changeversion);


--
-- Name: studentparentassociation studentparentassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentparentassociation
    ADD CONSTRAINT studentparentassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentprogramattendanceevent studentprogramattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentprogramattendanceevent
    ADD CONSTRAINT studentprogramattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolassociation studentschoolassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentschoolassociation
    ADD CONSTRAINT studentschoolassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentschoolattendanceevent studentschoolattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentschoolattendanceevent
    ADD CONSTRAINT studentschoolattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionassociation studentsectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentsectionassociation
    ADD CONSTRAINT studentsectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: studentsectionattendanceevent studentsectionattendanceevent_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.studentsectionattendanceevent
    ADD CONSTRAINT studentsectionattendanceevent_pk PRIMARY KEY (changeversion);


--
-- Name: survey survey_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.survey
    ADD CONSTRAINT survey_pk PRIMARY KEY (changeversion);


--
-- Name: surveycourseassociation surveycourseassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveycourseassociation
    ADD CONSTRAINT surveycourseassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyprogramassociation surveyprogramassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyprogramassociation
    ADD CONSTRAINT surveyprogramassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestion surveyquestion_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyquestion
    ADD CONSTRAINT surveyquestion_pk PRIMARY KEY (changeversion);


--
-- Name: surveyquestionresponse surveyquestionresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyquestionresponse
    ADD CONSTRAINT surveyquestionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponse surveyresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponse
    ADD CONSTRAINT surveyresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponseeducationorganizationtargetassociation surveyresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveyresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveyresponsestafftargetassociation surveyresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT surveyresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysection surveysection_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysection
    ADD CONSTRAINT surveysection_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionassociation surveysectionassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionassociation
    ADD CONSTRAINT surveysectionassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponse surveysectionresponse_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponse
    ADD CONSTRAINT surveysectionresponse_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation surveysectionresponseeducationorganizationtargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT surveysectionresponseeducationorganizationtargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: surveysectionresponsestafftargetassociation surveysectionresponsestafftargetassociation_pk; Type: CONSTRAINT; Schema: tracked_changes_edfi; Owner: postgres
--

ALTER TABLE ONLY tracked_changes_edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT surveysectionresponsestafftargetassociation_pk PRIMARY KEY (changeversion);


--
-- Name: ix_educationorganizationidtoeducationorganizationid; Type: INDEX; Schema: auth; Owner: postgres
--

CREATE INDEX ix_educationorganizationidtoeducationorganizationid ON auth.educationorganizationidtoeducationorganizationid USING btree (targeteducationorganizationid) INCLUDE (sourceeducationorganizationid);


--
-- Name: ux_6ad27b_id; Type: INDEX; Schema: changes; Owner: postgres
--

CREATE UNIQUE INDEX ux_6ad27b_id ON changes.snapshot USING btree (id);


--
-- Name: fk_000683_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000683_financialcollectiondescriptor ON edfi.localbudget USING btree (financialcollectiondescriptorid);


--
-- Name: fk_000683_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000683_localaccount ON edfi.localbudget USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_000ac5_technicalskillsassessmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_000ac5_technicalskillsassessmentdescriptor ON edfi.studentcteprogramassociation USING btree (technicalskillsassessmentdescriptorid);


--
-- Name: fk_005337_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_005337_generalstudentprogramassociation ON edfi.studentcompetencyobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_005337_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_005337_studentcompetencyobjective ON edfi.studentcompetencyobjectivegeneralstudentprogramassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_014e05_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_014e05_educationcontent ON edfi.interventionstudyeducationcontent USING btree (contentidentifier);


--
-- Name: fk_014e05_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_014e05_interventionstudy ON edfi.interventionstudyeducationcontent USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_01fe80_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_01fe80_school ON edfi.classperiod USING btree (schoolid);


--
-- Name: fk_02ddd8_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_02ddd8_assessmentperioddescriptor ON edfi.studentassessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_0325c5_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_course ON edfi.courseoffering USING btree (coursecode, educationorganizationid);


--
-- Name: fk_0325c5_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_school ON edfi.courseoffering USING btree (schoolid);


--
-- Name: fk_0325c5_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0325c5_session ON edfi.courseoffering USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_03f044_surveyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_03f044_surveyleveldescriptor ON edfi.surveyresponsesurveylevel USING btree (surveyleveldescriptorid);


--
-- Name: fk_03f044_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_03f044_surveyresponse ON edfi.surveyresponsesurveylevel USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_047c7a_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_047c7a_educationcontent ON edfi.educationcontentderivativesourceuri USING btree (contentidentifier);


--
-- Name: fk_048797_surveyquestionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_048797_surveyquestionresponse ON edfi.surveyquestionresponsesurveyquestionmatrixelementresponse USING btree (namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_0516f9_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_educationorganization ON edfi.generalstudentprogramassociation USING btree (educationorganizationid);


--
-- Name: fk_0516f9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_program ON edfi.generalstudentprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_0516f9_reasonexiteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_reasonexiteddescriptor ON edfi.generalstudentprogramassociation USING btree (reasonexiteddescriptorid);


--
-- Name: fk_0516f9_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0516f9_student ON edfi.generalstudentprogramassociation USING btree (studentusi);


--
-- Name: fk_0628e0_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0628e0_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationtribalaffiliation USING btree (educationorganizationid, studentusi);


--
-- Name: fk_0628e0_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0628e0_tribalaffiliationdescriptor ON edfi.studenteducationorganizationassociationtribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_07722c_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_07722c_calendar ON edfi.calendargradelevel USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_07722c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_07722c_gradeleveldescriptor ON edfi.calendargradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0789bb_calendardate; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0789bb_calendardate ON edfi.calendardatecalendarevent USING btree (calendarcode, date, schoolid, schoolyear);


--
-- Name: fk_0789bb_calendareventdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0789bb_calendareventdescriptor ON edfi.calendardatecalendarevent USING btree (calendareventdescriptorid);


--
-- Name: fk_0855d2_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0855d2_generalstudentprogramassociation ON edfi.generalstudentprogramassociationprogramparticipationstatus USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_0855d2_participationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0855d2_participationstatusdescriptor ON edfi.generalstudentprogramassociationprogramparticipationstatus USING btree (participationstatusdescriptorid);


--
-- Name: fk_09668f_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_09668f_schoolyeartype ON edfi.stateeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_09668f_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_09668f_stateeducationagency ON edfi.stateeducationagencyaccountability USING btree (stateeducationagencyid);


--
-- Name: fk_0a2145_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0a2145_educationcontent ON edfi.educationcontentappropriategradelevel USING btree (contentidentifier);


--
-- Name: fk_0a2145_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0a2145_gradeleveldescriptor ON edfi.educationcontentappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_0c6eff_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c6eff_reportingtagdescriptor ON edfi.sourcedimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_0c6eff_sourcedimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c6eff_sourcedimension ON edfi.sourcedimensionreportingtag USING btree (code, fiscalyear);


--
-- Name: fk_0c9651_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0c9651_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_resultdatatypetypedescriptor ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0c9651_studentassessmentstudentobjectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0c9651_studentassessmentstudentobjectiveassessment ON edfi.studentassessmentstudentobjectiveassessmentscoreresult USING btree (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_0d16f7_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0d16f7_disciplineincident ON edfi.disciplineincidentexternalparticipant USING btree (incidentidentifier, schoolid);


--
-- Name: fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0d16f7_disciplineincidentparticipationcodedescriptor ON edfi.disciplineincidentexternalparticipant USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_0e0a11_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0e0a11_othernametypedescriptor ON edfi.parentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_0e0a11_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0e0a11_parent ON edfi.parentothername USING btree (parentusi);


--
-- Name: fk_0ee746_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_addresstypedescriptor ON edfi.educationorganizationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_0ee746_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_countrydescriptor ON edfi.educationorganizationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_0ee746_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ee746_educationorganization ON edfi.educationorganizationinternationaladdress USING btree (educationorganizationid);


--
-- Name: fk_0fae05_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_deliverymethoddescriptor ON edfi.intervention USING btree (deliverymethoddescriptorid);


--
-- Name: fk_0fae05_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_educationorganization ON edfi.intervention USING btree (educationorganizationid);


--
-- Name: fk_0fae05_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fae05_interventionclassdescriptor ON edfi.intervention USING btree (interventionclassdescriptorid);


--
-- Name: fk_0fceba_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_assessmentreportingmethoddescriptor ON edfi.studentassessmentscoreresult USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_0fceba_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_resultdatatypetypedescriptor ON edfi.studentassessmentscoreresult USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_0fceba_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0fceba_studentassessment ON edfi.studentassessmentscoreresult USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_0ff8d6_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor ON edfi.studentacademicrecord USING btree (cumulativeearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor1 ON edfi.studentacademicrecord USING btree (cumulativeattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor2; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor2 ON edfi.studentacademicrecord USING btree (sessionearnedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_credittypedescriptor3; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_credittypedescriptor3 ON edfi.studentacademicrecord USING btree (sessionattemptedcredittypedescriptorid);


--
-- Name: fk_0ff8d6_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_educationorganization ON edfi.studentacademicrecord USING btree (educationorganizationid);


--
-- Name: fk_0ff8d6_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_schoolyeartype ON edfi.studentacademicrecord USING btree (schoolyear);


--
-- Name: fk_0ff8d6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_student ON edfi.studentacademicrecord USING btree (studentusi);


--
-- Name: fk_0ff8d6_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_0ff8d6_termdescriptor ON edfi.studentacademicrecord USING btree (termdescriptorid);


--
-- Name: fk_1141c9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1141c9_academicsubjectdescriptor ON edfi.credentialacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_1141c9_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1141c9_credential ON edfi.credentialacademicsubject USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_11bd42_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_assessment ON edfi.assessmentperformancelevel USING btree (assessmentidentifier, namespace);


--
-- Name: fk_11bd42_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_assessmentreportingmethoddescriptor ON edfi.assessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_11bd42_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_performanceleveldescriptor ON edfi.assessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_11bd42_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11bd42_resultdatatypetypedescriptor ON edfi.assessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_11f7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school ON edfi.feederschoolassociation USING btree (feederschoolid);


--
-- Name: fk_11f7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_11f7b6_school1 ON edfi.feederschoolassociation USING btree (schoolid);


--
-- Name: fk_123e27_parentaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_123e27_parentaddress ON edfi.parentaddressperiod USING btree (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_131e2b_accounttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_accounttypedescriptor ON edfi.chartofaccount USING btree (accounttypedescriptorid);


--
-- Name: fk_131e2b_balancesheetdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_balancesheetdimension ON edfi.chartofaccount USING btree (balancesheetcode, fiscalyear);


--
-- Name: fk_131e2b_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_educationorganization ON edfi.chartofaccount USING btree (educationorganizationid);


--
-- Name: fk_131e2b_functiondimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_functiondimension ON edfi.chartofaccount USING btree (functioncode, fiscalyear);


--
-- Name: fk_131e2b_funddimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_funddimension ON edfi.chartofaccount USING btree (fundcode, fiscalyear);


--
-- Name: fk_131e2b_objectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_objectdimension ON edfi.chartofaccount USING btree (objectcode, fiscalyear);


--
-- Name: fk_131e2b_operationalunitdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_operationalunitdimension ON edfi.chartofaccount USING btree (operationalunitcode, fiscalyear);


--
-- Name: fk_131e2b_programdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_programdimension ON edfi.chartofaccount USING btree (programcode, fiscalyear);


--
-- Name: fk_131e2b_projectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_projectdimension ON edfi.chartofaccount USING btree (projectcode, fiscalyear);


--
-- Name: fk_131e2b_sourcedimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_131e2b_sourcedimension ON edfi.chartofaccount USING btree (sourcecode, fiscalyear);


--
-- Name: fk_13b924_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_academicsubjectdescriptor ON edfi.organizationdepartment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_13b924_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_13b924_educationorganization1 ON edfi.organizationdepartment USING btree (parenteducationorganizationid);


--
-- Name: fk_151580_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_151580_assessmentitem ON edfi.assessmentitemlearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_151580_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_151580_learningstandard ON edfi.assessmentitemlearningstandard USING btree (learningstandardid);


--
-- Name: fk_1587d8_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1587d8_section ON edfi.sectioncharacteristic USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_1587d8_sectioncharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1587d8_sectioncharacteristicdescriptor ON edfi.sectioncharacteristic USING btree (sectioncharacteristicdescriptorid);


--
-- Name: fk_15b619_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_15b619_school ON edfi.location USING btree (schoolid);


--
-- Name: fk_16896e_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_16896e_program ON edfi.programcharacteristic USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_16896e_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_16896e_programcharacteristicdescriptor ON edfi.programcharacteristic USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_170747_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_cohort ON edfi.staffcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_170747_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_170747_staff ON edfi.staffcohortassociation USING btree (staffusi);


--
-- Name: fk_175995_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_175995_course ON edfi.courseofferedgradelevel USING btree (coursecode, educationorganizationid);


--
-- Name: fk_175995_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_175995_gradeleveldescriptor ON edfi.courseofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_17c02a_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard ON edfi.learningstandardequivalenceassociation USING btree (sourcelearningstandardid);


--
-- Name: fk_17c02a_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandard1 ON edfi.learningstandardequivalenceassociation USING btree (targetlearningstandardid);


--
-- Name: fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_17c02a_learningstandardequivalencestrengthdescriptor ON edfi.learningstandardequivalenceassociation USING btree (learningstandardequivalencestrengthdescriptorid);


--
-- Name: fk_18889f_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_18889f_course ON edfi.courseidentificationcode USING btree (coursecode, educationorganizationid);


--
-- Name: fk_18889f_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_18889f_courseidentificationsystemdescriptor ON edfi.courseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_19c6d6_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_academicsubjectdescriptor ON edfi.cohort USING btree (academicsubjectdescriptorid);


--
-- Name: fk_19c6d6_cohortscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohortscopedescriptor ON edfi.cohort USING btree (cohortscopedescriptorid);


--
-- Name: fk_19c6d6_cohorttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_cohorttypedescriptor ON edfi.cohort USING btree (cohorttypedescriptorid);


--
-- Name: fk_19c6d6_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_19c6d6_educationorganization ON edfi.cohort USING btree (educationorganizationid);


--
-- Name: fk_1a4369_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1a4369_assessment ON edfi.graduationplanrequiredassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_1a4369_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1a4369_graduationplan ON edfi.graduationplanrequiredassessment USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_1ac620_monitoreddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_monitoreddescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (monitoreddescriptorid);


--
-- Name: fk_1ac620_participationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_participationdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (participationdescriptorid);


--
-- Name: fk_1ac620_proficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_proficiencydescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (proficiencydescriptorid);


--
-- Name: fk_1ac620_progressdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_progressdescriptor ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (progressdescriptorid);


--
-- Name: fk_1ac620_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_schoolyeartype ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (schoolyear);


--
-- Name: fk_1ac620_studentlanguageinstructionprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ac620_studentlanguageinstructionprogramassociation ON edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1b7007_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_1b7007_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_objectiveassessment ON edfi.objectiveassessmentperformancelevel USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_1b7007_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_performanceleveldescriptor ON edfi.objectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_1b7007_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1b7007_resultdatatypetypedescriptor ON edfi.objectiveassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: fk_1ba71e_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_localeducationagency ON edfi.localeducationagencyaccountability USING btree (localeducationagencyid);


--
-- Name: fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolchoiceimplementstatusdescriptor ON edfi.localeducationagencyaccountability USING btree (schoolchoiceimplementstatusdescriptorid);


--
-- Name: fk_1ba71e_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ba71e_schoolyeartype ON edfi.localeducationagencyaccountability USING btree (schoolyear);


--
-- Name: fk_1bab8a_cteprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bab8a_cteprogramservicedescriptor ON edfi.studentcteprogramassociationcteprogramservice USING btree (cteprogramservicedescriptorid);


--
-- Name: fk_1bab8a_studentcteprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bab8a_studentcteprogramassociation ON edfi.studentcteprogramassociationcteprogramservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1bb88c_questionformdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_questionformdescriptor ON edfi.surveyquestion USING btree (questionformdescriptorid);


--
-- Name: fk_1bb88c_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_survey ON edfi.surveyquestion USING btree (namespace, surveyidentifier);


--
-- Name: fk_1bb88c_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1bb88c_surveysection ON edfi.surveyquestion USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_1c30e0_generalstudentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c30e0_generalstudentprogramassociation ON edfi.studentlearningobjectivegeneralstudentprogramassociation USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_1c30e0_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c30e0_studentlearningobjective ON edfi.studentlearningobjectivegeneralstudentprogramassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_1c624b_surveyquestion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c624b_surveyquestion ON edfi.surveyquestionresponsechoice USING btree (namespace, questioncode, surveyidentifier);


--
-- Name: fk_1c8d3f_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c8d3f_languagedescriptor ON edfi.stafflanguage USING btree (languagedescriptorid);


--
-- Name: fk_1c8d3f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1c8d3f_staff ON edfi.stafflanguage USING btree (staffusi);


--
-- Name: fk_1dcb14_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1dcb14_interventionstudy ON edfi.interventionstudylearningresourcemetadatauri USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_1ee70e_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ee70e_learningstandard ON edfi.objectiveassessmentlearningstandard USING btree (learningstandardid);


--
-- Name: fk_1ee70e_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_1ee70e_objectiveassessment ON edfi.objectiveassessmentlearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_2096ce_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_academicsubjectdescriptor ON edfi.course USING btree (academicsubjectdescriptorid);


--
-- Name: fk_2096ce_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_careerpathwaydescriptor ON edfi.course USING btree (careerpathwaydescriptorid);


--
-- Name: fk_2096ce_coursedefinedbydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursedefinedbydescriptor ON edfi.course USING btree (coursedefinedbydescriptorid);


--
-- Name: fk_2096ce_coursegpaapplicabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_coursegpaapplicabilitydescriptor ON edfi.course USING btree (coursegpaapplicabilitydescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor ON edfi.course USING btree (minimumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_credittypedescriptor1 ON edfi.course USING btree (maximumavailablecredittypedescriptorid);


--
-- Name: fk_2096ce_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2096ce_educationorganization ON edfi.course USING btree (educationorganizationid);


--
-- Name: fk_210b6b_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_210b6b_courselevelcharacteristicdescriptor ON edfi.courseofferingcourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_210b6b_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_210b6b_courseoffering ON edfi.courseofferingcourselevelcharacteristic USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_211bb3_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_educationorganization ON edfi.survey USING btree (educationorganizationid);


--
-- Name: fk_211bb3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_schoolyeartype ON edfi.survey USING btree (schoolyear);


--
-- Name: fk_211bb3_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_session ON edfi.survey USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_211bb3_surveycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_211bb3_surveycategorydescriptor ON edfi.survey USING btree (surveycategorydescriptorid);


--
-- Name: fk_2189c3_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveyresponse ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_2189c3_surveysection; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2189c3_surveysection ON edfi.surveysectionresponse USING btree (namespace, surveyidentifier, surveysectiontitle);


--
-- Name: fk_21acd5_assessmentcontentstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_21acd5_assessmentcontentstandard ON edfi.assessmentcontentstandardauthor USING btree (assessmentidentifier, namespace);


--
-- Name: fk_226b3d_bellschedule; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_226b3d_bellschedule ON edfi.bellschedulegradelevel USING btree (bellschedulename, schoolid);


--
-- Name: fk_226b3d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_226b3d_gradeleveldescriptor ON edfi.bellschedulegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_22ceba_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_22ceba_assessment ON edfi.assessmentsection USING btree (assessmentidentifier, namespace);


--
-- Name: fk_22ceba_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_22ceba_section ON edfi.assessmentsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_23fa0f_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_23fa0f_academicsubjectdescriptor ON edfi.learningobjectiveacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_23fa0f_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_23fa0f_learningobjective ON edfi.learningobjectiveacademicsubject USING btree (learningobjectiveid, namespace);


--
-- Name: fk_247572_communityorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_communityorganization ON edfi.communityprovider USING btree (communityorganizationid);


--
-- Name: fk_247572_providercategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providercategorydescriptor ON edfi.communityprovider USING btree (providercategorydescriptorid);


--
-- Name: fk_247572_providerprofitabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerprofitabilitydescriptor ON edfi.communityprovider USING btree (providerprofitabilitydescriptorid);


--
-- Name: fk_247572_providerstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_247572_providerstatusdescriptor ON edfi.communityprovider USING btree (providerstatusdescriptorid);


--
-- Name: fk_252151_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganization ON edfi.educationorganizationnetworkassociation USING btree (membereducationorganizationid);


--
-- Name: fk_252151_educationorganizationnetwork; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_252151_educationorganizationnetwork ON edfi.educationorganizationnetworkassociation USING btree (educationorganizationnetworkid);


--
-- Name: fk_25c08c_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_charterstatusdescriptor ON edfi.localeducationagency USING btree (charterstatusdescriptorid);


--
-- Name: fk_25c08c_educationservicecenter; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_educationservicecenter ON edfi.localeducationagency USING btree (educationservicecenterid);


--
-- Name: fk_25c08c_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagency ON edfi.localeducationagency USING btree (parentlocaleducationagencyid);


--
-- Name: fk_25c08c_localeducationagencycategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_localeducationagencycategorydescriptor ON edfi.localeducationagency USING btree (localeducationagencycategorydescriptorid);


--
-- Name: fk_25c08c_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25c08c_stateeducationagency ON edfi.localeducationagency USING btree (stateeducationagencyid);


--
-- Name: fk_25cb9c_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_cohort ON edfi.studentinterventionassociation USING btree (cohortidentifier, cohorteducationorganizationid);


--
-- Name: fk_25cb9c_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_intervention ON edfi.studentinterventionassociation USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_25cb9c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_25cb9c_student ON edfi.studentinterventionassociation USING btree (studentusi);


--
-- Name: fk_268e07_languageinstructionprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_268e07_languageinstructionprogramservicedescriptor ON edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 USING btree (languageinstructionprogramservicedescriptorid);


--
-- Name: fk_268e07_studentlanguageinstructionprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_268e07_studentlanguageinstructionprogramassociation ON edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_269e10_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_academicsubjectdescriptor ON edfi.objectiveassessment USING btree (academicsubjectdescriptorid);


--
-- Name: fk_269e10_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_assessment ON edfi.objectiveassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_269e10_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_269e10_objectiveassessment ON edfi.objectiveassessment USING btree (assessmentidentifier, parentidentificationcode, namespace);


--
-- Name: fk_27d914_titleipartaparticipantdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_27d914_titleipartaparticipantdescriptor ON edfi.studenttitleipartaprogramassociation USING btree (titleipartaparticipantdescriptorid);


--
-- Name: fk_285d36_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_285d36_academicsubjectdescriptor ON edfi.openstaffpositionacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_285d36_openstaffposition; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_285d36_openstaffposition ON edfi.openstaffpositionacademicsubject USING btree (educationorganizationid, requisitionnumber);


--
-- Name: fk_2935bf_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_administrativefundingcontroldescriptor ON edfi.postsecondaryinstitution USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2935bf_postsecondaryinstitutionleveldescriptor ON edfi.postsecondaryinstitution USING btree (postsecondaryinstitutionleveldescriptorid);


--
-- Name: fk_29e870_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_diagnosisdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_29e870_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_gradeleveldescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_29e870_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_interventioneffectivenessratingdescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_29e870_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_populationserveddescriptor ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_29e870_studentinterventionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_29e870_studentinterventionassociation ON edfi.studentinterventionassociationinterventioneffectiveness USING btree (educationorganizationid, interventionidentificationcode, studentusi);


--
-- Name: fk_2a164d_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_citizenshipstatusdescriptor ON edfi.student USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_2a164d_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_countrydescriptor ON edfi.student USING btree (birthcountrydescriptorid);


--
-- Name: fk_2a164d_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_person ON edfi.student USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_2a164d_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_sexdescriptor ON edfi.student USING btree (birthsexdescriptorid);


--
-- Name: fk_2a164d_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a164d_stateabbreviationdescriptor ON edfi.student USING btree (birthstateabbreviationdescriptorid);


--
-- Name: fk_2a4725_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a4725_languagedescriptor ON edfi.studenteducationorganizationassociationlanguage USING btree (languagedescriptorid);


--
-- Name: fk_2a4725_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2a4725_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationlanguage USING btree (educationorganizationid, studentusi);


--
-- Name: fk_2b286a_academichonorcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_academichonorcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (academichonorcategorydescriptorid);


--
-- Name: fk_2b286a_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_achievementcategorydescriptor ON edfi.studentacademicrecordacademichonor USING btree (achievementcategorydescriptorid);


--
-- Name: fk_2b286a_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2b286a_studentacademicrecord ON edfi.studentacademicrecordacademichonor USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_2c2b13_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c2b13_ancestryethnicorigindescriptor ON edfi.studenteducationorganizationassociationancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_2c2b13_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c2b13_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationancestryethnicorigin USING btree (educationorganizationid, studentusi);


--
-- Name: fk_2c4cdb_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c4cdb_disciplineaction ON edfi.disciplineactionstudentdisciplineincidentbehaviorassociation USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c4cdb_studentdisciplineincidentbehaviorassociation ON edfi.disciplineactionstudentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: fk_2c91e8_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_assessmentreportingmethoddescriptor ON edfi.objectiveassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_2c91e8_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_objectiveassessment ON edfi.objectiveassessmentscore USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_2c91e8_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2c91e8_resultdatatypetypedescriptor ON edfi.objectiveassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_2d3c0c_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_educationorganization ON edfi.accountabilityrating USING btree (educationorganizationid);


--
-- Name: fk_2d3c0c_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d3c0c_schoolyeartype ON edfi.accountabilityrating USING btree (schoolyear);


--
-- Name: fk_2d57be_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_countrydescriptor ON edfi.studentidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_2d57be_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_identificationdocumentusedescriptor ON edfi.studentidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_2d57be_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_personalinformationverificationdescriptor ON edfi.studentidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_2d57be_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2d57be_student ON edfi.studentidentificationdocument USING btree (studentusi);


--
-- Name: fk_2e333a_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2e333a_languageusedescriptor ON edfi.studenteducationorganizationassociationlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_2e333a_studenteducationorganizationassociationlanguage; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_2e333a_studenteducationorganizationassociationlanguage ON edfi.studenteducationorganizationassociationlanguageuse USING btree (educationorganizationid, languagedescriptorid, studentusi);


--
-- Name: fk_309217_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_309217_program ON edfi.sectionprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_309217_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_309217_section ON edfi.sectionprogram USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_30e866_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_30e866_disciplineaction ON edfi.disciplineactionstaff USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_30e866_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_30e866_staff ON edfi.disciplineactionstaff USING btree (staffusi);


--
-- Name: fk_31779a_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_countrydescriptor ON edfi.staffidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_31779a_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_identificationdocumentusedescriptor ON edfi.staffidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_31779a_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_personalinformationverificationdescriptor ON edfi.staffidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_31779a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31779a_staff ON edfi.staffidentificationdocument USING btree (staffusi);


--
-- Name: fk_317aeb_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_attendanceeventcategorydescriptor ON edfi.studentprogramattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_317aeb_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationalenvironmentdescriptor ON edfi.studentprogramattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_317aeb_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_educationorganization ON edfi.studentprogramattendanceevent USING btree (educationorganizationid);


--
-- Name: fk_317aeb_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_program ON edfi.studentprogramattendanceevent USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_317aeb_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_317aeb_student ON edfi.studentprogramattendanceevent USING btree (studentusi);


--
-- Name: fk_31bbf7_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31bbf7_courseoffering ON edfi.courseofferingcurriculumused USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_31bbf7_curriculumuseddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_31bbf7_curriculumuseddescriptor ON edfi.courseofferingcurriculumused USING btree (curriculumuseddescriptorid);


--
-- Name: fk_32920f_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_disabilitydeterminationsourcetypedescriptor ON edfi.studentspecialeducationprogramassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_32920f_studentspecialeducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32920f_studentspecialeducationprogramassociation ON edfi.studentspecialeducationprogramassociationdisability USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_32eddb_chartofaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32eddb_chartofaccount ON edfi.localaccount USING btree (chartofaccountidentifier, chartofaccounteducationorganizationid, fiscalyear);


--
-- Name: fk_32eddb_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_32eddb_educationorganization ON edfi.localaccount USING btree (educationorganizationid);


--
-- Name: fk_34f9df_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_34f9df_languagedescriptor ON edfi.parentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_34f9df_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_34f9df_parent ON edfi.parentlanguage USING btree (parentusi);


--
-- Name: fk_354642_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_354642_academicsubjectdescriptor ON edfi.coursetranscriptacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_354642_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_354642_coursetranscript ON edfi.coursetranscriptacademicsubject USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_35afab_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_35afab_intervention ON edfi.interventionuri USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_369ddc_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_cohort ON edfi.studentcohortassociation USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_369ddc_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_369ddc_student ON edfi.studentcohortassociation USING btree (studentusi);


--
-- Name: fk_3734d1_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3734d1_assessment ON edfi.assessmentperiod USING btree (assessmentidentifier, namespace);


--
-- Name: fk_3734d1_assessmentperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3734d1_assessmentperioddescriptor ON edfi.assessmentperiod USING btree (assessmentperioddescriptorid);


--
-- Name: fk_3800be_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_educationalenvironmentdescriptor ON edfi.restraintevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_3800be_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_school ON edfi.restraintevent USING btree (schoolid);


--
-- Name: fk_3800be_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3800be_student ON edfi.restraintevent USING btree (studentusi);


--
-- Name: fk_38677c_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_38677c_gradeleveldescriptor ON edfi.learningstandardgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_38677c_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_38677c_learningstandard ON edfi.learningstandardgradelevel USING btree (learningstandardid);


--
-- Name: fk_39073d_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_staff ON edfi.surveysectionresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_39073d_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39073d_surveysectionresponse ON edfi.surveysectionresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_395c07_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyleveldescriptor ON edfi.studentcompetencyobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_395c07_competencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_competencyobjective ON edfi.studentcompetencyobjective USING btree (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: fk_395c07_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_gradingperiod ON edfi.studentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_395c07_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_395c07_student ON edfi.studentcompetencyobjective USING btree (studentusi);


--
-- Name: fk_39aa3c_attemptstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_attemptstatusdescriptor ON edfi.studentsectionassociation USING btree (attemptstatusdescriptorid);


--
-- Name: fk_39aa3c_repeatidentifierdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_repeatidentifierdescriptor ON edfi.studentsectionassociation USING btree (repeatidentifierdescriptorid);


--
-- Name: fk_39aa3c_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_section ON edfi.studentsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_39aa3c_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_39aa3c_student ON edfi.studentsectionassociation USING btree (studentusi);


--
-- Name: fk_3ab5d4_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3ab5d4_educationcontent ON edfi.interventionprescriptioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3ab5d4_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3ab5d4_interventionprescription ON edfi.interventionprescriptioneducationcontent USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_3af731_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3af731_assessment ON edfi.assessmentidentificationcode USING btree (assessmentidentifier, namespace);


--
-- Name: fk_3af731_assessmentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3af731_assessmentidentificationsystemdescriptor ON edfi.assessmentidentificationcode USING btree (assessmentidentificationsystemdescriptorid);


--
-- Name: fk_3b06c7_operationalunitdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b06c7_operationalunitdimension ON edfi.operationalunitdimensionreportingtag USING btree (code, fiscalyear);


--
-- Name: fk_3b06c7_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b06c7_reportingtagdescriptor ON edfi.operationalunitdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_3b5b30_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_academicsubjectdescriptor ON edfi.graduationplancreditsbysubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_3b5b30_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_credittypedescriptor ON edfi.graduationplancreditsbysubject USING btree (credittypedescriptorid);


--
-- Name: fk_3b5b30_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3b5b30_graduationplan ON edfi.graduationplancreditsbysubject USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_3c7e00_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c7e00_stateeducationagency ON edfi.stateeducationagencyfederalfunds USING btree (stateeducationagencyid);


--
-- Name: fk_3c823d_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c823d_educationcontent ON edfi.interventioneducationcontent USING btree (contentidentifier);


--
-- Name: fk_3c823d_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3c823d_intervention ON edfi.interventioneducationcontent USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_3cc1d4_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_educationorganization ON edfi.openstaffposition USING btree (educationorganizationid);


--
-- Name: fk_3cc1d4_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_employmentstatusdescriptor ON edfi.openstaffposition USING btree (employmentstatusdescriptorid);


--
-- Name: fk_3cc1d4_postingresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_postingresultdescriptor ON edfi.openstaffposition USING btree (postingresultdescriptorid);


--
-- Name: fk_3cc1d4_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_programassignmentdescriptor ON edfi.openstaffposition USING btree (programassignmentdescriptorid);


--
-- Name: fk_3cc1d4_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3cc1d4_staffclassificationdescriptor ON edfi.openstaffposition USING btree (staffclassificationdescriptorid);


--
-- Name: fk_3d5433_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3d5433_gradeleveldescriptor ON edfi.interventionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3d5433_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3d5433_intervention ON edfi.interventionappropriategradelevel USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_3db81b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3db81b_gradeleveldescriptor ON edfi.staffschoolassociationgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_3db81b_staffschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3db81b_staffschoolassociation ON edfi.staffschoolassociationgradelevel USING btree (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: fk_3e04ae_programdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3e04ae_programdimension ON edfi.programdimensionreportingtag USING btree (code, fiscalyear);


--
-- Name: fk_3e04ae_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_3e04ae_reportingtagdescriptor ON edfi.programdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_400d06_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_400d06_academicsubjectdescriptor ON edfi.assessmentacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_400d06_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_400d06_assessment ON edfi.assessmentacademicsubject USING btree (assessmentidentifier, namespace);


--
-- Name: fk_421bfa_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_421bfa_educationcontent ON edfi.educationcontentderivativesourcelearningresourcemetadatauri USING btree (contentidentifier);


--
-- Name: fk_427110_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_427110_educationorganization ON edfi.educationorganizationcategory USING btree (educationorganizationid);


--
-- Name: fk_427110_educationorganizationcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_427110_educationorganizationcategorydescriptor ON edfi.educationorganizationcategory USING btree (educationorganizationcategorydescriptorid);


--
-- Name: fk_42aa64_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_educationorganization ON edfi.studenteducationorganizationresponsibilityassociation USING btree (educationorganizationid);


--
-- Name: fk_42aa64_responsibilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_responsibilitydescriptor ON edfi.studenteducationorganizationresponsibilityassociation USING btree (responsibilitydescriptorid);


--
-- Name: fk_42aa64_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_42aa64_student ON edfi.studenteducationorganizationresponsibilityassociation USING btree (studentusi);


--
-- Name: fk_435263_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_435263_classperiod ON edfi.classperiodmeetingtime USING btree (classperiodname, schoolid);


--
-- Name: fk_43bbe1_stateeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_43bbe1_stateeducationagency ON edfi.educationservicecenter USING btree (stateeducationagencyid);


--
-- Name: fk_44e78d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_credittypedescriptor ON edfi.graduationplancreditsbycourse USING btree (credittypedescriptorid);


--
-- Name: fk_44e78d_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_gradeleveldescriptor ON edfi.graduationplancreditsbycourse USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_44e78d_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44e78d_graduationplan ON edfi.graduationplancreditsbycourse USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_44f909_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44f909_learningstandard ON edfi.programlearningstandard USING btree (learningstandardid);


--
-- Name: fk_44f909_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_44f909_program ON edfi.programlearningstandard USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_4525e6_operationalstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4525e6_operationalstatusdescriptor ON edfi.educationorganization USING btree (operationalstatusdescriptorid);


--
-- Name: fk_453ba8_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_453ba8_parent ON edfi.parenttelephone USING btree (parentusi);


--
-- Name: fk_453ba8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_453ba8_telephonenumbertypedescriptor ON edfi.parenttelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_465c76_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_465c76_classperiod ON edfi.sectionclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_465c76_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_465c76_section ON edfi.sectionclassperiod USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_466cfa_gradebookentrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradebookentrytypedescriptor ON edfi.gradebookentry USING btree (gradebookentrytypedescriptorid);


--
-- Name: fk_466cfa_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_gradingperiod ON edfi.gradebookentry USING btree (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: fk_466cfa_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_466cfa_section ON edfi.gradebookentry USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_46e5c2_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_financialcollectiondescriptor ON edfi.localpayroll USING btree (financialcollectiondescriptorid);


--
-- Name: fk_46e5c2_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_localaccount ON edfi.localpayroll USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_46e5c2_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_46e5c2_staff ON edfi.localpayroll USING btree (staffusi);


--
-- Name: fk_4736c7_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4736c7_gradeleveldescriptor ON edfi.interventionprescriptionappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_4736c7_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4736c7_interventionprescription ON edfi.interventionprescriptionappropriategradelevel USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_4925da_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_addresstypedescriptor ON edfi.educationorganizationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_4925da_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_educationorganization ON edfi.educationorganizationaddress USING btree (educationorganizationid);


--
-- Name: fk_4925da_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_localedescriptor ON edfi.educationorganizationaddress USING btree (localedescriptorid);


--
-- Name: fk_4925da_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4925da_stateabbreviationdescriptor ON edfi.educationorganizationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_4a3f1c_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a3f1c_interventionprescription ON edfi.interventionprescriptionappropriatesex USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_4a3f1c_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a3f1c_sexdescriptor ON edfi.interventionprescriptionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_4a715c_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a715c_educationorganization ON edfi.educationorganizationidentificationcode USING btree (educationorganizationid);


--
-- Name: fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4a715c_educationorganizationidentificationsystemdescriptor ON edfi.educationorganizationidentificationcode USING btree (educationorganizationidentificationsystemdescriptorid);


--
-- Name: fk_4acf8e_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4acf8e_interventionprescription ON edfi.interventionprescriptionuri USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_4b43da_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_disciplineincident ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_4b43da_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4b43da_student ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (studentusi);


--
-- Name: fk_4c38bb_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c38bb_program ON edfi.programsponsor USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_4c38bb_programsponsordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c38bb_programsponsordescriptor ON edfi.programsponsor USING btree (programsponsordescriptorid);


--
-- Name: fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c979a_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_4c979a_studentdisciplineincidentnonoffenderassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c979a_studentdisciplineincidentnonoffenderassociation ON edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a USING btree (incidentidentifier, schoolid, studentusi);


--
-- Name: fk_4c9e40_learningstandardcontentstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4c9e40_learningstandardcontentstandard ON edfi.learningstandardcontentstandardauthor USING btree (learningstandardid);


--
-- Name: fk_4ca65b_disabilitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydescriptorid);


--
-- Name: fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_disabilitydeterminationsourcetypedescriptor ON edfi.studenteducationorganizationassociationdisability USING btree (disabilitydeterminationsourcetypedescriptorid);


--
-- Name: fk_4ca65b_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4ca65b_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationdisability USING btree (educationorganizationid, studentusi);


--
-- Name: fk_4d9b4a_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_financialcollectiondescriptor ON edfi.localcontractedstaff USING btree (financialcollectiondescriptorid);


--
-- Name: fk_4d9b4a_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_localaccount ON edfi.localcontractedstaff USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_4d9b4a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4d9b4a_staff ON edfi.localcontractedstaff USING btree (staffusi);


--
-- Name: fk_4de15a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4de15a_staff ON edfi.stafftelephone USING btree (staffusi);


--
-- Name: fk_4de15a_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4de15a_telephonenumbertypedescriptor ON edfi.stafftelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_4e3afe_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_countrydescriptor ON edfi.staffpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_4e3afe_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_identificationdocumentusedescriptor ON edfi.staffpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_4e3afe_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_personalinformationverificationdescriptor ON edfi.staffpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_4e3afe_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e3afe_staff ON edfi.staffpersonalidentificationdocument USING btree (staffusi);


--
-- Name: fk_4e79b9_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_credential ON edfi.staffeducationorganizationemploymentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_4e79b9_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_educationorganization ON edfi.staffeducationorganizationemploymentassociation USING btree (educationorganizationid);


--
-- Name: fk_4e79b9_employmentstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_employmentstatusdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (employmentstatusdescriptorid);


--
-- Name: fk_4e79b9_separationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationdescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationdescriptorid);


--
-- Name: fk_4e79b9_separationreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_separationreasondescriptor ON edfi.staffeducationorganizationemploymentassociation USING btree (separationreasondescriptorid);


--
-- Name: fk_4e79b9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_4e79b9_staff ON edfi.staffeducationorganizationemploymentassociation USING btree (staffusi);


--
-- Name: fk_515cb5_classroompositiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_classroompositiondescriptor ON edfi.staffsectionassociation USING btree (classroompositiondescriptorid);


--
-- Name: fk_515cb5_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_section ON edfi.staffsectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_515cb5_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_515cb5_staff ON edfi.staffsectionassociation USING btree (staffusi);


--
-- Name: fk_520251_neglectedordelinquentprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_520251_neglectedordelinquentprogramservicedescriptor ON edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 USING btree (neglectedordelinquentprogramservicedescriptorid);


--
-- Name: fk_520251_studentneglectedordelinquentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_520251_studentneglectedordelinquentprogramassociation ON edfi.studentneglectedordelinquentprogramassociationneglectedo_520251 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_57f7d2_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_57f7d2_credential ON edfi.credentialendorsement USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_58013b_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_58013b_assessment ON edfi.assessmentprogram USING btree (assessmentidentifier, namespace);


--
-- Name: fk_58013b_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_58013b_program ON edfi.assessmentprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_581f0f_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_581f0f_competencyleveldescriptor ON edfi.coursecompetencylevel USING btree (competencyleveldescriptorid);


--
-- Name: fk_581f0f_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_581f0f_course ON edfi.coursecompetencylevel USING btree (coursecode, educationorganizationid);


--
-- Name: fk_582e49_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_582e49_electronicmailtypedescriptor ON edfi.studenteducationorganizationassociationelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_582e49_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_582e49_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationelectronicmail USING btree (educationorganizationid, studentusi);


--
-- Name: fk_588d15_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_588d15_learningobjective ON edfi.learningobjective USING btree (parentlearningobjectiveid, parentnamespace);


--
-- Name: fk_59fcb5_cohort; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_59fcb5_cohort ON edfi.cohortprogram USING btree (cohortidentifier, educationorganizationid);


--
-- Name: fk_59fcb5_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_59fcb5_program ON edfi.cohortprogram USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_5a18f9_gradingperioddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_gradingperioddescriptor ON edfi.gradingperiod USING btree (gradingperioddescriptorid);


--
-- Name: fk_5a18f9_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_school ON edfi.gradingperiod USING btree (schoolid);


--
-- Name: fk_5a18f9_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a18f9_schoolyeartype ON edfi.gradingperiod USING btree (schoolyear);


--
-- Name: fk_5a8c0e_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5a8c0e_localeducationagency ON edfi.localeducationagencyfederalfunds USING btree (localeducationagencyid);


--
-- Name: fk_5c2c98_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5c2c98_programtypedescriptor ON edfi.studenteducationorganizationassociationprogramparticipation USING btree (programtypedescriptorid);


--
-- Name: fk_5c2c98_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5c2c98_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationprogramparticipation USING btree (educationorganizationid, studentusi);


--
-- Name: fk_5e049e_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_achievementcategorydescriptor ON edfi.studentacademicrecordrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_5e049e_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_recognitiontypedescriptor ON edfi.studentacademicrecordrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_5e049e_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e049e_studentacademicrecord ON edfi.studentacademicrecordrecognition USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_5e9932_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_educationorganization ON edfi.competencyobjective USING btree (educationorganizationid);


--
-- Name: fk_5e9932_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5e9932_gradeleveldescriptor ON edfi.competencyobjective USING btree (objectivegradeleveldescriptorid);


--
-- Name: fk_5ee8fd_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5ee8fd_disabilitydesignationdescriptor ON edfi.studenteducationorganizationassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_5ee8fd_studenteducationorganizationassociationdisability; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5ee8fd_studenteducationorganizationassociationdisability ON edfi.studenteducationorganizationassociationdisabilitydesignation USING btree (disabilitydescriptorid, educationorganizationid, studentusi);


--
-- Name: fk_5f7953_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_levelofeducationdescriptor ON edfi.parent USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_5f7953_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_person ON edfi.parent USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_5f7953_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_5f7953_sexdescriptor ON edfi.parent USING btree (sexdescriptorid);


--
-- Name: fk_6007db_sourcesystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6007db_sourcesystemdescriptor ON edfi.person USING btree (sourcesystemdescriptorid);


--
-- Name: fk_61b087_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_attendanceeventcategorydescriptor ON edfi.studentsectionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_61b087_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_educationalenvironmentdescriptor ON edfi.studentsectionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_61b087_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_section ON edfi.studentsectionattendanceevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_61b087_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_61b087_student ON edfi.studentsectionattendanceevent USING btree (studentusi);


--
-- Name: fk_631023_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_attendanceeventcategorydescriptor ON edfi.studentinterventionattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_631023_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_educationalenvironmentdescriptor ON edfi.studentinterventionattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_631023_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_intervention ON edfi.studentinterventionattendanceevent USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_631023_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_631023_student ON edfi.studentinterventionattendanceevent USING btree (studentusi);


--
-- Name: fk_644654_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_644654_course ON edfi.courselearningstandard USING btree (coursecode, educationorganizationid);


--
-- Name: fk_644654_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_644654_learningstandard ON edfi.courselearningstandard USING btree (learningstandardid);


--
-- Name: fk_64d76d_surveyquestion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d76d_surveyquestion ON edfi.surveyquestionmatrix USING btree (namespace, questioncode, surveyidentifier);


--
-- Name: fk_64d8a6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d8a6_gradeleveldescriptor ON edfi.schoolgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_64d8a6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_64d8a6_school ON edfi.schoolgradelevel USING btree (schoolid);


--
-- Name: fk_6621ee_courseidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6621ee_courseidentificationsystemdescriptor ON edfi.coursetranscriptalternativecourseidentificationcode USING btree (courseidentificationsystemdescriptorid);


--
-- Name: fk_6621ee_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6621ee_coursetranscript ON edfi.coursetranscriptalternativecourseidentificationcode USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_678d65_neglectedordelinquentprogramdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_neglectedordelinquentprogramdescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (neglectedordelinquentprogramdescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor ON edfi.studentneglectedordelinquentprogramassociation USING btree (elaprogressleveldescriptorid);


--
-- Name: fk_678d65_progressleveldescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_678d65_progressleveldescriptor1 ON edfi.studentneglectedordelinquentprogramassociation USING btree (mathematicsprogressleveldescriptorid);


--
-- Name: fk_679174_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_disciplineincident ON edfi.studentdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_679174_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_student ON edfi.studentdisciplineincidentassociation USING btree (studentusi);


--
-- Name: fk_679174_studentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_679174_studentparticipationcodedescriptor ON edfi.studentdisciplineincidentassociation USING btree (studentparticipationcodedescriptorid);


--
-- Name: fk_681927_citizenshipstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_citizenshipstatusdescriptor ON edfi.staff USING btree (citizenshipstatusdescriptorid);


--
-- Name: fk_681927_levelofeducationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_levelofeducationdescriptor ON edfi.staff USING btree (highestcompletedlevelofeducationdescriptorid);


--
-- Name: fk_681927_oldethnicitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_oldethnicitydescriptor ON edfi.staff USING btree (oldethnicitydescriptorid);


--
-- Name: fk_681927_person; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_person ON edfi.staff USING btree (personid, sourcesystemdescriptorid);


--
-- Name: fk_681927_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_681927_sexdescriptor ON edfi.staff USING btree (sexdescriptorid);


--
-- Name: fk_6959b4_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_school ON edfi.session USING btree (schoolid);


--
-- Name: fk_6959b4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_schoolyeartype ON edfi.session USING btree (schoolyear);


--
-- Name: fk_6959b4_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6959b4_termdescriptor ON edfi.session USING btree (termdescriptorid);


--
-- Name: fk_696d9a_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_696d9a_racedescriptor ON edfi.staffrace USING btree (racedescriptorid);


--
-- Name: fk_696d9a_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_696d9a_staff ON edfi.staffrace USING btree (staffusi);


--
-- Name: fk_699b02_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_699b02_assessmentitem ON edfi.assessmentitempossibleresponse USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_69cd6f_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69cd6f_servicedescriptor ON edfi.studentprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_69cd6f_studentprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69cd6f_studentprogramassociation ON edfi.studentprogramassociationservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_69dd58_cohortyeartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_cohortyeartypedescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (cohortyeartypedescriptorid);


--
-- Name: fk_69dd58_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_schoolyeartype ON edfi.studenteducationorganizationassociationcohortyear USING btree (schoolyear);


--
-- Name: fk_69dd58_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationcohortyear USING btree (educationorganizationid, studentusi);


--
-- Name: fk_69dd58_termdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_69dd58_termdescriptor ON edfi.studenteducationorganizationassociationcohortyear USING btree (termdescriptorid);


--
-- Name: fk_6acf2b_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_course ON edfi.coursetranscript USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_6acf2b_courseattemptresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courseattemptresultdescriptor ON edfi.coursetranscript USING btree (courseattemptresultdescriptorid);


--
-- Name: fk_6acf2b_courserepeatcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_courserepeatcodedescriptor ON edfi.coursetranscript USING btree (courserepeatcodedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor ON edfi.coursetranscript USING btree (attemptedcredittypedescriptorid);


--
-- Name: fk_6acf2b_credittypedescriptor1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_credittypedescriptor1 ON edfi.coursetranscript USING btree (earnedcredittypedescriptorid);


--
-- Name: fk_6acf2b_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_educationorganization ON edfi.coursetranscript USING btree (externaleducationorganizationid);


--
-- Name: fk_6acf2b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_gradeleveldescriptor ON edfi.coursetranscript USING btree (whentakengradeleveldescriptorid);


--
-- Name: fk_6acf2b_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_methodcreditearneddescriptor ON edfi.coursetranscript USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_6acf2b_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6acf2b_studentacademicrecord ON edfi.coursetranscript USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_6cd27e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_addresstypedescriptor ON edfi.staffinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_6cd27e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_countrydescriptor ON edfi.staffinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_6cd27e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd27e_staff ON edfi.staffinternationaladdress USING btree (staffusi);


--
-- Name: fk_6cd2e3_administrativefundingcontroldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_administrativefundingcontroldescriptor ON edfi.school USING btree (administrativefundingcontroldescriptorid);


--
-- Name: fk_6cd2e3_charterapprovalagencytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterapprovalagencytypedescriptor ON edfi.school USING btree (charterapprovalagencytypedescriptorid);


--
-- Name: fk_6cd2e3_charterstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_charterstatusdescriptor ON edfi.school USING btree (charterstatusdescriptorid);


--
-- Name: fk_6cd2e3_internetaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_internetaccessdescriptor ON edfi.school USING btree (internetaccessdescriptorid);


--
-- Name: fk_6cd2e3_localeducationagency; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_localeducationagency ON edfi.school USING btree (localeducationagencyid);


--
-- Name: fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor ON edfi.school USING btree (magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: fk_6cd2e3_schooltypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schooltypedescriptor ON edfi.school USING btree (schooltypedescriptorid);


--
-- Name: fk_6cd2e3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_schoolyeartype ON edfi.school USING btree (charterapprovalschoolyear);


--
-- Name: fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6cd2e3_titleipartaschooldesignationdescriptor ON edfi.school USING btree (titleipartaschooldesignationdescriptorid);


--
-- Name: fk_6e1291_bellschedule; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6e1291_bellschedule ON edfi.bellscheduledate USING btree (bellschedulename, schoolid);


--
-- Name: fk_6fa51c_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6fa51c_intervention ON edfi.interventionstaff USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_6fa51c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_6fa51c_staff ON edfi.interventionstaff USING btree (staffusi);


--
-- Name: fk_7062bd_funddimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7062bd_funddimension ON edfi.funddimensionreportingtag USING btree (code, fiscalyear);


--
-- Name: fk_7062bd_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7062bd_reportingtagdescriptor ON edfi.funddimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_70e978_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70e978_graduationplan ON edfi.studentschoolassociationalternativegraduationplan USING btree (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear);


--
-- Name: fk_70e978_studentschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70e978_studentschoolassociation ON edfi.studentschoolassociationalternativegraduationplan USING btree (entrydate, schoolid, studentusi);


--
-- Name: fk_70f675_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_educationorganization ON edfi.learningstandardcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_70f675_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_70f675_publicationstatusdescriptor ON edfi.learningstandardcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_72eb60_academicweek; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_72eb60_academicweek ON edfi.sessionacademicweek USING btree (schoolid, weekidentifier);


--
-- Name: fk_72eb60_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_72eb60_session ON edfi.sessionacademicweek USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_730be1_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_730be1_educationorganization ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (educationorganizationid);


--
-- Name: fk_730be1_surveysectionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_730be1_surveysectionresponse ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: fk_735dd8_contacttypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_contacttypedescriptor ON edfi.staffeducationorganizationcontactassociation USING btree (contacttypedescriptorid);


--
-- Name: fk_735dd8_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_educationorganization ON edfi.staffeducationorganizationcontactassociation USING btree (educationorganizationid);


--
-- Name: fk_735dd8_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_735dd8_staff ON edfi.staffeducationorganizationcontactassociation USING btree (staffusi);


--
-- Name: fk_73601f_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_73601f_disciplineaction ON edfi.disciplineactiondiscipline USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_73601f_disciplinedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_73601f_disciplinedescriptor ON edfi.disciplineactiondiscipline USING btree (disciplinedescriptorid);


--
-- Name: fk_742dd2_staffeducationorganizationcontactassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_742dd2_staffeducationorganizationcontactassociation ON edfi.staffeducationorganizationcontactassociationtelephone USING btree (contacttitle, educationorganizationid, staffusi);


--
-- Name: fk_742dd2_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_742dd2_telephonenumbertypedescriptor ON edfi.staffeducationorganizationcontactassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_7433b4_descriptormapping; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7433b4_descriptormapping ON edfi.descriptormappingmodelentity USING btree (mappednamespace, mappedvalue, namespace, value);


--
-- Name: fk_7433b4_modelentitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7433b4_modelentitydescriptor ON edfi.descriptormappingmodelentity USING btree (modelentitydescriptorid);


--
-- Name: fk_7483c6_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7483c6_staff ON edfi.staffidentificationcode USING btree (staffusi);


--
-- Name: fk_7483c6_staffidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7483c6_staffidentificationsystemdescriptor ON edfi.staffidentificationcode USING btree (staffidentificationsystemdescriptorid);


--
-- Name: fk_74e4e5_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization ON edfi.educationorganizationpeerassociation USING btree (educationorganizationid);


--
-- Name: fk_74e4e5_educationorganization1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_74e4e5_educationorganization1 ON edfi.educationorganizationpeerassociation USING btree (peereducationorganizationid);


--
-- Name: fk_7808ee_assessmentcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_assessmentcategorydescriptor ON edfi.assessment USING btree (assessmentcategorydescriptorid);


--
-- Name: fk_7808ee_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7808ee_educationorganization ON edfi.assessment USING btree (educationorganizationid);


--
-- Name: fk_789691_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_789691_school ON edfi.schoolcategory USING btree (schoolid);


--
-- Name: fk_789691_schoolcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_789691_schoolcategorydescriptor ON edfi.schoolcategory USING btree (schoolcategorydescriptorid);


--
-- Name: fk_78fd7f_attendanceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_attendanceeventcategorydescriptor ON edfi.studentschoolattendanceevent USING btree (attendanceeventcategorydescriptorid);


--
-- Name: fk_78fd7f_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_educationalenvironmentdescriptor ON edfi.studentschoolattendanceevent USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_78fd7f_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_school ON edfi.studentschoolattendanceevent USING btree (schoolid);


--
-- Name: fk_78fd7f_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_session ON edfi.studentschoolattendanceevent USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_78fd7f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_78fd7f_student ON edfi.studentschoolattendanceevent USING btree (studentusi);


--
-- Name: fk_79895a_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_79895a_educationorganization ON edfi.educationorganizationinstitutiontelephone USING btree (educationorganizationid);


--
-- Name: fk_79895a_institutiontelephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_79895a_institutiontelephonenumbertypedescriptor ON edfi.educationorganizationinstitutiontelephone USING btree (institutiontelephonenumbertypedescriptorid);


--
-- Name: fk_7bbbe7_calendardate; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_calendardate ON edfi.sectionattendancetakenevent USING btree (calendarcode, date, schoolid, schoolyear);


--
-- Name: fk_7bbbe7_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_section ON edfi.sectionattendancetakenevent USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_7bbbe7_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7bbbe7_staff ON edfi.sectionattendancetakenevent USING btree (staffusi);


--
-- Name: fk_7d2fb4_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7d2fb4_servicedescriptor ON edfi.studenttitleipartaprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_7d2fb4_studenttitleipartaprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7d2fb4_studenttitleipartaprogramassociation ON edfi.studenttitleipartaprogramassociationservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_7f600a_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitem ON edfi.studentassessmentitem USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_7f600a_assessmentitemresultdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_assessmentitemresultdescriptor ON edfi.studentassessmentitem USING btree (assessmentitemresultdescriptorid);


--
-- Name: fk_7f600a_responseindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_responseindicatordescriptor ON edfi.studentassessmentitem USING btree (responseindicatordescriptorid);


--
-- Name: fk_7f600a_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7f600a_studentassessment ON edfi.studentassessmentitem USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7fa4be_disciplineincidentparticipationcodedescriptor ON edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_7fa4be_staffdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_7fa4be_staffdisciplineincidentassociation ON edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be USING btree (incidentidentifier, schoolid, staffusi);


--
-- Name: fk_80c6c1_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_80c6c1_classperiod ON edfi.studentsectionattendanceeventclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_80c6c1_studentsectionattendanceevent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_80c6c1_studentsectionattendanceevent ON edfi.studentsectionattendanceeventclassperiod USING btree (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_810575_programcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_810575_programcharacteristicdescriptor ON edfi.studenteducationorganizationassociationprogramparticipat_810575 USING btree (programcharacteristicdescriptorid);


--
-- Name: fk_810575_studenteducationorganizationassociationprogrampartici; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_810575_studenteducationorganizationassociationprogrampartici ON edfi.studenteducationorganizationassociationprogramparticipat_810575 USING btree (educationorganizationid, programtypedescriptorid, studentusi);


--
-- Name: fk_81b800_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_81b800_learningstandard ON edfi.learningstandardprerequisitelearningstandard USING btree (learningstandardid);


--
-- Name: fk_81b800_learningstandard1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_81b800_learningstandard1 ON edfi.learningstandardprerequisitelearningstandard USING btree (prerequisitelearningstandardid);


--
-- Name: fk_839e20_gradetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradetypedescriptor ON edfi.grade USING btree (gradetypedescriptorid);


--
-- Name: fk_839e20_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_gradingperiod ON edfi.grade USING btree (gradingperioddescriptorid, gradingperiodsequence, schoolid, gradingperiodschoolyear);


--
-- Name: fk_839e20_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_performancebaseconversiondescriptor ON edfi.grade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_839e20_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_839e20_studentsectionassociation ON edfi.grade USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_8422f4_chartofaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8422f4_chartofaccount ON edfi.chartofaccountreportingtag USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_8422f4_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8422f4_reportingtagdescriptor ON edfi.chartofaccountreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_8486ae_educationorganizationindicator; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8486ae_educationorganizationindicator ON edfi.educationorganizationindicatorperiod USING btree (educationorganizationid, indicatordescriptorid);


--
-- Name: fk_84e5e0_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_84e5e0_reportcard ON edfi.studentacademicrecordreportcard USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_84e5e0_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_84e5e0_studentacademicrecord ON edfi.studentacademicrecordreportcard USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_8574ad_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8574ad_gradepointaveragetypedescriptor ON edfi.reportcardgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_8574ad_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8574ad_reportcard ON edfi.reportcardgradepointaverage USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_85798e_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85798e_electronicmailtypedescriptor ON edfi.parentelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_85798e_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85798e_parent ON edfi.parentelectronicmail USING btree (parentusi);


--
-- Name: fk_857b52_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_calendar ON edfi.studentschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_857b52_entrygradelevelreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrygradelevelreasondescriptor ON edfi.studentschoolassociation USING btree (entrygradelevelreasondescriptorid);


--
-- Name: fk_857b52_entrytypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_entrytypedescriptor ON edfi.studentschoolassociation USING btree (entrytypedescriptorid);


--
-- Name: fk_857b52_exitwithdrawtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_exitwithdrawtypedescriptor ON edfi.studentschoolassociation USING btree (exitwithdrawtypedescriptorid);


--
-- Name: fk_857b52_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_gradeleveldescriptor ON edfi.studentschoolassociation USING btree (entrygradeleveldescriptorid);


--
-- Name: fk_857b52_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_graduationplan ON edfi.studentschoolassociation USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_857b52_residencystatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_residencystatusdescriptor ON edfi.studentschoolassociation USING btree (residencystatusdescriptorid);


--
-- Name: fk_857b52_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_school ON edfi.studentschoolassociation USING btree (schoolid);


--
-- Name: fk_857b52_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype ON edfi.studentschoolassociation USING btree (schoolyear);


--
-- Name: fk_857b52_schoolyeartype1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_schoolyeartype1 ON edfi.studentschoolassociation USING btree (classofschoolyear);


--
-- Name: fk_857b52_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_857b52_student ON edfi.studentschoolassociation USING btree (studentusi);


--
-- Name: fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85a0eb_schoolfoodserviceprogramservicedescriptor ON edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb USING btree (schoolfoodserviceprogramservicedescriptorid);


--
-- Name: fk_85a0eb_studentschoolfoodserviceprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85a0eb_studentschoolfoodserviceprogramassociation ON edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_85e741_continuationofservicesreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_85e741_continuationofservicesreasondescriptor ON edfi.studentmigranteducationprogramassociation USING btree (continuationofservicesreasondescriptorid);


--
-- Name: fk_876ba3_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_876ba3_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_performanceleveldescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_876ba3_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_876ba3_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentperformancelevel USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_87d32b_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_87d32b_gradeleveldescriptor ON edfi.interventionstudyappropriategradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_87d32b_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_87d32b_interventionstudy ON edfi.interventionstudyappropriategradelevel USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_893629_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_addresstypedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_893629_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_localedescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_893629_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_893629_stateabbreviationdescriptor ON edfi.staffeducationorganizationcontactassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_8a9a67_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8a9a67_calendar ON edfi.calendardate USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_8adb29_studenttitleipartaprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8adb29_studenttitleipartaprogramassociation ON edfi.studenttitleipartaprogramassociationtitleipartaprogramservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_8adb29_titleipartaprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8adb29_titleipartaprogramservicedescriptor ON edfi.studenttitleipartaprogramassociationtitleipartaprogramservice USING btree (titleipartaprogramservicedescriptorid);


--
-- Name: fk_8ceb4c_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandard ON edfi.learningstandard USING btree (parentlearningstandardid);


--
-- Name: fk_8ceb4c_learningstandardcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardcategorydescriptor ON edfi.learningstandard USING btree (learningstandardcategorydescriptorid);


--
-- Name: fk_8ceb4c_learningstandardscopedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8ceb4c_learningstandardscopedescriptor ON edfi.learningstandard USING btree (learningstandardscopedescriptorid);


--
-- Name: fk_8d3fd8_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d3fd8_gradeleveldescriptor ON edfi.sectionofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_8d3fd8_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d3fd8_section ON edfi.sectionofferedgradelevel USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_8d455d_functiondimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d455d_functiondimension ON edfi.functiondimensionreportingtag USING btree (code, fiscalyear);


--
-- Name: fk_8d455d_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d455d_reportingtagdescriptor ON edfi.functiondimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_8d6383_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_parent ON edfi.surveyresponse USING btree (parentusi);


--
-- Name: fk_8d6383_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_staff ON edfi.surveyresponse USING btree (staffusi);


--
-- Name: fk_8d6383_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_student ON edfi.surveyresponse USING btree (studentusi);


--
-- Name: fk_8d6383_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d6383_survey ON edfi.surveyresponse USING btree (namespace, surveyidentifier);


--
-- Name: fk_8d650e_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_addresstypedescriptor ON edfi.parentinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_8d650e_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_countrydescriptor ON edfi.parentinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_8d650e_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8d650e_parent ON edfi.parentinternationaladdress USING btree (parentusi);


--
-- Name: fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_barriertointernetaccessinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (barriertointernetaccessinresidencedescriptorid);


--
-- Name: fk_8e1257_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_educationorganization ON edfi.studenteducationorganizationassociation USING btree (educationorganizationid);


--
-- Name: fk_8e1257_internetaccesstypeinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetaccesstypeinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetaccesstypeinresidencedescriptorid);


--
-- Name: fk_8e1257_internetperformanceinresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_internetperformanceinresidencedescriptor ON edfi.studenteducationorganizationassociation USING btree (internetperformanceinresidencedescriptorid);


--
-- Name: fk_8e1257_limitedenglishproficiencydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_limitedenglishproficiencydescriptor ON edfi.studenteducationorganizationassociation USING btree (limitedenglishproficiencydescriptorid);


--
-- Name: fk_8e1257_oldethnicitydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_oldethnicitydescriptor ON edfi.studenteducationorganizationassociation USING btree (oldethnicitydescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceaccessdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceaccessdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceaccessdescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceawayfromschooldescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: fk_8e1257_primarylearningdeviceproviderdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_primarylearningdeviceproviderdescriptor ON edfi.studenteducationorganizationassociation USING btree (primarylearningdeviceproviderdescriptorid);


--
-- Name: fk_8e1257_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_sexdescriptor ON edfi.studenteducationorganizationassociation USING btree (sexdescriptorid);


--
-- Name: fk_8e1257_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e1257_student ON edfi.studenteducationorganizationassociation USING btree (studentusi);


--
-- Name: fk_8e9d64_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e9d64_interventionstudy ON edfi.interventionstudystateabbreviation USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_8e9d64_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_8e9d64_stateabbreviationdescriptor ON edfi.interventionstudystateabbreviation USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_9046e7_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9046e7_interventionstudy ON edfi.interventionstudyuri USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_90920d_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_educationorganization ON edfi.program USING btree (educationorganizationid);


--
-- Name: fk_90920d_programtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_90920d_programtypedescriptor ON edfi.program USING btree (programtypedescriptorid);


--
-- Name: fk_92327a_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92327a_learningstandard ON edfi.learningstandardidentificationcode USING btree (learningstandardid);


--
-- Name: fk_92f7f8_grade; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_grade ON edfi.gradelearningstandardgrade USING btree (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_92f7f8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_learningstandard ON edfi.gradelearningstandardgrade USING btree (learningstandardid);


--
-- Name: fk_92f7f8_performancebaseconversiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_92f7f8_performancebaseconversiondescriptor ON edfi.gradelearningstandardgrade USING btree (performancebaseconversiondescriptorid);


--
-- Name: fk_9739a2_studenteducationorganizationassociationaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9739a2_studenteducationorganizationassociationaddress ON edfi.studenteducationorganizationassociationaddressperiod USING btree (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi);


--
-- Name: fk_98cd8a_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_98cd8a_educationcontent ON edfi.educationcontentderivativesourceeducationcontent USING btree (contentidentifier);


--
-- Name: fk_98cd8a_educationcontent1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_98cd8a_educationcontent1 ON edfi.educationcontentderivativesourceeducationcontent USING btree (derivativesourcecontentidentifier);


--
-- Name: fk_9960a9_assessmentscorerangelearningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9960a9_assessmentscorerangelearningstandard ON edfi.assessmentscorerangelearningstandardlearningstandard USING btree (assessmentidentifier, namespace, scorerangeid);


--
-- Name: fk_9960a9_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9960a9_learningstandard ON edfi.assessmentscorerangelearningstandardlearningstandard USING btree (learningstandardid);


--
-- Name: fk_9965a5_contentclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_contentclassdescriptor ON edfi.educationcontent USING btree (contentclassdescriptorid);


--
-- Name: fk_9965a5_costratedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_costratedescriptor ON edfi.educationcontent USING btree (costratedescriptorid);


--
-- Name: fk_9965a5_interactivitystyledescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_interactivitystyledescriptor ON edfi.educationcontent USING btree (interactivitystyledescriptorid);


--
-- Name: fk_9965a5_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9965a5_learningstandard ON edfi.educationcontent USING btree (learningstandardid);


--
-- Name: fk_9b6ed1_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9b6ed1_educationcontent ON edfi.educationcontentappropriatesex USING btree (contentidentifier);


--
-- Name: fk_9b6ed1_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9b6ed1_sexdescriptor ON edfi.educationcontentappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_9bbaf5_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bbaf5_school ON edfi.bellschedule USING btree (schoolid);


--
-- Name: fk_9bd9d6_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bd9d6_mediumofinstructiondescriptor ON edfi.postsecondaryinstitutionmediumofinstruction USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_9bd9d6_postsecondaryinstitution; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9bd9d6_postsecondaryinstitution ON edfi.postsecondaryinstitutionmediumofinstruction USING btree (postsecondaryinstitutionid);


--
-- Name: fk_9e377d_bellschedule; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e377d_bellschedule ON edfi.bellscheduleclassperiod USING btree (bellschedulename, schoolid);


--
-- Name: fk_9e377d_classperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e377d_classperiod ON edfi.bellscheduleclassperiod USING btree (classperiodname, schoolid);


--
-- Name: fk_9e6edd_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e6edd_diagnosisdescriptor ON edfi.interventionprescriptiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_9e6edd_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9e6edd_interventionprescription ON edfi.interventionprescriptiondiagnosis USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_9f1246_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_course ON edfi.surveycourseassociation USING btree (coursecode, educationorganizationid);


--
-- Name: fk_9f1246_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_9f1246_survey ON edfi.surveycourseassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_a165fa_learningobjectivecontentstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a165fa_learningobjectivecontentstandard ON edfi.learningobjectivecontentstandardauthor USING btree (learningobjectiveid, namespace);


--
-- Name: fk_a18fcf_studenteducationorganizationassociationstudentcharact; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a18fcf_studenteducationorganizationassociationstudentcharact ON edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf USING btree (educationorganizationid, studentcharacteristicdescriptorid, studentusi);


--
-- Name: fk_a20588_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, namespace);


--
-- Name: fk_a20588_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_assessmentreportingmethoddescriptor ON edfi.assessmentscorerangelearningstandard USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_a20588_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a20588_objectiveassessment ON edfi.assessmentscorerangelearningstandard USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_a2d4a8_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2d4a8_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationtelephone USING btree (educationorganizationid, studentusi);


--
-- Name: fk_a2d4a8_telephonenumbertypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2d4a8_telephonenumbertypedescriptor ON edfi.studenteducationorganizationassociationtelephone USING btree (telephonenumbertypedescriptorid);


--
-- Name: fk_a2fd20_disabilitydesignationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2fd20_disabilitydesignationdescriptor ON edfi.studentspecialeducationprogramassociationdisabilitydesignation USING btree (disabilitydesignationdescriptorid);


--
-- Name: fk_a2fd20_studentspecialeducationprogramassociationdisability; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a2fd20_studentspecialeducationprogramassociationdisability ON edfi.studentspecialeducationprogramassociationdisabilitydesignation USING btree (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_a3387e_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3387e_assessment ON edfi.assessmentplatformtype USING btree (assessmentidentifier, namespace);


--
-- Name: fk_a3387e_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3387e_platformtypedescriptor ON edfi.assessmentplatformtype USING btree (platformtypedescriptorid);


--
-- Name: fk_a3f725_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_achievementcategorydescriptor ON edfi.studentacademicrecorddiploma USING btree (achievementcategorydescriptorid);


--
-- Name: fk_a3f725_diplomaleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomaleveldescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomaleveldescriptorid);


--
-- Name: fk_a3f725_diplomatypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_diplomatypedescriptor ON edfi.studentacademicrecorddiploma USING btree (diplomatypedescriptorid);


--
-- Name: fk_a3f725_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a3f725_studentacademicrecord ON edfi.studentacademicrecorddiploma USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_a4a6ae_ancestryethnicorigindescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a4a6ae_ancestryethnicorigindescriptor ON edfi.staffancestryethnicorigin USING btree (ancestryethnicorigindescriptorid);


--
-- Name: fk_a4a6ae_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a4a6ae_staff ON edfi.staffancestryethnicorigin USING btree (staffusi);


--
-- Name: fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a50f80_homelessprimarynighttimeresidencedescriptor ON edfi.studenthomelessprogramassociation USING btree (homelessprimarynighttimeresidencedescriptorid);


--
-- Name: fk_a51ff9_specialeducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a51ff9_specialeducationprogramservicedescriptor ON edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 USING btree (specialeducationprogramservicedescriptorid);


--
-- Name: fk_a51ff9_studentspecialeducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a51ff9_studentspecialeducationprogramassociation ON edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_a545e5_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a545e5_disciplineincident ON edfi.disciplineincidentweapon USING btree (incidentidentifier, schoolid);


--
-- Name: fk_a545e5_weapondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a545e5_weapondescriptor ON edfi.disciplineincidentweapon USING btree (weapondescriptorid);


--
-- Name: fk_a61b72_studenteducationorganizationassociationstudentindicat; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a61b72_studenteducationorganizationassociationstudentindicat ON edfi.studenteducationorganizationassociationstudentindicatorperiod USING btree (educationorganizationid, indicatorname, studentusi);


--
-- Name: fk_a64540_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a64540_intervention ON edfi.interventionmeetingtime USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_a6a1f0_racedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a6a1f0_racedescriptor ON edfi.studenteducationorganizationassociationrace USING btree (racedescriptorid);


--
-- Name: fk_a6a1f0_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a6a1f0_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationrace USING btree (educationorganizationid, studentusi);


--
-- Name: fk_a741a8_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_countrydescriptor ON edfi.studentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_a741a8_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_identificationdocumentusedescriptor ON edfi.studentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_a741a8_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_personalinformationverificationdescriptor ON edfi.studentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_a741a8_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a741a8_student ON edfi.studentpersonalidentificationdocument USING btree (studentusi);


--
-- Name: fk_a82b93_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_addresstypedescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (addresstypedescriptorid);


--
-- Name: fk_a82b93_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_countrydescriptor ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (countrydescriptorid);


--
-- Name: fk_a82b93_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a82b93_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationinternationaladdress USING btree (educationorganizationid, studentusi);


--
-- Name: fk_a8bc47_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a8bc47_intervention ON edfi.interventionappropriatesex USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_a8bc47_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a8bc47_sexdescriptor ON edfi.interventionappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_a92ef0_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a92ef0_gradeleveldescriptor ON edfi.learningobjectivegradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_a92ef0_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a92ef0_learningobjective ON edfi.learningobjectivegradelevel USING btree (learningobjectiveid, namespace);


--
-- Name: fk_a97956_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a97956_school ON edfi.academicweek USING btree (schoolid);


--
-- Name: fk_a984df_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a984df_interventionprescription ON edfi.interventionprescriptionpopulationserved USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_a984df_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a984df_populationserveddescriptor ON edfi.interventionprescriptionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_a9c0d9_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_program ON edfi.staffprogramassociation USING btree (programeducationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_a9c0d9_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_a9c0d9_staff ON edfi.staffprogramassociation USING btree (staffusi);


--
-- Name: fk_aa5751_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aa5751_student ON edfi.studentvisa USING btree (studentusi);


--
-- Name: fk_aa5751_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aa5751_visadescriptor ON edfi.studentvisa USING btree (visadescriptorid);


--
-- Name: fk_aaa07e_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaa07e_courseoffering ON edfi.courseofferingofferedgradelevel USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_aaa07e_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaa07e_gradeleveldescriptor ON edfi.courseofferingofferedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_aaade9_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaade9_academicsubjectdescriptor ON edfi.learningstandardacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_aaade9_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_aaade9_learningstandard ON edfi.learningstandardacademicsubject USING btree (learningstandardid);


--
-- Name: fk_ab7096_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ab7096_coursetranscript ON edfi.coursetranscriptcreditcategory USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_ab7096_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ab7096_creditcategorydescriptor ON edfi.coursetranscriptcreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ae53d1_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae53d1_othernametypedescriptor ON edfi.studentothername USING btree (othernametypedescriptorid);


--
-- Name: fk_ae53d1_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae53d1_student ON edfi.studentothername USING btree (studentusi);


--
-- Name: fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae6a21_disciplineincidentparticipationcodedescriptor ON edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 USING btree (disciplineincidentparticipationcodedescriptorid);


--
-- Name: fk_ae6a21_studentdisciplineincidentbehaviorassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ae6a21_studentdisciplineincidentbehaviorassociation ON edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 USING btree (behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: fk_af7be7_gradepointaveragetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af7be7_gradepointaveragetypedescriptor ON edfi.studentacademicrecordgradepointaverage USING btree (gradepointaveragetypedescriptorid);


--
-- Name: fk_af7be7_studentacademicrecord; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af7be7_studentacademicrecord ON edfi.studentacademicrecordgradepointaverage USING btree (educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_af86db_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_disciplineincident ON edfi.staffdisciplineincidentassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_af86db_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_af86db_staff ON edfi.staffdisciplineincidentassociation USING btree (staffusi);


--
-- Name: fk_afb8b8_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_educationorganization ON edfi.studentassessmenteducationorganizationassociation USING btree (educationorganizationid);


--
-- Name: fk_afb8b8_educationorganizationassociationtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_educationorganizationassociationtypedescriptor ON edfi.studentassessmenteducationorganizationassociation USING btree (educationorganizationassociationtypedescriptorid);


--
-- Name: fk_afb8b8_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_schoolyeartype ON edfi.studentassessmenteducationorganizationassociation USING btree (schoolyear);


--
-- Name: fk_afb8b8_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afb8b8_studentassessment ON edfi.studentassessmenteducationorganizationassociation USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_afd39a_staffeducationorganizationcontactassociationaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_afd39a_staffeducationorganizationcontactassociationaddress ON edfi.staffeducationorganizationcontactassociationaddressperiod USING btree (contacttitle, educationorganizationid, staffusi);


--
-- Name: fk_b0cb9e_othernametypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b0cb9e_othernametypedescriptor ON edfi.staffothername USING btree (othernametypedescriptorid);


--
-- Name: fk_b0cb9e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b0cb9e_staff ON edfi.staffothername USING btree (staffusi);


--
-- Name: fk_b13bbd_absenceeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_absenceeventcategorydescriptor ON edfi.staffabsenceevent USING btree (absenceeventcategorydescriptorid);


--
-- Name: fk_b13bbd_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b13bbd_staff ON edfi.staffabsenceevent USING btree (staffusi);


--
-- Name: fk_b1c42b_credentialfielddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialfielddescriptor ON edfi.credential USING btree (credentialfielddescriptorid);


--
-- Name: fk_b1c42b_credentialtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_credentialtypedescriptor ON edfi.credential USING btree (credentialtypedescriptorid);


--
-- Name: fk_b1c42b_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_stateabbreviationdescriptor ON edfi.credential USING btree (stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialbasisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialbasisdescriptor ON edfi.credential USING btree (teachingcredentialbasisdescriptorid);


--
-- Name: fk_b1c42b_teachingcredentialdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c42b_teachingcredentialdescriptor ON edfi.credential USING btree (teachingcredentialdescriptorid);


--
-- Name: fk_b1c52f_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c52f_objectiveassessment ON edfi.studentassessmentstudentobjectiveassessment USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_b1c52f_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b1c52f_studentassessment ON edfi.studentassessmentstudentobjectiveassessment USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_b2bd0a_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2bd0a_educationorganization ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (educationorganizationid);


--
-- Name: fk_b2bd0a_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2bd0a_surveyresponse ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_b2e25d_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2e25d_diagnosisdescriptor ON edfi.interventiondiagnosis USING btree (diagnosisdescriptorid);


--
-- Name: fk_b2e25d_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b2e25d_intervention ON edfi.interventiondiagnosis USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_b31a96_homelessprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b31a96_homelessprogramservicedescriptor ON edfi.studenthomelessprogramassociationhomelessprogramservice USING btree (homelessprogramservicedescriptorid);


--
-- Name: fk_b31a96_studenthomelessprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b31a96_studenthomelessprogramassociation ON edfi.studenthomelessprogramassociationhomelessprogramservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_b3fd05_participationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b3fd05_participationstatusdescriptor ON edfi.generalstudentprogramassociationparticipationstatus USING btree (participationstatusdescriptorid);


--
-- Name: fk_b43eed_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b43eed_behaviordescriptor ON edfi.studentdisciplineincidentassociationbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_b43eed_studentdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b43eed_studentdisciplineincidentassociation ON edfi.studentdisciplineincidentassociationbehavior USING btree (incidentidentifier, schoolid, studentusi);


--
-- Name: fk_b50e36_additionalcredittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b50e36_additionalcredittypedescriptor ON edfi.coursetranscriptearnedadditionalcredits USING btree (additionalcredittypedescriptorid);


--
-- Name: fk_b50e36_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b50e36_coursetranscript ON edfi.coursetranscriptearnedadditionalcredits USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_b527e7_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b527e7_languageusedescriptor ON edfi.stafflanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_b527e7_stafflanguage; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b527e7_stafflanguage ON edfi.stafflanguageuse USING btree (languagedescriptorid, staffusi);


--
-- Name: fk_b5314a_projectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b5314a_projectdimension ON edfi.projectdimensionreportingtag USING btree (code, fiscalyear);


--
-- Name: fk_b5314a_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b5314a_reportingtagdescriptor ON edfi.projectdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_b6310e_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b6310e_financialcollectiondescriptor ON edfi.localactual USING btree (financialcollectiondescriptorid);


--
-- Name: fk_b6310e_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b6310e_localaccount ON edfi.localactual USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_b772b6_countrydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_countrydescriptor ON edfi.parentpersonalidentificationdocument USING btree (issuercountrydescriptorid);


--
-- Name: fk_b772b6_identificationdocumentusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_identificationdocumentusedescriptor ON edfi.parentpersonalidentificationdocument USING btree (identificationdocumentusedescriptorid);


--
-- Name: fk_b772b6_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_parent ON edfi.parentpersonalidentificationdocument USING btree (parentusi);


--
-- Name: fk_b772b6_personalinformationverificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b772b6_personalinformationverificationdescriptor ON edfi.parentpersonalidentificationdocument USING btree (personalinformationverificationdescriptorid);


--
-- Name: fk_b7f969_staffaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b7f969_staffaddress ON edfi.staffaddressperiod USING btree (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_b865d7_studentcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b865d7_studentcharacteristicdescriptor ON edfi.studenteducationorganizationassociationstudentcharacteristic USING btree (studentcharacteristicdescriptorid);


--
-- Name: fk_b865d7_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b865d7_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationstudentcharacteristic USING btree (educationorganizationid, studentusi);


--
-- Name: fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryeventcategorydescriptor ON edfi.postsecondaryevent USING btree (postsecondaryeventcategorydescriptorid);


--
-- Name: fk_b8b6d7_postsecondaryinstitution; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_postsecondaryinstitution ON edfi.postsecondaryevent USING btree (postsecondaryinstitutionid);


--
-- Name: fk_b8b6d7_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b8b6d7_student ON edfi.postsecondaryevent USING btree (studentusi);


--
-- Name: fk_b9be24_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_credential ON edfi.staffeducationorganizationassignmentassociation USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_b9be24_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_educationorganization ON edfi.staffeducationorganizationassignmentassociation USING btree (educationorganizationid);


--
-- Name: fk_b9be24_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staff ON edfi.staffeducationorganizationassignmentassociation USING btree (staffusi);


--
-- Name: fk_b9be24_staffclassificationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffclassificationdescriptor ON edfi.staffeducationorganizationassignmentassociation USING btree (staffclassificationdescriptorid);


--
-- Name: fk_b9be24_staffeducationorganizationemploymentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_b9be24_staffeducationorganizationemploymentassociation ON edfi.staffeducationorganizationassignmentassociation USING btree (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi);


--
-- Name: fk_baaa9d_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_competencyleveldescriptor ON edfi.studentlearningobjective USING btree (competencyleveldescriptorid);


--
-- Name: fk_baaa9d_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_gradingperiod ON edfi.studentlearningobjective USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_baaa9d_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_learningobjective ON edfi.studentlearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_baaa9d_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_baaa9d_student ON edfi.studentlearningobjective USING btree (studentusi);


--
-- Name: fk_bcba5c_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcba5c_staff ON edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c USING btree (staffusi);


--
-- Name: fk_bcba5c_studentspecialeducationprogramassociationspecialeduca; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcba5c_studentspecialeducationprogramassociationspecialeduca ON edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi);


--
-- Name: fk_bcbd82_balancesheetdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcbd82_balancesheetdimension ON edfi.balancesheetdimensionreportingtag USING btree (code, fiscalyear);


--
-- Name: fk_bcbd82_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bcbd82_reportingtagdescriptor ON edfi.balancesheetdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_bd89c0_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_educationorganization ON edfi.assessmentcontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_bd89c0_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bd89c0_publicationstatusdescriptor ON edfi.assessmentcontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_be1ea4_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_credittypedescriptor ON edfi.graduationplan USING btree (totalrequiredcredittypedescriptorid);


--
-- Name: fk_be1ea4_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_educationorganization ON edfi.graduationplan USING btree (educationorganizationid);


--
-- Name: fk_be1ea4_graduationplantypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_graduationplantypedescriptor ON edfi.graduationplan USING btree (graduationplantypedescriptorid);


--
-- Name: fk_be1ea4_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_be1ea4_schoolyeartype ON edfi.graduationplan USING btree (graduationschoolyear);


--
-- Name: fk_bf9d92_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_parent ON edfi.studentparentassociation USING btree (parentusi);


--
-- Name: fk_bf9d92_relationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_relationdescriptor ON edfi.studentparentassociation USING btree (relationdescriptorid);


--
-- Name: fk_bf9d92_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_bf9d92_student ON edfi.studentparentassociation USING btree (studentusi);


--
-- Name: fk_c098ce_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c098ce_reportcard ON edfi.reportcardstudentlearningobjective USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_c098ce_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c098ce_studentlearningobjective ON edfi.reportcardstudentlearningobjective USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_c0da6b_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0da6b_course ON edfi.courselearningobjective USING btree (coursecode, educationorganizationid);


--
-- Name: fk_c0da6b_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0da6b_learningobjective ON edfi.courselearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_c0e4a3_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_addresstypedescriptor ON edfi.staffaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_c0e4a3_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_localedescriptor ON edfi.staffaddress USING btree (localedescriptorid);


--
-- Name: fk_c0e4a3_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_staff ON edfi.staffaddress USING btree (staffusi);


--
-- Name: fk_c0e4a3_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c0e4a3_stateabbreviationdescriptor ON edfi.staffaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_c15030_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c15030_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationstudentidentifica_c15030 USING btree (educationorganizationid, studentusi);


--
-- Name: fk_c15030_studentidentificationsystemdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c15030_studentidentificationsystemdescriptor ON edfi.studenteducationorganizationassociationstudentidentifica_c15030 USING btree (studentidentificationsystemdescriptorid);


--
-- Name: fk_c16804_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_section ON edfi.surveysectionassociation USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_c16804_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16804_survey ON edfi.surveysectionassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_c16d6c_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16d6c_reportcard ON edfi.reportcardstudentcompetencyobjective USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_c16d6c_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c16d6c_studentcompetencyobjective ON edfi.reportcardstudentcompetencyobjective USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_c2bd3c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_assessmentreportingmethoddescriptor ON edfi.studentassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_c2bd3c_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_performanceleveldescriptor ON edfi.studentassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_c2bd3c_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2bd3c_studentassessment ON edfi.studentassessmentperformancelevel USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_c2efaa_assignmentlatestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_assignmentlatestatusdescriptor ON edfi.studentgradebookentry USING btree (assignmentlatestatusdescriptorid);


--
-- Name: fk_c2efaa_competencyleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_competencyleveldescriptor ON edfi.studentgradebookentry USING btree (competencyleveldescriptorid);


--
-- Name: fk_c2efaa_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_gradebookentry ON edfi.studentgradebookentry USING btree (gradebookentryidentifier, namespace);


--
-- Name: fk_c2efaa_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_student ON edfi.studentgradebookentry USING btree (studentusi);


--
-- Name: fk_c2efaa_submissionstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c2efaa_submissionstatusdescriptor ON edfi.studentgradebookentry USING btree (submissionstatusdescriptorid);


--
-- Name: fk_c38935_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c38935_localaccount ON edfi.localaccountreportingtag USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_c38935_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c38935_reportingtagdescriptor ON edfi.localaccountreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_c45364_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c45364_interventionstudy ON edfi.interventionstudypopulationserved USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_c45364_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c45364_populationserveddescriptor ON edfi.interventionstudypopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_c4b3e0_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c4b3e0_gradingperiod ON edfi.sessiongradingperiod USING btree (gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: fk_c4b3e0_session; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c4b3e0_session ON edfi.sessiongradingperiod USING btree (schoolid, schoolyear, sessionname);


--
-- Name: fk_c60190_achievementcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_achievementcategorydescriptor ON edfi.staffrecognition USING btree (achievementcategorydescriptorid);


--
-- Name: fk_c60190_recognitiontypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_recognitiontypedescriptor ON edfi.staffrecognition USING btree (recognitiontypedescriptorid);


--
-- Name: fk_c60190_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c60190_staff ON edfi.staffrecognition USING btree (staffusi);


--
-- Name: fk_c7b5a8_gradebookentry; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7b5a8_gradebookentry ON edfi.gradebookentrylearningstandard USING btree (gradebookentryidentifier, namespace);


--
-- Name: fk_c7b5a8_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7b5a8_learningstandard ON edfi.gradebookentrylearningstandard USING btree (learningstandardid);


--
-- Name: fk_c7db20_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7db20_intervention ON edfi.interventionlearningresourcemetadatauri USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_c7e725_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7e725_course ON edfi.courselevelcharacteristic USING btree (coursecode, educationorganizationid);


--
-- Name: fk_c7e725_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c7e725_courselevelcharacteristicdescriptor ON edfi.courselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_c99b99_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c99b99_learningobjective ON edfi.learningobjectivelearningstandard USING btree (learningobjectiveid, namespace);


--
-- Name: fk_c99b99_learningstandard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_c99b99_learningstandard ON edfi.learningobjectivelearningstandard USING btree (learningstandardid);


--
-- Name: fk_ca697a_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ca697a_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationstudentindicator USING btree (educationorganizationid, studentusi);


--
-- Name: fk_cabdcb_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cabdcb_behaviordescriptor ON edfi.disciplineincidentbehavior USING btree (behaviordescriptorid);


--
-- Name: fk_cabdcb_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cabdcb_disciplineincident ON edfi.disciplineincidentbehavior USING btree (incidentidentifier, schoolid);


--
-- Name: fk_cbeb99_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cbeb99_intervention ON edfi.interventionpopulationserved USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_cbeb99_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cbeb99_populationserveddescriptor ON edfi.interventionpopulationserved USING btree (populationserveddescriptorid);


--
-- Name: fk_cc3333_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_addresstypedescriptor ON edfi.parentaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_cc3333_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_localedescriptor ON edfi.parentaddress USING btree (localedescriptorid);


--
-- Name: fk_cc3333_parent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_parent ON edfi.parentaddress USING btree (parentusi);


--
-- Name: fk_cc3333_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_cc3333_stateabbreviationdescriptor ON edfi.parentaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_ce2080_calendar; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_calendar ON edfi.staffschoolassociation USING btree (calendarcode, schoolid, schoolyear);


--
-- Name: fk_ce2080_programassignmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_programassignmentdescriptor ON edfi.staffschoolassociation USING btree (programassignmentdescriptorid);


--
-- Name: fk_ce2080_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_school ON edfi.staffschoolassociation USING btree (schoolid);


--
-- Name: fk_ce2080_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_schoolyeartype ON edfi.staffschoolassociation USING btree (schoolyear);


--
-- Name: fk_ce2080_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ce2080_staff ON edfi.staffschoolassociation USING btree (staffusi);


--
-- Name: fk_d047f5_surveyquestionresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d047f5_surveyquestionresponse ON edfi.surveyquestionresponsevalue USING btree (namespace, questioncode, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_d2362d_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2362d_section ON edfi.studentcohortassociationsection USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_d2362d_studentcohortassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2362d_studentcohortassociation ON edfi.studentcohortassociationsection USING btree (begindate, cohortidentifier, educationorganizationid, studentusi);


--
-- Name: fk_d2c8a9_studentlearningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2c8a9_studentlearningobjective ON edfi.studentlearningobjectivestudentsectionassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: fk_d2c8a9_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d2c8a9_studentsectionassociation ON edfi.studentlearningobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_d3d793_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d3d793_program ON edfi.restrainteventprogram USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_d3d793_restraintevent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d3d793_restraintevent ON edfi.restrainteventprogram USING btree (restrainteventidentifier, schoolid, studentusi);


--
-- Name: fk_d44be7_educationorganizationaddress; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d44be7_educationorganizationaddress ON edfi.educationorganizationaddressperiod USING btree (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername);


--
-- Name: fk_d53ee9_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d53ee9_interventionstudy ON edfi.interventionstudyappropriatesex USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_d53ee9_sexdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d53ee9_sexdescriptor ON edfi.interventionstudyappropriatesex USING btree (sexdescriptorid);


--
-- Name: fk_d5d0a3_calendartypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_calendartypedescriptor ON edfi.calendar USING btree (calendartypedescriptorid);


--
-- Name: fk_d5d0a3_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_school ON edfi.calendar USING btree (schoolid);


--
-- Name: fk_d5d0a3_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d5d0a3_schoolyeartype ON edfi.calendar USING btree (schoolyear);


--
-- Name: fk_d678fa_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d678fa_educationcontent ON edfi.educationcontentlanguage USING btree (contentidentifier);


--
-- Name: fk_d678fa_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d678fa_languagedescriptor ON edfi.educationcontentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d891fb_academicsubjectdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d891fb_academicsubjectdescriptor ON edfi.staffschoolassociationacademicsubject USING btree (academicsubjectdescriptorid);


--
-- Name: fk_d891fb_staffschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d891fb_staffschoolassociation ON edfi.staffschoolassociationacademicsubject USING btree (programassignmentdescriptorid, schoolid, staffusi);


--
-- Name: fk_d90abb_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d90abb_assessment ON edfi.assessmentlanguage USING btree (assessmentidentifier, namespace);


--
-- Name: fk_d90abb_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d90abb_languagedescriptor ON edfi.assessmentlanguage USING btree (languagedescriptorid);


--
-- Name: fk_d92986_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_deliverymethoddescriptor ON edfi.interventionstudy USING btree (deliverymethoddescriptorid);


--
-- Name: fk_d92986_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_educationorganization ON edfi.interventionstudy USING btree (educationorganizationid);


--
-- Name: fk_d92986_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionclassdescriptor ON edfi.interventionstudy USING btree (interventionclassdescriptorid);


--
-- Name: fk_d92986_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d92986_interventionprescription ON edfi.interventionstudy USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_d93663_electronicmailtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d93663_electronicmailtypedescriptor ON edfi.staffelectronicmail USING btree (electronicmailtypedescriptorid);


--
-- Name: fk_d93663_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d93663_staff ON edfi.staffelectronicmail USING btree (staffusi);


--
-- Name: fk_d98560_assessmentitem; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d98560_assessmentitem ON edfi.objectiveassessmentassessmentitem USING btree (assessmentidentifier, assessmentitemidentificationcode, namespace);


--
-- Name: fk_d98560_objectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d98560_objectiveassessment ON edfi.objectiveassessmentassessmentitem USING btree (assessmentidentifier, identificationcode, namespace);


--
-- Name: fk_d9dcd7_migranteducationprogramservicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9dcd7_migranteducationprogramservicedescriptor ON edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 USING btree (migranteducationprogramservicedescriptorid);


--
-- Name: fk_d9dcd7_studentmigranteducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_d9dcd7_studentmigranteducationprogramassociation ON edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7 USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_dafcc7_course; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dafcc7_course ON edfi.graduationplancreditsbycoursecourse USING btree (coursecode, courseeducationorganizationid);


--
-- Name: fk_dafcc7_graduationplancreditsbycourse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dafcc7_graduationplancreditsbycourse ON edfi.graduationplancreditsbycoursecourse USING btree (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_db9e7c_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_assessmentreportingmethoddescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_db9e7c_graduationplanrequiredassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_graduationplanrequiredassessment ON edfi.graduationplanrequiredassessmentscore USING btree (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace);


--
-- Name: fk_db9e7c_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_db9e7c_resultdatatypetypedescriptor ON edfi.graduationplanrequiredassessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dc3dcf_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessment ON edfi.assessmentitem USING btree (assessmentidentifier, namespace);


--
-- Name: fk_dc3dcf_assessmentitemcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dc3dcf_assessmentitemcategorydescriptor ON edfi.assessmentitem USING btree (assessmentitemcategorydescriptorid);


--
-- Name: fk_dde098_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_educationorganization ON edfi.educationorganizationindicator USING btree (educationorganizationid);


--
-- Name: fk_dde098_indicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatordescriptor ON edfi.educationorganizationindicator USING btree (indicatordescriptorid);


--
-- Name: fk_dde098_indicatorgroupdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorgroupdescriptor ON edfi.educationorganizationindicator USING btree (indicatorgroupdescriptorid);


--
-- Name: fk_dde098_indicatorleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dde098_indicatorleveldescriptor ON edfi.educationorganizationindicator USING btree (indicatorleveldescriptorid);


--
-- Name: fk_ddfc9b_creditcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_creditcategorydescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (creditcategorydescriptorid);


--
-- Name: fk_ddfc9b_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_credittypedescriptor ON edfi.graduationplancreditsbycreditcategory USING btree (credittypedescriptorid);


--
-- Name: fk_ddfc9b_graduationplan; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ddfc9b_graduationplan ON edfi.graduationplancreditsbycreditcategory USING btree (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: fk_de959d_accommodationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_de959d_accommodationdescriptor ON edfi.studentassessmentaccommodation USING btree (accommodationdescriptorid);


--
-- Name: fk_de959d_studentassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_de959d_studentassessment ON edfi.studentassessmentaccommodation USING btree (assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_debd4f_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staff ON edfi.staffleave USING btree (staffusi);


--
-- Name: fk_debd4f_staffleaveeventcategorydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_debd4f_staffleaveeventcategorydescriptor ON edfi.staffleave USING btree (staffleaveeventcategorydescriptorid);


--
-- Name: fk_df7331_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_assessment ON edfi.assessmentscore USING btree (assessmentidentifier, namespace);


--
-- Name: fk_df7331_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_assessmentreportingmethoddescriptor ON edfi.assessmentscore USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_df7331_resultdatatypetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_df7331_resultdatatypetypedescriptor ON edfi.assessmentscore USING btree (resultdatatypetypedescriptorid);


--
-- Name: fk_dfca5d_courseoffering; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_courseoffering ON edfi.section USING btree (localcoursecode, schoolid, schoolyear, sessionname);


--
-- Name: fk_dfca5d_credittypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_credittypedescriptor ON edfi.section USING btree (availablecredittypedescriptorid);


--
-- Name: fk_dfca5d_educationalenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_educationalenvironmentdescriptor ON edfi.section USING btree (educationalenvironmentdescriptorid);


--
-- Name: fk_dfca5d_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_languagedescriptor ON edfi.section USING btree (instructionlanguagedescriptorid);


--
-- Name: fk_dfca5d_location; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_location ON edfi.section USING btree (locationclassroomidentificationcode, locationschoolid);


--
-- Name: fk_dfca5d_mediumofinstructiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_mediumofinstructiondescriptor ON edfi.section USING btree (mediumofinstructiondescriptorid);


--
-- Name: fk_dfca5d_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_populationserveddescriptor ON edfi.section USING btree (populationserveddescriptorid);


--
-- Name: fk_dfca5d_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_dfca5d_school ON edfi.section USING btree (locationschoolid);


--
-- Name: fk_e12298_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e12298_interventionprescription ON edfi.interventionprescriptionlearningresourcemetadatauri USING btree (educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e19c72_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e19c72_gradeleveldescriptor ON edfi.openstaffpositioninstructionalgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e19c72_openstaffposition; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e19c72_openstaffposition ON edfi.openstaffpositioninstructionalgradelevel USING btree (educationorganizationid, requisitionnumber);


--
-- Name: fk_e232ae_restraintevent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e232ae_restraintevent ON edfi.restrainteventreason USING btree (restrainteventidentifier, schoolid, studentusi);


--
-- Name: fk_e232ae_restrainteventreasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e232ae_restrainteventreasondescriptor ON edfi.restrainteventreason USING btree (restrainteventreasondescriptorid);


--
-- Name: fk_e27213_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e27213_staff ON edfi.staffvisa USING btree (staffusi);


--
-- Name: fk_e27213_visadescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e27213_visadescriptor ON edfi.staffvisa USING btree (visadescriptorid);


--
-- Name: fk_e3e5a4_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_program ON edfi.surveyprogramassociation USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_e3e5a4_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e3e5a4_survey ON edfi.surveyprogramassociation USING btree (namespace, surveyidentifier);


--
-- Name: fk_e45c0b_incidentlocationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_incidentlocationdescriptor ON edfi.disciplineincident USING btree (incidentlocationdescriptorid);


--
-- Name: fk_e45c0b_reporterdescriptiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_reporterdescriptiondescriptor ON edfi.disciplineincident USING btree (reporterdescriptiondescriptorid);


--
-- Name: fk_e45c0b_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_school ON edfi.disciplineincident USING btree (schoolid);


--
-- Name: fk_e45c0b_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e45c0b_staff ON edfi.disciplineincident USING btree (staffusi);


--
-- Name: fk_e5572a_survey; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e5572a_survey ON edfi.surveysection USING btree (namespace, surveyidentifier);


--
-- Name: fk_e670ae_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_educationorganization ON edfi.educationorganizationinterventionprescriptionassociation USING btree (educationorganizationid);


--
-- Name: fk_e670ae_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e670ae_interventionprescription ON edfi.educationorganizationinterventionprescriptionassociation USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e77b10_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e77b10_staff ON edfi.stafftribalaffiliation USING btree (staffusi);


--
-- Name: fk_e77b10_tribalaffiliationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e77b10_tribalaffiliationdescriptor ON edfi.stafftribalaffiliation USING btree (tribalaffiliationdescriptorid);


--
-- Name: fk_e79fe2_intervention; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e79fe2_intervention ON edfi.interventioninterventionprescription USING btree (educationorganizationid, interventionidentificationcode);


--
-- Name: fk_e79fe2_interventionprescription; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e79fe2_interventionprescription ON edfi.interventioninterventionprescription USING btree (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: fk_e811ad_coursetranscript; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e811ad_coursetranscript ON edfi.coursetranscriptpartialcoursetranscriptawards USING btree (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: fk_e811ad_methodcreditearneddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e811ad_methodcreditearneddescriptor ON edfi.coursetranscriptpartialcoursetranscriptawards USING btree (methodcreditearneddescriptorid);


--
-- Name: fk_e83625_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e83625_assessment ON edfi.assessmentassessedgradelevel USING btree (assessmentidentifier, namespace);


--
-- Name: fk_e83625_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e83625_gradeleveldescriptor ON edfi.assessmentassessedgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_e88dea_networkpurposedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e88dea_networkpurposedescriptor ON edfi.educationorganizationnetwork USING btree (networkpurposedescriptorid);


--
-- Name: fk_e93bc3_deliverymethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_deliverymethoddescriptor ON edfi.interventionprescription USING btree (deliverymethoddescriptorid);


--
-- Name: fk_e93bc3_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_educationorganization ON edfi.interventionprescription USING btree (educationorganizationid);


--
-- Name: fk_e93bc3_interventionclassdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e93bc3_interventionclassdescriptor ON edfi.interventionprescription USING btree (interventionclassdescriptorid);


--
-- Name: fk_e943d3_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e943d3_program ON edfi.programservice USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_e943d3_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_e943d3_servicedescriptor ON edfi.programservice USING btree (servicedescriptorid);


--
-- Name: fk_ea526f_financialcollectiondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ea526f_financialcollectiondescriptor ON edfi.localencumbrance USING btree (financialcollectiondescriptorid);


--
-- Name: fk_ea526f_localaccount; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ea526f_localaccount ON edfi.localencumbrance USING btree (accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: fk_eb5c90_servicedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eb5c90_servicedescriptor ON edfi.studentcteprogramassociationservice USING btree (servicedescriptorid);


--
-- Name: fk_eb5c90_studentcteprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eb5c90_studentcteprogramassociation ON edfi.studentcteprogramassociationservice USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_ec1992_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_educationorganization ON edfi.reportcard USING btree (educationorganizationid);


--
-- Name: fk_ec1992_gradingperiod; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_gradingperiod ON edfi.reportcard USING btree (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear);


--
-- Name: fk_ec1992_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ec1992_student ON edfi.reportcard USING btree (studentusi);


--
-- Name: fk_eddd02_surveyquestion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyquestion ON edfi.surveyquestionresponse USING btree (namespace, questioncode, surveyidentifier);


--
-- Name: fk_eddd02_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eddd02_surveyresponse ON edfi.surveyquestionresponse USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_ee3b2a_administrationenvironmentdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_administrationenvironmentdescriptor ON edfi.studentassessment USING btree (administrationenvironmentdescriptorid);


--
-- Name: fk_ee3b2a_assessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_assessment ON edfi.studentassessment USING btree (assessmentidentifier, namespace);


--
-- Name: fk_ee3b2a_eventcircumstancedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_eventcircumstancedescriptor ON edfi.studentassessment USING btree (eventcircumstancedescriptorid);


--
-- Name: fk_ee3b2a_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_gradeleveldescriptor ON edfi.studentassessment USING btree (whenassessedgradeleveldescriptorid);


--
-- Name: fk_ee3b2a_languagedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_languagedescriptor ON edfi.studentassessment USING btree (administrationlanguagedescriptorid);


--
-- Name: fk_ee3b2a_platformtypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_platformtypedescriptor ON edfi.studentassessment USING btree (platformtypedescriptorid);


--
-- Name: fk_ee3b2a_reasonnottesteddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_reasonnottesteddescriptor ON edfi.studentassessment USING btree (reasonnottesteddescriptorid);


--
-- Name: fk_ee3b2a_retestindicatordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_retestindicatordescriptor ON edfi.studentassessment USING btree (retestindicatordescriptorid);


--
-- Name: fk_ee3b2a_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_school ON edfi.studentassessment USING btree (reportedschoolid);


--
-- Name: fk_ee3b2a_schoolyeartype; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_schoolyeartype ON edfi.studentassessment USING btree (schoolyear);


--
-- Name: fk_ee3b2a_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee3b2a_student ON edfi.studentassessment USING btree (studentusi);


--
-- Name: fk_ee50f2_careerpathwaydescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee50f2_careerpathwaydescriptor ON edfi.studentcteprogramassociationcteprogram USING btree (careerpathwaydescriptorid);


--
-- Name: fk_ee50f2_studentcteprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee50f2_studentcteprogramassociation ON edfi.studentcteprogramassociationcteprogram USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: fk_ee68ed_studentcompetencyobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee68ed_studentcompetencyobjective ON edfi.studentcompetencyobjectivestudentsectionassociation USING btree (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: fk_ee68ed_studentsectionassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ee68ed_studentsectionassociation ON edfi.studentcompetencyobjectivestudentsectionassociation USING btree (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_disciplineactionlengthdifferencereasondescriptor ON edfi.disciplineaction USING btree (disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: fk_eec7b6_school; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school ON edfi.disciplineaction USING btree (responsibilityschoolid);


--
-- Name: fk_eec7b6_school1; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_school1 ON edfi.disciplineaction USING btree (assignmentschoolid);


--
-- Name: fk_eec7b6_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_eec7b6_student ON edfi.disciplineaction USING btree (studentusi);


--
-- Name: fk_ef0ece_disciplineaction; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef0ece_disciplineaction ON edfi.disciplineactionstudentdisciplineincidentassociation USING btree (disciplineactionidentifier, disciplinedate, studentusi);


--
-- Name: fk_ef0ece_studentdisciplineincidentassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef0ece_studentdisciplineincidentassociation ON edfi.disciplineactionstudentdisciplineincidentassociation USING btree (incidentidentifier, schoolid, studentusi);


--
-- Name: fk_ef90b6_diagnosisdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_diagnosisdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (diagnosisdescriptorid);


--
-- Name: fk_ef90b6_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_gradeleveldescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (gradeleveldescriptorid);


--
-- Name: fk_ef90b6_interventioneffectivenessratingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_interventioneffectivenessratingdescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (interventioneffectivenessratingdescriptorid);


--
-- Name: fk_ef90b6_interventionstudy; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_interventionstudy ON edfi.interventionstudyinterventioneffectiveness USING btree (educationorganizationid, interventionstudyidentificationcode);


--
-- Name: fk_ef90b6_populationserveddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_ef90b6_populationserveddescriptor ON edfi.interventionstudyinterventioneffectiveness USING btree (populationserveddescriptorid);


--
-- Name: fk_f05a16_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f05a16_credential ON edfi.credentialgradelevel USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_f05a16_gradeleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f05a16_gradeleveldescriptor ON edfi.credentialgradelevel USING btree (gradeleveldescriptorid);


--
-- Name: fk_f092ff_communityprovider; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_communityprovider ON edfi.communityproviderlicense USING btree (communityproviderid);


--
-- Name: fk_f092ff_licensestatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensestatusdescriptor ON edfi.communityproviderlicense USING btree (licensestatusdescriptorid);


--
-- Name: fk_f092ff_licensetypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f092ff_licensetypedescriptor ON edfi.communityproviderlicense USING btree (licensetypedescriptorid);


--
-- Name: fk_f203d3_grade; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f203d3_grade ON edfi.reportcardgrade USING btree (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi);


--
-- Name: fk_f203d3_reportcard; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f203d3_reportcard ON edfi.reportcardgrade USING btree (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: fk_f221cc_courselevelcharacteristicdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f221cc_courselevelcharacteristicdescriptor ON edfi.sectioncourselevelcharacteristic USING btree (courselevelcharacteristicdescriptorid);


--
-- Name: fk_f221cc_section; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f221cc_section ON edfi.sectioncourselevelcharacteristic USING btree (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname);


--
-- Name: fk_f32347_assessmentreportingmethoddescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_assessmentreportingmethoddescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (assessmentreportingmethoddescriptorid);


--
-- Name: fk_f32347_performanceleveldescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_performanceleveldescriptor ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (performanceleveldescriptorid);


--
-- Name: fk_f32347_studentassessmentstudentobjectiveassessment; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f32347_studentassessmentstudentobjectiveassessment ON edfi.studentassessmentstudentobjectiveassessmentperformancelevel USING btree (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi);


--
-- Name: fk_f3917b_credential; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3917b_credential ON edfi.staffcredential USING btree (credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: fk_f3917b_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f3917b_staff ON edfi.staffcredential USING btree (staffusi);


--
-- Name: fk_f4934f_behaviordescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_behaviordescriptor ON edfi.studentdisciplineincidentbehaviorassociation USING btree (behaviordescriptorid);


--
-- Name: fk_f4934f_disciplineincident; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_disciplineincident ON edfi.studentdisciplineincidentbehaviorassociation USING btree (incidentidentifier, schoolid);


--
-- Name: fk_f4934f_student; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f4934f_student ON edfi.studentdisciplineincidentbehaviorassociation USING btree (studentusi);


--
-- Name: fk_f5911f_learningobjective; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5911f_learningobjective ON edfi.programlearningobjective USING btree (learningobjectiveid, namespace);


--
-- Name: fk_f5911f_program; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5911f_program ON edfi.programlearningobjective USING btree (educationorganizationid, programname, programtypedescriptorid);


--
-- Name: fk_f5b9f6_educationplandescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5b9f6_educationplandescriptor ON edfi.studentschoolassociationeducationplan USING btree (educationplandescriptorid);


--
-- Name: fk_f5b9f6_studentschoolassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f5b9f6_studentschoolassociation ON edfi.studentschoolassociationeducationplan USING btree (entrydate, schoolid, studentusi);


--
-- Name: fk_f605af_educationcontent; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f605af_educationcontent ON edfi.educationcontentauthor USING btree (contentidentifier);


--
-- Name: fk_f67c61_languageusedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f67c61_languageusedescriptor ON edfi.parentlanguageuse USING btree (languageusedescriptorid);


--
-- Name: fk_f67c61_parentlanguage; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f67c61_parentlanguage ON edfi.parentlanguageuse USING btree (languagedescriptorid, parentusi);


--
-- Name: fk_f86fd9_specialeducationsettingdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f86fd9_specialeducationsettingdescriptor ON edfi.studentspecialeducationprogramassociation USING btree (specialeducationsettingdescriptorid);


--
-- Name: fk_f9457e_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_staff ON edfi.surveyresponsestafftargetassociation USING btree (staffusi);


--
-- Name: fk_f9457e_surveyresponse; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9457e_surveyresponse ON edfi.surveyresponsestafftargetassociation USING btree (namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: fk_f99184_educationorganization; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f99184_educationorganization ON edfi.learningobjectivecontentstandard USING btree (mandatingeducationorganizationid);


--
-- Name: fk_f99184_publicationstatusdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f99184_publicationstatusdescriptor ON edfi.learningobjectivecontentstandard USING btree (publicationstatusdescriptorid);


--
-- Name: fk_f9e163_addresstypedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_addresstypedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (addresstypedescriptorid);


--
-- Name: fk_f9e163_localedescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_localedescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (localedescriptorid);


--
-- Name: fk_f9e163_stateabbreviationdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_stateabbreviationdescriptor ON edfi.studenteducationorganizationassociationaddress USING btree (stateabbreviationdescriptorid);


--
-- Name: fk_f9e163_studenteducationorganizationassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_f9e163_studenteducationorganizationassociation ON edfi.studenteducationorganizationassociationaddress USING btree (educationorganizationid, studentusi);


--
-- Name: fk_fda3b7_objectdimension; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fda3b7_objectdimension ON edfi.objectdimensionreportingtag USING btree (code, fiscalyear);


--
-- Name: fk_fda3b7_reportingtagdescriptor; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fda3b7_reportingtagdescriptor ON edfi.objectdimensionreportingtag USING btree (reportingtagdescriptorid);


--
-- Name: fk_fece89_staff; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fece89_staff ON edfi.studentspecialeducationprogramassociationserviceprovider USING btree (staffusi);


--
-- Name: fk_fece89_studentspecialeducationprogramassociation; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX fk_fece89_studentspecialeducationprogramassociation ON edfi.studentspecialeducationprogramassociationserviceprovider USING btree (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: parent_ui_parentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX parent_ui_parentuniqueid ON edfi.parent USING btree (parentuniqueid);


--
-- Name: staff_ui_staffuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX staff_ui_staffuniqueid ON edfi.staff USING btree (staffuniqueid);


--
-- Name: student_ui_studentuniqueid; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX student_ui_studentuniqueid ON edfi.student USING btree (studentuniqueid);


--
-- Name: ux_000683_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_000683_changeversion ON edfi.localbudget USING btree (changeversion);


--
-- Name: ux_000683_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_000683_id ON edfi.localbudget USING btree (id);


--
-- Name: ux_01fe80_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_01fe80_changeversion ON edfi.classperiod USING btree (changeversion);


--
-- Name: ux_01fe80_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_01fe80_id ON edfi.classperiod USING btree (id);


--
-- Name: ux_0325c5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0325c5_changeversion ON edfi.courseoffering USING btree (changeversion);


--
-- Name: ux_0325c5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0325c5_id ON edfi.courseoffering USING btree (id);


--
-- Name: ux_0516f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0516f9_changeversion ON edfi.generalstudentprogramassociation USING btree (changeversion);


--
-- Name: ux_0516f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0516f9_id ON edfi.generalstudentprogramassociation USING btree (id);


--
-- Name: ux_0fae05_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0fae05_changeversion ON edfi.intervention USING btree (changeversion);


--
-- Name: ux_0fae05_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0fae05_id ON edfi.intervention USING btree (id);


--
-- Name: ux_0ff8d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_0ff8d6_changeversion ON edfi.studentacademicrecord USING btree (changeversion);


--
-- Name: ux_0ff8d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_0ff8d6_id ON edfi.studentacademicrecord USING btree (id);


--
-- Name: ux_11f7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_11f7b6_changeversion ON edfi.feederschoolassociation USING btree (changeversion);


--
-- Name: ux_11f7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_11f7b6_id ON edfi.feederschoolassociation USING btree (id);


--
-- Name: ux_131e2b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_131e2b_changeversion ON edfi.chartofaccount USING btree (changeversion);


--
-- Name: ux_131e2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_131e2b_id ON edfi.chartofaccount USING btree (id);


--
-- Name: ux_15b619_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_15b619_changeversion ON edfi.location USING btree (changeversion);


--
-- Name: ux_15b619_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_15b619_id ON edfi.location USING btree (id);


--
-- Name: ux_170747_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_170747_changeversion ON edfi.staffcohortassociation USING btree (changeversion);


--
-- Name: ux_170747_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_170747_id ON edfi.staffcohortassociation USING btree (id);


--
-- Name: ux_17c02a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_17c02a_changeversion ON edfi.learningstandardequivalenceassociation USING btree (changeversion);


--
-- Name: ux_17c02a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_17c02a_id ON edfi.learningstandardequivalenceassociation USING btree (id);


--
-- Name: ux_19c6d6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_19c6d6_changeversion ON edfi.cohort USING btree (changeversion);


--
-- Name: ux_19c6d6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_19c6d6_id ON edfi.cohort USING btree (id);


--
-- Name: ux_1bb88c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_1bb88c_changeversion ON edfi.surveyquestion USING btree (changeversion);


--
-- Name: ux_1bb88c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_1bb88c_id ON edfi.surveyquestion USING btree (id);


--
-- Name: ux_2096ce_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2096ce_changeversion ON edfi.course USING btree (changeversion);


--
-- Name: ux_2096ce_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2096ce_id ON edfi.course USING btree (id);


--
-- Name: ux_211bb3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_211bb3_changeversion ON edfi.survey USING btree (changeversion);


--
-- Name: ux_211bb3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_211bb3_id ON edfi.survey USING btree (id);


--
-- Name: ux_2189c3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2189c3_changeversion ON edfi.surveysectionresponse USING btree (changeversion);


--
-- Name: ux_2189c3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2189c3_id ON edfi.surveysectionresponse USING btree (id);


--
-- Name: ux_219915_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_219915_changeversion ON edfi.descriptor USING btree (changeversion);


--
-- Name: ux_219915_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_219915_id ON edfi.descriptor USING btree (id);


--
-- Name: ux_252151_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_252151_changeversion ON edfi.educationorganizationnetworkassociation USING btree (changeversion);


--
-- Name: ux_252151_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_252151_id ON edfi.educationorganizationnetworkassociation USING btree (id);


--
-- Name: ux_25cb9c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_25cb9c_changeversion ON edfi.studentinterventionassociation USING btree (changeversion);


--
-- Name: ux_25cb9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_25cb9c_id ON edfi.studentinterventionassociation USING btree (id);


--
-- Name: ux_269e10_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_269e10_changeversion ON edfi.objectiveassessment USING btree (changeversion);


--
-- Name: ux_269e10_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_269e10_id ON edfi.objectiveassessment USING btree (id);


--
-- Name: ux_28b7c4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_28b7c4_changeversion ON edfi.operationalunitdimension USING btree (changeversion);


--
-- Name: ux_28b7c4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_28b7c4_id ON edfi.operationalunitdimension USING btree (id);


--
-- Name: ux_2a164d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2a164d_changeversion ON edfi.student USING btree (changeversion);


--
-- Name: ux_2a164d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2a164d_id ON edfi.student USING btree (id);


--
-- Name: ux_2d3c0c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_2d3c0c_changeversion ON edfi.accountabilityrating USING btree (changeversion);


--
-- Name: ux_2d3c0c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_2d3c0c_id ON edfi.accountabilityrating USING btree (id);


--
-- Name: ux_317aeb_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_317aeb_changeversion ON edfi.studentprogramattendanceevent USING btree (changeversion);


--
-- Name: ux_317aeb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_317aeb_id ON edfi.studentprogramattendanceevent USING btree (id);


--
-- Name: ux_32eddb_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_32eddb_changeversion ON edfi.localaccount USING btree (changeversion);


--
-- Name: ux_32eddb_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_32eddb_id ON edfi.localaccount USING btree (id);


--
-- Name: ux_369ddc_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_369ddc_changeversion ON edfi.studentcohortassociation USING btree (changeversion);


--
-- Name: ux_369ddc_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_369ddc_id ON edfi.studentcohortassociation USING btree (id);


--
-- Name: ux_3800be_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3800be_changeversion ON edfi.restraintevent USING btree (changeversion);


--
-- Name: ux_3800be_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3800be_id ON edfi.restraintevent USING btree (id);


--
-- Name: ux_39073d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39073d_changeversion ON edfi.surveysectionresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_39073d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39073d_id ON edfi.surveysectionresponsestafftargetassociation USING btree (id);


--
-- Name: ux_395c07_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_395c07_changeversion ON edfi.studentcompetencyobjective USING btree (changeversion);


--
-- Name: ux_395c07_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_395c07_id ON edfi.studentcompetencyobjective USING btree (id);


--
-- Name: ux_39aa3c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_39aa3c_changeversion ON edfi.studentsectionassociation USING btree (changeversion);


--
-- Name: ux_39aa3c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_39aa3c_id ON edfi.studentsectionassociation USING btree (id);


--
-- Name: ux_3cc1d4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_3cc1d4_changeversion ON edfi.openstaffposition USING btree (changeversion);


--
-- Name: ux_3cc1d4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_3cc1d4_id ON edfi.openstaffposition USING btree (id);


--
-- Name: ux_4100ee_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4100ee_changeversion ON edfi.objectdimension USING btree (changeversion);


--
-- Name: ux_4100ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4100ee_id ON edfi.objectdimension USING btree (id);


--
-- Name: ux_42aa64_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_42aa64_changeversion ON edfi.studenteducationorganizationresponsibilityassociation USING btree (changeversion);


--
-- Name: ux_42aa64_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_42aa64_id ON edfi.studenteducationorganizationresponsibilityassociation USING btree (id);


--
-- Name: ux_4525e6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4525e6_changeversion ON edfi.educationorganization USING btree (changeversion);


--
-- Name: ux_4525e6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4525e6_id ON edfi.educationorganization USING btree (id);


--
-- Name: ux_464d7a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_464d7a_changeversion ON edfi.schoolyeartype USING btree (changeversion);


--
-- Name: ux_464d7a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_464d7a_id ON edfi.schoolyeartype USING btree (id);


--
-- Name: ux_466cfa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_466cfa_changeversion ON edfi.gradebookentry USING btree (changeversion);


--
-- Name: ux_466cfa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_466cfa_id ON edfi.gradebookentry USING btree (id);


--
-- Name: ux_46e5c2_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_46e5c2_changeversion ON edfi.localpayroll USING btree (changeversion);


--
-- Name: ux_46e5c2_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_46e5c2_id ON edfi.localpayroll USING btree (id);


--
-- Name: ux_4b43da_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4b43da_changeversion ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (changeversion);


--
-- Name: ux_4b43da_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4b43da_id ON edfi.studentdisciplineincidentnonoffenderassociation USING btree (id);


--
-- Name: ux_4d9b4a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4d9b4a_changeversion ON edfi.localcontractedstaff USING btree (changeversion);


--
-- Name: ux_4d9b4a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4d9b4a_id ON edfi.localcontractedstaff USING btree (id);


--
-- Name: ux_4e79b9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_4e79b9_changeversion ON edfi.staffeducationorganizationemploymentassociation USING btree (changeversion);


--
-- Name: ux_4e79b9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_4e79b9_id ON edfi.staffeducationorganizationemploymentassociation USING btree (id);


--
-- Name: ux_515cb5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_515cb5_changeversion ON edfi.staffsectionassociation USING btree (changeversion);


--
-- Name: ux_515cb5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_515cb5_id ON edfi.staffsectionassociation USING btree (id);


--
-- Name: ux_588d15_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_588d15_changeversion ON edfi.learningobjective USING btree (changeversion);


--
-- Name: ux_588d15_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_588d15_id ON edfi.learningobjective USING btree (id);


--
-- Name: ux_5a18f9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5a18f9_changeversion ON edfi.gradingperiod USING btree (changeversion);


--
-- Name: ux_5a18f9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5a18f9_id ON edfi.gradingperiod USING btree (id);


--
-- Name: ux_5e9932_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5e9932_changeversion ON edfi.competencyobjective USING btree (changeversion);


--
-- Name: ux_5e9932_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5e9932_id ON edfi.competencyobjective USING btree (id);


--
-- Name: ux_5f7953_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_5f7953_changeversion ON edfi.parent USING btree (changeversion);


--
-- Name: ux_5f7953_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_5f7953_id ON edfi.parent USING btree (id);


--
-- Name: ux_6007db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6007db_changeversion ON edfi.person USING btree (changeversion);


--
-- Name: ux_6007db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6007db_id ON edfi.person USING btree (id);


--
-- Name: ux_61b087_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_61b087_changeversion ON edfi.studentsectionattendanceevent USING btree (changeversion);


--
-- Name: ux_61b087_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_61b087_id ON edfi.studentsectionattendanceevent USING btree (id);


--
-- Name: ux_631023_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_631023_changeversion ON edfi.studentinterventionattendanceevent USING btree (changeversion);


--
-- Name: ux_631023_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_631023_id ON edfi.studentinterventionattendanceevent USING btree (id);


--
-- Name: ux_679174_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_679174_changeversion ON edfi.studentdisciplineincidentassociation USING btree (changeversion);


--
-- Name: ux_679174_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_679174_id ON edfi.studentdisciplineincidentassociation USING btree (id);


--
-- Name: ux_681927_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_681927_changeversion ON edfi.staff USING btree (changeversion);


--
-- Name: ux_681927_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_681927_id ON edfi.staff USING btree (id);


--
-- Name: ux_6959b4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6959b4_changeversion ON edfi.session USING btree (changeversion);


--
-- Name: ux_6959b4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6959b4_id ON edfi.session USING btree (id);


--
-- Name: ux_6acf2b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_6acf2b_changeversion ON edfi.coursetranscript USING btree (changeversion);


--
-- Name: ux_6acf2b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_6acf2b_id ON edfi.coursetranscript USING btree (id);


--
-- Name: ux_730be1_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_730be1_changeversion ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_730be1_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_730be1_id ON edfi.surveysectionresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_735dd8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_735dd8_changeversion ON edfi.staffeducationorganizationcontactassociation USING btree (changeversion);


--
-- Name: ux_735dd8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_735dd8_id ON edfi.staffeducationorganizationcontactassociation USING btree (id);


--
-- Name: ux_74e4e5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_74e4e5_changeversion ON edfi.educationorganizationpeerassociation USING btree (changeversion);


--
-- Name: ux_74e4e5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_74e4e5_id ON edfi.educationorganizationpeerassociation USING btree (id);


--
-- Name: ux_7808ee_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7808ee_changeversion ON edfi.assessment USING btree (changeversion);


--
-- Name: ux_7808ee_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7808ee_id ON edfi.assessment USING btree (id);


--
-- Name: ux_78fd7f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_78fd7f_changeversion ON edfi.studentschoolattendanceevent USING btree (changeversion);


--
-- Name: ux_78fd7f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_78fd7f_id ON edfi.studentschoolattendanceevent USING btree (id);


--
-- Name: ux_7bbbe7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_7bbbe7_changeversion ON edfi.sectionattendancetakenevent USING btree (changeversion);


--
-- Name: ux_7bbbe7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_7bbbe7_id ON edfi.sectionattendancetakenevent USING btree (id);


--
-- Name: ux_839e20_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_839e20_changeversion ON edfi.grade USING btree (changeversion);


--
-- Name: ux_839e20_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_839e20_id ON edfi.grade USING btree (id);


--
-- Name: ux_857b52_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_857b52_changeversion ON edfi.studentschoolassociation USING btree (changeversion);


--
-- Name: ux_857b52_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_857b52_id ON edfi.studentschoolassociation USING btree (id);


--
-- Name: ux_8a9a67_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8a9a67_changeversion ON edfi.calendardate USING btree (changeversion);


--
-- Name: ux_8a9a67_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8a9a67_id ON edfi.calendardate USING btree (id);


--
-- Name: ux_8ceb4c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8ceb4c_changeversion ON edfi.learningstandard USING btree (changeversion);


--
-- Name: ux_8ceb4c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8ceb4c_id ON edfi.learningstandard USING btree (id);


--
-- Name: ux_8d6383_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8d6383_changeversion ON edfi.surveyresponse USING btree (changeversion);


--
-- Name: ux_8d6383_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8d6383_id ON edfi.surveyresponse USING btree (id);


--
-- Name: ux_8e1257_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_8e1257_changeversion ON edfi.studenteducationorganizationassociation USING btree (changeversion);


--
-- Name: ux_8e1257_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_8e1257_id ON edfi.studenteducationorganizationassociation USING btree (id);


--
-- Name: ux_90920d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_90920d_changeversion ON edfi.program USING btree (changeversion);


--
-- Name: ux_90920d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_90920d_id ON edfi.program USING btree (id);


--
-- Name: ux_937af8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_937af8_changeversion ON edfi.funddimension USING btree (changeversion);


--
-- Name: ux_937af8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_937af8_id ON edfi.funddimension USING btree (id);


--
-- Name: ux_9965a5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9965a5_changeversion ON edfi.educationcontent USING btree (changeversion);


--
-- Name: ux_9965a5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9965a5_id ON edfi.educationcontent USING btree (id);


--
-- Name: ux_9bbaf5_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9bbaf5_changeversion ON edfi.bellschedule USING btree (changeversion);


--
-- Name: ux_9bbaf5_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9bbaf5_id ON edfi.bellschedule USING btree (id);


--
-- Name: ux_9f1246_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_9f1246_changeversion ON edfi.surveycourseassociation USING btree (changeversion);


--
-- Name: ux_9f1246_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_9f1246_id ON edfi.surveycourseassociation USING btree (id);


--
-- Name: ux_a20588_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a20588_changeversion ON edfi.assessmentscorerangelearningstandard USING btree (changeversion);


--
-- Name: ux_a20588_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a20588_id ON edfi.assessmentscorerangelearningstandard USING btree (id);


--
-- Name: ux_a97956_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a97956_changeversion ON edfi.academicweek USING btree (changeversion);


--
-- Name: ux_a97956_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a97956_id ON edfi.academicweek USING btree (id);


--
-- Name: ux_a9a613_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a9a613_changeversion ON edfi.programdimension USING btree (changeversion);


--
-- Name: ux_a9a613_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9a613_id ON edfi.programdimension USING btree (id);


--
-- Name: ux_a9c0d9_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_a9c0d9_changeversion ON edfi.staffprogramassociation USING btree (changeversion);


--
-- Name: ux_a9c0d9_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_a9c0d9_id ON edfi.staffprogramassociation USING btree (id);


--
-- Name: ux_af86db_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_af86db_changeversion ON edfi.staffdisciplineincidentassociation USING btree (changeversion);


--
-- Name: ux_af86db_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_af86db_id ON edfi.staffdisciplineincidentassociation USING btree (id);


--
-- Name: ux_afb8b8_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_afb8b8_changeversion ON edfi.studentassessmenteducationorganizationassociation USING btree (changeversion);


--
-- Name: ux_afb8b8_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_afb8b8_id ON edfi.studentassessmenteducationorganizationassociation USING btree (id);


--
-- Name: ux_b13bbd_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b13bbd_changeversion ON edfi.staffabsenceevent USING btree (changeversion);


--
-- Name: ux_b13bbd_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b13bbd_id ON edfi.staffabsenceevent USING btree (id);


--
-- Name: ux_b1c42b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b1c42b_changeversion ON edfi.credential USING btree (changeversion);


--
-- Name: ux_b1c42b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b1c42b_id ON edfi.credential USING btree (id);


--
-- Name: ux_b2bd0a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b2bd0a_changeversion ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (changeversion);


--
-- Name: ux_b2bd0a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b2bd0a_id ON edfi.surveyresponseeducationorganizationtargetassociation USING btree (id);


--
-- Name: ux_b6310e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b6310e_changeversion ON edfi.localactual USING btree (changeversion);


--
-- Name: ux_b6310e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b6310e_id ON edfi.localactual USING btree (id);


--
-- Name: ux_b8b6d7_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b8b6d7_changeversion ON edfi.postsecondaryevent USING btree (changeversion);


--
-- Name: ux_b8b6d7_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b8b6d7_id ON edfi.postsecondaryevent USING btree (id);


--
-- Name: ux_b9be24_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_b9be24_changeversion ON edfi.staffeducationorganizationassignmentassociation USING btree (changeversion);


--
-- Name: ux_b9be24_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_b9be24_id ON edfi.staffeducationorganizationassignmentassociation USING btree (id);


--
-- Name: ux_baaa9d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_baaa9d_changeversion ON edfi.studentlearningobjective USING btree (changeversion);


--
-- Name: ux_baaa9d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_baaa9d_id ON edfi.studentlearningobjective USING btree (id);


--
-- Name: ux_be1ea4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_be1ea4_changeversion ON edfi.graduationplan USING btree (changeversion);


--
-- Name: ux_be1ea4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_be1ea4_id ON edfi.graduationplan USING btree (id);


--
-- Name: ux_bf9d92_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_bf9d92_changeversion ON edfi.studentparentassociation USING btree (changeversion);


--
-- Name: ux_bf9d92_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_bf9d92_id ON edfi.studentparentassociation USING btree (id);


--
-- Name: ux_c16804_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c16804_changeversion ON edfi.surveysectionassociation USING btree (changeversion);


--
-- Name: ux_c16804_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c16804_id ON edfi.surveysectionassociation USING btree (id);


--
-- Name: ux_c2efaa_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c2efaa_changeversion ON edfi.studentgradebookentry USING btree (changeversion);


--
-- Name: ux_c2efaa_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c2efaa_id ON edfi.studentgradebookentry USING btree (id);


--
-- Name: ux_c4d12e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_c4d12e_changeversion ON edfi.functiondimension USING btree (changeversion);


--
-- Name: ux_c4d12e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_c4d12e_id ON edfi.functiondimension USING btree (id);


--
-- Name: ux_ce2080_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ce2080_changeversion ON edfi.staffschoolassociation USING btree (changeversion);


--
-- Name: ux_ce2080_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ce2080_id ON edfi.staffschoolassociation USING btree (id);


--
-- Name: ux_d16e19_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d16e19_changeversion ON edfi.projectdimension USING btree (changeversion);


--
-- Name: ux_d16e19_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d16e19_id ON edfi.projectdimension USING btree (id);


--
-- Name: ux_d5d0a3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d5d0a3_changeversion ON edfi.calendar USING btree (changeversion);


--
-- Name: ux_d5d0a3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d5d0a3_id ON edfi.calendar USING btree (id);


--
-- Name: ux_d92986_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_d92986_changeversion ON edfi.interventionstudy USING btree (changeversion);


--
-- Name: ux_d92986_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_d92986_id ON edfi.interventionstudy USING btree (id);


--
-- Name: ux_dc3dcf_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dc3dcf_changeversion ON edfi.assessmentitem USING btree (changeversion);


--
-- Name: ux_dc3dcf_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dc3dcf_id ON edfi.assessmentitem USING btree (id);


--
-- Name: ux_debd4f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_debd4f_changeversion ON edfi.staffleave USING btree (changeversion);


--
-- Name: ux_debd4f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_debd4f_id ON edfi.staffleave USING btree (id);


--
-- Name: ux_dfca5d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_dfca5d_changeversion ON edfi.section USING btree (changeversion);


--
-- Name: ux_dfca5d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_dfca5d_id ON edfi.section USING btree (id);


--
-- Name: ux_e3e5a4_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e3e5a4_changeversion ON edfi.surveyprogramassociation USING btree (changeversion);


--
-- Name: ux_e3e5a4_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e3e5a4_id ON edfi.surveyprogramassociation USING btree (id);


--
-- Name: ux_e45c0b_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e45c0b_changeversion ON edfi.disciplineincident USING btree (changeversion);


--
-- Name: ux_e45c0b_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e45c0b_id ON edfi.disciplineincident USING btree (id);


--
-- Name: ux_e52c9c_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e52c9c_changeversion ON edfi.balancesheetdimension USING btree (changeversion);


--
-- Name: ux_e52c9c_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e52c9c_id ON edfi.balancesheetdimension USING btree (id);


--
-- Name: ux_e5572a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e5572a_changeversion ON edfi.surveysection USING btree (changeversion);


--
-- Name: ux_e5572a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e5572a_id ON edfi.surveysection USING btree (id);


--
-- Name: ux_e670ae_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e670ae_changeversion ON edfi.educationorganizationinterventionprescriptionassociation USING btree (changeversion);


--
-- Name: ux_e670ae_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e670ae_id ON edfi.educationorganizationinterventionprescriptionassociation USING btree (id);


--
-- Name: ux_e91a4d_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e91a4d_changeversion ON edfi.sourcedimension USING btree (changeversion);


--
-- Name: ux_e91a4d_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e91a4d_id ON edfi.sourcedimension USING btree (id);


--
-- Name: ux_e93bc3_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_e93bc3_changeversion ON edfi.interventionprescription USING btree (changeversion);


--
-- Name: ux_e93bc3_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_e93bc3_id ON edfi.interventionprescription USING btree (id);


--
-- Name: ux_ea526f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ea526f_changeversion ON edfi.localencumbrance USING btree (changeversion);


--
-- Name: ux_ea526f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ea526f_id ON edfi.localencumbrance USING btree (id);


--
-- Name: ux_ec1992_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ec1992_changeversion ON edfi.reportcard USING btree (changeversion);


--
-- Name: ux_ec1992_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ec1992_id ON edfi.reportcard USING btree (id);


--
-- Name: ux_eddd02_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eddd02_changeversion ON edfi.surveyquestionresponse USING btree (changeversion);


--
-- Name: ux_eddd02_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eddd02_id ON edfi.surveyquestionresponse USING btree (id);


--
-- Name: ux_ee3b2a_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ee3b2a_changeversion ON edfi.studentassessment USING btree (changeversion);


--
-- Name: ux_ee3b2a_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee3b2a_id ON edfi.studentassessment USING btree (id);


--
-- Name: ux_ee9047_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_ee9047_changeversion ON edfi.descriptormapping USING btree (changeversion);


--
-- Name: ux_ee9047_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_ee9047_id ON edfi.descriptormapping USING btree (id);


--
-- Name: ux_eec7b6_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_eec7b6_changeversion ON edfi.disciplineaction USING btree (changeversion);


--
-- Name: ux_eec7b6_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_eec7b6_id ON edfi.disciplineaction USING btree (id);


--
-- Name: ux_f092ff_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f092ff_changeversion ON edfi.communityproviderlicense USING btree (changeversion);


--
-- Name: ux_f092ff_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f092ff_id ON edfi.communityproviderlicense USING btree (id);


--
-- Name: ux_f4934f_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f4934f_changeversion ON edfi.studentdisciplineincidentbehaviorassociation USING btree (changeversion);


--
-- Name: ux_f4934f_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f4934f_id ON edfi.studentdisciplineincidentbehaviorassociation USING btree (id);


--
-- Name: ux_f9457e_changeversion; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE INDEX ux_f9457e_changeversion ON edfi.surveyresponsestafftargetassociation USING btree (changeversion);


--
-- Name: ux_f9457e_id; Type: INDEX; Schema: edfi; Owner: postgres
--

CREATE UNIQUE INDEX ux_f9457e_id ON edfi.surveyresponsestafftargetassociation USING btree (id);


--
-- Name: communityorganization deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityorganization FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityorganization_tr_delete();


--
-- Name: communityprovider deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_delete();


--
-- Name: educationorganizationnetwork deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationorganizationnetwork_tr_delete();


--
-- Name: educationservicecenter deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_delete();


--
-- Name: localeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_delete();


--
-- Name: organizationdepartment deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_delete();


--
-- Name: postsecondaryinstitution deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE FUNCTION edfi.edfi_postsecondaryinstitution_tr_delete();


--
-- Name: school deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_delete();


--
-- Name: stateeducationagency deleteauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER deleteauthtuples AFTER DELETE ON edfi.stateeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_stateeducationagency_tr_delete();


--
-- Name: classperiod handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF classperiodname, schoolid ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classperiod_keychg();


--
-- Name: courseoffering handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sessionname ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseoffering_keychg();


--
-- Name: grade handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.grade FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.grade_keychg();


--
-- Name: gradebookentry handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF gradebookentryidentifier, namespace ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentry_keychg();


--
-- Name: location handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF classroomidentificationcode, schoolid ON edfi.location FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.location_keychg();


--
-- Name: parent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF parentuniqueid ON edfi.parent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.parent_keychg();


--
-- Name: section handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname ON edfi.section FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.section_keychg();


--
-- Name: sectionattendancetakenevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF calendarcode, date, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_keychg();


--
-- Name: session handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF schoolid, schoolyear, sessionname ON edfi.session FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.session_keychg();


--
-- Name: staff handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF staffuniqueid ON edfi.staff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staff_keychg();


--
-- Name: staffsectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, staffusi ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffsectionassociation_keychg();


--
-- Name: student handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF studentuniqueid ON edfi.student FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.student_keychg();


--
-- Name: studentgradebookentry handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF gradebookentryidentifier, namespace, studentusi ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentgradebookentry_keychg();


--
-- Name: studentschoolassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF entrydate, schoolid, studentusi ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolassociation_keychg();


--
-- Name: studentschoolattendanceevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF attendanceeventcategorydescriptorid, eventdate, schoolid, schoolyear, sessionname, studentusi ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_keychg();


--
-- Name: studentsectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionassociation_keychg();


--
-- Name: studentsectionattendanceevent handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_keychg();


--
-- Name: surveysectionassociation handlekeychanges; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER handlekeychanges AFTER UPDATE OF localcoursecode, namespace, schoolid, schoolyear, sectionidentifier, sessionname, surveyidentifier ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionassociation_keychg();


--
-- Name: communityorganization insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityorganization FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityorganization_tr_insert();


--
-- Name: communityprovider insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_insert();


--
-- Name: educationorganizationnetwork insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationorganizationnetwork FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationorganizationnetwork_tr_insert();


--
-- Name: educationservicecenter insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_insert();


--
-- Name: localeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_insert();


--
-- Name: organizationdepartment insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_insert();


--
-- Name: postsecondaryinstitution insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.postsecondaryinstitution FOR EACH ROW EXECUTE FUNCTION edfi.edfi_postsecondaryinstitution_tr_insert();


--
-- Name: school insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_insert();


--
-- Name: stateeducationagency insertauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER insertauthtuples AFTER INSERT ON edfi.stateeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_stateeducationagency_tr_insert();


--
-- Name: absenceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.absenceeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.absenceeventcategorydescriptor_deleted();


--
-- Name: academichonorcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academichonorcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academichonorcategorydescriptor_deleted();


--
-- Name: academicsubjectdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicsubjectdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academicsubjectdescriptor_deleted();


--
-- Name: academicweek trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.academicweek FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.academicweek_deleted();


--
-- Name: accommodationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accommodationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accommodationdescriptor_deleted();


--
-- Name: accountabilityrating trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accountabilityrating FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accountabilityrating_deleted();


--
-- Name: accounttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.accounttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.accounttypedescriptor_deleted();


--
-- Name: achievementcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.achievementcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.achievementcategorydescriptor_deleted();


--
-- Name: additionalcredittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.additionalcredittypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.additionalcredittypedescriptor_deleted();


--
-- Name: addresstypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.addresstypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.addresstypedescriptor_deleted();


--
-- Name: administrationenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrationenvironmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.administrationenvironmentdescriptor_deleted();


--
-- Name: administrativefundingcontroldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.administrativefundingcontroldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.administrativefundingcontroldescriptor_deleted();


--
-- Name: ancestryethnicorigindescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.ancestryethnicorigindescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.ancestryethnicorigindescriptor_deleted();


--
-- Name: assessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessment_deleted();


--
-- Name: assessmentcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentcategorydescriptor_deleted();


--
-- Name: assessmentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentidentificationsystemdescriptor_deleted();


--
-- Name: assessmentitem trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitem FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitem_deleted();


--
-- Name: assessmentitemcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitemcategorydescriptor_deleted();


--
-- Name: assessmentitemresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentitemresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentitemresultdescriptor_deleted();


--
-- Name: assessmentperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentperioddescriptor_deleted();


--
-- Name: assessmentreportingmethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentreportingmethoddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentreportingmethoddescriptor_deleted();


--
-- Name: assessmentscorerangelearningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assessmentscorerangelearningstandard_deleted();


--
-- Name: assignmentlatestatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.assignmentlatestatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.assignmentlatestatusdescriptor_deleted();


--
-- Name: attemptstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attemptstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.attemptstatusdescriptor_deleted();


--
-- Name: attendanceeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.attendanceeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.attendanceeventcategorydescriptor_deleted();


--
-- Name: balancesheetdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.balancesheetdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.balancesheetdimension_deleted();


--
-- Name: barriertointernetaccessinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.barriertointernetaccessinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.barriertointernetaccessinresidencedescriptor_deleted();


--
-- Name: behaviordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.behaviordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.behaviordescriptor_deleted();


--
-- Name: bellschedule trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.bellschedule FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.bellschedule_deleted();


--
-- Name: calendar trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendar FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendar_deleted();


--
-- Name: calendardate trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendardate FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendardate_deleted();


--
-- Name: calendareventdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendareventdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendareventdescriptor_deleted();


--
-- Name: calendartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.calendartypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.calendartypedescriptor_deleted();


--
-- Name: careerpathwaydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.careerpathwaydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.careerpathwaydescriptor_deleted();


--
-- Name: charterapprovalagencytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterapprovalagencytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.charterapprovalagencytypedescriptor_deleted();


--
-- Name: charterstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.charterstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.charterstatusdescriptor_deleted();


--
-- Name: chartofaccount trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.chartofaccount FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.chartofaccount_deleted();


--
-- Name: citizenshipstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.citizenshipstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.citizenshipstatusdescriptor_deleted();


--
-- Name: classperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classperiod_deleted();


--
-- Name: classroompositiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.classroompositiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.classroompositiondescriptor_deleted();


--
-- Name: cohort trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohort FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohort_deleted();


--
-- Name: cohortscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortscopedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohortscopedescriptor_deleted();


--
-- Name: cohorttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohorttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohorttypedescriptor_deleted();


--
-- Name: cohortyeartypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cohortyeartypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cohortyeartypedescriptor_deleted();


--
-- Name: communityproviderlicense trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.communityproviderlicense_deleted();


--
-- Name: competencyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.competencyleveldescriptor_deleted();


--
-- Name: competencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.competencyobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.competencyobjective_deleted();


--
-- Name: contacttypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contacttypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contacttypedescriptor_deleted();


--
-- Name: contentclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.contentclassdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.contentclassdescriptor_deleted();


--
-- Name: continuationofservicesreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.continuationofservicesreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.continuationofservicesreasondescriptor_deleted();


--
-- Name: costratedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.costratedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.costratedescriptor_deleted();


--
-- Name: countrydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.countrydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.countrydescriptor_deleted();


--
-- Name: course trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.course FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.course_deleted();


--
-- Name: courseattemptresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseattemptresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseattemptresultdescriptor_deleted();


--
-- Name: coursedefinedbydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursedefinedbydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursedefinedbydescriptor_deleted();


--
-- Name: coursegpaapplicabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursegpaapplicabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursegpaapplicabilitydescriptor_deleted();


--
-- Name: courseidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseidentificationsystemdescriptor_deleted();


--
-- Name: courselevelcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courselevelcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courselevelcharacteristicdescriptor_deleted();


--
-- Name: courseoffering trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courseoffering_deleted();


--
-- Name: courserepeatcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.courserepeatcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.courserepeatcodedescriptor_deleted();


--
-- Name: coursetranscript trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.coursetranscript FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.coursetranscript_deleted();


--
-- Name: credential trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credential FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credential_deleted();


--
-- Name: credentialfielddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialfielddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credentialfielddescriptor_deleted();


--
-- Name: credentialtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credentialtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credentialtypedescriptor_deleted();


--
-- Name: creditcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.creditcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.creditcategorydescriptor_deleted();


--
-- Name: credittypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.credittypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.credittypedescriptor_deleted();


--
-- Name: cteprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.cteprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.cteprogramservicedescriptor_deleted();


--
-- Name: curriculumuseddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.curriculumuseddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.curriculumuseddescriptor_deleted();


--
-- Name: deliverymethoddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.deliverymethoddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.deliverymethoddescriptor_deleted();


--
-- Name: descriptormapping trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.descriptormapping FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.descriptormapping_deleted();


--
-- Name: diagnosisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diagnosisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diagnosisdescriptor_deleted();


--
-- Name: diplomaleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomaleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diplomaleveldescriptor_deleted();


--
-- Name: diplomatypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.diplomatypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.diplomatypedescriptor_deleted();


--
-- Name: disabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydescriptor_deleted();


--
-- Name: disabilitydesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydesignationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydesignationdescriptor_deleted();


--
-- Name: disabilitydeterminationsourcetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disabilitydeterminationsourcetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disabilitydeterminationsourcetypedescriptor_deleted();


--
-- Name: disciplineaction trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineaction FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineaction_deleted();


--
-- Name: disciplineactionlengthdifferencereasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineactionlengthdifferencereasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineactionlengthdifferencereasondescriptor_deleted();


--
-- Name: disciplinedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplinedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplinedescriptor_deleted();


--
-- Name: disciplineincident trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincident FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineincident_deleted();


--
-- Name: disciplineincidentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.disciplineincidentparticipationcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.disciplineincidentparticipationcodedescriptor_deleted();


--
-- Name: educationalenvironmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationalenvironmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationalenvironmentdescriptor_deleted();


--
-- Name: educationcontent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationcontent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationcontent_deleted();


--
-- Name: educationorganization trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganization FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganization_deleted();


--
-- Name: educationorganizationassociationtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationassociationtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationassociationtypedescriptor_deleted();


--
-- Name: educationorganizationcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationcategorydescriptor_deleted();


--
-- Name: educationorganizationidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationidentificationsystemdescriptor_deleted();


--
-- Name: educationorganizationinterventionprescriptionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationinterventionprescriptionass_e670ae_deleted();


--
-- Name: educationorganizationnetworkassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationnetworkassociation_deleted();


--
-- Name: educationorganizationpeerassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationorganizationpeerassociation_deleted();


--
-- Name: educationplandescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.educationplandescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.educationplandescriptor_deleted();


--
-- Name: electronicmailtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.electronicmailtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.electronicmailtypedescriptor_deleted();


--
-- Name: employmentstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.employmentstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.employmentstatusdescriptor_deleted();


--
-- Name: entrygradelevelreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrygradelevelreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.entrygradelevelreasondescriptor_deleted();


--
-- Name: entrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.entrytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.entrytypedescriptor_deleted();


--
-- Name: eventcircumstancedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.eventcircumstancedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.eventcircumstancedescriptor_deleted();


--
-- Name: exitwithdrawtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.exitwithdrawtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.exitwithdrawtypedescriptor_deleted();


--
-- Name: feederschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.feederschoolassociation_deleted();


--
-- Name: financialcollectiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.financialcollectiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.financialcollectiondescriptor_deleted();


--
-- Name: functiondimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.functiondimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.functiondimension_deleted();


--
-- Name: funddimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.funddimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.funddimension_deleted();


--
-- Name: generalstudentprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.generalstudentprogramassociation_deleted();


--
-- Name: grade trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.grade FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.grade_deleted();


--
-- Name: gradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentry_deleted();


--
-- Name: gradebookentrytypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradebookentrytypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradebookentrytypedescriptor_deleted();


--
-- Name: gradeleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradeleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradeleveldescriptor_deleted();


--
-- Name: gradepointaveragetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradepointaveragetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradepointaveragetypedescriptor_deleted();


--
-- Name: gradetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradetypedescriptor_deleted();


--
-- Name: gradingperiod trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperiod FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradingperiod_deleted();


--
-- Name: gradingperioddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gradingperioddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gradingperioddescriptor_deleted();


--
-- Name: graduationplan trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplan FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.graduationplan_deleted();


--
-- Name: graduationplantypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.graduationplantypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.graduationplantypedescriptor_deleted();


--
-- Name: gunfreeschoolsactreportingstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.gunfreeschoolsactreportingstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.gunfreeschoolsactreportingstatusdescriptor_deleted();


--
-- Name: homelessprimarynighttimeresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprimarynighttimeresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.homelessprimarynighttimeresidencedescriptor_deleted();


--
-- Name: homelessprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.homelessprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.homelessprogramservicedescriptor_deleted();


--
-- Name: identificationdocumentusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.identificationdocumentusedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.identificationdocumentusedescriptor_deleted();


--
-- Name: incidentlocationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.incidentlocationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.incidentlocationdescriptor_deleted();


--
-- Name: indicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatordescriptor_deleted();


--
-- Name: indicatorgroupdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorgroupdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatorgroupdescriptor_deleted();


--
-- Name: indicatorleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.indicatorleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.indicatorleveldescriptor_deleted();


--
-- Name: institutiontelephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.institutiontelephonenumbertypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.institutiontelephonenumbertypedescriptor_deleted();


--
-- Name: interactivitystyledescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interactivitystyledescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interactivitystyledescriptor_deleted();


--
-- Name: internetaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccessdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetaccessdescriptor_deleted();


--
-- Name: internetaccesstypeinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetaccesstypeinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetaccesstypeinresidencedescriptor_deleted();


--
-- Name: internetperformanceinresidencedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.internetperformanceinresidencedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.internetperformanceinresidencedescriptor_deleted();


--
-- Name: intervention trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.intervention FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.intervention_deleted();


--
-- Name: interventionclassdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionclassdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionclassdescriptor_deleted();


--
-- Name: interventioneffectivenessratingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventioneffectivenessratingdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventioneffectivenessratingdescriptor_deleted();


--
-- Name: interventionprescription trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionprescription FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionprescription_deleted();


--
-- Name: interventionstudy trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.interventionstudy FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.interventionstudy_deleted();


--
-- Name: languagedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languagedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languagedescriptor_deleted();


--
-- Name: languageinstructionprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageinstructionprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languageinstructionprogramservicedescriptor_deleted();


--
-- Name: languageusedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.languageusedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.languageusedescriptor_deleted();


--
-- Name: learningobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningobjective_deleted();


--
-- Name: learningstandard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandard_deleted();


--
-- Name: learningstandardcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardcategorydescriptor_deleted();


--
-- Name: learningstandardequivalenceassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardequivalenceassociation_deleted();


--
-- Name: learningstandardequivalencestrengthdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardequivalencestrengthdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardequivalencestrengthdescriptor_deleted();


--
-- Name: learningstandardscopedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.learningstandardscopedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.learningstandardscopedescriptor_deleted();


--
-- Name: levelofeducationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.levelofeducationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.levelofeducationdescriptor_deleted();


--
-- Name: licensestatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensestatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.licensestatusdescriptor_deleted();


--
-- Name: licensetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.licensetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.licensetypedescriptor_deleted();


--
-- Name: limitedenglishproficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.limitedenglishproficiencydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.limitedenglishproficiencydescriptor_deleted();


--
-- Name: localaccount trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localaccount FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localaccount_deleted();


--
-- Name: localactual trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localactual FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localactual_deleted();


--
-- Name: localbudget trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localbudget FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localbudget_deleted();


--
-- Name: localcontractedstaff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localcontractedstaff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localcontractedstaff_deleted();


--
-- Name: localedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localedescriptor_deleted();


--
-- Name: localeducationagencycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localeducationagencycategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localeducationagencycategorydescriptor_deleted();


--
-- Name: localencumbrance trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localencumbrance FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localencumbrance_deleted();


--
-- Name: localpayroll trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.localpayroll FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.localpayroll_deleted();


--
-- Name: location trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.location FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.location_deleted();


--
-- Name: magnetspecialprogramemphasisschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.magnetspecialprogramemphasisschooldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.magnetspecialprogramemphasisschooldescriptor_deleted();


--
-- Name: mediumofinstructiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.mediumofinstructiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.mediumofinstructiondescriptor_deleted();


--
-- Name: methodcreditearneddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.methodcreditearneddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.methodcreditearneddescriptor_deleted();


--
-- Name: migranteducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.migranteducationprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.migranteducationprogramservicedescriptor_deleted();


--
-- Name: modelentitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.modelentitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.modelentitydescriptor_deleted();


--
-- Name: monitoreddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.monitoreddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.monitoreddescriptor_deleted();


--
-- Name: neglectedordelinquentprogramdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramdescriptor_deleted();


--
-- Name: neglectedordelinquentprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.neglectedordelinquentprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.neglectedordelinquentprogramservicedescriptor_deleted();


--
-- Name: networkpurposedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.networkpurposedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.networkpurposedescriptor_deleted();


--
-- Name: objectdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.objectdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.objectdimension_deleted();


--
-- Name: objectiveassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.objectiveassessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.objectiveassessment_deleted();


--
-- Name: oldethnicitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.oldethnicitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.oldethnicitydescriptor_deleted();


--
-- Name: openstaffposition trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.openstaffposition FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.openstaffposition_deleted();


--
-- Name: operationalstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.operationalstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.operationalstatusdescriptor_deleted();


--
-- Name: operationalunitdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.operationalunitdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.operationalunitdimension_deleted();


--
-- Name: othernametypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.othernametypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.othernametypedescriptor_deleted();


--
-- Name: parent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.parent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.parent_deleted();


--
-- Name: participationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.participationdescriptor_deleted();


--
-- Name: participationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.participationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.participationstatusdescriptor_deleted();


--
-- Name: performancebaseconversiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performancebaseconversiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.performancebaseconversiondescriptor_deleted();


--
-- Name: performanceleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.performanceleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.performanceleveldescriptor_deleted();


--
-- Name: person trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.person FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.person_deleted();


--
-- Name: personalinformationverificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.personalinformationverificationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.personalinformationverificationdescriptor_deleted();


--
-- Name: platformtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.platformtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.platformtypedescriptor_deleted();


--
-- Name: populationserveddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.populationserveddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.populationserveddescriptor_deleted();


--
-- Name: postingresultdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postingresultdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postingresultdescriptor_deleted();


--
-- Name: postsecondaryevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryevent_deleted();


--
-- Name: postsecondaryeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryeventcategorydescriptor_deleted();


--
-- Name: postsecondaryinstitutionleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.postsecondaryinstitutionleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.postsecondaryinstitutionleveldescriptor_deleted();


--
-- Name: primarylearningdeviceaccessdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceaccessdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceaccessdescriptor_deleted();


--
-- Name: primarylearningdeviceawayfromschooldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceawayfromschooldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceawayfromschooldescriptor_deleted();


--
-- Name: primarylearningdeviceproviderdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.primarylearningdeviceproviderdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.primarylearningdeviceproviderdescriptor_deleted();


--
-- Name: proficiencydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.proficiencydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.proficiencydescriptor_deleted();


--
-- Name: program trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.program FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.program_deleted();


--
-- Name: programassignmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programassignmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programassignmentdescriptor_deleted();


--
-- Name: programcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programcharacteristicdescriptor_deleted();


--
-- Name: programdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programdimension_deleted();


--
-- Name: programsponsordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programsponsordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programsponsordescriptor_deleted();


--
-- Name: programtypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.programtypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.programtypedescriptor_deleted();


--
-- Name: progressdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.progressdescriptor_deleted();


--
-- Name: progressleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.progressleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.progressleveldescriptor_deleted();


--
-- Name: projectdimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.projectdimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.projectdimension_deleted();


--
-- Name: providercategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providercategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providercategorydescriptor_deleted();


--
-- Name: providerprofitabilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerprofitabilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providerprofitabilitydescriptor_deleted();


--
-- Name: providerstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.providerstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.providerstatusdescriptor_deleted();


--
-- Name: publicationstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.publicationstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.publicationstatusdescriptor_deleted();


--
-- Name: questionformdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.questionformdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.questionformdescriptor_deleted();


--
-- Name: racedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.racedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.racedescriptor_deleted();


--
-- Name: reasonexiteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonexiteddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reasonexiteddescriptor_deleted();


--
-- Name: reasonnottesteddescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reasonnottesteddescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reasonnottesteddescriptor_deleted();


--
-- Name: recognitiontypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.recognitiontypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.recognitiontypedescriptor_deleted();


--
-- Name: relationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.relationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.relationdescriptor_deleted();


--
-- Name: repeatidentifierdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.repeatidentifierdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.repeatidentifierdescriptor_deleted();


--
-- Name: reportcard trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reportcard FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reportcard_deleted();


--
-- Name: reporterdescriptiondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reporterdescriptiondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reporterdescriptiondescriptor_deleted();


--
-- Name: reportingtagdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.reportingtagdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.reportingtagdescriptor_deleted();


--
-- Name: residencystatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.residencystatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.residencystatusdescriptor_deleted();


--
-- Name: responseindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responseindicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.responseindicatordescriptor_deleted();


--
-- Name: responsibilitydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.responsibilitydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.responsibilitydescriptor_deleted();


--
-- Name: restraintevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restraintevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.restraintevent_deleted();


--
-- Name: restrainteventreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.restrainteventreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.restrainteventreasondescriptor_deleted();


--
-- Name: resultdatatypetypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.resultdatatypetypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.resultdatatypetypedescriptor_deleted();


--
-- Name: retestindicatordescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.retestindicatordescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.retestindicatordescriptor_deleted();


--
-- Name: schoolcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolcategorydescriptor_deleted();


--
-- Name: schoolchoiceimplementstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolchoiceimplementstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolchoiceimplementstatusdescriptor_deleted();


--
-- Name: schoolfoodserviceprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolfoodserviceprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolfoodserviceprogramservicedescriptor_deleted();


--
-- Name: schooltypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schooltypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schooltypedescriptor_deleted();


--
-- Name: schoolyeartype trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.schoolyeartype FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.schoolyeartype_deleted();


--
-- Name: section trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.section FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.section_deleted();


--
-- Name: sectionattendancetakenevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectionattendancetakenevent_deleted();


--
-- Name: sectioncharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sectioncharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sectioncharacteristicdescriptor_deleted();


--
-- Name: separationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.separationdescriptor_deleted();


--
-- Name: separationreasondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.separationreasondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.separationreasondescriptor_deleted();


--
-- Name: servicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.servicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.servicedescriptor_deleted();


--
-- Name: session trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.session FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.session_deleted();


--
-- Name: sexdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sexdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sexdescriptor_deleted();


--
-- Name: sourcedimension trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sourcedimension FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sourcedimension_deleted();


--
-- Name: sourcesystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.sourcesystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.sourcesystemdescriptor_deleted();


--
-- Name: specialeducationprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.specialeducationprogramservicedescriptor_deleted();


--
-- Name: specialeducationsettingdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.specialeducationsettingdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.specialeducationsettingdescriptor_deleted();


--
-- Name: staff trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staff FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staff_deleted();


--
-- Name: staffabsenceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffabsenceevent_deleted();


--
-- Name: staffclassificationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffclassificationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffclassificationdescriptor_deleted();


--
-- Name: staffcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffcohortassociation_deleted();


--
-- Name: staffdisciplineincidentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffdisciplineincidentassociation_deleted();


--
-- Name: staffeducationorganizationassignmentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationassignmentassociation_deleted();


--
-- Name: staffeducationorganizationcontactassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationcontactassociation_deleted();


--
-- Name: staffeducationorganizationemploymentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffeducationorganizationemploymentassociation_deleted();


--
-- Name: staffidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffidentificationsystemdescriptor_deleted();


--
-- Name: staffleave trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleave FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffleave_deleted();


--
-- Name: staffleaveeventcategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffleaveeventcategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffleaveeventcategorydescriptor_deleted();


--
-- Name: staffprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffprogramassociation_deleted();


--
-- Name: staffschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffschoolassociation_deleted();


--
-- Name: staffsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.staffsectionassociation_deleted();


--
-- Name: stateabbreviationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.stateabbreviationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.stateabbreviationdescriptor_deleted();


--
-- Name: student trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.student FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.student_deleted();


--
-- Name: studentacademicrecord trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentacademicrecord_deleted();


--
-- Name: studentassessment trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentassessment FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentassessment_deleted();


--
-- Name: studentassessmenteducationorganizationassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentassessmenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentassessmenteducationorganizationassociation_deleted();


--
-- Name: studentcharacteristicdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcharacteristicdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcharacteristicdescriptor_deleted();


--
-- Name: studentcohortassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcohortassociation_deleted();


--
-- Name: studentcompetencyobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentcompetencyobjective_deleted();


--
-- Name: studentdisciplineincidentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentassociation_deleted();


--
-- Name: studentdisciplineincidentbehaviorassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentbehaviorassociation_deleted();


--
-- Name: studentdisciplineincidentnonoffenderassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentdisciplineincidentnonoffenderassociation_deleted();


--
-- Name: studenteducationorganizationassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studenteducationorganizationassociation_deleted();


--
-- Name: studenteducationorganizationresponsibilityassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studenteducationorganizationresponsibilityassociation_deleted();


--
-- Name: studentgradebookentry trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentgradebookentry_deleted();


--
-- Name: studentidentificationsystemdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentidentificationsystemdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentidentificationsystemdescriptor_deleted();


--
-- Name: studentinterventionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentinterventionassociation_deleted();


--
-- Name: studentinterventionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentinterventionattendanceevent_deleted();


--
-- Name: studentlearningobjective trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentlearningobjective FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentlearningobjective_deleted();


--
-- Name: studentparentassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentparentassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentparentassociation_deleted();


--
-- Name: studentparticipationcodedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentparticipationcodedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentparticipationcodedescriptor_deleted();


--
-- Name: studentprogramattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentprogramattendanceevent_deleted();


--
-- Name: studentschoolassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolassociation_deleted();


--
-- Name: studentschoolattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentschoolattendanceevent_deleted();


--
-- Name: studentsectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionassociation_deleted();


--
-- Name: studentsectionattendanceevent trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.studentsectionattendanceevent_deleted();


--
-- Name: submissionstatusdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.submissionstatusdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.submissionstatusdescriptor_deleted();


--
-- Name: survey trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.survey FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.survey_deleted();


--
-- Name: surveycategorydescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycategorydescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveycategorydescriptor_deleted();


--
-- Name: surveycourseassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveycourseassociation_deleted();


--
-- Name: surveyleveldescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyleveldescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyleveldescriptor_deleted();


--
-- Name: surveyprogramassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyprogramassociation_deleted();


--
-- Name: surveyquestion trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestion FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyquestion_deleted();


--
-- Name: surveyquestionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyquestionresponse_deleted();


--
-- Name: surveyresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponse_deleted();


--
-- Name: surveyresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponseeducationorganizationtargetassociation_deleted();


--
-- Name: surveyresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveyresponsestafftargetassociation_deleted();


--
-- Name: surveysection trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysection FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysection_deleted();


--
-- Name: surveysectionassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionassociation_deleted();


--
-- Name: surveysectionresponse trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponse_deleted();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponseeducationorganizationtarget_730be1_deleted();


--
-- Name: surveysectionresponsestafftargetassociation trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.surveysectionresponsestafftargetassociation_deleted();


--
-- Name: teachingcredentialbasisdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialbasisdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.teachingcredentialbasisdescriptor_deleted();


--
-- Name: teachingcredentialdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.teachingcredentialdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.teachingcredentialdescriptor_deleted();


--
-- Name: technicalskillsassessmentdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.technicalskillsassessmentdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.technicalskillsassessmentdescriptor_deleted();


--
-- Name: telephonenumbertypedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.telephonenumbertypedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.telephonenumbertypedescriptor_deleted();


--
-- Name: termdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.termdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.termdescriptor_deleted();


--
-- Name: titleipartaparticipantdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaparticipantdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaparticipantdescriptor_deleted();


--
-- Name: titleipartaprogramservicedescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaprogramservicedescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaprogramservicedescriptor_deleted();


--
-- Name: titleipartaschooldesignationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.titleipartaschooldesignationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.titleipartaschooldesignationdescriptor_deleted();


--
-- Name: tribalaffiliationdescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.tribalaffiliationdescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.tribalaffiliationdescriptor_deleted();


--
-- Name: visadescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.visadescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.visadescriptor_deleted();


--
-- Name: weapondescriptor trackdeletes; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER trackdeletes AFTER DELETE ON edfi.weapondescriptor FOR EACH ROW EXECUTE FUNCTION tracked_changes_edfi.weapondescriptor_deleted();


--
-- Name: communityprovider updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.communityprovider FOR EACH ROW EXECUTE FUNCTION edfi.edfi_communityprovider_tr_update();


--
-- Name: educationservicecenter updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.educationservicecenter FOR EACH ROW EXECUTE FUNCTION edfi.edfi_educationservicecenter_tr_update();


--
-- Name: localeducationagency updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.localeducationagency FOR EACH ROW EXECUTE FUNCTION edfi.edfi_localeducationagency_tr_update();


--
-- Name: organizationdepartment updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.organizationdepartment FOR EACH ROW EXECUTE FUNCTION edfi.edfi_organizationdepartment_tr_update();


--
-- Name: school updateauthtuples; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updateauthtuples AFTER UPDATE ON edfi.school FOR EACH ROW EXECUTE FUNCTION edfi.edfi_school_tr_update();


--
-- Name: academicweek updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.academicweek FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: accountabilityrating updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.accountabilityrating FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessmentitem updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentitem FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: assessmentscorerangelearningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.assessmentscorerangelearningstandard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: balancesheetdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.balancesheetdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: bellschedule updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.bellschedule FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: calendar updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendar FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: calendardate updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.calendardate FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: chartofaccount updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.chartofaccount FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: classperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.classperiod FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: cohort updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.cohort FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: communityproviderlicense updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.communityproviderlicense FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: competencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.competencyobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: course updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.course FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: courseoffering updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.courseoffering FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: coursetranscript updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.coursetranscript FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: credential updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.credential FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: descriptor updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.descriptor FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: descriptormapping updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.descriptormapping FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: disciplineaction updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineaction FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: disciplineincident updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.disciplineincident FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationcontent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationcontent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganization updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganization FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationinterventionprescriptionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationinterventionprescriptionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationnetworkassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationnetworkassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: educationorganizationpeerassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.educationorganizationpeerassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: feederschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.feederschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: functiondimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.functiondimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: funddimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.funddimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: generalstudentprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.generalstudentprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: grade updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.grade FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: gradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradebookentry FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: gradingperiod updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.gradingperiod FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: graduationplan updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.graduationplan FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: intervention updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.intervention FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: interventionprescription updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionprescription FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: interventionstudy updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.interventionstudy FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningstandard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: learningstandardequivalenceassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.learningstandardequivalenceassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localaccount updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localaccount FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localactual updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localactual FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localbudget updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localbudget FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localcontractedstaff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localcontractedstaff FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localencumbrance updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localencumbrance FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localpayroll updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.localpayroll FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: location updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.location FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: objectdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.objectdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: objectiveassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.objectiveassessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: openstaffposition updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.openstaffposition FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: operationalunitdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.operationalunitdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: parent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.parent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: person updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.person FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: postsecondaryevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.postsecondaryevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: program updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.program FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: programdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.programdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: projectdimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.projectdimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: reportcard updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.reportcard FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: restraintevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.restraintevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: schoolyeartype updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.schoolyeartype FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: section updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.section FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: sectionattendancetakenevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.sectionattendancetakenevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: session updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.session FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: sourcedimension updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.sourcedimension FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staff updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staff FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffabsenceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffabsenceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffcohortassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffdisciplineincidentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationassignmentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationassignmentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationcontactassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationcontactassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffeducationorganizationemploymentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffeducationorganizationemploymentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffleave updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffleave FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: staffsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.staffsectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: student updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.student FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentacademicrecord updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentacademicrecord FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentassessment updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentassessment FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentassessmenteducationorganizationassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentassessmenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcohortassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcohortassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentcompetencyobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentcompetencyobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentbehaviorassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentbehaviorassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentdisciplineincidentnonoffenderassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentdisciplineincidentnonoffenderassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studenteducationorganizationassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studenteducationorganizationresponsibilityassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studenteducationorganizationresponsibilityassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentgradebookentry updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentgradebookentry FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentinterventionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentinterventionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentinterventionattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentlearningobjective updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentlearningobjective FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentparentassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentparentassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentprogramattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentprogramattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentschoolassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentschoolattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentschoolattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentsectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: studentsectionattendanceevent updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.studentsectionattendanceevent FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: survey updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.survey FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveycourseassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveycourseassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyprogramassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyprogramassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyquestion updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestion FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyquestionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyquestionresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveyresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveyresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysection updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysection FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponse updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponse FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponseeducationorganizationtargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponseeducationorganizationtargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: surveysectionresponsestafftargetassociation updatechangeversion; Type: TRIGGER; Schema: edfi; Owner: postgres
--

CREATE TRIGGER updatechangeversion BEFORE UPDATE ON edfi.surveysectionresponsestafftargetassociation FOR EACH ROW EXECUTE FUNCTION changes.updatechangeversion();


--
-- Name: localbudget fk_000683_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT fk_000683_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localbudget fk_000683_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localbudget
    ADD CONSTRAINT fk_000683_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: courselevelcharacteristicdescriptor fk_000820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristicdescriptor
    ADD CONSTRAINT fk_000820_descriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcteprogramassociation fk_000ac5_technicalskillsassessmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociation
    ADD CONSTRAINT fk_000ac5_technicalskillsassessmentdescriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.technicalskillsassessmentdescriptor(technicalskillsassessmentdescriptorid);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentcompetencyobjectivegeneralstudentprogramassociation fk_005337_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_005337_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: specialeducationsettingdescriptor fk_010235_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationsettingdescriptor
    ADD CONSTRAINT fk_010235_descriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyeducationcontent fk_014e05_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionstudyeducationcontent fk_014e05_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyeducationcontent
    ADD CONSTRAINT fk_014e05_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: classperiod fk_01fe80_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiod
    ADD CONSTRAINT fk_01fe80_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentassessmentperiod fk_02ddd8_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT fk_02ddd8_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: studentassessmentperiod fk_02ddd8_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperiod
    ADD CONSTRAINT fk_02ddd8_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: courseoffering fk_0325c5_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: courseoffering fk_0325c5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: courseoffering fk_0325c5_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_0325c5_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyleveldescriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.surveyleveldescriptor(surveyleveldescriptorid);


--
-- Name: surveyresponsesurveylevel fk_03f044_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsesurveylevel
    ADD CONSTRAINT fk_03f044_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceuri fk_047c7a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceuri
    ADD CONSTRAINT fk_047c7a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: surveyquestionresponsesurveyquestionmatrixelementresponse fk_048797_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsesurveyquestionmatrixelementresponse
    ADD CONSTRAINT fk_048797_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociation fk_0516f9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: generalstudentprogramassociation fk_0516f9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_reasonexiteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_reasonexiteddescriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.reasonexiteddescriptor(reasonexiteddescriptorid);


--
-- Name: generalstudentprogramassociation fk_0516f9_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociation
    ADD CONSTRAINT fk_0516f9_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: indicatorleveldescriptor fk_05d3f9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorleveldescriptor
    ADD CONSTRAINT fk_05d3f9_descriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtribalaffiliation fk_0628e0_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtribalaffiliation
    ADD CONSTRAINT fk_0628e0_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: calendargradelevel fk_07722c_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendargradelevel fk_07722c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendargradelevel
    ADD CONSTRAINT fk_07722c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: calendardatecalendarevent fk_0789bb_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear) ON DELETE CASCADE;


--
-- Name: calendardatecalendarevent fk_0789bb_calendareventdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardatecalendarevent
    ADD CONSTRAINT fk_0789bb_calendareventdescriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.calendareventdescriptor(calendareventdescriptorid);


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationprogramparticipationstatus fk_0855d2_participationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationprogramparticipationstatus
    ADD CONSTRAINT fk_0855d2_participationstatusdescriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.participationstatusdescriptor(participationstatusdescriptorid);


--
-- Name: gunfreeschoolsactreportingstatusdescriptor fk_086864_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gunfreeschoolsactreportingstatusdescriptor
    ADD CONSTRAINT fk_086864_descriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateeducationagencyaccountability fk_09668f_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: stateeducationagencyaccountability fk_09668f_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyaccountability
    ADD CONSTRAINT fk_09668f_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriategradelevel fk_0a2145_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriategradelevel
    ADD CONSTRAINT fk_0a2145_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: responsibilitydescriptor fk_0b056e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responsibilitydescriptor
    ADD CONSTRAINT fk_0b056e_descriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramdescriptor fk_0b3390_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramdescriptor
    ADD CONSTRAINT fk_0b3390_descriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: neglectedordelinquentprogramservicedescriptor fk_0bfc01_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.neglectedordelinquentprogramservicedescriptor
    ADD CONSTRAINT fk_0bfc01_descriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sourcedimensionreportingtag fk_0c6eff_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT fk_0c6eff_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: sourcedimensionreportingtag fk_0c6eff_sourcedimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcedimensionreportingtag
    ADD CONSTRAINT fk_0c6eff_sourcedimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.sourcedimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentscoreresult fk_0c9651_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentscoreresult
    ADD CONSTRAINT fk_0c9651_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentexternalparticipant fk_0d16f7_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentexternalparticipant
    ADD CONSTRAINT fk_0d16f7_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: parentothername fk_0e0a11_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT fk_0e0a11_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: parentothername fk_0e0a11_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentothername
    ADD CONSTRAINT fk_0e0a11_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: exitwithdrawtypedescriptor fk_0e8b13_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.exitwithdrawtypedescriptor
    ADD CONSTRAINT fk_0e8b13_descriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinternationaladdress fk_0ee746_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: educationorganizationinternationaladdress fk_0ee746_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinternationaladdress
    ADD CONSTRAINT fk_0ee746_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: interactivitystyledescriptor fk_0f0ab7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interactivitystyledescriptor
    ADD CONSTRAINT fk_0f0ab7_descriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationalenvironmentdescriptor fk_0f941f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationalenvironmentdescriptor
    ADD CONSTRAINT fk_0f941f_descriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: intervention fk_0fae05_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: intervention fk_0fae05_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: intervention fk_0fae05_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.intervention
    ADD CONSTRAINT fk_0fae05_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: studentassessmentscoreresult fk_0fceba_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentscoreresult
    ADD CONSTRAINT fk_0fceba_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor FOREIGN KEY (cumulativeearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor1 FOREIGN KEY (cumulativeattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor2; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor2 FOREIGN KEY (sessionearnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_credittypedescriptor3; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_credittypedescriptor3 FOREIGN KEY (sessionattemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: studentacademicrecord fk_0ff8d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentacademicrecord fk_0ff8d6_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentacademicrecord fk_0ff8d6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentacademicrecord fk_0ff8d6_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecord
    ADD CONSTRAINT fk_0ff8d6_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: continuationofservicesreasondescriptor fk_10230d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.continuationofservicesreasondescriptor
    ADD CONSTRAINT fk_10230d_descriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: postingresultdescriptor fk_105b75_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postingresultdescriptor
    ADD CONSTRAINT fk_105b75_descriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialacademicsubject fk_1141c9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: credentialacademicsubject fk_1141c9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialacademicsubject
    ADD CONSTRAINT fk_1141c9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperformancelevel fk_11bd42_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: assessmentperformancelevel fk_11bd42_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperformancelevel
    ADD CONSTRAINT fk_11bd42_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: teachingcredentialbasisdescriptor fk_11e850_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialbasisdescriptor
    ADD CONSTRAINT fk_11e850_descriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: feederschoolassociation fk_11f7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school FOREIGN KEY (feederschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: feederschoolassociation fk_11f7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.feederschoolassociation
    ADD CONSTRAINT fk_11f7b6_school1 FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: parentaddressperiod fk_123e27_parentaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddressperiod
    ADD CONSTRAINT fk_123e27_parentaddress FOREIGN KEY (addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.parentaddress(addresstypedescriptorid, city, parentusi, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: chartofaccount fk_131e2b_accounttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_accounttypedescriptor FOREIGN KEY (accounttypedescriptorid) REFERENCES edfi.accounttypedescriptor(accounttypedescriptorid);


--
-- Name: chartofaccount fk_131e2b_balancesheetdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_balancesheetdimension FOREIGN KEY (balancesheetcode, fiscalyear) REFERENCES edfi.balancesheetdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: chartofaccount fk_131e2b_functiondimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_functiondimension FOREIGN KEY (functioncode, fiscalyear) REFERENCES edfi.functiondimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_funddimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_funddimension FOREIGN KEY (fundcode, fiscalyear) REFERENCES edfi.funddimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_objectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_objectdimension FOREIGN KEY (objectcode, fiscalyear) REFERENCES edfi.objectdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_operationalunitdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_operationalunitdimension FOREIGN KEY (operationalunitcode, fiscalyear) REFERENCES edfi.operationalunitdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_programdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_programdimension FOREIGN KEY (programcode, fiscalyear) REFERENCES edfi.programdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_projectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_projectdimension FOREIGN KEY (projectcode, fiscalyear) REFERENCES edfi.projectdimension(code, fiscalyear);


--
-- Name: chartofaccount fk_131e2b_sourcedimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccount
    ADD CONSTRAINT fk_131e2b_sourcedimension FOREIGN KEY (sourcecode, fiscalyear) REFERENCES edfi.sourcedimension(code, fiscalyear);


--
-- Name: organizationdepartment fk_13b924_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: organizationdepartment fk_13b924_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization FOREIGN KEY (organizationdepartmentid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: organizationdepartment fk_13b924_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.organizationdepartment
    ADD CONSTRAINT fk_13b924_educationorganization1 FOREIGN KEY (parenteducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: contentclassdescriptor fk_14a617_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contentclassdescriptor
    ADD CONSTRAINT fk_14a617_descriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: proficiencydescriptor fk_14d0fd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.proficiencydescriptor
    ADD CONSTRAINT fk_14d0fd_descriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: assessmentitemlearningstandard fk_151580_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemlearningstandard
    ADD CONSTRAINT fk_151580_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristic fk_1587d8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sectioncharacteristic fk_1587d8_sectioncharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristic
    ADD CONSTRAINT fk_1587d8_sectioncharacteristicdescriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.sectioncharacteristicdescriptor(sectioncharacteristicdescriptorid);


--
-- Name: licensetypedescriptor fk_159a96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensetypedescriptor
    ADD CONSTRAINT fk_159a96_descriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: location fk_15b619_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.location
    ADD CONSTRAINT fk_15b619_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: electronicmailtypedescriptor fk_15fde6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.electronicmailtypedescriptor
    ADD CONSTRAINT fk_15fde6_descriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardequivalencestrengthdescriptor fk_166f6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalencestrengthdescriptor
    ADD CONSTRAINT fk_166f6a_descriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristic fk_16896e_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristic
    ADD CONSTRAINT fk_16896e_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: programtypedescriptor fk_16eb9d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programtypedescriptor
    ADD CONSTRAINT fk_16eb9d_descriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcohortassociation fk_170747_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: staffcohortassociation fk_170747_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcohortassociation
    ADD CONSTRAINT fk_170747_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: courseofferedgradelevel fk_175995_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseofferedgradelevel fk_175995_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferedgradelevel
    ADD CONSTRAINT fk_175995_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard FOREIGN KEY (sourcelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandard1 FOREIGN KEY (targetlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandardequivalenceassociation fk_17c02a_learningstandardequivalencestrengthdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardequivalenceassociation
    ADD CONSTRAINT fk_17c02a_learningstandardequivalencestrengthdescriptor FOREIGN KEY (learningstandardequivalencestrengthdescriptorid) REFERENCES edfi.learningstandardequivalencestrengthdescriptor(learningstandardequivalencestrengthdescriptorid);


--
-- Name: interventionclassdescriptor fk_183bc5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionclassdescriptor
    ADD CONSTRAINT fk_183bc5_descriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courseidentificationcode fk_18889f_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationcode
    ADD CONSTRAINT fk_18889f_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: attendanceeventcategorydescriptor fk_19349d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attendanceeventcategorydescriptor
    ADD CONSTRAINT fk_19349d_descriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: monitoreddescriptor fk_19374b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.monitoreddescriptor
    ADD CONSTRAINT fk_19374b_descriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohort fk_19c6d6_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: cohort fk_19c6d6_cohortscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohortscopedescriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.cohortscopedescriptor(cohortscopedescriptorid);


--
-- Name: cohort fk_19c6d6_cohorttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_cohorttypedescriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.cohorttypedescriptor(cohorttypedescriptorid);


--
-- Name: cohort fk_19c6d6_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohort
    ADD CONSTRAINT fk_19c6d6_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplanrequiredassessment fk_1a4369_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: graduationplanrequiredassessment fk_1a4369_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessment
    ADD CONSTRAINT fk_1a4369_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_monitoreddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_monitoreddescriptor FOREIGN KEY (monitoreddescriptorid) REFERENCES edfi.monitoreddescriptor(monitoreddescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_participationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_participationdescriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.participationdescriptor(participationdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_proficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_proficiencydescriptor FOREIGN KEY (proficiencydescriptorid) REFERENCES edfi.proficiencydescriptor(proficiencydescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_progressdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_progressdescriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.progressdescriptor(progressdescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentlanguageinstructionprogramassociationenglishlangu_1ac620 fk_1ac620_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationenglishlangu_1ac620
    ADD CONSTRAINT fk_1ac620_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: objectiveassessmentperformancelevel fk_1b7007_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentperformancelevel
    ADD CONSTRAINT fk_1b7007_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_gunfreeschoolsactreportingstatusdescriptor FOREIGN KEY (gunfreeschoolsactreportingstatusdescriptorid) REFERENCES edfi.gunfreeschoolsactreportingstatusdescriptor(gunfreeschoolsactreportingstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolchoiceimplementstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolchoiceimplementstatusdescriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.schoolchoiceimplementstatusdescriptor(schoolchoiceimplementstatusdescriptorid);


--
-- Name: localeducationagencyaccountability fk_1ba71e_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyaccountability
    ADD CONSTRAINT fk_1ba71e_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_cteprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_cteprogramservicedescriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.cteprogramservicedescriptor(cteprogramservicedescriptorid);


--
-- Name: studentcteprogramassociationcteprogramservice fk_1bab8a_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogramservice
    ADD CONSTRAINT fk_1bab8a_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: surveyquestion fk_1bb88c_questionformdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_questionformdescriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.questionformdescriptor(questionformdescriptorid);


--
-- Name: surveyquestion fk_1bb88c_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: surveyquestion fk_1bb88c_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestion
    ADD CONSTRAINT fk_1bb88c_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation fk_1c30e0_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_1c30e0_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi);


--
-- Name: studentlearningobjectivegeneralstudentprogramassociation fk_1c30e0_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivegeneralstudentprogramassociation
    ADD CONSTRAINT fk_1c30e0_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) ON DELETE CASCADE;


--
-- Name: surveyquestionresponsechoice fk_1c624b_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsechoice
    ADD CONSTRAINT fk_1c624b_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: stafflanguage fk_1c8d3f_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: stafflanguage fk_1c8d3f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguage
    ADD CONSTRAINT fk_1c8d3f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: tribalaffiliationdescriptor fk_1cb85d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.tribalaffiliationdescriptor
    ADD CONSTRAINT fk_1cb85d_descriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: titleipartaparticipantdescriptor fk_1d0172_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaparticipantdescriptor
    ADD CONSTRAINT fk_1d0172_descriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohortyeartypedescriptor fk_1d837f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortyeartypedescriptor
    ADD CONSTRAINT fk_1d837f_descriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudylearningresourcemetadatauri fk_1dcb14_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudylearningresourcemetadatauri
    ADD CONSTRAINT fk_1dcb14_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: addresstypedescriptor fk_1edaa3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.addresstypedescriptor
    ADD CONSTRAINT fk_1edaa3_descriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: objectiveassessmentlearningstandard fk_1ee70e_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentlearningstandard
    ADD CONSTRAINT fk_1ee70e_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: gradingperioddescriptor fk_1f0f64_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperioddescriptor
    ADD CONSTRAINT fk_1f0f64_descriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: course fk_2096ce_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: course fk_2096ce_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: course fk_2096ce_coursedefinedbydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursedefinedbydescriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.coursedefinedbydescriptor(coursedefinedbydescriptorid);


--
-- Name: course fk_2096ce_coursegpaapplicabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_coursegpaapplicabilitydescriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.coursegpaapplicabilitydescriptor(coursegpaapplicabilitydescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor FOREIGN KEY (minimumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_credittypedescriptor1 FOREIGN KEY (maximumavailablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: course fk_2096ce_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.course
    ADD CONSTRAINT fk_2096ce_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcategorydescriptor fk_20e875_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcategorydescriptor
    ADD CONSTRAINT fk_20e875_descriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: behaviordescriptor fk_20feca_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.behaviordescriptor
    ADD CONSTRAINT fk_20feca_descriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: courseofferingcourselevelcharacteristic fk_210b6b_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_210b6b_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: survey fk_211bb3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: survey fk_211bb3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: survey fk_211bb3_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: survey fk_211bb3_surveycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.survey
    ADD CONSTRAINT fk_211bb3_surveycategorydescriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.surveycategorydescriptor(surveycategorydescriptorid);


--
-- Name: surveysectionresponse fk_2189c3_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: surveysectionresponse fk_2189c3_surveysection; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponse
    ADD CONSTRAINT fk_2189c3_surveysection FOREIGN KEY (namespace, surveyidentifier, surveysectiontitle) REFERENCES edfi.surveysection(namespace, surveyidentifier, surveysectiontitle);


--
-- Name: assessmentcontentstandardauthor fk_21acd5_assessmentcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandardauthor
    ADD CONSTRAINT fk_21acd5_assessmentcontentstandard FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessmentcontentstandard(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellschedulegradelevel fk_226b3d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedulegradelevel
    ADD CONSTRAINT fk_226b3d_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: assessmentsection fk_22ceba_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentsection fk_22ceba_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentsection
    ADD CONSTRAINT fk_22ceba_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: learningobjectiveacademicsubject fk_23fa0f_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT fk_23fa0f_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningobjectiveacademicsubject fk_23fa0f_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectiveacademicsubject
    ADD CONSTRAINT fk_23fa0f_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_communityorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_communityorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.communityorganization(communityorganizationid);


--
-- Name: communityprovider fk_247572_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_educationorganization FOREIGN KEY (communityproviderid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: communityprovider fk_247572_providercategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providercategorydescriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.providercategorydescriptor(providercategorydescriptorid);


--
-- Name: communityprovider fk_247572_providerprofitabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerprofitabilitydescriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.providerprofitabilitydescriptor(providerprofitabilitydescriptorid);


--
-- Name: communityprovider fk_247572_providerstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityprovider
    ADD CONSTRAINT fk_247572_providerstatusdescriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.providerstatusdescriptor(providerstatusdescriptorid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganization FOREIGN KEY (membereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationnetworkassociation fk_252151_educationorganizationnetwork; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetworkassociation
    ADD CONSTRAINT fk_252151_educationorganizationnetwork FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganizationnetwork(educationorganizationnetworkid);


--
-- Name: internetperformanceinresidencedescriptor fk_256049_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetperformanceinresidencedescriptor
    ADD CONSTRAINT fk_256049_descriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: localeducationagency fk_25c08c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationorganization FOREIGN KEY (localeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: localeducationagency fk_25c08c_educationservicecenter; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_educationservicecenter FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationservicecenter(educationservicecenterid);


--
-- Name: localeducationagency fk_25c08c_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagency FOREIGN KEY (parentlocaleducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: localeducationagency fk_25c08c_localeducationagencycategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_localeducationagencycategorydescriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.localeducationagencycategorydescriptor(localeducationagencycategorydescriptorid);


--
-- Name: localeducationagency fk_25c08c_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagency
    ADD CONSTRAINT fk_25c08c_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: studentinterventionassociation fk_25cb9c_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_cohort FOREIGN KEY (cohortidentifier, cohorteducationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentinterventionassociation fk_25cb9c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionassociation fk_25cb9c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociation
    ADD CONSTRAINT fk_25cb9c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_languageinstructionprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_languageinstructionprogramservicedescriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.languageinstructionprogramservicedescriptor(languageinstructionprogramservicedescriptorid);


--
-- Name: studentlanguageinstructionprogramassociationlanguageinst_268e07 fk_268e07_studentlanguageinstructionprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociationlanguageinst_268e07
    ADD CONSTRAINT fk_268e07_studentlanguageinstructionprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentlanguageinstructionprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: objectiveassessment fk_269e10_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: objectiveassessment fk_269e10_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: objectiveassessment fk_269e10_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessment
    ADD CONSTRAINT fk_269e10_objectiveassessment FOREIGN KEY (assessmentidentifier, parentidentificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studenttitleipartaprogramassociation fk_27d914_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociation fk_27d914_titleipartaparticipantdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociation
    ADD CONSTRAINT fk_27d914_titleipartaparticipantdescriptor FOREIGN KEY (titleipartaparticipantdescriptorid) REFERENCES edfi.titleipartaparticipantdescriptor(titleipartaparticipantdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: openstaffpositionacademicsubject fk_285d36_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositionacademicsubject
    ADD CONSTRAINT fk_285d36_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: postsecondaryinstitution fk_2935bf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_educationorganization FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitution fk_2935bf_postsecondaryinstitutionleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitution
    ADD CONSTRAINT fk_2935bf_postsecondaryinstitutionleveldescriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.postsecondaryinstitutionleveldescriptor(postsecondaryinstitutionleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: studentinterventionassociationinterventioneffectiveness fk_29e870_studentinterventionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionassociationinterventioneffectiveness
    ADD CONSTRAINT fk_29e870_studentinterventionassociation FOREIGN KEY (educationorganizationid, interventionidentificationcode, studentusi) REFERENCES edfi.studentinterventionassociation(educationorganizationid, interventionidentificationcode, studentusi) ON DELETE CASCADE;


--
-- Name: student fk_2a164d_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: student fk_2a164d_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_countrydescriptor FOREIGN KEY (birthcountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: student fk_2a164d_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: student fk_2a164d_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_sexdescriptor FOREIGN KEY (birthsexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: student fk_2a164d_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.student
    ADD CONSTRAINT fk_2a164d_stateabbreviationdescriptor FOREIGN KEY (birthstateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguage fk_2a4725_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguage
    ADD CONSTRAINT fk_2a4725_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentacademicrecordacademichonor fk_2b286a_academichonorcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_academichonorcategorydescriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.academichonorcategorydescriptor(academichonorcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordacademichonor fk_2b286a_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordacademichonor
    ADD CONSTRAINT fk_2b286a_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reasonnottesteddescriptor fk_2ba6d0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonnottesteddescriptor
    ADD CONSTRAINT fk_2ba6d0_descriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: studenteducationorganizationassociationancestryethnicorigin fk_2c2b13_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationancestryethnicorigin
    ADD CONSTRAINT fk_2c2b13_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentbehaviorassociation fk_2c4cdb_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_2c4cdb_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi);


--
-- Name: objectiveassessmentscore fk_2c91e8_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: objectiveassessmentscore fk_2c91e8_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: objectiveassessmentscore fk_2c91e8_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentscore
    ADD CONSTRAINT fk_2c91e8_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: accountabilityrating fk_2d3c0c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: accountabilityrating fk_2d3c0c_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accountabilityrating
    ADD CONSTRAINT fk_2d3c0c_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentidentificationdocument fk_2d57be_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentidentificationdocument fk_2d57be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationdocument
    ADD CONSTRAINT fk_2d57be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: licensestatusdescriptor fk_2db9cf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.licensestatusdescriptor
    ADD CONSTRAINT fk_2db9cf_descriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: studenteducationorganizationassociationlanguageuse fk_2e333a_studenteducationorganizationassociationlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationlanguageuse
    ADD CONSTRAINT fk_2e333a_studenteducationorganizationassociationlanguage FOREIGN KEY (educationorganizationid, languagedescriptorid, studentusi) REFERENCES edfi.studenteducationorganizationassociationlanguage(educationorganizationid, languagedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: creditcategorydescriptor fk_2e3556_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.creditcategorydescriptor
    ADD CONSTRAINT fk_2e3556_descriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolcategorydescriptor fk_2e8c40_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategorydescriptor
    ADD CONSTRAINT fk_2e8c40_descriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseattemptresultdescriptor fk_306d96_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseattemptresultdescriptor
    ADD CONSTRAINT fk_306d96_descriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionprogram fk_309217_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: sectionprogram fk_309217_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionprogram
    ADD CONSTRAINT fk_309217_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstaff fk_30e866_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstaff
    ADD CONSTRAINT fk_30e866_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffidentificationdocument fk_31779a_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffidentificationdocument fk_31779a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationdocument
    ADD CONSTRAINT fk_31779a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studentprogramattendanceevent fk_317aeb_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentprogramattendanceevent fk_317aeb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: studentprogramattendanceevent fk_317aeb_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramattendanceevent
    ADD CONSTRAINT fk_317aeb_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: courseofferingcurriculumused fk_31bbf7_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_31bbf7_curriculumuseddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_31bbf7_curriculumuseddescriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.curriculumuseddescriptor(curriculumuseddescriptorid);


--
-- Name: administrationenvironmentdescriptor fk_328563_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrationenvironmentdescriptor
    ADD CONSTRAINT fk_328563_descriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisability fk_32920f_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisability
    ADD CONSTRAINT fk_32920f_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: localaccount fk_32eddb_chartofaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT fk_32eddb_chartofaccount FOREIGN KEY (chartofaccountidentifier, chartofaccounteducationorganizationid, fiscalyear) REFERENCES edfi.chartofaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localaccount fk_32eddb_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccount
    ADD CONSTRAINT fk_32eddb_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: stateeducationagency fk_340d5d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagency
    ADD CONSTRAINT fk_340d5d_educationorganization FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: parentlanguage fk_34f9df_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT fk_34f9df_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: parentlanguage fk_34f9df_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguage
    ADD CONSTRAINT fk_34f9df_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: coursetranscriptacademicsubject fk_354642_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: coursetranscriptacademicsubject fk_354642_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptacademicsubject
    ADD CONSTRAINT fk_354642_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentcharacteristicdescriptor fk_359668_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcharacteristicdescriptor
    ADD CONSTRAINT fk_359668_descriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionuri fk_35afab_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionuri
    ADD CONSTRAINT fk_35afab_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentcohortassociation fk_369ddc_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid);


--
-- Name: studentcohortassociation fk_369ddc_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociation
    ADD CONSTRAINT fk_369ddc_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: cohortscopedescriptor fk_36f154_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortscopedescriptor
    ADD CONSTRAINT fk_36f154_descriptor FOREIGN KEY (cohortscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentperiod fk_3734d1_assessmentperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperiod
    ADD CONSTRAINT fk_3734d1_assessmentperioddescriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.assessmentperioddescriptor(assessmentperioddescriptorid);


--
-- Name: restraintevent fk_3800be_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: restraintevent fk_3800be_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: restraintevent fk_3800be_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restraintevent
    ADD CONSTRAINT fk_3800be_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: learningstandardgradelevel fk_38677c_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardgradelevel fk_38677c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardgradelevel
    ADD CONSTRAINT fk_38677c_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveysectionresponsestafftargetassociation fk_39073d_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponsestafftargetassociation
    ADD CONSTRAINT fk_39073d_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: accommodationdescriptor fk_395139_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accommodationdescriptor
    ADD CONSTRAINT fk_395139_descriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjective fk_395c07_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_competencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_competencyobjective FOREIGN KEY (objectiveeducationorganizationid, objective, objectivegradeleveldescriptorid) REFERENCES edfi.competencyobjective(educationorganizationid, objective, objectivegradeleveldescriptorid);


--
-- Name: studentcompetencyobjective fk_395c07_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: studentcompetencyobjective fk_395c07_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjective
    ADD CONSTRAINT fk_395c07_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentsectionassociation fk_39aa3c_attemptstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_attemptstatusdescriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.attemptstatusdescriptor(attemptstatusdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_repeatidentifierdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_repeatidentifierdescriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.repeatidentifierdescriptor(repeatidentifierdescriptorid);


--
-- Name: studentsectionassociation fk_39aa3c_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionassociation fk_39aa3c_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionassociation
    ADD CONSTRAINT fk_39aa3c_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: administrativefundingcontroldescriptor fk_3a5d1f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.administrativefundingcontroldescriptor
    ADD CONSTRAINT fk_3a5d1f_descriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: eventcircumstancedescriptor fk_3a704d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.eventcircumstancedescriptor
    ADD CONSTRAINT fk_3a704d_descriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventionprescriptioneducationcontent fk_3ab5d4_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptioneducationcontent
    ADD CONSTRAINT fk_3ab5d4_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentidentificationcode fk_3af731_assessmentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationcode
    ADD CONSTRAINT fk_3af731_assessmentidentificationsystemdescriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.assessmentidentificationsystemdescriptor(assessmentidentificationsystemdescriptorid);


--
-- Name: operationalunitdimensionreportingtag fk_3b06c7_operationalunitdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT fk_3b06c7_operationalunitdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.operationalunitdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: operationalunitdimensionreportingtag fk_3b06c7_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalunitdimensionreportingtag
    ADD CONSTRAINT fk_3b06c7_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbysubject fk_3b5b30_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbysubject
    ADD CONSTRAINT fk_3b5b30_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: stateeducationagencyfederalfunds fk_3c7e00_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateeducationagencyfederalfunds
    ADD CONSTRAINT fk_3c7e00_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid) ON DELETE CASCADE;


--
-- Name: interventioneducationcontent fk_3c823d_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: interventioneducationcontent fk_3c823d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneducationcontent
    ADD CONSTRAINT fk_3c823d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: gradeleveldescriptor fk_3c9538_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradeleveldescriptor
    ADD CONSTRAINT fk_3c9538_descriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: openstaffposition fk_3cc1d4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: openstaffposition fk_3cc1d4_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_postingresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_postingresultdescriptor FOREIGN KEY (postingresultdescriptorid) REFERENCES edfi.postingresultdescriptor(postingresultdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: openstaffposition fk_3cc1d4_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffposition
    ADD CONSTRAINT fk_3cc1d4_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionappropriategradelevel fk_3d5433_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriategradelevel
    ADD CONSTRAINT fk_3d5433_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: staffschoolassociationgradelevel fk_3db81b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: staffschoolassociationgradelevel fk_3db81b_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationgradelevel
    ADD CONSTRAINT fk_3db81b_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: postsecondaryinstitutionleveldescriptor fk_3dd32d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionleveldescriptor
    ADD CONSTRAINT fk_3dd32d_descriptor FOREIGN KEY (postsecondaryinstitutionleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programdimensionreportingtag fk_3e04ae_programdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT fk_3e04ae_programdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.programdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: programdimensionreportingtag fk_3e04ae_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programdimensionreportingtag
    ADD CONSTRAINT fk_3e04ae_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: assessmentacademicsubject fk_400d06_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentacademicsubject
    ADD CONSTRAINT fk_400d06_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: weapondescriptor fk_402831_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.weapondescriptor
    ADD CONSTRAINT fk_402831_descriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprimarynighttimeresidencedescriptor fk_41a2b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprimarynighttimeresidencedescriptor
    ADD CONSTRAINT fk_41a2b1_descriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourcelearningresourcemetadatauri fk_421bfa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourcelearningresourcemetadatauri
    ADD CONSTRAINT fk_421bfa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategory fk_427110_educationorganizationcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategory
    ADD CONSTRAINT fk_427110_educationorganizationcategorydescriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.educationorganizationcategorydescriptor(educationorganizationcategorydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_responsibilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_responsibilitydescriptor FOREIGN KEY (responsibilitydescriptorid) REFERENCES edfi.responsibilitydescriptor(responsibilitydescriptorid);


--
-- Name: studenteducationorganizationresponsibilityassociation fk_42aa64_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationresponsibilityassociation
    ADD CONSTRAINT fk_42aa64_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: classperiodmeetingtime fk_435263_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classperiodmeetingtime
    ADD CONSTRAINT fk_435263_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: questionformdescriptor fk_43a820_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.questionformdescriptor
    ADD CONSTRAINT fk_43a820_descriptor FOREIGN KEY (questionformdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_educationorganization FOREIGN KEY (educationservicecenterid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationservicecenter fk_43bbe1_stateeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationservicecenter
    ADD CONSTRAINT fk_43bbe1_stateeducationagency FOREIGN KEY (stateeducationagencyid) REFERENCES edfi.stateeducationagency(stateeducationagencyid);


--
-- Name: languageusedescriptor fk_44c593_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageusedescriptor
    ADD CONSTRAINT fk_44c593_descriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycourse fk_44e78d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: graduationplancreditsbycourse fk_44e78d_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycourse
    ADD CONSTRAINT fk_44e78d_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: programlearningstandard fk_44f909_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: programlearningstandard fk_44f909_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningstandard
    ADD CONSTRAINT fk_44f909_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: educationorganization fk_4525e6_operationalstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganization
    ADD CONSTRAINT fk_4525e6_operationalstatusdescriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.operationalstatusdescriptor(operationalstatusdescriptorid);


--
-- Name: parenttelephone fk_453ba8_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT fk_453ba8_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parenttelephone fk_453ba8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parenttelephone
    ADD CONSTRAINT fk_453ba8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: gradebookentrytypedescriptor fk_45eb00_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrytypedescriptor
    ADD CONSTRAINT fk_45eb00_descriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: sectionclassperiod fk_465c76_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionclassperiod
    ADD CONSTRAINT fk_465c76_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentry fk_466cfa_gradebookentrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradebookentrytypedescriptor FOREIGN KEY (gradebookentrytypedescriptorid) REFERENCES edfi.gradebookentrytypedescriptor(gradebookentrytypedescriptorid);


--
-- Name: gradebookentry fk_466cfa_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_gradingperiod FOREIGN KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: gradebookentry fk_466cfa_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentry
    ADD CONSTRAINT fk_466cfa_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: localpayroll fk_46e5c2_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localpayroll fk_46e5c2_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localpayroll fk_46e5c2_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localpayroll
    ADD CONSTRAINT fk_46e5c2_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionprescriptionappropriategradelevel fk_4736c7_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriategradelevel
    ADD CONSTRAINT fk_4736c7_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: contacttypedescriptor fk_47719b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.contacttypedescriptor
    ADD CONSTRAINT fk_47719b_descriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemresultdescriptor fk_47b16e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemresultdescriptor
    ADD CONSTRAINT fk_47b16e_descriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplantypedescriptor fk_4874e0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplantypedescriptor
    ADD CONSTRAINT fk_4874e0_descriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationaddress fk_4925da_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: educationorganizationaddress fk_4925da_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddress
    ADD CONSTRAINT fk_4925da_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: entrytypedescriptor fk_497112_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrytypedescriptor
    ADD CONSTRAINT fk_497112_descriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionappropriatesex fk_4a3f1c_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionappropriatesex
    ADD CONSTRAINT fk_4a3f1c_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationidentificationcode fk_4a715c_educationorganizationidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationcode
    ADD CONSTRAINT fk_4a715c_educationorganizationidentificationsystemdescriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.educationorganizationidentificationsystemdescriptor(educationorganizationidentificationsystemdescriptorid);


--
-- Name: interventionprescriptionuri fk_4acf8e_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionuri
    ADD CONSTRAINT fk_4acf8e_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentnonoffenderassociation fk_4b43da_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociation
    ADD CONSTRAINT fk_4b43da_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: visadescriptor fk_4b609a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.visadescriptor
    ADD CONSTRAINT fk_4b609a_descriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: teachingcredentialdescriptor fk_4bb8c5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.teachingcredentialdescriptor
    ADD CONSTRAINT fk_4bb8c5_descriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programsponsor fk_4c38bb_programsponsordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsor
    ADD CONSTRAINT fk_4c38bb_programsponsordescriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.programsponsordescriptor(programsponsordescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentnonoffenderassociationdisciplin_4c979a fk_4c979a_studentdisciplineincidentnonoffenderassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentnonoffenderassociationdisciplin_4c979a
    ADD CONSTRAINT fk_4c979a_studentdisciplineincidentnonoffenderassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentnonoffenderassociation(incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: citizenshipstatusdescriptor fk_4c97e8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.citizenshipstatusdescriptor
    ADD CONSTRAINT fk_4c97e8_descriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandardauthor fk_4c9e40_learningstandardcontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandardauthor
    ADD CONSTRAINT fk_4c9e40_learningstandardcontentstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandardcontentstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydescriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.disabilitydescriptor(disabilitydescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_disabilitydeterminationsourcetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_disabilitydeterminationsourcetypedescriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.disabilitydeterminationsourcetypedescriptor(disabilitydeterminationsourcetypedescriptorid);


--
-- Name: studenteducationorganizationassociationdisability fk_4ca65b_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisability
    ADD CONSTRAINT fk_4ca65b_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: migranteducationprogramservicedescriptor fk_4cc191_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.migranteducationprogramservicedescriptor
    ADD CONSTRAINT fk_4cc191_descriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localcontractedstaff fk_4d9b4a_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localcontractedstaff fk_4d9b4a_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: localcontractedstaff fk_4d9b4a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localcontractedstaff
    ADD CONSTRAINT fk_4d9b4a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: stafftelephone fk_4de15a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftelephone fk_4de15a_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftelephone
    ADD CONSTRAINT fk_4de15a_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffpersonalidentificationdocument fk_4e3afe_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffpersonalidentificationdocument
    ADD CONSTRAINT fk_4e3afe_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: surveycategorydescriptor fk_4e55bd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycategorydescriptor
    ADD CONSTRAINT fk_4e55bd_descriptor FOREIGN KEY (surveycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_employmentstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_employmentstatusdescriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.employmentstatusdescriptor(employmentstatusdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationdescriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.separationdescriptor(separationdescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_separationreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_separationreasondescriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.separationreasondescriptor(separationreasondescriptorid);


--
-- Name: staffeducationorganizationemploymentassociation fk_4e79b9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationemploymentassociation
    ADD CONSTRAINT fk_4e79b9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: relationdescriptor fk_4e9305_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.relationdescriptor
    ADD CONSTRAINT fk_4e9305_descriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialfielddescriptor fk_4eab15_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialfielddescriptor
    ADD CONSTRAINT fk_4eab15_descriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: performancebaseconversiondescriptor fk_4fc529_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performancebaseconversiondescriptor
    ADD CONSTRAINT fk_4fc529_descriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_classroompositiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_classroompositiondescriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.classroompositiondescriptor(classroompositiondescriptorid);


--
-- Name: staffsectionassociation fk_515cb5_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: staffsectionassociation fk_515cb5_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffsectionassociation
    ADD CONSTRAINT fk_515cb5_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: assignmentlatestatusdescriptor fk_518b3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assignmentlatestatusdescriptor
    ADD CONSTRAINT fk_518b3c_descriptor FOREIGN KEY (assignmentlatestatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_neglectedordelinquentprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_neglectedordelinquentprogramservicedescriptor FOREIGN KEY (neglectedordelinquentprogramservicedescriptorid) REFERENCES edfi.neglectedordelinquentprogramservicedescriptor(neglectedordelinquentprogramservicedescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociationneglectedo_520251 fk_520251_studentneglectedordelinquentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociationneglectedo_520251
    ADD CONSTRAINT fk_520251_studentneglectedordelinquentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentneglectedordelinquentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: platformtypedescriptor fk_56ac99_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.platformtypedescriptor
    ADD CONSTRAINT fk_56ac99_descriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: homelessprogramservicedescriptor fk_56c464_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.homelessprogramservicedescriptor
    ADD CONSTRAINT fk_56c464_descriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialendorsement fk_57f7d2_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialendorsement
    ADD CONSTRAINT fk_57f7d2_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentprogram fk_58013b_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentprogram
    ADD CONSTRAINT fk_58013b_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: coursecompetencylevel fk_581f0f_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursecompetencylevel
    ADD CONSTRAINT fk_581f0f_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: studenteducationorganizationassociationelectronicmail fk_582e49_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationelectronicmail
    ADD CONSTRAINT fk_582e49_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: learningobjective fk_588d15_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjective
    ADD CONSTRAINT fk_588d15_learningobjective FOREIGN KEY (parentlearningobjectiveid, parentnamespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: cohortprogram fk_59fcb5_cohort; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_cohort FOREIGN KEY (cohortidentifier, educationorganizationid) REFERENCES edfi.cohort(cohortidentifier, educationorganizationid) ON DELETE CASCADE;


--
-- Name: cohortprogram fk_59fcb5_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohortprogram
    ADD CONSTRAINT fk_59fcb5_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: gradingperiod fk_5a18f9_gradingperioddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_gradingperioddescriptor FOREIGN KEY (gradingperioddescriptorid) REFERENCES edfi.gradingperioddescriptor(gradingperioddescriptorid);


--
-- Name: gradingperiod fk_5a18f9_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: gradingperiod fk_5a18f9_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradingperiod
    ADD CONSTRAINT fk_5a18f9_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: localeducationagencyfederalfunds fk_5a8c0e_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencyfederalfunds
    ADD CONSTRAINT fk_5a8c0e_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid) ON DELETE CASCADE;


--
-- Name: credentialtypedescriptor fk_5a9f1d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialtypedescriptor
    ADD CONSTRAINT fk_5a9f1d_descriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationprogramparticipation fk_5c2c98_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT fk_5c2c98_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipation fk_5c2c98_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipation
    ADD CONSTRAINT fk_5c2c98_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: employmentstatusdescriptor fk_5ccb7e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.employmentstatusdescriptor
    ADD CONSTRAINT fk_5ccb7e_descriptor FOREIGN KEY (employmentstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: attemptstatusdescriptor fk_5d730c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.attemptstatusdescriptor
    ADD CONSTRAINT fk_5d730c_descriptor FOREIGN KEY (attemptstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordrecognition fk_5e049e_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: studentacademicrecordrecognition fk_5e049e_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordrecognition
    ADD CONSTRAINT fk_5e049e_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: competencyobjective fk_5e9932_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: competencyobjective fk_5e9932_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyobjective
    ADD CONSTRAINT fk_5e9932_gradeleveldescriptor FOREIGN KEY (objectivegradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: primarylearningdeviceawayfromschooldescriptor fk_5ee08d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceawayfromschooldescriptor
    ADD CONSTRAINT fk_5ee08d_descriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studenteducationorganizationassociationdisabilitydesignation fk_5ee8fd_studenteducationorganizationassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationdisabilitydesignation
    ADD CONSTRAINT fk_5ee8fd_studenteducationorganizationassociationdisability FOREIGN KEY (disabilitydescriptorid, educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociationdisability(disabilitydescriptorid, educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: participationstatusdescriptor fk_5f0467_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationstatusdescriptor
    ADD CONSTRAINT fk_5f0467_descriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parent fk_5f7953_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: parent fk_5f7953_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: parent fk_5f7953_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parent
    ADD CONSTRAINT fk_5f7953_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: person fk_6007db_sourcesystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.person
    ADD CONSTRAINT fk_6007db_sourcesystemdescriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.sourcesystemdescriptor(sourcesystemdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentsectionattendanceevent fk_61b087_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceevent fk_61b087_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceevent
    ADD CONSTRAINT fk_61b087_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reporterdescriptiondescriptor fk_62c0d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reporterdescriptiondescriptor
    ADD CONSTRAINT fk_62c0d2_descriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentinterventionattendanceevent fk_631023_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentinterventionattendanceevent fk_631023_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode);


--
-- Name: studentinterventionattendanceevent fk_631023_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentinterventionattendanceevent
    ADD CONSTRAINT fk_631023_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: providerstatusdescriptor fk_6328c9_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerstatusdescriptor
    ADD CONSTRAINT fk_6328c9_descriptor FOREIGN KEY (providerstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: communityorganization fk_636fcf_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityorganization
    ADD CONSTRAINT fk_636fcf_educationorganization FOREIGN KEY (communityorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningstandard fk_644654_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningstandard
    ADD CONSTRAINT fk_644654_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: surveyquestionmatrix fk_64d76d_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionmatrix
    ADD CONSTRAINT fk_64d76d_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier) ON DELETE CASCADE;


--
-- Name: schoolgradelevel fk_64d8a6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: schoolgradelevel fk_64d8a6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolgradelevel
    ADD CONSTRAINT fk_64d8a6_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_courseidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_courseidentificationsystemdescriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.courseidentificationsystemdescriptor(courseidentificationsystemdescriptorid);


--
-- Name: coursetranscriptalternativecourseidentificationcode fk_6621ee_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptalternativecourseidentificationcode
    ADD CONSTRAINT fk_6621ee_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: populationserveddescriptor fk_66f4dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.populationserveddescriptor
    ADD CONSTRAINT fk_66f4dc_descriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplinedescriptor fk_673b0a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplinedescriptor
    ADD CONSTRAINT fk_673b0a_descriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_neglectedordelinquentprogramdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_neglectedordelinquentprogramdescriptor FOREIGN KEY (neglectedordelinquentprogramdescriptorid) REFERENCES edfi.neglectedordelinquentprogramdescriptor(neglectedordelinquentprogramdescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor FOREIGN KEY (elaprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentneglectedordelinquentprogramassociation fk_678d65_progressleveldescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentneglectedordelinquentprogramassociation
    ADD CONSTRAINT fk_678d65_progressleveldescriptor1 FOREIGN KEY (mathematicsprogressleveldescriptorid) REFERENCES edfi.progressleveldescriptor(progressleveldescriptorid);


--
-- Name: studentdisciplineincidentassociation fk_679174_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentassociation fk_679174_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentdisciplineincidentassociation fk_679174_studentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociation
    ADD CONSTRAINT fk_679174_studentparticipationcodedescriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.studentparticipationcodedescriptor(studentparticipationcodedescriptorid);


--
-- Name: staff fk_681927_citizenshipstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_citizenshipstatusdescriptor FOREIGN KEY (citizenshipstatusdescriptorid) REFERENCES edfi.citizenshipstatusdescriptor(citizenshipstatusdescriptorid);


--
-- Name: staff fk_681927_levelofeducationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_levelofeducationdescriptor FOREIGN KEY (highestcompletedlevelofeducationdescriptorid) REFERENCES edfi.levelofeducationdescriptor(levelofeducationdescriptorid);


--
-- Name: staff fk_681927_oldethnicitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_oldethnicitydescriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.oldethnicitydescriptor(oldethnicitydescriptorid);


--
-- Name: staff fk_681927_person; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_person FOREIGN KEY (personid, sourcesystemdescriptorid) REFERENCES edfi.person(personid, sourcesystemdescriptorid);


--
-- Name: staff fk_681927_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staff
    ADD CONSTRAINT fk_681927_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: postsecondaryeventcategorydescriptor fk_6829e4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryeventcategorydescriptor
    ADD CONSTRAINT fk_6829e4_descriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programsponsordescriptor fk_68566b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programsponsordescriptor
    ADD CONSTRAINT fk_68566b_descriptor FOREIGN KEY (programsponsordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: session fk_6959b4_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: session fk_6959b4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: session fk_6959b4_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.session
    ADD CONSTRAINT fk_6959b4_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: staffrace fk_696d9a_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: staffrace fk_696d9a_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrace
    ADD CONSTRAINT fk_696d9a_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: assessmentitempossibleresponse fk_699b02_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitempossibleresponse
    ADD CONSTRAINT fk_699b02_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentprogramassociationservice fk_69cd6f_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentprogramassociationservice fk_69cd6f_studentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociationservice
    ADD CONSTRAINT fk_69cd6f_studentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_cohortyeartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_cohortyeartypedescriptor FOREIGN KEY (cohortyeartypedescriptorid) REFERENCES edfi.cohortyeartypedescriptor(cohortyeartypedescriptorid);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationcohortyear fk_69dd58_termdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationcohortyear
    ADD CONSTRAINT fk_69dd58_termdescriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.termdescriptor(termdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_courseattemptresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courseattemptresultdescriptor FOREIGN KEY (courseattemptresultdescriptorid) REFERENCES edfi.courseattemptresultdescriptor(courseattemptresultdescriptorid);


--
-- Name: coursetranscript fk_6acf2b_courserepeatcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_courserepeatcodedescriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.courserepeatcodedescriptor(courserepeatcodedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor FOREIGN KEY (attemptedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_credittypedescriptor1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_credittypedescriptor1 FOREIGN KEY (earnedcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: coursetranscript fk_6acf2b_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_educationorganization FOREIGN KEY (externaleducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: coursetranscript fk_6acf2b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_gradeleveldescriptor FOREIGN KEY (whentakengradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: coursetranscript fk_6acf2b_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: coursetranscript fk_6acf2b_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscript
    ADD CONSTRAINT fk_6acf2b_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid);


--
-- Name: staffclassificationdescriptor fk_6ca180_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffclassificationdescriptor
    ADD CONSTRAINT fk_6ca180_descriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffinternationaladdress fk_6cd27e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: staffinternationaladdress fk_6cd27e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffinternationaladdress
    ADD CONSTRAINT fk_6cd27e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_administrativefundingcontroldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_administrativefundingcontroldescriptor FOREIGN KEY (administrativefundingcontroldescriptorid) REFERENCES edfi.administrativefundingcontroldescriptor(administrativefundingcontroldescriptorid);


--
-- Name: school fk_6cd2e3_charterapprovalagencytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterapprovalagencytypedescriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.charterapprovalagencytypedescriptor(charterapprovalagencytypedescriptorid);


--
-- Name: school fk_6cd2e3_charterstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_charterstatusdescriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.charterstatusdescriptor(charterstatusdescriptorid);


--
-- Name: school fk_6cd2e3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_educationorganization FOREIGN KEY (schoolid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: school fk_6cd2e3_internetaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_internetaccessdescriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.internetaccessdescriptor(internetaccessdescriptorid);


--
-- Name: school fk_6cd2e3_localeducationagency; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_localeducationagency FOREIGN KEY (localeducationagencyid) REFERENCES edfi.localeducationagency(localeducationagencyid);


--
-- Name: school fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_magnetspecialprogramemphasisschooldescriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.magnetspecialprogramemphasisschooldescriptor(magnetspecialprogramemphasisschooldescriptorid);


--
-- Name: school fk_6cd2e3_schooltypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schooltypedescriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.schooltypedescriptor(schooltypedescriptorid);


--
-- Name: school fk_6cd2e3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_schoolyeartype FOREIGN KEY (charterapprovalschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: school fk_6cd2e3_titleipartaschooldesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.school
    ADD CONSTRAINT fk_6cd2e3_titleipartaschooldesignationdescriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.titleipartaschooldesignationdescriptor(titleipartaschooldesignationdescriptorid);


--
-- Name: financialcollectiondescriptor fk_6dc716_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.financialcollectiondescriptor
    ADD CONSTRAINT fk_6dc716_descriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellscheduledate fk_6e1291_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduledate
    ADD CONSTRAINT fk_6e1291_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: countrydescriptor fk_6e4222_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.countrydescriptor
    ADD CONSTRAINT fk_6e4222_descriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: stateabbreviationdescriptor fk_6ee971_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stateabbreviationdescriptor
    ADD CONSTRAINT fk_6ee971_descriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstaff fk_6fa51c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstaff
    ADD CONSTRAINT fk_6fa51c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: funddimensionreportingtag fk_7062bd_funddimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT fk_7062bd_funddimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.funddimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: funddimensionreportingtag fk_7062bd_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.funddimensionreportingtag
    ADD CONSTRAINT fk_7062bd_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_graduationplan FOREIGN KEY (alternativeeducationorganizationid, alternativegraduationplantypedescriptorid, alternativegraduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociationalternativegraduationplan fk_70e978_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationalternativegraduationplan
    ADD CONSTRAINT fk_70e978_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningstandardcontentstandard fk_70f675_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardcontentstandard fk_70f675_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcontentstandard
    ADD CONSTRAINT fk_70f675_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: studentprogramassociation fk_729018_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentprogramassociation
    ADD CONSTRAINT fk_729018_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sessionacademicweek fk_72eb60_academicweek; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_academicweek FOREIGN KEY (schoolid, weekidentifier) REFERENCES edfi.academicweek(schoolid, weekidentifier);


--
-- Name: sessionacademicweek fk_72eb60_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_72eb60_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveysectionresponseeducationorganizationtargetassociation fk_730be1_surveysectionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_730be1_surveysectionresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle) REFERENCES edfi.surveysectionresponse(namespace, surveyidentifier, surveyresponseidentifier, surveysectiontitle);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_contacttypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_contacttypedescriptor FOREIGN KEY (contacttypedescriptorid) REFERENCES edfi.contacttypedescriptor(contacttypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationcontactassociation fk_735dd8_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociation
    ADD CONSTRAINT fk_735dd8_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: disciplineactiondiscipline fk_73601f_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactiondiscipline fk_73601f_disciplinedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactiondiscipline
    ADD CONSTRAINT fk_73601f_disciplinedescriptor FOREIGN KEY (disciplinedescriptorid) REFERENCES edfi.disciplinedescriptor(disciplinedescriptorid);


--
-- Name: entrygradelevelreasondescriptor fk_737b8e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.entrygradelevelreasondescriptor
    ADD CONSTRAINT fk_737b8e_descriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationtelephone fk_742dd2_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationtelephone
    ADD CONSTRAINT fk_742dd2_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: descriptormappingmodelentity fk_7433b4_descriptormapping; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT fk_7433b4_descriptormapping FOREIGN KEY (mappednamespace, mappedvalue, namespace, value) REFERENCES edfi.descriptormapping(mappednamespace, mappedvalue, namespace, value) ON DELETE CASCADE;


--
-- Name: descriptormappingmodelentity fk_7433b4_modelentitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.descriptormappingmodelentity
    ADD CONSTRAINT fk_7433b4_modelentitydescriptor FOREIGN KEY (modelentitydescriptorid) REFERENCES edfi.modelentitydescriptor(modelentitydescriptorid);


--
-- Name: staffidentificationcode fk_7483c6_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffidentificationcode fk_7483c6_staffidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationcode
    ADD CONSTRAINT fk_7483c6_staffidentificationsystemdescriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.staffidentificationsystemdescriptor(staffidentificationsystemdescriptorid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationpeerassociation fk_74e4e5_educationorganization1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationpeerassociation
    ADD CONSTRAINT fk_74e4e5_educationorganization1 FOREIGN KEY (peereducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: careerpathwaydescriptor fk_768c51_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.careerpathwaydescriptor
    ADD CONSTRAINT fk_768c51_descriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationcategorydescriptor fk_7791ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationcategorydescriptor
    ADD CONSTRAINT fk_7791ef_descriptor FOREIGN KEY (educationorganizationcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessment fk_7808ee_assessmentcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_assessmentcategorydescriptor FOREIGN KEY (assessmentcategorydescriptorid) REFERENCES edfi.assessmentcategorydescriptor(assessmentcategorydescriptorid);


--
-- Name: assessment fk_7808ee_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessment
    ADD CONSTRAINT fk_7808ee_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: schoolcategory fk_789691_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid) ON DELETE CASCADE;


--
-- Name: schoolcategory fk_789691_schoolcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolcategory
    ADD CONSTRAINT fk_789691_schoolcategorydescriptor FOREIGN KEY (schoolcategorydescriptorid) REFERENCES edfi.schoolcategorydescriptor(schoolcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_attendanceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_attendanceeventcategorydescriptor FOREIGN KEY (attendanceeventcategorydescriptorid) REFERENCES edfi.attendanceeventcategorydescriptor(attendanceeventcategorydescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolattendanceevent fk_78fd7f_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: studentschoolattendanceevent fk_78fd7f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_78fd7f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: reasonexiteddescriptor fk_790724_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reasonexiteddescriptor
    ADD CONSTRAINT fk_790724_descriptor FOREIGN KEY (reasonexiteddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationinstitutiontelephone fk_79895a_institutiontelephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinstitutiontelephone
    ADD CONSTRAINT fk_79895a_institutiontelephonenumbertypedescriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.institutiontelephonenumbertypedescriptor(institutiontelephonenumbertypedescriptorid);


--
-- Name: mediumofinstructiondescriptor fk_7a8947_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.mediumofinstructiondescriptor
    ADD CONSTRAINT fk_7a8947_descriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_calendardate; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_calendardate FOREIGN KEY (calendarcode, date, schoolid, schoolyear) REFERENCES edfi.calendardate(calendarcode, date, schoolid, schoolyear);


--
-- Name: sectionattendancetakenevent fk_7bbbe7_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: sectionattendancetakenevent fk_7bbbe7_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionattendancetakenevent
    ADD CONSTRAINT fk_7bbbe7_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: progressleveldescriptor fk_7bf630_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressleveldescriptor
    ADD CONSTRAINT fk_7bf630_descriptor FOREIGN KEY (progressleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providerprofitabilitydescriptor fk_7c3adc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providerprofitabilitydescriptor
    ADD CONSTRAINT fk_7c3adc_descriptor FOREIGN KEY (providerprofitabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterstatusdescriptor fk_7c48cd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterstatusdescriptor
    ADD CONSTRAINT fk_7c48cd_descriptor FOREIGN KEY (charterstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationservice fk_7d2fb4_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT fk_7d2fb4_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studenttitleipartaprogramassociationservice fk_7d2fb4_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationservice
    ADD CONSTRAINT fk_7d2fb4_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: assessmentperioddescriptor fk_7e11fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentperioddescriptor
    ADD CONSTRAINT fk_7e11fe_descriptor FOREIGN KEY (assessmentperioddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentitem fk_7f600a_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitem FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentitem fk_7f600a_assessmentitemresultdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_assessmentitemresultdescriptor FOREIGN KEY (assessmentitemresultdescriptorid) REFERENCES edfi.assessmentitemresultdescriptor(assessmentitemresultdescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_responseindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_responseindicatordescriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.responseindicatordescriptor(responseindicatordescriptorid);


--
-- Name: studentassessmentitem fk_7f600a_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentitem
    ADD CONSTRAINT fk_7f600a_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: staffdisciplineincidentassociationdisciplineincidentpart_7fa4be fk_7fa4be_staffdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociationdisciplineincidentpart_7fa4be
    ADD CONSTRAINT fk_7fa4be_staffdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, staffusi) REFERENCES edfi.staffdisciplineincidentassociation(incidentidentifier, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: internetaccesstypeinresidencedescriptor fk_8007d5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccesstypeinresidencedescriptor
    ADD CONSTRAINT fk_8007d5_descriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: studentsectionattendanceeventclassperiod fk_80c6c1_studentsectionattendanceevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentsectionattendanceeventclassperiod
    ADD CONSTRAINT fk_80c6c1_studentsectionattendanceevent FOREIGN KEY (attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionattendanceevent(attendanceeventcategorydescriptorid, eventdate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 fk_810575_programcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT fk_810575_programcharacteristicdescriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.programcharacteristicdescriptor(programcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationprogramparticipat_810575 fk_810575_studenteducationorganizationassociationprogrampartici; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationprogramparticipat_810575
    ADD CONSTRAINT fk_810575_studenteducationorganizationassociationprogrampartici FOREIGN KEY (educationorganizationid, programtypedescriptorid, studentusi) REFERENCES edfi.studenteducationorganizationassociationprogramparticipation(educationorganizationid, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: learningstandardcategorydescriptor fk_814fc1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardcategorydescriptor
    ADD CONSTRAINT fk_814fc1_descriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardprerequisitelearningstandard fk_81b800_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT fk_81b800_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: learningstandardprerequisitelearningstandard fk_81b800_learningstandard1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardprerequisitelearningstandard
    ADD CONSTRAINT fk_81b800_learningstandard1 FOREIGN KEY (prerequisitelearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: oldethnicitydescriptor fk_821652_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.oldethnicitydescriptor
    ADD CONSTRAINT fk_821652_descriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordclassranking fk_8299aa_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordclassranking
    ADD CONSTRAINT fk_8299aa_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolfoodserviceprogramassociation fk_82e1e5_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociation
    ADD CONSTRAINT fk_82e1e5_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: grade fk_839e20_gradetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradetypedescriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.gradetypedescriptor(gradetypedescriptorid);


--
-- Name: grade fk_839e20_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, schoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: grade fk_839e20_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: grade fk_839e20_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.grade
    ADD CONSTRAINT fk_839e20_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: chartofaccountreportingtag fk_8422f4_chartofaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT fk_8422f4_chartofaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.chartofaccount(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: chartofaccountreportingtag fk_8422f4_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.chartofaccountreportingtag
    ADD CONSTRAINT fk_8422f4_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: diagnosisdescriptor fk_843d48_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diagnosisdescriptor
    ADD CONSTRAINT fk_843d48_descriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicatorperiod fk_8486ae_educationorganizationindicator; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicatorperiod
    ADD CONSTRAINT fk_8486ae_educationorganizationindicator FOREIGN KEY (educationorganizationid, indicatordescriptorid) REFERENCES edfi.educationorganizationindicator(educationorganizationid, indicatordescriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordreportcard fk_84e5e0_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi);


--
-- Name: studentacademicrecordreportcard fk_84e5e0_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordreportcard
    ADD CONSTRAINT fk_84e5e0_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: reportcardgradepointaverage fk_8574ad_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: reportcardgradepointaverage fk_8574ad_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgradepointaverage
    ADD CONSTRAINT fk_8574ad_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: parentelectronicmail fk_85798e_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT fk_85798e_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: parentelectronicmail fk_85798e_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentelectronicmail
    ADD CONSTRAINT fk_85798e_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: studentschoolassociation fk_857b52_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studentschoolassociation fk_857b52_entrygradelevelreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrygradelevelreasondescriptor FOREIGN KEY (entrygradelevelreasondescriptorid) REFERENCES edfi.entrygradelevelreasondescriptor(entrygradelevelreasondescriptorid);


--
-- Name: studentschoolassociation fk_857b52_entrytypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_entrytypedescriptor FOREIGN KEY (entrytypedescriptorid) REFERENCES edfi.entrytypedescriptor(entrytypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_exitwithdrawtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_exitwithdrawtypedescriptor FOREIGN KEY (exitwithdrawtypedescriptorid) REFERENCES edfi.exitwithdrawtypedescriptor(exitwithdrawtypedescriptorid);


--
-- Name: studentschoolassociation fk_857b52_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_gradeleveldescriptor FOREIGN KEY (entrygradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentschoolassociation fk_857b52_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear);


--
-- Name: studentschoolassociation fk_857b52_residencystatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_residencystatusdescriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.residencystatusdescriptor(residencystatusdescriptorid);


--
-- Name: studentschoolassociation fk_857b52_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_schoolyeartype1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_schoolyeartype1 FOREIGN KEY (classofschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentschoolassociation fk_857b52_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociation
    ADD CONSTRAINT fk_857b52_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_schoolfoodserviceprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_schoolfoodserviceprogramservicedescriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.schoolfoodserviceprogramservicedescriptor(schoolfoodserviceprogramservicedescriptorid);


--
-- Name: studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb fk_85a0eb_studentschoolfoodserviceprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolfoodserviceprogramassociationschoolfoodserv_85a0eb
    ADD CONSTRAINT fk_85a0eb_studentschoolfoodserviceprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentschoolfoodserviceprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: deliverymethoddescriptor fk_85b4c1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.deliverymethoddescriptor
    ADD CONSTRAINT fk_85b4c1_descriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociation fk_85e741_continuationofservicesreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_continuationofservicesreasondescriptor FOREIGN KEY (continuationofservicesreasondescriptorid) REFERENCES edfi.continuationofservicesreasondescriptor(continuationofservicesreasondescriptorid);


--
-- Name: studentmigranteducationprogramassociation fk_85e741_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociation
    ADD CONSTRAINT fk_85e741_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: languagedescriptor fk_8625fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languagedescriptor
    ADD CONSTRAINT fk_8625fa_descriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_graduationplanrequiredassessment FOREIGN KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) REFERENCES edfi.graduationplanrequiredassessment(assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: graduationplanrequiredassessmentperformancelevel fk_876ba3_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentperformancelevel
    ADD CONSTRAINT fk_876ba3_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyappropriategradelevel fk_87d32b_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriategradelevel
    ADD CONSTRAINT fk_87d32b_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: modelentitydescriptor fk_88479e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.modelentitydescriptor
    ADD CONSTRAINT fk_88479e_descriptor FOREIGN KEY (modelentitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_staffeducationorganizationcontactassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_staffeducationorganizationcontactassociation FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociation(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: staffeducationorganizationcontactassociationaddress fk_893629_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddress
    ADD CONSTRAINT fk_893629_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: calendardate fk_8a9a67_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendardate
    ADD CONSTRAINT fk_8a9a67_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_studenttitleipartaprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_studenttitleipartaprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenttitleipartaprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenttitleipartaprogramassociationtitleipartaprogramservice fk_8adb29_titleipartaprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenttitleipartaprogramassociationtitleipartaprogramservice
    ADD CONSTRAINT fk_8adb29_titleipartaprogramservicedescriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.titleipartaprogramservicedescriptor(titleipartaprogramservicedescriptorid);


--
-- Name: disabilitydesignationdescriptor fk_8b9171_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydesignationdescriptor
    ADD CONSTRAINT fk_8b9171_descriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandard fk_8ceb4c_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandard FOREIGN KEY (parentlearningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardcategorydescriptor FOREIGN KEY (learningstandardcategorydescriptorid) REFERENCES edfi.learningstandardcategorydescriptor(learningstandardcategorydescriptorid);


--
-- Name: learningstandard fk_8ceb4c_learningstandardscopedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandard
    ADD CONSTRAINT fk_8ceb4c_learningstandardscopedescriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.learningstandardscopedescriptor(learningstandardscopedescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: sectionofferedgradelevel fk_8d3fd8_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectionofferedgradelevel
    ADD CONSTRAINT fk_8d3fd8_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: functiondimensionreportingtag fk_8d455d_functiondimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT fk_8d455d_functiondimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.functiondimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: functiondimensionreportingtag fk_8d455d_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.functiondimensionreportingtag
    ADD CONSTRAINT fk_8d455d_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: surveyresponse fk_8d6383_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi);


--
-- Name: surveyresponse fk_8d6383_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponse fk_8d6383_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyresponse fk_8d6383_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponse
    ADD CONSTRAINT fk_8d6383_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: parentinternationaladdress fk_8d650e_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: parentinternationaladdress fk_8d650e_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: parentinternationaladdress fk_8d650e_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentinternationaladdress
    ADD CONSTRAINT fk_8d650e_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: localeducationagencycategorydescriptor fk_8db9a2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localeducationagencycategorydescriptor
    ADD CONSTRAINT fk_8db9a2_descriptor FOREIGN KEY (localeducationagencycategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociation fk_8e1257_barriertointernetaccessinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_barriertointernetaccessinresidencedescriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.barriertointernetaccessinresidencedescriptor(barriertointernetaccessinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetaccesstypeinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetaccesstypeinresidencedescriptor FOREIGN KEY (internetaccesstypeinresidencedescriptorid) REFERENCES edfi.internetaccesstypeinresidencedescriptor(internetaccesstypeinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_internetperformanceinresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_internetperformanceinresidencedescriptor FOREIGN KEY (internetperformanceinresidencedescriptorid) REFERENCES edfi.internetperformanceinresidencedescriptor(internetperformanceinresidencedescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_limitedenglishproficiencydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_limitedenglishproficiencydescriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.limitedenglishproficiencydescriptor(limitedenglishproficiencydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_oldethnicitydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_oldethnicitydescriptor FOREIGN KEY (oldethnicitydescriptorid) REFERENCES edfi.oldethnicitydescriptor(oldethnicitydescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceaccessdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceaccessdescriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.primarylearningdeviceaccessdescriptor(primarylearningdeviceaccessdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceawayfromschooldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceawayfromschooldescriptor FOREIGN KEY (primarylearningdeviceawayfromschooldescriptorid) REFERENCES edfi.primarylearningdeviceawayfromschooldescriptor(primarylearningdeviceawayfromschooldescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_primarylearningdeviceproviderdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_primarylearningdeviceproviderdescriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.primarylearningdeviceproviderdescriptor(primarylearningdeviceproviderdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: studenteducationorganizationassociation fk_8e1257_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociation
    ADD CONSTRAINT fk_8e1257_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: submissionstatusdescriptor fk_8e9244_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.submissionstatusdescriptor
    ADD CONSTRAINT fk_8e9244_descriptor FOREIGN KEY (submissionstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudystateabbreviation fk_8e9d64_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudystateabbreviation
    ADD CONSTRAINT fk_8e9d64_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: accounttypedescriptor fk_8f249f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.accounttypedescriptor
    ADD CONSTRAINT fk_8f249f_descriptor FOREIGN KEY (accounttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolchoiceimplementstatusdescriptor fk_8f4ff8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolchoiceimplementstatusdescriptor
    ADD CONSTRAINT fk_8f4ff8_descriptor FOREIGN KEY (schoolchoiceimplementstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programassignmentdescriptor fk_8f5a42_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programassignmentdescriptor
    ADD CONSTRAINT fk_8f5a42_descriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionstudyuri fk_9046e7_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyuri
    ADD CONSTRAINT fk_9046e7_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: program fk_90920d_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: program fk_90920d_programtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.program
    ADD CONSTRAINT fk_90920d_programtypedescriptor FOREIGN KEY (programtypedescriptorid) REFERENCES edfi.programtypedescriptor(programtypedescriptorid);


--
-- Name: learningstandardidentificationcode fk_92327a_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardidentificationcode
    ADD CONSTRAINT fk_92327a_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: disciplineincidentparticipationcodedescriptor fk_923786_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentparticipationcodedescriptor
    ADD CONSTRAINT fk_923786_descriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlanguageinstructionprogramassociation fk_92de5d_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlanguageinstructionprogramassociation
    ADD CONSTRAINT fk_92de5d_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: technicalskillsassessmentdescriptor fk_92e2f1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.technicalskillsassessmentdescriptor
    ADD CONSTRAINT fk_92e2f1_descriptor FOREIGN KEY (technicalskillsassessmentdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradelearningstandardgrade fk_92f7f8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: gradelearningstandardgrade fk_92f7f8_performancebaseconversiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradelearningstandardgrade
    ADD CONSTRAINT fk_92f7f8_performancebaseconversiondescriptor FOREIGN KEY (performancebaseconversiondescriptorid) REFERENCES edfi.performancebaseconversiondescriptor(performancebaseconversiondescriptorid);


--
-- Name: titleipartaschooldesignationdescriptor fk_935362_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaschooldesignationdescriptor
    ADD CONSTRAINT fk_935362_descriptor FOREIGN KEY (titleipartaschooldesignationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradepointaveragetypedescriptor fk_95d02c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradepointaveragetypedescriptor
    ADD CONSTRAINT fk_95d02c_descriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffleaveeventcategorydescriptor fk_963eb5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleaveeventcategorydescriptor
    ADD CONSTRAINT fk_963eb5_descriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationaddressperiod fk_9739a2_studenteducationorganizationassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddressperiod
    ADD CONSTRAINT fk_9739a2_studenteducationorganizationassociationaddress FOREIGN KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi) REFERENCES edfi.studenteducationorganizationassociationaddress(addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername, studentusi) ON DELETE CASCADE;


--
-- Name: resultdatatypetypedescriptor fk_9809bc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.resultdatatypetypedescriptor
    ADD CONSTRAINT fk_9809bc_descriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentderivativesourceeducationcontent fk_98cd8a_educationcontent1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentderivativesourceeducationcontent
    ADD CONSTRAINT fk_98cd8a_educationcontent1 FOREIGN KEY (derivativesourcecontentidentifier) REFERENCES edfi.educationcontent(contentidentifier);


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_assessmentscorerangelearningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_assessmentscorerangelearningstandard FOREIGN KEY (assessmentidentifier, namespace, scorerangeid) REFERENCES edfi.assessmentscorerangelearningstandard(assessmentidentifier, namespace, scorerangeid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandardlearningstandard fk_9960a9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandardlearningstandard
    ADD CONSTRAINT fk_9960a9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: educationcontent fk_9965a5_contentclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_contentclassdescriptor FOREIGN KEY (contentclassdescriptorid) REFERENCES edfi.contentclassdescriptor(contentclassdescriptorid);


--
-- Name: educationcontent fk_9965a5_costratedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_costratedescriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.costratedescriptor(costratedescriptorid);


--
-- Name: educationcontent fk_9965a5_interactivitystyledescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_interactivitystyledescriptor FOREIGN KEY (interactivitystyledescriptorid) REFERENCES edfi.interactivitystyledescriptor(interactivitystyledescriptorid);


--
-- Name: educationcontent fk_9965a5_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontent
    ADD CONSTRAINT fk_9965a5_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: sectioncharacteristicdescriptor fk_9aae24_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncharacteristicdescriptor
    ADD CONSTRAINT fk_9aae24_descriptor FOREIGN KEY (sectioncharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: charterapprovalagencytypedescriptor fk_9af5be_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.charterapprovalagencytypedescriptor
    ADD CONSTRAINT fk_9af5be_descriptor FOREIGN KEY (charterapprovalagencytypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentappropriatesex fk_9b6ed1_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentappropriatesex
    ADD CONSTRAINT fk_9b6ed1_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: academichonorcategorydescriptor fk_9b946b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academichonorcategorydescriptor
    ADD CONSTRAINT fk_9b946b_descriptor FOREIGN KEY (academichonorcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: bellschedule fk_9bbaf5_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellschedule
    ADD CONSTRAINT fk_9bbaf5_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: postsecondaryinstitutionmediumofinstruction fk_9bd9d6_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryinstitutionmediumofinstruction
    ADD CONSTRAINT fk_9bd9d6_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_bellschedule; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_bellschedule FOREIGN KEY (bellschedulename, schoolid) REFERENCES edfi.bellschedule(bellschedulename, schoolid) ON DELETE CASCADE;


--
-- Name: bellscheduleclassperiod fk_9e377d_classperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.bellscheduleclassperiod
    ADD CONSTRAINT fk_9e377d_classperiod FOREIGN KEY (classperiodname, schoolid) REFERENCES edfi.classperiod(classperiodname, schoolid) ON UPDATE CASCADE;


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionprescriptiondiagnosis fk_9e6edd_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptiondiagnosis
    ADD CONSTRAINT fk_9e6edd_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: publicationstatusdescriptor fk_9e73cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.publicationstatusdescriptor
    ADD CONSTRAINT fk_9e73cb_descriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveycourseassociation fk_9f1246_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: surveycourseassociation fk_9f1246_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveycourseassociation
    ADD CONSTRAINT fk_9f1246_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: disabilitydeterminationsourcetypedescriptor fk_a07cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydeterminationsourcetypedescriptor
    ADD CONSTRAINT fk_a07cb4_descriptor FOREIGN KEY (disabilitydeterminationsourcetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivecontentstandardauthor fk_a165fa_learningobjectivecontentstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandardauthor
    ADD CONSTRAINT fk_a165fa_learningobjectivecontentstandard FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjectivecontentstandard(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteri_a18fcf fk_a18fcf_studenteducationorganizationassociationstudentcharact; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteri_a18fcf
    ADD CONSTRAINT fk_a18fcf_studenteducationorganizationassociationstudentcharact FOREIGN KEY (educationorganizationid, studentcharacteristicdescriptorid, studentusi) REFERENCES edfi.studenteducationorganizationassociationstudentcharacteristic(educationorganizationid, studentcharacteristicdescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceproviderdescriptor fk_a1f277_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceproviderdescriptor
    ADD CONSTRAINT fk_a1f277_descriptor FOREIGN KEY (primarylearningdeviceproviderdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscorerangelearningstandard fk_a20588_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscorerangelearningstandard
    ADD CONSTRAINT fk_a20588_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: ancestryethnicorigindescriptor fk_a21217_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.ancestryethnicorigindescriptor
    ADD CONSTRAINT fk_a21217_descriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentidentificationsystemdescriptor fk_a28cb4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a28cb4_descriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationtelephone fk_a2d4a8_telephonenumbertypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationtelephone
    ADD CONSTRAINT fk_a2d4a8_telephonenumbertypedescriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.telephonenumbertypedescriptor(telephonenumbertypedescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_disabilitydesignationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_disabilitydesignationdescriptor FOREIGN KEY (disabilitydesignationdescriptorid) REFERENCES edfi.disabilitydesignationdescriptor(disabilitydesignationdescriptorid);


--
-- Name: studentspecialeducationprogramassociationdisabilitydesignation fk_a2fd20_studentspecialeducationprogramassociationdisability; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationdisabilitydesignation
    ADD CONSTRAINT fk_a2fd20_studentspecialeducationprogramassociationdisability FOREIGN KEY (begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociationdisability(begindate, disabilitydescriptorid, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentplatformtype fk_a3387e_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentplatformtype
    ADD CONSTRAINT fk_a3387e_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomaleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomaleveldescriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.diplomaleveldescriptor(diplomaleveldescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_diplomatypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_diplomatypedescriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.diplomatypedescriptor(diplomatypedescriptorid);


--
-- Name: studentacademicrecorddiploma fk_a3f725_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecorddiploma
    ADD CONSTRAINT fk_a3f725_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: assessmentidentificationsystemdescriptor fk_a47976_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentidentificationsystemdescriptor
    ADD CONSTRAINT fk_a47976_descriptor FOREIGN KEY (assessmentidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffancestryethnicorigin fk_a4a6ae_ancestryethnicorigindescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_ancestryethnicorigindescriptor FOREIGN KEY (ancestryethnicorigindescriptorid) REFERENCES edfi.ancestryethnicorigindescriptor(ancestryethnicorigindescriptorid);


--
-- Name: staffancestryethnicorigin fk_a4a6ae_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffancestryethnicorigin
    ADD CONSTRAINT fk_a4a6ae_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociation fk_a50f80_homelessprimarynighttimeresidencedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociation
    ADD CONSTRAINT fk_a50f80_homelessprimarynighttimeresidencedescriptor FOREIGN KEY (homelessprimarynighttimeresidencedescriptorid) REFERENCES edfi.homelessprimarynighttimeresidencedescriptor(homelessprimarynighttimeresidencedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_specialeducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_specialeducationprogramservicedescriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.specialeducationprogramservicedescriptor(specialeducationprogramservicedescriptorid);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_a51ff9 fk_a51ff9_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9
    ADD CONSTRAINT fk_a51ff9_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: disciplineincidentweapon fk_a545e5_weapondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentweapon
    ADD CONSTRAINT fk_a545e5_weapondescriptor FOREIGN KEY (weapondescriptorid) REFERENCES edfi.weapondescriptor(weapondescriptorid);


--
-- Name: performanceleveldescriptor fk_a54ec7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.performanceleveldescriptor
    ADD CONSTRAINT fk_a54ec7_descriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitemcategorydescriptor fk_a5f1ee_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitemcategorydescriptor
    ADD CONSTRAINT fk_a5f1ee_descriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicatorperiod fk_a61b72_studenteducationorganizationassociationstudentindicat; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicatorperiod
    ADD CONSTRAINT fk_a61b72_studenteducationorganizationassociationstudentindicat FOREIGN KEY (educationorganizationid, indicatorname, studentusi) REFERENCES edfi.studenteducationorganizationassociationstudentindicator(educationorganizationid, indicatorname, studentusi) ON DELETE CASCADE;


--
-- Name: titleipartaprogramservicedescriptor fk_a62aa8_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.titleipartaprogramservicedescriptor
    ADD CONSTRAINT fk_a62aa8_descriptor FOREIGN KEY (titleipartaprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cteprogramservicedescriptor fk_a631b1_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cteprogramservicedescriptor
    ADD CONSTRAINT fk_a631b1_descriptor FOREIGN KEY (cteprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionmeetingtime fk_a64540_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionmeetingtime
    ADD CONSTRAINT fk_a64540_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_racedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_racedescriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.racedescriptor(racedescriptorid);


--
-- Name: studenteducationorganizationassociationrace fk_a6a1f0_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationrace
    ADD CONSTRAINT fk_a6a1f0_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studentpersonalidentificationdocument fk_a741a8_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: studentpersonalidentificationdocument fk_a741a8_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentpersonalidentificationdocument
    ADD CONSTRAINT fk_a741a8_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: coursedefinedbydescriptor fk_a75b16_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursedefinedbydescriptor
    ADD CONSTRAINT fk_a75b16_descriptor FOREIGN KEY (coursedefinedbydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_countrydescriptor FOREIGN KEY (countrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: studenteducationorganizationassociationinternationaladdress fk_a82b93_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationinternationaladdress
    ADD CONSTRAINT fk_a82b93_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionappropriatesex fk_a8bc47_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionappropriatesex
    ADD CONSTRAINT fk_a8bc47_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: racedescriptor fk_a902cb_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.racedescriptor
    ADD CONSTRAINT fk_a902cb_descriptor FOREIGN KEY (racedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivegradelevel fk_a92ef0_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT fk_a92ef0_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningobjectivegradelevel fk_a92ef0_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivegradelevel
    ADD CONSTRAINT fk_a92ef0_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: academicweek fk_a97956_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicweek
    ADD CONSTRAINT fk_a97956_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: interventionprescriptionpopulationserved fk_a984df_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionprescriptionpopulationserved fk_a984df_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionpopulationserved
    ADD CONSTRAINT fk_a984df_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_program FOREIGN KEY (programeducationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: staffprogramassociation fk_a9c0d9_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffprogramassociation
    ADD CONSTRAINT fk_a9c0d9_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentparticipationcodedescriptor fk_aa25ae_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparticipationcodedescriptor
    ADD CONSTRAINT fk_aa25ae_descriptor FOREIGN KEY (studentparticipationcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentvisa fk_aa5751_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentvisa
    ADD CONSTRAINT fk_aa5751_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_aaa07e_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_aaa07e_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: learningstandardacademicsubject fk_aaade9_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardacademicsubject
    ADD CONSTRAINT fk_aaade9_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptcreditcategory fk_ab7096_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptcreditcategory
    ADD CONSTRAINT fk_ab7096_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: separationreasondescriptor fk_ac0f04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationreasondescriptor
    ADD CONSTRAINT fk_ac0f04_descriptor FOREIGN KEY (separationreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: providercategorydescriptor fk_add5c4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.providercategorydescriptor
    ADD CONSTRAINT fk_add5c4_descriptor FOREIGN KEY (providercategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentothername fk_ae53d1_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: studentothername fk_ae53d1_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentothername
    ADD CONSTRAINT fk_ae53d1_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_disciplineincidentparticipationcodedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_disciplineincidentparticipationcodedescriptor FOREIGN KEY (disciplineincidentparticipationcodedescriptorid) REFERENCES edfi.disciplineincidentparticipationcodedescriptor(disciplineincidentparticipationcodedescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21 fk_ae6a21_studentdisciplineincidentbehaviorassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociationdisciplinein_ae6a21
    ADD CONSTRAINT fk_ae6a21_studentdisciplineincidentbehaviorassociation FOREIGN KEY (behaviordescriptorid, incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentbehaviorassociation(behaviordescriptorid, incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: calendartypedescriptor fk_aed500_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendartypedescriptor
    ADD CONSTRAINT fk_aed500_descriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: cohorttypedescriptor fk_af0263_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.cohorttypedescriptor
    ADD CONSTRAINT fk_af0263_descriptor FOREIGN KEY (cohorttypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: retestindicatordescriptor fk_af156c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.retestindicatordescriptor
    ADD CONSTRAINT fk_af156c_descriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningstandardscopedescriptor fk_af50dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningstandardscopedescriptor
    ADD CONSTRAINT fk_af50dc_descriptor FOREIGN KEY (learningstandardscopedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_gradepointaveragetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_gradepointaveragetypedescriptor FOREIGN KEY (gradepointaveragetypedescriptorid) REFERENCES edfi.gradepointaveragetypedescriptor(gradepointaveragetypedescriptorid);


--
-- Name: studentacademicrecordgradepointaverage fk_af7be7_studentacademicrecord; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentacademicrecordgradepointaverage
    ADD CONSTRAINT fk_af7be7_studentacademicrecord FOREIGN KEY (educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.studentacademicrecord(educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: staffdisciplineincidentassociation fk_af86db_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: staffdisciplineincidentassociation fk_af86db_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffdisciplineincidentassociation
    ADD CONSTRAINT fk_af86db_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_educationorganizationassociationtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_educationorganizationassociationtypedescriptor FOREIGN KEY (educationorganizationassociationtypedescriptorid) REFERENCES edfi.educationorganizationassociationtypedescriptor(educationorganizationassociationtypedescriptorid);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessmenteducationorganizationassociation fk_afb8b8_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmenteducationorganizationassociation
    ADD CONSTRAINT fk_afb8b8_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi);


--
-- Name: staffeducationorganizationcontactassociationaddressperiod fk_afd39a_staffeducationorganizationcontactassociationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationcontactassociationaddressperiod
    ADD CONSTRAINT fk_afd39a_staffeducationorganizationcontactassociationaddress FOREIGN KEY (contacttitle, educationorganizationid, staffusi) REFERENCES edfi.staffeducationorganizationcontactassociationaddress(contacttitle, educationorganizationid, staffusi) ON DELETE CASCADE;


--
-- Name: servicedescriptor fk_aff2dc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.servicedescriptor
    ADD CONSTRAINT fk_aff2dc_descriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffothername fk_b0cb9e_othernametypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_othernametypedescriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.othernametypedescriptor(othernametypedescriptorid);


--
-- Name: staffothername fk_b0cb9e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffothername
    ADD CONSTRAINT fk_b0cb9e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: costratedescriptor fk_b1268b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.costratedescriptor
    ADD CONSTRAINT fk_b1268b_descriptor FOREIGN KEY (costratedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffabsenceevent fk_b13bbd_absenceeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_absenceeventcategorydescriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.absenceeventcategorydescriptor(absenceeventcategorydescriptorid);


--
-- Name: staffabsenceevent fk_b13bbd_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffabsenceevent
    ADD CONSTRAINT fk_b13bbd_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: reportingtagdescriptor fk_b173f4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportingtagdescriptor
    ADD CONSTRAINT fk_b173f4_descriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credential fk_b1c42b_credentialfielddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialfielddescriptor FOREIGN KEY (credentialfielddescriptorid) REFERENCES edfi.credentialfielddescriptor(credentialfielddescriptorid);


--
-- Name: credential fk_b1c42b_credentialtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_credentialtypedescriptor FOREIGN KEY (credentialtypedescriptorid) REFERENCES edfi.credentialtypedescriptor(credentialtypedescriptorid);


--
-- Name: credential fk_b1c42b_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_stateabbreviationdescriptor FOREIGN KEY (stateofissuestateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialbasisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialbasisdescriptor FOREIGN KEY (teachingcredentialbasisdescriptorid) REFERENCES edfi.teachingcredentialbasisdescriptor(teachingcredentialbasisdescriptorid);


--
-- Name: credential fk_b1c42b_teachingcredentialdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credential
    ADD CONSTRAINT fk_b1c42b_teachingcredentialdescriptor FOREIGN KEY (teachingcredentialdescriptorid) REFERENCES edfi.teachingcredentialdescriptor(teachingcredentialdescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace);


--
-- Name: studentassessmentstudentobjectiveassessment fk_b1c52f_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessment
    ADD CONSTRAINT fk_b1c52f_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: surveyresponseeducationorganizationtargetassociation fk_b2bd0a_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponseeducationorganizationtargetassociation
    ADD CONSTRAINT fk_b2bd0a_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: interventiondiagnosis fk_b2e25d_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventiondiagnosis fk_b2e25d_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventiondiagnosis
    ADD CONSTRAINT fk_b2e25d_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_homelessprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_homelessprogramservicedescriptor FOREIGN KEY (homelessprogramservicedescriptorid) REFERENCES edfi.homelessprogramservicedescriptor(homelessprogramservicedescriptorid);


--
-- Name: studenthomelessprogramassociationhomelessprogramservice fk_b31a96_studenthomelessprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenthomelessprogramassociationhomelessprogramservice
    ADD CONSTRAINT fk_b31a96_studenthomelessprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studenthomelessprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationparticipationstatus fk_b3fd05_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT fk_b3fd05_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: generalstudentprogramassociationparticipationstatus fk_b3fd05_participationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.generalstudentprogramassociationparticipationstatus
    ADD CONSTRAINT fk_b3fd05_participationstatusdescriptor FOREIGN KEY (participationstatusdescriptorid) REFERENCES edfi.participationstatusdescriptor(participationstatusdescriptorid);


--
-- Name: studentdisciplineincidentassociationbehavior fk_b43eed_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT fk_b43eed_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: studentdisciplineincidentassociationbehavior fk_b43eed_studentdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentassociationbehavior
    ADD CONSTRAINT fk_b43eed_studentdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentassociation(incidentidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: telephonenumbertypedescriptor fk_b46168_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.telephonenumbertypedescriptor
    ADD CONSTRAINT fk_b46168_descriptor FOREIGN KEY (telephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_additionalcredittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_additionalcredittypedescriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.additionalcredittypedescriptor(additionalcredittypedescriptorid);


--
-- Name: coursetranscriptearnedadditionalcredits fk_b50e36_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptearnedadditionalcredits
    ADD CONSTRAINT fk_b50e36_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: stafflanguageuse fk_b527e7_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: stafflanguageuse fk_b527e7_stafflanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafflanguageuse
    ADD CONSTRAINT fk_b527e7_stafflanguage FOREIGN KEY (languagedescriptorid, staffusi) REFERENCES edfi.stafflanguage(languagedescriptorid, staffusi) ON DELETE CASCADE;


--
-- Name: projectdimensionreportingtag fk_b5314a_projectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT fk_b5314a_projectdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.projectdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: projectdimensionreportingtag fk_b5314a_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.projectdimensionreportingtag
    ADD CONSTRAINT fk_b5314a_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: recognitiontypedescriptor fk_b549ed_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.recognitiontypedescriptor
    ADD CONSTRAINT fk_b549ed_descriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localactual fk_b6310e_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT fk_b6310e_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localactual fk_b6310e_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localactual
    ADD CONSTRAINT fk_b6310e_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_countrydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_countrydescriptor FOREIGN KEY (issuercountrydescriptorid) REFERENCES edfi.countrydescriptor(countrydescriptorid);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_identificationdocumentusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_identificationdocumentusedescriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.identificationdocumentusedescriptor(identificationdocumentusedescriptorid);


--
-- Name: parentpersonalidentificationdocument fk_b772b6_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parentpersonalidentificationdocument fk_b772b6_personalinformationverificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentpersonalidentificationdocument
    ADD CONSTRAINT fk_b772b6_personalinformationverificationdescriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.personalinformationverificationdescriptor(personalinformationverificationdescriptorid);


--
-- Name: staffaddressperiod fk_b7f969_staffaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddressperiod
    ADD CONSTRAINT fk_b7f969_staffaddress FOREIGN KEY (addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.staffaddress(addresstypedescriptorid, city, postalcode, staffusi, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: competencyleveldescriptor fk_b82261_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.competencyleveldescriptor
    ADD CONSTRAINT fk_b82261_descriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studentcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studentcharacteristicdescriptor FOREIGN KEY (studentcharacteristicdescriptorid) REFERENCES edfi.studentcharacteristicdescriptor(studentcharacteristicdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentcharacteristic fk_b865d7_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentcharacteristic
    ADD CONSTRAINT fk_b865d7_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryeventcategorydescriptor FOREIGN KEY (postsecondaryeventcategorydescriptorid) REFERENCES edfi.postsecondaryeventcategorydescriptor(postsecondaryeventcategorydescriptorid);


--
-- Name: postsecondaryevent fk_b8b6d7_postsecondaryinstitution; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_postsecondaryinstitution FOREIGN KEY (postsecondaryinstitutionid) REFERENCES edfi.postsecondaryinstitution(postsecondaryinstitutionid);


--
-- Name: postsecondaryevent fk_b8b6d7_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.postsecondaryevent
    ADD CONSTRAINT fk_b8b6d7_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffclassificationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffclassificationdescriptor FOREIGN KEY (staffclassificationdescriptorid) REFERENCES edfi.staffclassificationdescriptor(staffclassificationdescriptorid);


--
-- Name: staffeducationorganizationassignmentassociation fk_b9be24_staffeducationorganizationemploymentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffeducationorganizationassignmentassociation
    ADD CONSTRAINT fk_b9be24_staffeducationorganizationemploymentassociation FOREIGN KEY (employmenteducationorganizationid, employmentstatusdescriptorid, employmenthiredate, staffusi) REFERENCES edfi.staffeducationorganizationemploymentassociation(educationorganizationid, employmentstatusdescriptorid, hiredate, staffusi);


--
-- Name: methodcreditearneddescriptor fk_ba36b2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.methodcreditearneddescriptor
    ADD CONSTRAINT fk_ba36b2_descriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: programcharacteristicdescriptor fk_ba9204_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programcharacteristicdescriptor
    ADD CONSTRAINT fk_ba9204_descriptor FOREIGN KEY (programcharacteristicdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlearningobjective fk_baaa9d_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentlearningobjective fk_baaa9d_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: studentlearningobjective fk_baaa9d_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: studentlearningobjective fk_baaa9d_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjective
    ADD CONSTRAINT fk_baaa9d_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: educationplandescriptor fk_bb10e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationplandescriptor
    ADD CONSTRAINT fk_bb10e3_descriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courserepeatcodedescriptor fk_bc4d3c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courserepeatcodedescriptor
    ADD CONSTRAINT fk_bc4d3c_descriptor FOREIGN KEY (courserepeatcodedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationspecialeducatio_bcba5c fk_bcba5c_studentspecialeducationprogramassociationspecialeduca; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationspecialeducatio_bcba5c
    ADD CONSTRAINT fk_bcba5c_studentspecialeducationprogramassociationspecialeduca FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociationspecialeducatio_a51ff9(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, specialeducationprogramservicedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: balancesheetdimensionreportingtag fk_bcbd82_balancesheetdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT fk_bcbd82_balancesheetdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.balancesheetdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: balancesheetdimensionreportingtag fk_bcbd82_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.balancesheetdimensionreportingtag
    ADD CONSTRAINT fk_bcbd82_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: surveyleveldescriptor fk_bce725_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyleveldescriptor
    ADD CONSTRAINT fk_bce725_descriptor FOREIGN KEY (surveyleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentcontentstandard fk_bd89c0_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: assessmentcontentstandard fk_bd89c0_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentcontentstandard
    ADD CONSTRAINT fk_bd89c0_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: graduationplan fk_be1ea4_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_credittypedescriptor FOREIGN KEY (totalrequiredcredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: graduationplan fk_be1ea4_graduationplantypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_graduationplantypedescriptor FOREIGN KEY (graduationplantypedescriptorid) REFERENCES edfi.graduationplantypedescriptor(graduationplantypedescriptorid);


--
-- Name: graduationplan fk_be1ea4_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplan
    ADD CONSTRAINT fk_be1ea4_schoolyeartype FOREIGN KEY (graduationschoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: responseindicatordescriptor fk_be38ef_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.responseindicatordescriptor
    ADD CONSTRAINT fk_be38ef_descriptor FOREIGN KEY (responseindicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localedescriptor fk_be5f41_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localedescriptor
    ADD CONSTRAINT fk_be5f41_descriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentparentassociation fk_bf9d92_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi);


--
-- Name: studentparentassociation fk_bf9d92_relationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_relationdescriptor FOREIGN KEY (relationdescriptorid) REFERENCES edfi.relationdescriptor(relationdescriptorid);


--
-- Name: studentparentassociation fk_bf9d92_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentparentassociation
    ADD CONSTRAINT fk_bf9d92_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: identificationdocumentusedescriptor fk_c023c0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.identificationdocumentusedescriptor
    ADD CONSTRAINT fk_c023c0_descriptor FOREIGN KEY (identificationdocumentusedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcardstudentlearningobjective fk_c098ce_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT fk_c098ce_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentlearningobjective fk_c098ce_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentlearningobjective
    ADD CONSTRAINT fk_c098ce_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi);


--
-- Name: interventioneffectivenessratingdescriptor fk_c0c58a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioneffectivenessratingdescriptor
    ADD CONSTRAINT fk_c0c58a_descriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courselearningobjective fk_c0da6b_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT fk_c0da6b_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselearningobjective fk_c0da6b_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselearningobjective
    ADD CONSTRAINT fk_c0da6b_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: staffaddress fk_c0e4a3_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: staffaddress fk_c0e4a3_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffaddress fk_c0e4a3_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffaddress
    ADD CONSTRAINT fk_c0e4a3_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentidentifica_c15030 fk_c15030_studentidentificationsystemdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentidentifica_c15030
    ADD CONSTRAINT fk_c15030_studentidentificationsystemdescriptor FOREIGN KEY (studentidentificationsystemdescriptorid) REFERENCES edfi.studentidentificationsystemdescriptor(studentidentificationsystemdescriptorid);


--
-- Name: surveysectionassociation fk_c16804_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: surveysectionassociation fk_c16804_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysectionassociation
    ADD CONSTRAINT fk_c16804_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: reportcardstudentcompetencyobjective fk_c16d6c_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardstudentcompetencyobjective
    ADD CONSTRAINT fk_c16d6c_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi);


--
-- Name: specialeducationprogramservicedescriptor fk_c2348e_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.specialeducationprogramservicedescriptor
    ADD CONSTRAINT fk_c2348e_descriptor FOREIGN KEY (specialeducationprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentperformancelevel fk_c2bd3c_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentperformancelevel
    ADD CONSTRAINT fk_c2bd3c_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: classroompositiondescriptor fk_c2dd12_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.classroompositiondescriptor
    ADD CONSTRAINT fk_c2dd12_descriptor FOREIGN KEY (classroompositiondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_assignmentlatestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_assignmentlatestatusdescriptor FOREIGN KEY (assignmentlatestatusdescriptorid) REFERENCES edfi.assignmentlatestatusdescriptor(assignmentlatestatusdescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_competencyleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_competencyleveldescriptor FOREIGN KEY (competencyleveldescriptorid) REFERENCES edfi.competencyleveldescriptor(competencyleveldescriptorid);


--
-- Name: studentgradebookentry fk_c2efaa_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_gradebookentry FOREIGN KEY (gradebookentryidentifier, namespace) REFERENCES edfi.gradebookentry(gradebookentryidentifier, namespace) ON UPDATE CASCADE;


--
-- Name: studentgradebookentry fk_c2efaa_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentgradebookentry fk_c2efaa_submissionstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentgradebookentry
    ADD CONSTRAINT fk_c2efaa_submissionstatusdescriptor FOREIGN KEY (submissionstatusdescriptorid) REFERENCES edfi.submissionstatusdescriptor(submissionstatusdescriptorid);


--
-- Name: localaccountreportingtag fk_c38935_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT fk_c38935_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear) ON DELETE CASCADE;


--
-- Name: localaccountreportingtag fk_c38935_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localaccountreportingtag
    ADD CONSTRAINT fk_c38935_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: interventionstudypopulationserved fk_c45364_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudypopulationserved fk_c45364_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudypopulationserved
    ADD CONSTRAINT fk_c45364_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: sessiongradingperiod fk_c4b3e0_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_gradingperiod FOREIGN KEY (gradingperioddescriptorid, periodsequence, schoolid, schoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: sessiongradingperiod fk_c4b3e0_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_c4b3e0_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: coursegpaapplicabilitydescriptor fk_c55ecc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursegpaapplicabilitydescriptor
    ADD CONSTRAINT fk_c55ecc_descriptor FOREIGN KEY (coursegpaapplicabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffrecognition fk_c60190_achievementcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_achievementcategorydescriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.achievementcategorydescriptor(achievementcategorydescriptorid);


--
-- Name: staffrecognition fk_c60190_recognitiontypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_recognitiontypedescriptor FOREIGN KEY (recognitiontypedescriptorid) REFERENCES edfi.recognitiontypedescriptor(recognitiontypedescriptorid);


--
-- Name: staffrecognition fk_c60190_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffrecognition
    ADD CONSTRAINT fk_c60190_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: residencystatusdescriptor fk_c62170_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.residencystatusdescriptor
    ADD CONSTRAINT fk_c62170_descriptor FOREIGN KEY (residencystatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: achievementcategorydescriptor fk_c71291_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.achievementcategorydescriptor
    ADD CONSTRAINT fk_c71291_descriptor FOREIGN KEY (achievementcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_gradebookentry; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_gradebookentry FOREIGN KEY (gradebookentryidentifier, namespace) REFERENCES edfi.gradebookentry(gradebookentryidentifier, namespace) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: gradebookentrylearningstandard fk_c7b5a8_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradebookentrylearningstandard
    ADD CONSTRAINT fk_c7b5a8_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: interventionlearningresourcemetadatauri fk_c7db20_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionlearningresourcemetadatauri
    ADD CONSTRAINT fk_c7db20_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_course FOREIGN KEY (coursecode, educationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid) ON DELETE CASCADE;


--
-- Name: courselevelcharacteristic fk_c7e725_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courselevelcharacteristic
    ADD CONSTRAINT fk_c7e725_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: gradetypedescriptor fk_c8a182_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.gradetypedescriptor
    ADD CONSTRAINT fk_c8a182_descriptor FOREIGN KEY (gradetypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: limitedenglishproficiencydescriptor fk_c8bcfe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.limitedenglishproficiencydescriptor
    ADD CONSTRAINT fk_c8bcfe_descriptor FOREIGN KEY (limitedenglishproficiencydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: learningobjectivelearningstandard fk_c99b99_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT fk_c99b99_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: learningobjectivelearningstandard fk_c99b99_learningstandard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivelearningstandard
    ADD CONSTRAINT fk_c99b99_learningstandard FOREIGN KEY (learningstandardid) REFERENCES edfi.learningstandard(learningstandardid);


--
-- Name: internetaccessdescriptor fk_ca0f71_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.internetaccessdescriptor
    ADD CONSTRAINT fk_ca0f71_descriptor FOREIGN KEY (internetaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studenteducationorganizationassociationstudentindicator fk_ca697a_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationstudentindicator
    ADD CONSTRAINT fk_ca697a_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineincidentbehavior fk_cabdcb_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: disciplineincidentbehavior fk_cabdcb_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincidentbehavior
    ADD CONSTRAINT fk_cabdcb_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid) ON DELETE CASCADE;


--
-- Name: staffidentificationsystemdescriptor fk_cb401c_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffidentificationsystemdescriptor
    ADD CONSTRAINT fk_cb401c_descriptor FOREIGN KEY (staffidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionpopulationserved fk_cbeb99_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionpopulationserved
    ADD CONSTRAINT fk_cbeb99_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: educationorganizationidentificationsystemdescriptor fk_cbfd5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationidentificationsystemdescriptor
    ADD CONSTRAINT fk_cbfd5d_descriptor FOREIGN KEY (educationorganizationidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: primarylearningdeviceaccessdescriptor fk_cbfe5d_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.primarylearningdeviceaccessdescriptor
    ADD CONSTRAINT fk_cbfe5d_descriptor FOREIGN KEY (primarylearningdeviceaccessdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: parentaddress fk_cc3333_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: parentaddress fk_cc3333_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: parentaddress fk_cc3333_parent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_parent FOREIGN KEY (parentusi) REFERENCES edfi.parent(parentusi) ON DELETE CASCADE;


--
-- Name: parentaddress fk_cc3333_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentaddress
    ADD CONSTRAINT fk_cc3333_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: barriertointernetaccessinresidencedescriptor fk_cce75a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.barriertointernetaccessinresidencedescriptor
    ADD CONSTRAINT fk_cce75a_descriptor FOREIGN KEY (barriertointernetaccessinresidencedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: separationdescriptor fk_cd3406_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.separationdescriptor
    ADD CONSTRAINT fk_cd3406_descriptor FOREIGN KEY (separationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociation fk_ce2080_calendar; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_calendar FOREIGN KEY (calendarcode, schoolid, schoolyear) REFERENCES edfi.calendar(calendarcode, schoolid, schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_programassignmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_programassignmentdescriptor FOREIGN KEY (programassignmentdescriptorid) REFERENCES edfi.programassignmentdescriptor(programassignmentdescriptorid);


--
-- Name: staffschoolassociation fk_ce2080_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: staffschoolassociation fk_ce2080_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: staffschoolassociation fk_ce2080_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociation
    ADD CONSTRAINT fk_ce2080_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: operationalstatusdescriptor fk_ce3682_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.operationalstatusdescriptor
    ADD CONSTRAINT fk_ce3682_descriptor FOREIGN KEY (operationalstatusdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: curriculumuseddescriptor fk_cec9f6_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.curriculumuseddescriptor
    ADD CONSTRAINT fk_cec9f6_descriptor FOREIGN KEY (curriculumuseddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: networkpurposedescriptor fk_cf38e3_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.networkpurposedescriptor
    ADD CONSTRAINT fk_cf38e3_descriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseoffering fk_courseoffering_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseoffering
    ADD CONSTRAINT fk_courseoffering_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: courseofferingcourselevelcharacteristic fk_courseofferingcourselevelcharacteristic_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcourselevelcharacteristic
    ADD CONSTRAINT fk_courseofferingcourselevelcharacteristic_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingcurriculumused fk_courseofferingcurriculumused_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingcurriculumused
    ADD CONSTRAINT fk_courseofferingcurriculumused_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: courseofferingofferedgradelevel fk_courseofferingofferedgradelevel_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseofferingofferedgradelevel
    ADD CONSTRAINT fk_courseofferingofferedgradelevel_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: surveyquestionresponsevalue fk_d047f5_surveyquestionresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponsevalue
    ADD CONSTRAINT fk_d047f5_surveyquestionresponse FOREIGN KEY (namespace, questioncode, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyquestionresponse(namespace, questioncode, surveyidentifier, surveyresponseidentifier) ON DELETE CASCADE;


--
-- Name: progressdescriptor fk_d0b3fc_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.progressdescriptor
    ADD CONSTRAINT fk_d0b3fc_descriptor FOREIGN KEY (progressdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE;


--
-- Name: studentcohortassociationsection fk_d2362d_studentcohortassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcohortassociationsection
    ADD CONSTRAINT fk_d2362d_studentcohortassociation FOREIGN KEY (begindate, cohortidentifier, educationorganizationid, studentusi) REFERENCES edfi.studentcohortassociation(begindate, cohortidentifier, educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: incidentlocationdescriptor fk_d24f76_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.incidentlocationdescriptor
    ADD CONSTRAINT fk_d24f76_descriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentlearningobjectivestudentsectionassociation fk_d2c8a9_studentlearningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT fk_d2c8a9_studentlearningobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) REFERENCES edfi.studentlearningobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, learningobjectiveid, namespace, studentusi) ON DELETE CASCADE;


--
-- Name: studentlearningobjectivestudentsectionassociation fk_d2c8a9_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentlearningobjectivestudentsectionassociation
    ADD CONSTRAINT fk_d2c8a9_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: institutiontelephonenumbertypedescriptor fk_d35038_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.institutiontelephonenumbertypedescriptor
    ADD CONSTRAINT fk_d35038_descriptor FOREIGN KEY (institutiontelephonenumbertypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventprogram fk_d3d793_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: restrainteventprogram fk_d3d793_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventprogram
    ADD CONSTRAINT fk_d3d793_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationaddressperiod fk_d44be7_educationorganizationaddress; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationaddressperiod
    ADD CONSTRAINT fk_d44be7_educationorganizationaddress FOREIGN KEY (addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername) REFERENCES edfi.educationorganizationaddress(addresstypedescriptorid, city, educationorganizationid, postalcode, stateabbreviationdescriptorid, streetnumbername) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyappropriatesex fk_d53ee9_sexdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyappropriatesex
    ADD CONSTRAINT fk_d53ee9_sexdescriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.sexdescriptor(sexdescriptorid);


--
-- Name: diplomaleveldescriptor fk_d5a798_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomaleveldescriptor
    ADD CONSTRAINT fk_d5a798_descriptor FOREIGN KEY (diplomaleveldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: calendar fk_d5d0a3_calendartypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_calendartypedescriptor FOREIGN KEY (calendartypedescriptorid) REFERENCES edfi.calendartypedescriptor(calendartypedescriptorid);


--
-- Name: calendar fk_d5d0a3_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: calendar fk_d5d0a3_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendar
    ADD CONSTRAINT fk_d5d0a3_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: restrainteventreasondescriptor fk_d6141f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreasondescriptor
    ADD CONSTRAINT fk_d6141f_descriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: educationcontentlanguage fk_d678fa_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentlanguage
    ADD CONSTRAINT fk_d678fa_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: magnetspecialprogramemphasisschooldescriptor fk_d738d4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.magnetspecialprogramemphasisschooldescriptor
    ADD CONSTRAINT fk_d738d4_descriptor FOREIGN KEY (magnetspecialprogramemphasisschooldescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: repeatidentifierdescriptor fk_d881e7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.repeatidentifierdescriptor
    ADD CONSTRAINT fk_d881e7_descriptor FOREIGN KEY (repeatidentifierdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_academicsubjectdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_academicsubjectdescriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.academicsubjectdescriptor(academicsubjectdescriptorid);


--
-- Name: staffschoolassociationacademicsubject fk_d891fb_staffschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffschoolassociationacademicsubject
    ADD CONSTRAINT fk_d891fb_staffschoolassociation FOREIGN KEY (programassignmentdescriptorid, schoolid, staffusi) REFERENCES edfi.staffschoolassociation(programassignmentdescriptorid, schoolid, staffusi) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentlanguage fk_d90abb_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentlanguage
    ADD CONSTRAINT fk_d90abb_languagedescriptor FOREIGN KEY (languagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: interventionstudy fk_d92986_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionstudy fk_d92986_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionstudy fk_d92986_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: interventionstudy fk_d92986_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudy
    ADD CONSTRAINT fk_d92986_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: staffelectronicmail fk_d93663_electronicmailtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_electronicmailtypedescriptor FOREIGN KEY (electronicmailtypedescriptorid) REFERENCES edfi.electronicmailtypedescriptor(electronicmailtypedescriptorid);


--
-- Name: staffelectronicmail fk_d93663_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffelectronicmail
    ADD CONSTRAINT fk_d93663_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: objectiveassessmentassessmentitem fk_d98560_assessmentitem; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_assessmentitem FOREIGN KEY (assessmentidentifier, assessmentitemidentificationcode, namespace) REFERENCES edfi.assessmentitem(assessmentidentifier, identificationcode, namespace);


--
-- Name: objectiveassessmentassessmentitem fk_d98560_objectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectiveassessmentassessmentitem
    ADD CONSTRAINT fk_d98560_objectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace) REFERENCES edfi.objectiveassessment(assessmentidentifier, identificationcode, namespace) ON DELETE CASCADE;


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_migranteducationprogramservicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_migranteducationprogramservicedescriptor FOREIGN KEY (migranteducationprogramservicedescriptorid) REFERENCES edfi.migranteducationprogramservicedescriptor(migranteducationprogramservicedescriptorid);


--
-- Name: studentmigranteducationprogramassociationmigranteducatio_d9dcd7 fk_d9dcd7_studentmigranteducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentmigranteducationprogramassociationmigranteducatio_d9dcd7
    ADD CONSTRAINT fk_d9dcd7_studentmigranteducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentmigranteducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: educationorganizationassociationtypedescriptor fk_d9f485_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationassociationtypedescriptor
    ADD CONSTRAINT fk_d9f485_descriptor FOREIGN KEY (educationorganizationassociationtypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: schoolfoodserviceprogramservicedescriptor fk_da19fa_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schoolfoodserviceprogramservicedescriptor
    ADD CONSTRAINT fk_da19fa_descriptor FOREIGN KEY (schoolfoodserviceprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_course; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_course FOREIGN KEY (coursecode, courseeducationorganizationid) REFERENCES edfi.course(coursecode, educationorganizationid);


--
-- Name: graduationplancreditsbycoursecourse fk_dafcc7_graduationplancreditsbycourse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycoursecourse
    ADD CONSTRAINT fk_dafcc7_graduationplancreditsbycourse FOREIGN KEY (coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplancreditsbycourse(coursesetname, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_graduationplanrequiredassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_graduationplanrequiredassessment FOREIGN KEY (assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) REFERENCES edfi.graduationplanrequiredassessment(assessmentidentifier, educationorganizationid, graduationplantypedescriptorid, graduationschoolyear, namespace) ON DELETE CASCADE;


--
-- Name: graduationplanrequiredassessmentscore fk_db9e7c_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplanrequiredassessmentscore
    ADD CONSTRAINT fk_db9e7c_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: assessmentreportingmethoddescriptor fk_dbee26_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentreportingmethoddescriptor
    ADD CONSTRAINT fk_dbee26_descriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: assessmentitem fk_dc3dcf_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: assessmentitem fk_dc3dcf_assessmentitemcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentitem
    ADD CONSTRAINT fk_dc3dcf_assessmentitemcategorydescriptor FOREIGN KEY (assessmentitemcategorydescriptorid) REFERENCES edfi.assessmentitemcategorydescriptor(assessmentitemcategorydescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationindicator fk_dde098_indicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatordescriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.indicatordescriptor(indicatordescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorgroupdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorgroupdescriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.indicatorgroupdescriptor(indicatorgroupdescriptorid);


--
-- Name: educationorganizationindicator fk_dde098_indicatorleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationindicator
    ADD CONSTRAINT fk_dde098_indicatorleveldescriptor FOREIGN KEY (indicatorleveldescriptorid) REFERENCES edfi.indicatorleveldescriptor(indicatorleveldescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_creditcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_creditcategorydescriptor FOREIGN KEY (creditcategorydescriptorid) REFERENCES edfi.creditcategorydescriptor(creditcategorydescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_credittypedescriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: graduationplancreditsbycreditcategory fk_ddfc9b_graduationplan; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.graduationplancreditsbycreditcategory
    ADD CONSTRAINT fk_ddfc9b_graduationplan FOREIGN KEY (educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) REFERENCES edfi.graduationplan(educationorganizationid, graduationplantypedescriptorid, graduationschoolyear) ON DELETE CASCADE;


--
-- Name: studentassessmentaccommodation fk_de959d_accommodationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_accommodationdescriptor FOREIGN KEY (accommodationdescriptorid) REFERENCES edfi.accommodationdescriptor(accommodationdescriptorid);


--
-- Name: studentassessmentaccommodation fk_de959d_studentassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentaccommodation
    ADD CONSTRAINT fk_de959d_studentassessment FOREIGN KEY (assessmentidentifier, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessment(assessmentidentifier, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: staffleave fk_debd4f_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: staffleave fk_debd4f_staffleaveeventcategorydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffleave
    ADD CONSTRAINT fk_debd4f_staffleaveeventcategorydescriptor FOREIGN KEY (staffleaveeventcategorydescriptorid) REFERENCES edfi.staffleaveeventcategorydescriptor(staffleaveeventcategorydescriptorid);


--
-- Name: assessmentscore fk_df7331_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentscore fk_df7331_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: assessmentscore fk_df7331_resultdatatypetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentscore
    ADD CONSTRAINT fk_df7331_resultdatatypetypedescriptor FOREIGN KEY (resultdatatypetypedescriptorid) REFERENCES edfi.resultdatatypetypedescriptor(resultdatatypetypedescriptorid);


--
-- Name: section fk_dfca5d_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_credittypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_credittypedescriptor FOREIGN KEY (availablecredittypedescriptorid) REFERENCES edfi.credittypedescriptor(credittypedescriptorid);


--
-- Name: section fk_dfca5d_educationalenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_educationalenvironmentdescriptor FOREIGN KEY (educationalenvironmentdescriptorid) REFERENCES edfi.educationalenvironmentdescriptor(educationalenvironmentdescriptorid);


--
-- Name: section fk_dfca5d_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_languagedescriptor FOREIGN KEY (instructionlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: section fk_dfca5d_location; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_location FOREIGN KEY (locationclassroomidentificationcode, locationschoolid) REFERENCES edfi.location(classroomidentificationcode, schoolid) ON UPDATE CASCADE;


--
-- Name: section fk_dfca5d_mediumofinstructiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_mediumofinstructiondescriptor FOREIGN KEY (mediumofinstructiondescriptorid) REFERENCES edfi.mediumofinstructiondescriptor(mediumofinstructiondescriptorid);


--
-- Name: section fk_dfca5d_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: section fk_dfca5d_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_dfca5d_school FOREIGN KEY (locationschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: additionalcredittypedescriptor fk_e069dd_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.additionalcredittypedescriptor
    ADD CONSTRAINT fk_e069dd_descriptor FOREIGN KEY (additionalcredittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: indicatorgroupdescriptor fk_e0f6fe_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatorgroupdescriptor
    ADD CONSTRAINT fk_e0f6fe_descriptor FOREIGN KEY (indicatorgroupdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: interventionprescriptionlearningresourcemetadatauri fk_e12298_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescriptionlearningresourcemetadatauri
    ADD CONSTRAINT fk_e12298_interventionprescription FOREIGN KEY (educationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode) ON DELETE CASCADE;


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: openstaffpositioninstructionalgradelevel fk_e19c72_openstaffposition; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.openstaffpositioninstructionalgradelevel
    ADD CONSTRAINT fk_e19c72_openstaffposition FOREIGN KEY (educationorganizationid, requisitionnumber) REFERENCES edfi.openstaffposition(educationorganizationid, requisitionnumber) ON DELETE CASCADE;


--
-- Name: disciplineactionlengthdifferencereasondescriptor fk_e1a229_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionlengthdifferencereasondescriptor
    ADD CONSTRAINT fk_e1a229_descriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restraintevent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restraintevent FOREIGN KEY (restrainteventidentifier, schoolid, studentusi) REFERENCES edfi.restraintevent(restrainteventidentifier, schoolid, studentusi) ON DELETE CASCADE;


--
-- Name: restrainteventreason fk_e232ae_restrainteventreasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.restrainteventreason
    ADD CONSTRAINT fk_e232ae_restrainteventreasondescriptor FOREIGN KEY (restrainteventreasondescriptorid) REFERENCES edfi.restrainteventreasondescriptor(restrainteventreasondescriptorid);


--
-- Name: staffvisa fk_e27213_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: staffvisa fk_e27213_visadescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffvisa
    ADD CONSTRAINT fk_e27213_visadescriptor FOREIGN KEY (visadescriptorid) REFERENCES edfi.visadescriptor(visadescriptorid);


--
-- Name: credittypedescriptor fk_e31da0_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credittypedescriptor
    ADD CONSTRAINT fk_e31da0_descriptor FOREIGN KEY (credittypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: personalinformationverificationdescriptor fk_e35818_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.personalinformationverificationdescriptor
    ADD CONSTRAINT fk_e35818_descriptor FOREIGN KEY (personalinformationverificationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: levelofeducationdescriptor fk_e37e5f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.levelofeducationdescriptor
    ADD CONSTRAINT fk_e37e5f_descriptor FOREIGN KEY (levelofeducationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: languageinstructionprogramservicedescriptor fk_e3a7b7_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.languageinstructionprogramservicedescriptor
    ADD CONSTRAINT fk_e3a7b7_descriptor FOREIGN KEY (languageinstructionprogramservicedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveyprogramassociation fk_e3e5a4_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid);


--
-- Name: surveyprogramassociation fk_e3e5a4_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyprogramassociation
    ADD CONSTRAINT fk_e3e5a4_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: disciplineincident fk_e45c0b_incidentlocationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_incidentlocationdescriptor FOREIGN KEY (incidentlocationdescriptorid) REFERENCES edfi.incidentlocationdescriptor(incidentlocationdescriptorid);


--
-- Name: disciplineincident fk_e45c0b_reporterdescriptiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_reporterdescriptiondescriptor FOREIGN KEY (reporterdescriptiondescriptorid) REFERENCES edfi.reporterdescriptiondescriptor(reporterdescriptiondescriptorid);


--
-- Name: disciplineincident fk_e45c0b_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_school FOREIGN KEY (schoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineincident fk_e45c0b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineincident
    ADD CONSTRAINT fk_e45c0b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: academicsubjectdescriptor fk_e4b042_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.academicsubjectdescriptor
    ADD CONSTRAINT fk_e4b042_descriptor FOREIGN KEY (academicsubjectdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: courseidentificationsystemdescriptor fk_e4ce6a_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.courseidentificationsystemdescriptor
    ADD CONSTRAINT fk_e4ce6a_descriptor FOREIGN KEY (courseidentificationsystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: surveysection fk_e5572a_survey; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveysection
    ADD CONSTRAINT fk_e5572a_survey FOREIGN KEY (namespace, surveyidentifier) REFERENCES edfi.survey(namespace, surveyidentifier);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: educationorganizationinterventionprescriptionassociation fk_e670ae_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationinterventionprescriptionassociation
    ADD CONSTRAINT fk_e670ae_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: stafftribalaffiliation fk_e77b10_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: stafftribalaffiliation fk_e77b10_tribalaffiliationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.stafftribalaffiliation
    ADD CONSTRAINT fk_e77b10_tribalaffiliationdescriptor FOREIGN KEY (tribalaffiliationdescriptorid) REFERENCES edfi.tribalaffiliationdescriptor(tribalaffiliationdescriptorid);


--
-- Name: interventioninterventionprescription fk_e79fe2_intervention; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_intervention FOREIGN KEY (educationorganizationid, interventionidentificationcode) REFERENCES edfi.intervention(educationorganizationid, interventionidentificationcode) ON DELETE CASCADE;


--
-- Name: interventioninterventionprescription fk_e79fe2_interventionprescription; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventioninterventionprescription
    ADD CONSTRAINT fk_e79fe2_interventionprescription FOREIGN KEY (interventionprescriptioneducationorganizationid, interventionprescriptionidentificationcode) REFERENCES edfi.interventionprescription(educationorganizationid, interventionprescriptionidentificationcode);


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_coursetranscript; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_coursetranscript FOREIGN KEY (courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) REFERENCES edfi.coursetranscript(courseattemptresultdescriptorid, coursecode, courseeducationorganizationid, educationorganizationid, schoolyear, studentusi, termdescriptorid) ON DELETE CASCADE;


--
-- Name: coursetranscriptpartialcoursetranscriptawards fk_e811ad_methodcreditearneddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.coursetranscriptpartialcoursetranscriptawards
    ADD CONSTRAINT fk_e811ad_methodcreditearneddescriptor FOREIGN KEY (methodcreditearneddescriptorid) REFERENCES edfi.methodcreditearneddescriptor(methodcreditearneddescriptorid);


--
-- Name: assessmentassessedgradelevel fk_e83625_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace) ON DELETE CASCADE;


--
-- Name: assessmentassessedgradelevel fk_e83625_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.assessmentassessedgradelevel
    ADD CONSTRAINT fk_e83625_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: educationorganizationnetwork fk_e88dea_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_educationorganization FOREIGN KEY (educationorganizationnetworkid) REFERENCES edfi.educationorganization(educationorganizationid) ON DELETE CASCADE;


--
-- Name: educationorganizationnetwork fk_e88dea_networkpurposedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationorganizationnetwork
    ADD CONSTRAINT fk_e88dea_networkpurposedescriptor FOREIGN KEY (networkpurposedescriptorid) REFERENCES edfi.networkpurposedescriptor(networkpurposedescriptorid);


--
-- Name: interventionprescription fk_e93bc3_deliverymethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_deliverymethoddescriptor FOREIGN KEY (deliverymethoddescriptorid) REFERENCES edfi.deliverymethoddescriptor(deliverymethoddescriptorid);


--
-- Name: interventionprescription fk_e93bc3_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: interventionprescription fk_e93bc3_interventionclassdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionprescription
    ADD CONSTRAINT fk_e93bc3_interventionclassdescriptor FOREIGN KEY (interventionclassdescriptorid) REFERENCES edfi.interventionclassdescriptor(interventionclassdescriptorid);


--
-- Name: programservice fk_e943d3_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT fk_e943d3_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: programservice fk_e943d3_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programservice
    ADD CONSTRAINT fk_e943d3_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: participationdescriptor fk_e94f88_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.participationdescriptor
    ADD CONSTRAINT fk_e94f88_descriptor FOREIGN KEY (participationdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: diplomatypedescriptor fk_e9ffa4_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.diplomatypedescriptor
    ADD CONSTRAINT fk_e9ffa4_descriptor FOREIGN KEY (diplomatypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: localencumbrance fk_ea526f_financialcollectiondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT fk_ea526f_financialcollectiondescriptor FOREIGN KEY (financialcollectiondescriptorid) REFERENCES edfi.financialcollectiondescriptor(financialcollectiondescriptorid);


--
-- Name: localencumbrance fk_ea526f_localaccount; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.localencumbrance
    ADD CONSTRAINT fk_ea526f_localaccount FOREIGN KEY (accountidentifier, educationorganizationid, fiscalyear) REFERENCES edfi.localaccount(accountidentifier, educationorganizationid, fiscalyear);


--
-- Name: studentcteprogramassociationservice fk_eb5c90_servicedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT fk_eb5c90_servicedescriptor FOREIGN KEY (servicedescriptorid) REFERENCES edfi.servicedescriptor(servicedescriptorid);


--
-- Name: studentcteprogramassociationservice fk_eb5c90_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationservice
    ADD CONSTRAINT fk_eb5c90_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: sexdescriptor fk_eb9b06_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sexdescriptor
    ADD CONSTRAINT fk_eb9b06_descriptor FOREIGN KEY (sexdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: absenceeventcategorydescriptor fk_ec167f_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.absenceeventcategorydescriptor
    ADD CONSTRAINT fk_ec167f_descriptor FOREIGN KEY (absenceeventcategorydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: reportcard fk_ec1992_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_educationorganization FOREIGN KEY (educationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: reportcard fk_ec1992_gradingperiod; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_gradingperiod FOREIGN KEY (gradingperioddescriptorid, gradingperiodsequence, gradingperiodschoolid, gradingperiodschoolyear) REFERENCES edfi.gradingperiod(gradingperioddescriptorid, periodsequence, schoolid, schoolyear);


--
-- Name: reportcard fk_ec1992_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcard
    ADD CONSTRAINT fk_ec1992_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: surveyquestionresponse fk_eddd02_surveyquestion; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyquestion FOREIGN KEY (namespace, questioncode, surveyidentifier) REFERENCES edfi.surveyquestion(namespace, questioncode, surveyidentifier);


--
-- Name: surveyquestionresponse fk_eddd02_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyquestionresponse
    ADD CONSTRAINT fk_eddd02_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: indicatordescriptor fk_ee0bbf_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.indicatordescriptor
    ADD CONSTRAINT fk_ee0bbf_descriptor FOREIGN KEY (indicatordescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentassessment fk_ee3b2a_administrationenvironmentdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_administrationenvironmentdescriptor FOREIGN KEY (administrationenvironmentdescriptorid) REFERENCES edfi.administrationenvironmentdescriptor(administrationenvironmentdescriptorid);


--
-- Name: studentassessment fk_ee3b2a_assessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_assessment FOREIGN KEY (assessmentidentifier, namespace) REFERENCES edfi.assessment(assessmentidentifier, namespace);


--
-- Name: studentassessment fk_ee3b2a_eventcircumstancedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_eventcircumstancedescriptor FOREIGN KEY (eventcircumstancedescriptorid) REFERENCES edfi.eventcircumstancedescriptor(eventcircumstancedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_gradeleveldescriptor FOREIGN KEY (whenassessedgradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: studentassessment fk_ee3b2a_languagedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_languagedescriptor FOREIGN KEY (administrationlanguagedescriptorid) REFERENCES edfi.languagedescriptor(languagedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_platformtypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_platformtypedescriptor FOREIGN KEY (platformtypedescriptorid) REFERENCES edfi.platformtypedescriptor(platformtypedescriptorid);


--
-- Name: studentassessment fk_ee3b2a_reasonnottesteddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_reasonnottesteddescriptor FOREIGN KEY (reasonnottesteddescriptorid) REFERENCES edfi.reasonnottesteddescriptor(reasonnottesteddescriptorid);


--
-- Name: studentassessment fk_ee3b2a_retestindicatordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_retestindicatordescriptor FOREIGN KEY (retestindicatordescriptorid) REFERENCES edfi.retestindicatordescriptor(retestindicatordescriptorid);


--
-- Name: studentassessment fk_ee3b2a_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_school FOREIGN KEY (reportedschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: studentassessment fk_ee3b2a_schoolyeartype; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_schoolyeartype FOREIGN KEY (schoolyear) REFERENCES edfi.schoolyeartype(schoolyear);


--
-- Name: studentassessment fk_ee3b2a_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessment
    ADD CONSTRAINT fk_ee3b2a_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: studentcteprogramassociationcteprogram fk_ee50f2_careerpathwaydescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT fk_ee50f2_careerpathwaydescriptor FOREIGN KEY (careerpathwaydescriptorid) REFERENCES edfi.careerpathwaydescriptor(careerpathwaydescriptorid);


--
-- Name: studentcteprogramassociationcteprogram fk_ee50f2_studentcteprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcteprogramassociationcteprogram
    ADD CONSTRAINT fk_ee50f2_studentcteprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentcteprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentcompetencyobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentcompetencyobjective FOREIGN KEY (gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) REFERENCES edfi.studentcompetencyobjective(gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, objective, objectiveeducationorganizationid, objectivegradeleveldescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentcompetencyobjectivestudentsectionassociation fk_ee68ed_studentsectionassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentcompetencyobjectivestudentsectionassociation
    ADD CONSTRAINT fk_ee68ed_studentsectionassociation FOREIGN KEY (begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.studentsectionassociation(begindate, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: disciplineaction fk_eec7b6_disciplineactionlengthdifferencereasondescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_disciplineactionlengthdifferencereasondescriptor FOREIGN KEY (disciplineactionlengthdifferencereasondescriptorid) REFERENCES edfi.disciplineactionlengthdifferencereasondescriptor(disciplineactionlengthdifferencereasondescriptorid);


--
-- Name: disciplineaction fk_eec7b6_school; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school FOREIGN KEY (responsibilityschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_school1; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_school1 FOREIGN KEY (assignmentschoolid) REFERENCES edfi.school(schoolid);


--
-- Name: disciplineaction fk_eec7b6_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineaction
    ADD CONSTRAINT fk_eec7b6_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: schooltypedescriptor fk_ef0964_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.schooltypedescriptor
    ADD CONSTRAINT fk_ef0964_descriptor FOREIGN KEY (schooltypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentassociation fk_ef0ece_disciplineaction; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT fk_ef0ece_disciplineaction FOREIGN KEY (disciplineactionidentifier, disciplinedate, studentusi) REFERENCES edfi.disciplineaction(disciplineactionidentifier, disciplinedate, studentusi) ON DELETE CASCADE;


--
-- Name: disciplineactionstudentdisciplineincidentassociation fk_ef0ece_studentdisciplineincidentassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disciplineactionstudentdisciplineincidentassociation
    ADD CONSTRAINT fk_ef0ece_studentdisciplineincidentassociation FOREIGN KEY (incidentidentifier, schoolid, studentusi) REFERENCES edfi.studentdisciplineincidentassociation(incidentidentifier, schoolid, studentusi);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_diagnosisdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_diagnosisdescriptor FOREIGN KEY (diagnosisdescriptorid) REFERENCES edfi.diagnosisdescriptor(diagnosisdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventioneffectivenessratingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventioneffectivenessratingdescriptor FOREIGN KEY (interventioneffectivenessratingdescriptorid) REFERENCES edfi.interventioneffectivenessratingdescriptor(interventioneffectivenessratingdescriptorid);


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_interventionstudy; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_interventionstudy FOREIGN KEY (educationorganizationid, interventionstudyidentificationcode) REFERENCES edfi.interventionstudy(educationorganizationid, interventionstudyidentificationcode) ON DELETE CASCADE;


--
-- Name: interventionstudyinterventioneffectiveness fk_ef90b6_populationserveddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.interventionstudyinterventioneffectiveness
    ADD CONSTRAINT fk_ef90b6_populationserveddescriptor FOREIGN KEY (populationserveddescriptorid) REFERENCES edfi.populationserveddescriptor(populationserveddescriptorid);


--
-- Name: othernametypedescriptor fk_f020d2_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.othernametypedescriptor
    ADD CONSTRAINT fk_f020d2_descriptor FOREIGN KEY (othernametypedescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid) ON DELETE CASCADE;


--
-- Name: credentialgradelevel fk_f05a16_gradeleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.credentialgradelevel
    ADD CONSTRAINT fk_f05a16_gradeleveldescriptor FOREIGN KEY (gradeleveldescriptorid) REFERENCES edfi.gradeleveldescriptor(gradeleveldescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_communityprovider; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_communityprovider FOREIGN KEY (communityproviderid) REFERENCES edfi.communityprovider(communityproviderid);


--
-- Name: communityproviderlicense fk_f092ff_licensestatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensestatusdescriptor FOREIGN KEY (licensestatusdescriptorid) REFERENCES edfi.licensestatusdescriptor(licensestatusdescriptorid);


--
-- Name: communityproviderlicense fk_f092ff_licensetypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.communityproviderlicense
    ADD CONSTRAINT fk_f092ff_licensetypedescriptor FOREIGN KEY (licensetypedescriptorid) REFERENCES edfi.licensetypedescriptor(licensetypedescriptorid);


--
-- Name: reportcardgrade fk_f203d3_grade; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_grade FOREIGN KEY (begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) REFERENCES edfi.grade(begindate, gradetypedescriptorid, gradingperioddescriptorid, gradingperiodschoolyear, gradingperiodsequence, localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname, studentusi) ON UPDATE CASCADE;


--
-- Name: reportcardgrade fk_f203d3_reportcard; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.reportcardgrade
    ADD CONSTRAINT fk_f203d3_reportcard FOREIGN KEY (educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) REFERENCES edfi.reportcard(educationorganizationid, gradingperioddescriptorid, gradingperiodschoolid, gradingperiodschoolyear, gradingperiodsequence, studentusi) ON DELETE CASCADE;


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_courselevelcharacteristicdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_courselevelcharacteristicdescriptor FOREIGN KEY (courselevelcharacteristicdescriptorid) REFERENCES edfi.courselevelcharacteristicdescriptor(courselevelcharacteristicdescriptorid);


--
-- Name: sectioncourselevelcharacteristic fk_f221cc_section; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sectioncourselevelcharacteristic
    ADD CONSTRAINT fk_f221cc_section FOREIGN KEY (localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) REFERENCES edfi.section(localcoursecode, schoolid, schoolyear, sectionidentifier, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_assessmentreportingmethoddescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_assessmentreportingmethoddescriptor FOREIGN KEY (assessmentreportingmethoddescriptorid) REFERENCES edfi.assessmentreportingmethoddescriptor(assessmentreportingmethoddescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_performanceleveldescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_performanceleveldescriptor FOREIGN KEY (performanceleveldescriptorid) REFERENCES edfi.performanceleveldescriptor(performanceleveldescriptorid);


--
-- Name: studentassessmentstudentobjectiveassessmentperformancelevel fk_f32347_studentassessmentstudentobjectiveassessment; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentassessmentstudentobjectiveassessmentperformancelevel
    ADD CONSTRAINT fk_f32347_studentassessmentstudentobjectiveassessment FOREIGN KEY (assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) REFERENCES edfi.studentassessmentstudentobjectiveassessment(assessmentidentifier, identificationcode, namespace, studentassessmentidentifier, studentusi) ON DELETE CASCADE;


--
-- Name: termdescriptor fk_f36b04_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.termdescriptor
    ADD CONSTRAINT fk_f36b04_descriptor FOREIGN KEY (termdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: staffcredential fk_f3917b_credential; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_credential FOREIGN KEY (credentialidentifier, stateofissuestateabbreviationdescriptorid) REFERENCES edfi.credential(credentialidentifier, stateofissuestateabbreviationdescriptorid);


--
-- Name: staffcredential fk_f3917b_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.staffcredential
    ADD CONSTRAINT fk_f3917b_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi) ON DELETE CASCADE;


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_behaviordescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_behaviordescriptor FOREIGN KEY (behaviordescriptorid) REFERENCES edfi.behaviordescriptor(behaviordescriptorid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_disciplineincident; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_disciplineincident FOREIGN KEY (incidentidentifier, schoolid) REFERENCES edfi.disciplineincident(incidentidentifier, schoolid);


--
-- Name: studentdisciplineincidentbehaviorassociation fk_f4934f_student; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentdisciplineincidentbehaviorassociation
    ADD CONSTRAINT fk_f4934f_student FOREIGN KEY (studentusi) REFERENCES edfi.student(studentusi);


--
-- Name: programlearningobjective fk_f5911f_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT fk_f5911f_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace);


--
-- Name: programlearningobjective fk_f5911f_program; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.programlearningobjective
    ADD CONSTRAINT fk_f5911f_program FOREIGN KEY (educationorganizationid, programname, programtypedescriptorid) REFERENCES edfi.program(educationorganizationid, programname, programtypedescriptorid) ON DELETE CASCADE;


--
-- Name: calendareventdescriptor fk_f598e5_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.calendareventdescriptor
    ADD CONSTRAINT fk_f598e5_descriptor FOREIGN KEY (calendareventdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_educationplandescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_educationplandescriptor FOREIGN KEY (educationplandescriptorid) REFERENCES edfi.educationplandescriptor(educationplandescriptorid);


--
-- Name: studentschoolassociationeducationplan fk_f5b9f6_studentschoolassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolassociationeducationplan
    ADD CONSTRAINT fk_f5b9f6_studentschoolassociation FOREIGN KEY (entrydate, schoolid, studentusi) REFERENCES edfi.studentschoolassociation(entrydate, schoolid, studentusi) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: educationcontentauthor fk_f605af_educationcontent; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.educationcontentauthor
    ADD CONSTRAINT fk_f605af_educationcontent FOREIGN KEY (contentidentifier) REFERENCES edfi.educationcontent(contentidentifier) ON DELETE CASCADE;


--
-- Name: parentlanguageuse fk_f67c61_languageusedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT fk_f67c61_languageusedescriptor FOREIGN KEY (languageusedescriptorid) REFERENCES edfi.languageusedescriptor(languageusedescriptorid);


--
-- Name: parentlanguageuse fk_f67c61_parentlanguage; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.parentlanguageuse
    ADD CONSTRAINT fk_f67c61_parentlanguage FOREIGN KEY (languagedescriptorid, parentusi) REFERENCES edfi.parentlanguage(languagedescriptorid, parentusi) ON DELETE CASCADE;


--
-- Name: sourcesystemdescriptor fk_f71783_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sourcesystemdescriptor
    ADD CONSTRAINT fk_f71783_descriptor FOREIGN KEY (sourcesystemdescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: disabilitydescriptor fk_f7280b_descriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.disabilitydescriptor
    ADD CONSTRAINT fk_f7280b_descriptor FOREIGN KEY (disabilitydescriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_generalstudentprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_generalstudentprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.generalstudentprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: studentspecialeducationprogramassociation fk_f86fd9_specialeducationsettingdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociation
    ADD CONSTRAINT fk_f86fd9_specialeducationsettingdescriptor FOREIGN KEY (specialeducationsettingdescriptorid) REFERENCES edfi.specialeducationsettingdescriptor(specialeducationsettingdescriptorid);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: surveyresponsestafftargetassociation fk_f9457e_surveyresponse; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.surveyresponsestafftargetassociation
    ADD CONSTRAINT fk_f9457e_surveyresponse FOREIGN KEY (namespace, surveyidentifier, surveyresponseidentifier) REFERENCES edfi.surveyresponse(namespace, surveyidentifier, surveyresponseidentifier);


--
-- Name: learningobjectivecontentstandard fk_f99184_educationorganization; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_educationorganization FOREIGN KEY (mandatingeducationorganizationid) REFERENCES edfi.educationorganization(educationorganizationid);


--
-- Name: learningobjectivecontentstandard fk_f99184_learningobjective; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_learningobjective FOREIGN KEY (learningobjectiveid, namespace) REFERENCES edfi.learningobjective(learningobjectiveid, namespace) ON DELETE CASCADE;


--
-- Name: learningobjectivecontentstandard fk_f99184_publicationstatusdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.learningobjectivecontentstandard
    ADD CONSTRAINT fk_f99184_publicationstatusdescriptor FOREIGN KEY (publicationstatusdescriptorid) REFERENCES edfi.publicationstatusdescriptor(publicationstatusdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_addresstypedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_addresstypedescriptor FOREIGN KEY (addresstypedescriptorid) REFERENCES edfi.addresstypedescriptor(addresstypedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_localedescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_localedescriptor FOREIGN KEY (localedescriptorid) REFERENCES edfi.localedescriptor(localedescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_stateabbreviationdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_stateabbreviationdescriptor FOREIGN KEY (stateabbreviationdescriptorid) REFERENCES edfi.stateabbreviationdescriptor(stateabbreviationdescriptorid);


--
-- Name: studenteducationorganizationassociationaddress fk_f9e163_studenteducationorganizationassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studenteducationorganizationassociationaddress
    ADD CONSTRAINT fk_f9e163_studenteducationorganizationassociation FOREIGN KEY (educationorganizationid, studentusi) REFERENCES edfi.studenteducationorganizationassociation(educationorganizationid, studentusi) ON DELETE CASCADE;


--
-- Name: objectdimensionreportingtag fk_fda3b7_objectdimension; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT fk_fda3b7_objectdimension FOREIGN KEY (code, fiscalyear) REFERENCES edfi.objectdimension(code, fiscalyear) ON DELETE CASCADE;


--
-- Name: objectdimensionreportingtag fk_fda3b7_reportingtagdescriptor; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.objectdimensionreportingtag
    ADD CONSTRAINT fk_fda3b7_reportingtagdescriptor FOREIGN KEY (reportingtagdescriptorid) REFERENCES edfi.reportingtagdescriptor(reportingtagdescriptorid);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_staff; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_staff FOREIGN KEY (staffusi) REFERENCES edfi.staff(staffusi);


--
-- Name: studentspecialeducationprogramassociationserviceprovider fk_fece89_studentspecialeducationprogramassociation; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentspecialeducationprogramassociationserviceprovider
    ADD CONSTRAINT fk_fece89_studentspecialeducationprogramassociation FOREIGN KEY (begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) REFERENCES edfi.studentspecialeducationprogramassociation(begindate, educationorganizationid, programeducationorganizationid, programname, programtypedescriptorid, studentusi) ON DELETE CASCADE;


--
-- Name: section fk_section_courseoffering; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.section
    ADD CONSTRAINT fk_section_courseoffering FOREIGN KEY (localcoursecode, schoolid, schoolyear, sessionname) REFERENCES edfi.courseoffering(localcoursecode, schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: sessionacademicweek fk_sessionacademicweek_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessionacademicweek
    ADD CONSTRAINT fk_sessionacademicweek_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: sessiongradingperiod fk_sessiongradingperiod_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.sessiongradingperiod
    ADD CONSTRAINT fk_sessiongradingperiod_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: studentschoolattendanceevent fk_studentschoolattendanceevent_session; Type: FK CONSTRAINT; Schema: edfi; Owner: postgres
--

ALTER TABLE ONLY edfi.studentschoolattendanceevent
    ADD CONSTRAINT fk_studentschoolattendanceevent_session FOREIGN KEY (schoolid, schoolyear, sessionname) REFERENCES edfi.session(schoolid, schoolyear, sessionname) ON UPDATE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: descriptorequivalencegroupassignment fk_descequivgroupassign_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupassignment
    ADD CONSTRAINT fk_descequivgroupassign_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroup; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroup FOREIGN KEY (descriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: descriptorequivalencegroupgeneralization fk_descequivgroupgeneral_descriptorequivalencegroupgeneral; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.descriptorequivalencegroupgeneralization
    ADD CONSTRAINT fk_descequivgroupgeneral_descriptorequivalencegroupgeneral FOREIGN KEY (generalizationdescriptorequivalencegroupid) REFERENCES interop.descriptorequivalencegroup(descriptorequivalencegroupid);


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_descriptor; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_descriptor FOREIGN KEY (descriptorid) REFERENCES edfi.descriptor(descriptorid) ON DELETE CASCADE;


--
-- Name: operationalcontextdescriptorusage fk_operationalcontextdescriptorusage_operationalcontext; Type: FK CONSTRAINT; Schema: interop; Owner: postgres
--

ALTER TABLE ONLY interop.operationalcontextdescriptorusage
    ADD CONSTRAINT fk_operationalcontextdescriptorusage_operationalcontext FOREIGN KEY (operationalcontexturi) REFERENCES interop.operationalcontext(operationalcontexturi);


--
-- PostgreSQL database dump complete
--

